using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using DG.Tweening;
using DigitalOpus.MB.Core;
using ERMG;
using Il2CppDummyDll;
using MEC;
using TMPro;
using Unity.Labs.SuperScience;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRTK;
using VRTK.GrabAttachMechanics;
using VRTK.Highlighters;
using VRTK.SecondaryControllerGrabActions;
using VRTK.UnityEventHelper;
using Valve.VR;
using ns3dRudder;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xAE1548", Offset = "0xAE1548")]
public class Controller3dRudder : MonoBehaviour
{
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE57E4", Offset = "0xAE57E4")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Controller3dRudder <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xE7E258", Offset = "0xE7E258", VA = "0xE7E258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xE7E2C0", Offset = "0xE7E2C0", VA = "0xE7E2C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xE7DDE4", Offset = "0xE7DDE4", VA = "0xE7DDE4")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xE7E120", Offset = "0xE7E120", VA = "0xE7E120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xE7E124", Offset = "0xE7E124", VA = "0xE7E124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xE7E260", Offset = "0xE7E260", VA = "0xE7E260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint PortNumber;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool CanForward;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SpeedForwardBackward;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool CanStrafe;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SpeedLeftRight;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool CanUpDown;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SpeedUpDown;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool CanRotate;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float SpeedRotation;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IAxesParam axesParam;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SmoothMovement SmoothForwardBackward;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SmoothMovement SmoothLeftRight;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SmoothMovement SmoothUpDown;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SmoothMovement SmoothRotation;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected ILocomotion locomotion;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected AxesValue axes;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector4 axesWithSpeed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xE7DD0C", Offset = "0xE7DD0C", VA = "0xE7DD0C")]
	public AxesValue GetAxesValue()
	{
		return null;
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xE7DD14", Offset = "0xE7DD14", VA = "0xE7DD14")]
	public Vector4 GetAxesWithSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xE7DD20", Offset = "0xE7DD20", VA = "0xE7DD20")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xE7DD74", Offset = "0xE7DD74", VA = "0xE7DD74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9068", Offset = "0xAF9068")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xE7DE10", Offset = "0xE7DE10", VA = "0xE7DE10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xE7DE14", Offset = "0xE7DE14", VA = "0xE7DE14")]
	private void GetAxes()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xE7E084", Offset = "0xE7E084", VA = "0xE7E084")]
	public Controller3dRudder()
	{
	}
}
[Token(Token = "0x2000003")]
public class Manager3dRudder : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Manager3dRudder instance;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsInitialized;

	[Token(Token = "0x17000001")]
	public static Manager3dRudder Instance
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0xE522B8", Offset = "0xE522B8", VA = "0xE522B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xE52470", Offset = "0xE52470", VA = "0xE52470")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xE524E0", Offset = "0xE524E0", VA = "0xE524E0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xE52540", Offset = "0xE52540", VA = "0xE52540")]
	public Manager3dRudder()
	{
	}
}
[Token(Token = "0x2000004")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xFAC59C", Offset = "0xFAC59C", VA = "0xFAC59C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xFAC5C0", Offset = "0xFAC5C0", VA = "0xFAC5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xFAD2D0", Offset = "0xFAD2D0", VA = "0xFAD2D0")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000005")]
public class ForestMaker : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_treePrefab;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_amount;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ground;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radiusDistance;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xFB1FD4", Offset = "0xFB1FD4", VA = "0xFB1FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xFB2374", Offset = "0xFB2374", VA = "0xFB2374")]
	public ForestMaker()
	{
	}
}
[Token(Token = "0x2000006")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _cam;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF3FDCC", Offset = "0xF3FDCC", VA = "0xF3FDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF3FE98", Offset = "0xF3FE98", VA = "0xF3FE98")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF3FF78", Offset = "0xF3FF78", VA = "0xF3FF78")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE3B82C", Offset = "0xE3B82C", VA = "0xE3B82C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xE3B8D0", Offset = "0xE3B8D0", VA = "0xE3B8D0")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000008")]
public class Beautify : MonoBehaviour
{
	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE08AB4", Offset = "0xE08AB4", VA = "0xE08AB4")]
	public Beautify()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE15A0", Offset = "0xAE15A0")]
public class ERHelper : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ERMeshGen meshGen;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xDD8274", Offset = "0xDD8274", VA = "0xDD8274")]
	public void Init()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xDD83E8", Offset = "0xDD83E8", VA = "0xDD83E8")]
	public void AutoFix()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xDD8418", Offset = "0xDD8418", VA = "0xDD8418")]
	public void FindNavPoints()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xDD8430", Offset = "0xDD8430", VA = "0xDD8430")]
	public void FindBorders()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xDD88D0", Offset = "0xDD88D0", VA = "0xDD88D0")]
	public ERHelper()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE15D8", Offset = "0xAE15D8")]
public class ERMeshGen : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string NAV_POINT_NAMES;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string RIGHT_BORDER_NAME;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string LEFT_BORDER_NAME;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int updateSkip;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ERMeshGen lastSelectedMeshGen;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] navPoints;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float deltaWidth;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int subdivision;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float uvScale;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] navPointsBeta_p;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] newVertices;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2[] newUV;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] newTriangles;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] quadMatrix;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int triCount;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int uvSetCount;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int updateLoopCount;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float groundOffset;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int lastParentPointsUpd;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public int enableHelp;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int curveControlState;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public int updatePointsMode;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public int parentPoints;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public int includeCollider;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public int uvSet;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int borderUvSet;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public int enableMeshBorders;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public AnimationCurve borderCurve;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public GameObject leftBorderMeshObj;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public GameObject rightBorderMeshObj;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2[] lBorderNavPoints;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2[] rBorderNavPoints;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3[] leftBorderVertices;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2[] leftUV;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] leftTriangles;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] rightBorderVertices;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector2[] rightUV;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] rightTriangles;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int borderCount;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int xRelative;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xDD88D8", Offset = "0xDD88D8", VA = "0xDD88D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xDDB084", Offset = "0xDDB084", VA = "0xDDB084")]
	public void GenerateFirstMesh()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xDDB02C", Offset = "0xDDB02C", VA = "0xDDB02C")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xDDB588", Offset = "0xDDB588", VA = "0xDDB588")]
	public void CreateNavPoint()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xDDBA38", Offset = "0xDDBA38", VA = "0xDDBA38")]
	public void DeleteNavPoint()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xDDB3F4", Offset = "0xDDB3F4", VA = "0xDDB3F4")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xDDCDA0", Offset = "0xDDCDA0", VA = "0xDDCDA0")]
	public void OnDuplicationEvent()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xDDCEF0", Offset = "0xDDCEF0", VA = "0xDDCEF0")]
	public void OnDuplicationEventSrc()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xDDBA3C", Offset = "0xDDBA3C", VA = "0xDDBA3C")]
	private void ScaleControlNavPoints()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xDD8AF0", Offset = "0xDD8AF0", VA = "0xDD8AF0")]
	private void SetVerts()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xDDCEF4", Offset = "0xDDCEF4", VA = "0xDDCEF4")]
	private Vector3 GetPointScale(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xDDBC48", Offset = "0xDDBC48", VA = "0xDDBC48")]
	private void SetTriangles()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xDDC058", Offset = "0xDDC058", VA = "0xDDC058")]
	private void SetUVs()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xDDC6A8", Offset = "0xDDC6A8", VA = "0xDDC6A8")]
	private void SetBorderUVs()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xDDD30C", Offset = "0xDDD30C", VA = "0xDDD30C")]
	public void GroundPoints(float offset)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xDDB1A4", Offset = "0xDDB1A4", VA = "0xDDB1A4")]
	public void ResetMesh()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xDDCD98", Offset = "0xDDCD98", VA = "0xDDCD98")]
	private void EnableBorders(bool state)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xDD8680", Offset = "0xDD8680", VA = "0xDD8680")]
	public bool FindLeftBorder()
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xDD87A8", Offset = "0xDD87A8", VA = "0xDD87A8")]
	public bool FindRightBorder()
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xDDB328", Offset = "0xDDB328", VA = "0xDDB328")]
	public void ReparentPoints(bool reparent)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xDDCD9C", Offset = "0xDDCD9C", VA = "0xDDCD9C")]
	private void UpdateCollider(Mesh colMesh)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xDD8464", Offset = "0xDD8464", VA = "0xDD8464")]
	public void FindNavPoints()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xDDD86C", Offset = "0xDDD86C", VA = "0xDDD86C")]
	public void Finalise()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xDDD07C", Offset = "0xDDD07C", VA = "0xDDD07C")]
	private Vector3 GetTangent(Vector3 d, Vector3 e)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xDDD170", Offset = "0xDDD170", VA = "0xDDD170")]
	private Vector3 GetBinormal(Vector3 tng, Vector3 upVectorA, Vector3 upVectorB, float cof)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xDDD264", Offset = "0xDDD264", VA = "0xDDD264")]
	private Vector3 GetNormal(Vector3 bnrm, Vector3 tng)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xDDD738", Offset = "0xDDD738", VA = "0xDDD738")]
	public static Transform[] AddTransformArray(Transform[] _arr, Transform tr)
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xDDD870", Offset = "0xDDD870", VA = "0xDDD870")]
	public static Transform[] RemoveTransformArray(Transform[] _arr, int n)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xDDDB08", Offset = "0xDDDB08", VA = "0xDDDB08")]
	public static Transform[] CombineTransformArray(Transform[] _arr1, Transform[] _arr2)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xDDDC34", Offset = "0xDDDC34", VA = "0xDDDC34")]
	public ERMeshGen()
	{
	}
}
[Token(Token = "0x200000B")]
public class ERNavPoint : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float gizmoSize;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ERMeshGen assignedMeshGen;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool lockSize;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lockedWidth;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xDDDF7C", Offset = "0xDDDF7C", VA = "0xDDDF7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xDDDF80", Offset = "0xDDDF80", VA = "0xDDDF80")]
	public void NavPointAction(NavAction act)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xDDDFB8", Offset = "0xDDDFB8", VA = "0xDDDFB8")]
	public void LockSize(bool state)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xDDDFBC", Offset = "0xDDDFBC", VA = "0xDDDFBC")]
	public ERNavPoint()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE1610", Offset = "0xAE1610")]
public class ERPointSnap : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool passive;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool snapped;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Vector3 originalPos;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 originalRot;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int snapModeInt;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform snappedToPoint;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int updateLoopCount;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xDDDFCC", Offset = "0xDDDFCC", VA = "0xDDDFCC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xDDDFDC", Offset = "0xDDDFDC", VA = "0xDDDFDC")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xDDE284", Offset = "0xDDE284", VA = "0xDDE284")]
	public void SnapToPointTransform()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xDDE288", Offset = "0xDDE288", VA = "0xDDE288")]
	public void UnSnap()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xDDCEEC", Offset = "0xDDCEEC", VA = "0xDDCEEC")]
	public void ClearSnap()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xDDE28C", Offset = "0xDDE28C", VA = "0xDDE28C")]
	public ERPointSnap()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE1648", Offset = "0xAE1648")]
public class RiverFlow : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 direction;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool bumpmap;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float x;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float y;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE2E6D0", Offset = "0xE2E6D0", VA = "0xE2E6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE2E840", Offset = "0xE2E840", VA = "0xE2E840")]
	public RiverFlow()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1680", Offset = "0xAE1680")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE57F4", Offset = "0xAE57F4")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xE6FD28", Offset = "0xE6FD28", VA = "0xE6FD28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xE6FD90", Offset = "0xE6FD90", VA = "0xE6FD90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xE6FBC0", Offset = "0xE6FBC0", VA = "0xE6FBC0")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xE6FBF4", Offset = "0xE6FBF4", VA = "0xE6FBF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xE6FBF8", Offset = "0xE6FBF8", VA = "0xE6FBF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xE6FD30", Offset = "0xE6FD30", VA = "0xE6FD30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE6FAFC", Offset = "0xE6FAFC", VA = "0xE6FAFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE6FB50", Offset = "0xE6FB50", VA = "0xE6FB50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF90CC", Offset = "0xAF90CC")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE6FBEC", Offset = "0xE6FBEC", VA = "0xE6FBEC")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE16E4", Offset = "0xAE16E4")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE6FD98", Offset = "0xE6FD98", VA = "0xE6FD98")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE6FE00", Offset = "0xE6FE00", VA = "0xE6FE00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE6FE84", Offset = "0xE6FE84", VA = "0xE6FE84")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE70024", Offset = "0xE70024", VA = "0xE70024")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1748", Offset = "0xAE1748")]
public class WFX_BulletHoleDecal : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5804", Offset = "0xAE5804")]
	private sealed class <holeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_BulletHoleDecal <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xD8E19C", Offset = "0xD8E19C", VA = "0xD8E19C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xD8E204", Offset = "0xD8E204", VA = "0xD8E204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xD8DF00", Offset = "0xD8DF00", VA = "0xD8DF00")]
		[DebuggerHidden]
		public <holeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xD8E070", Offset = "0xD8E070", VA = "0xD8E070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xD8E074", Offset = "0xD8E074", VA = "0xD8E074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xD8E1A4", Offset = "0xD8E1A4", VA = "0xD8E1A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] quadUVs;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeoutpercent;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 frames;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomRotation;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool deactivate;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float life;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeout;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float orgAlpha;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD8DB40", Offset = "0xD8DB40", VA = "0xD8DB40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD8DBC8", Offset = "0xD8DBC8", VA = "0xD8DBC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD8DE90", Offset = "0xD8DE90", VA = "0xD8DE90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9130", Offset = "0xAF9130")]
	private IEnumerator holeUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD8DF2C", Offset = "0xD8DF2C", VA = "0xD8DF2C")]
	public WFX_BulletHoleDecal()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE17AC", Offset = "0xAE17AC")]
public class WFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5814", Offset = "0xAE5814")]
	private sealed class <Flicker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_LightFlicker <>4__this;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0xD8E424", Offset = "0xD8E424", VA = "0xD8E424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xD8E48C", Offset = "0xD8E48C", VA = "0xD8E48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xD8E2D8", Offset = "0xD8E2D8", VA = "0xD8E2D8")]
		[DebuggerHidden]
		public <Flicker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xD8E318", Offset = "0xD8E318", VA = "0xD8E318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xD8E31C", Offset = "0xD8E31C", VA = "0xD8E31C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xD8E42C", Offset = "0xD8E42C", VA = "0xD8E42C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD8E20C", Offset = "0xD8E20C", VA = "0xD8E20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD8E268", Offset = "0xD8E268", VA = "0xD8E268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9194", Offset = "0xAF9194")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD8E304", Offset = "0xD8E304", VA = "0xD8E304")]
	public WFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000012")]
public class ChangeBallLayer : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int LayerOnEnter;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int LayerOnExit;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE73860", Offset = "0xE73860", VA = "0xE73860")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE7390C", Offset = "0xE7390C", VA = "0xE7390C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE739B8", Offset = "0xE739B8", VA = "0xE739B8")]
	public ChangeBallLayer()
	{
	}
}
[Token(Token = "0x2000013")]
public class SpidertestScript : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Yspeed;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Hanging;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8584", Offset = "0xAE8584")]
	[SerializeField]
	private float jojoTime;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool goingDown;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE38EA0", Offset = "0xE38EA0", VA = "0xE38EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE38F5C", Offset = "0xE38F5C", VA = "0xE38F5C")]
	private void changeDirection()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE38F6C", Offset = "0xE38F6C", VA = "0xE38F6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE3907C", Offset = "0xE3907C", VA = "0xE3907C")]
	public SpidertestScript()
	{
	}
}
[Token(Token = "0x2000014")]
public class BankUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer lamps;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer combinedMesh;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE08A40", Offset = "0xE08A40", VA = "0xE08A40", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE08AAC", Offset = "0xE08AAC", VA = "0xE08AAC")]
	public BankUpgrader()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE1810", Offset = "0xAE1810")]
public class BuildingUpgradeMaterials : ScriptableObject
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] materials;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE6EB04", Offset = "0xE6EB04", VA = "0xE6EB04")]
	public Material[] GetMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE6EB0C", Offset = "0xE6EB0C", VA = "0xE6EB0C")]
	public BuildingUpgradeMaterials()
	{
	}
}
[Token(Token = "0x2000016")]
public enum UpgradeableBuildings
{
	[Token(Token = "0x400007B")]
	Bank,
	[Token(Token = "0x400007C")]
	GeneralStore,
	[Token(Token = "0x400007D")]
	PostOffice,
	[Token(Token = "0x400007E")]
	Saloon,
	[Token(Token = "0x400007F")]
	Sheriff,
	[Token(Token = "0x4000080")]
	Well,
	[Token(Token = "0x4000081")]
	DesertTree,
	[Token(Token = "0x4000082")]
	Cacti
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE185C", Offset = "0xAE185C")]
public class BuildingUpgrades : ScriptableObject
{
	[Token(Token = "0x2000465")]
	public delegate void BuildingUpgraded(UpgradeableBuildings buildingId, int stage);

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BuildingUpgradeMaterials[] bankUpgradeMaterials;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BuildingUpgradeMaterials[] generalStoreUpgradeMaterials;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BuildingUpgradeMaterials[] postOfficeUpgradeMaterials;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BuildingUpgradeMaterials[] saloonUpgradeMaterials;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BuildingUpgradeMaterials[] sheriffUpgradeMaterials;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BuildingUpgradeMaterials[] wellUpgradeMaterials;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BuildingUpgradeMaterials[] desertTreeUpgradeMaterials;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private BuildingUpgradeMaterials[] cactiUpgradeMaterials;

	[Token(Token = "0x14000001")]
	public event BuildingUpgraded OnBuildingUpgraded
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xE6EB14", Offset = "0xE6EB14", VA = "0xE6EB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF91F8", Offset = "0xAF91F8")]
		add
		{
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xE6EBB8", Offset = "0xE6EBB8", VA = "0xE6EBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9208", Offset = "0xAF9208")]
		remove
		{
		}
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE6EC5C", Offset = "0xE6EC5C", VA = "0xE6EC5C")]
	public void UpgradeBank(int stage)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE6EF0C", Offset = "0xE6EF0C", VA = "0xE6EF0C")]
	public void UpgradeGeneralStore(int stage)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE6EFB0", Offset = "0xE6EFB0", VA = "0xE6EFB0")]
	public void UpgradePost(int stage)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE6F078", Offset = "0xE6F078", VA = "0xE6F078")]
	public void UpgradeSaloon(int stage)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE6F0FC", Offset = "0xE6F0FC", VA = "0xE6F0FC")]
	public void UpgradeSheriff(int stage)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE6F180", Offset = "0xE6F180", VA = "0xE6F180")]
	public void UpgradeWell(int stage)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE6F21C", Offset = "0xE6F21C", VA = "0xE6F21C")]
	public void UpgradeDesertTrees(int stage)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE6F2A0", Offset = "0xE6F2A0", VA = "0xE6F2A0")]
	public void UpgradeCacti(int stage)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE6ECE0", Offset = "0xE6ECE0", VA = "0xE6ECE0")]
	public void UpgradeBuilding(UpgradeableBuildings buildingId, int stage)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE6EE04", Offset = "0xE6EE04", VA = "0xE6EE04")]
	private void CheckIfAllBuildingsUpgraded()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE6F5B4", Offset = "0xE6F5B4", VA = "0xE6F5B4")]
	public Material[] GetBuildingMaterials(UpgradeableBuildings buildingId, int stage)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE6F7D0", Offset = "0xE6F7D0", VA = "0xE6F7D0")]
	private bool DoesMaterialExist(UpgradeableBuildings buildingId, int stage, int newMatsLength)
	{
		return default(bool);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE6F8CC", Offset = "0xE6F8CC", VA = "0xE6F8CC")]
	public BuildingUpgrades()
	{
	}
}
[Token(Token = "0x2000018")]
public class CactiUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer cactusRend;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer flowersRend;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE70034", Offset = "0xE70034", VA = "0xE70034", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE700C8", Offset = "0xE700C8", VA = "0xE700C8")]
	public CactiUpgrader()
	{
	}
}
[Token(Token = "0x2000019")]
public class DesertTreeUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer leavesRend;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer treeRend;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Renderer flowersRend;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xDD4A5C", Offset = "0xDD4A5C", VA = "0xDD4A5C", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xDD4B10", Offset = "0xDD4B10", VA = "0xDD4B10")]
	public DesertTreeUpgrader()
	{
	}
}
[Token(Token = "0x200001A")]
public class GeneralStoreUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer lamps;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer combinedMeshes;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE9DB3C", Offset = "0xE9DB3C", VA = "0xE9DB3C", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE9DBA8", Offset = "0xE9DBA8", VA = "0xE9DBA8")]
	public GeneralStoreUpgrader()
	{
	}
}
[Token(Token = "0x200001B")]
public class PostOfficeUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer lamps;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer combinedMesh;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF3FD58", Offset = "0xF3FD58", VA = "0xF3FD58", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF3FDC4", Offset = "0xF3FDC4", VA = "0xF3FDC4")]
	public PostOfficeUpgrader()
	{
	}
}
[Token(Token = "0x200001C")]
public class SaloonUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAE8720", Offset = "0xAE8720")]
	[SerializeField]
	private Renderer metal;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer terrace;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Renderer roof;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Renderer combinedMesh;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE2FF5C", Offset = "0xE2FF5C", VA = "0xE2FF5C", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE30148", Offset = "0xE30148", VA = "0xE30148")]
	public SaloonUpgrader()
	{
	}
}
[Token(Token = "0x200001D")]
public class SheriffUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer lamps;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer combinedMesh;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE34E44", Offset = "0xE34E44", VA = "0xE34E44", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE34F44", Offset = "0xE34F44", VA = "0xE34F44")]
	public SheriffUpgrader()
	{
	}
}
[Token(Token = "0x200001E")]
public class TEST_BuildingStageTester : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAE87BC", Offset = "0xAE87BC")]
	[SerializeField]
	protected BuildingUpgrades buildingUpgades;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentStage;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xF69348", Offset = "0xF69348", VA = "0xF69348")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xF693DC", Offset = "0xF693DC", VA = "0xF693DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xF69424", Offset = "0xF69424", VA = "0xF69424")]
	private void TestChangeMaterials()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xF69510", Offset = "0xF69510", VA = "0xF69510")]
	public TEST_BuildingStageTester()
	{
	}
}
[Token(Token = "0x200001F")]
public abstract class UpgradeableBuilding : MonoBehaviour
{
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5824", Offset = "0xAE5824")]
	private sealed class <ShowParticles>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpgradeableBuilding <>4__this;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule <em>5__2;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xFC4B00", Offset = "0xFC4B00", VA = "0xFC4B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xFC4B68", Offset = "0xFC4B68", VA = "0xFC4B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xFC48A8", Offset = "0xFC48A8", VA = "0xFC48A8")]
		[DebuggerHidden]
		public <ShowParticles>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xFC4970", Offset = "0xFC4970", VA = "0xFC4970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xFC4974", Offset = "0xFC4974", VA = "0xFC4974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xFC4B08", Offset = "0xFC4B08", VA = "0xFC4B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected BuildingUpgrades buildingUpgades;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected UpgradeableBuildings buildingId;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int currentStage;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem upgradeParticles;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip upgradeSound;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource _audioSource;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xFC4498", Offset = "0xFC4498", VA = "0xFC4498")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xFC4540", Offset = "0xFC4540", VA = "0xFC4540")]
	public void OnBuildingUpgraded(UpgradeableBuildings upgradedBuildingId, int stage)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xFC4694", Offset = "0xFC4694", VA = "0xFC4694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9218", Offset = "0xAF9218")]
	private IEnumerator ShowParticles(float time)
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	protected abstract void UpgradeMaterials(Material[] mats);

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFC48D4", Offset = "0xFC48D4", VA = "0xFC48D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xFC4960", Offset = "0xFC4960", VA = "0xFC4960")]
	public int GetTierStage()
	{
		return default(int);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xFC4714", Offset = "0xFC4714", VA = "0xFC4714")]
	private void ChangeRenderersToMobile()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xFC4968", Offset = "0xFC4968", VA = "0xFC4968")]
	protected UpgradeableBuilding()
	{
	}
}
[Token(Token = "0x2000020")]
public class WellUpgrader : UpgradeableBuilding
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer wellRend;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xD8FBF4", Offset = "0xD8FBF4", VA = "0xD8FBF4", Slot = "4")]
	protected override void UpgradeMaterials(Material[] mats)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xD8FC30", Offset = "0xD8FC30", VA = "0xD8FC30")]
	public WellUpgrader()
	{
	}
}
[Token(Token = "0x2000021")]
[ExecuteInEditMode]
public class WindmillRotatigCenter : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sway;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float range;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool executeInEditMode;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform tr;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 swayRotation;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xD8FC38", Offset = "0xD8FC38", VA = "0xD8FC38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xD8FC98", Offset = "0xD8FC98", VA = "0xD8FC98")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xD8FDB0", Offset = "0xD8FDB0", VA = "0xD8FDB0")]
	public WindmillRotatigCenter()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class WindmillVanes : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool executeInEditMode;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform tr;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 rotation;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xD8FDB8", Offset = "0xD8FDB8", VA = "0xD8FDB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xD8FE18", Offset = "0xD8FE18", VA = "0xD8FE18")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xD8FF08", Offset = "0xD8FF08", VA = "0xD8FF08")]
	public WindmillVanes()
	{
	}
}
[Token(Token = "0x2000023")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000467")]
	public delegate void OnClick();

	[Token(Token = "0x2000468")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000469")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200046A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5834", Offset = "0xAE5834")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xDD25D4", Offset = "0xDD25D4", VA = "0xDD25D4")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xDD3060", Offset = "0xDD3060", VA = "0xDD3060")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5844", Offset = "0xAE5844")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xDD2848", Offset = "0xDD2848", VA = "0xDD2848")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xDD3284", Offset = "0xDD3284", VA = "0xDD3284")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5854", Offset = "0xAE5854")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xDD2A60", Offset = "0xDD2A60", VA = "0xDD2A60")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xDD34FC", Offset = "0xDD34FC", VA = "0xDD34FC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5864", Offset = "0xAE5864")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xDD2BF4", Offset = "0xDD2BF4", VA = "0xDD2BF4")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xDD38B0", Offset = "0xDD38B0", VA = "0xDD38B0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5874", Offset = "0xAE5874")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xDD2E4C", Offset = "0xDD2E4C", VA = "0xDD2E4C")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xDD38D0", Offset = "0xDD38D0", VA = "0xDD38D0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000AD")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000AE")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000AF")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xDD10F8", Offset = "0xDD10F8", VA = "0xDD10F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xDD1500", Offset = "0xDD1500", VA = "0xDD1500")]
	public void Show()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xDD1888", Offset = "0xDD1888", VA = "0xDD1888")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xDD1A30", Offset = "0xDD1A30", VA = "0xDD1A30")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xDD1C9C", Offset = "0xDD1C9C", VA = "0xDD1C9C")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xDD1878", Offset = "0xDD1878", VA = "0xDD1878")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xDD1FE8", Offset = "0xDD1FE8", VA = "0xDD1FE8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xDD229C", Offset = "0xDD229C", VA = "0xDD229C")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xDD25DC", Offset = "0xDD25DC", VA = "0xDD25DC")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xDD26C0", Offset = "0xDD26C0", VA = "0xDD26C0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xDD2850", Offset = "0xDD2850", VA = "0xDD2850")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xDD28EC", Offset = "0xDD28EC", VA = "0xDD28EC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xDD2A68", Offset = "0xDD2A68", VA = "0xDD2A68")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xDD2BFC", Offset = "0xDD2BFC", VA = "0xDD2BFC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xDD2E54", Offset = "0xDD2E54", VA = "0xDD2E54")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xDD2F30", Offset = "0xDD2F30", VA = "0xDD2F30")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xDD2FE0", Offset = "0xDD2FE0", VA = "0xDD2FE0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000024")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xEAB97C", Offset = "0xEAB97C", VA = "0xEAB97C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xEABA04", Offset = "0xEABA04", VA = "0xEABA04")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xEABACC", Offset = "0xEABACC", VA = "0xEABACC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xEABB08", Offset = "0xEABB08", VA = "0xEABB08")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000025")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000470")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4002409")]
		On,
		[Token(Token = "0x400240A")]
		Off,
		[Token(Token = "0x400240B")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000002")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xEB09C8", Offset = "0xEB09C8", VA = "0xEB09C8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xEB0984", Offset = "0xEB0984", VA = "0xEB0984")]
		set
		{
		}
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xEB09D0", Offset = "0xEB09D0", VA = "0xEB09D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xEB0A28", Offset = "0xEB0A28", VA = "0xEB0A28")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xEB0B40", Offset = "0xEB0B40", VA = "0xEB0B40", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xEB0B5C", Offset = "0xEB0B5C", VA = "0xEB0B5C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xEB0BB0", Offset = "0xEB0BB0", VA = "0xEB0BB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xEB0E0C", Offset = "0xEB0E0C", VA = "0xEB0E0C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xEB0F20", Offset = "0xEB0F20", VA = "0xEB0F20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xEB0FB4", Offset = "0xEB0FB4", VA = "0xEB0FB4")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xEB1084", Offset = "0xEB1084", VA = "0xEB1084")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xEB113C", Offset = "0xEB113C", VA = "0xEB113C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xEB1208", Offset = "0xEB1208", VA = "0xEB1208")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000026")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40000D7")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40000D8")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8958", Offset = "0xAE8958")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8990", Offset = "0xAE8990")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE89C8", Offset = "0xAE89C8")]
	public float HeightOffset;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8A00", Offset = "0xAE8A00")]
	public float MinimumHeight;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8A38", Offset = "0xAE8A38")]
	public float MaximumHeight;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xE78790", Offset = "0xE78790", VA = "0xE78790")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xE78798", Offset = "0xE78798", VA = "0xE78798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xE78808", Offset = "0xE78808", VA = "0xE78808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xE78894", Offset = "0xE78894", VA = "0xE78894")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xE78920", Offset = "0xE78920", VA = "0xE78920")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xE78D28", Offset = "0xE78D28", VA = "0xE78D28")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xE78FD0", Offset = "0xE78FD0", VA = "0xE78FD0")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000027")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF79A74", Offset = "0xF79A74", VA = "0xF79A74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF79B20", Offset = "0xF79B20", VA = "0xF79B20")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000028")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000471")]
	public enum States
	{
		[Token(Token = "0x400240D")]
		Ready,
		[Token(Token = "0x400240E")]
		Aim,
		[Token(Token = "0x400240F")]
		CancelAim,
		[Token(Token = "0x4002410")]
		PreTeleport,
		[Token(Token = "0x4002411")]
		CancelTeleport,
		[Token(Token = "0x4002412")]
		Teleporting,
		[Token(Token = "0x4002413")]
		PostTeleport
	}

	[Token(Token = "0x2000472")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4002415")]
		None,
		[Token(Token = "0x4002416")]
		Aim,
		[Token(Token = "0x4002417")]
		PreTeleport,
		[Token(Token = "0x4002418")]
		Teleport
	}

	[Token(Token = "0x2000473")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400241A")]
		Point,
		[Token(Token = "0x400241B")]
		Sphere,
		[Token(Token = "0x400241C")]
		Capsule
	}

	[Token(Token = "0x2000474")]
	public class AimData
	{
		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8DF0", Offset = "0xAF8DF0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000159")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xF7CD04", Offset = "0xF7CD04", VA = "0xF7CD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB066D8", Offset = "0xB066D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xF7CD0C", Offset = "0xF7CD0C", VA = "0xF7CD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB066E8", Offset = "0xB066E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xF7CC90", Offset = "0xF7CC90", VA = "0xF7CC90")]
		public AimData()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xF7CD14", Offset = "0xF7CD14", VA = "0xF7CD14")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5884", Offset = "0xAE5884")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xF7CADC", Offset = "0xF7CADC", VA = "0xF7CADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xF7CB44", Offset = "0xF7CB44", VA = "0xF7CB44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xF7AFE0", Offset = "0xF7AFE0", VA = "0xF7AFE0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xF7C9F4", Offset = "0xF7C9F4", VA = "0xF7C9F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xF7C9F8", Offset = "0xF7C9F8", VA = "0xF7C9F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xF7CAE4", Offset = "0xF7CAE4", VA = "0xF7CAE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5894", Offset = "0xAE5894")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xF7C4BC", Offset = "0xF7C4BC", VA = "0xF7C4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xF7C524", Offset = "0xF7C524", VA = "0xF7C524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xF7B4C8", Offset = "0xF7B4C8", VA = "0xF7B4C8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xF7C384", Offset = "0xF7C384", VA = "0xF7C384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xF7C388", Offset = "0xF7C388", VA = "0xF7C388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xF7C4C4", Offset = "0xF7C4C4", VA = "0xF7C4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58A4", Offset = "0xAE58A4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xF7C5D0", Offset = "0xF7C5D0", VA = "0xF7C5D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xF7C638", Offset = "0xF7C638", VA = "0xF7C638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xF7B6AC", Offset = "0xF7B6AC", VA = "0xF7B6AC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xF7C52C", Offset = "0xF7C52C", VA = "0xF7C52C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xF7C530", Offset = "0xF7C530", VA = "0xF7C530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xF7C5D8", Offset = "0xF7C5D8", VA = "0xF7C5D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58B4", Offset = "0xAE58B4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xF7C984", Offset = "0xF7C984", VA = "0xF7C984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xF7C9EC", Offset = "0xF7C9EC", VA = "0xF7C9EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xF7B890", Offset = "0xF7B890", VA = "0xF7B890")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xF7C8AC", Offset = "0xF7C8AC", VA = "0xF7C8AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xF7C8B0", Offset = "0xF7C8B0", VA = "0xF7C8B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xF7C98C", Offset = "0xF7C98C", VA = "0xF7C98C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58C4", Offset = "0xAE58C4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xF7C6E4", Offset = "0xF7C6E4", VA = "0xF7C6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xF7C74C", Offset = "0xF7C74C", VA = "0xF7C74C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xF7BA74", Offset = "0xF7BA74", VA = "0xF7BA74")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xF7C640", Offset = "0xF7C640", VA = "0xF7C640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xF7C644", Offset = "0xF7C644", VA = "0xF7C644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xF7C6EC", Offset = "0xF7C6EC", VA = "0xF7C6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58D4", Offset = "0xAE58D4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xF7CC20", Offset = "0xF7CC20", VA = "0xF7CC20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xF7CC88", Offset = "0xF7CC88", VA = "0xF7CC88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xF7BC58", Offset = "0xF7BC58", VA = "0xF7BC58")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xF7CB4C", Offset = "0xF7CB4C", VA = "0xF7CB4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xF7CB50", Offset = "0xF7CB50", VA = "0xF7CB50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xF7CC28", Offset = "0xF7CC28", VA = "0xF7CC28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58E4", Offset = "0xAE58E4")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0xF7C83C", Offset = "0xF7C83C", VA = "0xF7C83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xF7C8A4", Offset = "0xF7C8A4", VA = "0xF7C8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xF7BE3C", Offset = "0xF7BE3C", VA = "0xF7BE3C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xF7C754", Offset = "0xF7C754", VA = "0xF7C754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xF7C758", Offset = "0xF7C758", VA = "0xF7C758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xF7C844", Offset = "0xF7C844", VA = "0xF7C844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8A70", Offset = "0xAE8A70")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8AA8", Offset = "0xAE8AA8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8AE0", Offset = "0xAE8AE0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8B18", Offset = "0xAE8B18")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8B50", Offset = "0xAE8B50")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8B88", Offset = "0xAE8B88")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8BC0", Offset = "0xAE8BC0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8BF8", Offset = "0xAE8BF8")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8C30", Offset = "0xAE8C30")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8C40", Offset = "0xAE8C40")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8C78", Offset = "0xAE8C78")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8CC0", Offset = "0xAE8CC0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8CD0", Offset = "0xAE8CD0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8D08", Offset = "0xAE8D08")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8D40", Offset = "0xAE8D40")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8D78", Offset = "0xAE8D78")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000003")]
	public States CurrentState
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xF7A524", Offset = "0xF7A524", VA = "0xF7A524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF927C", Offset = "0xAF927C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xF7A52C", Offset = "0xF7A52C", VA = "0xF7A52C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF928C", Offset = "0xAF928C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xF7A75C", Offset = "0xF7A75C", VA = "0xF7A75C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000005")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xF7A784", Offset = "0xF7A784", VA = "0xF7A784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF92BC", Offset = "0xAF92BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xF7A78C", Offset = "0xF7A78C", VA = "0xF7A78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF92CC", Offset = "0xAF92CC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xF7A534", Offset = "0xF7A534", VA = "0xF7A534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF929C", Offset = "0xAF929C")]
		add
		{
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xF7A5D8", Offset = "0xF7A5D8", VA = "0xF7A5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF92AC", Offset = "0xAF92AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xF7AE98", Offset = "0xF7AE98", VA = "0xF7AE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9314", Offset = "0xAF9314")]
		add
		{
		}
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xF7AF3C", Offset = "0xF7AF3C", VA = "0xF7AF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9324", Offset = "0xAF9324")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xF7B00C", Offset = "0xF7B00C", VA = "0xF7B00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9398", Offset = "0xAF9398")]
		add
		{
		}
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xF7B0B0", Offset = "0xF7B0B0", VA = "0xF7B0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF93A8", Offset = "0xAF93A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xF7B154", Offset = "0xF7B154", VA = "0xF7B154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF93B8", Offset = "0xAF93B8")]
		add
		{
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xF7B1F8", Offset = "0xF7B1F8", VA = "0xF7B1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF93C8", Offset = "0xAF93C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xF7B310", Offset = "0xF7B310", VA = "0xF7B310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF93D8", Offset = "0xAF93D8")]
		add
		{
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xF7B3B4", Offset = "0xF7B3B4", VA = "0xF7B3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF93E8", Offset = "0xAF93E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xF7B4F4", Offset = "0xF7B4F4", VA = "0xF7B4F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF945C", Offset = "0xAF945C")]
		add
		{
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xF7B598", Offset = "0xF7B598", VA = "0xF7B598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF946C", Offset = "0xAF946C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xF7B6D8", Offset = "0xF7B6D8", VA = "0xF7B6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF94E0", Offset = "0xAF94E0")]
		add
		{
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xF7B77C", Offset = "0xF7B77C", VA = "0xF7B77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF94F0", Offset = "0xAF94F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xF7B8BC", Offset = "0xF7B8BC", VA = "0xF7B8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9564", Offset = "0xAF9564")]
		add
		{
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xF7B960", Offset = "0xF7B960", VA = "0xF7B960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9574", Offset = "0xAF9574")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xF7BAA0", Offset = "0xF7BAA0", VA = "0xF7BAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF95E8", Offset = "0xAF95E8")]
		add
		{
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xF7BB44", Offset = "0xF7BB44", VA = "0xF7BB44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF95F8", Offset = "0xAF95F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xF7BC84", Offset = "0xF7BC84", VA = "0xF7BC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF966C", Offset = "0xAF966C")]
		add
		{
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xF7BD28", Offset = "0xF7BD28", VA = "0xF7BD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF967C", Offset = "0xAF967C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xF7BE68", Offset = "0xF7BE68", VA = "0xF7BE68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF96F0", Offset = "0xAF96F0")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xF7BF0C", Offset = "0xF7BF0C", VA = "0xF7BF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9700", Offset = "0xAF9700")]
		remove
		{
		}
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF7A1F4", Offset = "0xF7A1F4", VA = "0xF7A1F4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF7A218", Offset = "0xF7A218", VA = "0xF7A218")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF7A67C", Offset = "0xF7A67C", VA = "0xF7A67C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF7A794", Offset = "0xF7A794", VA = "0xF7A794")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF7AAEC", Offset = "0xF7AAEC", VA = "0xF7AAEC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAF92DC", Offset = "0xAF92DC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF7ABA4", Offset = "0xF7ABA4", VA = "0xF7ABA4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF7AC6C", Offset = "0xF7AC6C", VA = "0xF7AC6C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF7AC88", Offset = "0xF7AC88", VA = "0xF7AC88")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xF7AD50", Offset = "0xF7AD50", VA = "0xF7AD50")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xF7AD94", Offset = "0xF7AD94", VA = "0xF7AD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xF7ADF0", Offset = "0xF7ADF0", VA = "0xF7ADF0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xF7AE90", Offset = "0xF7AE90", VA = "0xF7AE90", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xF7AE20", Offset = "0xF7AE20", VA = "0xF7AE20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9334", Offset = "0xAF9334")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xF7B29C", Offset = "0xF7B29C", VA = "0xF7B29C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xF7B458", Offset = "0xF7B458", VA = "0xF7B458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF93F8", Offset = "0xAF93F8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xF7B63C", Offset = "0xF7B63C", VA = "0xF7B63C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF947C", Offset = "0xAF947C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xF7B820", Offset = "0xF7B820", VA = "0xF7B820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9500", Offset = "0xAF9500")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xF7BA04", Offset = "0xF7BA04", VA = "0xF7BA04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9584", Offset = "0xAF9584")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xF7BBE8", Offset = "0xF7BBE8", VA = "0xF7BBE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9608", Offset = "0xAF9608")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xF7BDCC", Offset = "0xF7BDCC", VA = "0xF7BDCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF968C", Offset = "0xAF968C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF7BFB0", Offset = "0xF7BFB0", VA = "0xF7BFB0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF7C0F4", Offset = "0xF7C0F4", VA = "0xF7C0F4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xF7C128", Offset = "0xF7C128", VA = "0xF7C128")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xF7C248", Offset = "0xF7C248", VA = "0xF7C248")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xF7C374", Offset = "0xF7C374", VA = "0xF7C374")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000029")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xE354B8", Offset = "0xE354B8", VA = "0xE354B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9710", Offset = "0xAF9710")]
		add
		{
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xE3555C", Offset = "0xE3555C", VA = "0xE3555C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9720", Offset = "0xAF9720")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xE35600", Offset = "0xE35600", VA = "0xE35600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9730", Offset = "0xAF9730")]
		add
		{
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xE356A4", Offset = "0xE356A4", VA = "0xE356A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9740", Offset = "0xAF9740")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xE35748", Offset = "0xE35748", VA = "0xE35748")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xE357F0", Offset = "0xE357F0", VA = "0xE357F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xE357F4", Offset = "0xE357F4", VA = "0xE357F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE35868", Offset = "0xE35868", VA = "0xE35868")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE359D8", Offset = "0xE359D8", VA = "0xE359D8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE35CBC", Offset = "0xE35CBC", VA = "0xE35CBC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE35F08", Offset = "0xE35F08", VA = "0xE35F08")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200002A")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xF69BC4", Offset = "0xF69BC4", VA = "0xF69BC4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xF69C58", Offset = "0xF69C58", VA = "0xF69C58", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000FC")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xF69D28", Offset = "0xF69D28", VA = "0xF69D28")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200002B")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8E70", Offset = "0xAE8E70")]
	public float Range;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xF69D38", Offset = "0xF69D38", VA = "0xF69D38", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xF69E94", Offset = "0xF69E94", VA = "0xF69E94")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200002C")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8EA8", Offset = "0xAE8EA8")]
	public float Range;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8EE0", Offset = "0xAE8EE0")]
	public float MinimumElevation;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8F18", Offset = "0xAE8F18")]
	public float Gravity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8F50", Offset = "0xAE8F50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE8F50", Offset = "0xAE8F50")]
	public float AimVelocity;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE8FAC", Offset = "0xAE8FAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE8FAC", Offset = "0xAE8FAC")]
	public float AimStep;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xF69EA4", Offset = "0xF69EA4", VA = "0xF69EA4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xF6A0F0", Offset = "0xF6A0F0", VA = "0xF6A0F0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200002D")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9004", Offset = "0xAE9004")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xF6A104", Offset = "0xF6A104", VA = "0xF6A104")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xF6A1E8", Offset = "0xF6A1E8", VA = "0xF6A1E8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xF6A218", Offset = "0xF6A218", VA = "0xF6A218")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xF6A248", Offset = "0xF6A248", VA = "0xF6A248")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xF6A2E8", Offset = "0xF6A2E8", VA = "0xF6A2E8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xF6A354", Offset = "0xF6A354", VA = "0xF6A354", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xF6A3BC", Offset = "0xF6A3BC", VA = "0xF6A3BC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200002E")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE903C", Offset = "0xAE903C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE904C", Offset = "0xAE904C")]
	public Transform PositionIndicator;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9084", Offset = "0xAE9084")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE90BC", Offset = "0xAE90BC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000006")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xF6A4D8", Offset = "0xF6A4D8", VA = "0xF6A4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9750", Offset = "0xAF9750")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xF6A4E0", Offset = "0xF6A4E0", VA = "0xF6A4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9760", Offset = "0xAF9760")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xF6A690", Offset = "0xF6A690", VA = "0xF6A690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9770", Offset = "0xAF9770")]
		add
		{
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xF6A734", Offset = "0xF6A734", VA = "0xF6A734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9780", Offset = "0xAF9780")]
		remove
		{
		}
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xF6A4EC", Offset = "0xF6A4EC", VA = "0xF6A4EC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xF6A574", Offset = "0xF6A574", VA = "0xF6A574")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xF6A64C", Offset = "0xF6A64C", VA = "0xF6A64C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xF6A68C", Offset = "0xF6A68C", VA = "0xF6A68C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF6A7D8", Offset = "0xF6A7D8", VA = "0xF6A7D8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF6A840", Offset = "0xF6A840", VA = "0xF6A840")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xF6A860", Offset = "0xF6A860", VA = "0xF6A860", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200002F")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE58F4", Offset = "0xAE58F4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xF6AF24", Offset = "0xF6AF24", VA = "0xF6AF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xF6AF8C", Offset = "0xF6AF8C", VA = "0xF6AF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xF6AC70", Offset = "0xF6AC70", VA = "0xF6AC70")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xF6AE94", Offset = "0xF6AE94", VA = "0xF6AE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xF6AE98", Offset = "0xF6AE98", VA = "0xF6AE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xF6AF2C", Offset = "0xF6AF2C", VA = "0xF6AF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5904", Offset = "0xAE5904")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xF6AE24", Offset = "0xF6AE24", VA = "0xF6AE24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0xF6AE8C", Offset = "0xF6AE8C", VA = "0xF6AE8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xF6AD0C", Offset = "0xF6AD0C", VA = "0xF6AD0C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xF6AD90", Offset = "0xF6AD90", VA = "0xF6AD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xF6AD94", Offset = "0xF6AD94", VA = "0xF6AD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xF6AE2C", Offset = "0xF6AE2C", VA = "0xF6AE2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xF6AA40", Offset = "0xF6AA40", VA = "0xF6AA40")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xF6AAEC", Offset = "0xF6AAEC", VA = "0xF6AAEC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xF6AB44", Offset = "0xF6AB44", VA = "0xF6AB44", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xF6AC00", Offset = "0xF6AC00", VA = "0xF6AC00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9790", Offset = "0xAF9790")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xF6AC9C", Offset = "0xF6AC9C", VA = "0xF6AC9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF97F4", Offset = "0xAF97F4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600011A")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xF6AD38", Offset = "0xF6AD38", VA = "0xF6AD38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9858", Offset = "0xAF9858")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xF6AD64", Offset = "0xF6AD64", VA = "0xF6AD64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9868", Offset = "0xAF9868")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000030")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9104", Offset = "0xAE9104")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9114", Offset = "0xAE9114")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE914C", Offset = "0xAE914C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9184", Offset = "0xAE9184")]
	public bool FastTeleport;

	[Token(Token = "0x17000007")]
	public Transform Pointer
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xF6AF94", Offset = "0xF6AF94", VA = "0xF6AF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9878", Offset = "0xAF9878")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xF6AF9C", Offset = "0xF6AF9C", VA = "0xF6AF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9888", Offset = "0xAF9888")]
		private set
		{
		}
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xF6AFA4", Offset = "0xF6AFA4", VA = "0xF6AFA4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xF6B100", Offset = "0xF6B100", VA = "0xF6B100", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xF6B1B8", Offset = "0xF6B1B8", VA = "0xF6B1B8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000031")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200047E")]
	public enum InputModes
	{
		[Token(Token = "0x400243E")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400243F")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002440")]
		ThumbstickTeleport,
		[Token(Token = "0x4002441")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200047F")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002443")]
		A,
		[Token(Token = "0x4002444")]
		B,
		[Token(Token = "0x4002445")]
		LeftTrigger,
		[Token(Token = "0x4002446")]
		LeftThumbstick,
		[Token(Token = "0x4002447")]
		RightTrigger,
		[Token(Token = "0x4002448")]
		RightThumbstick,
		[Token(Token = "0x4002449")]
		X,
		[Token(Token = "0x400244A")]
		Y
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE91BC", Offset = "0xAE91BC")]
	public InputModes InputMode;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE91F4", Offset = "0xAE91F4")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE922C", Offset = "0xAE922C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9264", Offset = "0xAE9264")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xF6B1BC", Offset = "0xF6B1BC", VA = "0xF6B1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xF6B1C0", Offset = "0xF6B1C0", VA = "0xF6B1C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xF6B608", Offset = "0xF6B608", VA = "0xF6B608", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xF6B6C8", Offset = "0xF6B6C8", VA = "0xF6B6C8")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000480")]
	public enum OrientationModes
	{
		[Token(Token = "0x400244C")]
		HeadRelative,
		[Token(Token = "0x400244D")]
		ForwardFacing
	}

	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5914", Offset = "0xAE5914")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xF6BB58", Offset = "0xF6BB58", VA = "0xF6BB58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xF6BBC0", Offset = "0xF6BBC0", VA = "0xF6BBC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xF6B934", Offset = "0xF6B934", VA = "0xF6B934")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xF6BAB0", Offset = "0xF6BAB0", VA = "0xF6BAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xF6BAB4", Offset = "0xF6BAB4", VA = "0xF6BAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xF6BB60", Offset = "0xF6BB60", VA = "0xF6BB60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xF6B774", Offset = "0xF6B774", VA = "0xF6B774")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xF6B828", Offset = "0xF6B828", VA = "0xF6B828")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xF6B830", Offset = "0xF6B830", VA = "0xF6B830", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xF6B87C", Offset = "0xF6B87C", VA = "0xF6B87C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xF6B8C4", Offset = "0xF6B8C4", VA = "0xF6B8C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9898", Offset = "0xAF9898")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600012C")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xF6B960", Offset = "0xF6B960", VA = "0xF6B960")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xF6BA84", Offset = "0xF6BA84", VA = "0xF6BA84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF98FC", Offset = "0xAF98FC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600012F")]
	[Address(RVA = "0xF6BBC8", Offset = "0xF6BBC8", VA = "0xF6BBC8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xF6BBCC", Offset = "0xF6BBCC", VA = "0xF6BBCC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xF6BC48", Offset = "0xF6BC48", VA = "0xF6BC48")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE929C", Offset = "0xAE929C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE92D4", Offset = "0xAE92D4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE930C", Offset = "0xAE930C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9344", Offset = "0xAE9344")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xF6BC4C", Offset = "0xF6BC4C", VA = "0xF6BC4C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xF6BCBC", Offset = "0xF6BCBC", VA = "0xF6BCBC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xF6C134", Offset = "0xF6C134", VA = "0xF6C134")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000035")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE937C", Offset = "0xAE937C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE93B4", Offset = "0xAE93B4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE93EC", Offset = "0xAE93EC")]
	public float RotateStickThreshold;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xF6C138", Offset = "0xF6C138", VA = "0xF6C138", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xF6C17C", Offset = "0xF6C17C", VA = "0xF6C17C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xF6C5EC", Offset = "0xF6C5EC", VA = "0xF6C5EC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xF6C5FC", Offset = "0xF6C5FC", VA = "0xF6C5FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xF6C600", Offset = "0xF6C600", VA = "0xF6C600")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xF6C608", Offset = "0xF6C608", VA = "0xF6C608")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xF6C6F0", Offset = "0xF6C6F0", VA = "0xF6C6F0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xF6C718", Offset = "0xF6C718", VA = "0xF6C718")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9424", Offset = "0xAE9424")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000008")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xF6CA9C", Offset = "0xF6CA9C", VA = "0xF6CA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF990C", Offset = "0xAF990C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xF6CAA4", Offset = "0xF6CAA4", VA = "0xF6CAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF991C", Offset = "0xAF991C")]
		private set
		{
		}
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xF69BF4", Offset = "0xF69BF4", VA = "0xF69BF4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xF69CFC", Offset = "0xF69CFC", VA = "0xF69CFC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xF6CAAC", Offset = "0xF6CAAC", VA = "0xF6CAAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAF992C", Offset = "0xAF992C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xF6A348", Offset = "0xF6A348", VA = "0xF6A348", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xF6A3B4", Offset = "0xF6A3B4", VA = "0xF6A3B4", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xF69D30", Offset = "0xF69D30", VA = "0xF69D30")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000038")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5924", Offset = "0xAE5924")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xF6D100", Offset = "0xF6D100", VA = "0xF6D100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xF6D168", Offset = "0xF6D168", VA = "0xF6D168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xF6CCFC", Offset = "0xF6CCFC", VA = "0xF6CCFC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xF6CE94", Offset = "0xF6CE94", VA = "0xF6CE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xF6CE98", Offset = "0xF6CE98", VA = "0xF6CE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xF6D108", Offset = "0xF6D108", VA = "0xF6D108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9434", Offset = "0xAE9434")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400014D")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xF6CB74", Offset = "0xF6CB74", VA = "0xF6CB74")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xF6CC38", Offset = "0xF6CC38", VA = "0xF6CC38", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xF6CC64", Offset = "0xF6CC64", VA = "0xF6CC64", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xF6CC8C", Offset = "0xF6CC8C", VA = "0xF6CC8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9964", Offset = "0xAF9964")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xF6CD28", Offset = "0xF6CD28", VA = "0xF6CD28", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600014A")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xF6CD44", Offset = "0xF6CD44", VA = "0xF6CD44", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xF6CE68", Offset = "0xF6CE68", VA = "0xF6CE68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF99C8", Offset = "0xAF99C8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000039")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xF6D170", Offset = "0xF6D170", VA = "0xF6D170")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xF6D1D0", Offset = "0xF6D1D0", VA = "0xF6D1D0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xF6D354", Offset = "0xF6D354", VA = "0xF6D354", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xF6D444", Offset = "0xF6D444", VA = "0xF6D444")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAF99D8", Offset = "0xAF99D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xF6D448", Offset = "0xF6D448", VA = "0xF6D448")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200003A")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE946C", Offset = "0xAE946C")]
	public float LOSOffset;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE94A4", Offset = "0xAE94A4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xF6D454", Offset = "0xF6D454", VA = "0xF6D454", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xF6D684", Offset = "0xF6D684", VA = "0xF6D684")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000154")]
	[Address(RVA = "0xF6D690", Offset = "0xF6D690", VA = "0xF6D690", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xF6D814", Offset = "0xF6D814", VA = "0xF6D814")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200003C")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000156")]
	[Address(RVA = "0xF6D818", Offset = "0xF6D818", VA = "0xF6D818", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xF6D8B0", Offset = "0xF6D8B0", VA = "0xF6D8B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000158")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xF6D944", Offset = "0xF6D944", VA = "0xF6D944")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5934", Offset = "0xAE5934")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xF6DCAC", Offset = "0xF6DCAC", VA = "0xF6DCAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0xF6DD14", Offset = "0xF6DD14", VA = "0xF6DD14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xF6D9E8", Offset = "0xF6D9E8", VA = "0xF6D9E8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xF6DBAC", Offset = "0xF6DBAC", VA = "0xF6DBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xF6DBB0", Offset = "0xF6DBB0", VA = "0xF6DBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xF6DCB4", Offset = "0xF6DCB4", VA = "0xF6DCB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE94DC", Offset = "0xAE94DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE94DC", Offset = "0xAE94DC")]
	public float TransitionDuration;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9534", Offset = "0xAE9534")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9534", Offset = "0xAE9534")]
	public float TeleportDelay;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9588", Offset = "0xAE9588")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xF6D94C", Offset = "0xF6D94C", VA = "0xF6D94C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xF6D978", Offset = "0xF6D978", VA = "0xF6D978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9A10", Offset = "0xAF9A10")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xF6DA14", Offset = "0xF6DA14", VA = "0xF6DA14")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200003E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600015D")]
	[Address(RVA = "0xF6DD1C", Offset = "0xF6DD1C", VA = "0xF6DD1C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xF6DD38", Offset = "0xF6DD38", VA = "0xF6DD38")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200003F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5944", Offset = "0xAE5944")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xF6DF84", Offset = "0xF6DF84", VA = "0xF6DF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xF6DFEC", Offset = "0xF6DFEC", VA = "0xF6DFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xF6DDDC", Offset = "0xF6DDDC", VA = "0xF6DDDC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xF6DE50", Offset = "0xF6DE50", VA = "0xF6DE50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xF6DE54", Offset = "0xF6DE54", VA = "0xF6DE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xF6DF8C", Offset = "0xF6DF8C", VA = "0xF6DF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE95C0", Offset = "0xAE95C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE95C0", Offset = "0xAE95C0")]
	public float TransitionDuration;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xF6DD40", Offset = "0xF6DD40", VA = "0xF6DD40", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xF6DD6C", Offset = "0xF6DD6C", VA = "0xF6DD6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9A74", Offset = "0xAF9A74")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xF6DE08", Offset = "0xF6DE08", VA = "0xF6DE08")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000040")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000485")]
	public enum PlabackState
	{
		[Token(Token = "0x4002460")]
		Idle = 1,
		[Token(Token = "0x4002461")]
		Preparing,
		[Token(Token = "0x4002462")]
		Buffering,
		[Token(Token = "0x4002463")]
		Ready,
		[Token(Token = "0x4002464")]
		Ended
	}

	[Token(Token = "0x2000486")]
	public enum StereoMode
	{
		[Token(Token = "0x4002466")]
		Unknown = -1,
		[Token(Token = "0x4002467")]
		Mono,
		[Token(Token = "0x4002468")]
		TopBottom,
		[Token(Token = "0x4002469")]
		LeftRight,
		[Token(Token = "0x400246A")]
		Mesh
	}

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000009")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xE61E48", Offset = "0xE61E48", VA = "0xE61E48")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0xE62104", Offset = "0xE62104", VA = "0xE62104")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xE5E9A4", Offset = "0xE5E9A4", VA = "0xE5E9A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xE5FFF0", Offset = "0xE5FFF0", VA = "0xE5FFF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000D")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0xE62348", Offset = "0xE62348", VA = "0xE62348")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700000E")]
	public static long Duration
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0xE601D4", Offset = "0xE601D4", VA = "0xE601D4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700000F")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xE5EF8C", Offset = "0xE5EF8C", VA = "0xE5EF8C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000010")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xE5EDA4", Offset = "0xE5EDA4", VA = "0xE5EDA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000011")]
	public static int VideoHeight
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xE5EE98", Offset = "0xE5EE98", VA = "0xE5EE98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000012")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0xE600E0", Offset = "0xE600E0", VA = "0xE600E0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xE5F764", Offset = "0xE5F764", VA = "0xE5F764")]
		set
		{
		}
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xE60834", Offset = "0xE60834", VA = "0xE60834")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xE60578", Offset = "0xE60578", VA = "0xE60578")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xE5F3F4", Offset = "0xE5F3F4", VA = "0xE5F3F4")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xE5F578", Offset = "0xE5F578", VA = "0xE5F578")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xE603A0", Offset = "0xE603A0", VA = "0xE603A0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xE60A28", Offset = "0xE60A28", VA = "0xE60A28")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE5FE34", Offset = "0xE5FE34", VA = "0xE5FE34")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000041")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xE6F998", Offset = "0xE6F998", VA = "0xE6F998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9AD8", Offset = "0xAF9AD8")]
		add
		{
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0xE6FA3C", Offset = "0xE6FA3C", VA = "0xE6FA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9AE8", Offset = "0xAF9AE8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE6FAE0", Offset = "0xE6FAE0", VA = "0xE6FAE0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xE6FAF4", Offset = "0xE6FAF4", VA = "0xE6FAF4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000042")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000487")]
	public enum ButtonType
	{
		[Token(Token = "0x400246C")]
		Play,
		[Token(Token = "0x400246D")]
		Pause,
		[Token(Token = "0x400246E")]
		FastForward,
		[Token(Token = "0x400246F")]
		Rewind,
		[Token(Token = "0x4002470")]
		SkipForward,
		[Token(Token = "0x4002471")]
		SkipBack,
		[Token(Token = "0x4002472")]
		Stop
	}

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000013")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xE561B8", Offset = "0xE561B8", VA = "0xE561B8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0xE561C0", Offset = "0xE561C0", VA = "0xE561C0")]
		set
		{
		}
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xE561E4", Offset = "0xE561E4", VA = "0xE561E4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xE576B0", Offset = "0xE576B0", VA = "0xE576B0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000043")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000488")]
	public enum VideoShape
	{
		[Token(Token = "0x4002474")]
		_360,
		[Token(Token = "0x4002475")]
		_180,
		[Token(Token = "0x4002476")]
		Quad
	}

	[Token(Token = "0x2000489")]
	public enum VideoStereo
	{
		[Token(Token = "0x4002478")]
		Mono,
		[Token(Token = "0x4002479")]
		TopBottom,
		[Token(Token = "0x400247A")]
		LeftRight,
		[Token(Token = "0x400247B")]
		BottomTop
	}

	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5954", Offset = "0xAE5954")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xE60CF0", Offset = "0xE60CF0", VA = "0xE60CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xE60D58", Offset = "0xE60D58", VA = "0xE60D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xE5F0F0", Offset = "0xE5F0F0", VA = "0xE5F0F0")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xE60B6C", Offset = "0xE60B6C", VA = "0xE60B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xE60B70", Offset = "0xE60B70", VA = "0xE60B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xE60CF8", Offset = "0xE60CF8", VA = "0xE60CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5964", Offset = "0xAE5964")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xE5F358", Offset = "0xE5F358", VA = "0xE5F358")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xE60760", Offset = "0xE60760", VA = "0xE60760")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9648", Offset = "0xAE9648")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9658", Offset = "0xAE9658")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9668", Offset = "0xAE9668")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000014")]
	public bool IsPlaying
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0xE5E758", Offset = "0xE5E758", VA = "0xE5E758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9AF8", Offset = "0xAF9AF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0xE5E760", Offset = "0xE5E760", VA = "0xE5E760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9B08", Offset = "0xAF9B08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public long Duration
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xE5E76C", Offset = "0xE5E76C", VA = "0xE5E76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9B18", Offset = "0xAF9B18")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0xE5E774", Offset = "0xE5E774", VA = "0xE5E774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9B28", Offset = "0xAF9B28")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0xE5E77C", Offset = "0xE5E77C", VA = "0xE5E77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9B38", Offset = "0xAF9B38")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xE5E784", Offset = "0xE5E784", VA = "0xE5E784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9B48", Offset = "0xAF9B48")]
		private set
		{
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xE5E78C", Offset = "0xE5E78C", VA = "0xE5E78C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xE5EA0C", Offset = "0xE5EA0C", VA = "0xE5EA0C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xE5EA74", Offset = "0xE5EA74", VA = "0xE5EA74")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xE5F080", Offset = "0xE5F080", VA = "0xE5F080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9B58", Offset = "0xAF9B58")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xE5F11C", Offset = "0xE5F11C", VA = "0xE5F11C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xE5F360", Offset = "0xE5F360", VA = "0xE5F360")]
	public void Play()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xE5F4E8", Offset = "0xE5F4E8", VA = "0xE5F4E8")]
	public void Pause()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xE5F66C", Offset = "0xE5F66C", VA = "0xE5F66C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xE5F8A4", Offset = "0xE5F8A4", VA = "0xE5F8A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xE602C8", Offset = "0xE602C8", VA = "0xE602C8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xE604E8", Offset = "0xE604E8", VA = "0xE604E8")]
	public void Stop()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xE6066C", Offset = "0xE6066C", VA = "0xE6066C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xE60750", Offset = "0xE60750", VA = "0xE60750")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000044")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200048C")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002483")]
		Playing,
		[Token(Token = "0x4002484")]
		Paused,
		[Token(Token = "0x4002485")]
		Rewinding,
		[Token(Token = "0x4002486")]
		FastForwarding
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xE60D60", Offset = "0xE60D60", VA = "0xE60D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xE6105C", Offset = "0xE6105C", VA = "0xE6105C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xE61238", Offset = "0xE61238", VA = "0xE61238")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xE6136C", Offset = "0xE6136C", VA = "0xE6136C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xE61474", Offset = "0xE61474", VA = "0xE61474")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xE61340", Offset = "0xE61340", VA = "0xE61340")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE61554", Offset = "0xE61554", VA = "0xE61554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE60F50", Offset = "0xE60F50", VA = "0xE60F50")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE618E8", Offset = "0xE618E8", VA = "0xE618E8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000045")]
public static class VectorUtil
{
	[Token(Token = "0x6000199")]
	[Address(RVA = "0xD8CE60", Offset = "0xD8CE60", VA = "0xD8CE60")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000046")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000198")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000199")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE05F24", Offset = "0xE05F24", VA = "0xE05F24")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE06244", Offset = "0xE06244", VA = "0xE06244")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE06464", Offset = "0xE06464", VA = "0xE06464")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xE065A0", Offset = "0xE065A0", VA = "0xE065A0")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xE066E0", Offset = "0xE066E0", VA = "0xE066E0")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xE06844", Offset = "0xE06844", VA = "0xE06844")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000047")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40001A2")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xDCB5EC", Offset = "0xDCB5EC", VA = "0xDCB5EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xDCB640", Offset = "0xDCB640", VA = "0xDCB640")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xDCB644", Offset = "0xDCB644", VA = "0xDCB644")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xDCB648", Offset = "0xDCB648", VA = "0xDCB648")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xDCB83C", Offset = "0xDCB83C", VA = "0xDCB83C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xDCBA1C", Offset = "0xDCBA1C", VA = "0xDCBA1C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000048")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDD3CA0", Offset = "0xDD3CA0", VA = "0xDD3CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDD4078", Offset = "0xDD4078", VA = "0xDD4078")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDD4130", Offset = "0xDD4130", VA = "0xDD4130")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDD4330", Offset = "0xDD4330", VA = "0xDD4330")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDD4418", Offset = "0xDD4418", VA = "0xDD4418")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xDD44F4", Offset = "0xDD44F4", VA = "0xDD44F4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xDD4560", Offset = "0xDD4560", VA = "0xDD4560")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xDD4568", Offset = "0xDD4568", VA = "0xDD4568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9BCC", Offset = "0xAF9BCC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xDD45C4", Offset = "0xDD45C4", VA = "0xDD45C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9BDC", Offset = "0xAF9BDC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xDD4620", Offset = "0xDD4620", VA = "0xDD4620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9BEC", Offset = "0xAF9BEC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xDD467C", Offset = "0xDD467C", VA = "0xDD467C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9BFC", Offset = "0xAF9BFC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000049")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xDFFAC0", Offset = "0xDFFAC0", VA = "0xDFFAC0")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200004A")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xE30150", Offset = "0xE30150", VA = "0xE30150")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE301EC", Offset = "0xE301EC", VA = "0xE301EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xE302D0", Offset = "0xE302D0", VA = "0xE302D0")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xE30334", Offset = "0xE30334", VA = "0xE30334")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x200004B")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x10F9478", Offset = "0x10F9478", VA = "0x10F9478")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x200004C")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5974", Offset = "0xAE5974")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xEABF5C", Offset = "0xEABF5C", VA = "0xEABF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xEABFC4", Offset = "0xEABFC4", VA = "0xEABFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xEABE0C", Offset = "0xEABE0C", VA = "0xEABE0C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xEABE40", Offset = "0xEABE40", VA = "0xEABE40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xEABE44", Offset = "0xEABE44", VA = "0xEABE44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xEABF64", Offset = "0xEABF64", VA = "0xEABF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xEABB10", Offset = "0xEABB10", VA = "0xEABB10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xEABC10", Offset = "0xEABC10", VA = "0xEABC10")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xEABBA0", Offset = "0xEABBA0", VA = "0xEABBA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9C0C", Offset = "0xAF9C0C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xEABE38", Offset = "0xEABE38", VA = "0xEABE38")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9698", Offset = "0xAE9698")]
	public int SubdivisionsU;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE96B4", Offset = "0xAE96B4")]
	public int SubdivisionsV;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE79580", Offset = "0xE79580", VA = "0xE79580")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE7A038", Offset = "0xE7A038", VA = "0xE7A038")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200004E")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000017")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xF79B28", Offset = "0xF79B28", VA = "0xF79B28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xF79B80", Offset = "0xF79B80", VA = "0xF79B80")]
	public void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xF79EE4", Offset = "0xF79EE4", VA = "0xF79EE4")]
	public void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xF79FC8", Offset = "0xF79FC8", VA = "0xF79FC8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAF9C70", Offset = "0xAF9C70")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001C1")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001C3")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001C4")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001C5")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001C6")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001C7")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001C8")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xF7A030", Offset = "0xF7A030", VA = "0xF7A030")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xF7A06C", Offset = "0xF7A06C", VA = "0xF7A06C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xF7A0E0", Offset = "0xF7A0E0", VA = "0xF7A0E0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xF7A23C", Offset = "0xF7A23C", VA = "0xF7A23C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xF7A310", Offset = "0xF7A310", VA = "0xF7A310")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xF79DF0", Offset = "0xF79DF0", VA = "0xF79DF0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xF7A3D0", Offset = "0xF7A3D0", VA = "0xF7A3D0")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xF7A438", Offset = "0xF7A438", VA = "0xF7A438")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xF7A51C", Offset = "0xF7A51C", VA = "0xF7A51C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE18F0", Offset = "0xAE18F0")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200048E")]
	public enum DrawMode
	{
		[Token(Token = "0x400248B")]
		Opaque,
		[Token(Token = "0x400248C")]
		OpaqueWithClip,
		[Token(Token = "0x400248D")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400248E")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000018")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xE64648", Offset = "0xE64648", VA = "0xE64648")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xE646DC", Offset = "0xE646DC", VA = "0xE646DC")]
		set
		{
		}
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE62FD8", Offset = "0xE62FD8", VA = "0xE62FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE63C48", Offset = "0xE63C48", VA = "0xE63C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xE63CCC", Offset = "0xE63CCC", VA = "0xE63CCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xE63DC0", Offset = "0xE63DC0", VA = "0xE63DC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xE63EB4", Offset = "0xE63EB4", VA = "0xE63EB4", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xE640B8", Offset = "0xE640B8", VA = "0xE640B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE647AC", Offset = "0xE647AC", VA = "0xE647AC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000050")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xE086F4", Offset = "0xE086F4", VA = "0xE086F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE08870", Offset = "0xE08870", VA = "0xE08870")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xE08A28", Offset = "0xE08A28", VA = "0xE08A28")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xE08A30", Offset = "0xE08A30", VA = "0xE08A30")]
	public void Release()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE08A18", Offset = "0xE08A18", VA = "0xE08A18")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE08A38", Offset = "0xE08A38", VA = "0xE08A38")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000051")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5984", Offset = "0xAE5984")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xE6DC70", Offset = "0xE6DC70", VA = "0xE6DC70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xE6DCD8", Offset = "0xE6DCD8", VA = "0xE6DCD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xE6DAD4", Offset = "0xE6DAD4", VA = "0xE6DAD4")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xE6DB34", Offset = "0xE6DB34", VA = "0xE6DB34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xE6DB38", Offset = "0xE6DB38", VA = "0xE6DB38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xE6DC78", Offset = "0xE6DC78", VA = "0xE6DC78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5994", Offset = "0xAE5994")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0xE6DE84", Offset = "0xE6DE84", VA = "0xE6DE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xE6DEEC", Offset = "0xE6DEEC", VA = "0xE6DEEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xE6DB00", Offset = "0xE6DB00", VA = "0xE6DB00")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xE6DCE0", Offset = "0xE6DCE0", VA = "0xE6DCE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xE6DCE4", Offset = "0xE6DCE4", VA = "0xE6DCE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xE6DE8C", Offset = "0xE6DE8C", VA = "0xE6DE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xE6D568", Offset = "0xE6D568", VA = "0xE6D568")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xE6D7AC", Offset = "0xE6D7AC", VA = "0xE6D7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xE6D808", Offset = "0xE6D808", VA = "0xE6D808")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE6D970", Offset = "0xE6D970", VA = "0xE6D970")]
	public void Release()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xE6DA34", Offset = "0xE6DA34", VA = "0xE6DA34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9CA8", Offset = "0xAF9CA8")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xE6D8B4", Offset = "0xE6D8B4", VA = "0xE6D8B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9D0C", Offset = "0xAF9D0C")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xE6DB2C", Offset = "0xE6DB2C", VA = "0xE6DB2C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000052")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xFA5900", Offset = "0xFA5900", VA = "0xFA5900")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xFA5964", Offset = "0xFA5964", VA = "0xFA5964")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000053")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xFAE100", Offset = "0xFAE100", VA = "0xFAE100")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xFAE2E0", Offset = "0xFAE2E0", VA = "0xFAE2E0")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xFAE374", Offset = "0xFAE374", VA = "0xFAE374")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xFAE3DC", Offset = "0xFAE3DC", VA = "0xFAE3DC")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000054")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59A4", Offset = "0xAE59A4")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xFAF65C", Offset = "0xFAF65C", VA = "0xFAF65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xFAF6C4", Offset = "0xFAF6C4", VA = "0xFAF6C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xFAF360", Offset = "0xFAF360", VA = "0xFAF360")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xFAF43C", Offset = "0xFAF43C", VA = "0xFAF43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xFAF440", Offset = "0xFAF440", VA = "0xFAF440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xFAF664", Offset = "0xFAF664", VA = "0xFAF664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xFAE3E4", Offset = "0xFAE3E4", VA = "0xFAE3E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xFAE614", Offset = "0xFAE614", VA = "0xFAE614")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xFAE944", Offset = "0xFAE944", VA = "0xFAE944")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xFAEC5C", Offset = "0xFAEC5C", VA = "0xFAEC5C")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xFAEFCC", Offset = "0xFAEFCC", VA = "0xFAEFCC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xFAF0C4", Offset = "0xFAF0C4", VA = "0xFAF0C4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xFAF280", Offset = "0xFAF280", VA = "0xFAF280")]
	public void Release()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xFAF1D4", Offset = "0xFAF1D4", VA = "0xFAF1D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9D70", Offset = "0xAF9D70")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xFAF38C", Offset = "0xFAF38C", VA = "0xFAF38C")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000055")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000492")]
	public enum ManipulationType
	{
		[Token(Token = "0x40024A7")]
		Default,
		[Token(Token = "0x40024A8")]
		ForcedHand,
		[Token(Token = "0x40024A9")]
		DollyHand,
		[Token(Token = "0x40024AA")]
		DollyAttached,
		[Token(Token = "0x40024AB")]
		HorizontalScaled,
		[Token(Token = "0x40024AC")]
		VerticalScaled,
		[Token(Token = "0x40024AD")]
		Menu
	}

	[Token(Token = "0x2000493")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000494")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000495")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAE9740", Offset = "0xAE9740")]
	public string ObjectName;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAE9750", Offset = "0xAE9750")]
	public string ObjectInstructions;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xE9FB50", Offset = "0xE9FB50", VA = "0xE9FB50")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xE9FE18", Offset = "0xE9FE18", VA = "0xE9FE18")]
	public void Release()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xEA0034", Offset = "0xEA0034", VA = "0xEA0034")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xEA02DC", Offset = "0xEA02DC", VA = "0xEA02DC")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000056")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9770", Offset = "0xAE9770")]
	public int radialDivisions;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE97A8", Offset = "0xAE97A8")]
	public float borderSize;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE97E0", Offset = "0xAE97E0")]
	public float fingerTaper;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9818", Offset = "0xAE9818")]
	public float fingerTipLength;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9850", Offset = "0xAE9850")]
	public float webOffset;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xEA62C8", Offset = "0xEA62C8", VA = "0xEA62C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xEA6480", Offset = "0xEA6480", VA = "0xEA6480")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xEA66A8", Offset = "0xEA66A8", VA = "0xEA66A8")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xEA6D10", Offset = "0xEA6D10", VA = "0xEA6D10")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xEA74AC", Offset = "0xEA74AC", VA = "0xEA74AC")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xEA9B50", Offset = "0xEA9B50", VA = "0xEA9B50")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xEA9C0C", Offset = "0xEA9C0C", VA = "0xEA9C0C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000057")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xEA9C30", Offset = "0xEA9C30", VA = "0xEA9C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xEA9F5C", Offset = "0xEA9F5C", VA = "0xEA9F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xEA9CD8", Offset = "0xEA9CD8", VA = "0xEA9CD8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xEAA3F4", Offset = "0xEAA3F4", VA = "0xEAA3F4")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xEAA984", Offset = "0xEAA984", VA = "0xEAA984")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000058")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59B4", Offset = "0xAE59B4")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600200B")]
			[Address(RVA = "0xE68470", Offset = "0xE68470", VA = "0xE68470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0xE684D8", Offset = "0xE684D8", VA = "0xE684D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xE67D88", Offset = "0xE67D88", VA = "0xE67D88")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xE68108", Offset = "0xE68108", VA = "0xE68108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xE6810C", Offset = "0xE6810C", VA = "0xE6810C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xE68478", Offset = "0xE68478", VA = "0xE68478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE65990", Offset = "0xE65990", VA = "0xE65990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xE65BC4", Offset = "0xE65BC4", VA = "0xE65BC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xE66A78", Offset = "0xE66A78", VA = "0xE66A78")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xE67A4C", Offset = "0xE67A4C", VA = "0xE67A4C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xE65B54", Offset = "0xE65B54", VA = "0xE65B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9DD4", Offset = "0xAF9DD4")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xE65E68", Offset = "0xE65E68", VA = "0xE65E68")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xE66D98", Offset = "0xE66D98", VA = "0xE66D98")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xE67DB4", Offset = "0xE67DB4", VA = "0xE67DB4")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xE67E8C", Offset = "0xE67E8C", VA = "0xE67E8C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xE67EEC", Offset = "0xE67EEC", VA = "0xE67EEC")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xE67C58", Offset = "0xE67C58", VA = "0xE67C58")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xE68008", Offset = "0xE68008", VA = "0xE68008")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000059")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xE95BB0", Offset = "0xE95BB0", VA = "0xE95BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xE95D04", Offset = "0xE95D04", VA = "0xE95D04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xE95DD0", Offset = "0xE95DD0", VA = "0xE95DD0")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200005A")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	public enum BrushState
	{
		[Token(Token = "0x40024B4")]
		Idle,
		[Token(Token = "0x40024B5")]
		Inking
	}

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xE96838", Offset = "0xE96838", VA = "0xE96838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xE96840", Offset = "0xE96840", VA = "0xE96840")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xE96BB0", Offset = "0xE96BB0", VA = "0xE96BB0")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xE96D80", Offset = "0xE96D80", VA = "0xE96D80")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xE96F40", Offset = "0xE96F40", VA = "0xE96F40")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xE96AB8", Offset = "0xE96AB8", VA = "0xE96AB8")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xE97020", Offset = "0xE97020", VA = "0xE97020")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200005B")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xE970A4", Offset = "0xE970A4", VA = "0xE970A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xE971F8", Offset = "0xE971F8", VA = "0xE971F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xE97408", Offset = "0xE97408", VA = "0xE97408")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200005C")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xE97410", Offset = "0xE97410", VA = "0xE97410")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xE975C0", Offset = "0xE975C0", VA = "0xE975C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xE97794", Offset = "0xE97794", VA = "0xE97794")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200005D")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59C4", Offset = "0xAE59C4")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0xF2CEB0", Offset = "0xF2CEB0", VA = "0xF2CEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0xF2CF18", Offset = "0xF2CF18", VA = "0xF2CF18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xF2CC94", Offset = "0xF2CC94", VA = "0xF2CC94")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xF2CCC0", Offset = "0xF2CCC0", VA = "0xF2CCC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xF2CCC4", Offset = "0xF2CCC4", VA = "0xF2CCC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xF2CEB8", Offset = "0xF2CEB8", VA = "0xF2CEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59D4", Offset = "0xAE59D4")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0xF2D17C", Offset = "0xF2D17C", VA = "0xF2D17C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0xF2D1E4", Offset = "0xF2D1E4", VA = "0xF2D1E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xF2CF20", Offset = "0xF2CF20", VA = "0xF2CF20")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xF2CF4C", Offset = "0xF2CF4C", VA = "0xF2CF4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xF2CF50", Offset = "0xF2CF50", VA = "0xF2CF50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xF2D184", Offset = "0xF2D184", VA = "0xF2D184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xE9779C", Offset = "0xE9779C", VA = "0xE9779C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xE97A50", Offset = "0xE97A50", VA = "0xE97A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xE97CC0", Offset = "0xE97CC0", VA = "0xE97CC0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xE97E30", Offset = "0xE97E30", VA = "0xE97E30")]
	public void Release()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xE97DB0", Offset = "0xE97DB0", VA = "0xE97DB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9E38", Offset = "0xAF9E38")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xE97F14", Offset = "0xE97F14", VA = "0xE97F14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9E9C", Offset = "0xAF9E9C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xE97F94", Offset = "0xE97F94", VA = "0xE97F94")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xE97FB4", Offset = "0xE97FB4", VA = "0xE97FB4")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xE97FD4", Offset = "0xE97FD4", VA = "0xE97FD4")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xE97FF4", Offset = "0xE97FF4", VA = "0xE97FF4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xE979D4", Offset = "0xE979D4", VA = "0xE979D4")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xE98058", Offset = "0xE98058", VA = "0xE98058")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE98064", Offset = "0xE98064", VA = "0xE98064")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xE97A68", Offset = "0xE97A68", VA = "0xE97A68")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xE98070", Offset = "0xE98070", VA = "0xE98070")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200005E")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xF2D1EC", Offset = "0xF2D1EC", VA = "0xF2D1EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xF2D2A4", Offset = "0xF2D2A4", VA = "0xF2D2A4")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200005F")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xE2F6F0", Offset = "0xE2F6F0", VA = "0xE2F6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xE2F8B4", Offset = "0xE2F8B4", VA = "0xE2F8B4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xE2F90C", Offset = "0xE2F90C", VA = "0xE2F90C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xE2F958", Offset = "0xE2F958", VA = "0xE2F958")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000060")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xE31B00", Offset = "0xE31B00", VA = "0xE31B00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xE31B7C", Offset = "0xE31B7C", VA = "0xE31B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xE31F18", Offset = "0xE31F18", VA = "0xE31F18")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000061")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xE32C3C", Offset = "0xE32C3C", VA = "0xE32C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE33150", Offset = "0xE33150", VA = "0xE33150")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000062")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000019")]
	public ulong anchorHandle
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xDFFAC8", Offset = "0xDFFAC8", VA = "0xDFFAC8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDFFAD0", Offset = "0xDFFAD0", VA = "0xDFFAD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xDFFB98", Offset = "0xDFFB98", VA = "0xDFFB98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xDFFE6C", Offset = "0xDFFE6C", VA = "0xDFFE6C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xDFFED8", Offset = "0xDFFED8", VA = "0xDFFED8")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDFFF40", Offset = "0xDFFF40", VA = "0xDFFF40")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDFFFA8", Offset = "0xDFFFA8", VA = "0xDFFFA8")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE000B4", Offset = "0xE000B4", VA = "0xE000B4")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE001D8", Offset = "0xE001D8", VA = "0xE001D8")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xE002F0", Offset = "0xE002F0", VA = "0xE002F0")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xE00398", Offset = "0xE00398", VA = "0xE00398")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xDFFBDC", Offset = "0xDFFBDC", VA = "0xDFFBDC")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDFFD58", Offset = "0xDFFD58", VA = "0xDFFD58")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xE003B8", Offset = "0xE003B8", VA = "0xE003B8")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xE004B8", Offset = "0xE004B8", VA = "0xE004B8")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000063")]
public class AnchorHelpers
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x1700001A")]
	private static Camera MainCamera
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xE004C0", Offset = "0xE004C0", VA = "0xE004C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xE00564", Offset = "0xE00564", VA = "0xE00564")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x600024F")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE005A0", Offset = "0xE005A0", VA = "0xE005A0")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xE00808", Offset = "0xE00808", VA = "0xE00808")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xE00964", Offset = "0xE00964", VA = "0xE00964")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xE00A2C", Offset = "0xE00A2C", VA = "0xE00A2C")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x2000064")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200049A")]
	public enum StorageLocation
	{
		[Token(Token = "0x40024C9")]
		LOCAL
	}

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400024E")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000250")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000251")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE00A34", Offset = "0xE00A34", VA = "0xE00A34", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE00780", Offset = "0xE00780", VA = "0xE00780")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE00B1C", Offset = "0xE00B1C", VA = "0xE00B1C")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x6000258")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000259")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x600025A")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x600025B")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE00B28", Offset = "0xE00B28", VA = "0xE00B28")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x2000065")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x1700001B")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xE00B98", Offset = "0xE00B98", VA = "0xE00B98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xE00BA0", Offset = "0xE00BA0", VA = "0xE00BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xE00C84", Offset = "0xE00C84", VA = "0xE00C84")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xE00E68", Offset = "0xE00E68", VA = "0xE00E68")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x2000066")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200049B")]
	public enum AnchorMode
	{
		[Token(Token = "0x40024CB")]
		Create,
		[Token(Token = "0x40024CC")]
		Select
	}

	[Token(Token = "0x200049C")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool drawRaycast_;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode mode_;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int menuIndex_;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button selectedButton_;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isFocused_;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xE00E70", Offset = "0xE00E70", VA = "0xE00E70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xE00F3C", Offset = "0xE00F3C", VA = "0xE00F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xE0108C", Offset = "0xE0108C", VA = "0xE0108C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xE01710", Offset = "0xE01710", VA = "0xE01710")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xE01780", Offset = "0xE01780", VA = "0xE01780")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xE0102C", Offset = "0xE0102C", VA = "0xE0102C")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xE01804", Offset = "0xE01804", VA = "0xE01804")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xE01878", Offset = "0xE01878", VA = "0xE01878")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xE0189C", Offset = "0xE0189C", VA = "0xE0189C")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xE017E0", Offset = "0xE017E0", VA = "0xE017E0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xE013F0", Offset = "0xE013F0", VA = "0xE013F0")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xE019D4", Offset = "0xE019D4", VA = "0xE019D4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xE01910", Offset = "0xE01910", VA = "0xE01910")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xE01940", Offset = "0xE01940", VA = "0xE01940")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xE01AD4", Offset = "0xE01AD4", VA = "0xE01AD4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xE01960", Offset = "0xE01960", VA = "0xE01960")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xE0199C", Offset = "0xE0199C", VA = "0xE0199C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xE0118C", Offset = "0xE0118C", VA = "0xE0118C")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xE01B34", Offset = "0xE01B34", VA = "0xE01B34")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xE01B50", Offset = "0xE01B50", VA = "0xE01B50")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xE01BDC", Offset = "0xE01BDC", VA = "0xE01BDC")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xE01D34", Offset = "0xE01D34", VA = "0xE01D34")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x4000267")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xE364CC", Offset = "0xE364CC", VA = "0xE364CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xE36668", Offset = "0xE36668", VA = "0xE36668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xE36804", Offset = "0xE36804", VA = "0xE36804")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xE369D4", Offset = "0xE369D4", VA = "0xE369D4")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xE36E10", Offset = "0xE36E10", VA = "0xE36E10")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xE3708C", Offset = "0xE3708C", VA = "0xE3708C")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xE37738", Offset = "0xE37738", VA = "0xE37738")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xE36D3C", Offset = "0xE36D3C", VA = "0xE36D3C")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xE3732C", Offset = "0xE3732C", VA = "0xE3732C")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xE368E0", Offset = "0xE368E0", VA = "0xE368E0")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE37938", Offset = "0xE37938", VA = "0xE37938")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xE37B98", Offset = "0xE37B98", VA = "0xE37B98", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xE37D18", Offset = "0xE37D18", VA = "0xE37D18", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xE37EAC", Offset = "0xE37EAC", VA = "0xE37EAC", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xE3804C", Offset = "0xE3804C", VA = "0xE3804C")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xE382A0", Offset = "0xE382A0", VA = "0xE382A0", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xE3837C", Offset = "0xE3837C", VA = "0xE3837C", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xE38584", Offset = "0xE38584", VA = "0xE38584")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000068")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200049D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59E4", Offset = "0xAE59E4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x10F9648", Offset = "0x10F9648", VA = "0x10F9648")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x10F9758", Offset = "0x10F9758", VA = "0x10F9758")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x10F9480", Offset = "0x10F9480", VA = "0x10F9480")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x10F9650", Offset = "0x10F9650", VA = "0x10F9650")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x10F9750", Offset = "0x10F9750", VA = "0x10F9750")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000069")]
public class ModularTunnelGenerator : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform startPoint;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] tunnelPieces;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] pitstops;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] scenicPieces;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject torus;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9A18", Offset = "0xAE9A18")]
	[SerializeField]
	private int tunnelLength;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private int numberOfPitstops;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int numberOfScenics;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 nextPosition;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion nextRotation;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] pitstopIndexes;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] scenicIndexes;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xE5CF00", Offset = "0xE5CF00", VA = "0xE5CF00")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xE5CF04", Offset = "0xE5CF04", VA = "0xE5CF04")]
	public void GenerateTunnel()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xE5D264", Offset = "0xE5D264", VA = "0xE5D264")]
	private void SetPitstops()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xE5D360", Offset = "0xE5D360", VA = "0xE5D360")]
	private void SetScenics()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xE5D45C", Offset = "0xE5D45C", VA = "0xE5D45C")]
	private void GeneratePiece(GameObject piece1, GameObject piece2, int randomIndex, GameObject[] set)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xE5D7AC", Offset = "0xE5D7AC", VA = "0xE5D7AC")]
	public ModularTunnelGenerator()
	{
	}
}
[Token(Token = "0x200006A")]
public class PitstopRoomGenerator : MonoBehaviour
{
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE59F4", Offset = "0xAE59F4")]
	private sealed class <GenerateRooms>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PitstopRoomGenerator <>4__this;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <specialRoomCount>5__2;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <predCount>5__3;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0xF339B8", Offset = "0xF339B8", VA = "0xF339B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0xF33A20", Offset = "0xF33A20", VA = "0xF33A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xF32AA0", Offset = "0xF32AA0", VA = "0xF32AA0")]
		[DebuggerHidden]
		public <GenerateRooms>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xF33290", Offset = "0xF33290", VA = "0xF33290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xF33294", Offset = "0xF33294", VA = "0xF33294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xF339C0", Offset = "0xF339C0", VA = "0xF339C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A04", Offset = "0xAE5A04")]
	private sealed class <ClearGeneratedRoomsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] listCopy;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002029")]
			[Address(RVA = "0xF33220", Offset = "0xF33220", VA = "0xF33220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0xF33288", Offset = "0xF33288", VA = "0xF33288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xF32EF0", Offset = "0xF32EF0", VA = "0xF32EF0")]
		[DebuggerHidden]
		public <ClearGeneratedRoomsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xF32FB4", Offset = "0xF32FB4", VA = "0xF32FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xF32FB8", Offset = "0xF32FB8", VA = "0xF32FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xF33228", Offset = "0xF33228", VA = "0xF33228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PrefabLibraryScriptableObject randomizedRoomsList;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] predeterminedRooms;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] specialRooms;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material wallMaterial;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material floorMaterial;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PhysicMaterial floorPhysicMaterial;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LightProbeUsage chamberLightProbeUsage;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ReflectionProbeUsage chamberReflectionProbeUsage;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LightProbeUsage propsLightProbeUsage;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private ReflectionProbeUsage propsReflectionProbeUsage;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9B1C", Offset = "0xAE9B1C")]
	[SerializeField]
	private float specialRoomSpawnChance;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> roomSpawnPoints;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LevelLootManager lootManager;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasGenerated;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool generateOnStart;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> _generatedRooms;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _lastGeneratedTime;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PitstopRoomGenerator _lastPitstop;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NavMeshLink[] _navMeshLinks;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xF32008", Offset = "0xF32008", VA = "0xF32008")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xF32314", Offset = "0xF32314", VA = "0xF32314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xF32324", Offset = "0xF32324", VA = "0xF32324")]
	public void StartGeneration()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xF32A30", Offset = "0xF32A30", VA = "0xF32A30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9F00", Offset = "0xAF9F00")]
	private IEnumerator GenerateRooms()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xF32ACC", Offset = "0xF32ACC", VA = "0xF32ACC")]
	private GameObject GenerateRoom(int i, GameObject[] pool, int index = -1)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xF329A8", Offset = "0xF329A8", VA = "0xF329A8")]
	public void ClearGeneratedRooms()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xF32E80", Offset = "0xF32E80", VA = "0xF32E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9F64", Offset = "0xAF9F64")]
	private IEnumerator ClearGeneratedRoomsCoroutine(GameObject[] listCopy)
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xF32F1C", Offset = "0xF32F1C", VA = "0xF32F1C")]
	public PitstopRoomGenerator()
	{
	}
}
[Token(Token = "0x200006B")]
public class RenderTargetDebug : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xE2C9FC", Offset = "0xE2C9FC", VA = "0xE2C9FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xE2CB14", Offset = "0xE2CB14", VA = "0xE2CB14")]
	private void Update()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xE2CC50", Offset = "0xE2CC50", VA = "0xE2CC50")]
	public RenderTargetDebug()
	{
	}
}
[Token(Token = "0x200006C")]
public static class Bezier
{
	[Token(Token = "0x600029D")]
	[Address(RVA = "0xE08C4C", Offset = "0xE08C4C", VA = "0xE08C4C")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xE08DD8", Offset = "0xE08DD8", VA = "0xE08DD8")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xE08F34", Offset = "0xE08F34", VA = "0xE08F34")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xE0912C", Offset = "0xE0912C", VA = "0xE0912C")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200006D")]
public class CurveGenerator : MonoBehaviour
{
	[Token(Token = "0x20004A0")]
	private enum BezierControlPointMode
	{
		[Token(Token = "0x40024DB")]
		Free,
		[Token(Token = "0x40024DC")]
		Aligned,
		[Token(Token = "0x40024DD")]
		Mirrored
	}

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] points;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] items;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool loop;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frequency;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool customTracer;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rescalePointerTracer;

	[Token(Token = "0x1700001C")]
	private bool Loop
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xE808B0", Offset = "0xE808B0", VA = "0xE808B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xE808B8", Offset = "0xE808B8", VA = "0xE808B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	private int ControlPointCount
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xE80DE8", Offset = "0xE80DE8", VA = "0xE80DE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001E")]
	private int CurveCount
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xE81140", Offset = "0xE81140", VA = "0xE81140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xE80108", Offset = "0xE80108", VA = "0xE80108")]
	public void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xE80464", Offset = "0xE80464", VA = "0xE80464")]
	public void SetPoints(Vector3[] controlPoints, Material material, Color color)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xE8087C", Offset = "0xE8087C", VA = "0xE8087C")]
	public void TogglePoints(bool state)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xE80380", Offset = "0xE80380", VA = "0xE80380")]
	private GameObject CreateSphere()
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xE80E04", Offset = "0xE80E04", VA = "0xE80E04")]
	private Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xE8092C", Offset = "0xE8092C", VA = "0xE8092C")]
	private void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xE80E4C", Offset = "0xE80E4C", VA = "0xE80E4C")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xE81178", Offset = "0xE81178", VA = "0xE81178")]
	private Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xE80508", Offset = "0xE80508", VA = "0xE80508")]
	private void SetObjects(Material material, Color color)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xE81340", Offset = "0xE81340", VA = "0xE81340")]
	private void setMaterial(GameObject item, Material material, Color color)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xE81578", Offset = "0xE81578", VA = "0xE81578")]
	public CurveGenerator()
	{
	}
}
[Token(Token = "0x200006E")]
public class AchievementMenu : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] achievementIcons;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] achievedSprites;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] unAchievedSprites;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementMenu singleton;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _visible;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDF92C0", Offset = "0xDF92C0", VA = "0xDF92C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xDF9480", Offset = "0xDF9480", VA = "0xDF9480")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDF931C", Offset = "0xDF931C", VA = "0xDF931C")]
	public void updateAchievementIcons()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDF957C", Offset = "0xDF957C", VA = "0xDF957C")]
	public AchievementMenu()
	{
	}
}
[Token(Token = "0x200006F")]
public class AmbientAudioCullingGroup : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AmbientAudioCullingGroup singleton;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AudioSource> _sphereAudioSources;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _groupChanged;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDF99A8", Offset = "0xDF99A8", VA = "0xDF99A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xDF9C30", Offset = "0xDF9C30", VA = "0xDF9C30")]
	public void AddCullingSphere(AudioSource obj)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDF9DB0", Offset = "0xDF9DB0", VA = "0xDF9DB0")]
	public void RemoveCullingSphere(AudioSource obj)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xDF9E8C", Offset = "0xDF9E8C", VA = "0xDF9E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xDFA070", Offset = "0xDFA070", VA = "0xDFA070")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xDFA3F4", Offset = "0xDFA3F4", VA = "0xDFA3F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDFA410", Offset = "0xDFA410", VA = "0xDFA410")]
	public AmbientAudioCullingGroup()
	{
	}
}
[Token(Token = "0x2000070")]
public class AndroidSettings : MonoBehaviour
{
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A14", Offset = "0xAE5A14")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <tries>5__3;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xE02CAC", Offset = "0xE02CAC", VA = "0xE02CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xE02D14", Offset = "0xE02D14", VA = "0xE02D14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xE01FF0", Offset = "0xE01FF0", VA = "0xE01FF0")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xE02864", Offset = "0xE02864", VA = "0xE02864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xE02868", Offset = "0xE02868", VA = "0xE02868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xE02CB4", Offset = "0xE02CB4", VA = "0xE02CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] stuffToDisableOnAndroid;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject devMenu;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fps;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShaderVariantCollection shaderVariantCollection;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action qualityChanged;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool lowrez;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool rendering;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _nextCheck;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _nextDebug;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _nextFrameCountCheck;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _oldRez;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float targetQuality;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _lastGpuLevel;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastViewportScale;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xE01D7C", Offset = "0xE01D7C", VA = "0xE01D7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xE01F90", Offset = "0xE01F90", VA = "0xE01F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAF9FC8", Offset = "0xAF9FC8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xE0201C", Offset = "0xE0201C", VA = "0xE0201C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xE02278", Offset = "0xE02278", VA = "0xE02278")]
	private float GetTargetQuality()
	{
		return default(float);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xE02330", Offset = "0xE02330", VA = "0xE02330")]
	public void ToggleLowRezRender()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xE02444", Offset = "0xE02444", VA = "0xE02444")]
	public void ToggleRendering()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xE02588", Offset = "0xE02588", VA = "0xE02588")]
	public void ToggleDevMenu(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xE026C8", Offset = "0xE026C8", VA = "0xE026C8")]
	public void ToggleFPS(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xE02808", Offset = "0xE02808", VA = "0xE02808")]
	public AndroidSettings()
	{
	}
}
[Token(Token = "0x2000071")]
public class AnnunakiEnding : MonoBehaviour
{
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A24", Offset = "0xAE5A24")]
	private sealed class <AlienSequence>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnnunakiEnding <>4__this;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <origRotation>5__3;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <annuLevitatePos>5__4;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody <gunRb>5__5;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0xE04A70", Offset = "0xE04A70", VA = "0xE04A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0xE04AD8", Offset = "0xE04AD8", VA = "0xE04AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xE030DC", Offset = "0xE030DC", VA = "0xE030DC")]
		[DebuggerHidden]
		public <AlienSequence>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xE03110", Offset = "0xE03110", VA = "0xE03110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xE03114", Offset = "0xE03114", VA = "0xE03114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xE04A78", Offset = "0xE04A78", VA = "0xE04A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnnunakiEnding singleton;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bigAllu;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform armada;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] alluTargets;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material skybox;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform playerTeleportSpot;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject annuObject;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject magneticGunPrefab;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject beamLightcone;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip snapClip;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform goldStatues;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform gunSpawn;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator annuAnimator;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip levitateDownClip;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xE02D1C", Offset = "0xE02D1C", VA = "0xE02D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xE02DCC", Offset = "0xE02DCC", VA = "0xE02DCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xE02E20", Offset = "0xE02E20", VA = "0xE02E20")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xE02F8C", Offset = "0xE02F8C", VA = "0xE02F8C")]
	public void SubscribeTownEvent()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xE02EBC", Offset = "0xE02EBC", VA = "0xE02EBC")]
	public void StartEvent()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xE0306C", Offset = "0xE0306C", VA = "0xE0306C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB02C", Offset = "0xAFB02C")]
	private IEnumerator AlienSequence()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xE03108", Offset = "0xE03108", VA = "0xE03108")]
	public AnnunakiEnding()
	{
	}
}
[Token(Token = "0x2000072")]
public class AnnunakiStatue : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A34", Offset = "0xAE5A34")]
	private sealed class <LerpMaterialGoldness>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float target;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float current;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnnunakiStatue <>4__this;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <f>5__2;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xE05558", Offset = "0xE05558", VA = "0xE05558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xE055C0", Offset = "0xE055C0", VA = "0xE055C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xE052E0", Offset = "0xE052E0", VA = "0xE052E0")]
		[DebuggerHidden]
		public <LerpMaterialGoldness>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xE053E8", Offset = "0xE053E8", VA = "0xE053E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xE053EC", Offset = "0xE053EC", VA = "0xE053EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xE05560", Offset = "0xE05560", VA = "0xE05560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A44", Offset = "0xAE5A44")]
	private sealed class <NomNomSequence>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnnunakiStatue <>4__this;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int chomps;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <chompTime>5__2;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xE05828", Offset = "0xE05828", VA = "0xE05828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xE05890", Offset = "0xE05890", VA = "0xE05890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xE0530C", Offset = "0xE0530C", VA = "0xE0530C")]
		[DebuggerHidden]
		public <NomNomSequence>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xE055C8", Offset = "0xE055C8", VA = "0xE055C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xE055CC", Offset = "0xE055CC", VA = "0xE055CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xE05830", Offset = "0xE05830", VA = "0xE05830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A54", Offset = "0xAE5A54")]
	private sealed class <StatueAwakeSequence>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnnunakiStatue <>4__this;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xE05D1C", Offset = "0xE05D1C", VA = "0xE05D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0xE05D84", Offset = "0xE05D84", VA = "0xE05D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xE053A8", Offset = "0xE053A8", VA = "0xE053A8")]
		[DebuggerHidden]
		public <StatueAwakeSequence>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xE05898", Offset = "0xE05898", VA = "0xE05898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xE0589C", Offset = "0xE0589C", VA = "0xE0589C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xE05D24", Offset = "0xE05D24", VA = "0xE05D24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mouth;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform face;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] eyeRenderers;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9B5C", Offset = "0xAE9B5C")]
	public int statueIndex;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int moneyGoal;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource nomnomSource;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip nomClip;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip earthquakeClip;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color eyeInactive;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color eyeStart;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color eyeGoal;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material _mat;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer[] _rends;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool woke;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool nomming;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _LerpTargetID;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _currentGoldness;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine _lerpCoroutine;

	[Token(Token = "0x40002CE")]
	private const float mouthUp = 0.044f;

	[Token(Token = "0x40002CF")]
	private const float mouthDown = -0.26f;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool wokeEventStarted;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xE04AE0", Offset = "0xE04AE0", VA = "0xE04AE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xE04BAC", Offset = "0xE04BAC", VA = "0xE04BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xE04FD8", Offset = "0xE04FD8", VA = "0xE04FD8")]
	public bool GetWoke()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xE04FE0", Offset = "0xE04FE0", VA = "0xE04FE0")]
	public void AddMoney(int money)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xE04E40", Offset = "0xE04E40", VA = "0xE04E40")]
	private void GoldMaterialLerp(float t)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xE0524C", Offset = "0xE0524C", VA = "0xE0524C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB090", Offset = "0xAFB090")]
	private IEnumerator LerpMaterialGoldness(float time, float target, float current)
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xE04D10", Offset = "0xE04D10", VA = "0xE04D10")]
	private void InitSaveStuff()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xE051CC", Offset = "0xE051CC", VA = "0xE051CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB0F4", Offset = "0xAFB0F4")]
	private IEnumerator NomNomSequence(int chomps)
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xE04DF4", Offset = "0xE04DF4", VA = "0xE04DF4")]
	private void StatueAwake()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xE05338", Offset = "0xE05338", VA = "0xE05338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB158", Offset = "0xAFB158")]
	private IEnumerator StatueAwakeSequence()
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xE053D4", Offset = "0xE053D4", VA = "0xE053D4")]
	public AnnunakiStatue()
	{
	}
}
[Token(Token = "0x2000073")]
public class AnnunakiStatueLootTrigger : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask lootLayers;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnnunakiStatue annunakiStatue;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xE05D8C", Offset = "0xE05D8C", VA = "0xE05D8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xE05F1C", Offset = "0xE05F1C", VA = "0xE05F1C")]
	public AnnunakiStatueLootTrigger()
	{
	}
}
[Token(Token = "0x2000074")]
public class AppEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xE06854", Offset = "0xE06854", VA = "0xE06854")]
	public AppEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000075")]
public class ArmadaHover : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float frequency;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> armada;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xE0685C", Offset = "0xE0685C", VA = "0xE0685C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xE06908", Offset = "0xE06908", VA = "0xE06908")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xE06AC4", Offset = "0xE06AC4", VA = "0xE06AC4")]
	public ArmadaHover()
	{
	}
}
[Token(Token = "0x2000076")]
public class AroundLootDetector : MonoBehaviour
{
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A64", Offset = "0xAE5A64")]
	private sealed class <lootCheck>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AroundLootDetector <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0xE07030", Offset = "0xE07030", VA = "0xE07030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0xE07098", Offset = "0xE07098", VA = "0xE07098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xE06D18", Offset = "0xE06D18", VA = "0xE06D18")]
		[DebuggerHidden]
		public <lootCheck>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xE06D4C", Offset = "0xE06D4C", VA = "0xE06D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xE06D50", Offset = "0xE06D50", VA = "0xE06D50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xE07038", Offset = "0xE07038", VA = "0xE07038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 targetOldPos;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LootChestAICore chestAI;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetLoot;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider searchRegion;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xE06B3C", Offset = "0xE06B3C", VA = "0xE06B3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xE06CA8", Offset = "0xE06CA8", VA = "0xE06CA8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xE06C38", Offset = "0xE06C38", VA = "0xE06C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB1BC", Offset = "0xAFB1BC")]
	private IEnumerator lootCheck()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xE06D44", Offset = "0xE06D44", VA = "0xE06D44")]
	public AroundLootDetector()
	{
	}
}
[Token(Token = "0x2000077")]
public class AudioReverbZoneHandler : MonoBehaviour
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioReverbZone townReverbZone;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioReverbZone tunnelReverbZone;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xE0868C", Offset = "0xE0868C", VA = "0xE0868C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xE085D0", Offset = "0xE085D0", VA = "0xE085D0")]
	public void TunnelReverbActive(bool value)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xE086EC", Offset = "0xE086EC", VA = "0xE086EC")]
	public AudioReverbZoneHandler()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteInEditMode]
public class BetaBuildDateText : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _textComponent;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xE08ABC", Offset = "0xE08ABC", VA = "0xE08ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xE08BE4", Offset = "0xE08BE4", VA = "0xE08BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xE08C44", Offset = "0xE08C44", VA = "0xE08C44")]
	public BetaBuildDateText()
	{
	}
}
[Token(Token = "0x2000079")]
[ExecuteInEditMode]
public class BlinderMaskController : MonoBehaviour
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] blinderRenderers;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yClipPosition;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _previousY;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _opacityMaskId;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _sharedMaterial;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xE6A2B8", Offset = "0xE6A2B8", VA = "0xE6A2B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xE6A344", Offset = "0xE6A344", VA = "0xE6A344")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xE6A3E8", Offset = "0xE6A3E8", VA = "0xE6A3E8")]
	public BlinderMaskController()
	{
	}
}
[Token(Token = "0x200007A")]
public class BlockWallGenerator : MonoBehaviour
{
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A74", Offset = "0xAE5A74")]
	private sealed class <GenerateBlockWall>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlockWallGenerator <>4__this;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int leaveEmptyAmount;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <voxelAmount>5__3;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waitTime>5__4;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <level>5__5;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__6;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <n>5__7;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <selectedVoxel>5__8;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MineBlock <newBlock>5__9;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] <>7__wrap9;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <>7__wrap10;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <voxel>5__12;

		[Token(Token = "0x17000194")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0xE6CFF0", Offset = "0xE6CFF0", VA = "0xE6CFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0xE6D058", Offset = "0xE6D058", VA = "0xE6D058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xE6AE00", Offset = "0xE6AE00", VA = "0xE6AE00")]
		[DebuggerHidden]
		public <GenerateBlockWall>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xE6B4BC", Offset = "0xE6B4BC", VA = "0xE6B4BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xE6B4C0", Offset = "0xE6B4C0", VA = "0xE6B4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xE6CFF8", Offset = "0xE6CFF8", VA = "0xE6CFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showGizmos;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool gizmosOpaque;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool allowSpecialLoots;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rows;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int columns;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxOtherBlocks;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool[] voxelOccupied;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _hasGenerated;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9B74", Offset = "0xAE9B74")]
	private float <GraniteBlockChance>k__BackingField;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9B84", Offset = "0xAE9B84")]
	private float <LimestoneBlockChance>k__BackingField;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9B94", Offset = "0xAE9B94")]
	private readonly List<MineBlock> <GetMyBlocks>k__BackingField;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelLootManager levelLootManager;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Vector3> emptySpots;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 hotspotSpawnDirection;

	[Token(Token = "0x1700001F")]
	public float GraniteBlockChance
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xE6A3F0", Offset = "0xE6A3F0", VA = "0xE6A3F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB220", Offset = "0xAFB220")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xE6A3F8", Offset = "0xE6A3F8", VA = "0xE6A3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB230", Offset = "0xAFB230")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float LimestoneBlockChance
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xE6A400", Offset = "0xE6A400", VA = "0xE6A400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB240", Offset = "0xAFB240")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xE6A408", Offset = "0xE6A408", VA = "0xE6A408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB250", Offset = "0xAFB250")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public List<MineBlock> GetMyBlocks
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xE6A410", Offset = "0xE6A410", VA = "0xE6A410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB260", Offset = "0xAFB260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xE6A418", Offset = "0xE6A418", VA = "0xE6A418")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xE6A48C", Offset = "0xE6A48C", VA = "0xE6A48C")]
	public void ResetAndRepool()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xE6A6C4", Offset = "0xE6A6C4", VA = "0xE6A6C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xE6AD70", Offset = "0xE6AD70", VA = "0xE6AD70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB270", Offset = "0xAFB270")]
	public IEnumerator<float> GenerateBlockWall(int leaveEmptyAmount, float time)
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xE6AE2C", Offset = "0xE6AE2C", VA = "0xE6AE2C")]
	private void SetMineblockType(MineBlock newBlock, float random)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xE6B0F0", Offset = "0xE6B0F0", VA = "0xE6B0F0")]
	public List<FracturedChunk> GetAllChunks()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xE6B298", Offset = "0xE6B298", VA = "0xE6B298")]
	public List<MineBlock> GetChunkTypes(MineBlock.RockType type)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xE6B3EC", Offset = "0xE6B3EC", VA = "0xE6B3EC")]
	public BlockWallGenerator()
	{
	}
}
[Token(Token = "0x200007B")]
public class BlockyHandAnimController : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTK_InteractGrab grab;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fist;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject idle;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xE6D0BC", Offset = "0xE6D0BC", VA = "0xE6D0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xE6D1AC", Offset = "0xE6D1AC", VA = "0xE6D1AC")]
	public void Grab(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xE6D1F0", Offset = "0xE6D1F0", VA = "0xE6D1F0")]
	public void Release(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xE6D234", Offset = "0xE6D234", VA = "0xE6D234")]
	public BlockyHandAnimController()
	{
	}
}
[Token(Token = "0x200007C")]
public class BlockyVRMineblock : MineBlock
{
	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xE6D23C", Offset = "0xE6D23C", VA = "0xE6D23C")]
	public BlockyVRMineblock()
	{
	}
}
[Token(Token = "0x200007D")]
public class BrokenTracks : MonoBehaviour
{
	[Token(Token = "0x20004A8")]
	public enum BridgeType
	{
		[Token(Token = "0x400250D")]
		Broken,
		[Token(Token = "0x400250E")]
		Levitation
	}

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BridgeType bridgeType;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BrokenTracks singletonBroken;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BrokenTracks singletonLevitation;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] brokenTracks;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] fixedTracks;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Spline caveTrack;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Spline fixedBridgeTrack;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xE6D2A4", Offset = "0xE6D2A4", VA = "0xE6D2A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xE6D320", Offset = "0xE6D320", VA = "0xE6D320")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xE6D3E4", Offset = "0xE6D3E4", VA = "0xE6D3E4")]
	public void FixTracks(bool value)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xE6D560", Offset = "0xE6D560", VA = "0xE6D560")]
	public BrokenTracks()
	{
	}
}
[Token(Token = "0x200007E")]
public class BucketItem : PlayerItem
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9BA4", Offset = "0xAE9BA4")]
	private float <OilLevel>k__BackingField;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject oilMesh;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform minPos;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform maxPos;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform bucketTransform;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ParticleSystem oilPouringParticle;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private AudioSource _oilAudio;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Collider bucketCollider;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Rigidbody containerRigidbody;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 _originalContainerLocalposition;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Quaternion _originalContainerLocalrotation;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public bool bucketHandleJointDebug;

	[Token(Token = "0x17000022")]
	public float OilLevel
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xE6DEF4", Offset = "0xE6DEF4", VA = "0xE6DEF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB2D4", Offset = "0xAFB2D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xE6DEFC", Offset = "0xE6DEFC", VA = "0xE6DEFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB2E4", Offset = "0xAFB2E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xE6DF04", Offset = "0xE6DF04", VA = "0xE6DF04", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xE6E000", Offset = "0xE6E000", VA = "0xE6E000", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xE6E08C", Offset = "0xE6E08C", VA = "0xE6E08C", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xE6E0D0", Offset = "0xE6E0D0", VA = "0xE6E0D0", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xE6E254", Offset = "0xE6E254", VA = "0xE6E254")]
	public void AddOil()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xE6E2E4", Offset = "0xE6E2E4", VA = "0xE6E2E4")]
	private void ReScaleOilMesh()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xE6E500", Offset = "0xE6E500", VA = "0xE6E500")]
	public void CashInAllOil()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xE6E6BC", Offset = "0xE6E6BC", VA = "0xE6E6BC", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xE6EAFC", Offset = "0xE6EAFC", VA = "0xE6EAFC")]
	public BucketItem()
	{
	}
}
[Token(Token = "0x200007F")]
public class CameraFader : MonoBehaviour
{
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A84", Offset = "0xAE5A84")]
	private sealed class <FadeIn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFader <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0xE704D0", Offset = "0xE704D0", VA = "0xE704D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xE70538", Offset = "0xE70538", VA = "0xE70538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xE70240", Offset = "0xE70240", VA = "0xE70240")]
		[DebuggerHidden]
		public <FadeIn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xE70358", Offset = "0xE70358", VA = "0xE70358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xE7035C", Offset = "0xE7035C", VA = "0xE7035C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xE704D8", Offset = "0xE704D8", VA = "0xE704D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5A94", Offset = "0xAE5A94")]
	private sealed class <OkButton>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFader <>4__this;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpriteRenderer <renderer>5__3;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <alpha>5__4;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <a>5__5;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__6;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0xE708E8", Offset = "0xE708E8", VA = "0xE708E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0xE70950", Offset = "0xE70950", VA = "0xE70950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xE702DC", Offset = "0xE702DC", VA = "0xE702DC")]
		[DebuggerHidden]
		public <OkButton>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xE70540", Offset = "0xE70540", VA = "0xE70540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xE70544", Offset = "0xE70544", VA = "0xE70544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xE708F0", Offset = "0xE708F0", VA = "0xE708F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int oldMask;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xE700D0", Offset = "0xE700D0", VA = "0xE700D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xE701D0", Offset = "0xE701D0", VA = "0xE701D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB2F4", Offset = "0xAFB2F4")]
	private IEnumerator FadeIn(float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xE7026C", Offset = "0xE7026C", VA = "0xE7026C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB358", Offset = "0xAFB358")]
	private IEnumerator OkButton()
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xE70308", Offset = "0xE70308", VA = "0xE70308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xE70350", Offset = "0xE70350", VA = "0xE70350")]
	public CameraFader()
	{
	}
}
[Token(Token = "0x2000080")]
[SelectionBase]
public class Candle : PlayerItem
{
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AA4", Offset = "0xAE5AA4")]
	private sealed class <DelayedSpikeEnable>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Candle <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0xE70ECC", Offset = "0xE70ECC", VA = "0xE70ECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0xE70F34", Offset = "0xE70F34", VA = "0xE70F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xE70AE4", Offset = "0xE70AE4", VA = "0xE70AE4")]
		[DebuggerHidden]
		public <DelayedSpikeEnable>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xE70DFC", Offset = "0xE70DFC", VA = "0xE70DFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xE70E00", Offset = "0xE70E00", VA = "0xE70E00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xE70ED4", Offset = "0xE70ED4", VA = "0xE70ED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform playerHDM;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float checkFrequencyTimer;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool _eyePoked;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip hurtClip;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform rigidbodyCenter;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public CandleSpike spike;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xE70958", Offset = "0xE70958", VA = "0xE70958", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xE70A74", Offset = "0xE70A74", VA = "0xE70A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB3BC", Offset = "0xAFB3BC")]
	private IEnumerator DelayedSpikeEnable()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xE70B10", Offset = "0xE70B10", VA = "0xE70B10", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xE70D38", Offset = "0xE70D38", VA = "0xE70D38", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xE70DE0", Offset = "0xE70DE0", VA = "0xE70DE0")]
	public void Ungrab()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xE70DF4", Offset = "0xE70DF4", VA = "0xE70DF4")]
	public Candle()
	{
	}
}
[Token(Token = "0x2000081")]
public class CandleSpike : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Candle candle;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ItemPositionResetter itemPositionResetter;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask candleAttachLayers;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Collider> _currentTriggering;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _triggerTimer;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MineBlock _attachedMineblock;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xE70F3C", Offset = "0xE70F3C", VA = "0xE70F3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xE710D0", Offset = "0xE710D0", VA = "0xE710D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xE711FC", Offset = "0xE711FC", VA = "0xE711FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xE71180", Offset = "0xE71180", VA = "0xE71180")]
	private void Reset()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xE71290", Offset = "0xE71290", VA = "0xE71290")]
	private void Attach()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xE715D8", Offset = "0xE715D8", VA = "0xE715D8")]
	public CandleSpike()
	{
	}
}
[Token(Token = "0x2000082")]
public class CaveAreaBoundingSphere : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sphereOffset;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sphereSize;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xE71648", Offset = "0xE71648", VA = "0xE71648")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xE717D0", Offset = "0xE717D0", VA = "0xE717D0")]
	public CaveAreaBoundingSphere()
	{
	}
}
[Token(Token = "0x2000083")]
public class CaveAreaCullingGroup : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CaveAreaCullingGroup singleton;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _sphereGameobjects;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _groupChanged;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] areaArray;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<GameObject, Renderer[]> _rendererDictionary;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool disableAll;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xE717E0", Offset = "0xE717E0", VA = "0xE717E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xE71ED0", Offset = "0xE71ED0", VA = "0xE71ED0")]
	public static void SetDisableAll(bool status)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xE71AD8", Offset = "0xE71AD8", VA = "0xE71AD8")]
	public void AddCullingSphere(GameObject obj, Vector3 position, float scale)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xE72514", Offset = "0xE72514", VA = "0xE72514")]
	public void RemoveCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xE72618", Offset = "0xE72618", VA = "0xE72618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xE72814", Offset = "0xE72814", VA = "0xE72814")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xE72A60", Offset = "0xE72A60", VA = "0xE72A60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xE72A7C", Offset = "0xE72A7C", VA = "0xE72A7C")]
	public CaveAreaCullingGroup()
	{
	}
}
[Token(Token = "0x2000084")]
public class Chamber : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 flipScale;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer wallRenderer;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer floorRenderer;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Renderer> miscRenderers;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] miscGameObjects;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] floorColliders;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform probeAnchorPoint;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xE72B44", Offset = "0xE72B44", VA = "0xE72B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xE72CBC", Offset = "0xE72CBC", VA = "0xE72CBC")]
	public void SetAllRendererMaterials(Material mat)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xE72DC0", Offset = "0xE72DC0", VA = "0xE72DC0")]
	public void SetWallRendererMaterial(Material mat)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xE72FBC", Offset = "0xE72FBC", VA = "0xE72FBC")]
	public void SetMiscRendererMaterial(Material mat)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xE72EC4", Offset = "0xE72EC4", VA = "0xE72EC4")]
	public void SetFloorRendererMaterial(Material mat)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xE731A4", Offset = "0xE731A4", VA = "0xE731A4")]
	public void SetFloorPhysicMaterial(PhysicMaterial physMat)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xE73324", Offset = "0xE73324", VA = "0xE73324")]
	public void SetChamberProbes(LightProbeUsage lightProbeUsage = LightProbeUsage.Off, ReflectionProbeUsage reflectionProbeUsage = ReflectionProbeUsage.Off)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xE73438", Offset = "0xE73438", VA = "0xE73438")]
	public void SetPropsProbes(LightProbeUsage lightProbeUsage = LightProbeUsage.Off, ReflectionProbeUsage reflectionProbeUsage = ReflectionProbeUsage.Off)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xE73654", Offset = "0xE73654", VA = "0xE73654")]
	public Chamber()
	{
	}
}
[Token(Token = "0x2000085")]
public class ChamberWell : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip SFXOnDrop;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask DroppedItemLayer;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float lastPlay;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xE73748", Offset = "0xE73748", VA = "0xE73748")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xE73814", Offset = "0xE73814", VA = "0xE73814")]
	private void Update()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xE73858", Offset = "0xE73858", VA = "0xE73858")]
	public ChamberWell()
	{
	}
}
[Token(Token = "0x2000086")]
public class ChaosGauntlet : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AB4", Offset = "0xAE5AB4")]
	private sealed class <FlashGemFX>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChaosGem.ChaosGemType gemType;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChaosGauntlet <>4__this;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0xE765E8", Offset = "0xE765E8", VA = "0xE765E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0xE76650", Offset = "0xE76650", VA = "0xE76650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xE7555C", Offset = "0xE7555C", VA = "0xE7555C")]
		[DebuggerHidden]
		public <FlashGemFX>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xE76454", Offset = "0xE76454", VA = "0xE76454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xE76458", Offset = "0xE76458", VA = "0xE76458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xE765F0", Offset = "0xE765F0", VA = "0xE765F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ChaosGauntlet singleton;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gauntletActive;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject normalHand;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gauntletHand;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool vacuumingGem;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool punchingGem;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool laserGem;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool chargingGem;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool worldEndGem;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject triangleGO;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject squareGO;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject roundGO;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject octagonGO;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hexagonGO;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform vacuumPoint;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip vacuumSuck;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LootPullParticles lootPullParticles;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ChaosGlovePunchTrigger chaosGlovePunchTrigger;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LayerMask lootLayer;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VRTK_InteractGrab interactGrab;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource powerChargeStartSource;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource powerChargeLoopSource;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource powerChargeEndSource;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource projectileChargeStartSource;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource projectileChargeLoopSource;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource projectileChargeEndSource;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject projectilePrefab;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform projectileHelperTransform;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Animator animator;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CustomGrabAndTelekinesis customGrab;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform chaosGauntletArmature;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem powerChargingParticle;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticleSystem lootVacuumParticles;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ParticleSystem _triangleFX;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ParticleSystem _squareFX;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ParticleSystem _roundFX;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ParticleSystem _octagonFX;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ParticleSystem _hexagonFX;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ObjectPool _powerChargingExplosionPool;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _vacuuming;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Dictionary<Rigidbody, AudioSource> _vacuumSounds;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _powerCharging;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Collider[] _buffer;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<Rigidbody> _grippedLoots;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private VRTK_ControllerReference _controllerReference;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _foundAmount;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform _playArea;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float _stopShootingTime;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float _startShootingTimer;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _laserCharging;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _laserChargingTimer;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _laserCooldownUntil;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ObjectPool _projectilePool;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject _currentProjectile;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float _powerChargingTimer;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Material _powerChargingParticleMaterial;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 _originalArmatureScale;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private List<Collider> _disabledColliders;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 _originalPunchTriggerLocalPosition;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public bool LootThrowerActive;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xE739C0", Offset = "0xE739C0", VA = "0xE739C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xE741B0", Offset = "0xE741B0", VA = "0xE741B0")]
	public void StartVacuuming(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xE742D4", Offset = "0xE742D4", VA = "0xE742D4")]
	public void StopVacuuming(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xE742D8", Offset = "0xE742D8", VA = "0xE742D8")]
	public void StopVacuumingProcess()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xE74D14", Offset = "0xE74D14", VA = "0xE74D14")]
	public void StartCharging(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xE74DEC", Offset = "0xE74DEC", VA = "0xE74DEC")]
	internal float GetChargingPower()
	{
		return default(float);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xE74DF4", Offset = "0xE74DF4", VA = "0xE74DF4")]
	public void StopCharging(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xE74E40", Offset = "0xE74E40", VA = "0xE74E40")]
	internal void ResetCharge()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xE73E74", Offset = "0xE73E74", VA = "0xE73E74")]
	public void GauntletPurchased()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xE74E4C", Offset = "0xE74E4C", VA = "0xE74E4C")]
	public void PullLoots()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xE7435C", Offset = "0xE7435C", VA = "0xE7435C")]
	public void DropLoots()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xE75454", Offset = "0xE75454", VA = "0xE75454")]
	public Transform GetGemSpot(ChaosGem.ChaosGemType gemType)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xE73F04", Offset = "0xE73F04", VA = "0xE73F04")]
	public void ActivateGem(ChaosGem.ChaosGemType gemType, bool instant = false)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xE754CC", Offset = "0xE754CC", VA = "0xE754CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB420", Offset = "0xAFB420")]
	private IEnumerator FlashGemFX(ChaosGem.ChaosGemType gemType, float time)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xE75588", Offset = "0xE75588", VA = "0xE75588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xE762C0", Offset = "0xE762C0", VA = "0xE762C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xE7637C", Offset = "0xE7637C", VA = "0xE7637C")]
	public ChaosGauntlet()
	{
	}
}
[Token(Token = "0x2000087")]
public class ChaosGem : GrabbableItem
{
	[Token(Token = "0x20004AD")]
	public enum ChaosGemType
	{
		[Token(Token = "0x4002523")]
		triangle,
		[Token(Token = "0x4002524")]
		square,
		[Token(Token = "0x4002525")]
		round,
		[Token(Token = "0x4002526")]
		octagon,
		[Token(Token = "0x4002527")]
		hexagon
	}

	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AC4", Offset = "0xAE5AC4")]
	private sealed class <ActivationSequence>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChaosGem <>4__this;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startScale>5__4;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <followTime>5__5;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0xE76E10", Offset = "0xE76E10", VA = "0xE76E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0xE76E78", Offset = "0xE76E78", VA = "0xE76E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xE767B8", Offset = "0xE767B8", VA = "0xE767B8")]
		[DebuggerHidden]
		public <ActivationSequence>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xE76964", Offset = "0xE76964", VA = "0xE76964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xE76968", Offset = "0xE76968", VA = "0xE76968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xE76E18", Offset = "0xE76E18", VA = "0xE76E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public ChaosGemType gemType;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Transform targetTransform;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool _movingSequenceActive;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float _followTimeLeft;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public AudioSource ambientLoop;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public AudioSource swoopAudio;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Light _ambientLight;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool _triggerEnabled;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xE76658", Offset = "0xE76658", VA = "0xE76658", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xE766B8", Offset = "0xE766B8", VA = "0xE766B8", Slot = "88")]
	public override void FreedFromChunk(Transform chunk)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xE76748", Offset = "0xE76748", VA = "0xE76748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB484", Offset = "0xAFB484")]
	private IEnumerator ActivationSequence()
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xE767E4", Offset = "0xE767E4", VA = "0xE767E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xE768F4", Offset = "0xE768F4", VA = "0xE768F4")]
	public ChaosGem()
	{
	}
}
[Token(Token = "0x2000088")]
public class ChaosGlovePunchTrigger : MonoBehaviour
{
	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AD4", Offset = "0xAE5AD4")]
	private sealed class <ExplodeSequence>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChaosGlovePunchTrigger <>4__this;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float radius;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <hitCount>5__2;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0xE78720", Offset = "0xE78720", VA = "0xE78720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0xE78788", Offset = "0xE78788", VA = "0xE78788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xE77F48", Offset = "0xE77F48", VA = "0xE77F48")]
		[DebuggerHidden]
		public <ExplodeSequence>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xE78448", Offset = "0xE78448", VA = "0xE78448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xE7844C", Offset = "0xE7844C", VA = "0xE7844C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xE78728", Offset = "0xE78728", VA = "0xE78728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip punchClip;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip powerChargePunchClip;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask hitLayers;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_ControllerReference ControllerReference;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandAnimationController handAnimationController;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRTK_InteractGrab interactGrab;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject hitDecalPrefab;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ChaosGauntlet chaosGauntletScript;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem chargeExplosion;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ObjectPool _hitDecalPool;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform playarea;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 previousHandPosition;

	[Token(Token = "0x400037C")]
	private const float cooldownBetweenHits = 0.04f;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float delayTimer;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float handSpeed;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float averageHandSpeed;

	[Token(Token = "0x4000380")]
	private const float minPunchSpeed = 1f;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _punching;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _stopPunchTime;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Queue<float> _speeds;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Collider[] _overlapHits;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xE76E80", Offset = "0xE76E80", VA = "0xE76E80")]
	private void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xE76EF4", Offset = "0xE76EF4", VA = "0xE76EF4")]
	public float GetHandSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xE7434C", Offset = "0xE7434C", VA = "0xE7434C")]
	public void AddCooldown(float time = 0.04f)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xE76EFC", Offset = "0xE76EFC", VA = "0xE76EFC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xE77D98", Offset = "0xE77D98", VA = "0xE77D98")]
	private void PlayControllerHaptics()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xE77EC8", Offset = "0xE77EC8", VA = "0xE77EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB4E8", Offset = "0xAFB4E8")]
	private IEnumerator ExplodeSequence(float radius)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE77F74", Offset = "0xE77F74", VA = "0xE77F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE77FAC", Offset = "0xE77FAC", VA = "0xE77FAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE783B0", Offset = "0xE783B0", VA = "0xE783B0")]
	public ChaosGlovePunchTrigger()
	{
	}
}
[Token(Token = "0x2000089")]
public class ChestAICatch : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float DodgeDistance;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE7A040", Offset = "0xE7A040", VA = "0xE7A040")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE7A100", Offset = "0xE7A100", VA = "0xE7A100")]
	public ChestAICatch()
	{
	}
}
[Token(Token = "0x200008A")]
public class ChestLootSpawner : MonoBehaviour
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] LootSpawns;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float leverPosition;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool usingLever;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform leverUser;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_InteractableObject trainIO;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform trainLever;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leverBottom;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leverTop;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform minRotation;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform maxRotation;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float oldLeverPosition;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform leverTarget;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasSpawned;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xE7A108", Offset = "0xE7A108", VA = "0xE7A108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xE7A1F4", Offset = "0xE7A1F4", VA = "0xE7A1F4")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xE7A294", Offset = "0xE7A294", VA = "0xE7A294")]
	private GameObject SpawnSelected(int selected, int index)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xE7A524", Offset = "0xE7A524", VA = "0xE7A524")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xE7A604", Offset = "0xE7A604", VA = "0xE7A604")]
	public void UnUsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xE7A610", Offset = "0xE7A610", VA = "0xE7A610")]
	public void UsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xE7A76C", Offset = "0xE7A76C", VA = "0xE7A76C")]
	public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xE7A8BC", Offset = "0xE7A8BC", VA = "0xE7A8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xE7ABDC", Offset = "0xE7ABDC", VA = "0xE7ABDC")]
	public ChestLootSpawner()
	{
	}
}
[Token(Token = "0x200008B")]
public class ChestNamNamAnimBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x600035E")]
	[Address(RVA = "0xE7ABEC", Offset = "0xE7ABEC", VA = "0xE7ABEC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xE7AC48", Offset = "0xE7AC48", VA = "0xE7AC48")]
	public ChestNamNamAnimBehaviour()
	{
	}
}
[Token(Token = "0x200008C")]
public class ChestPlayerTracker : MonoBehaviour
{
	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AE4", Offset = "0xAE5AE4")]
	private sealed class <UpdateAgentDestination>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChestPlayerTracker <>4__this;

		[Token(Token = "0x170001A2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0xE7B230", Offset = "0xE7B230", VA = "0xE7B230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0xE7B298", Offset = "0xE7B298", VA = "0xE7B298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xE7B10C", Offset = "0xE7B10C", VA = "0xE7B10C")]
		[DebuggerHidden]
		public <UpdateAgentDestination>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xE7B148", Offset = "0xE7B148", VA = "0xE7B148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xE7B14C", Offset = "0xE7B14C", VA = "0xE7B14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xE7B238", Offset = "0xE7B238", VA = "0xE7B238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LootChestAICore lootChest;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9C74", Offset = "0xAE9C74")]
	[SerializeField]
	private int PlayerDetectionRadious;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool targetIsInRadius;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool debugMode;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xE7AC50", Offset = "0xE7AC50", VA = "0xE7AC50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xE7AF2C", Offset = "0xE7AF2C", VA = "0xE7AF2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xE7B0B4", Offset = "0xE7B0B4", VA = "0xE7B0B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xE7AEBC", Offset = "0xE7AEBC", VA = "0xE7AEBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB54C", Offset = "0xAFB54C")]
	private IEnumerator<float> UpdateAgentDestination()
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xE7B138", Offset = "0xE7B138", VA = "0xE7B138")]
	public ChestPlayerTracker()
	{
	}
}
[Token(Token = "0x200008D")]
public class ChompyActivator : MonoBehaviour
{
	[Token(Token = "0x6000365")]
	[Address(RVA = "0xE7B2FC", Offset = "0xE7B2FC", VA = "0xE7B2FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xE7B4FC", Offset = "0xE7B4FC", VA = "0xE7B4FC")]
	public ChompyActivator()
	{
	}
}
[Token(Token = "0x200008E")]
public class ChompyPlayerInteractionsTracker : MonoBehaviour
{
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LootChestAICore Core;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9CB4", Offset = "0xAE9CB4")]
	[SerializeField]
	private float ForceRequiredForSulking;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xE7B504", Offset = "0xE7B504", VA = "0xE7B504")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xE7B85C", Offset = "0xE7B85C", VA = "0xE7B85C")]
	public ChompyPlayerInteractionsTracker()
	{
	}
}
[Token(Token = "0x200008F")]
public class ChunkManager : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ChunkManager singleton;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<int, List<GrabbableItem>> chunksWithItems;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xE7B86C", Offset = "0xE7B86C", VA = "0xE7B86C")]
	public void RegisterLoot(GrabbableItem loot, Transform chunk)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xE7B9B0", Offset = "0xE7B9B0", VA = "0xE7B9B0")]
	public void DetachLootFromChunk(Transform chunk)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xE7BC60", Offset = "0xE7BC60", VA = "0xE7BC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xE7BCB4", Offset = "0xE7BCB4", VA = "0xE7BCB4")]
	public ChunkManager()
	{
	}
}
[Token(Token = "0x2000090")]
public class CircularSawTrigger : MonoBehaviour
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask hotspotLayers;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<Collider, float> hotspotTimers;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SawItem _grabbableItemScript;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _myCollider;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem sawingParticles;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _particleStopTimer;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Collider> _overlapColliders;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _overheatTimer;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _overheated;

	[Token(Token = "0x40003A4")]
	public const float overheatMax = 5f;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider _currentlyTargetedCollider;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MineBlock _targetMineBlock;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FracturedChunk _targetChunk;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IBreakable _targetBreakable;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider _previousTargetCollider;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MineBlock _previousMineBlock;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FracturedChunk _previousChunk;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IBreakable _previousBreakable;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem smokeFX;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Animation overheatPointer;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<AnimationState> _animationStates;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform blade;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _rockHitTimer;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource _audioSource;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip overheatedClip;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource idleAudioSource;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource sawingAudioSource;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource sawAirAudioSource;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xE7BD2C", Offset = "0xE7BD2C", VA = "0xE7BD2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xE7C08C", Offset = "0xE7C08C", VA = "0xE7C08C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xE7C1B4", Offset = "0xE7C1B4", VA = "0xE7C1B4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xE7C8FC", Offset = "0xE7C8FC", VA = "0xE7C8FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xE7C9E4", Offset = "0xE7C9E4", VA = "0xE7C9E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xE7D04C", Offset = "0xE7D04C", VA = "0xE7D04C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xE7D0E8", Offset = "0xE7D0E8", VA = "0xE7D0E8")]
	public CircularSawTrigger()
	{
	}
}
[Token(Token = "0x2000091")]
public class CollisionSounds : MonoBehaviour
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip dropClip;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastSpeed;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _lastEnabled;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lastPlayTime;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lastVolume;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerItem _playerItem;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _previousPosition;

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xE7D680", Offset = "0xE7D680", VA = "0xE7D680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xE7D7D0", Offset = "0xE7D7D0", VA = "0xE7D7D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xE7D898", Offset = "0xE7D898", VA = "0xE7D898")]
	public void CheckCollision()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xE7DB70", Offset = "0xE7DB70", VA = "0xE7DB70")]
	public CollisionSounds()
	{
	}
}
[Token(Token = "0x2000092")]
public class CommonPrefabs : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CommonPrefabs singleton;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject poofParticle;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ObjectPool _poofParticlePool;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip poofAudioClip;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xE7DB78", Offset = "0xE7DB78", VA = "0xE7DB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xE7DC08", Offset = "0xE7DC08", VA = "0xE7DC08")]
	public void PoofHere(Vector3 position)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xE7DD04", Offset = "0xE7DD04", VA = "0xE7DD04")]
	public CommonPrefabs()
	{
	}
}
[Token(Token = "0x2000093")]
public class ControllerHandOffset : MonoBehaviour
{
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5AF4", Offset = "0xAE5AF4")]
	private sealed class <OffsetDelayCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerHandOffset <>4__this;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0xE7E828", Offset = "0xE7E828", VA = "0xE7E828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0xE7E890", Offset = "0xE7E890", VA = "0xE7E890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xE7E364", Offset = "0xE7E364", VA = "0xE7E364")]
		[DebuggerHidden]
		public <OffsetDelayCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xE7E570", Offset = "0xE7E570", VA = "0xE7E570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xE7E574", Offset = "0xE7E574", VA = "0xE7E574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xE7E830", Offset = "0xE7E830", VA = "0xE7E830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] lefthandTransforms;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] righthandTransforms;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 cosmosPositionOffsetLeft;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 cosmosPositionOffsetRight;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xE7E2C8", Offset = "0xE7E2C8", VA = "0xE7E2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xE7E2F4", Offset = "0xE7E2F4", VA = "0xE7E2F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB5B0", Offset = "0xAFB5B0")]
	private IEnumerator OffsetDelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xE7E390", Offset = "0xE7E390", VA = "0xE7E390")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xE7E568", Offset = "0xE7E568", VA = "0xE7E568")]
	public ControllerHandOffset()
	{
	}
}
[Token(Token = "0x2000094")]
public class CoroutineHelper : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CoroutineHelper singleton;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9CF4", Offset = "0xAE9CF4")]
	private object <Timing>k__BackingField;

	[Token(Token = "0x17000023")]
	public object Timing
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xE7E898", Offset = "0xE7E898", VA = "0xE7E898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB614", Offset = "0xAFB614")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xE7E8A0", Offset = "0xE7E8A0", VA = "0xE7E8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB624", Offset = "0xAFB624")]
		internal set
		{
		}
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xE7E8A8", Offset = "0xE7E8A8", VA = "0xE7E8A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xE7E8FC", Offset = "0xE7E8FC", VA = "0xE7E8FC")]
	public CoroutineHelper()
	{
	}
}
[Token(Token = "0x2000095")]
public class CreditsMove : MonoBehaviour
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _originalPosition;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetPosition;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float time;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timer;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xE7E904", Offset = "0xE7E904", VA = "0xE7E904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xE7E940", Offset = "0xE7E940", VA = "0xE7E940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xE7EA4C", Offset = "0xE7EA4C", VA = "0xE7EA4C")]
	public CreditsMove()
	{
	}
}
[Token(Token = "0x2000096")]
public class CrowdController : MonoBehaviour
{
	[Token(Token = "0x20004B2")]
	protected struct CrowdData
	{
		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float nextMove;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 originalLocalPosition;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 originalEuler;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion originalRotation;
	}

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer[] _crowd;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotateStrength;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yMoveStrength;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float verticalMoveStrength;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float durationMultiplier;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAE9D04", Offset = "0xAE9D04")]
	public float actionChance;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CrowdData[] _crowdData;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xE7EA5C", Offset = "0xE7EA5C", VA = "0xE7EA5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xE7EC60", Offset = "0xE7EC60", VA = "0xE7EC60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xE7EF8C", Offset = "0xE7EF8C", VA = "0xE7EF8C")]
	public CrowdController()
	{
	}
}
[Token(Token = "0x2000097")]
public class CustomGrabAndTelekinesis : VRTK_InteractGrab
{
	[Token(Token = "0x20004B3")]
	public class PullItem
	{
		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject item;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_InteractableObject script;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool previousKinematic;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider collider;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pullPosition;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 offset;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 velocity;

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xDCEA54", Offset = "0xDCEA54", VA = "0xDCEA54")]
		public PullItem(VRTK_InteractableObject script, Collider coll, Vector3 pullPos)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xDCE974", Offset = "0xDCE974", VA = "0xDCE974")]
		public void Reassign(VRTK_InteractableObject script, Collider coll, Vector3 pullPos)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xDCEB40", Offset = "0xDCEB40", VA = "0xDCEB40")]
		public void ChangePullPosition(Vector3 pullPos)
		{
		}
	}

	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B04", Offset = "0xAE5B04")]
	private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomGrabAndTelekinesis <>4__this;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0xDCF424", Offset = "0xDCF424", VA = "0xDCF424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0xDCF48C", Offset = "0xDCF48C", VA = "0xDCF48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xDCBAB4", Offset = "0xDCBAB4", VA = "0xDCBAB4")]
		[DebuggerHidden]
		public <Start>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xDCEE04", Offset = "0xDCEE04", VA = "0xDCEE04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xDCEE08", Offset = "0xDCEE08", VA = "0xDCEE08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xDCF42C", Offset = "0xDCF42C", VA = "0xDCF42C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask pullableItems;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask castBlockLayers;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private VRTK_ControllerEvents _controllerEvents;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _pulling;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PullItem _pullItem;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform handWrapper;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform handActual;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform handAttachPoint;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 _originalHandPosition;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion _originalHandRotation;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip grabClip;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ParticleSystem telekinesisParticles;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _particleCooldown;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float _cooldown;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RaycastHit[] _rayResults;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private VRTK_InteractableObject _previousIO;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Rigidbody _previousRigidbody;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private VRTK_InteractableObject _targetObject;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Rigidbody _cachedGrabbedRigidbody;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioClip telekinesisSwoosh;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDCBA24", Offset = "0xDCBA24", VA = "0xDCBA24")]
	public bool IsTargettingPullable()
	{
		return default(bool);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDCBA44", Offset = "0xDCBA44", VA = "0xDCBA44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB634", Offset = "0xAFB634")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDCBAE0", Offset = "0xDCBAE0", VA = "0xDCBAE0")]
	private void Oculus()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDCBC5C", Offset = "0xDCBC5C", VA = "0xDCBC5C")]
	private void Vive()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDCBE7C", Offset = "0xDCBE7C", VA = "0xDCBE7C")]
	private void Cosmos()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDCC018", Offset = "0xDCC018", VA = "0xDCC018")]
	private void Knuckles()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDCC178", Offset = "0xDCC178", VA = "0xDCC178")]
	private void WMR()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDCC2F4", Offset = "0xDCC2F4", VA = "0xDCC2F4")]
	public void PlayGrabSound(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xDCC394", Offset = "0xDCC394", VA = "0xDCC394", Slot = "41")]
	protected override void AttemptGrabObject()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xDCC458", Offset = "0xDCC458", VA = "0xDCC458")]
	public void PositionHandToItem(VRTK_InteractableObject playerItem)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xDCC790", Offset = "0xDCC790", VA = "0xDCC790")]
	public void ResetHand(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xDCC7DC", Offset = "0xDCC7DC", VA = "0xDCC7DC")]
	private void GrabTouched(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDCCAC0", Offset = "0xDCCAC0", VA = "0xDCCAC0")]
	private void ReleaseGrabHold(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xDCCD24", Offset = "0xDCCD24", VA = "0xDCCD24")]
	private void StartPulling(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xDCCE2C", Offset = "0xDCCE2C", VA = "0xDCCE2C")]
	private void StopPulling(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xDCCE34", Offset = "0xDCCE34", VA = "0xDCCE34")]
	private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xDCCF28", Offset = "0xDCCF28", VA = "0xDCCF28")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xDCC8EC", Offset = "0xDCC8EC", VA = "0xDCC8EC")]
	private void ClearTelekinesis()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xDCECC0", Offset = "0xDCECC0", VA = "0xDCECC0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xDCEDA4", Offset = "0xDCEDA4", VA = "0xDCEDA4")]
	public CustomGrabAndTelekinesis()
	{
	}
}
[Token(Token = "0x2000098")]
public class DLCHide : MonoBehaviour
{
	[Token(Token = "0x600039D")]
	[Address(RVA = "0xDCF494", Offset = "0xDCF494", VA = "0xDCF494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xDCF53C", Offset = "0xDCF53C", VA = "0xDCF53C")]
	public DLCHide()
	{
	}
}
[Token(Token = "0x2000099")]
[SelectionBase]
public class Dart : PlayerItem
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform rigidbodyCenter;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public DartSpike spike;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xDCF544", Offset = "0xDCF544", VA = "0xDCF544", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xDCF548", Offset = "0xDCF548", VA = "0xDCF548", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xDCF5EC", Offset = "0xDCF5EC", VA = "0xDCF5EC")]
	public void Ungrab()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xDCF600", Offset = "0xDCF600", VA = "0xDCF600", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xDCF6CC", Offset = "0xDCF6CC", VA = "0xDCF6CC")]
	public Dart()
	{
	}
}
[Token(Token = "0x200009A")]
public class DartSpike : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dart dart;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask attachLayers;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Collider> _currentTriggering;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _triggerTimer;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDCF6D4", Offset = "0xDCF6D4", VA = "0xDCF6D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDCF84C", Offset = "0xDCF84C", VA = "0xDCF84C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDCF958", Offset = "0xDCF958", VA = "0xDCF958")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDCF8FC", Offset = "0xDCF8FC", VA = "0xDCF8FC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xDCF9EC", Offset = "0xDCF9EC", VA = "0xDCF9EC")]
	private void Attach()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xDCFC8C", Offset = "0xDCFC8C", VA = "0xDCFC8C")]
	public DartSpike()
	{
	}
}
[Token(Token = "0x200009B")]
public class DartboardHelper : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DartboardHelper singleton;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xDCFCFC", Offset = "0xDCFCFC", VA = "0xDCFCFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xDCFD94", Offset = "0xDCFD94", VA = "0xDCFD94")]
	public void ToggleChilds(bool value)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDD0074", Offset = "0xDD0074", VA = "0xDD0074")]
	public DartboardHelper()
	{
	}
}
[Token(Token = "0x200009C")]
public class DebugSpawn : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerItem[] tools;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerItem[] uselessTools;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] gold;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] nukeObjects;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] keys;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> chaosGems;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDD007C", Offset = "0xDD007C", VA = "0xDD007C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xDD089C", Offset = "0xDD089C", VA = "0xDD089C")]
	public void SpawnLoots()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDD0D58", Offset = "0xDD0D58", VA = "0xDD0D58")]
	public void SpawnChaosGem()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDD0B0C", Offset = "0xDD0B0C", VA = "0xDD0B0C")]
	public void SpawnKeys()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xDD05D4", Offset = "0xDD05D4", VA = "0xDD05D4")]
	public void SpawnNuke()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xDD1088", Offset = "0xDD1088", VA = "0xDD1088")]
	public DebugSpawn()
	{
	}
}
[Token(Token = "0x200009D")]
public class DelayedPoolReturn : MonoBehaviour
{
	[Token(Token = "0x20004B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B14", Offset = "0xAE5B14")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedPoolReturn <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0xDD4858", Offset = "0xDD4858", VA = "0xDD4858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0xDD48C0", Offset = "0xDD48C0", VA = "0xDD48C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xDD4748", Offset = "0xDD4748", VA = "0xDD4748")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xDD4784", Offset = "0xDD4784", VA = "0xDD4784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xDD4788", Offset = "0xDD4788", VA = "0xDD4788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xDD4860", Offset = "0xDD4860", VA = "0xDD4860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectPool myPool;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xDD46D8", Offset = "0xDD46D8", VA = "0xDD46D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB698", Offset = "0xAFB698")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xDD4774", Offset = "0xDD4774", VA = "0xDD4774")]
	public DelayedPoolReturn()
	{
	}
}
[Token(Token = "0x200009E")]
public class DestroyableEarth : MonoBehaviour
{
	[Token(Token = "0x20004B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B24", Offset = "0xAE5B24")]
	private sealed class <EndingSequence>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyableEarth <>4__this;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0xDD5214", Offset = "0xDD5214", VA = "0xDD5214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0xDD527C", Offset = "0xDD527C", VA = "0xDD527C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xDD5058", Offset = "0xDD5058", VA = "0xDD5058")]
		[DebuggerHidden]
		public <EndingSequence>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xDD50B8", Offset = "0xDD50B8", VA = "0xDD50B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xDD50BC", Offset = "0xDD50BC", VA = "0xDD50BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xDD521C", Offset = "0xDD521C", VA = "0xDD521C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B34", Offset = "0xAE5B34")]
	private sealed class <FadeClouds>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyableEarth <>4__this;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <cloudMaterial>5__2;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <fadeTimer>5__3;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600209E")]
			[Address(RVA = "0xDD53D8", Offset = "0xDD53D8", VA = "0xDD53D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0xDD5440", Offset = "0xDD5440", VA = "0xDD5440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xDD5084", Offset = "0xDD5084", VA = "0xDD5084")]
		[DebuggerHidden]
		public <FadeClouds>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xDD5284", Offset = "0xDD5284", VA = "0xDD5284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xDD5288", Offset = "0xDD5288", VA = "0xDD5288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xDD53E0", Offset = "0xDD53E0", VA = "0xDD53E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] earthPieces;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject singleEarth;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject clouds;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip music;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip explosionSound;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem explosionFX;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xDD4B18", Offset = "0xDD4B18", VA = "0xDD4B18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xDD4C88", Offset = "0xDD4C88", VA = "0xDD4C88")]
	public void DestroyEarth()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xDD4FE8", Offset = "0xDD4FE8", VA = "0xDD4FE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB6FC", Offset = "0xAFB6FC")]
	private IEnumerator EndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xDD4F78", Offset = "0xDD4F78", VA = "0xDD4F78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB760", Offset = "0xAFB760")]
	private IEnumerator FadeClouds()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDD50B0", Offset = "0xDD50B0", VA = "0xDD50B0")]
	public DestroyableEarth()
	{
	}
}
[Token(Token = "0x200009F")]
[ExecuteAlways]
public class DisableOnPlay : MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideOnAndroid;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool hideOnPS4;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool hideOnSTEAMVR;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool hideOnOculus;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hideOnStandalone;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDD5448", Offset = "0xDD5448", VA = "0xDD5448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDD54C4", Offset = "0xDD54C4", VA = "0xDD54C4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDD5518", Offset = "0xDD5518", VA = "0xDD5518")]
	public DisableOnPlay()
	{
	}
}
[Token(Token = "0x20000A0")]
public class DisableWithThis : MonoBehaviour
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToDisable;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlyDisableRigidbody;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDD5520", Offset = "0xDD5520", VA = "0xDD5520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDD566C", Offset = "0xDD566C", VA = "0xDD566C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDD57B8", Offset = "0xDD57B8", VA = "0xDD57B8")]
	public DisableWithThis()
	{
	}
}
[Token(Token = "0x20000A1")]
public class DollyCamera : MonoBehaviour
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dollyCamera;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lootCamera;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject shopCamera;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject radioCamera;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] toDisable;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbableItem[] debugLoots;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _value;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDD57C0", Offset = "0xDD57C0", VA = "0xDD57C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDD5D10", Offset = "0xDD5D10", VA = "0xDD5D10")]
	private static void AddItemsToThrower(LootThrower thrower, GrabbableItem[] relics)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDD5B54", Offset = "0xDD5B54", VA = "0xDD5B54")]
	private void StartDollyCamera(KeyCode key, GameObject camera)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDD5DD8", Offset = "0xDD5DD8", VA = "0xDD5DD8")]
	public DollyCamera()
	{
	}
}
[Token(Token = "0x20000A2")]
public class DoorHandle : MonoBehaviour
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float leverPosition;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool usingLever;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform leverUser;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTK_InteractableObject IO;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trainLever;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leverBottom;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leverTop;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform minRotation;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform maxRotation;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float oldLeverPosition;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform leverTarget;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip grabSFX;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDD5DE0", Offset = "0xDD5DE0", VA = "0xDD5DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDD5EC0", Offset = "0xDD5EC0", VA = "0xDD5EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDD6330", Offset = "0xDD6330", VA = "0xDD6330")]
	public void UnUsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDD633C", Offset = "0xDD633C", VA = "0xDD633C")]
	public void UsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDD61E0", Offset = "0xDD61E0", VA = "0xDD61E0")]
	public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xDD644C", Offset = "0xDD644C", VA = "0xDD644C")]
	public DoorHandle()
	{
	}
}
[Token(Token = "0x20000A3")]
[SelectionBase]
public class DrillItem : PlayerItem
{
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B44", Offset = "0xAE5B44")]
	private sealed class <UseCooldown>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrillItem <>4__this;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0xDD7F2C", Offset = "0xDD7F2C", VA = "0xDD7F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0xDD7F94", Offset = "0xDD7F94", VA = "0xDD7F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xDD7C28", Offset = "0xDD7C28", VA = "0xDD7C28")]
		[DebuggerHidden]
		public <UseCooldown>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xDD7E70", Offset = "0xDD7E70", VA = "0xDD7E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xDD7E74", Offset = "0xDD7E74", VA = "0xDD7E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xDD7F34", Offset = "0xDD7F34", VA = "0xDD7F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform drillBegin;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform drillEnd;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool _attached;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public LayerMask rockLayer;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LayerMask destroyablesLayer;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public LayerMask oilLayer;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public VRTK_InteractGrab lastController;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 _wallHitPosition;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 _drillStartPosition;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float _lerpT;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Transform _parentController;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool _canBeUsed;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Vector3 _handPos;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Quaternion _handRot;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ParticleSystem oilFX;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ObjectPool _oilFXPool;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Transform drillBit;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public AudioSource drillLoop;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public ParticleSystem drillingFX;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject holePrefab;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private ObjectPool _holePool;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private RaycastHit _hitInfo;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public MineBlock hitMineblockCache;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private List<GameObject> _pooledHoles;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xDD645C", Offset = "0xDD645C", VA = "0xDD645C", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDD65B0", Offset = "0xDD65B0", VA = "0xDD65B0")]
	protected void ReturnPooledHoles(int run)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xDD66C4", Offset = "0xDD66C4", VA = "0xDD66C4", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDD7B3C", Offset = "0xDD7B3C", VA = "0xDD7B3C")]
	private void OnMineblockDestroyed()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDD7ACC", Offset = "0xDD7ACC", VA = "0xDD7ACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB7C4", Offset = "0xAFB7C4")]
	private IEnumerator UseCooldown()
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDD7A98", Offset = "0xDD7A98", VA = "0xDD7A98")]
	private void UnAttach()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xDD7C54", Offset = "0xDD7C54", VA = "0xDD7C54", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xDD7C80", Offset = "0xDD7C80", VA = "0xDD7C80", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xDD7CA8", Offset = "0xDD7CA8", VA = "0xDD7CA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xDD7DF8", Offset = "0xDD7DF8", VA = "0xDD7DF8")]
	public DrillItem()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE19B4", Offset = "0xAE19B4")]
public class DrillLaser : MonoBehaviour
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask hitlayers;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Projector _projector;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDD7F9C", Offset = "0xDD7F9C", VA = "0xDD7F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDD8020", Offset = "0xDD8020", VA = "0xDD8020")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xDD826C", Offset = "0xDD826C", VA = "0xDD826C")]
	public DrillLaser()
	{
	}
}
[Token(Token = "0x20000A5")]
public class EarthCollision : MonoBehaviour
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestroyableEarth earthScript;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask hitLayers;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xDDE314", Offset = "0xDDE314", VA = "0xDDE314")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xDDE424", Offset = "0xDDE424", VA = "0xDDE424")]
	public EarthCollision()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ElevatorAttachTrigger : MonoBehaviour
{
	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B54", Offset = "0xAE5B54")]
	private sealed class <DelayedAddParent>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemTransform;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ElevatorAttachTrigger <>4__this;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0xDDF264", Offset = "0xDDF264", VA = "0xDDF264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0xDDF2CC", Offset = "0xDDF2CC", VA = "0xDDF2CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xDDE7A8", Offset = "0xDDE7A8", VA = "0xDDE7A8")]
		[DebuggerHidden]
		public <DelayedAddParent>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xDDF168", Offset = "0xDDF168", VA = "0xDDF168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xDDF16C", Offset = "0xDDF16C", VA = "0xDDF16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xDDF26C", Offset = "0xDDF26C", VA = "0xDDF26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ElevatorAttachTrigger singleton;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform elevatorTransform;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> attachedTransforms;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider collider;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask fastLayers;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xDDE42C", Offset = "0xDDE42C", VA = "0xDDE42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xDDE498", Offset = "0xDDE498", VA = "0xDDE498")]
	public void AddItem(Transform itemTransform)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xDDE72C", Offset = "0xDDE72C", VA = "0xDDE72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB828", Offset = "0xAFB828")]
	private IEnumerator DelayedAddParent(Transform itemTransform)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xDDE7D4", Offset = "0xDDE7D4", VA = "0xDDE7D4")]
	public void RemoveItem(Transform itemTransform)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xDDEA94", Offset = "0xDDEA94", VA = "0xDDEA94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xDDEB64", Offset = "0xDDEB64", VA = "0xDDEB64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xDDEC34", Offset = "0xDDEC34", VA = "0xDDEC34")]
	public void CheckAll()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xDDEF9C", Offset = "0xDDEF9C", VA = "0xDDEF9C")]
	public void UnAttachEverything()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xDDF0F8", Offset = "0xDDF0F8", VA = "0xDDF0F8")]
	public ElevatorAttachTrigger()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ElevatorLight : MonoBehaviour
{
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B64", Offset = "0xAE5B64")]
	private sealed class <Flicker>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorLight <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0xDDF684", Offset = "0xDDF684", VA = "0xDDF684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0xDDF6EC", Offset = "0xDDF6EC", VA = "0xDDF6EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xDDF474", Offset = "0xDDF474", VA = "0xDDF474")]
		[DebuggerHidden]
		public <Flicker>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xDDF4B0", Offset = "0xDDF4B0", VA = "0xDDF4B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xDDF4B4", Offset = "0xDDF4B4", VA = "0xDDF4B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xDDF68C", Offset = "0xDDF68C", VA = "0xDDF68C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light _light;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _nextTime;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _originalRange;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _originalColor;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color flickerColor;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xDDF2D4", Offset = "0xDDF2D4", VA = "0xDDF2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xDDF358", Offset = "0xDDF358", VA = "0xDDF358")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xDDF404", Offset = "0xDDF404", VA = "0xDDF404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB88C", Offset = "0xAFB88C")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xDDF4A0", Offset = "0xDDF4A0", VA = "0xDDF4A0")]
	public ElevatorLight()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ElevatorMove : MonoBehaviour
{
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B74", Offset = "0xAE5B74")]
	private sealed class <PlayElevatorMovingAudio>d__64 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x170001B4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0xFA4544", Offset = "0xFA4544", VA = "0xFA4544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xFA45AC", Offset = "0xFA45AC", VA = "0xFA45AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xFA4350", Offset = "0xFA4350", VA = "0xFA4350")]
		[DebuggerHidden]
		public <PlayElevatorMovingAudio>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xFA437C", Offset = "0xFA437C", VA = "0xFA437C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xFA4380", Offset = "0xFA4380", VA = "0xFA4380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xFA454C", Offset = "0xFA454C", VA = "0xFA454C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B84", Offset = "0xAE5B84")]
	private sealed class <ElevatorStart>d__65 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int floor;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool tutorial;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x170001B6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xFA3F70", Offset = "0xFA3F70", VA = "0xFA3F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xFA3FD8", Offset = "0xFA3FD8", VA = "0xFA3FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xFA2998", Offset = "0xFA2998", VA = "0xFA2998")]
		[DebuggerHidden]
		public <ElevatorStart>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xFA29C4", Offset = "0xFA29C4", VA = "0xFA29C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xFA29C8", Offset = "0xFA29C8", VA = "0xFA29C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xFA3F78", Offset = "0xFA3F78", VA = "0xFA3F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5B94", Offset = "0xAE5B94")]
	private sealed class <ToggleOpenFenceGateCoroutine>d__66 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool value;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170001B8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0xFA4B68", Offset = "0xFA4B68", VA = "0xFA4B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0xFA4BD0", Offset = "0xFA4BD0", VA = "0xFA4BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xFA4958", Offset = "0xFA4958", VA = "0xFA4958")]
		[DebuggerHidden]
		public <ToggleOpenFenceGateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xFA4984", Offset = "0xFA4984", VA = "0xFA4984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xFA4988", Offset = "0xFA4988", VA = "0xFA4988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xFA4B70", Offset = "0xFA4B70", VA = "0xFA4B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BA4", Offset = "0xAE5BA4")]
	private sealed class <CloseFenceBlinders>d__67 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x170001BA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xDE2AB4", Offset = "0xDE2AB4", VA = "0xDE2AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0xDE2B1C", Offset = "0xDE2B1C", VA = "0xDE2B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xDE0228", Offset = "0xDE0228", VA = "0xDE0228")]
		[DebuggerHidden]
		public <CloseFenceBlinders>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xDE2948", Offset = "0xDE2948", VA = "0xDE2948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xDE294C", Offset = "0xDE294C", VA = "0xDE294C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xDE2ABC", Offset = "0xDE2ABC", VA = "0xDE2ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BB4", Offset = "0xAE5BB4")]
	private sealed class <DelayedPlayFenceClip>d__71 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x170001BC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xFA25B0", Offset = "0xFA25B0", VA = "0xFA25B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xFA2618", Offset = "0xFA2618", VA = "0xFA2618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xFA2260", Offset = "0xFA2260", VA = "0xFA2260")]
		[DebuggerHidden]
		public <DelayedPlayFenceClip>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xFA228C", Offset = "0xFA228C", VA = "0xFA228C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xFA2290", Offset = "0xFA2290", VA = "0xFA2290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xFA25B8", Offset = "0xFA25B8", VA = "0xFA25B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BC4", Offset = "0xAE5BC4")]
	private sealed class <NukeCraterSequence>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0xFA42E0", Offset = "0xFA42E0", VA = "0xFA42E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xFA4348", Offset = "0xFA4348", VA = "0xFA4348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xFA403C", Offset = "0xFA403C", VA = "0xFA403C")]
		[DebuggerHidden]
		public <NukeCraterSequence>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xFA4068", Offset = "0xFA4068", VA = "0xFA4068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xFA406C", Offset = "0xFA406C", VA = "0xFA406C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xFA42E8", Offset = "0xFA42E8", VA = "0xFA42E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BD4", Offset = "0xAE5BD4")]
	private sealed class <ResetSaveAndSceneSequence>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xFA48E8", Offset = "0xFA48E8", VA = "0xFA48E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xFA4950", Offset = "0xFA4950", VA = "0xFA4950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xFA4610", Offset = "0xFA4610", VA = "0xFA4610")]
		[DebuggerHidden]
		public <ResetSaveAndSceneSequence>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xFA463C", Offset = "0xFA463C", VA = "0xFA463C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xFA4640", Offset = "0xFA4640", VA = "0xFA4640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xFA48F0", Offset = "0xFA48F0", VA = "0xFA48F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BE4", Offset = "0xAE5BE4")]
	private sealed class <DelayedTickingAudioTimer>d__86 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElevatorMove <>4__this;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timeToWait>5__2;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__3;

		[Token(Token = "0x170001C2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xFA28CC", Offset = "0xFA28CC", VA = "0xFA28CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0xFA2934", Offset = "0xFA2934", VA = "0xFA2934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xFA267C", Offset = "0xFA267C", VA = "0xFA267C")]
		[DebuggerHidden]
		public <DelayedTickingAudioTimer>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xFA26A8", Offset = "0xFA26A8", VA = "0xFA26A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xFA26AC", Offset = "0xFA26AC", VA = "0xFA26AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xFA28D4", Offset = "0xFA28D4", VA = "0xFA28D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ElevatorMove singleton;

	[Token(Token = "0x400043F")]
	public const float elevatorSaloonWorldY = 0.1f;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject elevator;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] elevatorStops;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9D1C", Offset = "0xAE9D1C")]
	private bool <ElevatorMoving>k__BackingField;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject startingPickaxe;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody[] lampRigidbodies;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9D2C", Offset = "0xAE9D2C")]
	private int <CurrentFloor>k__BackingField;

	[Token(Token = "0x4000446")]
	private const float elevatorMovingTime = 5f;

	[Token(Token = "0x4000447")]
	private const float fenceTime = 1.5f;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fence;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animation fenceAnimation;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer[] _fenceRenderers;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject lootHoles;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameEventManager _gameEventManager;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material oldSkybox;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material caveSkybox;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool craterEnding;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color _originalAmbient;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color _originalAmbientBottom;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Color _originalAmbientSky;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color _caveAmbientColor;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 _previousPosition;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource audioSource;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip accelerationClip;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip movingClip;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip decelerationClip;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip elevatorFenceDown;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip elevatorFenceUp;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CoroutineHandle audioCoroutine;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSource[] musicSources;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioSource[] caveAmbienceSources;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource clockAudioSource;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip tenSecondTicking;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip timeIsUp;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CoroutineHandle currentAudioCoroutine;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool _isPaused;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _levelDuration;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _levelTimer;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool timerEnabled;

	[Token(Token = "0x4000467")]
	private const string _clockString = "{0} sec";

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int flooredSeconds;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform playerCameraTransform;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform gateFence;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float gateFenceClosedRotation;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float gateFenceOpenRotation;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Quaternion _closedFenceRotatation;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Quaternion _openFenceRotation;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Action elevatorStarted;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Action elevatorStoppedAtPlayArea;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Action elevatorStoppedAtSaloon;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private KeyCode[] keyCodes;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool initElevatorParent;

	[Token(Token = "0x17000024")]
	public bool ElevatorMoving
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xDDF6F4", Offset = "0xDDF6F4", VA = "0xDDF6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB8F0", Offset = "0xAFB8F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xDDF6FC", Offset = "0xDDF6FC", VA = "0xDDF6FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB900", Offset = "0xAFB900")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public int CurrentFloor
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xDDF708", Offset = "0xDDF708", VA = "0xDDF708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB910", Offset = "0xAFB910")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xDDF710", Offset = "0xDDF710", VA = "0xDDF710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFB920", Offset = "0xAFB920")]
		private set
		{
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xDDF718", Offset = "0xDDF718", VA = "0xDDF718")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xDDFA84", Offset = "0xDDFA84", VA = "0xDDFA84")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xDDFFF0", Offset = "0xDDFFF0", VA = "0xDDFFF0")]
	public void ShowStartingPickaxe()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xDE0010", Offset = "0xDE0010", VA = "0xDE0010")]
	public void SetLevelDuration(float duration)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xDE0018", Offset = "0xDE0018", VA = "0xDE0018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB930", Offset = "0xAFB930")]
	public IEnumerator<float> PlayElevatorMovingAudio(float time)
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xDE0098", Offset = "0xDE0098", VA = "0xDE0098")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB994", Offset = "0xAFB994")]
	public IEnumerator<float> ElevatorStart(int floor, float time = 5f, bool tutorial = false)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xDE0134", Offset = "0xDE0134", VA = "0xDE0134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFB9F8", Offset = "0xAFB9F8")]
	public IEnumerator<float> ToggleOpenFenceGateCoroutine(bool value)
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xDE01B8", Offset = "0xDE01B8", VA = "0xDE01B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBA5C", Offset = "0xAFBA5C")]
	public IEnumerator<float> CloseFenceBlinders()
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xDE0254", Offset = "0xDE0254", VA = "0xDE0254")]
	public void OpenFenceBlinders()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xDE0450", Offset = "0xDE0450", VA = "0xDE0450")]
	private void ToggleFenceRenderers(bool value)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xDE04CC", Offset = "0xDE04CC", VA = "0xDE04CC")]
	public LevelLootManager GetFloorLootManager(int floor)
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xDE03C4", Offset = "0xDE03C4", VA = "0xDE03C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBAC0", Offset = "0xAFBAC0")]
	private IEnumerator<float> DelayedPlayFenceClip(float delay, AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xDE0554", Offset = "0xDE0554", VA = "0xDE0554")]
	public void ArrivedToPlayArea()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xDE0AB4", Offset = "0xDE0AB4", VA = "0xDE0AB4")]
	public void ArrivedToTutorialArea()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xDDFBA8", Offset = "0xDDFBA8", VA = "0xDDFBA8")]
	public void ArrivedToShop()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xDE0BB8", Offset = "0xDE0BB8", VA = "0xDE0BB8")]
	public void ArrivedToNukeCrater()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xDE0FFC", Offset = "0xDE0FFC", VA = "0xDE0FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBB24", Offset = "0xAFBB24")]
	public IEnumerator NukeCraterSequence()
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xDE106C", Offset = "0xDE106C", VA = "0xDE106C")]
	public void StartNextFloor()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDE138C", Offset = "0xDE138C", VA = "0xDE138C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDE2138", Offset = "0xDE2138", VA = "0xDE2138")]
	public void SkipToFloor(int i)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDE2028", Offset = "0xDE2028", VA = "0xDE2028")]
	public void ResetScene()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xDE2294", Offset = "0xDE2294", VA = "0xDE2294")]
	public void ResetSaveAndScene()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xDE2380", Offset = "0xDE2380", VA = "0xDE2380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBB88", Offset = "0xAFBB88")]
	private IEnumerator ResetSaveAndSceneSequence()
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xDE0978", Offset = "0xDE0978", VA = "0xDE0978")]
	public void CreateReflection()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xDE0A08", Offset = "0xDE0A08", VA = "0xDE0A08")]
	public void StartTimer(float time = -1f)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xDE2460", Offset = "0xDE2460", VA = "0xDE2460")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xDE23E0", Offset = "0xDE23E0", VA = "0xDE23E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBBEC", Offset = "0xAFBBEC")]
	private IEnumerator<float> DelayedTickingAudioTimer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xDE255C", Offset = "0xDE255C", VA = "0xDE255C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDE27B4", Offset = "0xDE27B4", VA = "0xDE27B4")]
	public bool CheckIfPositionInsideElevator(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDE12F4", Offset = "0xDE12F4", VA = "0xDE12F4")]
	public bool CheckIfPlayerIsInElevator()
	{
		return default(bool);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xDE2868", Offset = "0xDE2868", VA = "0xDE2868")]
	public ElevatorMove()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xDE2940", Offset = "0xDE2940", VA = "0xDE2940")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBC50", Offset = "0xAFBC50")]
	private void <OpenFenceBlinders>b__68_0()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ElevatorStart : VRTK_InteractableObject
{
	[Token(Token = "0x20004C3")]
	public enum ButtonType
	{
		[Token(Token = "0x4002583")]
		Elevator,
		[Token(Token = "0x4002584")]
		Height,
		[Token(Token = "0x4002585")]
		Competetive,
		[Token(Token = "0x4002586")]
		Tutorial
	}

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _touchTime;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 _originalLocalPosition;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip pressClip;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip failClip;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float _cooldown;

	[Token(Token = "0x4000479")]
	private const float pressingTime = 0.15f;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject buttonParticles;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool _colliding;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public LayerMask hitLayers;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Rigidbody[] _parentRigidbodies;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3[] _originalRigidbodyPositions;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Quaternion[] _originalRigidbodyRotations;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text competetiveButtonText;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool sitting;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public ButtonType buttonType;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFA4C34", Offset = "0xFA4C34", VA = "0xFA4C34", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFA4DD4", Offset = "0xFA4DD4", VA = "0xFA4DD4", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFA4F7C", Offset = "0xFA4F7C", VA = "0xFA4F7C", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xFA55B4", Offset = "0xFA55B4", VA = "0xFA55B4", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xFA5660", Offset = "0xFA5660", VA = "0xFA5660")]
	public void ButtonPosition(float t)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xFA4FA4", Offset = "0xFA4FA4", VA = "0xFA4FA4")]
	private void Pressed()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xFA5768", Offset = "0xFA5768", VA = "0xFA5768", Slot = "20")]
	public override void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xFA5790", Offset = "0xFA5790", VA = "0xFA5790")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xFA5894", Offset = "0xFA5894", VA = "0xFA5894")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xFA58F8", Offset = "0xFA58F8", VA = "0xFA58F8")]
	public ElevatorStart()
	{
	}
}
[Token(Token = "0x20000AA")]
public class EndingNotepad : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text[] textMeshes;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage[] checkmarks;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xFA596C", Offset = "0xFA596C", VA = "0xFA596C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xFA5AA8", Offset = "0xFA5AA8", VA = "0xFA5AA8")]
	public void UpdateNotepad(int run)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xFA5B28", Offset = "0xFA5B28", VA = "0xFA5B28")]
	public EndingNotepad()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ExceptionUIPrinter : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int exceptionNumber;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xFA5B30", Offset = "0xFA5B30", VA = "0xFA5B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xFA5BA4", Offset = "0xFA5BA4", VA = "0xFA5BA4")]
	private void LogCallback(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xFA5D10", Offset = "0xFA5D10", VA = "0xFA5D10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xFA5D84", Offset = "0xFA5D84", VA = "0xFA5D84")]
	public ExceptionUIPrinter()
	{
	}
}
[Token(Token = "0x20000AC")]
[SelectionBase]
public class ExplosionCrate : PlayerItem
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int _dynamitesInside;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public int dynamitesToSpawn;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform spawnPos1;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform spawnPos2;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<GameObject> _myExplosives;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject explosivePrefab;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Collider[] _myColliders;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ObjectPool _explosivePool;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Collider triggerCollider;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public List<Transform> attachedTransforms;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject tempCollider;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xFA91BC", Offset = "0xFA91BC", VA = "0xFA91BC", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xFA9254", Offset = "0xFA9254", VA = "0xFA9254", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xFA9904", Offset = "0xFA9904", VA = "0xFA9904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xFA9A54", Offset = "0xFA9A54", VA = "0xFA9A54", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xFA9BA8", Offset = "0xFA9BA8", VA = "0xFA9BA8", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xFA9CFC", Offset = "0xFA9CFC", VA = "0xFA9CFC", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xFA9414", Offset = "0xFA9414", VA = "0xFA9414")]
	public void SpawnDynamites()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xFAA190", Offset = "0xFAA190", VA = "0xFAA190", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xFAA468", Offset = "0xFAA468", VA = "0xFAA468")]
	public void ExplosiveRemoved(GameObject item)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xFAA500", Offset = "0xFAA500", VA = "0xFAA500")]
	public ExplosionCrate()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ExplosiveItem : PlayerItem
{
	[Token(Token = "0x20004C4")]
	public enum ExplosiveType
	{
		[Token(Token = "0x4002588")]
		basic,
		[Token(Token = "0x4002589")]
		improved,
		[Token(Token = "0x400258A")]
		wallDestroyer
	}

	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5BF4", Offset = "0xAE5BF4")]
	private sealed class <StartFuseBurningSequence>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0xFAC52C", Offset = "0xFAC52C", VA = "0xFAC52C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0xFAC594", Offset = "0xFAC594", VA = "0xFAC594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xFAA974", Offset = "0xFAA974", VA = "0xFAA974")]
		[DebuggerHidden]
		public <StartFuseBurningSequence>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xFAC364", Offset = "0xFAC364", VA = "0xFAC364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xFAC368", Offset = "0xFAC368", VA = "0xFAC368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xFAC534", Offset = "0xFAC534", VA = "0xFAC534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C04", Offset = "0xAE5C04")]
	private sealed class <GrenadeSequence>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xFAC2F4", Offset = "0xFAC2F4", VA = "0xFAC2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xFAC35C", Offset = "0xFAC35C", VA = "0xFAC35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xFAAA10", Offset = "0xFAAA10", VA = "0xFAAA10")]
		[DebuggerHidden]
		public <GrenadeSequence>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xFAC220", Offset = "0xFAC220", VA = "0xFAC220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xFAC224", Offset = "0xFAC224", VA = "0xFAC224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xFAC2FC", Offset = "0xFAC2FC", VA = "0xFAC2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C14", Offset = "0xAE5C14")]
	private sealed class <ExplodeSequence>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <hitColliderCount>5__2;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxDistance>5__3;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MineBlock <mineblock>5__5;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<MineBlock>.Enumerator <>7__wrap5;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] <>7__wrap6;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <hits>5__8;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <i>5__9;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xFAC1B0", Offset = "0xFAC1B0", VA = "0xFAC1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0xFAC218", Offset = "0xFAC218", VA = "0xFAC218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xFAAD04", Offset = "0xFAAD04", VA = "0xFAAD04")]
		[DebuggerHidden]
		public <ExplodeSequence>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xFAB43C", Offset = "0xFAB43C", VA = "0xFAB43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xFAB4B0", Offset = "0xFAB4B0", VA = "0xFAB4B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFAB458", Offset = "0xFAB458", VA = "0xFAB458")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xFAC1B8", Offset = "0xFAC1B8", VA = "0xFAC1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float fuseLenght;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9D3C", Offset = "0xAE9D3C")]
	private bool <IsInsideHole>k__BackingField;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 _originalMaskPosition;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 _originalParticlePosition;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool _fuseLit;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	private bool _exploded;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectPool explosionPool;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioClip explosionSound;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LayerMask explosionHitLayers;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform particles;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform fuseBegin;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Renderer fuseRenderer;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ExplosiveType type;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Renderer[] _renderers;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public ObjectPool myPool;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool _purchased;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _specialActivated;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int _originalLayer;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	public ExplosionCrate myCrate;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ParentConstraint _constraint;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Collider[] _overlapColliders;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private RaycastHit[] _raycastResults;

	[Token(Token = "0x17000026")]
	public bool IsInsideHole
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xFAA5A4", Offset = "0xFAA5A4", VA = "0xFAA5A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBC60", Offset = "0xAFBC60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000426")]
		[Address(RVA = "0xFAA5AC", Offset = "0xFAA5AC", VA = "0xFAA5AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBC70", Offset = "0xAFBC70")]
		set
		{
		}
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xFAA5B8", Offset = "0xFAA5B8", VA = "0xFAA5B8", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xFAA670", Offset = "0xFAA670", VA = "0xFAA670", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xFAA76C", Offset = "0xFAA76C", VA = "0xFAA76C")]
	public void LitFuse()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xFAA904", Offset = "0xFAA904", VA = "0xFAA904")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBC80", Offset = "0xAFBC80")]
	private IEnumerator StartFuseBurningSequence()
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xFAA028", Offset = "0xFAA028", VA = "0xFAA028")]
	public void ToggleOverlapColliders(bool status)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xFAA9A0", Offset = "0xFAA9A0", VA = "0xFAA9A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBCE4", Offset = "0xAFBCE4")]
	public IEnumerator GrenadeSequence()
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xFAAA3C", Offset = "0xFAAA3C", VA = "0xFAAA3C")]
	public void Explode()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xFAAC94", Offset = "0xFAAC94", VA = "0xFAAC94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBD48", Offset = "0xAFBD48")]
	private IEnumerator ExplodeSequence()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xFAAD30", Offset = "0xFAAD30", VA = "0xFAAD30", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xFAAF24", Offset = "0xFAAF24", VA = "0xFAAF24", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xFAAD6C", Offset = "0xFAAD6C", VA = "0xFAAD6C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xFAAF60", Offset = "0xFAAF60", VA = "0xFAAF60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xFAAFF0", Offset = "0xFAAFF0", VA = "0xFAAFF0", Slot = "22")]
	public override void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xFAB110", Offset = "0xFAB110", VA = "0xFAB110", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xFAA858", Offset = "0xFAA858", VA = "0xFAA858")]
	public void RemoveFromCrate()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xFAB3B8", Offset = "0xFAB3B8", VA = "0xFAB3B8")]
	public ExplosiveItem()
	{
	}
}
[Token(Token = "0x20000AE")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fpsMeasurePeriod;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxFPS;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _accumulatedFPS;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _FPStext;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _nextFlushTime;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentFPS;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string[] _fpsStrings;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _previousFlushTime;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text _textComponent;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isPaused;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool showShaderInfo;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool showRamInfo;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StringBuilder _stringBuilder;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xFAD51C", Offset = "0xFAD51C", VA = "0xFAD51C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xFAD898", Offset = "0xFAD898", VA = "0xFAD898")]
	private void Update()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xFADC7C", Offset = "0xFADC7C", VA = "0xFADC7C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xFADCB8", Offset = "0xFADCB8", VA = "0xFADCB8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xFADD8C", Offset = "0xFADD8C", VA = "0xFADD8C")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x20000AF")]
public class FireFlicker : MonoBehaviour
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xFADE00", Offset = "0xFADE00", VA = "0xFADE00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xFADE78", Offset = "0xFADE78", VA = "0xFADE78")]
	private void Flicker()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xFADF64", Offset = "0xFADF64", VA = "0xFADF64")]
	public FireFlicker()
	{
	}
}
[Token(Token = "0x20000B0")]
public class FlapWingsSFX : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sheriffRewardChompy;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip flapSFX;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xFADF6C", Offset = "0xFADF6C", VA = "0xFADF6C")]
	public void FlapWings()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xFAE040", Offset = "0xFAE040", VA = "0xFAE040")]
	public void PoofVFX()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xFAE09C", Offset = "0xFAE09C", VA = "0xFAE09C")]
	public void ContinueChompy()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xFAE0F8", Offset = "0xFAE0F8", VA = "0xFAE0F8")]
	public FlapWingsSFX()
	{
	}
}
[Token(Token = "0x20000B1")]
public class FracturedExtension : MonoBehaviour
{
	[Token(Token = "0x6000444")]
	[Address(RVA = "0xFB237C", Offset = "0xFB237C", VA = "0xFB237C")]
	public void OnChunkDetach()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xFB2380", Offset = "0xFB2380", VA = "0xFB2380")]
	public FracturedExtension()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1A28", Offset = "0xAE1A28")]
public class GenericBreakable : MonoBehaviour, IBreakable
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int health;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask destroyerLayers;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject brokenPrefab;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool canSpawnLoot;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] relicLootPool;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] trashLootPool;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject gold;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject hitParticle;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float lootExplosionForce;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float lootChance;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float relicChance;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool collisionDamage;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioSource;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xE9DBB0", Offset = "0xE9DBB0", VA = "0xE9DBB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xE9DC08", Offset = "0xE9DC08", VA = "0xE9DC08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xE9DCD0", Offset = "0xE9DCD0", VA = "0xE9DCD0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xE9DDAC", Offset = "0xE9DDAC", VA = "0xE9DDAC", Slot = "5")]
	public void TakeDamage(int damage, Vector3 hitPosition)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xE9DF7C", Offset = "0xE9DF7C", VA = "0xE9DF7C", Slot = "4")]
	public void Break()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xE9E200", Offset = "0xE9E200", VA = "0xE9E200")]
	public void SpawnLoot()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xE9E300", Offset = "0xE9E300", VA = "0xE9E300")]
	private void CreateLoot(GameObject loot)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xE9E650", Offset = "0xE9E650", VA = "0xE9E650")]
	private void CreateLoot(GameObject loot, bool NoExplosionForce)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xE9E854", Offset = "0xE9E854", VA = "0xE9E854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xE9E91C", Offset = "0xE9E91C", VA = "0xE9E91C")]
	public GenericBreakable()
	{
	}
}
[Token(Token = "0x20000B3")]
public class GenericBreakableDisappear : MonoBehaviour
{
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C24", Offset = "0xAE5C24")]
	private sealed class <Die>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericBreakableDisappear <>4__this;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0xE9ED14", Offset = "0xE9ED14", VA = "0xE9ED14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0xE9ED7C", Offset = "0xE9ED7C", VA = "0xE9ED7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xE9EAC4", Offset = "0xE9EAC4", VA = "0xE9EAC4")]
		[DebuggerHidden]
		public <Die>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xE9EB04", Offset = "0xE9EB04", VA = "0xE9EB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xE9EB08", Offset = "0xE9EB08", VA = "0xE9EB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xE9ED1C", Offset = "0xE9ED1C", VA = "0xE9ED1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float explosionMinForce;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float explosionMaxForce;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float explosionRadius;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float upwardsModifier;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float dieTime;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody[] debrisRigidbodies;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 explosionPosition;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xE9E938", Offset = "0xE9E938", VA = "0xE9E938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xE9EA00", Offset = "0xE9EA00", VA = "0xE9EA00")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE9E990", Offset = "0xE9E990", VA = "0xE9E990")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBDAC", Offset = "0xAFBDAC")]
	private IEnumerator Die()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE9EAF0", Offset = "0xE9EAF0", VA = "0xE9EAF0")]
	public GenericBreakableDisappear()
	{
	}
}
[Token(Token = "0x20000B4")]
public class GenericCullingGroup : MonoBehaviour
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _sphereGameobjects;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _cullingCooldown;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _groupChanged;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float hideDistance;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float showDistance;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sphereSize;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE9ED84", Offset = "0xE9ED84", VA = "0xE9ED84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xE9D40C", Offset = "0xE9D40C", VA = "0xE9D40C")]
	public void AddCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xE9D67C", Offset = "0xE9D67C", VA = "0xE9D67C")]
	public void RemoveCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xE9CF04", Offset = "0xE9CF04", VA = "0xE9CF04")]
	public void ClearCulling()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xE9EEFC", Offset = "0xE9EEFC", VA = "0xE9EEFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xE9F0E4", Offset = "0xE9F0E4", VA = "0xE9F0E4")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xE9F33C", Offset = "0xE9F33C", VA = "0xE9F33C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xE9F350", Offset = "0xE9F350", VA = "0xE9F350")]
	public GenericCullingGroup()
	{
	}
}
[Token(Token = "0x20000B5")]
public class GhostHealth : MineBlock
{
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C34", Offset = "0xAE5C34")]
	private sealed class <Flicker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GhostHealth <>4__this;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0xE9FAE0", Offset = "0xE9FAE0", VA = "0xE9FAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0xE9FB48", Offset = "0xE9FB48", VA = "0xE9FB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xE9F6A8", Offset = "0xE9F6A8", VA = "0xE9F6A8")]
		[DebuggerHidden]
		public <Flicker>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xE9F8F8", Offset = "0xE9F8F8", VA = "0xE9F8F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xE9F8FC", Offset = "0xE9F8FC", VA = "0xE9F8FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xE9FAE8", Offset = "0xE9FAE8", VA = "0xE9FAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ObjectPool myPool;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip ghostHurt;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip ghostDeath;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ghostDeathParticlePrefab;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectPool _ghostDeathParticlePool;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Coroutine _flicker;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock ghostMaterialPropertyBlock;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Renderer[] _myRenderers;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xE9F404", Offset = "0xE9F404", VA = "0xE9F404", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xE9F4F0", Offset = "0xE9F4F0", VA = "0xE9F4F0", Slot = "6")]
	public override bool DamageAndCheckChunk(int damage, FracturedChunk chunk)
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xE9F638", Offset = "0xE9F638", VA = "0xE9F638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBE10", Offset = "0xAFBE10")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xE9F6D4", Offset = "0xE9F6D4", VA = "0xE9F6D4", Slot = "7")]
	public override void Explode(bool instaHide = false)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xE9F87C", Offset = "0xE9F87C", VA = "0xE9F87C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xE9F880", Offset = "0xE9F880", VA = "0xE9F880", Slot = "4")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xE9F890", Offset = "0xE9F890", VA = "0xE9F890")]
	public GhostHealth()
	{
	}
}
[Token(Token = "0x20000B6")]
[SelectionBase]
public class GrabbableItem : VRTK_InteractableObject
{
	[Token(Token = "0x20004CA")]
	public enum itemType
	{
		[Token(Token = "0x40025A6")]
		Mineral,
		[Token(Token = "0x40025A7")]
		Relic,
		[Token(Token = "0x40025A8")]
		Other,
		[Token(Token = "0x40025A9")]
		Gem
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C44", Offset = "0xAE5C44")]
	private sealed class <TemporaryCollisionToggle>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbableItem <>4__this;

		[Token(Token = "0x170001CE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002105")]
			[Address(RVA = "0xEA3488", Offset = "0xEA3488", VA = "0xEA3488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0xEA34F0", Offset = "0xEA34F0", VA = "0xEA34F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xEA2534", Offset = "0xEA2534", VA = "0xEA2534")]
		[DebuggerHidden]
		public <TemporaryCollisionToggle>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xEA3178", Offset = "0xEA3178", VA = "0xEA3178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xEA317C", Offset = "0xEA317C", VA = "0xEA317C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xEA3490", Offset = "0xEA3490", VA = "0xEA3490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C54", Offset = "0xAE5C54")]
	private sealed class <DelayedPool>d__48 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbableItem <>4__this;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject go;

		[Token(Token = "0x170001D0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0xEA2EA8", Offset = "0xEA2EA8", VA = "0xEA2EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0xEA2F10", Offset = "0xEA2F10", VA = "0xEA2F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xEA2A44", Offset = "0xEA2A44", VA = "0xEA2A44")]
		[DebuggerHidden]
		public <DelayedPool>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xEA2D5C", Offset = "0xEA2D5C", VA = "0xEA2D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xEA2D60", Offset = "0xEA2D60", VA = "0xEA2D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xEA2EB0", Offset = "0xEA2EB0", VA = "0xEA2EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C64", Offset = "0xAE5C64")]
	private sealed class <DelayedReset>d__49 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FracturedObject fracturedObject;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableItem <>4__this;

		[Token(Token = "0x170001D2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0xEA30AC", Offset = "0xEA30AC", VA = "0xEA30AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0xEA3114", Offset = "0xEA3114", VA = "0xEA3114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xEA2A70", Offset = "0xEA2A70", VA = "0xEA2A70")]
		[DebuggerHidden]
		public <DelayedReset>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xEA2F74", Offset = "0xEA2F74", VA = "0xEA2F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xEA2F78", Offset = "0xEA2F78", VA = "0xEA2F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xEA30B4", Offset = "0xEA30B4", VA = "0xEA30B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool kinematicAfterUngrab;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE9E8C", Offset = "0xAE9E8C")]
	private VRTK_ControllerReference <ControllerReference>k__BackingField;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float overlapChunkCheckRadius;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 overlapCheckRadiusOffset;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public itemType isLoot;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public LayerMask connectedLayers;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected List<Transform> connectedChunks;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool initialized;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	protected float _slowMoTime;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Collider collider;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool relicReleased;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip relicBreakClip;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int moneyValue;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public int spawnChanceWeight;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool DLC_only;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public ObjectPool myObjectPool;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject jointStuff;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public FracturedObject fracturedObject;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool kinematicOnStart;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected Rigidbody[] _childRigidbodies;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private List<Vector3> _originalChildRigidbodyLocalpositions;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private List<Quaternion> _originalChildRigidbodyLocalrotations;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<Transform> _originalChildRigidbodyParents;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private int _originalLayer;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private List<Collider> _nonTriggerColliders;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> _activeLoots;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool _handsAssigned;

	[Token(Token = "0x17000027")]
	public VRTK_ControllerReference ControllerReference
	{
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xEA04F0", Offset = "0xEA04F0", VA = "0xEA04F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBE74", Offset = "0xAFBE74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xEA04F8", Offset = "0xEA04F8", VA = "0xEA04F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFBE84", Offset = "0xAFBE84")]
		private set
		{
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xEA0500", Offset = "0xEA0500", VA = "0xEA0500", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xEA0788", Offset = "0xEA0788", VA = "0xEA0788")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xEA0850", Offset = "0xEA0850", VA = "0xEA0850", Slot = "87")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xEA09C8", Offset = "0xEA09C8", VA = "0xEA09C8", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xEA0BCC", Offset = "0xEA0BCC", VA = "0xEA0BCC", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xEA0CC4", Offset = "0xEA0CC4", VA = "0xEA0CC4")]
	public static GameObject[] GetActiveLootArray()
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xEA0A70", Offset = "0xEA0A70", VA = "0xEA0A70")]
	private void OculusButtonsAssign()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xEA0D40", Offset = "0xEA0D40", VA = "0xEA0D40")]
	public void ExplodeMyMineblock()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xEA0E38", Offset = "0xEA0E38", VA = "0xEA0E38")]
	public void AddConnectedChunk(Transform chunk)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xEA15FC", Offset = "0xEA15FC", VA = "0xEA15FC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xEA16D4", Offset = "0xEA16D4", VA = "0xEA16D4", Slot = "88")]
	public virtual void FreedFromChunk(Transform chunk)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xEA2278", Offset = "0xEA2278", VA = "0xEA2278", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xEA2358", Offset = "0xEA2358", VA = "0xEA2358", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xEA2208", Offset = "0xEA2208", VA = "0xEA2208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBE94", Offset = "0xAFBE94")]
	protected IEnumerator<float> TemporaryCollisionToggle()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xEA2560", Offset = "0xEA2560", VA = "0xEA2560", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xEA283C", Offset = "0xEA283C", VA = "0xEA283C", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xEA1230", Offset = "0xEA1230", VA = "0xEA1230")]
	private void DisableFracturingColliders(bool value)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xEA20FC", Offset = "0xEA20FC", VA = "0xEA20FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBEF8", Offset = "0xAFBEF8")]
	private IEnumerator<float> DelayedPool(float time, GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xEA218C", Offset = "0xEA218C", VA = "0xEA218C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBF5C", Offset = "0xAFBF5C")]
	private IEnumerator<float> DelayedReset(FracturedObject fracturedObject)
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xEA2A9C", Offset = "0xEA2A9C", VA = "0xEA2A9C")]
	public void TriggerAchievement(string ach)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xEA2B04", Offset = "0xEA2B04", VA = "0xEA2B04")]
	public static void ClearStatic()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xEA2B80", Offset = "0xEA2B80", VA = "0xEA2B80")]
	public GrabbableItem()
	{
	}
}
[Token(Token = "0x20000B7")]
public class GrenadePin : VRTK_InteractableObject
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ExplosiveItem grenadeScript;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform originalPositionHelper;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _pinPulled;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public OnSale onSale;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 _controllerStartUsePosition;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 _pulledPosition;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Transform _cachedController;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _pinLerpValue;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _hasUsed;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xEA3554", Offset = "0xEA3554", VA = "0xEA3554", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xEA3644", Offset = "0xEA3644", VA = "0xEA3644")]
	private void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xEA38B0", Offset = "0xEA38B0", VA = "0xEA38B0", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xEA39AC", Offset = "0xEA39AC", VA = "0xEA39AC", Slot = "28")]
	public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xEA3A3C", Offset = "0xEA3A3C", VA = "0xEA3A3C", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xEA3748", Offset = "0xEA3748", VA = "0xEA3748")]
	private void ResetTransform()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xEA3A64", Offset = "0xEA3A64", VA = "0xEA3A64", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xEA3E28", Offset = "0xEA3E28", VA = "0xEA3E28")]
	private void Pulled()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xEA3F48", Offset = "0xEA3F48", VA = "0xEA3F48")]
	public GrenadePin()
	{
	}
}
[Token(Token = "0x20000B8")]
public class GroundLootDetector : MonoBehaviour
{
	[Token(Token = "0x6000485")]
	[Address(RVA = "0xEA3F50", Offset = "0xEA3F50", VA = "0xEA3F50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xEA4128", Offset = "0xEA4128", VA = "0xEA4128")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xEA4328", Offset = "0xEA4328", VA = "0xEA4328")]
	public GroundLootDetector()
	{
	}
}
[Token(Token = "0x20000B9")]
public class HalloweenEye : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C74", Offset = "0xAE5C74")]
	private sealed class <DelayedOpenEye>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HalloweenEye <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0xEA458C", Offset = "0xEA458C", VA = "0xEA458C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0xEA45F4", Offset = "0xEA45F4", VA = "0xEA45F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xEA4484", Offset = "0xEA4484", VA = "0xEA4484")]
		[DebuggerHidden]
		public <DelayedOpenEye>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xEA44B8", Offset = "0xEA44B8", VA = "0xEA44B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xEA44BC", Offset = "0xEA44BC", VA = "0xEA44BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xEA4594", Offset = "0xEA4594", VA = "0xEA4594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool blinking;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int blinkHash;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xEA4330", Offset = "0xEA4330", VA = "0xEA4330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xEA43A0", Offset = "0xEA43A0", VA = "0xEA43A0")]
	public void DoBlink(float delay)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xEA4404", Offset = "0xEA4404", VA = "0xEA4404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFBFC0", Offset = "0xAFBFC0")]
	private IEnumerator DelayedOpenEye(float delay)
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEA44B0", Offset = "0xEA44B0", VA = "0xEA44B0")]
	public HalloweenEye()
	{
	}
}
[Token(Token = "0x20000BA")]
public class HalloweenEyeMaster : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9E9C", Offset = "0xAE9E9C")]
	[SerializeField]
	private int changeOfBlink;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float cooldown;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _checkCooldownTime;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEA45FC", Offset = "0xEA45FC", VA = "0xEA45FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xEA47F8", Offset = "0xEA47F8", VA = "0xEA47F8")]
	public HalloweenEyeMaster()
	{
	}
}
[Token(Token = "0x20000BB")]
public class HalloweenSpiderController : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] movePoints;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] spiderbros;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] _targetPoint;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] _changeMovePointTime;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEA480C", Offset = "0xEA480C", VA = "0xEA480C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xEA4890", Offset = "0xEA4890", VA = "0xEA4890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEA4B54", Offset = "0xEA4B54", VA = "0xEA4B54")]
	public HalloweenSpiderController()
	{
	}
}
[Token(Token = "0x20000BC")]
[SelectionBase]
public class HalloweenStartPumpkin : PlayerItem
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform playerHDM;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float checkFrequencyTimer;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioClip eatClip;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject explodeParticlePrefab;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Text signText;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEA4B64", Offset = "0xEA4B64", VA = "0xEA4B64", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEA4C2C", Offset = "0xEA4C2C", VA = "0xEA4C2C", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEA4FEC", Offset = "0xEA4FEC", VA = "0xEA4FEC", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xEA518C", Offset = "0xEA518C", VA = "0xEA518C", Slot = "24")]
	public override void Ungrabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xEA5254", Offset = "0xEA5254", VA = "0xEA5254")]
	public HalloweenStartPumpkin()
	{
	}
}
[Token(Token = "0x20000BD")]
public class HandAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int previousAnimationState;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] leatherSounds;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRTK_InteractGrab grab;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRTK_Pointer pointerScript;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandAnimationController left;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HandAnimationController right;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isRight;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xEA525C", Offset = "0xEA525C", VA = "0xEA525C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xEA52D4", Offset = "0xEA52D4", VA = "0xEA52D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xEA534C", Offset = "0xEA534C", VA = "0xEA534C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEA53E0", Offset = "0xEA53E0", VA = "0xEA53E0")]
	private void PlayLeatherSound()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEA551C", Offset = "0xEA551C", VA = "0xEA551C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEA5BD0", Offset = "0xEA5BD0", VA = "0xEA5BD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEA5E78", Offset = "0xEA5E78", VA = "0xEA5E78")]
	public void Grab(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEA5EE0", Offset = "0xEA5EE0", VA = "0xEA5EE0")]
	public void Release(object sender, ObjectInteractEventArgs e)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xEA5F78", Offset = "0xEA5F78", VA = "0xEA5F78")]
	public void PointPress(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xEA6044", Offset = "0xEA6044", VA = "0xEA6044")]
	public void PointRelease(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xEA60AC", Offset = "0xEA60AC", VA = "0xEA60AC")]
	public void GripPress(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xEA6114", Offset = "0xEA6114", VA = "0xEA6114")]
	public void GripRelease(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xEA617C", Offset = "0xEA617C", VA = "0xEA617C")]
	public void MenuPress(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xEA6180", Offset = "0xEA6180", VA = "0xEA6180")]
	public void MenuRelease(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xEA61E8", Offset = "0xEA61E8", VA = "0xEA61E8")]
	public void Pinch()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xEA5AA8", Offset = "0xEA5AA8", VA = "0xEA5AA8")]
	private void ResetAnimator()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xEA6250", Offset = "0xEA6250", VA = "0xEA6250")]
	public HandAnimationController()
	{
	}
}
[Token(Token = "0x20000BE")]
public class HandController : MonoBehaviour
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandController singleton;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Stabilizr leftStabilizr;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Stabilizr rightStabilizr;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandAnimationController leftAnimation;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandAnimationController rightAnimation;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xEA6258", Offset = "0xEA6258", VA = "0xEA6258")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xEA62AC", Offset = "0xEA62AC", VA = "0xEA62AC")]
	public HandController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class HandGrabType : MonoBehaviour
{
	[Token(Token = "0x20004CF")]
	public enum HoldType
	{
		[Token(Token = "0x40025BB")]
		Hilt,
		[Token(Token = "0x40025BC")]
		Pinch,
		[Token(Token = "0x40025BD")]
		Sphere,
		[Token(Token = "0x40025BE")]
		Gun,
		[Token(Token = "0x40025BF")]
		Misc,
		[Token(Token = "0x40025C0")]
		Grab
	}

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HoldType holdType;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float squeeze;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xEA62B4", Offset = "0xEA62B4", VA = "0xEA62B4")]
	public HandGrabType()
	{
	}
}
[Token(Token = "0x20000C0")]
public class HandMeterHandler : MonoBehaviour
{
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C84", Offset = "0xAE5C84")]
	private sealed class <LerpMoneyTumblerSequence>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandMeterHandler <>4__this;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int tumbler;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion targetRotation;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <startRot>5__2;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <duration>5__3;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <_timer>5__4;

		[Token(Token = "0x170001D6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0xEAB8B0", Offset = "0xEAB8B0", VA = "0xEAB8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0xEAB918", Offset = "0xEAB918", VA = "0xEAB918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xEAB144", Offset = "0xEAB144", VA = "0xEAB144")]
		[DebuggerHidden]
		public <LerpMoneyTumblerSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xEAB5BC", Offset = "0xEAB5BC", VA = "0xEAB5BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xEAB5C0", Offset = "0xEAB5C0", VA = "0xEAB5C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xEAB8B8", Offset = "0xEAB8B8", VA = "0xEAB8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5C94", Offset = "0xAE5C94")]
	private sealed class <LerpFloorTumblerSequence>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandMeterHandler <>4__this;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion targetRotation;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <startRot>5__2;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <duration>5__3;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <_timer>5__4;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0xEAB54C", Offset = "0xEAB54C", VA = "0xEAB54C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0xEAB5B4", Offset = "0xEAB5B4", VA = "0xEAB5B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xEAB208", Offset = "0xEAB208", VA = "0xEAB208")]
		[DebuggerHidden]
		public <LerpFloorTumblerSequence>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xEAB2EC", Offset = "0xEAB2EC", VA = "0xEAB2EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xEAB2F0", Offset = "0xEAB2F0", VA = "0xEAB2F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xEAB554", Offset = "0xEAB554", VA = "0xEAB554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandMeterHandler singleton;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform level;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform timer;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] moneyTumblers;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] moneyTumbler0Euler;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] moneyTumbler9Euler;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource[] tumblerAudioSources;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource levelAudioSource;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip tumblerLock;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineHandle[] _moneyCouroutine;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 levelTumbler0euler;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 levelTumbler9euler;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine _levelCoroutine;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minTimer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxTimer;

	[Token(Token = "0x4000533")]
	private const float _tumblerSpeed = 0.01f;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem alarmParticle;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Light alarmLight;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xEAA994", Offset = "0xEAA994", VA = "0xEAA994")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xEAA9E8", Offset = "0xEAA9E8", VA = "0xEAA9E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xEAAD58", Offset = "0xEAAD58", VA = "0xEAAD58")]
	public void SetTimerPosition(float t)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xEAAB2C", Offset = "0xEAAB2C", VA = "0xEAAB2C")]
	public void SetMoneyTumblers(int money)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xEAAE0C", Offset = "0xEAAE0C", VA = "0xEAAE0C")]
	public int Nthdigit(int x, int n)
	{
		return default(int);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xEAAE60", Offset = "0xEAAE60", VA = "0xEAAE60")]
	private void SetMoneyTumbler(int tumbler, int value)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xEAB09C", Offset = "0xEAB09C", VA = "0xEAB09C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC024", Offset = "0xAFC024")]
	private IEnumerator<float> LerpMoneyTumblerSequence(int tumbler, Quaternion targetRotation)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xEAABD8", Offset = "0xEAABD8", VA = "0xEAABD8")]
	public void SetFloor(int floor)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xEAB170", Offset = "0xEAB170", VA = "0xEAB170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC088", Offset = "0xAFC088")]
	private IEnumerator LerpFloorTumblerSequence(Quaternion targetRotation)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xEAB234", Offset = "0xEAB234", VA = "0xEAB234")]
	public HandMeterHandler()
	{
	}
}
[Token(Token = "0x20000C1")]
public class Hatch : MonoBehaviour
{
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CA4", Offset = "0xAE5CA4")]
	private sealed class <DelayedClose>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hatch <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0xEAC190", Offset = "0xEAC190", VA = "0xEAC190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0xEAC1F8", Offset = "0xEAC1F8", VA = "0xEAC1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xEAC044", Offset = "0xEAC044", VA = "0xEAC044")]
		[DebuggerHidden]
		public <DelayedClose>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xEAC0CC", Offset = "0xEAC0CC", VA = "0xEAC0CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xEAC0D0", Offset = "0xEAC0D0", VA = "0xEAC0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xEAC198", Offset = "0xEAC198", VA = "0xEAC198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hatch singleton;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _grabbedItems;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _closing;

	[Token(Token = "0x17000028")]
	public int GrabbedItems
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xEABFCC", Offset = "0xEABFCC", VA = "0xEABFCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xEA2784", Offset = "0xEA2784", VA = "0xEA2784")]
		set
		{
		}
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xEABFD4", Offset = "0xEABFD4", VA = "0xEABFD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC0EC", Offset = "0xAFC0EC")]
	private IEnumerator DelayedClose()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xEAC070", Offset = "0xEAC070", VA = "0xEAC070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xEAC0C4", Offset = "0xEAC0C4", VA = "0xEAC0C4")]
	public Hatch()
	{
	}
}
[Token(Token = "0x20000C2")]
public class HeadsetFollow : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerHDM;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xEAC200", Offset = "0xEAC200", VA = "0xEAC200")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xEAC278", Offset = "0xEAC278", VA = "0xEAC278")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xEAC2F0", Offset = "0xEAC2F0", VA = "0xEAC2F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xEAC35C", Offset = "0xEAC35C", VA = "0xEAC35C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xEAC444", Offset = "0xEAC444", VA = "0xEAC444")]
	public HeadsetFollow()
	{
	}
}
[Token(Token = "0x20000C3")]
public class HelperArrow : MonoBehaviour
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HelperArrow singleton;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _followTarget;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lootBucket;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerItem pickAxe;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject model;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool grabbedPickaxe;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool droppedLoot;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xEAC44C", Offset = "0xEAC44C", VA = "0xEAC44C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xEAC4D0", Offset = "0xEAC4D0", VA = "0xEAC4D0")]
	public void SetFollow(Transform target)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xEAC4F8", Offset = "0xEAC4F8", VA = "0xEAC4F8")]
	public void Unfollow()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xEAC500", Offset = "0xEAC500", VA = "0xEAC500")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xEAC73C", Offset = "0xEAC73C", VA = "0xEAC73C")]
	public HelperArrow()
	{
	}
}
[Token(Token = "0x20000C4")]
public class HideNonSteam : MonoBehaviour
{
	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer[] renderers;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider[] colliders;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xEAC744", Offset = "0xEAC744", VA = "0xEAC744")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xEAC7BC", Offset = "0xEAC7BC", VA = "0xEAC7BC")]
	private void ToggleStuff(bool status)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xEAC884", Offset = "0xEAC884", VA = "0xEAC884")]
	public HideNonSteam()
	{
	}
}
[Token(Token = "0x20000C5")]
public class HotSpotLightTrigger : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask hotSpotLayer;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<RelicHotSpot, List<Collider>> spotVisibleDictionary;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xEACB80", Offset = "0xEACB80", VA = "0xEACB80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xEACE44", Offset = "0xEACE44", VA = "0xEACE44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xEACFBC", Offset = "0xEACFBC", VA = "0xEACFBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xEAD0E8", Offset = "0xEAD0E8", VA = "0xEAD0E8")]
	public HotSpotLightTrigger()
	{
	}
}
[Token(Token = "0x20000C6")]
public class InteractableDoorHandle : VRTK_InteractableObject
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float leverPosition;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool usingLever;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform leverUser;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VRTK_InteractableObject IO;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform trainLever;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform leverBottom;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform leverTop;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform minRotation;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform maxRotation;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float oldLeverPosition;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform leverTarget;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xEAD71C", Offset = "0xEAD71C", VA = "0xEAD71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xEAD7E4", Offset = "0xEAD7E4", VA = "0xEAD7E4", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xEADC60", Offset = "0xEADC60", VA = "0xEADC60")]
	public void UnUsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xEADC6C", Offset = "0xEADC6C", VA = "0xEADC6C")]
	public void UsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xEADB10", Offset = "0xEADB10", VA = "0xEADB10")]
	public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xEADD30", Offset = "0xEADD30", VA = "0xEADD30")]
	public InteractableDoorHandle()
	{
	}
}
[Token(Token = "0x20000C7")]
public interface IBreakable
{
	[Token(Token = "0x60004D0")]
	void Break();

	[Token(Token = "0x60004D1")]
	void TakeDamage(int damage, Vector3 hitPosition);
}
[Token(Token = "0x20000C8")]
public class ItemHook : MonoBehaviour
{
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xEADEEC", Offset = "0xEADEEC", VA = "0xEADEEC")]
	public ItemHook()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ItemPositionResetter : MonoBehaviour
{
	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CB4", Offset = "0xAE5CB4")]
	private sealed class <DelayedReset>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPositionResetter <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0xEAF9E8", Offset = "0xEAF9E8", VA = "0xEAF9E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0xEAFA50", Offset = "0xEAFA50", VA = "0xEAFA50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xEAF864", Offset = "0xEAF864", VA = "0xEAF864")]
		[DebuggerHidden]
		public <DelayedReset>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xEAF91C", Offset = "0xEAF91C", VA = "0xEAF91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xEAF920", Offset = "0xEAF920", VA = "0xEAF920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xEAF9F0", Offset = "0xEAF9F0", VA = "0xEAF9F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerTransform;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] _renderers;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRTK_InteractableObject _vrtkItem;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerItem _playerItem;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastSeenTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _cooledDownTime;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool distanceReset;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool invisibleReset;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool longTimeNotSeenReset;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool aboveThePlayerReset;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool elevatorOnly;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAE9F08", Offset = "0xAE9F08")]
	public bool ResetOnDroppedOffTheCliff;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool overrideTeleportActivated;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 overrideTeleportPosition;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xEADEF4", Offset = "0xEADEF4", VA = "0xEADEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xEADF7C", Offset = "0xEADF7C", VA = "0xEADF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xEAF370", Offset = "0xEAF370", VA = "0xEAF370")]
	private bool OutsideElevator()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xEAE7EC", Offset = "0xEAE7EC", VA = "0xEAE7EC")]
	public void ResetPosition(bool force = false)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xEAF448", Offset = "0xEAF448", VA = "0xEAF448")]
	private Transform FindClosestHook(Transform closestHook)
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xEAF3D8", Offset = "0xEAF3D8", VA = "0xEAF3D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC150", Offset = "0xAFC150")]
	private IEnumerator DelayedReset()
	{
		return null;
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xEAF890", Offset = "0xEAF890", VA = "0xEAF890")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xEAF90C", Offset = "0xEAF90C", VA = "0xEAF90C")]
	public ItemPositionResetter()
	{
	}
}
[Token(Token = "0x20000CA")]
public class LSDEnding : MonoBehaviour
{
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CC4", Offset = "0xAE5CC4")]
	private sealed class <LSD_Sequence>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LSDEnding <>4__this;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Train <train>5__3;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0xEB0914", Offset = "0xEB0914", VA = "0xEB0914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0xEB097C", Offset = "0xEB097C", VA = "0xEB097C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xEB02DC", Offset = "0xEB02DC", VA = "0xEB02DC")]
		[DebuggerHidden]
		public <LSD_Sequence>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xEB0310", Offset = "0xEB0310", VA = "0xEB0310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xEB0314", Offset = "0xEB0314", VA = "0xEB0314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xEB091C", Offset = "0xEB091C", VA = "0xEB091C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LSDEnding singleton;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lsdSkybox;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material townSkybox;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endingTransform;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lsdArea;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform godRadio;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] floatingRocks;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject hiddenDoor;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource radioClipSource;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource noiseClipSource;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform godSpot;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PineAmulet amulet;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _originalRadioScale;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _endingStarted;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool _endSequenceStarted;

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xEAFA58", Offset = "0xEAFA58", VA = "0xEAFA58")]
	public bool GetEndingStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xEAFA60", Offset = "0xEAFA60", VA = "0xEAFA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xEAFAF4", Offset = "0xEAFAF4", VA = "0xEAFAF4")]
	public void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xEB026C", Offset = "0xEB026C", VA = "0xEB026C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC1B4", Offset = "0xAFC1B4")]
	private IEnumerator LSD_Sequence()
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xEB0040", Offset = "0xEB0040", VA = "0xEB0040")]
	public void StartLSDEnding()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xEB0308", Offset = "0xEB0308", VA = "0xEB0308")]
	public LSDEnding()
	{
	}
}
[Token(Token = "0x20000CB")]
public class LaserProjectile : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _speed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _speedMultiplier;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _despawnTime;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _noColliderTime;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _hits;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider _collider;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource _loopAudioSource;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask hitLayers;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ObjectPool myPool;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject explosionParticle;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip explosionAudioClip;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectPool _explosionParticlePool;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem particleTrail;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xF72AD4", Offset = "0xF72AD4", VA = "0xF72AD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xF72C60", Offset = "0xF72C60", VA = "0xF72C60")]
	public void DespawnClean()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xF72CD0", Offset = "0xF72CD0", VA = "0xF72CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xF72E9C", Offset = "0xF72E9C", VA = "0xF72E9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xF73998", Offset = "0xF73998", VA = "0xF73998")]
	public LaserProjectile()
	{
	}
}
[Token(Token = "0x20000CC")]
public class LevelTimer : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelTimer singleton;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Text textComponent;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xF79184", Offset = "0xF79184", VA = "0xF79184")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xF791D8", Offset = "0xF791D8", VA = "0xF791D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xF79250", Offset = "0xF79250", VA = "0xF79250")]
	public LevelTimer()
	{
	}
}
[Token(Token = "0x20000CD")]
public class LocalizeText : MonoBehaviour
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text tmp;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text tmpUI;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textID;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xF7981C", Offset = "0xF7981C", VA = "0xF7981C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xF79A6C", Offset = "0xF79A6C", VA = "0xF79A6C")]
	public LocalizeText()
	{
	}
}
[Token(Token = "0x20000CE")]
public class LootChestAICore : MonoBehaviour
{
	[Token(Token = "0x20004D5")]
	public enum ChompyStates
	{
		[Token(Token = "0x40025DC")]
		FollowPlayer,
		[Token(Token = "0x40025DD")]
		FollowLoot,
		[Token(Token = "0x40025DE")]
		FollowOil,
		[Token(Token = "0x40025DF")]
		SilkingMode,
		[Token(Token = "0x40025E0")]
		NotActivated
	}

	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CD4", Offset = "0xAE5CD4")]
	private sealed class <activateChest>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <shakeTime>5__2;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <frequence>5__3;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <origEulerRotation>5__4;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tweener <shake>5__5;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0xF82948", Offset = "0xF82948", VA = "0xF82948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0xF829B0", Offset = "0xF829B0", VA = "0xF829B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xF7CDE8", Offset = "0xF7CDE8", VA = "0xF7CDE8")]
		[DebuggerHidden]
		public <activateChest>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xF82090", Offset = "0xF82090", VA = "0xF82090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xF82094", Offset = "0xF82094", VA = "0xF82094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xF82950", Offset = "0xF82950", VA = "0xF82950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CE4", Offset = "0xAE5CE4")]
	private sealed class <ChompyIsHit>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0xF80AA8", Offset = "0xF80AA8", VA = "0xF80AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0xF80B10", Offset = "0xF80B10", VA = "0xF80B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xF7EF7C", Offset = "0xF7EF7C", VA = "0xF7EF7C")]
		[DebuggerHidden]
		public <ChompyIsHit>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xF809FC", Offset = "0xF809FC", VA = "0xF809FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xF80A00", Offset = "0xF80A00", VA = "0xF80A00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xF80AB0", Offset = "0xF80AB0", VA = "0xF80AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5CF4", Offset = "0xAE5CF4")]
	private sealed class <MakeChompySulkyMode>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xF82020", Offset = "0xF82020", VA = "0xF82020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xF82088", Offset = "0xF82088", VA = "0xF82088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xF7F018", Offset = "0xF7F018", VA = "0xF7F018")]
		[DebuggerHidden]
		public <MakeChompySulkyMode>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xF81DC8", Offset = "0xF81DC8", VA = "0xF81DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xF81DCC", Offset = "0xF81DCC", VA = "0xF81DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xF82028", Offset = "0xF82028", VA = "0xF82028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D04", Offset = "0xAE5D04")]
	private sealed class <ChompyPukesLoot>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool amulet;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <spawnedLoot>5__2;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> <_nonTriggerColliders>5__3;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0xF81454", Offset = "0xF81454", VA = "0xF81454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xF814BC", Offset = "0xF814BC", VA = "0xF814BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xF7F044", Offset = "0xF7F044", VA = "0xF7F044")]
		[DebuggerHidden]
		public <ChompyPukesLoot>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xF80B18", Offset = "0xF80B18", VA = "0xF80B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xF80B1C", Offset = "0xF80B1C", VA = "0xF80B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xF8145C", Offset = "0xF8145C", VA = "0xF8145C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D14", Offset = "0xAE5D14")]
	private sealed class <ChompyPukesLoot>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject lootToPuke;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Collider> <_nonTriggerColliders>5__2;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xF81D58", Offset = "0xF81D58", VA = "0xF81D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xF81DC0", Offset = "0xF81DC0", VA = "0xF81DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xF7F0EC", Offset = "0xF7F0EC", VA = "0xF7F0EC")]
		[DebuggerHidden]
		public <ChompyPukesLoot>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xF814C4", Offset = "0xF814C4", VA = "0xF814C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xF814C8", Offset = "0xF814C8", VA = "0xF814C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xF81D60", Offset = "0xF81D60", VA = "0xF81D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D24", Offset = "0xAE5D24")]
	private sealed class <ChangeEyeColors>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xF8098C", Offset = "0xF8098C", VA = "0xF8098C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215B")]
			[Address(RVA = "0xF809F4", Offset = "0xF809F4", VA = "0xF809F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xF7F188", Offset = "0xF7F188", VA = "0xF7F188")]
		[DebuggerHidden]
		public <ChangeEyeColors>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xF808B4", Offset = "0xF808B4", VA = "0xF808B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xF808B8", Offset = "0xF808B8", VA = "0xF808B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xF80994", Offset = "0xF80994", VA = "0xF80994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D34", Offset = "0xAE5D34")]
	private sealed class <oilMoveCooldown>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600215F")]
			[Address(RVA = "0xF82A50", Offset = "0xF82A50", VA = "0xF82A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002161")]
			[Address(RVA = "0xF82AB8", Offset = "0xF82AB8", VA = "0xF82AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xF7FFE0", Offset = "0xF7FFE0", VA = "0xF7FFE0")]
		[DebuggerHidden]
		public <oilMoveCooldown>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xF829B8", Offset = "0xF829B8", VA = "0xF829B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xF829BC", Offset = "0xF829BC", VA = "0xF829BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xF82A58", Offset = "0xF82A58", VA = "0xF82A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D44", Offset = "0xAE5D44")]
	private sealed class <returnToNormal>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootChestAICore <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0xF82B8C", Offset = "0xF82B8C", VA = "0xF82B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xF82BF4", Offset = "0xF82BF4", VA = "0xF82BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xF8000C", Offset = "0xF8000C", VA = "0xF8000C")]
		[DebuggerHidden]
		public <returnToNormal>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xF82AC0", Offset = "0xF82AC0", VA = "0xF82AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xF82AC4", Offset = "0xF82AC4", VA = "0xF82AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xF82B94", Offset = "0xF82B94", VA = "0xF82B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerGroup loudGroup;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChompyStates ChompyState;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject ChompyActivator;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PlayerTarget;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LootChestAICore singleton;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetLoot;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material ChompyMat;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] treasure;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource wingsAudioSource;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip ChopSFX;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip NomNomSFX;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip SwoopSFX;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip WingsSFX;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip LaughSFX;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip SilkingSFX;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip AngrySFX;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip PoofWapeupSFX;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip HappySFX;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip InterestedSFX;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip hitSFX;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip pukeSFX;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioClip glugSFX;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioClip burbSFX;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioClip poofSFX;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip increaseSizeSFX;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip decreaseSizeSFX;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioSource MouthSFXSource;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private ParticleSystem PoofParticle;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ParticleSystem GroundSwoopParticle;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEA090", Offset = "0xAEA090")]
	[SerializeField]
	private int LootDetectionRadious;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float TimeSinceLastFed;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float TimeToBurp;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float maxScale;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float minScale;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Transform> LootsAtFeets;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Animator anima;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float dodgeCooldown;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float followThrownLootCooldown;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource ChestSFXsource;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Quaternion RandomLookRotation;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 RandomMovePosition;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float rotationTime;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isActivated;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool activateSequenceStarted;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject DullChest;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private BoxCollider LootDetector;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float lookatCooldown;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float moveCooldown;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool attentionToPlayer;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 oldVectorStuckCheck;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Color origEyeColor;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Color targetEyeColor;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ChompyStates oldState;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float scaleModifier;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 originalLocalScale;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float originalAcceleration;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float scaleSmallerTimer;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float sizeCooldown;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xF7CD78", Offset = "0xF7CD78", VA = "0xF7CD78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC218", Offset = "0xAFC218")]
	public IEnumerator activateChest()
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xF7CE14", Offset = "0xF7CE14", VA = "0xF7CE14")]
	public void ModifyLocalScaleAndAcceleration(float modifier)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xF7D0B0", Offset = "0xF7D0B0", VA = "0xF7D0B0")]
	public void Puke()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xF7D164", Offset = "0xF7D164", VA = "0xF7D164")]
	private void ChompyFeetChecking()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xF7D4F4", Offset = "0xF7D4F4", VA = "0xF7D4F4")]
	public void TeleportChest(Transform spawnPos)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xF7D6D0", Offset = "0xF7D6D0", VA = "0xF7D6D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xF7D7DC", Offset = "0xF7D7DC", VA = "0xF7D7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xF7DBA8", Offset = "0xF7DBA8", VA = "0xF7DBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xF7E888", Offset = "0xF7E888", VA = "0xF7E888")]
	private void SilkingModeUpdate()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xF7E070", Offset = "0xF7E070", VA = "0xF7E070")]
	private void FocusingOnPlayerUpdate()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF7E64C", Offset = "0xF7E64C", VA = "0xF7E64C")]
	private void ChompyFollowLootUpdate()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF7ECB0", Offset = "0xF7ECB0", VA = "0xF7ECB0")]
	private void TargetLoot_ChompyMoveTowards()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xF7EBA8", Offset = "0xF7EBA8", VA = "0xF7EBA8")]
	private void TargetLootParentCheck()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xF7EADC", Offset = "0xF7EADC", VA = "0xF7EADC")]
	private void TargetLootIsTooFar()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xF7EA10", Offset = "0xF7EA10", VA = "0xF7EA10")]
	private void TargetLootIsNull()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xF7E88C", Offset = "0xF7E88C", VA = "0xF7E88C")]
	private void ChompyCheats()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xF7EF0C", Offset = "0xF7EF0C", VA = "0xF7EF0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC27C", Offset = "0xAFC27C")]
	public IEnumerator ChompyIsHit()
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xF7EFA8", Offset = "0xF7EFA8", VA = "0xF7EFA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC2E0", Offset = "0xAFC2E0")]
	public IEnumerator MakeChompySulkyMode()
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xF7D0E0", Offset = "0xF7D0E0", VA = "0xF7D0E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC344", Offset = "0xAFC344")]
	public IEnumerator ChompyPukesLoot(bool amulet)
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xF7F070", Offset = "0xF7F070", VA = "0xF7F070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC3A8", Offset = "0xAFC3A8")]
	public IEnumerator ChompyPukesLoot(GameObject lootToPuke)
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xF7F118", Offset = "0xF7F118", VA = "0xF7F118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC40C", Offset = "0xAFC40C")]
	private IEnumerator ChangeEyeColors()
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xF7E960", Offset = "0xF7E960", VA = "0xF7E960")]
	public void MakeChompyAngry()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xF7EDE0", Offset = "0xF7EDE0", VA = "0xF7EDE0")]
	private void MakeChompyLaugh()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xF7DFFC", Offset = "0xF7DFFC", VA = "0xF7DFFC")]
	private void MakeChompyBurb()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xF7EE9C", Offset = "0xF7EE9C", VA = "0xF7EE9C")]
	public void MakeChompyHappy()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xF7F1B4", Offset = "0xF7F1B4", VA = "0xF7F1B4")]
	public void ChompyTimedInteractions()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xF7FA74", Offset = "0xF7FA74", VA = "0xF7FA74")]
	public void PlayerPickupLoot(Transform loot)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xF7FB18", Offset = "0xF7FB18", VA = "0xF7FB18")]
	public void PlayerUngrabLoot(Rigidbody rb)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xF7FC54", Offset = "0xF7FC54", VA = "0xF7FC54")]
	public void FlapWings()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xF7FC78", Offset = "0xF7FC78", VA = "0xF7FC78")]
	public void SetNewDestinationToPlayer()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xF7FD10", Offset = "0xF7FD10", VA = "0xF7FD10")]
	public void SetNewDestinationToPosition(Vector3 position, Vector3 oilSource)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xF7FF80", Offset = "0xF7FF80", VA = "0xF7FF80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC470", Offset = "0xAFC470")]
	private IEnumerator oilMoveCooldown()
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xF7FF10", Offset = "0xF7FF10", VA = "0xF7FF10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC4D4", Offset = "0xAFC4D4")]
	private IEnumerator returnToNormal()
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xF80038", Offset = "0xF80038", VA = "0xF80038")]
	public void dodgeSide(float distance)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xF7ED64", Offset = "0xF7ED64", VA = "0xF7ED64")]
	public void Chop()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xF7D464", Offset = "0xF7D464", VA = "0xF7D464")]
	private void FORCE_GroundChop()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xF800F8", Offset = "0xF800F8", VA = "0xF800F8")]
	public void GroundChop()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xF7EE50", Offset = "0xF7EE50", VA = "0xF7EE50")]
	public void PoofVFX()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xF7F5C8", Offset = "0xF7F5C8", VA = "0xF7F5C8")]
	private void NullifyStuff()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xF800D8", Offset = "0xF800D8", VA = "0xF800D8")]
	public void StopChompy()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xF801CC", Offset = "0xF801CC", VA = "0xF801CC")]
	public void ContinueChompy()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xF80384", Offset = "0xF80384", VA = "0xF80384")]
	public void nomnomnom()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xF803A8", Offset = "0xF803A8", VA = "0xF803A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xF8044C", Offset = "0xF8044C", VA = "0xF8044C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xF804F0", Offset = "0xF804F0", VA = "0xF804F0")]
	public void PlayerUseTeleporter()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xF7F670", Offset = "0xF7F670", VA = "0xF7F670")]
	public void TeleportCloserIfStuck()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xF7FBB0", Offset = "0xF7FBB0", VA = "0xF7FBB0")]
	public void NewLootToFocus(Transform lootTransform)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xF80504", Offset = "0xF80504", VA = "0xF80504")]
	public void NewLootToFocus()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xF806E4", Offset = "0xF806E4", VA = "0xF806E4")]
	private void ChompyStartupPoof()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xF80724", Offset = "0xF80724", VA = "0xF80724")]
	public static bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xF807D0", Offset = "0xF807D0", VA = "0xF807D0")]
	public LootChestAICore()
	{
	}
}
[Token(Token = "0x20000CF")]
public class LootPullParticles : MonoBehaviour
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xF82BFC", Offset = "0xF82BFC", VA = "0xF82BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xF82C54", Offset = "0xF82C54", VA = "0xF82C54")]
	public void CreateParticle(Transform lootTransform, Vector3 targetPoint, float velocityMagnitude, bool reverse = false)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xF82FD0", Offset = "0xF82FD0", VA = "0xF82FD0")]
	public LootPullParticles()
	{
	}
}
[Token(Token = "0x20000D0")]
public class LootPullerHole : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pullCubePosition;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 pullCubeSize;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask lootLayer;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LootPullParticles lootPullParticles;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] _buffer;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xF82FD8", Offset = "0xF82FD8", VA = "0xF82FD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xF833DC", Offset = "0xF833DC", VA = "0xF833DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xF83540", Offset = "0xF83540", VA = "0xF83540")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xF836E4", Offset = "0xF836E4", VA = "0xF836E4")]
	public LootPullerHole()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LootThrower : MonoBehaviour
{
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D54", Offset = "0xAE5D54")]
	private sealed class <DisableLootPhysics>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject loot;

		[Token(Token = "0x170001F0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xF84020", Offset = "0xF84020", VA = "0xF84020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0xF84088", Offset = "0xF84088", VA = "0xF84088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xF83B08", Offset = "0xF83B08", VA = "0xF83B08")]
		[DebuggerHidden]
		public <DisableLootPhysics>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xF83D20", Offset = "0xF83D20", VA = "0xF83D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xF83D24", Offset = "0xF83D24", VA = "0xF83D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xF84028", Offset = "0xF84028", VA = "0xF84028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D64", Offset = "0xAE5D64")]
	private sealed class <ThrowLoot>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootThrower <>4__this;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> <tmpLoot>5__2;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <newLoot>5__4;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GrabbableItem <grabbableItem>5__5;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BucketItem <bucketItem>5__6;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002171")]
			[Address(RVA = "0xF84DB4", Offset = "0xF84DB4", VA = "0xF84DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0xF84E1C", Offset = "0xF84E1C", VA = "0xF84E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xF83B34", Offset = "0xF83B34", VA = "0xF83B34")]
		[DebuggerHidden]
		public <ThrowLoot>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xF840EC", Offset = "0xF840EC", VA = "0xF840EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xF840F0", Offset = "0xF840F0", VA = "0xF840F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xF84DBC", Offset = "0xF84DBC", VA = "0xF84DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LootThrower saloonInstance;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static LootThrower trainInstance;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> collectedLoot;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> thrownLoot;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip plopClip;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text runScoreText;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text bankBonusText;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject chalkBoard;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int collectedMoney;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int collectedBonusMoney;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool trainThrower;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 forceDirection;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 lootSpawnPosition;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xF83744", Offset = "0xF83744", VA = "0xF83744")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xF83834", Offset = "0xF83834", VA = "0xF83834")]
	public void EmptyCollectedLoot()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xF83994", Offset = "0xF83994", VA = "0xF83994")]
	public void CommenceLootThrow()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xF83A98", Offset = "0xF83A98", VA = "0xF83A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC538", Offset = "0xAFC538")]
	private IEnumerator<float> DisableLootPhysics(GameObject loot)
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xF83A28", Offset = "0xF83A28", VA = "0xF83A28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC59C", Offset = "0xAFC59C")]
	private IEnumerator ThrowLoot()
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xF83B60", Offset = "0xF83B60", VA = "0xF83B60")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xF83C8C", Offset = "0xF83C8C", VA = "0xF83C8C")]
	public LootThrower()
	{
	}
}
[Token(Token = "0x20000D2")]
public class LootTrigger : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask lootLayers;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask playerItemLayer;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip lootFoundClip;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem lootParticle;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _oilAmount;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GrabbableItem> _itemsToLoot;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lootTimer;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _soundPitch;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool trainLootBox;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lootBox;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool IsChompy;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xF84E24", Offset = "0xF84E24", VA = "0xF84E24")]
	public void AddOilDrop()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xF851C4", Offset = "0xF851C4", VA = "0xF851C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xF85BAC", Offset = "0xF85BAC", VA = "0xF85BAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xF86480", Offset = "0xF86480", VA = "0xF86480")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xF84F74", Offset = "0xF84F74", VA = "0xF84F74")]
	public void CreateParticle(Transform lootTransform, Vector3 targetPoint)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xF86558", Offset = "0xF86558", VA = "0xF86558")]
	public LootTrigger()
	{
	}
}
[Token(Token = "0x20000D3")]
public class LootVacuumGrip : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask lootLayers;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xF865D4", Offset = "0xF865D4", VA = "0xF865D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xF86618", Offset = "0xF86618", VA = "0xF86618")]
	public LootVacuumGrip()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MagnetGun : PlayerItem
{
	[Token(Token = "0x20004E0")]
	public struct PullData
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GrabbableItem item;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rigidbody rigidbody;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float activationTimer;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool targeted;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool pulling;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float pullingTimer;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int originalLayer;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pullPointOffset;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool finishedPulling;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform transform;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 pullStartPosition;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectParticleTransform;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem[] objectParticles;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlayerItem playerItem;
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioClip overheatSound;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip activationSound;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip pullingSound;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioSource usingLoop;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LayerMask pullableLayers;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public LayerMask blockerLayers;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform fuelPointer;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform pullPoint;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<PullData> pullItems;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float fuelPointerMinEuler;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float fuelPointerMaxEuler;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public ParticleSystem overheatParticles;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ParticleSystem pullingParticles;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public ParticleSystem pulledObjectParticles;

	[Token(Token = "0x40005EA")]
	private const float activationTime = 1.2f;

	[Token(Token = "0x40005EB")]
	private const float pullingTime = 0.5f;

	[Token(Token = "0x40005EC")]
	private const float cooldown = 5f;

	[Token(Token = "0x40005ED")]
	private const float sphereCastRadius = 0.5f;

	[Token(Token = "0x40005EE")]
	private const float timeToOverheat = 7f;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float _useTimer;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float _cooldownTimer;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private RaycastHit[] _hits;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool _onCooldown;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private RaycastHit[] _closeByRaycastHits;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private ObjectPool _objectParticlePool;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xF86620", Offset = "0xF86620", VA = "0xF86620", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xF866D4", Offset = "0xF866D4", VA = "0xF866D4", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xF88250", Offset = "0xF88250", VA = "0xF88250")]
	private void ParticleArrayTogglePlay(bool value, ParticleSystem[] particles)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xF88198", Offset = "0xF88198", VA = "0xF88198")]
	private void ReturnParticle(PullData pd)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xF88300", Offset = "0xF88300", VA = "0xF88300")]
	public MagnetGun()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MailboxMachine : MonoBehaviour
{
	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D74", Offset = "0xAE5D74")]
	private sealed class <NewHintAlarm>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MailboxMachine <>4__this;

		[Token(Token = "0x170001F4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0xE51EC0", Offset = "0xE51EC0", VA = "0xE51EC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0xE51F28", Offset = "0xE51F28", VA = "0xE51F28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xE51D04", Offset = "0xE51D04", VA = "0xE51D04")]
		[DebuggerHidden]
		public <NewHintAlarm>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xE51D30", Offset = "0xE51D30", VA = "0xE51D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xE51D34", Offset = "0xE51D34", VA = "0xE51D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xE51EC8", Offset = "0xE51EC8", VA = "0xE51EC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MailboxMachine singleton;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] hints;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textMesh;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light yellowLight;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem yellowBloomFX;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip alarmClip;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentHint;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.EmissionModule _em;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _alarmed;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CoroutineHandle _alarmCoroutine;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer[] _childRenderers;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xF8839C", Offset = "0xF8839C", VA = "0xF8839C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xF886D0", Offset = "0xF886D0", VA = "0xF886D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xF884BC", Offset = "0xF884BC", VA = "0xF884BC")]
	public void ToggleEnabled(bool value)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xF887B0", Offset = "0xF887B0", VA = "0xF887B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC600", Offset = "0xAFC600")]
	public IEnumerator<float> NewHintAlarm()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xF885EC", Offset = "0xF885EC", VA = "0xF885EC")]
	public void TownEntered()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xF88820", Offset = "0xF88820", VA = "0xF88820")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xF88830", Offset = "0xF88830", VA = "0xF88830")]
	private void ShowNextHint()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xF888F4", Offset = "0xF888F4", VA = "0xF888F4")]
	private void ShowCurrentHint()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xF889D0", Offset = "0xF889D0", VA = "0xF889D0")]
	public MailboxMachine()
	{
	}
}
[Token(Token = "0x20000D6")]
public class MailboxMachineButton : VRTK_InteractableObject
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MailboxMachine mailboxMachineScript;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip buttonPressClip;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float _hoverTime;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool _starterPressing;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xE51F8C", Offset = "0xE51F8C", VA = "0xE51F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xE52018", Offset = "0xE52018", VA = "0xE52018", Slot = "18")]
	public override void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xE52044", Offset = "0xE52044", VA = "0xE52044", Slot = "20")]
	public override void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xE52070", Offset = "0xE52070", VA = "0xE52070", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xE52100", Offset = "0xE52100", VA = "0xE52100", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xE522B0", Offset = "0xE522B0", VA = "0xE522B0")]
	public MailboxMachineButton()
	{
	}
}
[Token(Token = "0x20000D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1AAC", Offset = "0xAE1AAC")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x20004E2")]
	public class AudioUnit
	{
		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform myTransform;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pitch;

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xE07420", Offset = "0xE07420", VA = "0xE07420")]
		public AudioUnit()
		{
		}
	}

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioManager singleton;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerGroup defaultSfxGroup;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup TwoDGroup;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup musicGroup;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup loudGroup;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixerSnapshot defaultSnapshot;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerSnapshot tutorialSnapshot;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioMixerSnapshot halloweenSnapshot;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _originalMusicVolume;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AudioUnit> _audioUnits;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip miningClip;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip shopClip;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool musicPlaying;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] miningMusicLayers;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource[] _miningMusicAudiosources;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<CollisionSounds> collisionSounds;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip competetiveMusic;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AudioReverbZoneHandler _audioReverbZoneHandler;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _muted;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xE070A0", Offset = "0xE070A0", VA = "0xE070A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xE071B0", Offset = "0xE071B0", VA = "0xE071B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xE075A0", Offset = "0xE075A0", VA = "0xE075A0")]
	public void Reset(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xE076A8", Offset = "0xE076A8", VA = "0xE076A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xE078B4", Offset = "0xE078B4", VA = "0xE078B4")]
	public void PlayLayeredMiningMusic(int layers)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xE0426C", Offset = "0xE0426C", VA = "0xE0426C")]
	public void StopAllLayeredMiningMusic()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xE07A88", Offset = "0xE07A88", VA = "0xE07A88")]
	public void SetPauseLayeredMiningMusic(int layers, bool pause)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xE07B10", Offset = "0xE07B10", VA = "0xE07B10")]
	public void PlayMusic([Optional] AudioClip clip, bool loop = false)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xE07D68", Offset = "0xE07D68", VA = "0xE07D68")]
	public void TutorialSnapshot(bool value)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xE07DA0", Offset = "0xE07DA0", VA = "0xE07DA0")]
	public void ToggleHalloweenSnapshot(bool value)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xE042D8", Offset = "0xE042D8", VA = "0xE042D8")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xE07DD8", Offset = "0xE07DD8", VA = "0xE07DD8")]
	public void MusicPaused(bool value)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xE04768", Offset = "0xE04768", VA = "0xE04768")]
	public AudioSource PlayFixedPitch(AudioClip clip, Vector3 position, float pitch, float volume = 1f, [Optional] AudioMixerGroup group, bool twoDimension = false)
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE043EC", Offset = "0xE043EC", VA = "0xE043EC")]
	public AudioSource Play(AudioClip clip, Vector3 position, float pitchVariation, float volume = 1f, [Optional] AudioMixerGroup group, bool twoDimension = false)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xE07F10", Offset = "0xE07F10", VA = "0xE07F10")]
	public void SetAllAudioSpeed(float pitch)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xE080FC", Offset = "0xE080FC", VA = "0xE080FC")]
	public void ResetAllAudioSpeed()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xE08310", Offset = "0xE08310", VA = "0xE08310")]
	public void AmbiencePlayback(bool value)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xE0840C", Offset = "0xE0840C", VA = "0xE0840C")]
	public void SetMusicVolume(float value)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xE084DC", Offset = "0xE084DC", VA = "0xE084DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xE085AC", Offset = "0xE085AC", VA = "0xE085AC")]
	public void RegisterAudioReverbZoneHandler(AudioReverbZoneHandler audioReverbZoneHandler)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xE085B4", Offset = "0xE085B4", VA = "0xE085B4")]
	public void TunnelReverbActive(bool value)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xE0861C", Offset = "0xE0861C", VA = "0xE0861C")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x20000D8")]
[ExecuteInEditMode]
public class FogManager : MonoBehaviour
{
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D84", Offset = "0xAE5D84")]
	private sealed class <DelayedCheck>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogManager <>4__this;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0xFB1788", Offset = "0xFB1788", VA = "0xFB1788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0xFB17F0", Offset = "0xFB17F0", VA = "0xFB17F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xFAFF68", Offset = "0xFAFF68", VA = "0xFAFF68")]
		[DebuggerHidden]
		public <DelayedCheck>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xFB16D0", Offset = "0xFB16D0", VA = "0xFB16D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xFB16D4", Offset = "0xFB16D4", VA = "0xFB16D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xFB1790", Offset = "0xFB1790", VA = "0xFB1790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5D94", Offset = "0xAE5D94")]
	private sealed class <LerpJurassicSun>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FogManager <>4__this;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float targetIntensity;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <startIntensity>5__2;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__3;

		[Token(Token = "0x170001F8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0xFB1F08", Offset = "0xFB1F08", VA = "0xFB1F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002186")]
			[Address(RVA = "0xFB1F70", Offset = "0xFB1F70", VA = "0xFB1F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xFB0BBC", Offset = "0xFB0BBC", VA = "0xFB0BBC")]
		[DebuggerHidden]
		public <LerpJurassicSun>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xFB1DAC", Offset = "0xFB1DAC", VA = "0xFB1DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xFB1DB0", Offset = "0xFB1DB0", VA = "0xFB1DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xFB1F10", Offset = "0xFB1F10", VA = "0xFB1F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DA4", Offset = "0xAE5DA4")]
	private sealed class <FadeFogValuesSequence>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FogManager <>4__this;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float end;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float start;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <initialStart>5__3;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <initialEnd>5__4;

		[Token(Token = "0x170001FA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xFB1CE0", Offset = "0xFB1CE0", VA = "0xFB1CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600218C")]
			[Address(RVA = "0xFB1D48", Offset = "0xFB1D48", VA = "0xFB1D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xFB0C7C", Offset = "0xFB0C7C", VA = "0xFB0C7C")]
		[DebuggerHidden]
		public <FadeFogValuesSequence>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xFB1AD8", Offset = "0xFB1AD8", VA = "0xFB1AD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xFB1ADC", Offset = "0xFB1ADC", VA = "0xFB1ADC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xFB1CE8", Offset = "0xFB1CE8", VA = "0xFB1CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DB4", Offset = "0xAE5DB4")]
	private sealed class <ChangeFogCubeSequence>d__43 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material newFogcube;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogManager <>4__this;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float newEnd;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float newStart;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <halfTime>5__2;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <initialStart>5__4;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <initialEnd>5__5;

		[Token(Token = "0x170001FC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0xFB1604", Offset = "0xFB1604", VA = "0xFB1604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002192")]
			[Address(RVA = "0xFB166C", Offset = "0xFB166C", VA = "0xFB166C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xFB0D48", Offset = "0xFB0D48", VA = "0xFB0D48")]
		[DebuggerHidden]
		public <ChangeFogCubeSequence>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xFB123C", Offset = "0xFB123C", VA = "0xFB123C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xFB1240", Offset = "0xFB1240", VA = "0xFB1240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xFB160C", Offset = "0xFB160C", VA = "0xFB160C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DC4", Offset = "0xAE5DC4")]
	private sealed class <FadeAmbientColorSequence>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <startSkyColor>5__2;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <startEquatorColor>5__3;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color <targetEquatorColor>5__4;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timer>5__5;

		[Token(Token = "0x170001FE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0xFB1A0C", Offset = "0xFB1A0C", VA = "0xFB1A0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0xFB1A74", Offset = "0xFB1A74", VA = "0xFB1A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xFB10A8", Offset = "0xFB10A8", VA = "0xFB10A8")]
		[DebuggerHidden]
		public <FadeAmbientColorSequence>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xFB17F8", Offset = "0xFB17F8", VA = "0xFB17F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xFB17FC", Offset = "0xFB17FC", VA = "0xFB17FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xFB1A14", Offset = "0xFB1A14", VA = "0xFB1A14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FogManager singleton;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<TriggerVolume> _fogChangeTriggers;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA0D0", Offset = "0xAEA0D0")]
	public bool editorOverrideClearVision;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fogcube;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fogStart;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fogEnd;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rawFogStart;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float rawFogEnd;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Camera currentCamera;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Camera[] allHeadCameras;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int startID;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int endID;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int fogCubeID;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerVolume closestFogChangeTrigger;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TriggerVolume previousFogChangeTrigger;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light jurassicSun;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineHandle existingFade;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CoroutineHandle existingAmbienceFade;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CoroutineHandle existingJurassinSunLerp;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _closestChanged;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _nextUpdateTime;

	[Token(Token = "0x400062C")]
	private const float farClipExtra = 2f;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _jurassicSunEnabled;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _latestFarClip;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _fadingFog;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 closestColliderPos;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xFAF6CC", Offset = "0xFAF6CC", VA = "0xFAF6CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xFAF780", Offset = "0xFAF780", VA = "0xFAF780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xFAFEB0", Offset = "0xFAFEB0", VA = "0xFAFEB0")]
	public static void ToggleOcclusion(bool value)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xFAFE40", Offset = "0xFAFE40", VA = "0xFAFE40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC664", Offset = "0xAFC664")]
	private IEnumerator DelayedCheck()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xFAFF94", Offset = "0xFAFF94", VA = "0xFAFF94")]
	public float CurrentFogDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xFAFFFC", Offset = "0xFAFFFC", VA = "0xFAFFFC")]
	public float TargetFogDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xFB0078", Offset = "0xFB0078", VA = "0xFB0078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xFAF7D4", Offset = "0xFAF7D4", VA = "0xFAF7D4")]
	public static void CheckCameraRef()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xFB06C0", Offset = "0xFB06C0", VA = "0xFB06C0")]
	public static void SetFarClip(float value)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xFB07D4", Offset = "0xFB07D4", VA = "0xFB07D4")]
	public void CheckIfInsideAllTriggers()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xFB0910", Offset = "0xFB0910", VA = "0xFB0910")]
	public void AddFogTrigger(TriggerVolume newTrigger)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xFAFCF0", Offset = "0xFAFCF0", VA = "0xFAFCF0")]
	private void UpdateDefaultFog()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xFB09A8", Offset = "0xFB09A8", VA = "0xFB09A8")]
	public void ToggleJurassicLight(bool value, float targetIntensity = 1.5f)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xFB0B3C", Offset = "0xFB0B3C", VA = "0xFB0B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC6C8", Offset = "0xAFC6C8")]
	private IEnumerator<float> LerpJurassicSun(float targetIntensity)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xFB04C8", Offset = "0xFB04C8", VA = "0xFB04C8")]
	public void FadeFogValues(float start, float end, float time, bool force = false)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xFB0BE8", Offset = "0xFB0BE8", VA = "0xFB0BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC72C", Offset = "0xAFC72C")]
	private IEnumerator<float> FadeFogValuesSequence(float start, float end, float time)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xFA3BA0", Offset = "0xFA3BA0", VA = "0xFA3BA0")]
	public void FadeFogCubemaps(Material newFogcube, float time, float newStart, float newEnd, bool force = false)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xFB0CA8", Offset = "0xFB0CA8", VA = "0xFB0CA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC790", Offset = "0xAFC790")]
	private IEnumerator<float> ChangeFogCubeSequence(Material newFogcube, float time, float newStart, float newEnd)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xFB0D74", Offset = "0xFB0D74", VA = "0xFB0D74")]
	public void FadeAmbientColor(Color color, float time, bool force = false)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xFB1008", Offset = "0xFB1008", VA = "0xFB1008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC7F4", Offset = "0xAFC7F4")]
	private IEnumerator<float> FadeAmbientColorSequence(Color color, float time)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xFB10D4", Offset = "0xFB10D4", VA = "0xFB10D4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xFB11C0", Offset = "0xFB11C0", VA = "0xFB11C0")]
	public FogManager()
	{
	}
}
[Token(Token = "0x20000D9")]
public class GameEventManager : MonoBehaviour
{
	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DD4", Offset = "0xAE5DD4")]
	private sealed class <PickAxePickedSequence>d__159 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameEventManager <>4__this;

		[Token(Token = "0x17000200")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xFB9960", Offset = "0xFB9960", VA = "0xFB9960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xFB99C8", Offset = "0xFB99C8", VA = "0xFB99C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xFB43D8", Offset = "0xFB43D8", VA = "0xFB43D8")]
		[DebuggerHidden]
		public <PickAxePickedSequence>d__159(int <>1__state)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xFB9844", Offset = "0xFB9844", VA = "0xFB9844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xFB9848", Offset = "0xFB9848", VA = "0xFB9848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xFB9968", Offset = "0xFB9968", VA = "0xFB9968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DE4", Offset = "0xAE5DE4")]
	private sealed class <SpaceSequence>d__162 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xE9A120", Offset = "0xE9A120", VA = "0xE9A120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0xE9A188", Offset = "0xE9A188", VA = "0xE9A188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xE99858", Offset = "0xE99858", VA = "0xE99858")]
		[DebuggerHidden]
		public <SpaceSequence>d__162(int <>1__state)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xE99884", Offset = "0xE99884", VA = "0xE99884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xE99888", Offset = "0xE99888", VA = "0xE99888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xE9A128", Offset = "0xE9A128", VA = "0xE9A128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5DF4", Offset = "0xAE5DF4")]
	private sealed class <PlayerDropSequence>d__165 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <velocity>5__2;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0xE997E8", Offset = "0xE997E8", VA = "0xE997E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0xE99850", Offset = "0xE99850", VA = "0xE99850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xE990F8", Offset = "0xE990F8", VA = "0xE990F8")]
		[DebuggerHidden]
		public <PlayerDropSequence>d__165(int <>1__state)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xE99124", Offset = "0xE99124", VA = "0xE99124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xE99128", Offset = "0xE99128", VA = "0xE99128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xE997F0", Offset = "0xE997F0", VA = "0xE997F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E04", Offset = "0xAE5E04")]
	private sealed class <MinituriazeSequence>d__169 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0xFB7D54", Offset = "0xFB7D54", VA = "0xFB7D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0xFB7DBC", Offset = "0xFB7DBC", VA = "0xFB7DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xFB52B0", Offset = "0xFB52B0", VA = "0xFB52B0")]
		[DebuggerHidden]
		public <MinituriazeSequence>d__169(int <>1__state)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xFB7CAC", Offset = "0xFB7CAC", VA = "0xFB7CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xFB7CB0", Offset = "0xFB7CB0", VA = "0xFB7CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xFB7D5C", Offset = "0xFB7D5C", VA = "0xFB7D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E14", Offset = "0xAE5E14")]
	private sealed class <InvertGravitySequence>d__172 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0xFB7C3C", Offset = "0xFB7C3C", VA = "0xFB7C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0xFB7CA4", Offset = "0xFB7CA4", VA = "0xFB7CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xFB5638", Offset = "0xFB5638", VA = "0xFB5638")]
		[DebuggerHidden]
		public <InvertGravitySequence>d__172(int <>1__state)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xFB7AD4", Offset = "0xFB7AD4", VA = "0xFB7AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xFB7AD8", Offset = "0xFB7AD8", VA = "0xFB7AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xFB7C44", Offset = "0xFB7C44", VA = "0xFB7C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E24", Offset = "0xAE5E24")]
	private sealed class <DelayedDeactivateBool>d__174 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> toToggle;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xFB72E4", Offset = "0xFB72E4", VA = "0xFB72E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0xFB734C", Offset = "0xFB734C", VA = "0xFB734C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xFB57C0", Offset = "0xFB57C0", VA = "0xFB57C0")]
		[DebuggerHidden]
		public <DelayedDeactivateBool>d__174(int <>1__state)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xFB722C", Offset = "0xFB722C", VA = "0xFB722C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xFB7230", Offset = "0xFB7230", VA = "0xFB7230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xFB72EC", Offset = "0xFB72EC", VA = "0xFB72EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E34", Offset = "0xAE5E34")]
	private sealed class <TripSequence>d__179 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32 <green>5__4;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color <clear>5__5;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xE9A5F0", Offset = "0xE9A5F0", VA = "0xE9A5F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xE9A658", Offset = "0xE9A658", VA = "0xE9A658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xE9A190", Offset = "0xE9A190", VA = "0xE9A190")]
		[DebuggerHidden]
		public <TripSequence>d__179(int <>1__state)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xE9A1BC", Offset = "0xE9A1BC", VA = "0xE9A1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xE9A1C0", Offset = "0xE9A1C0", VA = "0xE9A1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xE9A5F8", Offset = "0xE9A5F8", VA = "0xE9A5F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E44", Offset = "0xAE5E44")]
	private sealed class <FadeToCredits>d__181 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wait;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0xFB7A64", Offset = "0xFB7A64", VA = "0xFB7A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xFB7ACC", Offset = "0xFB7ACC", VA = "0xFB7ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xFB5A50", Offset = "0xFB5A50", VA = "0xFB5A50")]
		[DebuggerHidden]
		public <FadeToCredits>d__181(int <>1__state)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xFB746C", Offset = "0xFB746C", VA = "0xFB746C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xFB7470", Offset = "0xFB7470", VA = "0xFB7470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xFB7A6C", Offset = "0xFB7A6C", VA = "0xFB7A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E54", Offset = "0xAE5E54")]
	private sealed class <FadeBlurOut>d__183 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0xFB73FC", Offset = "0xFB73FC", VA = "0xFB73FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0xFB7464", Offset = "0xFB7464", VA = "0xFB7464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xFB5ADC", Offset = "0xFB5ADC", VA = "0xFB5ADC")]
		[DebuggerHidden]
		public <FadeBlurOut>d__183(int <>1__state)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xFB73E0", Offset = "0xFB73E0", VA = "0xFB73E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xFB73E4", Offset = "0xFB73E4", VA = "0xFB73E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xFB7404", Offset = "0xFB7404", VA = "0xFB7404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E64", Offset = "0xAE5E64")]
	private sealed class <FadeBlurIn>d__184 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0xFB7370", Offset = "0xFB7370", VA = "0xFB7370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xFB73D8", Offset = "0xFB73D8", VA = "0xFB73D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xFB5B68", Offset = "0xFB5B68", VA = "0xFB5B68")]
		[DebuggerHidden]
		public <FadeBlurIn>d__184(int <>1__state)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xFB7354", Offset = "0xFB7354", VA = "0xFB7354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xFB7358", Offset = "0xFB7358", VA = "0xFB7358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xFB7378", Offset = "0xFB7378", VA = "0xFB7378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E74", Offset = "0xAE5E74")]
	private sealed class <ChaosEndingSequence>d__187 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xFB71BC", Offset = "0xFB71BC", VA = "0xFB71BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xFB7224", Offset = "0xFB7224", VA = "0xFB7224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xFB5D20", Offset = "0xFB5D20", VA = "0xFB5D20")]
		[DebuggerHidden]
		public <ChaosEndingSequence>d__187(int <>1__state)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xFB6DDC", Offset = "0xFB6DDC", VA = "0xFB6DDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xFB6DE0", Offset = "0xFB6DE0", VA = "0xFB6DE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xFB71C4", Offset = "0xFB71C4", VA = "0xFB71C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E84", Offset = "0xAE5E84")]
	private sealed class <BlockyVREndingSequence>d__189 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xFB6D6C", Offset = "0xFB6D6C", VA = "0xFB6D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xFB6DD4", Offset = "0xFB6DD4", VA = "0xFB6DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xFB5E58", Offset = "0xFB5E58", VA = "0xFB5E58")]
		[DebuggerHidden]
		public <BlockyVREndingSequence>d__189(int <>1__state)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xFB67E4", Offset = "0xFB67E4", VA = "0xFB67E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xFB67E8", Offset = "0xFB67E8", VA = "0xFB67E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xFB6D74", Offset = "0xFB6D74", VA = "0xFB6D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5E94", Offset = "0xAE5E94")]
	private sealed class <MonsterEndingSequence>d__198 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <playarea>5__2;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <velocity>5__3;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <originalRotation>5__4;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <targetRotation>5__5;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <playerCamTransform>5__6;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <timer>5__7;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xFB8FD4", Offset = "0xFB8FD4", VA = "0xFB8FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0xFB903C", Offset = "0xFB903C", VA = "0xFB903C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xFB5EF4", Offset = "0xFB5EF4", VA = "0xFB5EF4")]
		[DebuggerHidden]
		public <MonsterEndingSequence>d__198(int <>1__state)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xFB7DC4", Offset = "0xFB7DC4", VA = "0xFB7DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xFB7DC8", Offset = "0xFB7DC8", VA = "0xFB7DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xFB8FDC", Offset = "0xFB8FDC", VA = "0xFB8FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5EA4", Offset = "0xAE5EA4")]
	private sealed class <MonsterMovement>d__199 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventManager <>4__this;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <first>5__4;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <second>5__5;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <third>5__6;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <chopDuration>5__7;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <waitDuration>5__8;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0xFB97D4", Offset = "0xFB97D4", VA = "0xFB97D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0xFB983C", Offset = "0xFB983C", VA = "0xFB983C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xFB5FA0", Offset = "0xFB5FA0", VA = "0xFB5FA0")]
		[DebuggerHidden]
		public <MonsterMovement>d__199(int <>1__state)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xFB9044", Offset = "0xFB9044", VA = "0xFB9044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xFB9048", Offset = "0xFB9048", VA = "0xFB9048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xFB97DC", Offset = "0xFB97DC", VA = "0xFB97DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameEventManager singleton;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action gravity;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action playerDrop;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action space;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action minituriaze;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Action> availableTrips;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _currentTripSequence;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action stopTripCallback;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera _playerCamera;

	[Token(Token = "0x400063A")]
	private const float runEveryXSecond = 5f;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastRun;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA108", Offset = "0xAEA108")]
	private bool <EventThisRun>k__BackingField;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool waitingForTick;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool overWorldActive;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] aboveGroundThings;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] insideSaloonThings;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] cliffsideThings;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] world1;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] world2;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] world3;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] world4;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject townTerrain;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject creditsArea;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject shopItems;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer[] aboveGroundRenderers;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Renderer[] insideSaloonRenderers;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Renderer[] cliffsideRenderers;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer[] w1renderers;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Renderer[] w2renderers;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Renderer[] w3renderers;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer[] w4renderers;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VRTK_SnapDropZone[] elevatorHooks;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public VRTK_SnapDropZone[] beltHooks;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool hasRestarted;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool majorEventIsActive;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float h;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float s;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float v;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int globalTintID;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA118", Offset = "0xAEA118")]
	public GameObject nukeBelowEffects;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject fireStormEffects;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject cloudEffects;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Material spaceEndingSkybox;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip nukeBelowClip;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip fireStormClip;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioClip windClip;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject fadeSphere;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject spaceSun;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Rigidbody spaceRadio;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip spaceEndingRadioClip;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA150", Offset = "0xAEA150")]
	public GameObject saloonCrater;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject saloonMoneySign;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Material nukeCraterSkybox;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip craterAmbience;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioSource craterRadioSource;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA188", Offset = "0xAEA188")]
	public GameObject creditsRadio;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip dimensionNukeRadioClip;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioSource creditsRadioAnnouncer;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA1C0", Offset = "0xAEA1C0")]
	public GameObject mushroomVaultKey;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject miningVaultKey;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject hiddenVaultKey;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool spawnLavaMiningKey;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool vaultEventActive;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	public bool vaultSpawnNextFloor;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip vaultRadioClip;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA1F8", Offset = "0xAEA1F8")]
	public GameObject chaosGauntletSpace;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Material chaosGauntletSpaceSkybox;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioClip chaosGloveEndingRadioClip;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA230", Offset = "0xAEA230")]
	public GameObject blockyVREndingArea;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform blockyVREndingAreaStartPosition;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public LevelLootManager blockyLLM;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public PlaythroughManager.FloorTypes blockyLevelType;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject[] normalHands;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject[] blockyHands;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA268", Offset = "0xAEA268")]
	public AudioClip tripMusic;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool _tripping;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Color clearTint;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public AudioClip mushroomStart;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public AudioClip mushroomLoop;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private AudioSource _heartbeat;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private AudioSource _tripMusic;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private VaultKey _currentKey;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA2A0", Offset = "0xAEA2A0")]
	public Light pickaxeTutorialLight;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AudioClip tutorialMusic;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public PlayerItem tutorialPickaxe;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Material tutorialSkybox;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA2D8", Offset = "0xAEA2D8")]
	private bool <StartWithTutorial>k__BackingField;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA2E8", Offset = "0xAEA2E8")]
	private bool <tutorialPickaxeDone>k__BackingField;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA2F8", Offset = "0xAEA2F8")]
	private bool <usedOtherToolThanPickaxe>k__BackingField;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA308", Offset = "0xAEA308")]
	public AudioClip invertStartClip;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AudioClip invertStopClip;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _invertGravityTriggered;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA340", Offset = "0xAEA340")]
	public Light[] elevatorLights;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Color _origLightColor;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Renderer lampRenderer;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject lampParticles;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Color _originalLampEmission;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private LevelLootManager[] levels;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public AudioClip lightOffStartClip;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public AudioClip lightOffStopClip;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private bool _lightsGoOffTriggered;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA378", Offset = "0xAEA378")]
	public AudioClip _shrinkClip;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject[] hands;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Transform minituriazePosition;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public VRTK_BasicTeleport teleportScript;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool _tinyWorldTriggered;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float _oldNearClip;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA3B0", Offset = "0xAEA3B0")]
	public GameObject[] elevatorFloor;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private bool _dropDeathTriggered;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private float _originalPlayerY;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public AudioClip elevatorShake;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AudioClip elevatorFall;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA3E8", Offset = "0xAEA3E8")]
	public GameObject asteroidsPrefab;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Material spaceSkybox;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public GameObject elevatorUndergroundWalls;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private bool _spaceTriggered;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private Material _oldSkybox;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA420", Offset = "0xAEA420")]
	public AudioClip damageClip;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioClip toxicDamageClip1;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public AudioClip toxicDamageClip2;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public AudioClip toxicDamageClip3;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public AudioClip breathingClip;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private bool _playerPositionInit;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private Color tripColor;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private Coroutine _tripStartSequence;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private AudioSource _fallingAudioSource;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private Transform playerParent;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private GameObject _spaceAsteroids;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private float oldAmbientIntensity;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private Rigidbody[] _elevatorRigidbodies;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private ItemPositionResetter[] _resetScripts;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private float _oldFarClip;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private bool _overWorldActiveStatus;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CD")]
	private bool _oculusInit;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA458", Offset = "0xAEA458")]
	public AudioClip evilLaugh;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public AudioClip webBounceClip;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public AudioClip monsterChomp;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public GameObject monsteryRoot;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Transform cobweb1;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Transform cobweb2;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Animator monsterAnimator;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private Vector3 originalStopPosition;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool insideSaloon;

	[Token(Token = "0x17000029")]
	public bool EventThisRun
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xFB2388", Offset = "0xFB2388", VA = "0xFB2388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC858", Offset = "0xAFC858")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xFB2390", Offset = "0xFB2390", VA = "0xFB2390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC868", Offset = "0xAFC868")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool StartWithTutorial
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xFB2658", Offset = "0xFB2658", VA = "0xFB2658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC878", Offset = "0xAFC878")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xFB2660", Offset = "0xFB2660", VA = "0xFB2660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC888", Offset = "0xAFC888")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool tutorialPickaxeDone
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xFB266C", Offset = "0xFB266C", VA = "0xFB266C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC898", Offset = "0xAFC898")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xFB2674", Offset = "0xFB2674", VA = "0xFB2674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC8A8", Offset = "0xAFC8A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool usedOtherToolThanPickaxe
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xFB2680", Offset = "0xFB2680", VA = "0xFB2680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC8B8", Offset = "0xAFC8B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xFB2688", Offset = "0xFB2688", VA = "0xFB2688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFC8C8", Offset = "0xAFC8C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xFB239C", Offset = "0xFB239C", VA = "0xFB239C")]
	public bool GetMajorEventIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xFB23A4", Offset = "0xFB23A4", VA = "0xFB23A4")]
	public void SetMajorEventActive(bool isActive)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xFB2694", Offset = "0xFB2694", VA = "0xFB2694")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xFB2D40", Offset = "0xFB2D40", VA = "0xFB2D40")]
	private static void ResetTimescales()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xFB2F0C", Offset = "0xFB2F0C", VA = "0xFB2F0C")]
	private static void ReplaceShaders(Shader pcShader, Shader mobileshader, Renderer[] renderers)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xFB2D68", Offset = "0xFB2D68", VA = "0xFB2D68")]
	private Renderer[] GetRenderersToList(GameObject[] objectArray)
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xFB3058", Offset = "0xFB3058", VA = "0xFB3058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xFB3534", Offset = "0xFB3534", VA = "0xFB3534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xFB35AC", Offset = "0xFB35AC", VA = "0xFB35AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xFB3EC0", Offset = "0xFB3EC0", VA = "0xFB3EC0")]
	private bool RunAllowed(int floor, bool waitTick)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xFB31E4", Offset = "0xFB31E4", VA = "0xFB31E4")]
	private void StartTutorial()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xFB40A4", Offset = "0xFB40A4", VA = "0xFB40A4")]
	public void TutorialPickAxePicked(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xFA38D8", Offset = "0xFA38D8", VA = "0xFA38D8")]
	public void UsedOtherToolThanPickaxe(bool state)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xFB4368", Offset = "0xFB4368", VA = "0xFB4368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC8D8", Offset = "0xAFC8D8")]
	private IEnumerator<float> PickAxePickedSequence()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xFB4404", Offset = "0xFB4404", VA = "0xFB4404")]
	public void TutorialFloorOne()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xFB44F4", Offset = "0xFB44F4", VA = "0xFB44F4")]
	private void StartSpace()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xFB45B0", Offset = "0xFB45B0", VA = "0xFB45B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC93C", Offset = "0xAFC93C")]
	private IEnumerator SpaceSequence()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xFB4620", Offset = "0xFB4620", VA = "0xFB4620")]
	private void ResetSpaceTrip()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xFB4B10", Offset = "0xFB4B10", VA = "0xFB4B10")]
	public void PlayerDrop()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xFB4BCC", Offset = "0xFB4BCC", VA = "0xFB4BCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFC9A0", Offset = "0xAFC9A0")]
	private IEnumerator PlayerDropSequence()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xFB4C3C", Offset = "0xFB4C3C", VA = "0xFB4C3C")]
	private void ResetPlayerDrop()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xFB4DCC", Offset = "0xFB4DCC", VA = "0xFB4DCC")]
	public void Minituriaze()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xFB4DD4", Offset = "0xFB4DD4", VA = "0xFB4DD4")]
	private void Minituriaze(bool status)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xFB5240", Offset = "0xFB5240", VA = "0xFB5240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCA04", Offset = "0xAFCA04")]
	private IEnumerator MinituriazeSequence()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xFB52DC", Offset = "0xFB52DC", VA = "0xFB52DC")]
	private void ResetMinituriaze()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xFB550C", Offset = "0xFB550C", VA = "0xFB550C")]
	private void InvertGravity()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xFB55C8", Offset = "0xFB55C8", VA = "0xFB55C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCA68", Offset = "0xAFCA68")]
	private IEnumerator InvertGravitySequence()
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xFB5664", Offset = "0xFB5664", VA = "0xFB5664")]
	private void ResetGravity()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xFB5750", Offset = "0xFB5750", VA = "0xFB5750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCACC", Offset = "0xAFCACC")]
	private IEnumerator DelayedDeactivateBool(Action<bool> toToggle)
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xFA39DC", Offset = "0xFA39DC", VA = "0xFA39DC")]
	public void ToggleLamp(bool value)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xFB57EC", Offset = "0xFB57EC", VA = "0xFB57EC")]
	public void SetLampLightColor(Color color)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xFA38E4", Offset = "0xFA38E4", VA = "0xFA38E4")]
	public void ResetLampLightColor()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xFB590C", Offset = "0xFB590C", VA = "0xFB590C")]
	public void StartTrip()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xFB59E0", Offset = "0xFB59E0", VA = "0xFB59E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCB30", Offset = "0xAFCB30")]
	private IEnumerator TripSequence()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xFB2478", Offset = "0xFB2478", VA = "0xFB2478")]
	public void StopTrip()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xFA4260", Offset = "0xFA4260", VA = "0xFA4260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCB94", Offset = "0xAFCB94")]
	public IEnumerator FadeToCredits(float wait = 30f)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xFA4798", Offset = "0xFA4798", VA = "0xFA4798")]
	public static void RestartGame()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xFB5A7C", Offset = "0xFB5A7C", VA = "0xFB5A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCBF8", Offset = "0xAFCBF8")]
	public IEnumerator FadeBlurOut(float sec)
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xFB5B08", Offset = "0xFB5B08", VA = "0xFB5B08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCC5C", Offset = "0xAFCC5C")]
	public IEnumerator FadeBlurIn(float sec)
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xFB5B94", Offset = "0xFB5B94", VA = "0xFB5B94")]
	public void VaultKeyGrabbed(VaultKey.KeyTypes keytype)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xFB5C78", Offset = "0xFB5C78", VA = "0xFB5C78")]
	public void ChaosGauntletEnding()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xFB5CB0", Offset = "0xFB5CB0", VA = "0xFB5CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCCC0", Offset = "0xAFCCC0")]
	private IEnumerator ChaosEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xFB5D4C", Offset = "0xFB5D4C", VA = "0xFB5D4C")]
	public void StartBlockyVREnding()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xFB5DE8", Offset = "0xFB5DE8", VA = "0xFB5DE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCD24", Offset = "0xAFCD24")]
	private IEnumerator BlockyVREndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xFB5E84", Offset = "0xFB5E84", VA = "0xFB5E84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCD88", Offset = "0xAFCD88")]
	public IEnumerator MonsterEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xFB5F20", Offset = "0xFB5F20", VA = "0xFB5F20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCDEC", Offset = "0xAFCDEC")]
	private IEnumerator MonsterMovement(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xFB5FCC", Offset = "0xFB5FCC", VA = "0xFB5FCC")]
	private static Vector3 PullPlayerToMiddle(Transform playerCamTransform, Vector3 offset, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xFB60C0", Offset = "0xFB60C0", VA = "0xFB60C0")]
	private void SetAmbientColor(Transform player)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xFB6270", Offset = "0xFB6270", VA = "0xFB6270")]
	public void PlayCreditsRadioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xFB3FF0", Offset = "0xFB3FF0", VA = "0xFB3FF0")]
	public void ToggleAboveGroundRenderers(bool status)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xFB63F0", Offset = "0xFB63F0", VA = "0xFB63F0")]
	public void ToggleSaloonRenderers(bool status)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xFB6540", Offset = "0xFB6540", VA = "0xFB6540")]
	public void ToggleCliffsideRenderers(bool status)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xFB3F60", Offset = "0xFB3F60", VA = "0xFB3F60")]
	public void ToggleCaveRenderers(bool status)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xFB65E8", Offset = "0xFB65E8", VA = "0xFB65E8")]
	public void ToggleWorld(int world, bool status)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xFB62FC", Offset = "0xFB62FC", VA = "0xFB62FC")]
	private void ToggleRenderers(bool status, Renderer[] renderers)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xFB6634", Offset = "0xFB6634", VA = "0xFB6634")]
	public void FixTracks()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xFB3B38", Offset = "0xFB3B38", VA = "0xFB3B38")]
	private void DebugCommands()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xFB66D4", Offset = "0xFB66D4", VA = "0xFB66D4")]
	public GameEventManager()
	{
	}
}
[Token(Token = "0x20000DA")]
public class GeneralStoreManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004F6")]
	public class StoreRunItems
	{
		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] item;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xE9DB34", Offset = "0xE9DB34", VA = "0xE9DB34")]
		public StoreRunItems()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F7")]
	public class ItemReplacer
	{
		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject replacerPrefab;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject oldItem;

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xE9DAFC", Offset = "0xE9DAFC", VA = "0xE9DAFC")]
		public ItemReplacer(GameObject newReplacerPrefab, GameObject newOldItem)
		{
		}
	}

	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5EB4", Offset = "0xAE5EB4")]
	private sealed class <DelayedDisable>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ob;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0xE9DA8C", Offset = "0xE9DA8C", VA = "0xE9DA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xE9DAF4", Offset = "0xE9DAF4", VA = "0xE9DAF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xE9D588", Offset = "0xE9D588", VA = "0xE9D588")]
		[DebuggerHidden]
		public <DelayedDisable>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xE9DA10", Offset = "0xE9DA10", VA = "0xE9DA10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xE9DA14", Offset = "0xE9DA14", VA = "0xE9DA14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xE9DA94", Offset = "0xE9DA94", VA = "0xE9DA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GeneralStoreManager singleton;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject badgePrefab;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform badgeParentTransform;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, GameObject> _itemAndBadgeDictionary;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _nextRunItems;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StoreRunItems[] runItems;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ItemReplacer> _itemReplacers;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform topRowLeft;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform topRowRight;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform bottomRowLeft;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform bottomRowRight;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 badgeEulerRotation;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public LayerMask generalStoreLayer;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _currentItemsInShop;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _nextEmptyPosition;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _currentItemAmount;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private readonly int itemsPerRow;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GenericCullingGroup genericCullingGroup;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xE9AB20", Offset = "0xE9AB20", VA = "0xE9AB20")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xE9AC70", Offset = "0xE9AC70", VA = "0xE9AC70")]
	public void AddItemUpgrade(ItemReplacer replacer)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xE9AD18", Offset = "0xE9AD18", VA = "0xE9AD18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xE9BF84", Offset = "0xE9BF84", VA = "0xE9BF84")]
	public void SaveShopStuff()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xE9C704", Offset = "0xE9C704", VA = "0xE9C704")]
	public Vector3 GetPlaceForItem(GameObject item, int items, int itemIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xE9C844", Offset = "0xE9C844", VA = "0xE9C844")]
	public Vector3 GetPlaceForBadge(Transform itemTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xE9CB44", Offset = "0xE9CB44", VA = "0xE9CB44")]
	private void AddToShop(OnSale item)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xE9B2A4", Offset = "0xE9B2A4", VA = "0xE9B2A4")]
	public void SpawnGeneralStoreItems()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xE9D1AC", Offset = "0xE9D1AC", VA = "0xE9D1AC")]
	private void SpawnItem(KeyValuePair<GameObject, GameObject> item, int itemIndex)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xE9CF80", Offset = "0xE9CF80", VA = "0xE9CF80")]
	private bool IsAlreadySpawned(GameObject item)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xE9D13C", Offset = "0xE9D13C", VA = "0xE9D13C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCE50", Offset = "0xAFCE50")]
	public IEnumerator DelayedDisable(GameObject ob)
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xE9D5B4", Offset = "0xE9D5B4", VA = "0xE9D5B4")]
	private void DestroyPriceText(GameObject go)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xE9D758", Offset = "0xE9D758", VA = "0xE9D758")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xE9D75C", Offset = "0xE9D75C", VA = "0xE9D75C")]
	public void HideItems()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xE9D904", Offset = "0xE9D904", VA = "0xE9D904")]
	public GeneralStoreManager()
	{
	}
}
[Token(Token = "0x20000DB")]
public class HotSpotManager : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HotSpotManager singleton;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<RelicHotSpot, float> hotspotFade;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int opacityID;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xEAD158", Offset = "0xEAD158", VA = "0xEAD158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xEACDA8", Offset = "0xEACDA8", VA = "0xEACDA8")]
	public void AddHotSpot(RelicHotSpot hotspot)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xEAD1D0", Offset = "0xEAD1D0", VA = "0xEAD1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xEAD6A4", Offset = "0xEAD6A4", VA = "0xEAD6A4")]
	public HotSpotManager()
	{
	}
}
[Token(Token = "0x20000DC")]
public class LevelLootManager : MonoBehaviour
{
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5EC4", Offset = "0xAE5EC4")]
	private sealed class <PoolThisLevelObjectsSequence>d__48 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelLootManager <>4__this;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject>.Enumerator <>7__wrap2;

		[Token(Token = "0x1700021E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0xF77AC8", Offset = "0xF77AC8", VA = "0xF77AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xF77B30", Offset = "0xF77B30", VA = "0xF77B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xF74588", Offset = "0xF74588", VA = "0xF74588")]
		[DebuggerHidden]
		public <PoolThisLevelObjectsSequence>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xF77134", Offset = "0xF77134", VA = "0xF77134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xF7721C", Offset = "0xF7721C", VA = "0xF7721C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xF7716C", Offset = "0xF7716C", VA = "0xF7716C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xF771C4", Offset = "0xF771C4", VA = "0xF771C4")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xF77AD0", Offset = "0xF77AD0", VA = "0xF77AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5ED4", Offset = "0xAE5ED4")]
	private sealed class <GenerateSequence>d__50 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelLootManager <>4__this;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000220")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002200")]
			[Address(RVA = "0xF77068", Offset = "0xF77068", VA = "0xF77068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002202")]
			[Address(RVA = "0xF770D0", Offset = "0xF770D0", VA = "0xF770D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xF74634", Offset = "0xF74634", VA = "0xF74634")]
		[DebuggerHidden]
		public <GenerateSequence>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xF76A1C", Offset = "0xF76A1C", VA = "0xF76A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xF76A20", Offset = "0xF76A20", VA = "0xF76A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xF77070", Offset = "0xF77070", VA = "0xF77070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5EE4", Offset = "0xAE5EE4")]
	private sealed class <CreateBlockwall>d__51 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlockWallGenerator bwg;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelLootManager <>4__this;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x17000222")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002206")]
			[Address(RVA = "0xF76950", Offset = "0xF76950", VA = "0xF76950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002208")]
			[Address(RVA = "0xF769B8", Offset = "0xF769B8", VA = "0xF769B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xF746EC", Offset = "0xF746EC", VA = "0xF746EC")]
		[DebuggerHidden]
		public <CreateBlockwall>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xF76294", Offset = "0xF76294", VA = "0xF76294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xF76298", Offset = "0xF76298", VA = "0xF76298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xF76958", Offset = "0xF76958", VA = "0xF76958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5EF4", Offset = "0xAE5EF4")]
	private sealed class <SpawnCoroutine>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelLootManager <>4__this;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <waitTime>5__2;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x17000224")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600220C")]
			[Address(RVA = "0xF790B8", Offset = "0xF790B8", VA = "0xF790B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600220E")]
			[Address(RVA = "0xF79120", Offset = "0xF79120", VA = "0xF79120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xF74798", Offset = "0xF74798", VA = "0xF74798")]
		[DebuggerHidden]
		public <SpawnCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xF77B94", Offset = "0xF77B94", VA = "0xF77B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xF77B98", Offset = "0xF77B98", VA = "0xF77B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xF790C0", Offset = "0xF790C0", VA = "0xF790C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableItem[] goldPrefabs;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabbableItem[] silverPrefabs;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GrabbableItem[] diamondPrefabs;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableItem[] relicPrefabs;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] oilPrefabs;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int goldToSpawn;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int silverToSpawn;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int diamondsToSpawn;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int relicsToSpawn;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int oilToSpawn;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool noObjectPooling;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool enableCustomLightColor;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color customLightColor;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> _specialItemsToSpawn;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _hasSpawned;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> _myLoots;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BlockWallGenerator[] _blockWallGenerators;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<FracturedChunk> _allChunks;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<MineBlock> _clays;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<MineBlock> _granites;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<MineBlock> _limestones;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<List<MineBlock>, int> silverBlockWeights;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<List<MineBlock>, int> goldBlockWeights;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<List<MineBlock>, int> diamondBlockWeights;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Dictionary<List<MineBlock>, int> relicBlockWeights;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<List<MineBlock>, int> oilBlockWeights;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, ObjectPool> lootPoolDictionary;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<string, int> silverLootWeights;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<string, int> goldLootWeights;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dictionary<string, int> diamondLootWeights;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<string, int> relicLootWeights;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject hotspotsPrefab;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool rockFoundInWall;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SpecialFloorManager.BaseFloor specialFloor;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool generateOnStart;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public PlaythroughManager.MinMax rockReplaceAmount;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public GameObject[] rockReplacers;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<GameObject> _myRockReplacers;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> _myHotspots;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xF739A8", Offset = "0xF739A8", VA = "0xF739A8")]
	public void CreateLootPools(bool clear = true)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xF73DAC", Offset = "0xF73DAC", VA = "0xF73DAC")]
	private void CreateLootPoolAndWeights(GrabbableItem[] prefabs, int poolAmount, Dictionary<string, int> weights)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xF7405C", Offset = "0xF7405C", VA = "0xF7405C")]
	private void AdjustAllWeights()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xF740E8", Offset = "0xF740E8", VA = "0xF740E8")]
	private void AdjustWeights(Dictionary<List<MineBlock>, int> weights, int clay, int limestone, int granite)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xF741A4", Offset = "0xF741A4", VA = "0xF741A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xF741A8", Offset = "0xF741A8", VA = "0xF741A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xF74284", Offset = "0xF74284", VA = "0xF74284")]
	public void AddSpecialItemToSpawn(GameObject item)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xF742EC", Offset = "0xF742EC", VA = "0xF742EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xF74518", Offset = "0xF74518", VA = "0xF74518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCEB4", Offset = "0xAFCEB4")]
	private IEnumerator<float> PoolThisLevelObjectsSequence()
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xF741E8", Offset = "0xF741E8", VA = "0xF741E8")]
	public void Generate(float time)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xF745B4", Offset = "0xF745B4", VA = "0xF745B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCF18", Offset = "0xAFCF18")]
	public IEnumerator<float> GenerateSequence(float time)
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xF74660", Offset = "0xF74660", VA = "0xF74660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCF7C", Offset = "0xAFCF7C")]
	private IEnumerator<float> CreateBlockwall(BlockWallGenerator bwg, float time)
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xF74718", Offset = "0xF74718", VA = "0xF74718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFCFE0", Offset = "0xAFCFE0")]
	private IEnumerator<float> SpawnCoroutine(float time)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xF747C4", Offset = "0xF747C4", VA = "0xF747C4")]
	private List<MineBlock> ChooseRockType(Dictionary<List<MineBlock>, int> weights)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xF748CC", Offset = "0xF748CC", VA = "0xF748CC")]
	private void GenerateOre(GrabbableItem[] prefabs, List<MineBlock> blocks, Dictionary<string, int> lwd)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xF74DE4", Offset = "0xF74DE4", VA = "0xF74DE4")]
	private static MineBlock ChooseRandomRock(List<MineBlock> rockList)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xF74EC8", Offset = "0xF74EC8", VA = "0xF74EC8")]
	private void SpawnHotspots(Transform relicSpot, GrabbableItem relicGrabbable, FracturedObject fracturedObject, Transform blockwall)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xF75904", Offset = "0xF75904", VA = "0xF75904")]
	public static void DrawWireCube(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xF75AE0", Offset = "0xF75AE0", VA = "0xF75AE0")]
	public static void DrawSolidCube(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xF75CBC", Offset = "0xF75CBC", VA = "0xF75CBC")]
	public static void ReturnLootToPool(GameObject loot, float time = 0f)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xF75E98", Offset = "0xF75E98", VA = "0xF75E98")]
	public static GameObject SpawnLoot(string lootName)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xF75F78", Offset = "0xF75F78", VA = "0xF75F78")]
	public LevelLootManager()
	{
	}
}
[Token(Token = "0x20000DD")]
public class LocalizationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004FD")]
	public struct LocalizationWrapper
	{
		[Serializable]
		[Token(Token = "0x20007B2")]
		public struct MultiLanguageString
		{
			[Token(Token = "0x4002C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4002C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string english;

			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string schinese;

			[Token(Token = "0x4002C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tchinese;

			[Token(Token = "0x4002C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string korean;

			[Token(Token = "0x4002C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string spanish;

			[Token(Token = "0x4002C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string german;

			[Token(Token = "0x4002C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string japanese;

			[Token(Token = "0x4002C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string french;

			[Token(Token = "0x4002C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string russian;

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xF797F8", Offset = "0xF797F8", VA = "0xF797F8")]
			public MultiLanguageString(string id, string english, string schinese, string tchinese, string korean, string spanish, string german, string japanese, string french, string russian)
			{
			}
		}

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MultiLanguageString[] localization;
	}

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocalizationWrapper localizationData;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly string path;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, string> localizedString;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xF79258", Offset = "0xF79258", VA = "0xF79258")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xF7963C", Offset = "0xF7963C", VA = "0xF7963C")]
	private void AddLocalizedStringToDictionary(int i, string translatedString)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xF7972C", Offset = "0xF7972C", VA = "0xF7972C")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public class MineblockManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004FE")]
	public class SpecialRockType
	{
		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MineBlock[] blocksPrefabs;

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xE5C978", Offset = "0xE5C978", VA = "0xE5C978")]
		public SpecialRockType()
		{
		}
	}

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MineblockManager singleton;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<int, List<MineBlock>> levelMineblocks;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<MineBlock> MineblockDestroyedAction;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MineBlock oneBlockPrefab;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MineBlock[] otherBlocksPrefabs;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ObjectPool[] blockPools;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, ObjectPool> blockPoolDictionary;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpecialRockType[] specialRocks;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE5BDC4", Offset = "0xE5BDC4", VA = "0xE5BDC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE5C784", Offset = "0xE5C784", VA = "0xE5C784")]
	public void AddSpecialMineblock(int level, MineBlock block)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE5AAF0", Offset = "0xE5AAF0", VA = "0xE5AAF0")]
	public void MineBlockDestroyed(MineBlock block)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE5C894", Offset = "0xE5C894", VA = "0xE5C894")]
	public MineblockManager()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MineblockMaterialManager : MonoBehaviour
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MineblockMaterialManager singleton;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock clayProps;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock graniteProps;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock limestoneProps;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color limestoneColor;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color particleClayColor;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color particleObsidianColor;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float limestoneContrast;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE5C980", Offset = "0xE5C980", VA = "0xE5C980")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE5CA2C", Offset = "0xE5CA2C", VA = "0xE5CA2C")]
	public void SetClay(Renderer renderer)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE5CAF4", Offset = "0xE5CAF4", VA = "0xE5CAF4")]
	public void SetLimestone(Renderer renderer)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE5CBB8", Offset = "0xE5CBB8", VA = "0xE5CBB8")]
	public void SetGranite(Renderer renderer, float p)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE5CC8C", Offset = "0xE5CC8C", VA = "0xE5CC8C")]
	public MineblockMaterialManager()
	{
	}
}
[Token(Token = "0x20000E0")]
public class PlaythroughManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004FF")]
	public class FloorTypes
	{
		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawnRate;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinMax silver;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MinMax gold;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MinMax diamond;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MinMax relic;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MinMax oil;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float graniteBlockChance;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float limestoneBlockChance;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloorPrefabs[] floorPrefabs;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, int> floorWeights;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject[] rockReplacers;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MinMax rockReplaceAmount;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject[] props;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color ambientColor;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool playMusic;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool dimLights;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip customMusic;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Cubemap customFogCubemap;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool hasSpecialBlocks;

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xF3EE48", Offset = "0xF3EE48", VA = "0xF3EE48")]
		public FloorTypes()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000500")]
	public class FloorPrefabs
	{
		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject floor;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawnRate;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int initialAllocate;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xF3EE34", Offset = "0xF3EE34", VA = "0xF3EE34")]
		public FloorPrefabs()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000501")]
	public class MinMax
	{
		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int min;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int max;

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xF3EEC0", Offset = "0xF3EEC0", VA = "0xF3EEC0")]
		public MinMax(int min, int max)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xF39C34", Offset = "0xF39C34", VA = "0xF39C34")]
		public int GetRandom()
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F04", Offset = "0xAE5F04")]
	private sealed class <GetControllerNames>d__81 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <namesAvailable>5__2;

		[Token(Token = "0x17000226")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002217")]
			[Address(RVA = "0xF3D868", Offset = "0xF3D868", VA = "0xF3D868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0xF3D8D0", Offset = "0xF3D8D0", VA = "0xF3D8D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xF368F8", Offset = "0xF368F8", VA = "0xF368F8")]
		[DebuggerHidden]
		public <GetControllerNames>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xF3D39C", Offset = "0xF3D39C", VA = "0xF3D39C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xF3D3A0", Offset = "0xF3D3A0", VA = "0xF3D3A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xF3D870", Offset = "0xF3D870", VA = "0xF3D870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F14", Offset = "0xAE5F14")]
	private sealed class <ShowRichesSplash>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xF3E6D8", Offset = "0xF3E6D8", VA = "0xF3E6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xF3E740", Offset = "0xF3E740", VA = "0xF3E740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xF36DD4", Offset = "0xF36DD4", VA = "0xF36DD4")]
		[DebuggerHidden]
		public <ShowRichesSplash>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xF3E5C4", Offset = "0xF3E5C4", VA = "0xF3E5C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xF3E5C8", Offset = "0xF3E5C8", VA = "0xF3E5C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xF3E6E0", Offset = "0xF3E6E0", VA = "0xF3E6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F24", Offset = "0xAE5F24")]
	private sealed class <SpawnCompetetiveTools>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <posX>5__2;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject[] <>7__wrap2;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__5;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002223")]
			[Address(RVA = "0xF3EDC4", Offset = "0xF3EDC4", VA = "0xF3EDC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xF3EE2C", Offset = "0xF3EE2C", VA = "0xF3EE2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xF39CB4", Offset = "0xF39CB4", VA = "0xF39CB4")]
		[DebuggerHidden]
		public <SpawnCompetetiveTools>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xF3EB48", Offset = "0xF3EB48", VA = "0xF3EB48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xF3EB4C", Offset = "0xF3EB4C", VA = "0xF3EB4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xF3EDCC", Offset = "0xF3EDCC", VA = "0xF3EDCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F34", Offset = "0xAE5F34")]
	private sealed class <DelayedBuildingLoad>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0xF3D32C", Offset = "0xF3D32C", VA = "0xF3D32C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0xF3D394", Offset = "0xF3D394", VA = "0xF3D394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xF3BF28", Offset = "0xF3BF28", VA = "0xF3BF28")]
		[DebuggerHidden]
		public <DelayedBuildingLoad>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xF3D0BC", Offset = "0xF3D0BC", VA = "0xF3D0BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xF3D0C0", Offset = "0xF3D0C0", VA = "0xF3D0C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xF3D334", Offset = "0xF3D334", VA = "0xF3D334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F44", Offset = "0xAE5F44")]
	private sealed class <SlowToolSpawn>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <hasPickaxe>5__2;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string>.Enumerator <>7__wrap2;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0xF3EAD8", Offset = "0xF3EAD8", VA = "0xF3EAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xF3EB40", Offset = "0xF3EB40", VA = "0xF3EB40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xF3BF54", Offset = "0xF3BF54", VA = "0xF3BF54")]
		[DebuggerHidden]
		public <SlowToolSpawn>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xF3E748", Offset = "0xF3E748", VA = "0xF3E748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xF3E7CC", Offset = "0xF3E7CC", VA = "0xF3E7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xF3E774", Offset = "0xF3E774", VA = "0xF3E774")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xF3EAE0", Offset = "0xF3EAE0", VA = "0xF3EAE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F54", Offset = "0xAE5F54")]
	private sealed class <ResetElevatorOnlyTools>d__110 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000230")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xF3E4F8", Offset = "0xF3E4F8", VA = "0xF3E4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002238")]
			[Address(RVA = "0xF3E560", Offset = "0xF3E560", VA = "0xF3E560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xF3C850", Offset = "0xF3C850", VA = "0xF3C850")]
		[DebuggerHidden]
		public <ResetElevatorOnlyTools>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xF3E24C", Offset = "0xF3E24C", VA = "0xF3E24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xF3E250", Offset = "0xF3E250", VA = "0xF3E250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xF3E500", Offset = "0xF3E500", VA = "0xF3E500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F64", Offset = "0xAE5F64")]
	private sealed class <MoveItemsToTrainHooksSequence>d__113 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000232")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0xF3E180", Offset = "0xF3E180", VA = "0xF3E180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223E")]
			[Address(RVA = "0xF3E1E8", Offset = "0xF3E1E8", VA = "0xF3E1E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xF3C964", Offset = "0xF3C964", VA = "0xF3C964")]
		[DebuggerHidden]
		public <MoveItemsToTrainHooksSequence>d__113(int <>1__state)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xF3DE20", Offset = "0xF3DE20", VA = "0xF3DE20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xF3DE24", Offset = "0xF3DE24", VA = "0xF3DE24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xF3E188", Offset = "0xF3E188", VA = "0xF3E188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F74", Offset = "0xAE5F74")]
	private sealed class <MoveItemsToElevatorHooksSequence>d__115 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaythroughManager <>4__this;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000234")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002242")]
			[Address(RVA = "0xF3DD54", Offset = "0xF3DD54", VA = "0xF3DD54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002244")]
			[Address(RVA = "0xF3DDBC", Offset = "0xF3DDBC", VA = "0xF3DDBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xF3CA78", Offset = "0xF3CA78", VA = "0xF3CA78")]
		[DebuggerHidden]
		public <MoveItemsToElevatorHooksSequence>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xF3D934", Offset = "0xF3D934", VA = "0xF3D934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF3D938", Offset = "0xF3D938", VA = "0xF3D938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xF3DD5C", Offset = "0xF3DD5C", VA = "0xF3DD5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlaythroughManager singleton;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA4B0", Offset = "0xAEA4B0")]
	private static int <CurrentRunNumber>k__BackingField;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA4C0", Offset = "0xAEA4C0")]
	private int <PlayerMoney>k__BackingField;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _currrentRunValue;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action moneyChanged;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip buyItemClip;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip cheatClip;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vrErrorTextCanvas;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int> runStarted;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject richesSplashScreen;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool CompetetiveMode;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject creditsBoard;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject elevatorUnderworld;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Transform currentMovementTransform;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action tunnelsEntered;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action townEntered;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool DEBUG;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool arcadeModeEnabled;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	[HideInInspector]
	public bool spawnSpecialNukeFloor;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject specialNukeFloor;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA4E0", Offset = "0xAEA4E0")]
	private int <ExplosiveStage>k__BackingField;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA4F0", Offset = "0xAEA4F0")]
	private bool <playerIsInTrainTunnels>k__BackingField;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA500", Offset = "0xAEA500")]
	private bool <playerIsInTrain>k__BackingField;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action explosionStageChanged;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject currentExplosiveCrate;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FloorTypes[] floorTypes;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FloorTypes[] richedDLCFloorTypes;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject vaultFloor;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GameObject> _currentFloors;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> _tempFloors;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<string, ObjectPool> _floorPoolDictionary;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public LevelLootManager[] currentLevelLootManagers;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private LevelLootManager[] _normalLevelLootManagers;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private LevelLootManager[] _competetiveLevelLootManagers;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<LevelLootManager> _caveLeveLootManagers;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dictionary<FloorTypes, int> _runTypeWeights;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public FloorTypes currentRunType;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Dictionary<string, ObjectPool> objectPoolDictionary;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform[] propSpots;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> _caveProps;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<GameObject> runTemporaryObjects;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool richesDLCInstalled;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool richesSupporterInstalled;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<GameObject> chaosGemPrefabs;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool gemSpawning;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Dictionary<FloorTypes, int> _availableRunTypeWeights;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject normalLevels;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject competetiveLevels;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public List<GameObject> normalModePlayerItems;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public List<GameObject> competetiveModePlayerItems;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject[] competetiveToolPrefabs;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] competetiveButton;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Color competetiveColor;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject miningHelmetFlashlight;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject[] respawnSpots;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	protected BuildingUpgrades buildingUpgades;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool viveWand;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public static bool knuckles;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool wmr;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool newTouch;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public static bool oldTouch;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public bool joystickNamesChecked;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int nextVaultRun;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float _oldTimeScale;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _townInit;

	[Token(Token = "0x1700002D")]
	public static int CurrentRunNumber
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xF354B4", Offset = "0xF354B4", VA = "0xF354B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE044", Offset = "0xAFE044")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xF3551C", Offset = "0xF3551C", VA = "0xF3551C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE054", Offset = "0xAFE054")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public int PlayerMoney
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xF35588", Offset = "0xF35588", VA = "0xF35588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE064", Offset = "0xAFE064")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xF35590", Offset = "0xF35590", VA = "0xF35590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE074", Offset = "0xAFE074")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public int ExplosiveStage
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xF35598", Offset = "0xF35598", VA = "0xF35598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE084", Offset = "0xAFE084")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xF355A0", Offset = "0xF355A0", VA = "0xF355A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE094", Offset = "0xAFE094")]
		private set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool playerIsInTrainTunnels
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xF355A8", Offset = "0xF355A8", VA = "0xF355A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0A4", Offset = "0xAFE0A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xF355B0", Offset = "0xF355B0", VA = "0xF355B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0B4", Offset = "0xAFE0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool playerIsInTrain
	{
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xF355BC", Offset = "0xF355BC", VA = "0xF355BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0C4", Offset = "0xAFE0C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xF355C4", Offset = "0xF355C4", VA = "0xF355C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE0D4", Offset = "0xAFE0D4")]
		private set
		{
		}
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xF355D0", Offset = "0xF355D0", VA = "0xF355D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xF36888", Offset = "0xF36888", VA = "0xF36888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE0E4", Offset = "0xAFE0E4")]
	private IEnumerator<float> GetControllerNames()
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xF36924", Offset = "0xF36924", VA = "0xF36924")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xF369E0", Offset = "0xF369E0", VA = "0xF369E0")]
	public static bool CheckDLC()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xF36818", Offset = "0xF36818", VA = "0xF36818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE148", Offset = "0xAFE148")]
	private IEnumerator ShowRichesSplash()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xF36E00", Offset = "0xF36E00", VA = "0xF36E00")]
	public void StartRun(bool incrementRun = true)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xF3923C", Offset = "0xF3923C", VA = "0xF3923C")]
	private void DisableTempFloors()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xF39040", Offset = "0xF39040", VA = "0xF39040")]
	private void PoolAllCurrentFloors()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xF39690", Offset = "0xF39690", VA = "0xF39690")]
	private void SpawnVaultFloor(int i)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xF39350", Offset = "0xF39350", VA = "0xF39350")]
	public void AddChaosGemToSpawner()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xF39C44", Offset = "0xF39C44", VA = "0xF39C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE1AC", Offset = "0xAFE1AC")]
	private IEnumerator SpawnCompetetiveTools()
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xF39CE0", Offset = "0xF39CE0", VA = "0xF39CE0")]
	public void ReplaceNextFlooWithNukeSpecial()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xF3A030", Offset = "0xF3A030", VA = "0xF3A030")]
	public void ReplaceNextFloorWithVault()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xF3A130", Offset = "0xF3A130", VA = "0xF3A130")]
	public void AddMoney(int addedMoney)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xF3A138", Offset = "0xF3A138", VA = "0xF3A138")]
	public void AddMoney(int addedMoney, bool fromChompy = false)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xF34A48", Offset = "0xF34A48", VA = "0xF34A48")]
	public void RemoveMoney(int money)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xF3A2F8", Offset = "0xF3A2F8", VA = "0xF3A2F8")]
	public void AdvanceExplosiveStage(GameObject crate)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xF38F10", Offset = "0xF38F10", VA = "0xF38F10")]
	private void CleanTemporary()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xF3A4AC", Offset = "0xF3A4AC", VA = "0xF3A4AC")]
	public void StartCompetetive()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xF38DFC", Offset = "0xF38DFC", VA = "0xF38DFC")]
	private void SetElevatorStops(LevelLootManager[] llms)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xF3AEFC", Offset = "0xF3AEFC", VA = "0xF3AEFC")]
	public void ToggleCaveProps(bool value)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xF3B000", Offset = "0xF3B000", VA = "0xF3B000")]
	private void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xF3B9AC", Offset = "0xF3B9AC", VA = "0xF3B9AC")]
	public void ToggleTimePause()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xF3BA0C", Offset = "0xF3BA0C", VA = "0xF3BA0C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xF36300", Offset = "0xF36300", VA = "0xF36300")]
	private void LoadSaveData()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xF3BEB8", Offset = "0xF3BEB8", VA = "0xF3BEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE210", Offset = "0xAFE210")]
	private IEnumerator DelayedBuildingLoad()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xF3BE58", Offset = "0xF3BE58", VA = "0xF3BE58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE274", Offset = "0xAFE274")]
	private IEnumerator SlowToolSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xF3BF80", Offset = "0xF3BF80", VA = "0xF3BF80")]
	public void DestroyToolByName(string oldItemName, GameObject exlude)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xF3C1FC", Offset = "0xF3C1FC", VA = "0xF3C1FC")]
	public static Vector3 GetRandomPosWithin(Transform t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xF3C40C", Offset = "0xF3C40C", VA = "0xF3C40C")]
	public void PlayerIsInTrainTunnels(bool value)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xF3C7E0", Offset = "0xF3C7E0", VA = "0xF3C7E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE2D8", Offset = "0xAFE2D8")]
	private IEnumerator<float> ResetElevatorOnlyTools()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xF38C1C", Offset = "0xF38C1C", VA = "0xF38C1C")]
	public void SetPlayerInTrainStatus(bool newStatus)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xF3C87C", Offset = "0xF3C87C", VA = "0xF3C87C")]
	public void MoveItemsToTrainHooks()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xF3C8F4", Offset = "0xF3C8F4", VA = "0xF3C8F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE33C", Offset = "0xAFE33C")]
	private IEnumerator<float> MoveItemsToTrainHooksSequence()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xF3C990", Offset = "0xF3C990", VA = "0xF3C990")]
	public void MoveItemsToElevatorHooks()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xF3CA08", Offset = "0xF3CA08", VA = "0xF3CA08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE3A0", Offset = "0xAFE3A0")]
	private IEnumerator<float> MoveItemsToElevatorHooksSequence()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xF3CAA4", Offset = "0xF3CAA4", VA = "0xF3CAA4")]
	public void StartTrainRun(GameObject runStop)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xF33920", Offset = "0xF33920", VA = "0xF33920")]
	public void AddCaveLLM(LevelLootManager llm)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xF33640", Offset = "0xF33640", VA = "0xF33640")]
	public void ResetAllLLM(LevelLootManager exceptThis)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xF3CF0C", Offset = "0xF3CF0C", VA = "0xF3CF0C")]
	public PlaythroughManager()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PumpkinGhostManager : MonoBehaviour
{
	[Token(Token = "0x200050A")]
	public struct Ghost
	{
		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject ghost;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform targetPoint;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasPumpkin;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float curve;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lookRotationLerp;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion startRotation;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool visible;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator ghostAnimator;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool targetYReached;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool wandering;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform holdPoint;

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xE25E74", Offset = "0xE25E74", VA = "0xE25E74")]
		public Ghost(GameObject ghost, Transform targetPoint, Quaternion startRotation, bool wandering)
		{
		}
	}

	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F84", Offset = "0xAE5F84")]
	private sealed class <LoadHalloweenOverworld>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PumpkinGhostManager <>4__this;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <stopTime>5__3;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <asyncLoad>5__4;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xF44774", Offset = "0xF44774", VA = "0xF44774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xF447DC", Offset = "0xF447DC", VA = "0xF447DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xF40DCC", Offset = "0xF40DCC", VA = "0xF40DCC")]
		[DebuggerHidden]
		public <LoadHalloweenOverworld>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xF442A0", Offset = "0xF442A0", VA = "0xF442A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xF442A4", Offset = "0xF442A4", VA = "0xF442A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xF4477C", Offset = "0xF4477C", VA = "0xF4477C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5F94", Offset = "0xAE5F94")]
	private sealed class <UnloadHalloweenOverworld>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PumpkinGhostManager <>4__this;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <stopTime>5__2;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__3;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0xE25E04", Offset = "0xE25E04", VA = "0xE25E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0xE25E6C", Offset = "0xE25E6C", VA = "0xE25E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xE25884", Offset = "0xE25884", VA = "0xE25884")]
		[DebuggerHidden]
		public <UnloadHalloweenOverworld>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xE258B0", Offset = "0xE258B0", VA = "0xE258B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xE258B4", Offset = "0xE258B4", VA = "0xE258B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xE25E0C", Offset = "0xE25E0C", VA = "0xE25E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FA4", Offset = "0xAE5FA4")]
	private sealed class <GhostSpawnDelay>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PumpkinGhostManager <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002255")]
			[Address(RVA = "0xF44230", Offset = "0xF44230", VA = "0xF44230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002257")]
			[Address(RVA = "0xF44298", Offset = "0xF44298", VA = "0xF44298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xF43C0C", Offset = "0xF43C0C", VA = "0xF43C0C")]
		[DebuggerHidden]
		public <GhostSpawnDelay>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xF4415C", Offset = "0xF4415C", VA = "0xF4415C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xF44160", Offset = "0xF44160", VA = "0xF44160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xF44238", Offset = "0xF44238", VA = "0xF44238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PumpkinGhostManager singleton;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA580", Offset = "0xAEA580")]
	private static bool <HalloweenEnabled>k__BackingField;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string halloweenOverworld;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject normalOverworld;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] ghostPrefabs;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] pumpkinPrefabs;

	[Token(Token = "0x4000757")]
	public const float ghostSpeed = 0.6f;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip heartbeat;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip ghostSpawnClip;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip ghostStealClip;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip lootPumpkinClip;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject spikeRoot;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] spikes;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject pegs;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material halloweenSkybox;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material normalSkybox;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<string, ObjectPool> ghostPool;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Ghost> spawnedGhosts;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> playerPumpkins;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CullingGroup _group;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BoundingSphere[] _bounds;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera _headCamera;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Transform> _freeSpikes;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<Transform, Transform> _pumpkinSpikeDictionary;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<GameObject, PumpkinLoot> _ghostsWithPumpkinsDictionary;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Ghost> _ghostsToRemove;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _grabbedHash;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int _hidingHash;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color32 _oldClearTint;

	[Token(Token = "0x17000032")]
	public static bool HalloweenEnabled
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0xF3FF90", Offset = "0xF3FF90", VA = "0xF3FF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE404", Offset = "0xAFE404")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xF3FFF8", Offset = "0xF3FFF8", VA = "0xF3FFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFE414", Offset = "0xAFE414")]
		private set
		{
		}
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xF40068", Offset = "0xF40068", VA = "0xF40068")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xF4024C", Offset = "0xF4024C", VA = "0xF4024C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xF402DC", Offset = "0xF402DC", VA = "0xF402DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xF40360", Offset = "0xF40360", VA = "0xF40360")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xF40534", Offset = "0xF40534", VA = "0xF40534")]
	public void StartHalloween()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xF40934", Offset = "0xF40934", VA = "0xF40934")]
	private void DisableHalloween()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xF408C4", Offset = "0xF408C4", VA = "0xF408C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE424", Offset = "0xAFE424")]
	private IEnumerator LoadHalloweenOverworld()
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xF40D5C", Offset = "0xF40D5C", VA = "0xF40D5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE488", Offset = "0xAFE488")]
	private IEnumerator UnloadHalloweenOverworld()
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xF40DF8", Offset = "0xF40DF8", VA = "0xF40DF8")]
	private void RemovePumpkinFromList(Transform grabbedPumpkin)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xF410DC", Offset = "0xF410DC", VA = "0xF410DC")]
	public void AddPumpkinsToFloors(int run)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xF41390", Offset = "0xF41390", VA = "0xF41390")]
	public void LootPumpkin(PumpkinLoot pumpkin)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xF41440", Offset = "0xF41440", VA = "0xF41440")]
	public void LootPumpkinSpike(PumpkinLoot pumpkin, Transform spike)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xF41800", Offset = "0xF41800", VA = "0xF41800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xF43944", Offset = "0xF43944", VA = "0xF43944")]
	public void PumpkinReceived(GameObject pumpy)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xF439AC", Offset = "0xF439AC", VA = "0xF439AC")]
	public void GhostEvent()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xF43B8C", Offset = "0xF43B8C", VA = "0xF43B8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE4EC", Offset = "0xAFE4EC")]
	private IEnumerator GhostSpawnDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xF42DDC", Offset = "0xF42DDC", VA = "0xF42DDC")]
	public void SpawnAGhost(bool wandering = false)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xF434B4", Offset = "0xF434B4", VA = "0xF434B4")]
	public void GhostEscapedWithPumpkin(Ghost ghostStruct)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xF43C38", Offset = "0xF43C38", VA = "0xF43C38")]
	public void GhostKilled(GameObject ghost)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xF43EEC", Offset = "0xF43EEC", VA = "0xF43EEC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xF43FE4", Offset = "0xF43FE4", VA = "0xF43FE4")]
	public PumpkinGhostManager()
	{
	}
}
[Token(Token = "0x20000E2")]
public class RadioManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200050E")]
	public class WorldRadioPlaylist
	{
		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TriggerVolume.WorldType worldType;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] playlist;

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xE29734", Offset = "0xE29734", VA = "0xE29734")]
		public WorldRadioPlaylist()
		{
		}
	}

	[Token(Token = "0x200050F")]
	public enum RadioType
	{
		[Token(Token = "0x40026FA")]
		trainRadio,
		[Token(Token = "0x40026FB")]
		saloonRadio
	}

	[Token(Token = "0x2000510")]
	public enum RadioStation
	{
		[Token(Token = "0x40026FD")]
		channel1,
		[Token(Token = "0x40026FE")]
		channel2,
		[Token(Token = "0x40026FF")]
		off
	}

	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FB4", Offset = "0xAE5FB4")]
	private sealed class <SaloonRadioSequence>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RadioManager <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600225C")]
			[Address(RVA = "0xE296C4", Offset = "0xE296C4", VA = "0xE296C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600225E")]
			[Address(RVA = "0xE2972C", Offset = "0xE2972C", VA = "0xE2972C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE285E0", Offset = "0xE285E0", VA = "0xE285E0")]
		[DebuggerHidden]
		public <SaloonRadioSequence>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE29510", Offset = "0xE29510", VA = "0xE29510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xE29514", Offset = "0xE29514", VA = "0xE29514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xE296CC", Offset = "0xE296CC", VA = "0xE296CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FC4", Offset = "0xAE5FC4")]
	private sealed class <PlayRandomTownRadioSequence>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RadioManager <>4__this;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xE294A0", Offset = "0xE294A0", VA = "0xE294A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xE29508", Offset = "0xE29508", VA = "0xE29508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xE286A8", Offset = "0xE286A8", VA = "0xE286A8")]
		[DebuggerHidden]
		public <PlayRandomTownRadioSequence>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xE29254", Offset = "0xE29254", VA = "0xE29254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xE29258", Offset = "0xE29258", VA = "0xE29258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xE294A8", Offset = "0xE294A8", VA = "0xE294A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RadioManager singleton;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public TrainRadio trainRadio;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RadioAudioReceiver radioAudioReceiverPrefab;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClip> saloonClips;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioClip> randomRadioClips;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioClip> poorRun;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioClip> averageRun;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AudioClip> goodRun;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip goodRunElevator;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip saloonMusic;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] channel2MusicClips;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WorldRadioPlaylist[] worldRadioPlaylist;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip brokenTracks;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip buyEverything;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip crystalLevel;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip firstTimeOutsideSaloon;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip spaceCitizen;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip jurassicLevel;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip mimicFound;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip poisonDead;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip goldAchievement;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip toxicLevel;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip trainFirstUse;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip traesureChamber;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip toxicWarning;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip waypointUsed;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TriggerVolume.WorldType _currentWorldType;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected RadioType radioType;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected RadioStation radioStation;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<RadioAudioPositioner> _registeredRadioAudioPositioners;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RadioAudioPositioner _currentRadioAudioPositioner;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RadioAudioReceiver _radioAudioReceiver;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Queue<AudioClip> _narrationQueue;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Queue<AudioClip> _musicQueue;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _musicPaused;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool spoopyAnnouncer;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float spoopySineTimer;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float spoopySineCooldown;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool spoopyToggle;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xE27838", Offset = "0xE27838", VA = "0xE27838")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xE278C8", Offset = "0xE278C8", VA = "0xE278C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xE27CD8", Offset = "0xE27CD8", VA = "0xE27CD8")]
	public void ChangeCurrentWorldPlaylist(TriggerVolume.WorldType worldtype)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xE27D48", Offset = "0xE27D48", VA = "0xE27D48")]
	public TriggerVolume.WorldType GetWorldType()
	{
		return default(TriggerVolume.WorldType);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xE27D50", Offset = "0xE27D50", VA = "0xE27D50")]
	public AudioClip[] GetCurrentWorldPlaylist()
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xE27A78", Offset = "0xE27A78", VA = "0xE27A78")]
	public void ChangeRadioType(RadioType newType)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xE27A8C", Offset = "0xE27A8C", VA = "0xE27A8C")]
	public void ChangeRadioStation(RadioStation newStation)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xE27E7C", Offset = "0xE27E7C", VA = "0xE27E7C")]
	private void AddClipArrayToMusicQueue(AudioClip[] clips)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xE27790", Offset = "0xE27790", VA = "0xE27790")]
	public void RegisterRadioAudioPositioners(RadioAudioPositioner rap)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xE27F30", Offset = "0xE27F30", VA = "0xE27F30")]
	public void PlayRadioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xE280F4", Offset = "0xE280F4", VA = "0xE280F4")]
	public void PlayMusicNow(AudioClip musicClip)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xE27CF0", Offset = "0xE27CF0", VA = "0xE27CF0")]
	public void ClearMusicQueue()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xE28158", Offset = "0xE28158", VA = "0xE28158")]
	public void StopCurrentMusicClip()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xE28180", Offset = "0xE28180", VA = "0xE28180")]
	public void StopRadio()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xE281D4", Offset = "0xE281D4", VA = "0xE281D4")]
	public void AddMusicQueue(AudioClip musicClip)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xE2823C", Offset = "0xE2823C", VA = "0xE2823C")]
	public void PlayMiningOutcomeClip(int gold, bool elevator)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xE283F0", Offset = "0xE283F0", VA = "0xE283F0")]
	public void SetPlaybackSpeed(float pitch)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xE28570", Offset = "0xE28570", VA = "0xE28570")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE550", Offset = "0xAFE550")]
	private IEnumerator SaloonRadioSequence()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xE2860C", Offset = "0xE2860C", VA = "0xE2860C")]
	public void PlayRandomTownRadio()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xE28638", Offset = "0xE28638", VA = "0xE28638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE5B4", Offset = "0xAFE5B4")]
	private IEnumerator PlayRandomTownRadioSequence()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xE286D4", Offset = "0xE286D4", VA = "0xE286D4")]
	public void OnArriveSaloon()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xE288A4", Offset = "0xE288A4", VA = "0xE288A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xE290E0", Offset = "0xE290E0", VA = "0xE290E0")]
	public RadioManager()
	{
	}
}
[Token(Token = "0x20000E3")]
public class SaveLoadManager
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string savePath;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string backupSavePath;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xE307C8", Offset = "0xE307C8", VA = "0xE307C8")]
	public static void SaveProgress(ProgressData data)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xE3090C", Offset = "0xE3090C", VA = "0xE3090C")]
	public static ProgressData LoadProgress()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xE30CF8", Offset = "0xE30CF8", VA = "0xE30CF8")]
	private static ProgressData LoadPrimarySave()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xE30BD4", Offset = "0xE30BD4", VA = "0xE30BD4")]
	private static ProgressData LoadBackUpSave()
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xE30E1C", Offset = "0xE30E1C", VA = "0xE30E1C")]
	public static void DeleteBackup()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xE30EF8", Offset = "0xE30EF8", VA = "0xE30EF8")]
	public SaveLoadManager()
	{
	}
}
[Token(Token = "0x20000E4")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text[] scoreSigns;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xE31F20", Offset = "0xE31F20", VA = "0xE31F20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xE31F24", Offset = "0xE31F24", VA = "0xE31F24")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xE3220C", Offset = "0xE3220C", VA = "0xE3220C")]
	private void UpdateMoney()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xE323F8", Offset = "0xE323F8", VA = "0xE323F8")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x20000E5")]
public class SheriffQuestManager : MonoBehaviour
{
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FD4", Offset = "0xAE5FD4")]
	private sealed class <FinishGoalAndGiveRewardsSequence>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SheriffQuestManager <>4__this;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <wpTime>5__2;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waypointWait>5__3;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002268")]
			[Address(RVA = "0xE34658", Offset = "0xE34658", VA = "0xE34658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226A")]
			[Address(RVA = "0xE346C0", Offset = "0xE346C0", VA = "0xE346C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xE3407C", Offset = "0xE3407C", VA = "0xE3407C")]
		[DebuggerHidden]
		public <FinishGoalAndGiveRewardsSequence>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xE34248", Offset = "0xE34248", VA = "0xE34248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xE3424C", Offset = "0xE3424C", VA = "0xE3424C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xE34660", Offset = "0xE34660", VA = "0xE34660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FE4", Offset = "0xAE5FE4")]
	private sealed class <SpawnLootSequence>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SheriffQuestManager <>4__this;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaitForSeconds wait;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xE34DBC", Offset = "0xE34DBC", VA = "0xE34DBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002270")]
			[Address(RVA = "0xE34E24", Offset = "0xE34E24", VA = "0xE34E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xE34124", Offset = "0xE34124", VA = "0xE34124")]
		[DebuggerHidden]
		public <SpawnLootSequence>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xE346C8", Offset = "0xE346C8", VA = "0xE346C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xE346CC", Offset = "0xE346CC", VA = "0xE346CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xE34DC4", Offset = "0xE34DC4", VA = "0xE34DC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activated;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SheriffQuestManager singleton;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int questLengthInMinutes;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SheriffQuestScriptable selectedQuest;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text sheriffBoardText;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SheriffQuestScriptable> tier1Quests;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SheriffQuestScriptable> tier2Quests;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SheriffQuestScriptable> tier3Quests;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] bestRewards;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] mediumRewards;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] junkRewards;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rewardChompy;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator rewardChompyAnimator;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rewardChompyLootSpawnPos;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SheriffUpgrader sheriffUpgrader;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform[] chompyMoveWaypoints;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip pukeClip;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioMixerGroup loudGroup;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _intGoal;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<string> _collectedNames;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _previousQuestId;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _questChangeTime;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _textUpdateTimer;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SheriffQuestScriptable> _questPool;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _rewardSequence;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xE33384", Offset = "0xE33384", VA = "0xE33384")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xE33410", Offset = "0xE33410", VA = "0xE33410")]
	private void Update()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xE3374C", Offset = "0xE3374C", VA = "0xE3374C")]
	private void UpdateBoardText()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xE33A3C", Offset = "0xE33A3C", VA = "0xE33A3C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xE33580", Offset = "0xE33580", VA = "0xE33580")]
	public void SelectRandomQuest()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xE33ABC", Offset = "0xE33ABC", VA = "0xE33ABC")]
	public void InitQuestPool()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xE33B8C", Offset = "0xE33B8C", VA = "0xE33B8C")]
	public void CheckForLootedGoals(GrabbableItem item)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xE33E8C", Offset = "0xE33E8C", VA = "0xE33E8C")]
	public void CheckForDestroyGoals(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE33F50", Offset = "0xE33F50", VA = "0xE33F50")]
	public void ChestOpened()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xE33F80", Offset = "0xE33F80", VA = "0xE33F80")]
	public void OilLooted()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xE33FB0", Offset = "0xE33FB0", VA = "0xE33FB0")]
	public void BlockDestroyed()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE33FE0", Offset = "0xE33FE0", VA = "0xE33FE0")]
	public void CheckIfGoalReached()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xE33548", Offset = "0xE33548", VA = "0xE33548")]
	private void FinishGoalAndGiveRewards()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xE3400C", Offset = "0xE3400C", VA = "0xE3400C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE618", Offset = "0xAFE618")]
	private IEnumerator FinishGoalAndGiveRewardsSequence()
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xE340A8", Offset = "0xE340A8", VA = "0xE340A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE67C", Offset = "0xAFE67C")]
	private IEnumerator SpawnLootSequence(WaitForSeconds wait)
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE34150", Offset = "0xE34150", VA = "0xE34150")]
	public SheriffQuestManager()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SpecialFloorManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000515")]
	public class BaseFloor
	{
		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float probability;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int silver;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gold;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diamond;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int relic;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int oil;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float graniteBlockChance;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float limestoneBlockChance;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action customStartAction;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action customExitAction;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color specialLightColor;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xE38E8C", Offset = "0xE38E8C", VA = "0xE38E8C")]
		public BaseFloor()
		{
		}
	}

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpecialFloorManager singleton;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseFloor> availableFloors;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BaseFloor dualPickaxes;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseFloor diamondVein;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BaseFloor spookySkeletons;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pickaxePrefab;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hookPrefab;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask rockLayer;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> _tempSpecialStuff;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE385F4", Offset = "0xE385F4", VA = "0xE385F4")]
	public void AddExtraPixaxe()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE38B44", Offset = "0xE38B44", VA = "0xE38B44")]
	public void DeleteTempItems()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE38CB8", Offset = "0xE38CB8", VA = "0xE38CB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE38DF4", Offset = "0xE38DF4", VA = "0xE38DF4")]
	public SpecialFloorManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class StoreManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000516")]
	public class StoreRunItems
	{
		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] item;

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xF6923C", Offset = "0xF6923C", VA = "0xF6923C")]
		public StoreRunItems()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000517")]
	public class ItemReplacer
	{
		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject replacerPrefab;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject oldItem;

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xF69204", Offset = "0xF69204", VA = "0xF69204")]
		public ItemReplacer(GameObject newReplacerPrefab, GameObject newOldItem)
		{
		}
	}

	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE5FF4", Offset = "0xAE5FF4")]
	private sealed class <DelayedDisable>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ob;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xF69194", Offset = "0xF69194", VA = "0xF69194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xF691FC", Offset = "0xF691FC", VA = "0xF691FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xF68A08", Offset = "0xF68A08", VA = "0xF68A08")]
		[DebuggerHidden]
		public <DelayedDisable>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xF69118", Offset = "0xF69118", VA = "0xF69118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xF6911C", Offset = "0xF6911C", VA = "0xF6911C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xF6919C", Offset = "0xF6919C", VA = "0xF6919C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StoreManager singleton;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform shelfStuff;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform freeVersionShelfStuff;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> _itemsOnShelves;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject badgePrefab;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject DLCBadgePrefab;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform badgeParentTransform;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<GameObject, GameObject> _itemAndBadgeDictionary;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> _nextRunItems;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StoreRunItems[] runItems;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public StoreRunItems[] explosiveRunItems;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StoreRunItems[] richesDLCItems;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ItemReplacer> _itemReplacers;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform itemsPosA;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform itemsPosB;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] enableAfterTutorial;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _currentItemsInShop;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float itemsKinematicTime;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool shopDelayedKinematic;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _nextEmptyPosition;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject uselessVRGlassesPrefab;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _uselessItemsBought;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _currentItemAmount;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly int maxItemAmount;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xF646DC", Offset = "0xF646DC", VA = "0xF646DC")]
	public void AddItemUpgrade(ItemReplacer replacer)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xF64784", Offset = "0xF64784", VA = "0xF64784")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xF6597C", Offset = "0xF6597C", VA = "0xF6597C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xF65B18", Offset = "0xF65B18", VA = "0xF65B18")]
	public void SaveShopStuff()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xF66100", Offset = "0xF66100", VA = "0xF66100")]
	public Vector3 GetPlaceForItem(GameObject item)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xF66328", Offset = "0xF66328", VA = "0xF66328")]
	public Vector3 GetPlaceForBadge(Transform itemTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xF66358", Offset = "0xF66358", VA = "0xF66358")]
	private void AddToShop(OnSale item)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xF66764", Offset = "0xF66764", VA = "0xF66764")]
	public void SpawnNewItems()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xF688D4", Offset = "0xF688D4", VA = "0xF688D4")]
	private void DestroyShelfItemWithName(string itemName)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xF686DC", Offset = "0xF686DC", VA = "0xF686DC")]
	private void SpawnItem(KeyValuePair<GameObject, GameObject> item)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xF68520", Offset = "0xF68520", VA = "0xF68520")]
	private bool IsAlreadySpawned(GameObject item)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xF68864", Offset = "0xF68864", VA = "0xF68864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE6E0", Offset = "0xAFE6E0")]
	public IEnumerator DelayedDisable(GameObject ob)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xF68A34", Offset = "0xF68A34", VA = "0xF68A34")]
	private void Update()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xF68C1C", Offset = "0xF68C1C", VA = "0xF68C1C")]
	private void DestroyPriceText(GameObject go)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xF68CD4", Offset = "0xF68CD4", VA = "0xF68CD4")]
	public void HideItems()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xF65740", Offset = "0xF65740", VA = "0xF65740")]
	public void AddNextExplosiveRunItem()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xF68E7C", Offset = "0xF68E7C", VA = "0xF68E7C")]
	public void UselessItemBought(string uselessName)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xF69028", Offset = "0xF69028", VA = "0xF69028")]
	public StoreManager()
	{
	}
}
[Token(Token = "0x20000E8")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialManager singleton;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Queue<Action> tutorialActions;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<GameObject> teleportTutorial;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xFC41BC", Offset = "0xFC41BC", VA = "0xFC41BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xFC427C", Offset = "0xFC427C", VA = "0xFC427C")]
	public void SpawnTutorialInfo(GameObject infoObject)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xFC4280", Offset = "0xFC4280", VA = "0xFC4280")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x20000E9")]
[ExecuteInEditMode]
public class WaypointManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000519")]
	public class Waypoint
	{
		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material icon;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Spline waypointTrackSpline;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8E00", Offset = "0xAF8E00")]
		public float distanceOnWaypoint;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject waypointMachine;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xD8FBEC", Offset = "0xD8FBEC", VA = "0xD8FBEC")]
		public Waypoint()
		{
		}
	}

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugBuildStartEverythingUnlocked;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaypointManager singleton;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int unlockedWaypoints;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Waypoint[] waypoints;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xD8F7AC", Offset = "0xD8F7AC", VA = "0xD8F7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xD8F800", Offset = "0xD8F800", VA = "0xD8F800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xD8F8E4", Offset = "0xD8F8E4", VA = "0xD8F8E4")]
	public void UnlockWaypoint(int waypointIndex)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD8FA34", Offset = "0xD8FA34", VA = "0xD8FA34")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD8FBE4", Offset = "0xD8FBE4", VA = "0xD8FBE4")]
	public WaypointManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ManhattanNuke : PlayerItem
{
	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6004", Offset = "0xAE6004")]
	private sealed class <SpecialNukeTimer>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManhattanNuke <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600227E")]
			[Address(RVA = "0xE56148", Offset = "0xE56148", VA = "0xE56148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002280")]
			[Address(RVA = "0xE561B0", Offset = "0xE561B0", VA = "0xE561B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xE52710", Offset = "0xE52710", VA = "0xE52710")]
		[DebuggerHidden]
		public <SpecialNukeTimer>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xE55EBC", Offset = "0xE55EBC", VA = "0xE55EBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xE55EC0", Offset = "0xE55EC0", VA = "0xE55EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xE56150", Offset = "0xE56150", VA = "0xE56150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6014", Offset = "0xAE6014")]
	private sealed class <BlurSequence>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xE539C0", Offset = "0xE539C0", VA = "0xE539C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xE53A28", Offset = "0xE53A28", VA = "0xE53A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xE5312C", Offset = "0xE5312C", VA = "0xE5312C")]
		[DebuggerHidden]
		public <BlurSequence>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xE539A4", Offset = "0xE539A4", VA = "0xE539A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xE539A8", Offset = "0xE539A8", VA = "0xE539A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xE539C8", Offset = "0xE539C8", VA = "0xE539C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6024", Offset = "0xAE6024")]
	private sealed class <SpaceEndingSequence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManhattanNuke <>4__this;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <belowFX>5__2;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <elevator>5__3;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource <shakeAudio>5__4;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__5;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.EmissionModule <cloudsEmission>5__6;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material <fadeMaterial>5__7;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <colorId>5__8;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <toggleSaloon>5__9;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_BodyPhysics <bodyphysics>5__10;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_HeightAdjustTeleport <teleport>5__11;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600228A")]
			[Address(RVA = "0xE55E4C", Offset = "0xE55E4C", VA = "0xE55E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600228C")]
			[Address(RVA = "0xE55EB4", Offset = "0xE55EB4", VA = "0xE55EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xE53158", Offset = "0xE53158", VA = "0xE53158")]
		[DebuggerHidden]
		public <SpaceEndingSequence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xE54BA0", Offset = "0xE54BA0", VA = "0xE54BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xE54BA4", Offset = "0xE54BA4", VA = "0xE54BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xE55E54", Offset = "0xE55E54", VA = "0xE55E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6034", Offset = "0xAE6034")]
	private sealed class <ElevatorShaking>d__21 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float frequence;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float amount;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <elevator>5__2;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <origEulerRotation>5__3;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <gravity>5__4;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <shakeTime>5__5;

		[Token(Token = "0x1700024C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0xE54020", Offset = "0xE54020", VA = "0xE54020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0xE54088", Offset = "0xE54088", VA = "0xE54088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xE53210", Offset = "0xE53210", VA = "0xE53210")]
		[DebuggerHidden]
		public <ElevatorShaking>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xE53CE0", Offset = "0xE53CE0", VA = "0xE53CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xE53CE4", Offset = "0xE53CE4", VA = "0xE53CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xE54028", Offset = "0xE54028", VA = "0xE54028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6044", Offset = "0xAE6044")]
	private sealed class <ElevatorRocketSounds>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManhattanNuke <>4__this;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <elevator>5__2;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002296")]
			[Address(RVA = "0xE53C70", Offset = "0xE53C70", VA = "0xE53C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0xE53CD8", Offset = "0xE53CD8", VA = "0xE53CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xE532AC", Offset = "0xE532AC", VA = "0xE532AC")]
		[DebuggerHidden]
		public <ElevatorRocketSounds>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xE53A30", Offset = "0xE53A30", VA = "0xE53A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xE53A34", Offset = "0xE53A34", VA = "0xE53A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xE53C78", Offset = "0xE53C78", VA = "0xE53C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6054", Offset = "0xAE6054")]
	private sealed class <RotateElevator>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <elevator>5__3;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <axis>5__4;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xE549C0", Offset = "0xE549C0", VA = "0xE549C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229E")]
			[Address(RVA = "0xE54A28", Offset = "0xE54A28", VA = "0xE54A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xE53354", Offset = "0xE53354", VA = "0xE53354")]
		[DebuggerHidden]
		public <RotateElevator>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xE54824", Offset = "0xE54824", VA = "0xE54824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xE54828", Offset = "0xE54828", VA = "0xE54828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xE549C8", Offset = "0xE549C8", VA = "0xE549C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6064", Offset = "0xAE6064")]
	private sealed class <SaloonNukeCraterEndingSequence>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManhattanNuke <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xE54B30", Offset = "0xE54B30", VA = "0xE54B30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xE54B98", Offset = "0xE54B98", VA = "0xE54B98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xE53380", Offset = "0xE53380", VA = "0xE53380")]
		[DebuggerHidden]
		public <SaloonNukeCraterEndingSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xE54A30", Offset = "0xE54A30", VA = "0xE54A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xE54A34", Offset = "0xE54A34", VA = "0xE54A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xE54B38", Offset = "0xE54B38", VA = "0xE54B38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6074", Offset = "0xAE6074")]
	private sealed class <NukeExplosionEnding>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManhattanNuke <>4__this;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_HeadsetFade <headsetFade>5__2;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xE547B4", Offset = "0xE547B4", VA = "0xE547B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xE5481C", Offset = "0xE5481C", VA = "0xE5481C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xE533AC", Offset = "0xE533AC", VA = "0xE533AC")]
		[DebuggerHidden]
		public <NukeExplosionEnding>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xE540EC", Offset = "0xE540EC", VA = "0xE540EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xE540F0", Offset = "0xE540F0", VA = "0xE540F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xE547BC", Offset = "0xE547BC", VA = "0xE547BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManhattanNuke singleton;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private FracturedObject _fracturedObject;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip atomBombClip;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip specialDimensionDetonateClip;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioClip tickingClip;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LayerMask explosionLayers;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public int runWhenDropped;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _nukeInAnotherDimension;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool _detonaded;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool _specialEndingStarted;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private AudioSource _windAudio;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject giftWrap;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xE52548", Offset = "0xE52548", VA = "0xE52548")]
	public void SetNukeInAnotherDimension()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xE525BC", Offset = "0xE525BC", VA = "0xE525BC", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xE52648", Offset = "0xE52648", VA = "0xE52648")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xE526A0", Offset = "0xE526A0", VA = "0xE526A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE744", Offset = "0xAFE744")]
	public IEnumerator SpecialNukeTimer()
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xE5273C", Offset = "0xE5273C", VA = "0xE5273C", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xE52804", Offset = "0xE52804", VA = "0xE52804")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xE52F7C", Offset = "0xE52F7C", VA = "0xE52F7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE7A8", Offset = "0xAFE7A8")]
	private IEnumerator BlurSequence()
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xE52FDC", Offset = "0xE52FDC", VA = "0xE52FDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE80C", Offset = "0xAFE80C")]
	private IEnumerator SpaceEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xE53184", Offset = "0xE53184", VA = "0xE53184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE870", Offset = "0xAFE870")]
	private IEnumerator<float> ElevatorShaking(float duration, float frequence, float amount)
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE5323C", Offset = "0xE5323C", VA = "0xE5323C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE8D4", Offset = "0xAFE8D4")]
	private IEnumerator ElevatorRocketSounds()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE532D8", Offset = "0xE532D8", VA = "0xE532D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE938", Offset = "0xAFE938")]
	private IEnumerator RotateElevator(float duration, float speed)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE5304C", Offset = "0xE5304C", VA = "0xE5304C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFE99C", Offset = "0xAFE99C")]
	private IEnumerator SaloonNukeCraterEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE530BC", Offset = "0xE530BC", VA = "0xE530BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEA00", Offset = "0xAFEA00")]
	private IEnumerator NukeExplosionEnding()
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xE533D8", Offset = "0xE533D8", VA = "0xE533D8", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE53498", Offset = "0xE53498", VA = "0xE53498", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE53850", Offset = "0xE53850", VA = "0xE53850")]
	public void ResetPositionOnReturnTunnels()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE5399C", Offset = "0xE5399C", VA = "0xE5399C")]
	public ManhattanNuke()
	{
	}
}
[Token(Token = "0x20000EB")]
public class MicAudioOutput : MonoBehaviour
{
	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE5890C", Offset = "0xE5890C", VA = "0xE5890C")]
	public MicAudioOutput()
	{
	}
}
[Token(Token = "0x20000EC")]
public class MineBlock : MonoBehaviour
{
	[Token(Token = "0x2000522")]
	public enum RockType
	{
		[Token(Token = "0x4002754")]
		Clay,
		[Token(Token = "0x4002755")]
		Granite,
		[Token(Token = "0x4002756")]
		Limestone,
		[Token(Token = "0x4002757")]
		NonMineblock,
		[Token(Token = "0x4002758")]
		Obsidian,
		[Token(Token = "0x4002759")]
		Ghost,
		[Token(Token = "0x400275A")]
		Tutorial
	}

	[Token(Token = "0x2000523")]
	public delegate void MineBlockDestroy();

	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6084", Offset = "0xAE6084")]
	private sealed class <DisableSequence>d__65 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MineBlock <>4__this;

		[Token(Token = "0x17000256")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0xE5BCB0", Offset = "0xE5BCB0", VA = "0xE5BCB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xE5BD18", Offset = "0xE5BD18", VA = "0xE5BD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xE5ABD4", Offset = "0xE5ABD4", VA = "0xE5ABD4")]
		[DebuggerHidden]
		public <DisableSequence>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xE5B778", Offset = "0xE5B778", VA = "0xE5B778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xE5B77C", Offset = "0xE5B77C", VA = "0xE5B77C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xE5BCB8", Offset = "0xE5BCB8", VA = "0xE5BCB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6094", Offset = "0xAE6094")]
	private sealed class <DelayedLayerChange>d__66 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chunkGO;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <ct>5__3;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <stopTime>5__4;

		[Token(Token = "0x17000258")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xE5B018", Offset = "0xE5B018", VA = "0xE5B018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xE5B080", Offset = "0xE5B080", VA = "0xE5B080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xE5AC70", Offset = "0xE5AC70", VA = "0xE5AC70")]
		[DebuggerHidden]
		public <DelayedLayerChange>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xE5ADE4", Offset = "0xE5ADE4", VA = "0xE5ADE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xE5ADE8", Offset = "0xE5ADE8", VA = "0xE5ADE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xE5B020", Offset = "0xE5B020", VA = "0xE5B020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60A4", Offset = "0xAE60A4")]
	private sealed class <DelayedLayerChangeAllChunks>d__67 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MineBlock <>4__this;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Transform> <children>5__2;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__3;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <stopTime>5__4;

		[Token(Token = "0x1700025A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xE5B6AC", Offset = "0xE5B6AC", VA = "0xE5B6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0xE5B714", Offset = "0xE5B714", VA = "0xE5B714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xE5AD0C", Offset = "0xE5AD0C", VA = "0xE5AD0C")]
		[DebuggerHidden]
		public <DelayedLayerChangeAllChunks>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xE5B0E4", Offset = "0xE5B0E4", VA = "0xE5B0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xE5B0E8", Offset = "0xE5B0E8", VA = "0xE5B0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xE5B6B4", Offset = "0xE5B6B4", VA = "0xE5B6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RockType rockType;

	[Token(Token = "0x40007E7")]
	public const int DEFAULT_HEALTH = 35;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxHealth;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstChunk;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool secondChunk;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer renderer;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color color;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA5B0", Offset = "0xAEA5B0")]
	private int <Health>k__BackingField;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float blockSize;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA5C0", Offset = "0xAEA5C0")]
	private BlockWallGenerator <MyCreator>k__BackingField;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] blockVoxels;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool randomRotationX;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool randomRotationY;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool randomRotationZ;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool hasRelic;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA5D0", Offset = "0xAEA5D0")]
	private GameObject <MyOil>k__BackingField;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA5E0", Offset = "0xAEA5E0")]
	private Candle <MyCandle>k__BackingField;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem explosionParticle;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool delayedReset;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MineBlockDestroy mineBlockExplodes;

	[Token(Token = "0x40007FA")]
	protected const float _delayTime = 1f;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected CoroutineHandle _disableCoroutine;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected CoroutineHandle _delayedCoroutine;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected CoroutineHandle _delayedAllCoroutine;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _singleMesh;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool DisableRelics;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem oilExplosionPrefab;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] normalHitClips;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip[] strongHitClips;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip[] rockCrumbleClips;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip[] rockCrackClips;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected FracturedObject fracturedObject;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public CanvasGroup tutorialInfoCanvasGroup;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool hasExploded;

	[Token(Token = "0x17000033")]
	public int Health
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xE58914", Offset = "0xE58914", VA = "0xE58914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA64", Offset = "0xAFEA64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xE5891C", Offset = "0xE5891C", VA = "0xE5891C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA74", Offset = "0xAFEA74")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public BlockWallGenerator MyCreator
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xE58924", Offset = "0xE58924", VA = "0xE58924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA84", Offset = "0xAFEA84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xE5892C", Offset = "0xE5892C", VA = "0xE5892C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEA94", Offset = "0xAFEA94")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public GameObject MyOil
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xE58934", Offset = "0xE58934", VA = "0xE58934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAA4", Offset = "0xAFEAA4")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xE5893C", Offset = "0xE5893C", VA = "0xE5893C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAB4", Offset = "0xAFEAB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public Candle MyCandle
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xE5894C", Offset = "0xE5894C", VA = "0xE5894C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAD4", Offset = "0xAFEAD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xE58944", Offset = "0xE58944", VA = "0xE58944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEAC4", Offset = "0xAFEAC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public FracturedObject FracturedObject
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xE58954", Offset = "0xE58954", VA = "0xE58954")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xE589E8", Offset = "0xE589E8", VA = "0xE589E8")]
		set
		{
		}
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xE589F0", Offset = "0xE589F0", VA = "0xE589F0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xE58D20", Offset = "0xE58D20", VA = "0xE58D20")]
	public Vector3 GetRootVoxelPosition(Transform myTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xE58F08", Offset = "0xE58F08", VA = "0xE58F08")]
	public Vector3 GetRootVoxelOffset(Transform myTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xE59060", Offset = "0xE59060", VA = "0xE59060")]
	public void Init()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xE595D8", Offset = "0xE595D8", VA = "0xE595D8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xE59A10", Offset = "0xE59A10", VA = "0xE59A10", Slot = "4")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xE59A14", Offset = "0xE59A14", VA = "0xE59A14", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xE59AA8", Offset = "0xE59AA8", VA = "0xE59AA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xE59B70", Offset = "0xE59B70", VA = "0xE59B70")]
	public void SetMaxHealth(int newHealth)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xE59B7C", Offset = "0xE59B7C", VA = "0xE59B7C")]
	public FracturedChunk CheckIfHitChunk(Collider hitCollider)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xE59C38", Offset = "0xE59C38", VA = "0xE59C38", Slot = "6")]
	public virtual bool DamageAndCheckChunk(int damage, FracturedChunk chunk)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xE5A024", Offset = "0xE5A024", VA = "0xE5A024")]
	private void OilExplode()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xE5A2EC", Offset = "0xE5A2EC", VA = "0xE5A2EC", Slot = "7")]
	public virtual void Explode(bool instaHideChunks = false)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xE5A178", Offset = "0xE5A178", VA = "0xE5A178")]
	protected void DropCandle()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xE5AB64", Offset = "0xE5AB64", VA = "0xE5AB64", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEAE4", Offset = "0xAFEAE4")]
	protected virtual IEnumerator<float> DisableSequence()
	{
		return null;
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xE5AC00", Offset = "0xE5AC00", VA = "0xE5AC00", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEB48", Offset = "0xAFEB48")]
	protected virtual IEnumerator<float> DelayedLayerChange(GameObject chunkGO)
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xE5AC9C", Offset = "0xE5AC9C", VA = "0xE5AC9C", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEBAC", Offset = "0xAFEBAC")]
	protected virtual IEnumerator<float> DelayedLayerChangeAllChunks()
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xE5AD38", Offset = "0xE5AD38", VA = "0xE5AD38")]
	public MineBlock()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xE5ADAC", Offset = "0xE5ADAC", VA = "0xE5ADAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEC10", Offset = "0xAFEC10")]
	private float <DamageAndCheckChunk>b__61_0()
	{
		return default(float);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xE5ADC8", Offset = "0xE5ADC8", VA = "0xE5ADC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEC20", Offset = "0xAFEC20")]
	private void <DamageAndCheckChunk>b__61_1(float x)
	{
	}
}
[Token(Token = "0x20000ED")]
public class MiningHelmet : PlayerItem
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Transform player;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xE5CC94", Offset = "0xE5CC94", VA = "0xE5CC94", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE5CEF8", Offset = "0xE5CEF8", VA = "0xE5CEF8")]
	public MiningHelmet()
	{
	}
}
[Token(Token = "0x20000EE")]
public class MovementSlideControl : VRTK_SlideObjectControlAction
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private LayerMask interestingLayers;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private LayerMask sliderBlockerLayers;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int notWalkableLayer;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int walkableLayermask;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float walkRayLenght;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RaycastHit hitInfo;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 groundPoint;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 finalPlayAreaPosition;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool checkSphere;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool moveAllowed;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE5DAC4", Offset = "0xE5DAC4", VA = "0xE5DAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE5DB68", Offset = "0xE5DB68", VA = "0xE5DB68", Slot = "18")]
	protected override void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xE5E49C", Offset = "0xE5E49C", VA = "0xE5E49C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xE5E6F4", Offset = "0xE5E6F4", VA = "0xE5E6F4")]
	public MovementSlideControl()
	{
	}
}
[Token(Token = "0x20000EF")]
[SelectionBase]
public class Mushroom : VRTK_InteractableObject
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform playerHDM;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float checkFrequencyTimer;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip eatClip;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xE618F8", Offset = "0xE618F8", VA = "0xE618F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xE619AC", Offset = "0xE619AC", VA = "0xE619AC", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xE61D70", Offset = "0xE61D70", VA = "0xE61D70", Slot = "24")]
	public override void Ungrabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xE61E38", Offset = "0xE61E38", VA = "0xE61E38")]
	public Mushroom()
	{
	}
}
[Token(Token = "0x20000F0")]
public class NavMeshLniksRefresh : MonoBehaviour
{
	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE624A0", Offset = "0xE624A0", VA = "0xE624A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE62548", Offset = "0xE62548", VA = "0xE62548")]
	public NavMeshLniksRefresh()
	{
	}
}
[Token(Token = "0x20000F1")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xE62550", Offset = "0xE62550", VA = "0xE62550")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xE62554", Offset = "0xE62554", VA = "0xE62554")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xE62558", Offset = "0xE62558", VA = "0xE62558")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x20000F2")]
public class NonDLCHide : MonoBehaviour
{
	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xE62560", Offset = "0xE62560", VA = "0xE62560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xE625F8", Offset = "0xE625F8", VA = "0xE625F8")]
	public NonDLCHide()
	{
	}
}
[Token(Token = "0x20000F3")]
public class NonDLCReplaceMaterial : MonoBehaviour
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material nonDLCMaterial;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xE62600", Offset = "0xE62600", VA = "0xE62600")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xE626A0", Offset = "0xE626A0", VA = "0xE626A0")]
	public NonDLCReplaceMaterial()
	{
	}
}
[Token(Token = "0x20000F4")]
public class Nuke_Launcher : VRTK_InteractableObject
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Nuke_Launcher singleton;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool _exploded;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool nukePurchased;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public OnSale onSale;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform originalPositionHelper;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 _controllerStartUsePosition;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 _pushedHandlePosition;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Transform _cachedController;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE626A8", Offset = "0xE626A8", VA = "0xE626A8", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xE62704", Offset = "0xE62704", VA = "0xE62704")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xE62854", Offset = "0xE62854", VA = "0xE62854", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xE62988", Offset = "0xE62988", VA = "0xE62988", Slot = "22")]
	public override void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xE62A04", Offset = "0xE62A04", VA = "0xE62A04", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xE62A2C", Offset = "0xE62A2C", VA = "0xE62A2C", Slot = "28")]
	public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xE62708", Offset = "0xE62708", VA = "0xE62708")]
	private void ResetTransform()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xE62ABC", Offset = "0xE62ABC", VA = "0xE62ABC", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xE62E78", Offset = "0xE62E78", VA = "0xE62E78")]
	private void Pressed()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE62FD0", Offset = "0xE62FD0", VA = "0xE62FD0")]
	public Nuke_Launcher()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ObjectPool
{
	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60B4", Offset = "0xAE60B4")]
	private sealed class <ReturnSequenceCoroutine>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject instance;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectPool <>4__this;

		[Token(Token = "0x1700025C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0xE691EC", Offset = "0xE691EC", VA = "0xE691EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0xE69254", Offset = "0xE69254", VA = "0xE69254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xE68BB8", Offset = "0xE68BB8", VA = "0xE68BB8")]
		[DebuggerHidden]
		public <ReturnSequenceCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xE690B0", Offset = "0xE690B0", VA = "0xE690B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xE690B4", Offset = "0xE690B4", VA = "0xE690B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xE691F4", Offset = "0xE691F4", VA = "0xE691F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60C4", Offset = "0xAE60C4")]
	private sealed class <ReturnAfterTime>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectPool <>4__this;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject go;

		[Token(Token = "0x1700025E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xE68FE4", Offset = "0xE68FE4", VA = "0xE68FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xE6904C", Offset = "0xE6904C", VA = "0xE6904C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xE68E8C", Offset = "0xE68E8C", VA = "0xE68E8C")]
		[DebuggerHidden]
		public <ReturnAfterTime>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xE68F20", Offset = "0xE68F20", VA = "0xE68F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xE68F24", Offset = "0xE68F24", VA = "0xE68F24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xE68FEC", Offset = "0xE68FEC", VA = "0xE68FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject prefab;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> pool;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform poolParent;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xE5C6D4", Offset = "0xE5C6D4", VA = "0xE5C6D4")]
	public ObjectPool(GameObject prefab, int initialSize)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE684E0", Offset = "0xE684E0", VA = "0xE684E0")]
	public GameObject GetInstance()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xE687DC", Offset = "0xE687DC", VA = "0xE687DC")]
	public void ReturnInstance(GameObject instance)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xE68B3C", Offset = "0xE68B3C", VA = "0xE68B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEC30", Offset = "0xAFEC30")]
	private IEnumerator<float> ReturnSequenceCoroutine(GameObject instance)
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xE68BE4", Offset = "0xE68BE4", VA = "0xE68BE4", Slot = "4")]
	protected virtual GameObject AllocateInstance(bool skipPool = false)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xE689DC", Offset = "0xE689DC", VA = "0xE689DC")]
	private static void InitPoolParent()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xE68E00", Offset = "0xE68E00", VA = "0xE68E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEC94", Offset = "0xAFEC94")]
	public IEnumerator<float> ReturnAfterTime(float time, GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xE68EB8", Offset = "0xE68EB8", VA = "0xE68EB8")]
	public bool CheckIfInPool(GameObject instance)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F6")]
public class OculusQuestLoadingScreen : MonoBehaviour
{
	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60D4", Offset = "0xAE60D4")]
	private sealed class <QuitCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xE82980", Offset = "0xE82980", VA = "0xE82980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xE829E8", Offset = "0xE829E8", VA = "0xE829E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xE82720", Offset = "0xE82720", VA = "0xE82720")]
		[DebuggerHidden]
		public <QuitCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xE828E0", Offset = "0xE828E0", VA = "0xE828E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xE828E4", Offset = "0xE828E4", VA = "0xE828E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xE82988", Offset = "0xE82988", VA = "0xE82988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60E4", Offset = "0xAE60E4")]
	private sealed class <DelayedLoad>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusQuestLoadingScreen <>4__this;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xE82870", Offset = "0xE82870", VA = "0xE82870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xE828D8", Offset = "0xE828D8", VA = "0xE828D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xE8274C", Offset = "0xE8274C", VA = "0xE8274C")]
		[DebuggerHidden]
		public <DelayedLoad>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xE82788", Offset = "0xE82788", VA = "0xE82788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xE8278C", Offset = "0xE8278C", VA = "0xE8278C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xE82878", Offset = "0xE82878", VA = "0xE82878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int SceneIndex;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject errorMessage;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool loading;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncOperation loadOperation;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xE82580", Offset = "0xE82580", VA = "0xE82580")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xE82610", Offset = "0xE82610", VA = "0xE82610")]
	private void DoLoad()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xE826C0", Offset = "0xE826C0", VA = "0xE826C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFECF8", Offset = "0xAFECF8")]
	private IEnumerator QuitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xE82650", Offset = "0xE82650", VA = "0xE82650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFED5C", Offset = "0xAFED5C")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xE82778", Offset = "0xE82778", VA = "0xE82778")]
	public OculusQuestLoadingScreen()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Oil : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool scanned;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xE94270", Offset = "0xE94270", VA = "0xE94270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xE942D0", Offset = "0xE942D0", VA = "0xE942D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xE942D8", Offset = "0xE942D8", VA = "0xE942D8")]
	private void CheckVisibleForScanner()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xE9435C", Offset = "0xE9435C", VA = "0xE9435C")]
	public Oil()
	{
	}
}
[Token(Token = "0x20000F8")]
public class OilParticle : MonoBehaviour
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem part;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xE94364", Offset = "0xE94364", VA = "0xE94364")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xE943E4", Offset = "0xE943E4", VA = "0xE943E4")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xE946D4", Offset = "0xE946D4", VA = "0xE946D4")]
	private static void AddOilToBucket(GameObject other)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xE947EC", Offset = "0xE947EC", VA = "0xE947EC")]
	public OilParticle()
	{
	}
}
[Token(Token = "0x20000F9")]
public class OnSale : MonoBehaviour
{
	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int price;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA610", Offset = "0xAEA610")]
	private bool <Purchasable>k__BackingField;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool dlcOnly;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool noAndroid;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<GameObject> soldAction;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip purchaseClip;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float size;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 shopOffset;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRTK_InteractableObject _grabSript;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _shopKinematic;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject upgradePrefab;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] unlockedGeneralStorePrefabs;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool startSold;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool saveThisItem;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool isATool;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool destroyAfterBuy;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool generalStoreItem;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent purchaseEvent;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public GameObject oldItem;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string replaceOldItemName;

	[Token(Token = "0x17000038")]
	public bool Purchasable
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xE947F4", Offset = "0xE947F4", VA = "0xE947F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEDC0", Offset = "0xAFEDC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xE947FC", Offset = "0xE947FC", VA = "0xE947FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEDD0", Offset = "0xAFEDD0")]
		set
		{
		}
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xE94808", Offset = "0xE94808", VA = "0xE94808")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xE9487C", Offset = "0xE9487C", VA = "0xE9487C")]
	public void Sold(bool unfreeze = true)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xE94E2C", Offset = "0xE94E2C", VA = "0xE94E2C")]
	public void AddUpgradeItemsToStores()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xE950D4", Offset = "0xE950D4", VA = "0xE950D4")]
	public void SetSellable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xE950E0", Offset = "0xE950E0", VA = "0xE950E0")]
	public bool HasEnoughMoney()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xE95164", Offset = "0xE95164", VA = "0xE95164")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xE952A8", Offset = "0xE952A8", VA = "0xE952A8")]
	public void UnlockTrain()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xE9538C", Offset = "0xE9538C", VA = "0xE9538C")]
	public void UpgradeTrain(int level)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xE95480", Offset = "0xE95480", VA = "0xE95480")]
	public void UpgradeRadio(int level)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xE955B0", Offset = "0xE955B0", VA = "0xE955B0")]
	public void FixTracks()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xE956AC", Offset = "0xE956AC", VA = "0xE956AC")]
	public void BuyGasMask()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xE957B0", Offset = "0xE957B0", VA = "0xE957B0")]
	public void BuyLevitation()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xE958D8", Offset = "0xE958D8", VA = "0xE958D8")]
	public void BuyLaser()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xE95A00", Offset = "0xE95A00", VA = "0xE95A00")]
	public void BuyHorn()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xE95B1C", Offset = "0xE95B1C", VA = "0xE95B1C")]
	public void BuySpaceship()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xE95B88", Offset = "0xE95B88", VA = "0xE95B88")]
	public OnSale()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PS4_disabler : MonoBehaviour
{
	[Token(Token = "0x6000700")]
	[Address(RVA = "0xE95DD8", Offset = "0xE95DD8", VA = "0xE95DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xE95DDC", Offset = "0xE95DDC", VA = "0xE95DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xE95DE0", Offset = "0xE95DE0", VA = "0xE95DE0")]
	public PS4_disabler()
	{
	}
}
[Token(Token = "0x20000FB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1B40", Offset = "0xAE1B40")]
public class ParticleReturnToPool : MonoBehaviour
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectPool myPool;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xE95DE8", Offset = "0xE95DE8", VA = "0xE95DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xE95E60", Offset = "0xE95E60", VA = "0xE95E60")]
	private void CheckParticleSystem()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xE95F8C", Offset = "0xE95F8C", VA = "0xE95F8C")]
	public ParticleReturnToPool()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ParticleSystemCullingGroup : MonoBehaviour
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParticleSystemCullingGroup singleton;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _sphereGameobjects;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _groupChanged;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xE95F94", Offset = "0xE95F94", VA = "0xE95F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xE9618C", Offset = "0xE9618C", VA = "0xE9618C")]
	public void AddCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xE9630C", Offset = "0xE9630C", VA = "0xE9630C")]
	public void RemoveCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xE963E8", Offset = "0xE963E8", VA = "0xE963E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xE965CC", Offset = "0xE965CC", VA = "0xE965CC")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xE9677C", Offset = "0xE9677C", VA = "0xE9677C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xE96798", Offset = "0xE96798", VA = "0xE96798")]
	public ParticleSystemCullingGroup()
	{
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xAE1BA4", Offset = "0xAE1BA4")]
public class PersistentData : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE60F4", Offset = "0xAE60F4")]
	private sealed class <TimedSaveCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersistentData <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0xF306F8", Offset = "0xF306F8", VA = "0xF306F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xF30760", Offset = "0xF30760", VA = "0xF30760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xF304F0", Offset = "0xF304F0", VA = "0xF304F0")]
		[DebuggerHidden]
		public <TimedSaveCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF3058C", Offset = "0xF3058C", VA = "0xF3058C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xF30590", Offset = "0xF30590", VA = "0xF30590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xF30700", Offset = "0xF30700", VA = "0xF30700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PersistentData singleton;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ProgressData progressData;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastSaveTime;

	[Token(Token = "0x400084A")]
	private const float SAVE_COOLDOWN = 2f;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityObjectReferences unityObjectReferencesScriptableObject;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<UnityEngine.Object> unityObjectReferences;

	[Token(Token = "0x17000039")]
	public static UnityObjectReferences GetObjectReferencesScriptableObject
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0xF2D2AC", Offset = "0xF2D2AC", VA = "0xF2D2AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xF2D3A8", Offset = "0xF2D3A8", VA = "0xF2D3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xF2EE60", Offset = "0xF2EE60", VA = "0xF2EE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xF2EF74", Offset = "0xF2EF74", VA = "0xF2EF74")]
	public void ResetSave(bool skipTutorial = false)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xF2F334", Offset = "0xF2F334", VA = "0xF2F334")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xF2F438", Offset = "0xF2F438", VA = "0xF2F438")]
	private void OnApplicationPause(bool hasFocus)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xF2F104", Offset = "0xF2F104", VA = "0xF2F104")]
	public void SaveProgress(bool saveTime = true)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xF2F534", Offset = "0xF2F534", VA = "0xF2F534")]
	public static float GetTotalRunTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF2F5A4", Offset = "0xF2F5A4", VA = "0xF2F5A4")]
	public static void ToolAcquired(GameObject tool)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xF2F928", Offset = "0xF2F928", VA = "0xF2F928")]
	public static void ToolRemove(string toolName)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xF2FB4C", Offset = "0xF2FB4C", VA = "0xF2FB4C")]
	public static void KeyAcquired(GameObject key)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xF2FD7C", Offset = "0xF2FD7C", VA = "0xF2FD7C")]
	public static void UpdateMoney(int money)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xF2FDDC", Offset = "0xF2FDDC", VA = "0xF2FDDC")]
	public static void UpdateRunNumber(int run)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xF2FE3C", Offset = "0xF2FE3C", VA = "0xF2FE3C")]
	public static void UpdateChaosGemNumber(int numba)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xF2FEA8", Offset = "0xF2FEA8", VA = "0xF2FEA8")]
	public static void BoughtNewItem(string itemName)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xF2F7D4", Offset = "0xF2F7D4", VA = "0xF2F7D4")]
	public static string TrimClone(string name)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xF2FFA4", Offset = "0xF2FFA4", VA = "0xF2FFA4")]
	public GameObject SpawnFromList(string name, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xF301F4", Offset = "0xF301F4", VA = "0xF301F4")]
	public GameObject CopyFromList(string name)
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xF3037C", Offset = "0xF3037C", VA = "0xF3037C")]
	public bool ContainedInUnityObjectReferences(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xF2DC68", Offset = "0xF2DC68", VA = "0xF2DC68")]
	public void RandomizeChompy()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xF2D898", Offset = "0xF2D898", VA = "0xF2D898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEDE0", Offset = "0xAFEDE0")]
	private IEnumerator TimedSaveCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xF3051C", Offset = "0xF3051C", VA = "0xF3051C")]
	public PersistentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FE")]
public class ProgressData
{
	[Serializable]
	[Token(Token = "0x200052C")]
	public class Endings
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool nuke;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool nukeSpace;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool nukeCrater;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool nukeDimension;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool vault;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool vrgoggles;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool gauntlet;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool halloween;

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xF3FF88", Offset = "0xF3FF88", VA = "0xF3FF88")]
		public Endings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200052D")]
	public class UpgradeStages
	{
		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int saloon;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int bank;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sheriff;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int generalStore;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int post;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int well;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int radio;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int engine;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int deserttree;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int cacti;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool flight;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool trackFix;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool horn;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool gasmask;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool levitation;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool laser;

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xF3D324", Offset = "0xF3D324", VA = "0xF3D324")]
		public UpgradeStages()
		{
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int money;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> tools;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> keys;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool chaosGauntletPurchased;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int chaosGemsFound;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool skipIntroTutorial;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int currentRunNumber;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> itemsInShop;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> itemsInGeneralStore;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int explosiveStage;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string applicationVersion;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> boughtItems;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float runTotalLenght;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool miningHelmetPurchased;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Endings endings;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool trainLeverBought;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool trainHornBought;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int caveWaypointsUnlocked;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UpgradeStages upgradeStages;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isChompyActivated;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int mailboxHint;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool vaultDoorBroken;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<string> speeches;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float channel2Time;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<string> achievements;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float trainDistanceTraveled;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<string> chompyFavourites;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<string> chompyHates;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool amuletFound;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<string> foundLoot;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<int> annunakiStatueMoney;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool annunakiEndingFinished;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xF2D908", Offset = "0xF2D908", VA = "0xF2D908")]
	public ProgressData()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xF2F08C", Offset = "0xF2F08C", VA = "0xF2F08C")]
	public static ProgressData ResetExceptEnding(ProgressData old)
	{
		return null;
	}
}
[Token(Token = "0x20000FF")]
public class PianoPlayer : MonoBehaviour
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audioSource;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xF30768", Offset = "0xF30768", VA = "0xF30768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xF307C0", Offset = "0xF307C0", VA = "0xF307C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xF307C4", Offset = "0xF307C4", VA = "0xF307C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF30818", Offset = "0xF30818", VA = "0xF30818")]
	public PianoPlayer()
	{
	}
}
[Token(Token = "0x2000100")]
public class PickaxeCollision : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask rockLayer;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask lootLayer;

	[Token(Token = "0x4000870")]
	private const float cooldownBetweenHits = 0.06f;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delayTimer;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pickSpeed;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float handSpeed;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 previousPickPosition;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handTransform;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 previousHandPosition;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerItem playerItemScript;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitDecalPrefab;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObjectPool _hitDecalPool;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] woodHitClips;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] metalHitClips;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip swingClip;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float nextSwingClip;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip lootHitClink;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTimeOutsideBlock;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform elevatorTransform;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minPickSpeed;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float minHandSpeed;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF30820", Offset = "0xF30820", VA = "0xF30820")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF308AC", Offset = "0xF308AC", VA = "0xF308AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF31510", Offset = "0xF31510", VA = "0xF31510")]
	private void Update()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF31548", Offset = "0xF31548", VA = "0xF31548")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF3198C", Offset = "0xF3198C", VA = "0xF3198C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF31A18", Offset = "0xF31A18", VA = "0xF31A18")]
	public PickaxeCollision()
	{
	}
}
[Token(Token = "0x2000101")]
public class PineAmulet : PlayerItem
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool isSavedAmulet;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF31A38", Offset = "0xF31A38", VA = "0xF31A38", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF31CA8", Offset = "0xF31CA8", VA = "0xF31CA8", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xF31FF8", Offset = "0xF31FF8", VA = "0xF31FF8")]
	public PineAmulet()
	{
	}
}
[Token(Token = "0x2000102")]
public class PitstopTrigger : MonoBehaviour
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform chestSpawnPos;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject triggeringObject;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA660", Offset = "0xAEA660")]
	public UnityEvent enterEvent;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xF33A28", Offset = "0xF33A28", VA = "0xF33A28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xF33B2C", Offset = "0xF33B2C", VA = "0xF33B2C")]
	public PitstopTrigger()
	{
	}
}
[Token(Token = "0x2000103")]
[ExecuteInEditMode]
internal class PlatformMaterialReplacer : MonoBehaviour
{
	[Token(Token = "0x6000734")]
	[Address(RVA = "0xF33B34", Offset = "0xF33B34", VA = "0xF33B34")]
	public PlatformMaterialReplacer()
	{
	}
}
[Token(Token = "0x2000104")]
[SelectionBase]
public class PlayerItem : VRTK_InteractableObject
{
	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6104", Offset = "0xAE6104")]
	private sealed class <ViveButtonCheckSequence>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerItem <>4__this;

		[Token(Token = "0x17000266")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xF353E8", Offset = "0xF353E8", VA = "0xF353E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0xF35450", Offset = "0xF35450", VA = "0xF35450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xF341C8", Offset = "0xF341C8", VA = "0xF341C8")]
		[DebuggerHidden]
		public <ViveButtonCheckSequence>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xF35034", Offset = "0xF35034", VA = "0xF35034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xF35038", Offset = "0xF35038", VA = "0xF35038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xF353F0", Offset = "0xF353F0", VA = "0xF353F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6114", Offset = "0xAE6114")]
	private sealed class <DelayedNullParent>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerItem <>4__this;

		[Token(Token = "0x17000268")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xF34F68", Offset = "0xF34F68", VA = "0xF34F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xF34FD0", Offset = "0xF34FD0", VA = "0xF34FD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xF34264", Offset = "0xF34264", VA = "0xF34264")]
		[DebuggerHidden]
		public <DelayedNullParent>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xF34E78", Offset = "0xF34E78", VA = "0xF34E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xF34E7C", Offset = "0xF34E7C", VA = "0xF34E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xF34F70", Offset = "0xF34F70", VA = "0xF34F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA698", Offset = "0xAEA698")]
	private VRTK_ControllerReference <ControllerReference>k__BackingField;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected OnSale _onSale;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform hangPosition;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool _activatedTutorial;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ToolTutorialHelper[] _tutorialHelper;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected Rigidbody[] _childRigidbodies;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool detectColliderGlitch;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<Vector3> _originalColliderLocalPositions;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<Vector3> _originalColliderLocalRotations;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool _hasCheckedParent;

	[Token(Token = "0x1700003A")]
	public VRTK_ControllerReference ControllerReference
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0xF33B44", Offset = "0xF33B44", VA = "0xF33B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEE44", Offset = "0xAFEE44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000736")]
		[Address(RVA = "0xF33B4C", Offset = "0xF33B4C", VA = "0xF33B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFEE54", Offset = "0xAFEE54")]
		private set
		{
		}
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xF31AF8", Offset = "0xF31AF8", VA = "0xF31AF8", Slot = "87")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xF33CF0", Offset = "0xF33CF0", VA = "0xF33CF0", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xF33E68", Offset = "0xF33E68", VA = "0xF33E68", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xF34158", Offset = "0xF34158", VA = "0xF34158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEE64", Offset = "0xAFEE64")]
	private IEnumerator<float> ViveButtonCheckSequence()
	{
		return null;
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xF341F4", Offset = "0xF341F4", VA = "0xF341F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEEC8", Offset = "0xAFEEC8")]
	private IEnumerator<float> DelayedNullParent()
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xF34290", Offset = "0xF34290", VA = "0xF34290", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xF34898", Offset = "0xF34898", VA = "0xF34898", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xF349B0", Offset = "0xF349B0", VA = "0xF349B0", Slot = "14")]
	public override bool IsTouched()
	{
		return default(bool);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xF33B54", Offset = "0xF33B54", VA = "0xF33B54")]
	private void ActivateTutorials()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xF349E0", Offset = "0xF349E0", VA = "0xF349E0", Slot = "18")]
	public override void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xF34A18", Offset = "0xF34A18", VA = "0xF34A18", Slot = "20")]
	public override void StopTouching([Optional] VRTK_InteractTouch currentTouchingObject)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xF33D88", Offset = "0xF33D88", VA = "0xF33D88")]
	private void CheckIfCanBeBought()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xF31D68", Offset = "0xF31D68", VA = "0xF31D68", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xF34B90", Offset = "0xF34B90", VA = "0xF34B90", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xF34CF4", Offset = "0xF34CF4", VA = "0xF34CF4", Slot = "32")]
	public override void ZeroVelocity()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xF34DE4", Offset = "0xF34DE4", VA = "0xF34DE4")]
	public bool IsOnSale()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xF32000", Offset = "0xF32000", VA = "0xF32000")]
	public PlayerItem()
	{
	}
}
[Token(Token = "0x2000105")]
public class PositionFixer : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool active;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float range;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerHDM;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform playArea;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xF3F51C", Offset = "0xF3F51C", VA = "0xF3F51C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xF3F5D8", Offset = "0xF3F5D8", VA = "0xF3F5D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xF3F650", Offset = "0xF3F650", VA = "0xF3F650")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xF3F6C8", Offset = "0xF3F6C8", VA = "0xF3F6C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xF3FCFC", Offset = "0xF3FCFC", VA = "0xF3FCFC")]
	public PositionFixer()
	{
	}
}
[Token(Token = "0x2000106")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE1BD8", Offset = "0xAE1BD8")]
public class PrefabLibraryScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xF3FF80", Offset = "0xF3FF80", VA = "0xF3FF80")]
	public PrefabLibraryScriptableObject()
	{
	}
}
[Token(Token = "0x2000107")]
public class PumpkinLoot : GrabbableItem
{
	[Token(Token = "0x600074F")]
	[Address(RVA = "0xE25FA8", Offset = "0xE25FA8", VA = "0xE25FA8", Slot = "88")]
	public override void FreedFromChunk(Transform chunk)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xE264A4", Offset = "0xE264A4", VA = "0xE264A4")]
	public PumpkinLoot()
	{
	}
}
[Token(Token = "0x2000108")]
public class PumpkinSpike : MonoBehaviour
{
	[Token(Token = "0x6000751")]
	[Address(RVA = "0xE2650C", Offset = "0xE2650C", VA = "0xE2650C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xE26640", Offset = "0xE26640", VA = "0xE26640")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xE26774", Offset = "0xE26774", VA = "0xE26774")]
	public PumpkinSpike()
	{
	}
}
[Token(Token = "0x2000109")]
[ExecuteInEditMode]
public class QuickGlow : MonoBehaviour
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material BlurMaterial;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material AddMaterial;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEA6A8", Offset = "0xAEA6A8")]
	public int Iterations;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEA6C0", Offset = "0xAEA6C0")]
	public int DownRes;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xE26B8C", Offset = "0xE26B8C", VA = "0xE26B8C")]
	public QuickGlow()
	{
	}
}
[Token(Token = "0x200010A")]
[SelectionBase]
public class Radio : MineBlock
{
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6124", Offset = "0xAE6124")]
	private sealed class <DisableSequence>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Radio <>4__this;

		[Token(Token = "0x1700026A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xE27664", Offset = "0xE27664", VA = "0xE27664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xE276CC", Offset = "0xE276CC", VA = "0xE276CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xE27344", Offset = "0xE27344", VA = "0xE27344")]
		[DebuggerHidden]
		public <DisableSequence>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xE274AC", Offset = "0xE274AC", VA = "0xE274AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xE274B0", Offset = "0xE274B0", VA = "0xE274B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xE2766C", Offset = "0xE2766C", VA = "0xE2766C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Radio singleton;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject electronics;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject keyPrefab;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _broken;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody[] _electronicsRigidbodies;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3[] _electronicsLocalPosition;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform _originalParent;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 _originalPosition;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xE26B94", Offset = "0xE26B94", VA = "0xE26B94", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xE26D3C", Offset = "0xE26D3C", VA = "0xE26D3C")]
	public void ResetSaloonRadio()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xE26FC0", Offset = "0xE26FC0", VA = "0xE26FC0", Slot = "7")]
	public override void Explode(bool instaHide = false)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xE272D4", Offset = "0xE272D4", VA = "0xE272D4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEF2C", Offset = "0xAFEF2C")]
	protected override IEnumerator<float> DisableSequence()
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xE27370", Offset = "0xE27370", VA = "0xE27370", Slot = "4")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xE27444", Offset = "0xE27444", VA = "0xE27444")]
	public Radio()
	{
	}
}
[Token(Token = "0x200010B")]
public class RadioAudioPositioner : MonoBehaviour
{
	[Token(Token = "0x600075B")]
	[Address(RVA = "0xE27730", Offset = "0xE27730", VA = "0xE27730")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xE27828", Offset = "0xE27828", VA = "0xE27828")]
	public RadioAudioPositioner()
	{
	}
}
[Token(Token = "0x200010C")]
public class RadioAudioReceiver : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource announcerLayer;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicLayer;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource noiseLayer;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xE27830", Offset = "0xE27830", VA = "0xE27830")]
	public RadioAudioReceiver()
	{
	}
}
[Token(Token = "0x200010D")]
[ExecuteInEditMode]
public class RelicHotSpot : MonoBehaviour
{
	[Token(Token = "0x2000531")]
	public struct HotSpot
	{
		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform hotspotTransform;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HotSpot[] neighbours;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float health;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xE2A1F8", Offset = "0xE2A1F8", VA = "0xE2A1F8")]
		public HotSpot(Transform t)
		{
		}
	}

	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6134", Offset = "0xAE6134")]
	private sealed class <DelayedHotSpotSpawn>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RelicHotSpot <>4__this;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <hSpotAmount>5__2;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <vSpotAmount>5__3;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <offset>5__4;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__5;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <pos>5__6;

		[Token(Token = "0x1700026C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xE2C930", Offset = "0xE2C930", VA = "0xE2C930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xE2C998", Offset = "0xE2C998", VA = "0xE2C998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xE2A0B0", Offset = "0xE2A0B0", VA = "0xE2A0B0")]
		[DebuggerHidden]
		public <DelayedHotSpotSpawn>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xE2BF3C", Offset = "0xE2BF3C", VA = "0xE2BF3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xE2BF40", Offset = "0xE2BF40", VA = "0xE2BF40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xE2C938", Offset = "0xE2C938", VA = "0xE2C938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int spotCount;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FracturedObject[] connectedFracturedObjects;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabbableItem myRelic;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] corners;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hotspotDensity;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hotSpotPrefab;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Transform> bottomRow;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Transform> topRow;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Transform> leftColumn;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> rightColumn;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<int, HotSpot> hotspots;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector3> particleSpots;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float nextParticleEmit;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int hotSpotsVisible;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Renderer> myRenderers;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LayerMask rockLayer;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _previousValidHit;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Transform> toPool;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectPool _spotPool;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Renderer> _spotRendererDictionary;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xE2973C", Offset = "0xE2973C", VA = "0xE2973C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xE29980", Offset = "0xE29980", VA = "0xE29980")]
	private void InitStuff()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xE29B20", Offset = "0xE29B20", VA = "0xE29B20")]
	private void ClearLists()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xE29C04", Offset = "0xE29C04", VA = "0xE29C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xE29DE4", Offset = "0xE29DE4", VA = "0xE29DE4")]
	public void HotSpotGenerator()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xE2A040", Offset = "0xE2A040", VA = "0xE2A040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEF90", Offset = "0xAFEF90")]
	private IEnumerator<float> DelayedHotSpotSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xE2A0DC", Offset = "0xE2A0DC", VA = "0xE2A0DC")]
	private Transform CreateHotspot(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xE2A208", Offset = "0xE2A208", VA = "0xE2A208")]
	private bool GetSpotPosition(float offset, out RaycastHit hit, float spotT, out Vector3 pos, Vector3 pos1, Vector3 pos2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xE2A728", Offset = "0xE2A728", VA = "0xE2A728")]
	private void AddNeighbours(ref List<Transform> hotspotList, ref List<Transform> leftNeighbour, ref List<Transform> rightNeighbour, bool addCorners)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xE2B60C", Offset = "0xE2B60C", VA = "0xE2B60C")]
	public void HotspotTriggered(Transform hotspot)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xE2B958", Offset = "0xE2B958", VA = "0xE2B958")]
	private void SawingCompleted()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xE2BE90", Offset = "0xE2BE90", VA = "0xE2BE90")]
	public RelicHotSpot()
	{
	}
}
[Token(Token = "0x200010E")]
[ExecuteInEditMode]
public class ReplacementShaderEffect : MonoBehaviour
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader ReplacementShader;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color OverDrawColor;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xE2CCC8", Offset = "0xE2CCC8", VA = "0xE2CCC8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xE2CD20", Offset = "0xE2CD20", VA = "0xE2CD20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xE2CDD4", Offset = "0xE2CDD4", VA = "0xE2CDD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xE2CE34", Offset = "0xE2CE34", VA = "0xE2CE34")]
	public ReplacementShaderEffect()
	{
	}
}
[Token(Token = "0x200010F")]
public class ResetMachine : MonoBehaviour
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ResetMachine singleton;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textMesh;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] _childRenderers;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _pressedState;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xE2CE3C", Offset = "0xE2CE3C", VA = "0xE2CE3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xE2CEA8", Offset = "0xE2CEA8", VA = "0xE2CEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xE2CF54", Offset = "0xE2CF54", VA = "0xE2CF54")]
	public void ToggleEnabled(bool value)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xE2D06C", Offset = "0xE2D06C", VA = "0xE2D06C")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xE2D07C", Offset = "0xE2D07C", VA = "0xE2D07C")]
	private void StateReactions()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xE2D23C", Offset = "0xE2D23C", VA = "0xE2D23C")]
	public ResetMachine()
	{
	}
}
[Token(Token = "0x2000110")]
public class ResetMachineButton : VRTK_InteractableObject
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ResetMachine machineScript;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip buttonPressClip;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float _hoverTime;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool _starterPressing;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _nextAllowedUseTime;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xE2D244", Offset = "0xE2D244", VA = "0xE2D244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xE2D2D0", Offset = "0xE2D2D0", VA = "0xE2D2D0", Slot = "18")]
	public override void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xE2D2FC", Offset = "0xE2D2FC", VA = "0xE2D2FC", Slot = "20")]
	public override void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xE2D328", Offset = "0xE2D328", VA = "0xE2D328", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xE2D3B8", Offset = "0xE2D3B8", VA = "0xE2D3B8", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xE2D5B4", Offset = "0xE2D5B4", VA = "0xE2D5B4")]
	public ResetMachineButton()
	{
	}
}
[Token(Token = "0x2000111")]
public class ReturnToPoolOnX : MonoBehaviour
{
	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onDestroy;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectPool myPool;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xE2D5BC", Offset = "0xE2D5BC", VA = "0xE2D5BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xE2D604", Offset = "0xE2D604", VA = "0xE2D604")]
	public ReturnToPoolOnX()
	{
	}
}
[Token(Token = "0x2000112")]
public class RigidbodyCullingGroup : MonoBehaviour
{
	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6144", Offset = "0xAE6144")]
	private sealed class <ForceProcessAllCoroutine>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RigidbodyCullingGroup <>4__this;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] <resultIndices>5__2;

		[Token(Token = "0x1700026E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xE2E604", Offset = "0xE2E604", VA = "0xE2E604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0xE2E66C", Offset = "0xE2E66C", VA = "0xE2E66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xE2E010", Offset = "0xE2E010", VA = "0xE2E010")]
		[DebuggerHidden]
		public <ForceProcessAllCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xE2E1C8", Offset = "0xE2E1C8", VA = "0xE2E1C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xE2E1CC", Offset = "0xE2E1CC", VA = "0xE2E1CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xE2E60C", Offset = "0xE2E60C", VA = "0xE2E60C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RigidbodyCullingGroup singleton;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _sphereGameobjects;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _cullingCooldown;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _groupChanged;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xE2D614", Offset = "0xE2D614", VA = "0xE2D614")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xE2D778", Offset = "0xE2D778", VA = "0xE2D778")]
	private void Start()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xE2D854", Offset = "0xE2D854", VA = "0xE2D854")]
	public void AddCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xE2D9E8", Offset = "0xE2D9E8", VA = "0xE2D9E8")]
	public void ChangeBoundingDistance()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xE2DAEC", Offset = "0xE2DAEC", VA = "0xE2DAEC")]
	public void RemoveCullingSphere(GameObject obj)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xE2DBC8", Offset = "0xE2DBC8", VA = "0xE2DBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xE2DCF4", Offset = "0xE2DCF4", VA = "0xE2DCF4")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xE2DF28", Offset = "0xE2DF28", VA = "0xE2DF28")]
	public void ForceProcessAll()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xE2DFA0", Offset = "0xE2DFA0", VA = "0xE2DFA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFEFF4", Offset = "0xAFEFF4")]
	private IEnumerator<float> ForceProcessAllCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xE2E03C", Offset = "0xE2E03C", VA = "0xE2E03C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xE2E128", Offset = "0xE2E128", VA = "0xE2E128")]
	public RigidbodyCullingGroup()
	{
	}
}
[Token(Token = "0x2000113")]
public class RotateTowardsPlayer : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _cameraTransform;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xE2E850", Offset = "0xE2E850", VA = "0xE2E850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xE2EAD4", Offset = "0xE2EAD4", VA = "0xE2EAD4")]
	public RotateTowardsPlayer()
	{
	}
}
[Token(Token = "0x2000114")]
public class SaloonShopHider : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] outsideRenderers;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] saloonRenderers;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Terrain townTerrain;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool saloonDisabled;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool outsideDisabled;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool farFromSaloon;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool shopIsInSight;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider objCollider;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Plane[] planes;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float nextCheckTime;

	[Token(Token = "0x40008DB")]
	private const float checkPeriod = 0.5f;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xE2F960", Offset = "0xE2F960", VA = "0xE2F960")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xE2F9D8", Offset = "0xE2F9D8", VA = "0xE2F9D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xE2FA50", Offset = "0xE2FA50", VA = "0xE2FA50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xE2FAB4", Offset = "0xE2FAB4", VA = "0xE2FAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xE2FE64", Offset = "0xE2FE64", VA = "0xE2FE64")]
	public void ToggleSaloon(bool value)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xE2FDA8", Offset = "0xE2FDA8", VA = "0xE2FDA8")]
	public void ToggleOutside(bool value)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xE2FEFC", Offset = "0xE2FEFC", VA = "0xE2FEFC")]
	public SaloonShopHider()
	{
	}
}
[Token(Token = "0x2000115")]
public class SaveIconHelper : MonoBehaviour
{
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6154", Offset = "0xAE6154")]
	private sealed class <FlashCoroutine>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveIconHelper <>4__this;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x17000270")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0xE306FC", Offset = "0xE306FC", VA = "0xE306FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002305")]
			[Address(RVA = "0xE30764", Offset = "0xE30764", VA = "0xE30764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xE305C4", Offset = "0xE305C4", VA = "0xE305C4")]
		[DebuggerHidden]
		public <FlashCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xE305F8", Offset = "0xE305F8", VA = "0xE305F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xE305FC", Offset = "0xE305FC", VA = "0xE305FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xE30704", Offset = "0xE30704", VA = "0xE30704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveIconHelper singleton;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer _sprite;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle _myCoroutine;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _originalLocaLPos;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _originalLocaLRot;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xE3033C", Offset = "0xE3033C", VA = "0xE3033C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xE303FC", Offset = "0xE303FC", VA = "0xE303FC")]
	public void Flash()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xE30554", Offset = "0xE30554", VA = "0xE30554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF058", Offset = "0xAFF058")]
	private IEnumerator<float> FlashCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xE305F0", Offset = "0xE305F0", VA = "0xE305F0")]
	public SaveIconHelper()
	{
	}
}
[Token(Token = "0x2000116")]
public class SawItem : PlayerItem
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject lights;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool _purchased;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool specialActivated;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xE30F94", Offset = "0xE30F94", VA = "0xE30F94", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xE30FD0", Offset = "0xE30FD0", VA = "0xE30FD0", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xE310DC", Offset = "0xE310DC", VA = "0xE310DC", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xE31114", Offset = "0xE31114", VA = "0xE31114", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xE31150", Offset = "0xE31150", VA = "0xE31150")]
	public SawItem()
	{
	}
}
[Token(Token = "0x2000117")]
public class ScannerItem : PlayerItem
{
	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioClip scannerOn;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip scannerOff;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip scannerLoop;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private AudioSource audioSource;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject scannerScreen;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SelfieCamera selfieCamera;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject scannerCameras;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject scannerSelfieParticle;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material blackMaterial;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Material renderMaterial;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Renderer _screenRenderer;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScannerItem ActiveScanner;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool beingGrabbed;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Camera[] _cameras;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject TreasureHunt;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xE3115C", Offset = "0xE3115C", VA = "0xE3115C", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xE312E4", Offset = "0xE312E4", VA = "0xE312E4", Slot = "54")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xE31364", Offset = "0xE31364", VA = "0xE31364", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xE314DC", Offset = "0xE314DC", VA = "0xE314DC", Slot = "24")]
	public override void Ungrabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xE311EC", Offset = "0xE311EC", VA = "0xE311EC")]
	private void ToggleCameras(bool v)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE31780", Offset = "0xE31780", VA = "0xE31780", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE31788", Offset = "0xE31788", VA = "0xE31788", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE31620", Offset = "0xE31620", VA = "0xE31620")]
	private void ToggleSelfieCamera(bool change)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE317B4", Offset = "0xE317B4", VA = "0xE317B4")]
	public ScannerItem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
public class SelfieCamera
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool hasSelfieCamera;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool cameraEnabled;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject selfieCamera;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE33158", Offset = "0xE33158", VA = "0xE33158")]
	public SelfieCamera()
	{
	}
}
[Token(Token = "0x2000119")]
public class ScannerScreen : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _generated;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE317BC", Offset = "0xE317BC", VA = "0xE317BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE31848", Offset = "0xE31848", VA = "0xE31848")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE31AF8", Offset = "0xE31AF8", VA = "0xE31AF8")]
	public ScannerScreen()
	{
	}
}
[Token(Token = "0x200011A")]
public class SecretVaultBreakableDoor : MonoBehaviour
{
	[Token(Token = "0x2000535")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6164", Offset = "0xAE6164")]
	private sealed class <SpawnLoots>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecretVaultBreakableDoor <>4__this;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0xE32BCC", Offset = "0xE32BCC", VA = "0xE32BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600230B")]
			[Address(RVA = "0xE32C34", Offset = "0xE32C34", VA = "0xE32C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xE32678", Offset = "0xE32678", VA = "0xE32678")]
		[DebuggerHidden]
		public <SpawnLoots>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xE32888", Offset = "0xE32888", VA = "0xE32888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xE3288C", Offset = "0xE3288C", VA = "0xE3288C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xE32BD4", Offset = "0xE32BD4", VA = "0xE32BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int health;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] hitClips;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip explodeClip;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip meltClip;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] afterDestroyShow;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] afterDestroyHide;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] lootPrefabs;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] lootPositions;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lootToSpawn;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE32400", Offset = "0xE32400", VA = "0xE32400")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE32408", Offset = "0xE32408", VA = "0xE32408")]
	public void Break(bool value)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE32608", Offset = "0xE32608", VA = "0xE32608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF0BC", Offset = "0xAFF0BC")]
	public IEnumerator SpawnLoots()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xE326A4", Offset = "0xE326A4", VA = "0xE326A4")]
	public void TakeDamage(int damage)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE327BC", Offset = "0xE327BC", VA = "0xE327BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE32870", Offset = "0xE32870", VA = "0xE32870")]
	public SecretVaultBreakableDoor()
	{
	}
}
[Token(Token = "0x200011B")]
public class ShaderWarmupCamera : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6174", Offset = "0xAE6174")]
	private sealed class <DelayedDestroy>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaderWarmupCamera <>4__this;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0xE33314", Offset = "0xE33314", VA = "0xE33314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0xE3337C", Offset = "0xE3337C", VA = "0xE3337C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xE331FC", Offset = "0xE331FC", VA = "0xE331FC")]
		[DebuggerHidden]
		public <DelayedDestroy>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xE33230", Offset = "0xE33230", VA = "0xE33230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xE33234", Offset = "0xE33234", VA = "0xE33234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xE3331C", Offset = "0xE3331C", VA = "0xE3331C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE33160", Offset = "0xE33160", VA = "0xE33160")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE3318C", Offset = "0xE3318C", VA = "0xE3318C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF120", Offset = "0xAFF120")]
	private IEnumerator DelayedDestroy()
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE33228", Offset = "0xE33228", VA = "0xE33228")]
	public ShaderWarmupCamera()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE1C64", Offset = "0xAE1C64")]
public class SheriffQuestScriptable : ScriptableObject
{
	[Token(Token = "0x2000537")]
	public enum QuestType
	{
		[Token(Token = "0x40027B7")]
		ItemFetch,
		[Token(Token = "0x40027B8")]
		WorldMinerals,
		[Token(Token = "0x40027B9")]
		ChompyMoney,
		[Token(Token = "0x40027BA")]
		ChompyFetch,
		[Token(Token = "0x40027BB")]
		DestroyStalags,
		[Token(Token = "0x40027BC")]
		DestroyBlocks,
		[Token(Token = "0x40027BD")]
		LootChests,
		[Token(Token = "0x40027BE")]
		BreakBottles,
		[Token(Token = "0x40027BF")]
		ChompyOil
	}

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string questItemName;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public QuestType questType;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int questGoal;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool chompyOnly;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string questTitle;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string questDescription;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string collectVerb;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int junkQualityRewards;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int mediumRewards;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int bestRewards;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE34E2C", Offset = "0xE34E2C", VA = "0xE34E2C")]
	public SheriffQuestScriptable()
	{
	}
}
[Token(Token = "0x200011D")]
public class ShopChaosGauntlet : PlayerItem
{
	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xE34F4C", Offset = "0xE34F4C", VA = "0xE34F4C", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE351CC", Offset = "0xE351CC", VA = "0xE351CC")]
	public ShopChaosGauntlet()
	{
	}
}
[Token(Token = "0x200011E")]
public class Showcase : MonoBehaviour
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] loot;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE351D4", Offset = "0xE351D4", VA = "0xE351D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE35230", Offset = "0xE35230", VA = "0xE35230")]
	public void updateLoots()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE35424", Offset = "0xE35424", VA = "0xE35424")]
	public Showcase()
	{
	}
}
[Token(Token = "0x200011F")]
[ExecuteInEditMode]
public class SimpleBlur : MonoBehaviour
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material background;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE3542C", Offset = "0xE3542C", VA = "0xE3542C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE354B0", Offset = "0xE354B0", VA = "0xE354B0")]
	public SimpleBlur()
	{
	}
}
[Token(Token = "0x2000120")]
public class SpaceAudio : MonoBehaviour
{
	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6184", Offset = "0xAE6184")]
	private sealed class <AsteroidSoundDelay>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceAudio <>4__this;

		[Token(Token = "0x17000276")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002315")]
			[Address(RVA = "0xE361C0", Offset = "0xE361C0", VA = "0xE361C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002317")]
			[Address(RVA = "0xE36228", Offset = "0xE36228", VA = "0xE36228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xE35FCC", Offset = "0xE35FCC", VA = "0xE35FCC")]
		[DebuggerHidden]
		public <AsteroidSoundDelay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xE3610C", Offset = "0xE3610C", VA = "0xE3610C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xE36110", Offset = "0xE36110", VA = "0xE36110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xE361C8", Offset = "0xE361C8", VA = "0xE361C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6194", Offset = "0xAE6194")]
	private sealed class <DelayedDestroy>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceAudio <>4__this;

		[Token(Token = "0x17000278")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600231B")]
			[Address(RVA = "0xE36398", Offset = "0xE36398", VA = "0xE36398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600231D")]
			[Address(RVA = "0xE36400", Offset = "0xE36400", VA = "0xE36400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xE360D8", Offset = "0xE360D8", VA = "0xE360D8")]
		[DebuggerHidden]
		public <DelayedDestroy>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xE36230", Offset = "0xE36230", VA = "0xE36230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xE36234", Offset = "0xE36234", VA = "0xE36234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xE363A0", Offset = "0xE363A0", VA = "0xE363A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource bigAsteroid;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE35F30", Offset = "0xE35F30", VA = "0xE35F30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE35F5C", Offset = "0xE35F5C", VA = "0xE35F5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF184", Offset = "0xAFF184")]
	private IEnumerator AsteroidSoundDelay()
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE35FF8", Offset = "0xE35FF8", VA = "0xE35FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xE36068", Offset = "0xE36068", VA = "0xE36068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF1E8", Offset = "0xAFF1E8")]
	private IEnumerator DelayedDestroy()
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xE36104", Offset = "0xE36104", VA = "0xE36104")]
	public SpaceAudio()
	{
	}
}
[Token(Token = "0x2000121")]
public class SpaceshipPicSpawner : MonoBehaviour
{
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE36408", Offset = "0xE36408", VA = "0xE36408")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xE364C0", Offset = "0xE364C0", VA = "0xE364C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xE364C4", Offset = "0xE364C4", VA = "0xE364C4")]
	public SpaceshipPicSpawner()
	{
	}
}
[Token(Token = "0x2000122")]
public class StageEnding : MonoBehaviour
{
	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61A4", Offset = "0xAE61A4")]
	private sealed class <StageEndingSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageEnding <>4__this;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0xE3C1AC", Offset = "0xE3C1AC", VA = "0xE3C1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002323")]
			[Address(RVA = "0xE3C214", Offset = "0xE3C214", VA = "0xE3C214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xE3B994", Offset = "0xE3B994", VA = "0xE3B994")]
		[DebuggerHidden]
		public <StageEndingSequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xE3BD74", Offset = "0xE3BD74", VA = "0xE3BD74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xE3BD78", Offset = "0xE3BD78", VA = "0xE3BD78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xE3C1B4", Offset = "0xE3C1B4", VA = "0xE3C1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stageLights;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject androidStageLights;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject micLight;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip lightsOnClip;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform stageEntrance;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform vaultDoor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject vaultDoorLight;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timer;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _playerHDM;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _playerInside;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] objectToTurnOn;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] objectToTurnOff;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float stageEntranceCheckSize;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform audienceAudioPoint;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource[] audienceAmbience;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource[] micSpeakers;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CrowdController crowdController;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _endingStarted;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float nextAudienceReaction;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xE3B8D8", Offset = "0xE3B8D8", VA = "0xE3B8D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xE3B8E4", Offset = "0xE3B8E4", VA = "0xE3B8E4")]
	public void StartStageEnding()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xE3B924", Offset = "0xE3B924", VA = "0xE3B924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF24C", Offset = "0xAFF24C")]
	private IEnumerator StageEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE3B9C0", Offset = "0xE3B9C0", VA = "0xE3B9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE3BB70", Offset = "0xE3BB70", VA = "0xE3BB70")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xE3BCC8", Offset = "0xE3BCC8", VA = "0xE3BCC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE3BD64", Offset = "0xE3BD64", VA = "0xE3BD64")]
	public StageEnding()
	{
	}
}
[Token(Token = "0x2000123")]
public class StageMic : PlayerItem
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public StageEnding stageEndingScript;

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x10F9430", Offset = "0x10F9430", VA = "0x10F9430", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x10F9470", Offset = "0x10F9470", VA = "0x10F9470")]
	public StageMic()
	{
	}
}
[Token(Token = "0x2000124")]
public class SupporterReplaceMaterial : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material supporterMaterial;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xF69244", Offset = "0xF69244", VA = "0xF69244")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF69340", Offset = "0xF69340", VA = "0xF69340")]
	public SupporterReplaceMaterial()
	{
	}
}
[Token(Token = "0x2000125")]
public class TeleportPreventation : MonoBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TeleportPreventation singleton;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xF6C730", Offset = "0xF6C730", VA = "0xF6C730")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xF6C86C", Offset = "0xF6C86C", VA = "0xF6C86C")]
	public static void PreventationEnabled()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xF6C910", Offset = "0xF6C910", VA = "0xF6C910")]
	private void OnArriveSaloon()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xF6C8CC", Offset = "0xF6C8CC", VA = "0xF6C8CC")]
	private void OnElevatorStart()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xF6C954", Offset = "0xF6C954", VA = "0xF6C954")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xF6C958", Offset = "0xF6C958", VA = "0xF6C958")]
	public TeleportPreventation()
	{
	}
}
[Token(Token = "0x2000126")]
public class TeleportSounds : MonoBehaviour
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_BasicTeleport _teleportScript;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip teleportClip;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xF6C960", Offset = "0xF6C960", VA = "0xF6C960")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xF6CA04", Offset = "0xF6CA04", VA = "0xF6CA04")]
	public void PlayTeleportSound(object o, DestinationMarkerEventArgs e)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xF6CA94", Offset = "0xF6CA94", VA = "0xF6CA94")]
	public TeleportSounds()
	{
	}
}
[Token(Token = "0x2000127")]
public class ToggleCamera : MonoBehaviour
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode togglekey;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _camera;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] stuffToToggle;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xF6DFF4", Offset = "0xF6DFF4", VA = "0xF6DFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF6E10C", Offset = "0xF6E10C", VA = "0xF6E10C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF6E234", Offset = "0xF6E234", VA = "0xF6E234")]
	public ToggleCamera()
	{
	}
}
[Token(Token = "0x2000128")]
public class Toiletpaper : GrabbableItem
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float _startY;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF6E244", Offset = "0xF6E244", VA = "0xF6E244", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF6E288", Offset = "0xF6E288", VA = "0xF6E288", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF6E35C", Offset = "0xF6E35C", VA = "0xF6E35C")]
	public Toiletpaper()
	{
	}
}
[Token(Token = "0x2000129")]
public class ToolBelt : MonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ToolBelt instance;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF6E3C4", Offset = "0xF6E3C4", VA = "0xF6E3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF6E418", Offset = "0xF6E418", VA = "0xF6E418")]
	public ToolBelt()
	{
	}
}
[Token(Token = "0x200012A")]
public class ToolBeltHook : VRTK_SnapDropZone
{
	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61B4", Offset = "0xAE61B4")]
	private sealed class <UpdateTransformDimensions>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_InteractableObject ioCheck;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject endSettings;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endScale;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ToolBeltHook <>4__this;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <ioTransform>5__3;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <startPosition>5__4;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion <startRotation>5__5;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 <startScale>5__6;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool <storedKinematicState>5__7;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0xF6F93C", Offset = "0xF6F93C", VA = "0xF6F93C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002329")]
			[Address(RVA = "0xF6F9A4", Offset = "0xF6F9A4", VA = "0xF6F9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xF6ECBC", Offset = "0xF6ECBC", VA = "0xF6ECBC")]
		[DebuggerHidden]
		public <UpdateTransformDimensions>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xF6F4D0", Offset = "0xF6F4D0", VA = "0xF6F4D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xF6F4D4", Offset = "0xF6F4D4", VA = "0xF6F4D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xF6F944", Offset = "0xF6F944", VA = "0xF6F944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float cooldownTime;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Renderer myRenderer;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip unsnapClip;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Color _originalColor;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform _playArea;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xF6E420", Offset = "0xF6E420", VA = "0xF6E420")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xF6E4A4", Offset = "0xF6E4A4", VA = "0xF6E4A4", Slot = "21")]
	protected override void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF6E5B8", Offset = "0xF6E5B8", VA = "0xF6E5B8", Slot = "20")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF6E904", Offset = "0xF6E904", VA = "0xF6E904", Slot = "22")]
	protected override void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF6E690", Offset = "0xF6E690", VA = "0xF6E690")]
	private Vector3 GetControllerVelocity(Collider collider, Vector3 controllerVelocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xF6EB14", Offset = "0xF6EB14", VA = "0xF6EB14", Slot = "23")]
	protected override VRTK_InteractableObject ValidSnapObject(GameObject checkObject, bool grabState, bool checkGrabState = true)
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xF6EC10", Offset = "0xF6EC10", VA = "0xF6EC10", Slot = "40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF2B0", Offset = "0xAFF2B0")]
	protected override IEnumerator UpdateTransformDimensions(VRTK_InteractableObject ioCheck, GameObject endSettings, Vector3 endScale, float duration)
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xF6ECE8", Offset = "0xF6ECE8", VA = "0xF6ECE8", Slot = "38")]
	protected override void UnsnapObject()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xF6F098", Offset = "0xF6F098", VA = "0xF6F098", Slot = "11")]
	public override void ForceUnsnap()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xF6F210", Offset = "0xF6F210", VA = "0xF6F210", Slot = "48")]
	protected override void ToggleHighlight(Collider collider, bool state)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xF6F468", Offset = "0xF6F468", VA = "0xF6F468")]
	public ToolBeltHook()
	{
	}
}
[Token(Token = "0x200012B")]
public class ToolTutorialHelper : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action tutorialAction;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject infoPrefab;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool extraOil;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool extraRelics;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> _usedTutorialPrefabs;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xF6F9AC", Offset = "0xF6F9AC", VA = "0xF6F9AC")]
	public static void ClearUsedTutorials()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xF6FA28", Offset = "0xF6FA28", VA = "0xF6FA28")]
	public void Activate()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xF6FCC4", Offset = "0xF6FCC4", VA = "0xF6FCC4")]
	public void CreateInfoObject()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xF6FDF0", Offset = "0xF6FDF0", VA = "0xF6FDF0")]
	public void AddOil()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xF6FEDC", Offset = "0xF6FEDC", VA = "0xF6FEDC")]
	public void AddRelics()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xF6FFC8", Offset = "0xF6FFC8", VA = "0xF6FFC8")]
	public ToolTutorialHelper()
	{
	}
}
[Token(Token = "0x200012C")]
public class Torch : MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light _light;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color originalColor;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string waveFunction;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _base;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float amplitude;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float phase;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float frequency;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF70044", Offset = "0xF70044", VA = "0xF70044")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF700C4", Offset = "0xF700C4", VA = "0xF700C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF70128", Offset = "0xF70128", VA = "0xF70128")]
	private float EvalWave()
	{
		return default(float);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF7030C", Offset = "0xF7030C", VA = "0xF7030C")]
	public Torch()
	{
	}
}
[Token(Token = "0x200012D")]
public class ToxicParticle : MonoBehaviour
{
	[Token(Token = "0x400093C")]
	private const string PLAYERTAG = "Player";

	[Token(Token = "0x400093D")]
	private const string PLAYERTOOLSTAG = "PlayerTools";

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip playerHitClip;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask destroyLayers;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> _collisionEvents;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF70B30", Offset = "0xF70B30", VA = "0xF70B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF70BB0", Offset = "0xF70BB0", VA = "0xF70BB0")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF70BB4", Offset = "0xF70BB4", VA = "0xF70BB4")]
	private void ToxicParticleHit(GameObject other)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xF71114", Offset = "0xF71114", VA = "0xF71114")]
	public ToxicParticle()
	{
	}
}
[Token(Token = "0x200012E")]
public class TrackItems : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrackItems singleton;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CullingGroup _group;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoundingSphere> _spheresList;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoundingSphere[] _spheresArray;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Renderer> _sphereRenderers;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _changedCooldown;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _groupChanged;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xF71174", Offset = "0xF71174", VA = "0xF71174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xF71418", Offset = "0xF71418", VA = "0xF71418")]
	public void AddCullingSphere(Renderer obj, Vector3 position, float scale)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xF7159C", Offset = "0xF7159C", VA = "0xF7159C")]
	public void RemoveCullingSphere(Renderer obj)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF71678", Offset = "0xF71678", VA = "0xF71678")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF7185C", Offset = "0xF7185C", VA = "0xF7185C")]
	private void StateChangedMethod(CullingGroupEvent evt)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xF71A20", Offset = "0xF71A20", VA = "0xF71A20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF71A34", Offset = "0xF71A34", VA = "0xF71A34")]
	public TrackItems()
	{
	}
}
[Token(Token = "0x200012F")]
public class TrackSwitch : VRTK_InteractableObject
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Spline startTrack;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Spline TrackA;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Spline TrackB;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xFBAA2C", Offset = "0xFBAA2C", VA = "0xFBAA2C")]
	public TrackSwitch()
	{
	}
}
[Token(Token = "0x2000130")]
public class Train : MonoBehaviour
{
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61C4", Offset = "0xAE61C4")]
	private sealed class <ShowParticles>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train <>4__this;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule <em>5__2;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600232D")]
			[Address(RVA = "0xFBE7E0", Offset = "0xFBE7E0", VA = "0xFBE7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600232F")]
			[Address(RVA = "0xFBE848", Offset = "0xFBE848", VA = "0xFBE848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xFBE0E8", Offset = "0xFBE0E8", VA = "0xFBE0E8")]
		[DebuggerHidden]
		public <ShowParticles>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xFBE620", Offset = "0xFBE620", VA = "0xFBE620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xFBE624", Offset = "0xFBE624", VA = "0xFBE624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xFBE7E8", Offset = "0xFBE7E8", VA = "0xFBE7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Train singleton;

	[Token(Token = "0x400094E")]
	public const float TRAIN_LENGTH = 5f;

	[Token(Token = "0x400094F")]
	public const float ENGINE_0_SPEED = 7f;

	[Token(Token = "0x4000950")]
	public const float ENGINE_1_SPEED = 10f;

	[Token(Token = "0x4000951")]
	public const float ENGINE_2_SPEED = 14f;

	[Token(Token = "0x4000952")]
	public const float ENGINE_3_SPEED = 18f;

	[Token(Token = "0x4000953")]
	public const float LEVERSTOP_DEADZONE = 0.2f;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool trainLeverInstalled;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool trainHornInstalled;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leverBottom;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leverTop;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform minRotation;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform maxRotation;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform playerPoint;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Spline currentTrainTrack;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private VRTK_BasicTeleport playerTeleportScript;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MovementSlideControl[] movementSlideControls;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRTK_InteractableObject trainIO;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform trainLever;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform trainHorn;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float positionAtSpline;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip trainMusicLoop;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip trainMusicIntro;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip leverKlonk;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip trainStart;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip dialPress;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource brakeLoop;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource engineLoop;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource squeaksLoop;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource tracksLoop;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource hornLoop;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource windLoop;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource leverScreech;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource levitationLoop;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] engineUpgrade1Objects;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] engineUpgrade2Objects;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] engineUpgrade3Objects;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject[] radioUpgrade1Objects;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject[] radioUpgrade2Objects;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Quaternion speedometerStartRotation;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Quaternion speedometerEndRotation;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform speedometer;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform[] wheelTransforms;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject[] enableForLevitation;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject[] enableForLaser;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip trainUpradeSound;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ParticleSystem upgradeParticles;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ParticleSystem[] enabledParticlesWhenMoving;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AudioSource audioSource;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform leverTarget;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool moving;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float leverPosition;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool usingLever;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float trainVelocity;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float angleModifier;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private readonly float maxVelocity;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float lastTrackSwitchTime;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Transform leverUser;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float oldLeverPosition;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _trainPositionFront;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _trainPositionBack;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _firstStart;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float _trainMaxSpeed;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool _levitating;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
	private bool _laserEnabled;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private VRTK_SnapDropZone[] _trainhooks;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool _endReached;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _traveledDistance;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Collider _jaakkosCollider;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool _conductorAchievementUnlocked;

	[Token(Token = "0x1700003B")]
	public VRTK_BasicTeleport PlayerTeleportScript
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xFBAA3C", Offset = "0xFBAA3C", VA = "0xFBAA3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xFBAC0C", Offset = "0xFBAC0C", VA = "0xFBAC0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public MovementSlideControl[] MovementSlideControls
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0xFBAC14", Offset = "0xFBAC14", VA = "0xFBAC14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000802")]
		[Address(RVA = "0xFBAD54", Offset = "0xFBAD54", VA = "0xFBAD54")]
		set
		{
		}
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xFBAA34", Offset = "0xFBAA34", VA = "0xFBAA34")]
	public VRTK_SnapDropZone[] GetTrainHooks()
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xFBAD5C", Offset = "0xFBAD5C", VA = "0xFBAD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xFBAEB4", Offset = "0xFBAEB4", VA = "0xFBAEB4")]
	public void OverrideLeverPosition(float pos)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xFBAEBC", Offset = "0xFBAEBC", VA = "0xFBAEBC")]
	public void InstallTrainLever()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xFBB08C", Offset = "0xFBB08C", VA = "0xFBB08C")]
	public void InstallTrainHorn()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xFBB198", Offset = "0xFBB198", VA = "0xFBB198")]
	public void UpgradeTrainEngine(int level)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xFBB3F4", Offset = "0xFBB3F4", VA = "0xFBB3F4")]
	public void UpgradeRadio(int level)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xFBB5E8", Offset = "0xFBB5E8", VA = "0xFBB5E8")]
	public void SetStartPosition(float pos)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xFBB5F0", Offset = "0xFBB5F0", VA = "0xFBB5F0")]
	public void SetPositionAndRotation(float pos)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xFBB764", Offset = "0xFBB764", VA = "0xFBB764")]
	public void StartedMoving(bool forceNoPlayer = false)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xFBBAD4", Offset = "0xFBBAD4", VA = "0xFBBAD4")]
	public bool IsTrainMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xFBBADC", Offset = "0xFBBADC", VA = "0xFBBADC")]
	public void StoppedMoving()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xFBC054", Offset = "0xFBC054", VA = "0xFBC054")]
	public void UnUsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xFBC0EC", Offset = "0xFBC0EC", VA = "0xFBC0EC")]
	public void UsingLever(object sender, InteractableObjectEventArgs e)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xFBC1D4", Offset = "0xFBC1D4", VA = "0xFBC1D4")]
	public void TeleportCheckInTrain()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xFBC204", Offset = "0xFBC204", VA = "0xFBC204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xFBC678", Offset = "0xFBC678", VA = "0xFBC678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xFBDE6C", Offset = "0xFBDE6C", VA = "0xFBDE6C")]
	private void SetTrainPosition()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xFBDD1C", Offset = "0xFBDD1C", VA = "0xFBDD1C")]
	public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xFBC51C", Offset = "0xFBC51C", VA = "0xFBC51C")]
	public void ToggleLevitation(bool value)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xFBC3FC", Offset = "0xFBC3FC", VA = "0xFBC3FC")]
	public void ToggleLaser(bool value)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xFBB00C", Offset = "0xFBB00C", VA = "0xFBB00C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF314", Offset = "0xAFF314")]
	private IEnumerator ShowParticles(float time)
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xFBE114", Offset = "0xFBE114", VA = "0xFBE114")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xFBE308", Offset = "0xFBE308", VA = "0xFBE308")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xFBE3E0", Offset = "0xFBE3E0", VA = "0xFBE3E0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xFBE600", Offset = "0xFBE600", VA = "0xFBE600")]
	public Train()
	{
	}
}
[Token(Token = "0x2000131")]
[ExecuteInEditMode]
public class TrainEditMode : MonoBehaviour
{
	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Spline spline;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEA6F8", Offset = "0xAEA6F8")]
	public float startPositionOnSpline;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Train trainScript;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform trackItems;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool quitting;

	[Token(Token = "0x1700003D")]
	public static Transform TrackItems
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xFBE944", Offset = "0xFBE944", VA = "0xFBE944")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xFBEDA8", Offset = "0xFBEDA8", VA = "0xFBEDA8")]
		set
		{
		}
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xFBE850", Offset = "0xFBE850", VA = "0xFBE850")]
	private static void Quit()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xFBE8D4", Offset = "0xFBE8D4", VA = "0xFBE8D4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xAFF378", Offset = "0xAFF378")]
	private static void RunOnStart()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xFBEDFC", Offset = "0xFBEDFC", VA = "0xFBEDFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xFBEE80", Offset = "0xFBEE80", VA = "0xFBEE80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xFBEE84", Offset = "0xFBEE84", VA = "0xFBEE84")]
	private void EditorUpdate()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xFBEE88", Offset = "0xFBEE88", VA = "0xFBEE88")]
	private void PlaceFollower()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xFBF0E0", Offset = "0xFBF0E0", VA = "0xFBF0E0")]
	public TrainEditMode()
	{
	}
}
[Token(Token = "0x2000132")]
public class TrainHorn : VRTK_InteractableObject
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform handleDefaultPoint;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform handlePulledPoint;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Animator hornAnimator;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _handlePosition;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xFBF0E8", Offset = "0xFBF0E8", VA = "0xFBF0E8", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xFBF364", Offset = "0xFBF364", VA = "0xFBF364")]
	public TrainHorn()
	{
	}
}
[Token(Token = "0x2000133")]
public class TrainLaser : VRTK_InteractableObject
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioSource shootingAudioSource;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioSource rotatingAudioSource;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioSource chargingAudioSource;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform laserBody;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform rotatingBarrel;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform rotatingCylinder;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject laserEffect;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LayerMask laserBreakables;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Queue<Vector3> _previousRotation;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform _cachedObjectTransform;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool _chargingStarted;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float _barrelSpeed;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private EGA_Laser _laserScript;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private RaycastHit[] _laserRaycastHits;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int _laserHitCount;

	[Token(Token = "0x40009AB")]
	private const float minX = -40f;

	[Token(Token = "0x40009AC")]
	private const float maxX = 25f;

	[Token(Token = "0x40009AD")]
	private const float minZ = -30f;

	[Token(Token = "0x40009AE")]
	private const float maxZ = 30f;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xFBF648", Offset = "0xFBF648", VA = "0xFBF648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xFBF6A8", Offset = "0xFBF6A8", VA = "0xFBF6A8", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xFC0008", Offset = "0xFC0008", VA = "0xFC0008")]
	private float Clamp(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xFC00C4", Offset = "0xFC00C4", VA = "0xFC00C4", Slot = "55")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xFC0120", Offset = "0xFC0120", VA = "0xFC0120", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xFC0174", Offset = "0xFC0174", VA = "0xFC0174", Slot = "28")]
	public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xFC017C", Offset = "0xFC017C", VA = "0xFC017C")]
	public TrainLaser()
	{
	}
}
[Token(Token = "0x2000134")]
public class TrainTestingTool : MonoBehaviour
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrainTestingTool singleton;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Train _train;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool startWithLevitation;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool startWithGasmask;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool startWithRailFix;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool startWithLevel1Engine;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool startWithLevel3Engine;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xFC13E4", Offset = "0xFC13E4", VA = "0xFC13E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xFC153C", Offset = "0xFC153C", VA = "0xFC153C")]
	public void MovePlayerToTrain()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xFC1540", Offset = "0xFC1540", VA = "0xFC1540")]
	public void MoveTrainToNextTrack(bool next)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xFC19B0", Offset = "0xFC19B0", VA = "0xFC19B0")]
	public TrainTestingTool()
	{
	}
}
[Token(Token = "0x2000135")]
public class TrainTrackSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053D")]
	public class TrackConnections
	{
		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Spline thisTrack;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Spline previousTrack;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spline nextTrack;

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xFC20A8", Offset = "0xFC20A8", VA = "0xFC20A8")]
		public TrackConnections()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61D4", Offset = "0xAE61D4")]
	private sealed class <>c
	{
		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<Spline, TrackConnections>, bool> <>9__2_0;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Spline, TrackConnections>, Spline> <>9__2_1;

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xFC2190", Offset = "0xFC2190", VA = "0xFC2190")]
		public <>c()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xFC2198", Offset = "0xFC2198", VA = "0xFC2198")]
		internal bool <Awake>b__2_0(KeyValuePair<Spline, TrackConnections> pair)
		{
			return default(bool);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xFC2204", Offset = "0xFC2204", VA = "0xFC2204")]
		internal Spline <Awake>b__2_1(KeyValuePair<Spline, TrackConnections> pair)
		{
			return null;
		}
	}

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Spline, TrackConnections> trackConnectionDictionary;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xFC19B8", Offset = "0xFC19B8", VA = "0xFC19B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xFC1C80", Offset = "0xFC1C80", VA = "0xFC1C80")]
	public static void ToggleAllTracks(bool value)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xFC1DC8", Offset = "0xFC1DC8", VA = "0xFC1DC8")]
	public static void UpdateTrackConnections()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xFC1F00", Offset = "0xFC1F00", VA = "0xFC1F00")]
	public static void RegisterTrack(Spline track, Spline next, Spline previous)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xFC20B0", Offset = "0xFC20B0", VA = "0xFC20B0")]
	public TrainTrackSystem()
	{
	}
}
[Token(Token = "0x2000136")]
public class WaypointMachine : MonoBehaviour
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer iconQuad;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int waypointNumber;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int selectedWaypointIndex;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Transform> allWaypointMachines;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xD8E508", Offset = "0xD8E508", VA = "0xD8E508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xD8E5A8", Offset = "0xD8E5A8", VA = "0xD8E5A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xD8E6A4", Offset = "0xD8E6A4", VA = "0xD8E6A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xD8E720", Offset = "0xD8E720", VA = "0xD8E720")]
	public static Transform IsClosestWaypointMachine(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xD8E8E4", Offset = "0xD8E8E4", VA = "0xD8E8E4")]
	public void SelectNext()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xD8E99C", Offset = "0xD8E99C", VA = "0xD8E99C")]
	public void SelectPrevious()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xD8EA50", Offset = "0xD8EA50", VA = "0xD8EA50")]
	public WaypointMachine()
	{
	}
}
[Token(Token = "0x2000137")]
public class WaypointMachineButton : VRTK_InteractableObject
{
	[Token(Token = "0x200053F")]
	public enum ButtonType
	{
		[Token(Token = "0x40027E3")]
		Activate,
		[Token(Token = "0x40027E4")]
		Next,
		[Token(Token = "0x40027E5")]
		Previous
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61E4", Offset = "0xAE61E4")]
	private sealed class <TeleportSequenceStuff>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointMachineButton <>4__this;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000280")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002338")]
			[Address(RVA = "0xD8F6E0", Offset = "0xD8F6E0", VA = "0xD8F6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xD8F748", Offset = "0xD8F748", VA = "0xD8F748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xD8F0B8", Offset = "0xD8F0B8", VA = "0xD8F0B8")]
		[DebuggerHidden]
		public <TeleportSequenceStuff>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xD8F0EC", Offset = "0xD8F0EC", VA = "0xD8F0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xD8F0F0", Offset = "0xD8F0F0", VA = "0xD8F0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xD8F6E8", Offset = "0xD8F6E8", VA = "0xD8F6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public WaypointMachine waypointMachineScript;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public ButtonType buttonType;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip buttonPressClip;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip teleportClip;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float hoverTime;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool _starterPressing;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xD8EACC", Offset = "0xD8EACC", VA = "0xD8EACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xD8EB58", Offset = "0xD8EB58", VA = "0xD8EB58", Slot = "18")]
	public override void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xD8EB84", Offset = "0xD8EB84", VA = "0xD8EB84", Slot = "20")]
	public override void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xD8EBB0", Offset = "0xD8EBB0", VA = "0xD8EBB0", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xD8EC40", Offset = "0xD8EC40", VA = "0xD8EC40", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xD8F048", Offset = "0xD8F048", VA = "0xD8F048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF388", Offset = "0xAFF388")]
	private IEnumerator<float> TeleportSequenceStuff()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xD8F0E4", Offset = "0xD8F0E4", VA = "0xD8F0E4")]
	public WaypointMachineButton()
	{
	}
}
[Token(Token = "0x2000138")]
public class TrainLampParticle : MonoBehaviour
{
	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _ps;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask LayerMask;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xFBF36C", Offset = "0xFBF36C", VA = "0xFBF36C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xFBF3C4", Offset = "0xFBF3C4", VA = "0xFBF3C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xFBF640", Offset = "0xFBF640", VA = "0xFBF640")]
	public TrainLampParticle()
	{
	}
}
[Token(Token = "0x2000139")]
public class TrainRadio : VRTK_InteractableObject
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform radioDial;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Vector3 offEuler;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Vector3 channel1Euler;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Vector3 channel2Euler;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Quaternion userStartRotation;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 userStartEuler;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Quaternion dialStartRotation;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xFC0208", Offset = "0xFC0208", VA = "0xFC0208", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xFC0210", Offset = "0xFC0210", VA = "0xFC0210")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xFC0270", Offset = "0xFC0270", VA = "0xFC0270", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xFC03A4", Offset = "0xFC03A4", VA = "0xFC03A4", Slot = "28")]
	public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xFC080C", Offset = "0xFC080C", VA = "0xFC080C")]
	public RadioManager.RadioStation GetCurrentRadioChannel()
	{
		return default(RadioManager.RadioStation);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xFC0EB4", Offset = "0xFC0EB4", VA = "0xFC0EB4", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xFC109C", Offset = "0xFC109C", VA = "0xFC109C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xFC13DC", Offset = "0xFC13DC", VA = "0xFC13DC")]
	public TrainRadio()
	{
	}
}
[Token(Token = "0x200013A")]
public class TreasureSpawner : MonoBehaviour
{
	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] TreasureSpawns;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] treasure;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject amulet;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xFC2248", Offset = "0xFC2248", VA = "0xFC2248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xFC25DC", Offset = "0xFC25DC", VA = "0xFC25DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xFC27F0", Offset = "0xFC27F0", VA = "0xFC27F0")]
	public TreasureSpawner()
	{
	}
}
[Token(Token = "0x200013B")]
[ExecuteInEditMode]
public class TriggerVolume : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	public enum WorldType
	{
		[Token(Token = "0x40027EB")]
		none,
		[Token(Token = "0x40027EC")]
		town,
		[Token(Token = "0x40027ED")]
		cave,
		[Token(Token = "0x40027EE")]
		ice,
		[Token(Token = "0x40027EF")]
		toxic,
		[Token(Token = "0x40027F0")]
		underworld
	}

	[Serializable]
	[Token(Token = "0x2000542")]
	public class ToxicSettings
	{
		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool toxicAreaEnabled;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float toxicDamageTaken;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _nextDamageTime;

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xFC394C", Offset = "0xFC394C", VA = "0xFC394C")]
		public bool CheckForDamage()
		{
			return default(bool);
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xFC3E70", Offset = "0xFC3E70", VA = "0xFC3E70")]
		public ToxicSettings()
		{
		}
	}

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WorldType worldType;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fogCube;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float time;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEA740", Offset = "0xAEA740")]
	public float androidMultiplier;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent enterEvent;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInside;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ToxicSettings toxicSettings;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool worksDuringEvents;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color32 ambientColor;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRTK_HeadsetFade headsetFade;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly Color32 _damageColor;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _toxicCooldown;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xFC27F8", Offset = "0xFC27F8", VA = "0xFC27F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xFC28E4", Offset = "0xFC28E4", VA = "0xFC28E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xFC299C", Offset = "0xFC299C", VA = "0xFC299C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xFC29A0", Offset = "0xFC29A0", VA = "0xFC29A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xFC29E4", Offset = "0xFC29E4", VA = "0xFC29E4")]
	public Vector3 GetClosestColliderPoint(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xFC29DC", Offset = "0xFC29DC", VA = "0xFC29DC")]
	public void CheckIfCameraIsInside()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xFC3944", Offset = "0xFC3944", VA = "0xFC3944")]
	public void CheckIfCameraIsInsideInstant()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xFC2A00", Offset = "0xFC2A00", VA = "0xFC2A00")]
	public void CheckIfCameraIsInside(bool instant)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xFC399C", Offset = "0xFC399C", VA = "0xFC399C")]
	public void SetObjectActive(GameObject go)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xFC39BC", Offset = "0xFC39BC", VA = "0xFC39BC")]
	public void SetObjectUnactive(GameObject go)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xFC39DC", Offset = "0xFC39DC", VA = "0xFC39DC")]
	public void ToggleCave(bool value)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xFC3A58", Offset = "0xFC3A58", VA = "0xFC3A58")]
	public void PrepareTrainLevel(GameObject trainLevel)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xFC3BCC", Offset = "0xFC3BCC", VA = "0xFC3BCC")]
	public void BrokenTracksSpeech()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xFC3C2C", Offset = "0xFC3C2C", VA = "0xFC3C2C")]
	public void CrystalSpeech()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xFC3C8C", Offset = "0xFC3C8C", VA = "0xFC3C8C")]
	public void PoisonWarningSpeech()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xFC3CEC", Offset = "0xFC3CEC", VA = "0xFC3CEC")]
	public void ToxicLevelSpeech()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xFC3D4C", Offset = "0xFC3D4C", VA = "0xFC3D4C")]
	public void UnderworldSpeech()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xFC3DAC", Offset = "0xFC3DAC", VA = "0xFC3DAC")]
	public TriggerVolume()
	{
	}
}
[Token(Token = "0x200013C")]
public class TutorialChalkboard : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE61F4", Offset = "0xAE61F4")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialChalkboard <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0xFC414C", Offset = "0xFC414C", VA = "0xFC414C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0xFC41B4", Offset = "0xFC41B4", VA = "0xFC41B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xFC3EE8", Offset = "0xFC3EE8", VA = "0xFC3EE8")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xFC4004", Offset = "0xFC4004", VA = "0xFC4004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xFC4008", Offset = "0xFC4008", VA = "0xFC4008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xFC4154", Offset = "0xFC4154", VA = "0xFC4154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialChalkboard singleton;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer tutorialQuad;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] viveWandTutorials;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] questTouchTutorials;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] riftTouchTutorials;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] PS4Tutorials;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] WMRTutorials;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] noControllerTutorials;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _matNumber;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material[] _activeTutorials;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xFC3E78", Offset = "0xFC3E78", VA = "0xFC3E78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF3EC", Offset = "0xAFF3EC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xFC3F14", Offset = "0xFC3F14", VA = "0xFC3F14")]
	public void NextTutorial()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xFC3FFC", Offset = "0xFC3FFC", VA = "0xFC3FFC")]
	public TutorialChalkboard()
	{
	}
}
[Token(Token = "0x200013D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE1CE8", Offset = "0xAE1CE8")]
public class UnityObjectReferences : ScriptableObject
{
	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UnityEngine.Object> unityObjectReferences;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh arrowMesh;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xFC42F4", Offset = "0xFC42F4", VA = "0xFC42F4")]
	public UnityObjectReferences()
	{
	}
}
[Token(Token = "0x200013E")]
public class UselessPickaxe : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform movingPickPart;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minAngle;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAngle;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _euler;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnSale _onSale;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerItem _playerItem;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource mechanicalSoundLoop;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xFC4B70", Offset = "0xFC4B70", VA = "0xFC4B70")]
	private void Start()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xFC4BE0", Offset = "0xFC4BE0", VA = "0xFC4BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xFC4D88", Offset = "0xFC4D88", VA = "0xFC4D88")]
	public UselessPickaxe()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE1D3C", Offset = "0xAE1D3C")]
public class AchievementScriptable : ScriptableObject
{
	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ps4AchievementIds;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] ps4AchievementIds2;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, int> ps4IdDictionary;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xDF9584", Offset = "0xDF9584", VA = "0xDF9584")]
	public void InitDictionary()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xDF9794", Offset = "0xDF9794", VA = "0xDF9794")]
	public static void TriggerAchievement(string achievementId)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xDF992C", Offset = "0xDF992C", VA = "0xDF992C")]
	public AchievementScriptable()
	{
	}
}
[Token(Token = "0x2000140")]
public class CinematicCameraControls : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool status;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject UIStuff;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xE7BD24", Offset = "0xE7BD24", VA = "0xE7BD24")]
	public CinematicCameraControls()
	{
	}
}
[Token(Token = "0x2000141")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000873")]
	[Address(RVA = "0xFAD2EC", Offset = "0xFAD2EC", VA = "0xFAD2EC")]
	public static float Remap(this float value, float oldMin, float oldMax, float newMin, float newMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xFAD308", Offset = "0xFAD308", VA = "0xFAD308")]
	public static bool IsInside(this Vector3 p_Point, BoxCollider p_Box)
	{
		return default(bool);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xFAD488", Offset = "0xFAD488", VA = "0xFAD488")]
	public static bool HasCommandLineArgument(string argumentName)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000142")]
public static class QuaternionExtension
{
	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE2677C", Offset = "0xE2677C", VA = "0xE2677C")]
	public static Quaternion Lerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE26938", Offset = "0xE26938", VA = "0xE26938")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE268F8", Offset = "0xE268F8", VA = "0xE268F8")]
	public static Quaternion ScalarMultiply(Quaternion input, float scalar)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE26B4C", Offset = "0xE26B4C", VA = "0xE26B4C")]
	public static Quaternion Add(Quaternion p, Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000143")]
public class MeshSkinningDebug : MonoBehaviour
{
	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6204", Offset = "0xAE6204")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0xE5889C", Offset = "0xE5889C", VA = "0xE5889C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002348")]
			[Address(RVA = "0xE58904", Offset = "0xE58904", VA = "0xE58904", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xE58664", Offset = "0xE58664", VA = "0xE58664")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xE58698", Offset = "0xE58698", VA = "0xE58698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xE5869C", Offset = "0xE5869C", VA = "0xE5869C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xE588A4", Offset = "0xE588A4", VA = "0xE588A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xE58604", Offset = "0xE58604", VA = "0xE58604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF470", Offset = "0xAFF470")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xE58690", Offset = "0xE58690", VA = "0xE58690")]
	public MeshSkinningDebug()
	{
	}
}
[Token(Token = "0x2000144")]
[ExecuteInEditMode]
public class ReplaceText : MonoBehaviour
{
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool replaceAll;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> replacedOnes;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xE2CC58", Offset = "0xE2CC58", VA = "0xE2CC58")]
	public ReplaceText()
	{
	}
}
[Token(Token = "0x2000145")]
public static class WeightedRandomizer
{
	[Token(Token = "0x600087D")]
	public static WeightedRandomizer<R> From<R>(Dictionary<R, int> spawnRate)
	{
		return null;
	}
}
[Token(Token = "0x2000146")]
public class WeightedRandomizer<T>
{
	[Serializable]
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6214", Offset = "0xAE6214")]
	private sealed class <>c
	{
		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<KeyValuePair<T, int>> <>9__4_0;

		[Token(Token = "0x600234A")]
		public <>c()
		{
		}

		[Token(Token = "0x600234B")]
		internal int <Sort>b__4_0(KeyValuePair<T, int> firstPair, KeyValuePair<T, int> nextPair)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Random random;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<T, int> _weights;

	[Token(Token = "0x600087E")]
	public WeightedRandomizer(Dictionary<T, int> weights)
	{
	}

	[Token(Token = "0x600087F")]
	public T TakeOne()
	{
		return (T)null;
	}

	[Token(Token = "0x6000880")]
	private List<KeyValuePair<T, int>> Sort(Dictionary<T, int> weights)
	{
		return null;
	}
}
[Token(Token = "0x2000147")]
public class VRGoggles : PlayerItem
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6224", Offset = "0xAE6224")]
	private sealed class <StopTrainBeforeEnding>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRGoggles <>4__this;

		[Token(Token = "0x17000286")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600234F")]
			[Address(RVA = "0xFC51F4", Offset = "0xFC51F4", VA = "0xFC51F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0xFC525C", Offset = "0xFC525C", VA = "0xFC525C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xFC509C", Offset = "0xFC509C", VA = "0xFC509C")]
		[DebuggerHidden]
		public <StopTrainBeforeEnding>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xFC50D0", Offset = "0xFC50D0", VA = "0xFC50D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xFC50D4", Offset = "0xFC50D4", VA = "0xFC50D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xFC51FC", Offset = "0xFC51FC", VA = "0xFC51FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform playerHDM;

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xFC4D90", Offset = "0xFC4D90", VA = "0xFC4D90", Slot = "87")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xFC4E58", Offset = "0xFC4E58", VA = "0xFC4E58", Slot = "57")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xFC502C", Offset = "0xFC502C", VA = "0xFC502C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF4D4", Offset = "0xAFF4D4")]
	private IEnumerator StopTrainBeforeEnding()
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xFC50C8", Offset = "0xFC50C8", VA = "0xFC50C8")]
	public VRGoggles()
	{
	}
}
[Token(Token = "0x2000148")]
public class VaultDoor : MonoBehaviour
{
	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VaultLock[] _vaultLocks;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip doorOpenClip;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip angelicSounds;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] enableAfterOpening;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animation doorAnimation;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VaultValveHandle valveHandle;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xD8BA18", Offset = "0xD8BA18", VA = "0xD8BA18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xD8BAC8", Offset = "0xD8BAC8", VA = "0xD8BAC8")]
	public void LockOpened()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xD8BC54", Offset = "0xD8BC54", VA = "0xD8BC54")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xD8BE9C", Offset = "0xD8BE9C", VA = "0xD8BE9C")]
	public VaultDoor()
	{
	}
}
[Token(Token = "0x2000149")]
public class VaultKey : GrabbableItem
{
	[Token(Token = "0x2000547")]
	public enum KeyTypes
	{
		[Token(Token = "0x40027FF")]
		dollar,
		[Token(Token = "0x4002800")]
		mushroom,
		[Token(Token = "0x4002801")]
		bottle,
		[Token(Token = "0x4002802")]
		pickaxe
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEA758", Offset = "0xAEA758")]
	public KeyTypes keyType;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool hasBeenAcquired;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected OnSale _onSale;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xD8BEA4", Offset = "0xD8BEA4", VA = "0xD8BEA4", Slot = "53")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xD8BF54", Offset = "0xD8BF54", VA = "0xD8BF54", Slot = "22")]
	public override void Grabbed(VRTK_InteractGrab grabbingObject)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xD8C184", Offset = "0xD8C184", VA = "0xD8C184")]
	private void CheckIfCanBeBought()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xD8C264", Offset = "0xD8C264", VA = "0xD8C264", Slot = "14")]
	public override bool IsTouched()
	{
		return default(bool);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xD8C294", Offset = "0xD8C294", VA = "0xD8C294")]
	public void Drop()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xD8C2A4", Offset = "0xD8C2A4", VA = "0xD8C2A4", Slot = "56")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xD8C460", Offset = "0xD8C460", VA = "0xD8C460")]
	public VaultKey()
	{
	}
}
[Token(Token = "0x200014A")]
public class VaultLock : MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VaultKey.KeyTypes lockType;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool locked;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VaultDoor _door;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip unlockClip;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip failUnlockClip;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lastAttemptTime;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] sideLocks;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xD8C4C8", Offset = "0xD8C4C8", VA = "0xD8C4C8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xD8C528", Offset = "0xD8C528", VA = "0xD8C528")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xD8CAA0", Offset = "0xD8CAA0", VA = "0xD8CAA0")]
	public VaultLock()
	{
	}
}
[Token(Token = "0x200014B")]
public class VaultValveHandle : VRTK_InteractableObject
{
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6234", Offset = "0xAE6234")]
	private sealed class <Rotate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VaultValveHandle <>4__this;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000288")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0xD8CDF0", Offset = "0xD8CDF0", VA = "0xD8CDF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0xD8CE58", Offset = "0xD8CE58", VA = "0xD8CE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xD8CC0C", Offset = "0xD8CC0C", VA = "0xD8CC0C")]
		[DebuggerHidden]
		public <Rotate>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xD8CC40", Offset = "0xD8CC40", VA = "0xD8CC40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xD8CC44", Offset = "0xD8CC44", VA = "0xD8CC44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD8CDF8", Offset = "0xD8CDF8", VA = "0xD8CDF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool handleActive;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public LayerMask handlayers;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public VaultDoor vaultDoor;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip openClip;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip failClip;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool _startedRotation;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xD8CAB0", Offset = "0xD8CAB0", VA = "0xD8CAB0", Slot = "26")]
	public override void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xD8CB9C", Offset = "0xD8CB9C", VA = "0xD8CB9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF538", Offset = "0xAFF538")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xD8CC38", Offset = "0xD8CC38", VA = "0xD8CC38")]
	public VaultValveHandle()
	{
	}
}
[Token(Token = "0x200014C")]
public class ViveMaterialSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture viveTexture;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture wmrTexture;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture oculusTexture;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture questTexture;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture psvrTexture;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xD8CEF4", Offset = "0xD8CEF4", VA = "0xD8CEF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xD8D31C", Offset = "0xD8D31C", VA = "0xD8D31C")]
	private void Oculus()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xD8D1C8", Offset = "0xD8D1C8", VA = "0xD8D1C8")]
	private void Vive()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xD8D528", Offset = "0xD8D528", VA = "0xD8D528")]
	private void WMR()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xD8D074", Offset = "0xD8D074", VA = "0xD8D074")]
	private void PSVR()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xD8D67C", Offset = "0xD8D67C", VA = "0xD8D67C")]
	private void Disabled()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xD8D70C", Offset = "0xD8D70C", VA = "0xD8D70C")]
	public ViveMaterialSwitcher()
	{
	}
}
[Token(Token = "0x200014D")]
public class ViveSpriteSwapper : MonoBehaviour
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject viveSprite;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oculusSprite;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject questSprite;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wmrSprite;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject psvrSprite;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xD8D714", Offset = "0xD8D714", VA = "0xD8D714")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xD8D798", Offset = "0xD8D798", VA = "0xD8D798")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xD8DA2C", Offset = "0xD8DA2C", VA = "0xD8DA2C")]
	private void Oculus()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xD8D99C", Offset = "0xD8D99C", VA = "0xD8D99C")]
	private void Vive()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xD8DAA8", Offset = "0xD8DAA8", VA = "0xD8DAA8")]
	private void WMR()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xD8D90C", Offset = "0xD8D90C", VA = "0xD8D90C")]
	private void Psvr()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xD8D718", Offset = "0xD8D718", VA = "0xD8D718")]
	private void DisableAll()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xD8DB38", Offset = "0xD8DB38", VA = "0xD8DB38")]
	public ViveSpriteSwapper()
	{
	}
}
[Token(Token = "0x200014E")]
public class WantedBoard : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject poster1;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject poster2;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject poster3;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> _allWanted;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xD8E494", Offset = "0xD8E494", VA = "0xD8E494")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xD8E498", Offset = "0xD8E498", VA = "0xD8E498")]
	public WantedBoard()
	{
	}
}
[Token(Token = "0x200014F")]
public class treasureDetector : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6244", Offset = "0xAE6244")]
	private sealed class <_TresureTracking>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public treasureDetector <>4__this;

		[Token(Token = "0x1700028A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600235B")]
			[Address(RVA = "0x20BACD8", Offset = "0x20BACD8", VA = "0x20BACD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x20BAD40", Offset = "0x20BAD40", VA = "0x20BAD40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x20BA468", Offset = "0x20BA468", VA = "0x20BA468")]
		[DebuggerHidden]
		public <_TresureTracking>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x20BA49C", Offset = "0x20BA49C", VA = "0x20BA49C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x20BA4A0", Offset = "0x20BA4A0", VA = "0x20BA4A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x20BACE0", Offset = "0x20BACE0", VA = "0x20BACE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject trackedTreasure;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem ps;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.MainModule main;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.EmissionModule emis;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource audioS;

	[Token(Token = "0x4000A22")]
	private const string TREASURE = "Treasure";

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x20BA16C", Offset = "0x20BA16C", VA = "0x20BA16C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x20BA1B8", Offset = "0x20BA1B8", VA = "0x20BA1B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x20BA3AC", Offset = "0x20BA3AC", VA = "0x20BA3AC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x20BA33C", Offset = "0x20BA33C", VA = "0x20BA33C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFF59C", Offset = "0xAFF59C")]
	private IEnumerator<float> _TresureTracking()
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x20BA494", Offset = "0x20BA494", VA = "0x20BA494")]
	public treasureDetector()
	{
	}
}
[Token(Token = "0x2000150")]
public class SonyNpMain : MonoBehaviour
{
	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE35F28", Offset = "0xE35F28", VA = "0xE35F28")]
	public SonyNpMain()
	{
	}
}
[Token(Token = "0x2000151")]
public class GamePad : MonoBehaviour
{
	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE9A660", Offset = "0xE9A660", VA = "0xE9A660")]
	public GamePad()
	{
	}
}
[Token(Token = "0x2000152")]
public class OnScreenLog : MonoBehaviour
{
	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE95BA8", Offset = "0xE95BA8", VA = "0xE95BA8")]
	public OnScreenLog()
	{
	}
}
[Serializable]
[Token(Token = "0x2000153")]
public class CubicBezierCurve
{
	[Token(Token = "0x200054A")]
	private class CurveSample
	{
		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 location;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 tangent;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distance;

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xE7F128", Offset = "0xE7F128", VA = "0xE7F128")]
		public CurveSample()
		{
		}
	}

	[Token(Token = "0x4000A23")]
	private const int STEP_COUNT = 30;

	[Token(Token = "0x4000A24")]
	private const float T_STEP = 1f / 30f;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SplineNode n1;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineNode n2;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasComputed;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA7B0", Offset = "0xAEA7B0")]
	private float <Length>k__BackingField;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<CurveSample> samples;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent Changed;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CurveSample previous;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CurveSample next;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CurveSample res;

	[Token(Token = "0x1700003E")]
	public float Length
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xE7EFB4", Offset = "0xE7EFB4", VA = "0xE7EFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF600", Offset = "0xAFF600")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xE7EFBC", Offset = "0xE7EFBC", VA = "0xE7EFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF610", Offset = "0xAFF610")]
		private set
		{
		}
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE7EFC4", Offset = "0xE7EFC4", VA = "0xE7EFC4")]
	public CubicBezierCurve(SplineNode n1, SplineNode n2)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE7F37C", Offset = "0xE7F37C", VA = "0xE7F37C")]
	public void ConnectStart(SplineNode n1)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE7F468", Offset = "0xE7F468", VA = "0xE7F468")]
	public void ConnectEnd(SplineNode n2)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE7F554", Offset = "0xE7F554", VA = "0xE7F554")]
	public Vector3 GetInverseDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE7F604", Offset = "0xE7F604", VA = "0xE7F604")]
	public Vector3 GetLocation(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE7F824", Offset = "0xE7F824", VA = "0xE7F824")]
	public Vector3 GetTangent(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE7F130", Offset = "0xE7F130", VA = "0xE7F130")]
	private void ComputePoints()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE7FA6C", Offset = "0xE7FA6C", VA = "0xE7FA6C")]
	private CurveSample getCurvePointAtDistance(float d)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE7FE58", Offset = "0xE7FE58", VA = "0xE7FE58")]
	public Vector3 GetLocationAtDistance(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE7FF30", Offset = "0xE7FF30", VA = "0xE7FF30")]
	public Vector3 GetTangentAtDistance(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE7FF54", Offset = "0xE7FF54", VA = "0xE7FF54")]
	public static Quaternion GetRotationFromTangent(Vector3 Tangent)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE800F0", Offset = "0xE800F0", VA = "0xE800F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF620", Offset = "0xAFF620")]
	private void <.ctor>b__11_0()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE800F4", Offset = "0xE800F4", VA = "0xE800F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF630", Offset = "0xAFF630")]
	private void <.ctor>b__11_1()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE800F8", Offset = "0xE800F8", VA = "0xE800F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF640", Offset = "0xAFF640")]
	private void <ConnectStart>b__12_0()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xE800FC", Offset = "0xE800FC", VA = "0xE800FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF650", Offset = "0xAFF650")]
	private void <ConnectStart>b__12_1()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xE80100", Offset = "0xE80100", VA = "0xE80100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF660", Offset = "0xAFF660")]
	private void <ConnectEnd>b__13_0()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xE80104", Offset = "0xE80104", VA = "0xE80104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF670", Offset = "0xAFF670")]
	private void <ConnectEnd>b__13_1()
	{
	}
}
[Token(Token = "0x2000154")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1DA0", Offset = "0xAE1DA0")]
[ExecuteInEditMode]
public class MeshBender : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	private struct Vertex
	{
		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 v;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 n;
	}

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh source;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh result;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<Vertex> vertices;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion sourceRotation;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 sourceTranslation;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CubicBezierCurve curve;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float startScale;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float endScale;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startRoll;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float endRoll;

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xE57718", Offset = "0xE57718", VA = "0xE57718")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xE57800", Offset = "0xE57800", VA = "0xE57800")]
	public void SetCurve(CubicBezierCurve curve, bool update = true)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xE582F8", Offset = "0xE582F8", VA = "0xE582F8")]
	public void SetStartScale(float scale, bool update = true)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE58308", Offset = "0xE58308", VA = "0xE58308")]
	public void SetEndScale(float scale, bool update = true)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE58318", Offset = "0xE58318", VA = "0xE58318")]
	public void SetStartRoll(float roll, bool update = true)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE58328", Offset = "0xE58328", VA = "0xE58328")]
	public void SetEndRoll(float roll, bool update = true)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE58338", Offset = "0xE58338", VA = "0xE58338")]
	public void SetSourceMesh(Mesh mesh, bool update = true)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE584C4", Offset = "0xE584C4", VA = "0xE584C4")]
	public void SetRotation(Quaternion rotation, bool update = true)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE584D8", Offset = "0xE584D8", VA = "0xE584D8")]
	public void SetTranslation(Vector3 translation, bool update = true)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE57910", Offset = "0xE57910", VA = "0xE57910")]
	private void Compute()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xE584EC", Offset = "0xE584EC", VA = "0xE584EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xE58580", Offset = "0xE58580", VA = "0xE58580")]
	public MeshBender()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xE585F8", Offset = "0xE585F8", VA = "0xE585F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF680", Offset = "0xAFF680")]
	private void <SetCurve>b__11_0()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xE585FC", Offset = "0xE585FC", VA = "0xE585FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF690", Offset = "0xAFF690")]
	private void <SetCurve>b__11_1()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xE58600", Offset = "0xE58600", VA = "0xE58600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6A0", Offset = "0xAFF6A0")]
	private void <OnDestroy>b__21_0()
	{
	}
}
[Token(Token = "0x2000155")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class Spline : MonoBehaviour
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SplineNode> nodes;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<CubicBezierCurve> curves;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Length;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public UnityEvent NodeCountChanged;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public UnityEvent CurveChanged;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Spline nextSpline;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Spline previousSpline;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent reachedNextEnd;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent reachedPreviousEnd;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool matchLastNodeWithFirstNodeOfNextSpline;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _meshParent;

	[Token(Token = "0x1700003F")]
	public Transform MeshParent
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xE390BC", Offset = "0xE390BC", VA = "0xE390BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xE392D4", Offset = "0xE392D4", VA = "0xE392D4")]
		private set
		{
		}
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xE39094", Offset = "0xE39094", VA = "0xE39094")]
	public void ReachedNextEnd()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xE390A8", Offset = "0xE390A8", VA = "0xE390A8")]
	public void ReachedPreviousEnd()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE39148", Offset = "0xE39148", VA = "0xE39148")]
	public Transform CreateMeshParent()
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE392DC", Offset = "0xE392DC", VA = "0xE392DC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE397A4", Offset = "0xE397A4", VA = "0xE397A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE39C48", Offset = "0xE39C48", VA = "0xE39C48")]
	public ReadOnlyCollection<CubicBezierCurve> GetCurves()
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE39680", Offset = "0xE39680", VA = "0xE39680")]
	private void RaiseNodeCountChanged()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE39694", Offset = "0xE39694", VA = "0xE39694")]
	private void UpdateAfterCurveChanged()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE39CA0", Offset = "0xE39CA0", VA = "0xE39CA0")]
	public Vector3 GetLocationAlongSpline(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE39E98", Offset = "0xE39E98", VA = "0xE39E98")]
	public Vector3 GetTangentAlongSpline(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE39D38", Offset = "0xE39D38", VA = "0xE39D38")]
	private int GetNodeIndexForTime(float t)
	{
		return default(int);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xE39F30", Offset = "0xE39F30", VA = "0xE39F30")]
	public Vector3 GetLocationAlongSplineAtDistance(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE3A1D8", Offset = "0xE3A1D8", VA = "0xE3A1D8")]
	public Vector3 GetTangentAlongSplineAtDistance(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE39528", Offset = "0xE39528", VA = "0xE39528")]
	public void AddNode(SplineNode node)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE3A350", Offset = "0xE3A350", VA = "0xE3A350")]
	public void InsertNode(int index, SplineNode node)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE3A548", Offset = "0xE3A548", VA = "0xE3A548")]
	public void RemoveNode(SplineNode node)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE3A774", Offset = "0xE3A774", VA = "0xE3A774")]
	public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE3A8A0", Offset = "0xE3A8A0", VA = "0xE3A8A0")]
	public Spline()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE3A980", Offset = "0xE3A980", VA = "0xE3A980")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6B0", Offset = "0xAFF6B0")]
	private void <OnEnable>b__18_0()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE3A984", Offset = "0xE3A984", VA = "0xE3A984")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6C0", Offset = "0xAFF6C0")]
	private void <AddNode>b__27_0()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE3A988", Offset = "0xE3A988", VA = "0xE3A988")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6D0", Offset = "0xAFF6D0")]
	private void <InsertNode>b__28_0()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xE3A98C", Offset = "0xE3A98C", VA = "0xE3A98C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6E0", Offset = "0xAFF6E0")]
	private void <RemoveNode>b__29_0()
	{
	}
}
[Serializable]
[Token(Token = "0x2000156")]
public class SplineNode
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 direction;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UnityEvent Changed;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xE39468", Offset = "0xE39468", VA = "0xE39468")]
	public SplineNode(Vector3 position, Vector3 direction)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xE39B68", Offset = "0xE39B68", VA = "0xE39B68")]
	public void SetPosition(Vector3 p)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xE39BD8", Offset = "0xE39BD8", VA = "0xE39BD8")]
	public void SetDirection(Vector3 d)
	{
	}
}
[Token(Token = "0x2000157")]
[ExecuteInEditMode]
[SelectionBase]
public class ExemplePipe : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotation;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scale;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Spline spline;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> meshes;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool toUpdate;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xFA5D8C", Offset = "0xFA5D8C", VA = "0xFA5D8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xFA5E34", Offset = "0xFA5E34", VA = "0xFA5E34")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xFA5E40", Offset = "0xFA5E40", VA = "0xFA5E40")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xFA5E6C", Offset = "0xFA5E6C", VA = "0xFA5E6C")]
	public void CreateMeshes()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xFA6678", Offset = "0xFA6678", VA = "0xFA6678")]
	public ExemplePipe()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xFA66F8", Offset = "0xFA66F8", VA = "0xFA66F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF6F0", Offset = "0xAFF6F0")]
	private void <OnEnable>b__7_0()
	{
	}
}
[Token(Token = "0x2000158")]
[ExecuteInEditMode]
[SelectionBase]
public class ExempleRailling : MonoBehaviour
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool recombineMesh;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh mesh;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 rotation;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float YOffset;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ZOffset;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scale;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Spline spline;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> meshes;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Renderer> meshRenderers;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool toUpdate;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _meshHolder;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool makeStatic;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool lightmapScaleToZero;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool bakeMeshies;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MB3_MeshCombinerSingle meshCombine;

	[Token(Token = "0x17000040")]
	public Transform MeshHolder
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xFA6704", Offset = "0xFA6704", VA = "0xFA6704")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xFA69BC", Offset = "0xFA69BC", VA = "0xFA69BC")]
		private set
		{
		}
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xFA6790", Offset = "0xFA6790", VA = "0xFA6790")]
	public Transform CreateMeshHolder()
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xFA69C4", Offset = "0xFA69C4", VA = "0xFA69C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xFA6B80", Offset = "0xFA6B80", VA = "0xFA6B80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xFA6BBC", Offset = "0xFA6BBC", VA = "0xFA6BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xFA6BF4", Offset = "0xFA6BF4", VA = "0xFA6BF4")]
	public void CreateMeshes()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xFA6A3C", Offset = "0xFA6A3C", VA = "0xFA6A3C")]
	private void ToggleMeshVisibility(bool value)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xFA781C", Offset = "0xFA781C", VA = "0xFA781C")]
	private void DeleteOldMeshes()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xFA7CAC", Offset = "0xFA7CAC", VA = "0xFA7CAC")]
	public ExempleRailling()
	{
	}
}
[Token(Token = "0x2000159")]
[ExecuteInEditMode]
[SelectionBase]
public class ExempleSower : MonoBehaviour
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scale;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleRange;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spacing;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spacingRange;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offset;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float offsetRange;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isRandomYaw;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yOffset;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int randomSeed;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool makeStatic;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool lightmapScaleToZero;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool disableOnAndroid;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool bakeMeshies;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MB3_MeshCombinerSingle mb;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool forceSow;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<GameObject> prefabs;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Spline spline;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool toUpdate;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _meshHolder;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private double _timeOnEnable;

	[Token(Token = "0x17000041")]
	public Transform MeshHolder
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xFA7D74", Offset = "0xFA7D74", VA = "0xFA7D74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xFA8020", Offset = "0xFA8020", VA = "0xFA8020")]
		private set
		{
		}
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xFA7E00", Offset = "0xFA7E00", VA = "0xFA7E00")]
	public Transform CreateMeshHolder()
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xFA8028", Offset = "0xFA8028", VA = "0xFA8028")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xFA8080", Offset = "0xFA8080", VA = "0xFA8080")]
	private void ToUpdate()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xFA8084", Offset = "0xFA8084", VA = "0xFA8084")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xFA80DC", Offset = "0xFA80DC", VA = "0xFA80DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xFA8194", Offset = "0xFA8194", VA = "0xFA8194")]
	public void Sow()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xFA8240", Offset = "0xFA8240", VA = "0xFA8240")]
	private void DeleteOldMeshes()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xFA86B8", Offset = "0xFA86B8", VA = "0xFA86B8")]
	public ExempleSower()
	{
	}
}
[Token(Token = "0x200015A")]
[ExecuteInEditMode]
[SelectionBase]
public class ExempleTentacle : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotation;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float startScale;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float endScale;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float startRoll;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float endRoll;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Spline spline;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> meshes;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool toUpdate;

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xFA8760", Offset = "0xFA8760", VA = "0xFA8760")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xFA8808", Offset = "0xFA8808", VA = "0xFA8808")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xFA8888", Offset = "0xFA8888", VA = "0xFA8888")]
	private void Update()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xFA889C", Offset = "0xFA889C", VA = "0xFA889C")]
	public void CreateMeshes()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xFA9138", Offset = "0xFA9138", VA = "0xFA9138")]
	public ExempleTentacle()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xFA91B0", Offset = "0xFA91B0", VA = "0xFA91B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF700", Offset = "0xAFF700")]
	private void <OnEnable>b__10_0()
	{
	}
}
[Token(Token = "0x200015B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1F3C", Offset = "0xAE1F3C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1F3C", Offset = "0xAE1F3C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE1F3C", Offset = "0xAE1F3C")]
public class SplineExtrusion : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200054C")]
	public class Vertex
	{
		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 point;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 normal;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float uCoord;

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xE3AB84", Offset = "0xE3AB84", VA = "0xE3AB84")]
		public Vertex(Vector2 point, Vector2 normal, float uCoord)
		{
		}
	}

	[Token(Token = "0x200054D")]
	public struct OrientedPoint
	{
		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xE3B5B8", Offset = "0xE3B5B8", VA = "0xE3B5B8")]
		public OrientedPoint(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xE3B5CC", Offset = "0xE3B5CC", VA = "0xE3B5CC")]
		public Vector3 LocalToWorld(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xE3B6E0", Offset = "0xE3B6E0", VA = "0xE3B6E0")]
		public Vector3 LocalToWorldDirection(Vector3 dir)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter mf;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Spline spline;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TextureScale;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vertex> ShapeVertices;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool toUpdate;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xE3A990", Offset = "0xE3A990", VA = "0xE3A990")]
	private void Reset()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xE3AD6C", Offset = "0xE3AD6C", VA = "0xE3AD6C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xE3ABE0", Offset = "0xE3ABE0", VA = "0xE3ABE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xE3AD78", Offset = "0xE3AD78", VA = "0xE3AD78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xE3B490", Offset = "0xE3B490", VA = "0xE3B490")]
	private List<OrientedPoint> GetPath()
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xE3ADA4", Offset = "0xE3ADA4", VA = "0xE3ADA4")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xE3B794", Offset = "0xE3B794", VA = "0xE3B794")]
	public SplineExtrusion()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE3B814", Offset = "0xE3B814", VA = "0xE3B814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF710", Offset = "0xAFF710")]
	private void <OnEnable>b__7_0()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE3B820", Offset = "0xE3B820", VA = "0xE3B820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF720", Offset = "0xAFF720")]
	private void <OnEnable>b__7_1()
	{
	}
}
[Token(Token = "0x200015C")]
public class skyboxspace_demo_v1 : MonoBehaviour
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] skyBoxMaterial;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] sunPosition;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int skyBoxLength;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentSkyBoxIndex;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string topText;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float counter;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int frames;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fps;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle whiteStyle;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GUIStyle blackStyle;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sun;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x20B908C", Offset = "0x20B908C", VA = "0x20B908C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x20B9140", Offset = "0x20B9140", VA = "0x20B9140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x20B9298", Offset = "0x20B9298", VA = "0x20B9298", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x20B94A0", Offset = "0x20B94A0", VA = "0x20B94A0")]
	private static void DrawText(string text, TextAnchor anchor, int offsetX = 15, int offsetY = 15)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x20B998C", Offset = "0x20B998C", VA = "0x20B998C")]
	public skyboxspace_demo_v1()
	{
	}
}
[Token(Token = "0x200015D")]
public class skyboxspace_mouselook_v1 : MonoBehaviour
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 clampInDegrees;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 sensitivity;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 smoothing;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 targetDirection;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 targetCharacterDirection;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject characterBody;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x20B9994", Offset = "0x20B9994", VA = "0x20B9994")]
	private void Start()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x20B9B0C", Offset = "0x20B9B0C", VA = "0x20B9B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x20BA0D4", Offset = "0x20BA0D4", VA = "0x20BA0D4")]
	public skyboxspace_mouselook_v1()
	{
	}
}
[Token(Token = "0x200015E")]
public struct GazeEventArgs
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x200015F")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x2000160")]
public class SteamVR_GazeTracker : MonoBehaviour
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000011")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x11037A4", Offset = "0x11037A4", VA = "0x11037A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF730", Offset = "0xAFF730")]
		add
		{
		}
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1103848", Offset = "0x1103848", VA = "0x1103848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF740", Offset = "0xAFF740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x11038EC", Offset = "0x11038EC", VA = "0x11038EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF750", Offset = "0xAFF750")]
		add
		{
		}
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1103990", Offset = "0x1103990", VA = "0x1103990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF760", Offset = "0xAFF760")]
		remove
		{
		}
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1103A34", Offset = "0x1103A34", VA = "0x1103A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1103A38", Offset = "0x1103A38", VA = "0x1103A38", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1103A50", Offset = "0x1103A50", VA = "0x1103A50", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1103A68", Offset = "0x1103A68", VA = "0x1103A68")]
	private void Update()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1103DD0", Offset = "0x1103DD0", VA = "0x1103DD0")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x2000161")]
public struct PointerEventArgs
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x2000162")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x2000163")]
public class SteamVR_LaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000013")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1104CB4", Offset = "0x1104CB4", VA = "0x1104CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF770", Offset = "0xAFF770")]
		add
		{
		}
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1104D58", Offset = "0x1104D58", VA = "0x1104D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF780", Offset = "0xAFF780")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1104DFC", Offset = "0x1104DFC", VA = "0x1104DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF790", Offset = "0xAFF790")]
		add
		{
		}
		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1104EA0", Offset = "0x1104EA0", VA = "0x1104EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7A0", Offset = "0xAFF7A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1104F44", Offset = "0x1104F44", VA = "0x1104F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1105308", Offset = "0x1105308", VA = "0x1105308", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x110534C", Offset = "0x110534C", VA = "0x110534C", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1105390", Offset = "0x1105390", VA = "0x1105390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1105808", Offset = "0x1105808", VA = "0x1105808")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x2000164")]
public class SteamVR_Teleporter : MonoBehaviour
{
	[Token(Token = "0x200054E")]
	public enum TeleportType
	{
		[Token(Token = "0x4002815")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x4002816")]
		TeleportTypeUseCollider,
		[Token(Token = "0x4002817")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x17000042")]
	private Transform reference
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xF5C86C", Offset = "0xF5C86C", VA = "0xF5C86C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xF5C90C", Offset = "0xF5C90C", VA = "0xF5C90C")]
	private void Start()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xF5CB78", Offset = "0xF5CB78", VA = "0xF5CB78")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xF5CF1C", Offset = "0xF5CF1C", VA = "0xF5CF1C")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x2000165")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE2000", Offset = "0xAE2000")]
public class SteamVR_TestThrow : MonoBehaviour
{
	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xF5E034", Offset = "0xF5E034", VA = "0xF5E034")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xF5E08C", Offset = "0xF5E08C", VA = "0xF5E08C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xF5E3C0", Offset = "0xF5E3C0", VA = "0xF5E3C0")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x2000166")]
public class SteamVR_TestTrackedCamera : MonoBehaviour
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xF5E3C8", Offset = "0xF5E3C8", VA = "0xF5E3C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xF5E488", Offset = "0xF5E488", VA = "0xF5E488")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xF5E580", Offset = "0xF5E580", VA = "0xF5E580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xF5E90C", Offset = "0xF5E90C", VA = "0xF5E90C")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x2000167")]
public struct ClickedEventArgs
{
	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x2000168")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x2000169")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000015")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0xF5F610", Offset = "0xF5F610", VA = "0xF5F610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7B0", Offset = "0xAFF7B0")]
		add
		{
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0xF5F6B4", Offset = "0xF5F6B4", VA = "0xF5F6B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7C0", Offset = "0xAFF7C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0xF5F758", Offset = "0xF5F758", VA = "0xF5F758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7D0", Offset = "0xAFF7D0")]
		add
		{
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0xF5F7FC", Offset = "0xF5F7FC", VA = "0xF5F7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7E0", Offset = "0xAFF7E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0xF5CAD4", Offset = "0xF5CAD4", VA = "0xF5CAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF7F0", Offset = "0xAFF7F0")]
		add
		{
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xF5F8A0", Offset = "0xF5F8A0", VA = "0xF5F8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF800", Offset = "0xAFF800")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xF5F944", Offset = "0xF5F944", VA = "0xF5F944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF810", Offset = "0xAFF810")]
		add
		{
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF5F9E8", Offset = "0xF5F9E8", VA = "0xF5F9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF820", Offset = "0xAFF820")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF5FA8C", Offset = "0xF5FA8C", VA = "0xF5FA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF830", Offset = "0xAFF830")]
		add
		{
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xF5FB30", Offset = "0xF5FB30", VA = "0xF5FB30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF840", Offset = "0xAFF840")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xF5FBD4", Offset = "0xF5FBD4", VA = "0xF5FBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF850", Offset = "0xAFF850")]
		add
		{
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xF5FC78", Offset = "0xF5FC78", VA = "0xF5FC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF860", Offset = "0xAFF860")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xF5FD1C", Offset = "0xF5FD1C", VA = "0xF5FD1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF870", Offset = "0xAFF870")]
		add
		{
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xF5FDC0", Offset = "0xF5FDC0", VA = "0xF5FDC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF880", Offset = "0xAFF880")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xF5FE64", Offset = "0xF5FE64", VA = "0xF5FE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF890", Offset = "0xAFF890")]
		add
		{
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xF5FF08", Offset = "0xF5FF08", VA = "0xF5FF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8A0", Offset = "0xAFF8A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xF5FFAC", Offset = "0xF5FFAC", VA = "0xF5FFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8B0", Offset = "0xAFF8B0")]
		add
		{
		}
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xF60050", Offset = "0xF60050", VA = "0xF60050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8C0", Offset = "0xAFF8C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xF600F4", Offset = "0xF600F4", VA = "0xF600F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8D0", Offset = "0xAFF8D0")]
		add
		{
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xF60198", Offset = "0xF60198", VA = "0xF60198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8E0", Offset = "0xAFF8E0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xF6023C", Offset = "0xF6023C", VA = "0xF6023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF8F0", Offset = "0xAFF8F0")]
		add
		{
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xF602E0", Offset = "0xF602E0", VA = "0xF602E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF900", Offset = "0xAFF900")]
		remove
		{
		}
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF60384", Offset = "0xF60384", VA = "0xF60384", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF604D0", Offset = "0xF604D0", VA = "0xF604D0")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF604D8", Offset = "0xF604D8", VA = "0xF604D8", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xF604FC", Offset = "0xF604FC", VA = "0xF604FC", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF60520", Offset = "0xF60520", VA = "0xF60520", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF60544", Offset = "0xF60544", VA = "0xF60544", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF60568", Offset = "0xF60568", VA = "0xF60568", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xF6058C", Offset = "0xF6058C", VA = "0xF6058C", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xF605B0", Offset = "0xF605B0", VA = "0xF605B0", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xF605D4", Offset = "0xF605D4", VA = "0xF605D4", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF605F8", Offset = "0xF605F8", VA = "0xF605F8", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF6061C", Offset = "0xF6061C", VA = "0xF6061C", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF60640", Offset = "0xF60640", VA = "0xF60640", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF60664", Offset = "0xF60664", VA = "0xF60664", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF6095C", Offset = "0xF6095C", VA = "0xF6095C")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x200016A")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA900", Offset = "0xAEA900")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA910", Offset = "0xAEA910")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA920", Offset = "0xAEA920")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA930", Offset = "0xAEA930")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA940", Offset = "0xAEA940")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA950", Offset = "0xAEA950")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA960", Offset = "0xAEA960")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA970", Offset = "0xAEA970")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA980", Offset = "0xAEA980")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA990", Offset = "0xAEA990")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA9A0", Offset = "0xAEA9A0")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA9B0", Offset = "0xAEA9B0")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA9C0", Offset = "0xAEA9C0")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000043")]
	public static bool active
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x10F9774", Offset = "0x10F9774", VA = "0x10F9774")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	public static bool enabled
	{
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x10F97E4", Offset = "0x10F97E4", VA = "0x10F97E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x10F9880", Offset = "0x10F9880", VA = "0x10F9880")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public static SteamVR instance
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0x10F99C4", Offset = "0x10F99C4", VA = "0x10F99C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x10F9D04", Offset = "0x10F9D04", VA = "0x10F9D04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x10FA6D4", Offset = "0x10FA6D4", VA = "0x10FA6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF910", Offset = "0xAFF910")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x10FA6DC", Offset = "0x10FA6DC", VA = "0x10FA6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF920", Offset = "0xAFF920")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x10FA6E4", Offset = "0x10FA6E4", VA = "0x10FA6E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF930", Offset = "0xAFF930")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x10FA6EC", Offset = "0x10FA6EC", VA = "0x10FA6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF940", Offset = "0xAFF940")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x10FA6F4", Offset = "0x10FA6F4", VA = "0x10FA6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF950", Offset = "0xAFF950")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x10FA6FC", Offset = "0x10FA6FC", VA = "0x10FA6FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF960", Offset = "0xAFF960")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static bool initializing
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x10FA704", Offset = "0x10FA704", VA = "0x10FA704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF970", Offset = "0xAFF970")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x10FA76C", Offset = "0x10FA76C", VA = "0x10FA76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF980", Offset = "0xAFF980")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static bool calibrating
	{
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x10FA7DC", Offset = "0x10FA7DC", VA = "0x10FA7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF990", Offset = "0xAFF990")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600097C")]
		[Address(RVA = "0x10FA844", Offset = "0x10FA844", VA = "0x10FA844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9A0", Offset = "0xAFF9A0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static bool outOfRange
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x10FA8B4", Offset = "0x10FA8B4", VA = "0x10FA8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9B0", Offset = "0xAFF9B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600097E")]
		[Address(RVA = "0x10FA91C", Offset = "0x10FA91C", VA = "0x10FA91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9C0", Offset = "0xAFF9C0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float sceneWidth
	{
		[Token(Token = "0x600097F")]
		[Address(RVA = "0x10FA98C", Offset = "0x10FA98C", VA = "0x10FA98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9D0", Offset = "0xAFF9D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000980")]
		[Address(RVA = "0x10FA994", Offset = "0x10FA994", VA = "0x10FA994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9E0", Offset = "0xAFF9E0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float sceneHeight
	{
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x10FA99C", Offset = "0x10FA99C", VA = "0x10FA99C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFF9F0", Offset = "0xAFF9F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x10FA9A4", Offset = "0x10FA9A4", VA = "0x10FA9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA00", Offset = "0xAFFA00")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float aspect
	{
		[Token(Token = "0x6000983")]
		[Address(RVA = "0x10FA9AC", Offset = "0x10FA9AC", VA = "0x10FA9AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA10", Offset = "0xAFFA10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x10FA9B4", Offset = "0x10FA9B4", VA = "0x10FA9B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA20", Offset = "0xAFFA20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float fieldOfView
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x10FA9BC", Offset = "0x10FA9BC", VA = "0x10FA9BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA30", Offset = "0xAFFA30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x10FA9C4", Offset = "0x10FA9C4", VA = "0x10FA9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA40", Offset = "0xAFFA40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x10FA9CC", Offset = "0x10FA9CC", VA = "0x10FA9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA50", Offset = "0xAFFA50")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x10FA9D4", Offset = "0x10FA9D4", VA = "0x10FA9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA60", Offset = "0xAFFA60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x10FA9DC", Offset = "0x10FA9DC", VA = "0x10FA9DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA70", Offset = "0xAFFA70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x10FA9E4", Offset = "0x10FA9E4", VA = "0x10FA9E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA80", Offset = "0xAFFA80")]
		private set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x10FA9EC", Offset = "0x10FA9EC", VA = "0x10FA9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFA90", Offset = "0xAFFA90")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x10FA9F4", Offset = "0x10FA9F4", VA = "0x10FA9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFAA0", Offset = "0xAFFAA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x600098D")]
		[Address(RVA = "0x10FA9FC", Offset = "0x10FA9FC", VA = "0x10FA9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x10FAB50", Offset = "0x10FAB50", VA = "0x10FAB50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x10FAB5C", Offset = "0x10FAB5C", VA = "0x10FAB5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x10FAB68", Offset = "0x10FAB68", VA = "0x10FAB68")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000058")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x10FABB4", Offset = "0x10FABB4", VA = "0x10FABB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x10F9ADC", Offset = "0x10F9ADC", VA = "0x10F9ADC")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x10F9D70", Offset = "0x10F9D70", VA = "0x10F9D70")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x10FABC0", Offset = "0x10FABC0", VA = "0x10FABC0")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x10FAA08", Offset = "0x10FAA08", VA = "0x10FAA08")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x10FAB74", Offset = "0x10FAB74", VA = "0x10FAB74")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x10FACA8", Offset = "0x10FACA8", VA = "0x10FACA8")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x10FAD5C", Offset = "0x10FAD5C", VA = "0x10FAD5C")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x10FAE10", Offset = "0x10FAE10", VA = "0x10FAE10")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x10FAEC4", Offset = "0x10FAEC4", VA = "0x10FAEC4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x10FAF68", Offset = "0x10FAF68", VA = "0x10FAF68")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x10F9EC4", Offset = "0x10F9EC4", VA = "0x10F9EC4")]
	private SteamVR()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x10FB414", Offset = "0x10FB414", VA = "0x10FB414", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x10FB6C4", Offset = "0x10FB6C4", VA = "0x10FB6C4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x10FB480", Offset = "0x10FB480", VA = "0x10FB480")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x10F9920", Offset = "0x10F9920", VA = "0x10F9920")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE2064", Offset = "0xAE2064")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEA9E0", Offset = "0xAEA9E0")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x4000AE1")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4000AE2")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x4000AE3")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x4000AE4")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x17000059")]
	public Transform head
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x10FB7AC", Offset = "0x10FB7AC", VA = "0x10FB7AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public Transform offset
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x10FB7B4", Offset = "0x10FB7B4", VA = "0x10FB7B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public Transform origin
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x10FB7BC", Offset = "0x10FB7BC", VA = "0x10FB7BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public Camera camera
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x10FB7D8", Offset = "0x10FB7D8", VA = "0x10FB7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFAB0", Offset = "0xAFFAB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x10FB7E0", Offset = "0x10FB7E0", VA = "0x10FB7E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFAC0", Offset = "0xAFFAC0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public Transform ears
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x10FB7E8", Offset = "0x10FB7E8", VA = "0x10FB7E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x10FB878", Offset = "0x10FB878", VA = "0x10FB878")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x10FB880", Offset = "0x10FB880", VA = "0x10FB880")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public string baseName
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x10FCA84", Offset = "0x10FCA84", VA = "0x10FCA84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x10FB7F0", Offset = "0x10FB7F0", VA = "0x10FB7F0")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x10FB888", Offset = "0x10FB888", VA = "0x10FB888")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x10FB938", Offset = "0x10FB938", VA = "0x10FB938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x10FC430", Offset = "0x10FC430", VA = "0x10FC430")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x10FC48C", Offset = "0x10FC48C", VA = "0x10FC48C")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x10FBC90", Offset = "0x10FBC90", VA = "0x10FBC90")]
	public void Expand()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x10FCB54", Offset = "0x10FCB54", VA = "0x10FCB54")]
	public void Collapse()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x10FCF54", Offset = "0x10FCF54", VA = "0x10FCF54")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x200016C")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x10FCF5C", Offset = "0x10FCF5C", VA = "0x10FCF5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x10FCFF8", Offset = "0x10FCFF8", VA = "0x10FCFF8")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x200016D")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x10FD000", Offset = "0x10FD000", VA = "0x10FD000")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x10FD09C", Offset = "0x10FD09C", VA = "0x10FD09C")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x200016E")]
public class SteamVR_Controller
{
	[Token(Token = "0x200054F")]
	public class ButtonMask
	{
		[Token(Token = "0x4002818")]
		public const ulong System = 1uL;

		[Token(Token = "0x4002819")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x400281A")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x400281B")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x400281C")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x400281D")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x400281E")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x400281F")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4002820")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002821")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x10FD7D0", Offset = "0x10FD7D0", VA = "0x10FD7D0")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x2000550")]
	public class Device
	{
		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E18", Offset = "0xAF8E18")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E28", Offset = "0xAF8E28")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x1700028C")]
		public uint index
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x10FD7D8", Offset = "0x10FD7D8", VA = "0x10FD7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB096C8", Offset = "0xB096C8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002366")]
			[Address(RVA = "0x10FD7E0", Offset = "0x10FD7E0", VA = "0x10FD7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB096D8", Offset = "0xB096D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public bool valid
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0x10FD7E8", Offset = "0x10FD7E8", VA = "0x10FD7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB096E8", Offset = "0xB096E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x10FD7F0", Offset = "0x10FD7F0", VA = "0x10FD7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB096F8", Offset = "0xB096F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public bool connected
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0x10FD7A4", Offset = "0x10FD7A4", VA = "0x10FD7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public bool hasTracking
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0x10FD7FC", Offset = "0x10FD7FC", VA = "0x10FD7FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public bool outOfRange
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0x10FD820", Offset = "0x10FD820", VA = "0x10FD820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		public bool calibrating
		{
			[Token(Token = "0x600236C")]
			[Address(RVA = "0x10FD858", Offset = "0x10FD858", VA = "0x10FD858")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000292")]
		public bool uninitialized
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0x10FD888", Offset = "0x10FD888", VA = "0x10FD888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000293")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x10FD748", Offset = "0x10FD748", VA = "0x10FD748")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000294")]
		public Vector3 velocity
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x10FD8B4", Offset = "0x10FD8B4", VA = "0x10FD8B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000295")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x10FD904", Offset = "0x10FD904", VA = "0x10FD904")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x10FD1F0", Offset = "0x10FD1F0", VA = "0x10FD1F0")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x10FD958", Offset = "0x10FD958", VA = "0x10FD958")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x10FD994", Offset = "0x10FD994", VA = "0x10FD994")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x10FD9D0", Offset = "0x10FD9D0", VA = "0x10FD9D0")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x10FD264", Offset = "0x10FD264", VA = "0x10FD264")]
		public void Update()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x10FDC34", Offset = "0x10FDC34", VA = "0x10FDC34")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x10FDC64", Offset = "0x10FDC64", VA = "0x10FDC64")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x10FDCA8", Offset = "0x10FDCA8", VA = "0x10FDCA8")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x10FDCEC", Offset = "0x10FDCEC", VA = "0x10FDCEC")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x10FDD20", Offset = "0x10FDD20", VA = "0x10FDD20")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x10FDD68", Offset = "0x10FDD68", VA = "0x10FDD68")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x10FDDB0", Offset = "0x10FDDB0", VA = "0x10FDDB0")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x10FDDE0", Offset = "0x10FDDE0", VA = "0x10FDDE0")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x10FDE24", Offset = "0x10FDE24", VA = "0x10FDE24")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x10FDE68", Offset = "0x10FDE68", VA = "0x10FDE68")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x10FDE9C", Offset = "0x10FDE9C", VA = "0x10FDE9C")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x10FDEE4", Offset = "0x10FDEE4", VA = "0x10FDEE4")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x10FDF2C", Offset = "0x10FDF2C", VA = "0x10FDF2C")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x10FE008", Offset = "0x10FE008", VA = "0x10FE008")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x10FDB34", Offset = "0x10FDB34", VA = "0x10FDB34")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x10FE0A4", Offset = "0x10FE0A4", VA = "0x10FE0A4")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x10FE0C8", Offset = "0x10FE0C8", VA = "0x10FE0C8")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x10FE104", Offset = "0x10FE104", VA = "0x10FE104")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000551")]
	public enum DeviceRelation
	{
		[Token(Token = "0x400282D")]
		First,
		[Token(Token = "0x400282E")]
		Leftmost,
		[Token(Token = "0x400282F")]
		Rightmost,
		[Token(Token = "0x4002830")]
		FarthestLeft,
		[Token(Token = "0x4002831")]
		FarthestRight
	}

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x10FD0A4", Offset = "0x10FD0A4", VA = "0x10FD0A4")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x10FD228", Offset = "0x10FD228", VA = "0x10FD228")]
	public static void Update()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x10FD3EC", Offset = "0x10FD3EC", VA = "0x10FD3EC")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x10FD7C8", Offset = "0x10FD7C8", VA = "0x10FD7C8")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x200016F")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAA00", Offset = "0xAEAA00")]
	public GameObject[] objects;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAA38", Offset = "0xAEAA38")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x10FE140", Offset = "0x10FE140", VA = "0x10FE140")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x10FE254", Offset = "0x10FE254", VA = "0x10FE254")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x10FE390", Offset = "0x10FE390", VA = "0x10FE390")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x10FE394", Offset = "0x10FE394", VA = "0x10FE394")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x10FE6D8", Offset = "0x10FE6D8", VA = "0x10FE6D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x10FEC8C", Offset = "0x10FEC8C", VA = "0x10FEC8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x10FECF0", Offset = "0x10FECF0", VA = "0x10FECF0")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x10FF0A0", Offset = "0x10FF0A0", VA = "0x10FF0A0")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x10FEFAC", Offset = "0x10FEFAC", VA = "0x10FEFAC")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x10FF210", Offset = "0x10FF210", VA = "0x10FF210")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x10FF45C", Offset = "0x10FF45C", VA = "0x10FF45C")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x10FEB68", Offset = "0x10FEB68", VA = "0x10FEB68")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x10FE8B8", Offset = "0x10FE8B8", VA = "0x10FE8B8")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE20E8", Offset = "0xAE20E8")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x10FF584", Offset = "0x10FF584", VA = "0x10FF584")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x10FF6F8", Offset = "0x10FF6F8", VA = "0x10FF6F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x10FF89C", Offset = "0x10FF89C", VA = "0x10FF89C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x10FF970", Offset = "0x10FF970", VA = "0x10FF970")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000171")]
public static class SteamVR_Events
{
	[Token(Token = "0x2000552")]
	public abstract class Action
	{
		[Token(Token = "0x17000296")]
		public bool enabled
		{
			[Token(Token = "0x6002388")]
			[Address(RVA = "0x10FEC7C", Offset = "0x10FEC7C", VA = "0x10FEC7C")]
			set
			{
			}
		}

		[Token(Token = "0x6002387")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x110050C", Offset = "0x110050C", VA = "0x110050C")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000553")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x10FFB58", Offset = "0x10FFB58", VA = "0x10FFB58")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x1100514", Offset = "0x1100514", VA = "0x1100514", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000554")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x600238C")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x600238D")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000555")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x600238E")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600238F")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000556")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6002390")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002391")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x2000557")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6002392")]
		[Address(RVA = "0x10FF894", Offset = "0x10FF894", VA = "0x10FF894")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x10FF968", Offset = "0x10FF968", VA = "0x10FF968")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1100544", Offset = "0x1100544", VA = "0x1100544")]
		public void Send()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x1100504", Offset = "0x1100504", VA = "0x1100504")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000558")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6002396")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002397")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002398")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6002399")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000559")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x600239A")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600239B")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600239C")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600239D")]
		public Event()
		{
		}
	}

	[Token(Token = "0x200055A")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x600239E")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600239F")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60023A0")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60023A1")]
		public Event()
		{
		}
	}

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x10FF978", Offset = "0x10FF978", VA = "0x10FF978")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x10FE588", Offset = "0x10FE588", VA = "0x10FE588")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x10FFA1C", Offset = "0x10FFA1C", VA = "0x10FFA1C")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x10FFAC0", Offset = "0x10FFAC0", VA = "0x10FFAC0")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x10FFB90", Offset = "0x10FFB90", VA = "0x10FFB90")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x10FFC34", Offset = "0x10FFC34", VA = "0x10FFC34")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x10FE4E4", Offset = "0x10FE4E4", VA = "0x10FE4E4")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x10FFCD8", Offset = "0x10FFCD8", VA = "0x10FFCD8")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x10FFD7C", Offset = "0x10FFD7C", VA = "0x10FFD7C")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x10FFE20", Offset = "0x10FFE20", VA = "0x10FFE20")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x10FFEC4", Offset = "0x10FFEC4", VA = "0x10FFEC4")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x10FFF68", Offset = "0x10FFF68", VA = "0x10FFF68")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1100000", Offset = "0x1100000", VA = "0x1100000")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x11000A4", Offset = "0x11000A4", VA = "0x11000A4")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1100148", Offset = "0x1100148", VA = "0x1100148")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x10FE62C", Offset = "0x10FE62C", VA = "0x10FE62C")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x2000172")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055B")]
	public struct Config
	{
		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x110054C", Offset = "0x110054C", VA = "0x110054C")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1100E54", Offset = "0x1100E54", VA = "0x1100E54")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1100E58", Offset = "0x1100E58", VA = "0x1100E58")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1101408", Offset = "0x1101408", VA = "0x1101408")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x11016B4", Offset = "0x11016B4", VA = "0x11016B4")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1101E0C", Offset = "0x1101E0C", VA = "0x1101E0C")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1101F2C", Offset = "0x1101F2C", VA = "0x1101F2C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1101F30", Offset = "0x1101F30", VA = "0x1101F30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1102180", Offset = "0x1102180", VA = "0x1102180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x11022BC", Offset = "0x11022BC", VA = "0x11022BC")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x2000173")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x11022C4", Offset = "0x11022C4", VA = "0x11022C4")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1102388", Offset = "0x1102388", VA = "0x1102388")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1102450", Offset = "0x1102450", VA = "0x1102450")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x11024B8", Offset = "0x11024B8", VA = "0x11024B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1102678", Offset = "0x1102678", VA = "0x1102678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x110273C", Offset = "0x110273C", VA = "0x110273C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1102A64", Offset = "0x1102A64", VA = "0x1102A64")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x2000174")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE214C", Offset = "0xAE214C")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1102B6C", Offset = "0x1102B6C", VA = "0x1102B6C")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1103354", Offset = "0x1103354", VA = "0x1103354")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1103510", Offset = "0x1103510", VA = "0x1103510")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x11035F8", Offset = "0x11035F8", VA = "0x11035F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x11036E0", Offset = "0x11036E0", VA = "0x11036E0")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x2000175")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1103700", Offset = "0x1103700", VA = "0x1103700")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x110379C", Offset = "0x110379C", VA = "0x110379C")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x2000176")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1103DE4", Offset = "0x1103DE4", VA = "0x1103DE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x110478C", Offset = "0x110478C", VA = "0x110478C")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1104CA4", Offset = "0x1104CA4", VA = "0x1104CA4")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x2000177")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6254", Offset = "0xAE6254")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x11075E8", Offset = "0x11075E8", VA = "0x11075E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x1107650", Offset = "0x1107650", VA = "0x1107650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1106614", Offset = "0x1106614", VA = "0x1106614")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1106790", Offset = "0x1106790", VA = "0x1106790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1106794", Offset = "0x1106794", VA = "0x1106794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x11075F0", Offset = "0x11075F0", VA = "0x11075F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x17000060")]
	public static bool loading
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1105824", Offset = "0x1105824", VA = "0x1105824")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	public static float progress
	{
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x11058BC", Offset = "0x11058BC", VA = "0x11058BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000062")]
	public static Texture progressTexture
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x11059D0", Offset = "0x11059D0", VA = "0x11059D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1105AA8", Offset = "0x1105AA8", VA = "0x1105AA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x1105AB8", Offset = "0x1105AB8", VA = "0x1105AB8")]
	public void Trigger()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1105BC0", Offset = "0x1105BC0", VA = "0x1105BC0")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1105CCC", Offset = "0x1105CCC", VA = "0x1105CCC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x11064AC", Offset = "0x11064AC", VA = "0x11064AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1105B50", Offset = "0x1105B50", VA = "0x1105B50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFAD0", Offset = "0xAFFAD0")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1106110", Offset = "0x1106110", VA = "0x1106110")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1106728", Offset = "0x1106728", VA = "0x1106728")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000178")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEAAA0", Offset = "0xAEAAA0")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000063")]
	public RenderTexture texture
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1107658", Offset = "0x1107658", VA = "0x1107658")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public float scale
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1107724", Offset = "0x1107724", VA = "0x1107724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFB34", Offset = "0xAFFB34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x110772C", Offset = "0x110772C", VA = "0x110772C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFB44", Offset = "0xAFFB44")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1107734", Offset = "0x1107734", VA = "0x1107734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x110789C", Offset = "0x110789C", VA = "0x110789C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1109458", Offset = "0x1109458", VA = "0x1109458")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1109354", Offset = "0x1109354", VA = "0x1109354")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x1109810", Offset = "0x1109810", VA = "0x1109810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x1109268", Offset = "0x1109268", VA = "0x1109268")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x11097A8", Offset = "0x11097A8", VA = "0x11097A8")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x11097E0", Offset = "0x11097E0", VA = "0x11097E0")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x11099E0", Offset = "0x11099E0", VA = "0x11099E0")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000179")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x200055D")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAAB0", Offset = "0xAEAAB0")]
	public float scale;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAAE8", Offset = "0xAEAAE8")]
	public float distance;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAB20", Offset = "0xAEAB20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEAB20", Offset = "0xAEAB20")]
	public float alpha;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEAB74", Offset = "0xAEAB74")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x17000065")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1109A34", Offset = "0x1109A34", VA = "0x1109A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFB54", Offset = "0xAFFB54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1109A84", Offset = "0x1109A84", VA = "0x1109A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFB64", Offset = "0xAFFB64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public static string key
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1106640", Offset = "0x1106640", VA = "0x1106640")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1109AD8", Offset = "0x1109AD8", VA = "0x1109AD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1109C28", Offset = "0x1109C28", VA = "0x1109C28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1109CE4", Offset = "0x1109CE4", VA = "0x1109CE4")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x110A120", Offset = "0x110A120", VA = "0x110A120")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x110A22C", Offset = "0x110A22C", VA = "0x110A22C")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x110A3E8", Offset = "0x110A3E8", VA = "0x110A3E8")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x200017A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE21EC", Offset = "0xAE21EC")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x200055E")]
	public enum Size
	{
		[Token(Token = "0x4002859")]
		Calibrated,
		[Token(Token = "0x400285A")]
		_400x300,
		[Token(Token = "0x400285B")]
		_300x225,
		[Token(Token = "0x400285C")]
		_200x150
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6264", Offset = "0xAE6264")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x110B5C4", Offset = "0x110B5C4", VA = "0x110B5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0x110B62C", Offset = "0x110B62C", VA = "0x110B62C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x110B450", Offset = "0x110B450", VA = "0x110B450")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x110B4C4", Offset = "0x110B4C4", VA = "0x110B4C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x110B4C8", Offset = "0x110B4C8", VA = "0x110B4C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x110B5CC", Offset = "0x110B5CC", VA = "0x110B5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x110A4B0", Offset = "0x110A4B0", VA = "0x110A4B0")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x110A840", Offset = "0x110A840", VA = "0x110A840")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x110B088", Offset = "0x110B088", VA = "0x110B088")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x110B31C", Offset = "0x110B31C", VA = "0x110B31C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x110B098", Offset = "0x110B098", VA = "0x110B098")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x110B32C", Offset = "0x110B32C", VA = "0x110B32C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x110B3E0", Offset = "0x110B3E0", VA = "0x110B3E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFB74", Offset = "0xAFFB74")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x110B47C", Offset = "0x110B47C", VA = "0x110B47C")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x200017B")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6274", Offset = "0xAE6274")]
	private sealed class <RenderLoop>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700029B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x110CE9C", Offset = "0x110CE9C", VA = "0x110CE9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x110CF04", Offset = "0x110CF04", VA = "0x110CF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x110BC60", Offset = "0x110BC60", VA = "0x110BC60")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x110CCF8", Offset = "0x110CCF8", VA = "0x110CCF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x110CCFC", Offset = "0x110CCFC", VA = "0x110CCFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x110CEA4", Offset = "0x110CEA4", VA = "0x110CEA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEAB94", Offset = "0xAEAB94")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x17000067")]
	public static EVREye eye
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x110B634", Offset = "0x110B634", VA = "0x110B634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFBD8", Offset = "0xAFFBD8")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x110B684", Offset = "0x110B684", VA = "0x110B684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFBE8", Offset = "0xAFFBE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x10FDA00", Offset = "0x10FDA00", VA = "0x10FDA00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x110BBA0", Offset = "0x110BBA0", VA = "0x110BBA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1107550", Offset = "0x1107550", VA = "0x1107550")]
		set
		{
		}
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x110B6D8", Offset = "0x110B6D8", VA = "0x110B6D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x110B728", Offset = "0x110B728", VA = "0x110B728")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x10FC3BC", Offset = "0x10FC3BC", VA = "0x10FC3BC")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x10FB88C", Offset = "0x10FB88C", VA = "0x10FB88C")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x11066B8", Offset = "0x11066B8", VA = "0x11066B8")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x110B79C", Offset = "0x110B79C", VA = "0x110B79C")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x110B9A0", Offset = "0x110B9A0", VA = "0x110B9A0")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x110BB54", Offset = "0x110BB54", VA = "0x110BB54")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x110BBF0", Offset = "0x110BBF0", VA = "0x110BBF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFBF8", Offset = "0xAFFBF8")]
	private IEnumerator<float> RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x110BC8C", Offset = "0x110BC8C", VA = "0x110BC8C")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x110BDE0", Offset = "0x110BDE0", VA = "0x110BDE0")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x110BE50", Offset = "0x110BE50", VA = "0x110BE50")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x110BE58", Offset = "0x110BE58", VA = "0x110BE58")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x110BFA4", Offset = "0x110BFA4", VA = "0x110BFA4")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x110C184", Offset = "0x110C184", VA = "0x110C184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x110C424", Offset = "0x110C424", VA = "0x110C424")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x110C5DC", Offset = "0x110C5DC", VA = "0x110C5DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x110C740", Offset = "0x110C740", VA = "0x110C740")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x110C820", Offset = "0x110C820", VA = "0x110C820")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x110C824", Offset = "0x110C824", VA = "0x110C824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x110CC28", Offset = "0x110CC28", VA = "0x110CC28")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x200017C")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000561")]
	public class RenderModel
	{
		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E38", Offset = "0xAF8E38")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E48", Offset = "0xAF8E48")]
		private Material <material>k__BackingField;

		[Token(Token = "0x1700029D")]
		public Mesh mesh
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xF5BC98", Offset = "0xF5BC98", VA = "0xF5BC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB097F8", Offset = "0xB097F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xF5BCA0", Offset = "0xF5BCA0", VA = "0xF5BCA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09808", Offset = "0xB09808")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public Material material
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xF5BCA8", Offset = "0xF5BCA8", VA = "0xF5BCA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09818", Offset = "0xB09818")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xF5BCB0", Offset = "0xF5BCB0", VA = "0xF5BCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09828", Offset = "0xB09828")]
			private set
			{
			}
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xF5BC60", Offset = "0xF5BC60", VA = "0xF5BC60")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x2000562")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x1700029F")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0xF5BCB8", Offset = "0xF5BCB8", VA = "0xF5BCB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xF5BE24", Offset = "0xF5BE24", VA = "0xF5BE24", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xF5BE9C", Offset = "0xF5BE9C", VA = "0xF5BE9C")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6284", Offset = "0xAE6284")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x11104A4", Offset = "0x11104A4", VA = "0x11104A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x111050C", Offset = "0x111050C", VA = "0x111050C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x110D364", Offset = "0x110D364", VA = "0x110D364")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x110FB18", Offset = "0x110FB18", VA = "0x110FB18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x110FBF4", Offset = "0x110FBF4", VA = "0x110FBF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x110FB34", Offset = "0x110FB34", VA = "0x110FB34")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x11104AC", Offset = "0x11104AC", VA = "0x11104AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6294", Offset = "0xAE6294")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x110FAA8", Offset = "0x110FAA8", VA = "0x110FAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x110FB10", Offset = "0x110FB10", VA = "0x110FB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x110F3F8", Offset = "0x110F3F8", VA = "0x110F3F8")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x110F928", Offset = "0x110F928", VA = "0x110F928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x110F92C", Offset = "0x110F92C", VA = "0x110F92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x110FAB0", Offset = "0x110FAB0", VA = "0x110FAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000B80")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEABA4", Offset = "0xAEABA4")]
	public string modelOverride;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEABDC", Offset = "0xAEABDC")]
	public Shader shader;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAC14", Offset = "0xAEAC14")]
	public bool verbose;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAC4C", Offset = "0xAEAC4C")]
	public bool createComponents;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAC84", Offset = "0xAEAC84")]
	public bool updateDynamically;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x4000B87")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEACBC", Offset = "0xAEACBC")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x1700006A")]
	public string renderModelName
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x110CF68", Offset = "0x110CF68", VA = "0x110CF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFC5C", Offset = "0xAFFC5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x110CF70", Offset = "0x110CF70", VA = "0x110CF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFC6C", Offset = "0xAFFC6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x110CF78", Offset = "0x110CF78", VA = "0x110CF78")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x110D19C", Offset = "0x110D19C", VA = "0x110D19C")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x110D2D0", Offset = "0x110D2D0", VA = "0x110D2D0")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x110CFE8", Offset = "0x110CFE8", VA = "0x110CFE8")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x110D2E8", Offset = "0x110D2E8", VA = "0x110D2E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFC7C", Offset = "0xAFFC7C")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x110D390", Offset = "0x110D390", VA = "0x110D390")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x110E490", Offset = "0x110E490", VA = "0x110E490")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x110F388", Offset = "0x110F388", VA = "0x110F388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFCE0", Offset = "0xAFFCE0")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x110F424", Offset = "0x110F424", VA = "0x110F424")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x110D850", Offset = "0x110D850", VA = "0x110D850")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x110D98C", Offset = "0x110D98C", VA = "0x110D98C")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x110F4C0", Offset = "0x110F4C0", VA = "0x110F4C0")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x110F600", Offset = "0x110F600", VA = "0x110F600")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x110F728", Offset = "0x110F728", VA = "0x110F728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x110F78C", Offset = "0x110F78C", VA = "0x110F78C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x110E04C", Offset = "0x110E04C", VA = "0x110E04C")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x110F810", Offset = "0x110F810", VA = "0x110F810")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x110EF78", Offset = "0x110EF78", VA = "0x110EF78")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x110EF84", Offset = "0x110EF84", VA = "0x110EF84")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x110F18C", Offset = "0x110F18C", VA = "0x110F18C")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x200017D")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x2000565")]
	public enum CellSize
	{
		[Token(Token = "0x4002874")]
		x1024,
		[Token(Token = "0x4002875")]
		x64,
		[Token(Token = "0x4002876")]
		x32,
		[Token(Token = "0x4002877")]
		x16,
		[Token(Token = "0x4002878")]
		x8
	}

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xF5BEA4", Offset = "0xF5BEA4", VA = "0xF5BEA4")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xF5BEF8", Offset = "0xF5BEF8", VA = "0xF5BEF8")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xF5BF54", Offset = "0xF5BF54", VA = "0xF5BF54")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xF5C2EC", Offset = "0xF5C2EC", VA = "0xF5C2EC")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xF5C364", Offset = "0xF5C364", VA = "0xF5C364")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xF5C378", Offset = "0xF5C378", VA = "0xF5C378")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xF5C37C", Offset = "0xF5C37C", VA = "0xF5C37C")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x200017E")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xF5C390", Offset = "0xF5C390", VA = "0xF5C390")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xF5C730", Offset = "0xF5C730", VA = "0xF5C730")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xF5C7C0", Offset = "0xF5C7C0", VA = "0xF5C7C0")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x200017F")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xF5C7C8", Offset = "0xF5C7C8", VA = "0xF5C7C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xF5C864", Offset = "0xF5C864", VA = "0xF5C864")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000180")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xF5CF2C", Offset = "0xF5CF2C", VA = "0xF5CF2C")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xF5D4E0", Offset = "0xF5D4E0", VA = "0xF5D4E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xF5D5A4", Offset = "0xF5D5A4", VA = "0xF5D5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xF5D0E0", Offset = "0xF5D0E0", VA = "0xF5D0E0")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xF5D668", Offset = "0xF5D668", VA = "0xF5D668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xF5DF48", Offset = "0xF5DF48", VA = "0xF5DF48")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000181")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x2000566")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E58", Offset = "0xAF8E58")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E68", Offset = "0xAF8E68")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x170002A4")]
		public bool undistorted
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xF5EF50", Offset = "0xF5EF50", VA = "0xF5EF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB098D8", Offset = "0xB098D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023CB")]
			[Address(RVA = "0xF5EF58", Offset = "0xF5EF58", VA = "0xF5EF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB098E8", Offset = "0xB098E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public uint deviceIndex
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xF5EF64", Offset = "0xF5EF64", VA = "0xF5EF64")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002A6")]
		public bool hasCamera
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xF5E46C", Offset = "0xF5E46C", VA = "0xF5E46C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A7")]
		public bool hasTracking
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xF5E890", Offset = "0xF5E890", VA = "0xF5E890")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A8")]
		public uint frameId
		{
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xF5F2DC", Offset = "0xF5F2DC", VA = "0xF5F2DC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002A9")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xF5F300", Offset = "0xF5F300", VA = "0xF5F300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB098F8", Offset = "0xB098F8")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xF5F30C", Offset = "0xF5F30C", VA = "0xF5F30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09908", Offset = "0xB09908")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xF5F318", Offset = "0xF5F318", VA = "0xF5F318")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x170002AB")]
		public Texture2D texture
		{
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0xF5E86C", Offset = "0xF5E86C", VA = "0xF5E86C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xF5E8B4", Offset = "0xF5E8B4", VA = "0xF5E8B4")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002AD")]
		public Vector3 velocity
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xF5F53C", Offset = "0xF5F53C", VA = "0xF5F53C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AE")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xF5F58C", Offset = "0xF5F58C", VA = "0xF5F58C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xF5EA6C", Offset = "0xF5EA6C", VA = "0xF5EA6C")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xF5F5E0", Offset = "0xF5F5E0", VA = "0xF5F5E0")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xF5E454", Offset = "0xF5E454", VA = "0xF5E454")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xF5E4DC", Offset = "0xF5E4DC", VA = "0xF5E4DC")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xF5EF80", Offset = "0xF5EF80", VA = "0xF5EF80")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x2000567")]
	private class VideoStream
	{
		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8E78", Offset = "0xAF8E78")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x170002AF")]
		public uint deviceIndex
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xF5EDEC", Offset = "0xF5EDEC", VA = "0xF5EDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09918", Offset = "0xB09918")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xF5EDF4", Offset = "0xF5EDF4", VA = "0xF5EDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB09928", Offset = "0xB09928")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public ulong handle
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xF5EDFC", Offset = "0xF5EDFC", VA = "0xF5EDFC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002B1")]
		public bool hasCamera
		{
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xF5EE04", Offset = "0xF5EE04", VA = "0xF5EE04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xF5ED40", Offset = "0xF5ED40", VA = "0xF5ED40")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xF5EE0C", Offset = "0xF5EE0C", VA = "0xF5EE0C")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xF5EEAC", Offset = "0xF5EEAC", VA = "0xF5EEAC")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xF5E91C", Offset = "0xF5E91C", VA = "0xF5E91C")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xF5EABC", Offset = "0xF5EABC", VA = "0xF5EABC")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xF5E440", Offset = "0xF5E440", VA = "0xF5E440")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xF5EC0C", Offset = "0xF5EC0C", VA = "0xF5EC0C")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xF5EDE4", Offset = "0xF5EDE4", VA = "0xF5EDE4")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x2000182")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x2000568")]
	public enum EIndex
	{
		[Token(Token = "0x4002885")]
		None = -1,
		[Token(Token = "0x4002886")]
		Hmd,
		[Token(Token = "0x4002887")]
		Device1,
		[Token(Token = "0x4002888")]
		Device2,
		[Token(Token = "0x4002889")]
		Device3,
		[Token(Token = "0x400288A")]
		Device4,
		[Token(Token = "0x400288B")]
		Device5,
		[Token(Token = "0x400288C")]
		Device6,
		[Token(Token = "0x400288D")]
		Device7,
		[Token(Token = "0x400288E")]
		Device8,
		[Token(Token = "0x400288F")]
		Device9,
		[Token(Token = "0x4002890")]
		Device10,
		[Token(Token = "0x4002891")]
		Device11,
		[Token(Token = "0x4002892")]
		Device12,
		[Token(Token = "0x4002893")]
		Device13,
		[Token(Token = "0x4002894")]
		Device14,
		[Token(Token = "0x4002895")]
		Device15
	}

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEACCC", Offset = "0xAEACCC")]
	public Transform origin;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEAD04", Offset = "0xAEAD04")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x1700006B")]
	public bool isValid
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xF60964", Offset = "0xF60964", VA = "0xF60964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFD44", Offset = "0xAFFD44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xF6096C", Offset = "0xF6096C", VA = "0xF6096C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFD54", Offset = "0xAFFD54")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xF60978", Offset = "0xF60978", VA = "0xF60978")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xF60D54", Offset = "0xF60D54", VA = "0xF60D54")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xF60E04", Offset = "0xF60E04", VA = "0xF60E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xF60EB4", Offset = "0xF60EB4", VA = "0xF60EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xF60EEC", Offset = "0xF60EEC", VA = "0xF60EEC")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x2000183")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xF60FD4", Offset = "0xF60FD4", VA = "0xF60FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xF61070", Offset = "0xF61070", VA = "0xF61070")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x2000184")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x2000569")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170002B2")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xF62F58", Offset = "0xF62F58", VA = "0xF62F58")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xF63028", Offset = "0xF63028", VA = "0xF63028")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xF63014", Offset = "0xF63014", VA = "0xF63014")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xF63090", Offset = "0xF63090", VA = "0xF63090")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xF630E0", Offset = "0xF630E0", VA = "0xF630E0")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xF5F320", Offset = "0xF5F320", VA = "0xF5F320")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xF632A0", Offset = "0xF632A0", VA = "0xF632A0")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xF63520", Offset = "0xF63520", VA = "0xF63520")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xF63814", Offset = "0xF63814", VA = "0xF63814")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xF63A88", Offset = "0xF63A88", VA = "0xF63A88", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xF63BEC", Offset = "0xF63BEC", VA = "0xF63BEC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xF63C24", Offset = "0xF63C24", VA = "0xF63C24")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xF63D5C", Offset = "0xF63D5C", VA = "0xF63D5C")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xF63E94", Offset = "0xF63E94", VA = "0xF63E94")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xF63FF8", Offset = "0xF63FF8", VA = "0xF63FF8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xF640E8", Offset = "0xF640E8", VA = "0xF640E8")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xF6413C", Offset = "0xF6413C", VA = "0xF6413C")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xF64280", Offset = "0xF64280", VA = "0xF64280")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xF643A4", Offset = "0xF643A4", VA = "0xF643A4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xF644B8", Offset = "0xF644B8", VA = "0xF644B8")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xF644BC", Offset = "0xF644BC", VA = "0xF644BC")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xF64618", Offset = "0xF64618", VA = "0xF64618")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x200056A")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xF61078", Offset = "0xF61078", VA = "0xF61078")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xF61240", Offset = "0xF61240", VA = "0xF61240")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xF61298", Offset = "0xF61298", VA = "0xF61298")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xF612A8", Offset = "0xF612A8", VA = "0xF612A8")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xF612B8", Offset = "0xF612B8", VA = "0xF612B8")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xF613BC", Offset = "0xF613BC", VA = "0xF613BC")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xF613CC", Offset = "0xF613CC", VA = "0xF613CC")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xF613DC", Offset = "0xF613DC", VA = "0xF613DC")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xF613F8", Offset = "0xF613F8", VA = "0xF613F8")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xF61444", Offset = "0xF61444", VA = "0xF61444")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xF61454", Offset = "0xF61454", VA = "0xF61454")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xF61498", Offset = "0xF61498", VA = "0xF61498")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xF61554", Offset = "0xF61554", VA = "0xF61554")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xF61720", Offset = "0xF61720", VA = "0xF61720")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xF6175C", Offset = "0xF6175C", VA = "0xF6175C")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xF61894", Offset = "0xF61894", VA = "0xF61894")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xF61DF4", Offset = "0xF61DF4", VA = "0xF61DF4")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x2000185")]
public class TUI : MonoBehaviour
{
	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xF69AA4", Offset = "0xF69AA4", VA = "0xF69AA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xF69B48", Offset = "0xF69B48", VA = "0xF69B48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xF69B4C", Offset = "0xF69B4C", VA = "0xF69B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xF69B50", Offset = "0xF69B50", VA = "0xF69B50")]
	public void TestOnc()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xF69BBC", Offset = "0xF69BBC", VA = "0xF69BBC")]
	public TUI()
	{
	}
}
[Token(Token = "0x2000186")]
public class UnityXRRig : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityXRRig Instance;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LeftController;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RightController;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xFC4364", Offset = "0xFC4364", VA = "0xFC4364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xFC43B8", Offset = "0xFC43B8", VA = "0xFC43B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xFC4424", Offset = "0xFC4424", VA = "0xFC4424")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xFC4490", Offset = "0xFC4490", VA = "0xFC4490")]
	public UnityXRRig()
	{
	}
}
[Token(Token = "0x2000187")]
public class MoveBlock : MonoBehaviour
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveYAmount;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitTime;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotateSpeed;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startY;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool goingUp;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float stoppedUntilTime;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float moveUpAmount;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xE5D824", Offset = "0xE5D824", VA = "0xE5D824", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xE5D8F0", Offset = "0xE5D8F0", VA = "0xE5D8F0", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xE5DAA8", Offset = "0xE5DAA8", VA = "0xE5DAA8")]
	public MoveBlock()
	{
	}
}
[Token(Token = "0x2000188")]
public class SDK_PlayStationVRManager : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62A4", Offset = "0xAE62A4")]
	private sealed class <BeginVRSetup>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170002B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xE2F1DC", Offset = "0xE2F1DC", VA = "0xE2F1DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002401")]
			[Address(RVA = "0xE2F244", Offset = "0xE2F244", VA = "0xE2F244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xE2EDBC", Offset = "0xE2EDBC", VA = "0xE2EDBC")]
		[DebuggerHidden]
		public <BeginVRSetup>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xE2F134", Offset = "0xE2F134", VA = "0xE2F134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xE2F138", Offset = "0xE2F138", VA = "0xE2F138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xE2F1E4", Offset = "0xE2F1E4", VA = "0xE2F1E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62B4", Offset = "0xAE62B4")]
	private sealed class <SetupVR>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0xE2F544", Offset = "0xE2F544", VA = "0xE2F544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002407")]
			[Address(RVA = "0xE2F5AC", Offset = "0xE2F5AC", VA = "0xE2F5AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xE2EE58", Offset = "0xE2EE58", VA = "0xE2EE58")]
		[DebuggerHidden]
		public <SetupVR>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xE2F3F8", Offset = "0xE2F3F8", VA = "0xE2F3F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xE2F3FC", Offset = "0xE2F3FC", VA = "0xE2F3FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xE2F54C", Offset = "0xE2F54C", VA = "0xE2F54C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62C4", Offset = "0xAE62C4")]
	private sealed class <ShutdownVR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0xE2F680", Offset = "0xE2F680", VA = "0xE2F680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600240D")]
			[Address(RVA = "0xE2F6E8", Offset = "0xE2F6E8", VA = "0xE2F6E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xE2EF84", Offset = "0xE2EF84", VA = "0xE2EF84")]
		[DebuggerHidden]
		public <ShutdownVR>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xE2F5B4", Offset = "0xE2F5B4", VA = "0xE2F5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xE2F5B8", Offset = "0xE2F5B8", VA = "0xE2F5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xE2F688", Offset = "0xE2F688", VA = "0xE2F688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62D4", Offset = "0xAE62D4")]
	private sealed class <DelayedSetupHmdDevice>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0xE2F388", Offset = "0xE2F388", VA = "0xE2F388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002413")]
			[Address(RVA = "0xE2F3F0", Offset = "0xE2F3F0", VA = "0xE2F3F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xE2F0B0", Offset = "0xE2F0B0", VA = "0xE2F0B0")]
		[DebuggerHidden]
		public <DelayedSetupHmdDevice>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xE2F24C", Offset = "0xE2F24C", VA = "0xE2F24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xE2F250", Offset = "0xE2F250", VA = "0xE2F250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xE2F390", Offset = "0xE2F390", VA = "0xE2F390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool doSetupOnAwake;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SDK_PlayStationVRManager s_Instance;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool isInVRSetup;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool hasRequestedDelayedShutdown;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tryingToSetupHmdDevice;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 leftControllerVelocity;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 rightControllerVelocity;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 leftControllerAngularVelocity;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rightControllerAngularVelocity;

	[Token(Token = "0x1700006C")]
	public static SDK_PlayStationVRManager instance
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xE2EADC", Offset = "0xE2EADC", VA = "0xE2EADC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xE2EBCC", Offset = "0xE2EBCC", VA = "0xE2EBCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xE2EDB4", Offset = "0xE2EDB4", VA = "0xE2EDB4")]
	public void changeRenderScale(float renderScale)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xE2ED44", Offset = "0xE2ED44", VA = "0xE2ED44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFD94", Offset = "0xAFFD94")]
	public IEnumerator BeginVRSetup()
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xE2EDE8", Offset = "0xE2EDE8", VA = "0xE2EDE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFDF8", Offset = "0xAFFDF8")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xE2EE84", Offset = "0xE2EE84", VA = "0xE2EE84")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xE2EF24", Offset = "0xE2EF24", VA = "0xE2EF24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFE5C", Offset = "0xAFFE5C")]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xE2EFB0", Offset = "0xE2EFB0", VA = "0xE2EFB0")]
	public void SetupHmdDevice()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xE2F040", Offset = "0xE2F040", VA = "0xE2F040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAFFEC0", Offset = "0xAFFEC0")]
	private IEnumerator DelayedSetupHmdDevice()
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xE2F0DC", Offset = "0xE2F0DC", VA = "0xE2F0DC")]
	public void ToggleHmdViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xE2F0F0", Offset = "0xE2F0F0", VA = "0xE2F0F0")]
	public void ToggleHmdViewOnMonitor()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xE2F110", Offset = "0xE2F110", VA = "0xE2F110")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xE2F118", Offset = "0xE2F118", VA = "0xE2F118")]
	public SDK_PlayStationVRManager()
	{
	}
}
[Token(Token = "0x2000189")]
public class VRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busySpinner;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xFC5264", Offset = "0xFC5264", VA = "0xFC5264")]
	public VRPostReprojection()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE22CC", Offset = "0xAE22CC")]
[ExecuteInEditMode]
public class InvertCamera : MonoBehaviour
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 invertScale;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xEADD40", Offset = "0xEADD40", VA = "0xEADD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xEADD98", Offset = "0xEADD98", VA = "0xEADD98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xEADD9C", Offset = "0xEADD9C", VA = "0xEADD9C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xEADECC", Offset = "0xEADECC", VA = "0xEADECC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xEADED8", Offset = "0xEADED8", VA = "0xEADED8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xEADEE4", Offset = "0xEADEE4", VA = "0xEADEE4")]
	public InvertCamera()
	{
	}
}
[Token(Token = "0x200018B")]
public class HoleEvents : MonoBehaviour
{
	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xEAC88C", Offset = "0xEAC88C", VA = "0xEAC88C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xEAC964", Offset = "0xEAC964", VA = "0xEAC964")]
	private void ExplosiveSnap(object sender, SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xEACA5C", Offset = "0xEACA5C", VA = "0xEACA5C")]
	private void ExplosiveUnsnap(object sender, SnapDropZoneEventArgs e)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xEACB78", Offset = "0xEACB78", VA = "0xEACB78")]
	public HoleEvents()
	{
	}
}
[Token(Token = "0x200018C")]
public class XRLoading : MonoBehaviour
{
	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD8FF18", Offset = "0xD8FF18", VA = "0xD8FF18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD8FF1C", Offset = "0xD8FF1C", VA = "0xD8FF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD8FF20", Offset = "0xD8FF20", VA = "0xD8FF20")]
	public XRLoading()
	{
	}
}
namespace Demonixis.Effects
{
	[Token(Token = "0x200018D")]
	[ExecuteInEditMode]
	public class LinearToGamma : MonoBehaviour
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_Material;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Supported;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xDD48C8", Offset = "0xDD48C8", VA = "0xDD48C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xDD48D4", Offset = "0xDD48D4", VA = "0xDD48D4")]
		private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xDD4A54", Offset = "0xDD4A54", VA = "0xDD4A54")]
		public LinearToGamma()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x200018E")]
	public class VRDeviceNames
	{
		[Token(Token = "0x4000BC0")]
		public const string None = "None";

		[Token(Token = "0x4000BC1")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x4000BC2")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x4000BC3")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xF33B3C", Offset = "0xF33B3C", VA = "0xF33B3C")]
		public VRDeviceNames()
		{
		}
	}
}
namespace VRTK
{
	[Token(Token = "0x200018F")]
	public class VRTK_ConsoleViewer : MonoBehaviour
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAD24", Offset = "0xAEAD24")]
		public int fontSize;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAD5C", Offset = "0xAEAD5C")]
		public Color infoMessage;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAD94", Offset = "0xAEAD94")]
		public Color assertMessage;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEADCC", Offset = "0xAEADCC")]
		public Color warningMessage;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAE04", Offset = "0xAEAE04")]
		public Color errorMessage;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAE3C", Offset = "0xAEAE3C")]
		public Color exceptionMessage;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ScrollRect scrollWindow;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RectTransform consoleRect;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Text consoleOutput;

		[Token(Token = "0x4000BCE")]
		private const string NEWLINE = "\n";

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int lineBuffer;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int currentBuffer;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string lastMessage;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool collapseLog;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x16916AC", Offset = "0x16916AC", VA = "0x16916AC")]
		public void SetCollapse(bool state)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x16916B8", Offset = "0x16916B8", VA = "0x16916B8")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x169172C", Offset = "0x169172C", VA = "0x169172C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x16918EC", Offset = "0x16918EC", VA = "0x16918EC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1691960", Offset = "0x1691960", VA = "0x1691960", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1691A14", Offset = "0x1691A14", VA = "0x1691A14")]
		private string GetMessage(string message, LogType type)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1691BB8", Offset = "0x1691BB8", VA = "0x1691BB8")]
		private void HandleLog(string message, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1691DF0", Offset = "0x1691DF0", VA = "0x1691DF0")]
		public VRTK_ConsoleViewer()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public struct ControllerRigidbodyActivatorEventArgs
	{
		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractTouch touchingObject;
	}
	[Token(Token = "0x2000191")]
	public delegate void ControllerRigidbodyActivatorEventHandler(object sender, ControllerRigidbodyActivatorEventArgs e);
	[Token(Token = "0x2000192")]
	public class VRTK_ControllerRigidbodyActivator : MonoBehaviour
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAE74", Offset = "0xAEAE74")]
		public bool isEnabled;

		[Token(Token = "0x14000020")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOn
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x14A1980", Offset = "0x14A1980", VA = "0x14A1980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF24", Offset = "0xAFFF24")]
			add
			{
			}
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x14A1A24", Offset = "0x14A1A24", VA = "0x14A1A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF34", Offset = "0xAFFF34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOff
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x14A1AC8", Offset = "0x14A1AC8", VA = "0x14A1AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF44", Offset = "0xAFFF44")]
			add
			{
			}
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x14A1B6C", Offset = "0x14A1B6C", VA = "0x14A1B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF54", Offset = "0xAFFF54")]
			remove
			{
			}
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x14A1C10", Offset = "0x14A1C10", VA = "0x14A1C10", Slot = "4")]
		public virtual void OnControllerRigidbodyOn(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x14A1C30", Offset = "0x14A1C30", VA = "0x14A1C30", Slot = "5")]
		public virtual void OnControllerRigidbodyOff(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x14A1C50", Offset = "0x14A1C50", VA = "0x14A1C50", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x14A1C60", Offset = "0x14A1C60", VA = "0x14A1C60", Slot = "7")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x14A1C70", Offset = "0x14A1C70", VA = "0x14A1C70", Slot = "8")]
		protected virtual void ToggleRigidbody(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x14A1D6C", Offset = "0x14A1D6C", VA = "0x14A1D6C", Slot = "9")]
		protected virtual void EmitEvent(bool state, VRTK_InteractTouch touch)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x14A1D90", Offset = "0x14A1D90", VA = "0x14A1D90")]
		public VRTK_ControllerRigidbodyActivator()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public struct ControllerTooltipsEventArgs
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerTooltips.TooltipButtons element;
	}
	[Token(Token = "0x2000194")]
	public delegate void ControllerTooltipsEventHandler(object sender, ControllerTooltipsEventArgs e);
	[Token(Token = "0x2000195")]
	public class VRTK_ControllerTooltips : MonoBehaviour
	{
		[Token(Token = "0x200056F")]
		public enum TooltipButtons
		{
			[Token(Token = "0x40028A4")]
			None,
			[Token(Token = "0x40028A5")]
			TriggerTooltip,
			[Token(Token = "0x40028A6")]
			GripTooltip,
			[Token(Token = "0x40028A7")]
			TouchpadTooltip,
			[Token(Token = "0x40028A8")]
			ButtonOneTooltip,
			[Token(Token = "0x40028A9")]
			ButtonTwoTooltip,
			[Token(Token = "0x40028AA")]
			StartMenuTooltip
		}

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEAECC", Offset = "0xAEAECC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAECC", Offset = "0xAEAECC")]
		public string triggerText;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAF2C", Offset = "0xAEAF2C")]
		public string gripText;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAF64", Offset = "0xAEAF64")]
		public string touchpadText;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAF9C", Offset = "0xAEAF9C")]
		public string buttonOneText;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEAFD4", Offset = "0xAEAFD4")]
		public string buttonTwoText;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB00C", Offset = "0xAEB00C")]
		public string startMenuText;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEB044", Offset = "0xAEB044")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB044", Offset = "0xAEB044")]
		public Color tipBackgroundColor;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB0A4", Offset = "0xAEB0A4")]
		public Color tipTextColor;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB0DC", Offset = "0xAEB0DC")]
		public Color tipLineColor;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEB114", Offset = "0xAEB114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB114", Offset = "0xAEB114")]
		public Transform trigger;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB174", Offset = "0xAEB174")]
		public Transform grip;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB1AC", Offset = "0xAEB1AC")]
		public Transform touchpad;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB1E4", Offset = "0xAEB1E4")]
		public Transform buttonOne;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB21C", Offset = "0xAEB21C")]
		public Transform buttonTwo;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB254", Offset = "0xAEB254")]
		public Transform startMenu;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEB28C", Offset = "0xAEB28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB28C", Offset = "0xAEB28C")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB2EC", Offset = "0xAEB2EC")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB324", Offset = "0xAEB324")]
		public bool hideWhenNotInView;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB35C", Offset = "0xAEB35C")]
		public int retryInitMaxTries;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB394", Offset = "0xAEB394")]
		public float retryInitCounter;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected TooltipButtons[] availableButtons;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_ObjectTooltip[] buttonTooltips;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool[] tooltipStates;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected int retryInitCurrentTries;

		[Token(Token = "0x14000022")]
		public event ControllerTooltipsEventHandler ControllerTooltipOn
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x14A1DA0", Offset = "0x14A1DA0", VA = "0x14A1DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF64", Offset = "0xAFFF64")]
			add
			{
			}
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x14A1E44", Offset = "0x14A1E44", VA = "0x14A1E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF74", Offset = "0xAFFF74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event ControllerTooltipsEventHandler ControllerTooltipOff
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x14A1EE8", Offset = "0x14A1EE8", VA = "0x14A1EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF84", Offset = "0xAFFF84")]
			add
			{
			}
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x14A1F8C", Offset = "0x14A1F8C", VA = "0x14A1F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFF94", Offset = "0xAFFF94")]
			remove
			{
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x14A2030", Offset = "0x14A2030", VA = "0x14A2030", Slot = "4")]
		public virtual void OnControllerTooltipOn(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x14A2050", Offset = "0x14A2050", VA = "0x14A2050", Slot = "5")]
		public virtual void OnControllerTooltipOff(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x14A2070", Offset = "0x14A2070", VA = "0x14A2070", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x14A2080", Offset = "0x14A2080", VA = "0x14A2080", Slot = "7")]
		public virtual void UpdateText(TooltipButtons element, string newText)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x14A20DC", Offset = "0x14A20DC", VA = "0x14A20DC", Slot = "8")]
		public virtual void ToggleTips(bool state, TooltipButtons element = TooltipButtons.None)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x14A21E4", Offset = "0x14A21E4", VA = "0x14A21E4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x14A2270", Offset = "0x14A2270", VA = "0x14A2270", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x14A233C", Offset = "0x14A233C", VA = "0x14A233C", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x14A2670", Offset = "0x14A2670", VA = "0x14A2670", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x14A26E8", Offset = "0x14A26E8", VA = "0x14A26E8", Slot = "13")]
		protected virtual void EmitEvent(bool state, TooltipButtons element)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x14A2708", Offset = "0x14A2708", VA = "0x14A2708", Slot = "14")]
		protected virtual void InitButtonsArray()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x14A28F4", Offset = "0x14A28F4", VA = "0x14A28F4", Slot = "15")]
		protected virtual void InitListeners()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x14A2CA4", Offset = "0x14A2CA4", VA = "0x14A2CA4", Slot = "16")]
		protected virtual void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x14A2F24", Offset = "0x14A2F24", VA = "0x14A2F24", Slot = "17")]
		protected virtual void DoControllerVisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x14A2FB0", Offset = "0x14A2FB0", VA = "0x14A2FB0", Slot = "18")]
		protected virtual void DoControllerInvisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x14A3068", Offset = "0x14A3068", VA = "0x14A3068", Slot = "19")]
		protected virtual void DoGlanceEnterController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x14A3168", Offset = "0x14A3168", VA = "0x14A3168", Slot = "20")]
		protected virtual void DoGlanceExitController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x14A3268", Offset = "0x14A3268", VA = "0x14A3268", Slot = "21")]
		protected virtual void InitialiseTips()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x14A3610", Offset = "0x14A3610", VA = "0x14A3610", Slot = "22")]
		protected virtual Transform GetTransform(Transform setTransform, SDK_BaseController.ControllerElements findElement)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x14A3814", Offset = "0x14A3814", VA = "0x14A3814")]
		public VRTK_ControllerTooltips()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public delegate void DestinationPointEventHandler(object sender);
	[Token(Token = "0x2000197")]
	public class VRTK_DestinationPoint : VRTK_DestinationMarker
	{
		[Token(Token = "0x2000570")]
		public enum RotationTypes
		{
			[Token(Token = "0x40028AC")]
			NoRotation,
			[Token(Token = "0x40028AD")]
			RotateWithNoHeadsetOffset,
			[Token(Token = "0x40028AE")]
			RotateWithHeadsetOffset
		}

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62E4", Offset = "0xAE62E4")]
		private sealed class <ManageDestinationMarkersAtEndOfFrame>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002417")]
				[Address(RVA = "0x14A9AE4", Offset = "0x14A9AE4", VA = "0x14A9AE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002419")]
				[Address(RVA = "0x14A9B4C", Offset = "0x14A9B4C", VA = "0x14A9B4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x14A8398", Offset = "0x14A8398", VA = "0x14A8398")]
			[DebuggerHidden]
			public <ManageDestinationMarkersAtEndOfFrame>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0x14A9A1C", Offset = "0x14A9A1C", VA = "0x14A9A1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x14A9A20", Offset = "0x14A9A20", VA = "0x14A9A20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x14A9AEC", Offset = "0x14A9AEC", VA = "0x14A9AEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE62F4", Offset = "0xAE62F4")]
		private sealed class <DoDestinationMarkerSetAtEndOfFrame>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600241D")]
				[Address(RVA = "0x14A99AC", Offset = "0x14A99AC", VA = "0x14A99AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600241F")]
				[Address(RVA = "0x14A9A14", Offset = "0x14A9A14", VA = "0x14A9A14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x14A8FC4", Offset = "0x14A8FC4", VA = "0x14A8FC4")]
			[DebuggerHidden]
			public <DoDestinationMarkerSetAtEndOfFrame>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x14A9790", Offset = "0x14A9790", VA = "0x14A9790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600241C")]
			[Address(RVA = "0x14A9794", Offset = "0x14A9794", VA = "0x14A9794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x14A99B4", Offset = "0x14A99B4", VA = "0x14A99B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEB3EC", Offset = "0xAEB3EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB3EC", Offset = "0xAEB3EC")]
		public GameObject defaultCursorObject;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB44C", Offset = "0xAEB44C")]
		public GameObject hoverCursorObject;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB484", Offset = "0xAEB484")]
		public GameObject lockedCursorObject;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB4BC", Offset = "0xAEB4BC")]
		public Transform destinationLocation;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB4F4", Offset = "0xAEB4F4")]
		private bool snapToPoint;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB52C", Offset = "0xAEB52C")]
		private bool hidePointerCursorOnHover;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB564", Offset = "0xAEB564")]
		public bool hideDirectionIndicatorOnHover;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB59C", Offset = "0xAEB59C")]
		public RotationTypes snapToRotation;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool setPlayareaParentToThis;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_DestinationPoint currentDestinationPoint;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Collider pointCollider;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool createdCollider;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody pointRigidbody;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool createdRigidbody;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool isActive;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected VRTK_BasePointerRenderer.VisibilityStates storedCursorState;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool storedDirectionIndicatorState;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine setDestination;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool currentTeleportState;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform playArea;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Transform headset;

		[Token(Token = "0x14000024")]
		public event DestinationPointEventHandler DestinationPointEnabled
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x14A75FC", Offset = "0x14A75FC", VA = "0x14A75FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFA4", Offset = "0xAFFFA4")]
			add
			{
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x14A76A0", Offset = "0x14A76A0", VA = "0x14A76A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFB4", Offset = "0xAFFFB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event DestinationPointEventHandler DestinationPointDisabled
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x14A7744", Offset = "0x14A7744", VA = "0x14A7744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFC4", Offset = "0xAFFFC4")]
			add
			{
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x14A77E8", Offset = "0x14A77E8", VA = "0x14A77E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFD4", Offset = "0xAFFFD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event DestinationPointEventHandler DestinationPointLocked
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x14A788C", Offset = "0x14A788C", VA = "0x14A788C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFE4", Offset = "0xAFFFE4")]
			add
			{
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x14A7930", Offset = "0x14A7930", VA = "0x14A7930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAFFFF4", Offset = "0xAFFFF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event DestinationPointEventHandler DestinationPointUnlocked
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x14A79D4", Offset = "0x14A79D4", VA = "0x14A79D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00004", Offset = "0xB00004")]
			add
			{
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x14A7A78", Offset = "0x14A7A78", VA = "0x14A7A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00014", Offset = "0xB00014")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event DestinationPointEventHandler DestinationPointReset
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x14A7B1C", Offset = "0x14A7B1C", VA = "0x14A7B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00024", Offset = "0xB00024")]
			add
			{
			}
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x14A7BC0", Offset = "0x14A7BC0", VA = "0x14A7BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00034", Offset = "0xB00034")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x14A7C64", Offset = "0x14A7C64", VA = "0x14A7C64", Slot = "15")]
		public virtual void OnDestinationPointEnabled()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x14A7C7C", Offset = "0x14A7C7C", VA = "0x14A7C7C", Slot = "16")]
		public virtual void OnDestinationPointDisabled()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x14A7C94", Offset = "0x14A7C94", VA = "0x14A7C94", Slot = "17")]
		public virtual void OnDestinationPointLocked()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x14A7CAC", Offset = "0x14A7CAC", VA = "0x14A7CAC", Slot = "18")]
		public virtual void OnDestinationPointUnlocked()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x14A7CC4", Offset = "0x14A7CC4", VA = "0x14A7CC4", Slot = "19")]
		public virtual void OnDestinationPointReset()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x14A7CDC", Offset = "0x14A7CDC", VA = "0x14A7CDC", Slot = "20")]
		public virtual void ResetDestinationPoint()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x14A7CEC", Offset = "0x14A7CEC", VA = "0x14A7CEC", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x14A7D64", Offset = "0x14A7D64", VA = "0x14A7D64", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x14A7F30", Offset = "0x14A7F30", VA = "0x14A7F30", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x14A8018", Offset = "0x14A8018", VA = "0x14A8018", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x14A8090", Offset = "0x14A8090", VA = "0x14A8090", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x14A80E8", Offset = "0x14A80E8", VA = "0x14A80E8", Slot = "24")]
		protected virtual void CreateColliderIfRequired()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x14A8224", Offset = "0x14A8224", VA = "0x14A8224", Slot = "25")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x14A8328", Offset = "0x14A8328", VA = "0x14A8328", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00044", Offset = "0xB00044")]
		protected virtual IEnumerator ManageDestinationMarkersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x14A83C4", Offset = "0x14A83C4", VA = "0x14A83C4", Slot = "27")]
		protected virtual void ManageDestinationMarkers(bool state)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x14A864C", Offset = "0x14A864C", VA = "0x14A864C", Slot = "28")]
		protected virtual void ManageDestinationMarkerListeners(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x14A8870", Offset = "0x14A8870", VA = "0x14A8870", Slot = "29")]
		protected virtual void DoDestinationMarkerEnter(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x14A8AB4", Offset = "0x14A8AB4", VA = "0x14A8AB4", Slot = "30")]
		protected virtual void DoDestinationMarkerExit(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x14A8CF4", Offset = "0x14A8CF4", VA = "0x14A8CF4", Slot = "31")]
		protected virtual void DoDestinationMarkerSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x14A8F38", Offset = "0x14A8F38", VA = "0x14A8F38", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB000A8", Offset = "0xB000A8")]
		protected virtual IEnumerator DoDestinationMarkerSetAtEndOfFrame(DestinationMarkerEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x14A8FF0", Offset = "0x14A8FF0", VA = "0x14A8FF0", Slot = "33")]
		protected virtual void ToggleCursor(object sender, bool state)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x14A91B8", Offset = "0x14A91B8", VA = "0x14A91B8", Slot = "34")]
		protected virtual void TogglePointerCursor(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x14A91FC", Offset = "0x14A91FC", VA = "0x14A91FC", Slot = "35")]
		protected virtual void ToggleDirectionIndicator(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x14A92C4", Offset = "0x14A92C4", VA = "0x14A92C4", Slot = "36")]
		protected virtual void EnablePoint()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x14A9340", Offset = "0x14A9340", VA = "0x14A9340", Slot = "37")]
		protected virtual void DisablePoint()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x14A93D8", Offset = "0x14A93D8", VA = "0x14A93D8", Slot = "38")]
		protected virtual void ResetPoint()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x14A9560", Offset = "0x14A9560", VA = "0x14A9560", Slot = "39")]
		protected virtual void ToggleObject(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x14A9604", Offset = "0x14A9604", VA = "0x14A9604", Slot = "40")]
		protected virtual Quaternion? GetRotation()
		{
			return null;
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x14A977C", Offset = "0x14A977C", VA = "0x14A977C")]
		public VRTK_DestinationPoint()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class VRTK_FramesPerSecondViewer : MonoBehaviour
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB624", Offset = "0xAEB624")]
		public bool displayFPS;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB65C", Offset = "0xAEB65C")]
		public int targetFPS;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB694", Offset = "0xAEB694")]
		public int fontSize;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB6CC", Offset = "0xAEB6CC")]
		public Vector3 position;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB704", Offset = "0xAEB704")]
		public Color goodColor;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB73C", Offset = "0xAEB73C")]
		public Color warnColor;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB774", Offset = "0xAEB774")]
		public Color badColor;

		[Token(Token = "0x4000C14")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x14AEFB4", Offset = "0x14AEFB4", VA = "0x14AEFB4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x14AF0B0", Offset = "0x14AF0B0", VA = "0x14AF0B0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x14AF19C", Offset = "0x14AF19C", VA = "0x14AF19C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x14AF368", Offset = "0x14AF368", VA = "0x14AF368", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x14AF374", Offset = "0x14AF374", VA = "0x14AF374", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x14AF4BC", Offset = "0x14AF4BC", VA = "0x14AF4BC", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x14AF598", Offset = "0x14AF598", VA = "0x14AF598")]
		public VRTK_FramesPerSecondViewer()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class VRTK_FramesPerSecondViewerTMP : MonoBehaviour
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB7AC", Offset = "0xAEB7AC")]
		public bool displayFPS;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB7E4", Offset = "0xAEB7E4")]
		public int targetFPS;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB81C", Offset = "0xAEB81C")]
		public int fontSize;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB854", Offset = "0xAEB854")]
		public Vector3 position;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB88C", Offset = "0xAEB88C")]
		public Color goodColor;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB8C4", Offset = "0xAEB8C4")]
		public Color warnColor;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB8FC", Offset = "0xAEB8FC")]
		public Color badColor;

		[Token(Token = "0x4000C21")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x14AF654", Offset = "0x14AF654", VA = "0x14AF654", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x14AF750", Offset = "0x14AF750", VA = "0x14AF750", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x14AF83C", Offset = "0x14AF83C", VA = "0x14AF83C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x14AFA08", Offset = "0x14AFA08", VA = "0x14AFA08", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x14AFA14", Offset = "0x14AFA14", VA = "0x14AFA14", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x14AFB5C", Offset = "0x14AFB5C", VA = "0x14AFB5C", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x14AFC38", Offset = "0x14AFC38", VA = "0x14AFC38")]
		public VRTK_FramesPerSecondViewerTMP()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class VRTK_IndependentRadialMenuController : VRTK_RadialMenuController
	{
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6304", Offset = "0xAE6304")]
		private sealed class <DelayedSetColliderEnabled>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_IndependentRadialMenuController <>4__this;

			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractableObjectEventArgs e;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002423")]
				[Address(RVA = "0x19387F0", Offset = "0x19387F0", VA = "0x19387F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002425")]
				[Address(RVA = "0x1938858", Offset = "0x1938858", VA = "0x1938858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x19386AC", Offset = "0x19386AC", VA = "0x19386AC")]
			[DebuggerHidden]
			public <DelayedSetColliderEnabled>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x193870C", Offset = "0x193870C", VA = "0x193870C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x1938710", Offset = "0x1938710", VA = "0x1938710", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0x19387F8", Offset = "0x19387F8", VA = "0x19387F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB934", Offset = "0xAEB934")]
		public VRTK_InteractableObject eventsManager;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB96C", Offset = "0xAEB96C")]
		public bool addMenuCollider;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB9A4", Offset = "0xAEB9A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEB9A4", Offset = "0xAEB9A4")]
		public float colliderRadiusMultiplier;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEB9F8", Offset = "0xAEB9F8")]
		public bool hideAfterExecution;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBA30", Offset = "0xAEBA30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEBA30", Offset = "0xAEBA30")]
		public float offsetMultiplier;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBA84", Offset = "0xAEBA84")]
		public GameObject rotateTowards;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<GameObject> interactingObjects;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<GameObject> collidingObjects;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SphereCollider menuCollider;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Coroutine disableCoroutine;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 desiredColliderCenter;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isClicked;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		protected bool waitingToDisableCollider;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int counter;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x19364B0", Offset = "0x19364B0", VA = "0x19364B0", Slot = "20")]
		public virtual void UpdateEventsManager()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1936764", Offset = "0x1936764", VA = "0x1936764", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1936CD4", Offset = "0x1936CD4", VA = "0x1936CD4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1936D64", Offset = "0x1936D64", VA = "0x1936D64", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1936D70", Offset = "0x1936D70", VA = "0x1936D70", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x19371B4", Offset = "0x19371B4", VA = "0x19371B4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x19375EC", Offset = "0x19375EC", VA = "0x19375EC", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1937664", Offset = "0x1937664", VA = "0x1937664", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1937A3C", Offset = "0x1937A3C", VA = "0x1937A3C", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1937A94", Offset = "0x1937A94", VA = "0x1937A94", Slot = "13")]
		protected override void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1937B44", Offset = "0x1937B44", VA = "0x1937B44", Slot = "25")]
		protected virtual void ObjectClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1937BB4", Offset = "0x1937BB4", VA = "0x1937BB4", Slot = "26")]
		protected virtual void ObjectUnClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1937C80", Offset = "0x1937C80", VA = "0x1937C80", Slot = "27")]
		protected virtual void ObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1937DAC", Offset = "0x1937DAC", VA = "0x1937DAC", Slot = "28")]
		protected virtual void ObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1937F5C", Offset = "0x1937F5C", VA = "0x1937F5C", Slot = "29")]
		protected virtual float CalculateAngle(GameObject interactingObject)
		{
			return default(float);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x19381C0", Offset = "0x19381C0", VA = "0x19381C0", Slot = "30")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1938304", Offset = "0x1938304", VA = "0x1938304", Slot = "31")]
		protected virtual void ImmediatelyHideMenu(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1938368", Offset = "0x1938368", VA = "0x1938368", Slot = "32")]
		protected virtual void SetColliderState(bool state, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1938610", Offset = "0x1938610", VA = "0x1938610", Slot = "33")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0010C", Offset = "0xB0010C")]
		protected virtual IEnumerator DelayedSetColliderEnabled(bool enabled, float delay, InteractableObjectEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x19386D8", Offset = "0x19386D8", VA = "0x19386D8")]
		public VRTK_IndependentRadialMenuController()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public struct ObjectTooltipEventArgs
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string newText;
	}
	[Token(Token = "0x200019C")]
	public delegate void ObjectTooltipEventHandler(object sender, ObjectTooltipEventArgs e);
	[Token(Token = "0x200019D")]
	public class VRTK_ObjectTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBABC", Offset = "0xAEBABC")]
		public string displayText;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBAF4", Offset = "0xAEBAF4")]
		public int fontSize;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBB2C", Offset = "0xAEBB2C")]
		public Vector2 containerSize;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBB64", Offset = "0xAEBB64")]
		public Transform drawLineFrom;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBB9C", Offset = "0xAEBB9C")]
		public Transform drawLineTo;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBBD4", Offset = "0xAEBBD4")]
		public float lineWidth;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBC0C", Offset = "0xAEBC0C")]
		public Color fontColor;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBC44", Offset = "0xAEBC44")]
		public Color containerColor;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBC7C", Offset = "0xAEBC7C")]
		public Color lineColor;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBCB4", Offset = "0xAEBCB4")]
		public bool alwaysFaceHeadset;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected LineRenderer line;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform headset;

		[Token(Token = "0x14000029")]
		public event ObjectTooltipEventHandler ObjectTooltipReset
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x13507DC", Offset = "0x13507DC", VA = "0x13507DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00170", Offset = "0xB00170")]
			add
			{
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x1350880", Offset = "0x1350880", VA = "0x1350880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00180", Offset = "0xB00180")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event ObjectTooltipEventHandler ObjectTooltipTextUpdated
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x1350924", Offset = "0x1350924", VA = "0x1350924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00190", Offset = "0xB00190")]
			add
			{
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x13509C8", Offset = "0x13509C8", VA = "0x13509C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB001A0", Offset = "0xB001A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1350A6C", Offset = "0x1350A6C", VA = "0x1350A6C", Slot = "4")]
		public virtual void OnObjectTooltipReset(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1350A8C", Offset = "0x1350A8C", VA = "0x1350A8C", Slot = "5")]
		public virtual void OnObjectTooltipTextUpdated(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1350AAC", Offset = "0x1350AAC", VA = "0x1350AAC", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1350C2C", Offset = "0x1350C2C", VA = "0x1350C2C", Slot = "7")]
		public virtual void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1350C78", Offset = "0x1350C78", VA = "0x1350C78", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1350CF0", Offset = "0x1350CF0", VA = "0x1350CF0", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1350D6C", Offset = "0x1350D6C", VA = "0x1350D6C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1350DE4", Offset = "0x1350DE4", VA = "0x1350DE4", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1350E40", Offset = "0x1350E40", VA = "0x1350E40", Slot = "12")]
		protected virtual ObjectTooltipEventArgs SetEventPayload(string newText = "")
		{
			return default(ObjectTooltipEventArgs);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1350E48", Offset = "0x1350E48", VA = "0x1350E48", Slot = "13")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1350F4C", Offset = "0x1350F4C", VA = "0x1350F4C", Slot = "14")]
		protected virtual void SetText(string name)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x13510CC", Offset = "0x13510CC", VA = "0x13510CC", Slot = "15")]
		protected virtual void SetLine()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1351278", Offset = "0x1351278", VA = "0x1351278", Slot = "16")]
		protected virtual void DrawLine()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x135134C", Offset = "0x135134C", VA = "0x135134C")]
		public VRTK_ObjectTooltip()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class VRTK_PanelMenuController : MonoBehaviour
	{
		[Token(Token = "0x2000574")]
		public enum TouchpadPressPosition
		{
			[Token(Token = "0x40028BD")]
			None,
			[Token(Token = "0x40028BE")]
			Top,
			[Token(Token = "0x40028BF")]
			Bottom,
			[Token(Token = "0x40028C0")]
			Left,
			[Token(Token = "0x40028C1")]
			Right
		}

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6314", Offset = "0xAE6314")]
		private sealed class <TweenMenuScale>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_PanelMenuController <>4__this;

			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <direction>5__3;

			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002429")]
				[Address(RVA = "0x1353DEC", Offset = "0x1353DEC", VA = "0x1353DEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600242B")]
				[Address(RVA = "0x1353E54", Offset = "0x1353E54", VA = "0x1353E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x1352E58", Offset = "0x1352E58", VA = "0x1352E58")]
			[DebuggerHidden]
			public <TweenMenuScale>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x1353A30", Offset = "0x1353A30", VA = "0x1353A30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x1353A34", Offset = "0x1353A34", VA = "0x1353A34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x1353DF4", Offset = "0x1353DF4", VA = "0x1353DF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBD0C", Offset = "0xAEBD0C")]
		public GameObject rotateTowards;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBD44", Offset = "0xAEBD44")]
		public float zoomScaleMultiplier;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBD7C", Offset = "0xAEBD7C")]
		public VRTK_PanelMenuItemController topPanelMenuItemController;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBDB4", Offset = "0xAEBDB4")]
		public VRTK_PanelMenuItemController bottomPanelMenuItemController;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBDEC", Offset = "0xAEBDEC")]
		public VRTK_PanelMenuItemController leftPanelMenuItemController;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBE24", Offset = "0xAEBE24")]
		public VRTK_PanelMenuItemController rightPanelMenuItemController;

		[Token(Token = "0x4000C4B")]
		protected const float CanvasScaleSize = 0.001f;

		[Token(Token = "0x4000C4C")]
		protected const float AngleTolerance = 30f;

		[Token(Token = "0x4000C4D")]
		protected const float SwipeMinDist = 0.2f;

		[Token(Token = "0x4000C4E")]
		protected const float SwipeMinVelocity = 4f;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_PanelMenuItemController currentPanelMenuItemController;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject interactableObject;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject canvasObject;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly Vector2 xAxis;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly Vector2 yAxis;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 touchStartPosition;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector2 touchEndPosition;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float touchStartTime;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float currentAngle;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool isTrackingSwipe;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool isPendingSwipeCheck;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool isGrabbed;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		protected bool isShown;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1351CCC", Offset = "0x1351CCC", VA = "0x1351CCC", Slot = "4")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1351CEC", Offset = "0x1351CEC", VA = "0x1351CEC", Slot = "5")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1351D9C", Offset = "0x1351D9C", VA = "0x1351D9C", Slot = "6")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1351E50", Offset = "0x1351E50", VA = "0x1351E50", Slot = "7")]
		public virtual void HideMenuImmediate()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1351F68", Offset = "0x1351F68", VA = "0x1351F68", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1351FF0", Offset = "0x1351FF0", VA = "0x1351FF0", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x13523E8", Offset = "0x13523E8", VA = "0x13523E8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1352460", Offset = "0x1352460", VA = "0x1352460", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1352818", Offset = "0x1352818", VA = "0x1352818", Slot = "12")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x13529B0", Offset = "0x13529B0", VA = "0x13529B0", Slot = "13")]
		protected virtual void BindControllerEvents()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1352B1C", Offset = "0x1352B1C", VA = "0x1352B1C", Slot = "14")]
		protected virtual void UnbindControllerEvents()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1352C88", Offset = "0x1352C88", VA = "0x1352C88", Slot = "15")]
		protected virtual void HandlePanelMenuItemControllerVisibility(VRTK_PanelMenuItemController targetPanelItemController)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1352DD4", Offset = "0x1352DD4", VA = "0x1352DD4", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB001B0", Offset = "0xB001B0")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1352E84", Offset = "0x1352E84", VA = "0x1352E84", Slot = "17")]
		protected virtual void DoInteractableObjectIsGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1352F44", Offset = "0x1352F44", VA = "0x1352F44", Slot = "18")]
		protected virtual void DoInteractableObjectIsUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1352FF0", Offset = "0x1352FF0", VA = "0x1352FF0", Slot = "19")]
		protected virtual void DoTouchpadPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1353190", Offset = "0x1353190", VA = "0x1353190", Slot = "20")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x13531DC", Offset = "0x13531DC", VA = "0x13531DC", Slot = "21")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x13531E8", Offset = "0x13531E8", VA = "0x13531E8", Slot = "22")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1353270", Offset = "0x1353270", VA = "0x1353270", Slot = "23")]
		protected virtual void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x135328C", Offset = "0x135328C", VA = "0x135328C", Slot = "24")]
		protected virtual void ChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1353294", Offset = "0x1353294", VA = "0x1353294", Slot = "25")]
		protected virtual void CalculateSwipeAction()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x13534EC", Offset = "0x13534EC", VA = "0x13534EC", Slot = "26")]
		protected virtual TouchpadPressPosition CalculateTouchpadPressPosition()
		{
			return default(TouchpadPressPosition);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x13535C0", Offset = "0x13535C0", VA = "0x13535C0", Slot = "27")]
		protected virtual void OnSwipeLeft()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1353660", Offset = "0x1353660", VA = "0x1353660", Slot = "28")]
		protected virtual void OnSwipeRight()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1353700", Offset = "0x1353700", VA = "0x1353700", Slot = "29")]
		protected virtual void OnSwipeTop()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x13537A0", Offset = "0x13537A0", VA = "0x13537A0", Slot = "30")]
		protected virtual void OnSwipeBottom()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1353840", Offset = "0x1353840", VA = "0x1353840", Slot = "31")]
		protected virtual void OnTriggerPressed()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x13538E0", Offset = "0x13538E0", VA = "0x13538E0", Slot = "32")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x13538E8", Offset = "0x13538E8", VA = "0x13538E8", Slot = "33")]
		protected virtual float NormAngle(float currentDegree, float maxAngle = 360f)
		{
			return default(float);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x13538F8", Offset = "0x13538F8", VA = "0x13538F8", Slot = "34")]
		protected virtual bool CheckAnglePosition(float currentDegree, float tolerance, float targetDegree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x13539AC", Offset = "0x13539AC", VA = "0x13539AC")]
		public VRTK_PanelMenuController()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public struct PanelMenuItemControllerEventArgs
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactableObject;
	}
	[Token(Token = "0x20001A0")]
	public delegate void PanelMenuItemControllerEventHandler(object sender, PanelMenuItemControllerEventArgs e);
	[Token(Token = "0x20001A1")]
	public class VRTK_PanelMenuItemController : MonoBehaviour
	{
		[Token(Token = "0x1400002B")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemShowing
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x1353E5C", Offset = "0x1353E5C", VA = "0x1353E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00214", Offset = "0xB00214")]
			add
			{
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x1353F00", Offset = "0x1353F00", VA = "0x1353F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00224", Offset = "0xB00224")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemHiding
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x1353FA4", Offset = "0x1353FA4", VA = "0x1353FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00234", Offset = "0xB00234")]
			add
			{
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x1354048", Offset = "0x1354048", VA = "0x1354048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00244", Offset = "0xB00244")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeLeft
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x13540EC", Offset = "0x13540EC", VA = "0x13540EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00254", Offset = "0xB00254")]
			add
			{
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x1354190", Offset = "0x1354190", VA = "0x1354190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00264", Offset = "0xB00264")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeRight
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x1354234", Offset = "0x1354234", VA = "0x1354234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00274", Offset = "0xB00274")]
			add
			{
			}
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x13542D8", Offset = "0x13542D8", VA = "0x13542D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00284", Offset = "0xB00284")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeTop
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x135437C", Offset = "0x135437C", VA = "0x135437C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00294", Offset = "0xB00294")]
			add
			{
			}
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x1354420", Offset = "0x1354420", VA = "0x1354420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002A4", Offset = "0xB002A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeBottom
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x13544C4", Offset = "0x13544C4", VA = "0x13544C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002B4", Offset = "0xB002B4")]
			add
			{
			}
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x1354568", Offset = "0x1354568", VA = "0x1354568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002C4", Offset = "0xB002C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemTriggerPressed
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x135460C", Offset = "0x135460C", VA = "0x135460C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002D4", Offset = "0xB002D4")]
			add
			{
			}
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x13546B0", Offset = "0x13546B0", VA = "0x13546B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002E4", Offset = "0xB002E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1354754", Offset = "0x1354754", VA = "0x1354754", Slot = "4")]
		public virtual void OnPanelMenuItemShowing(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1354774", Offset = "0x1354774", VA = "0x1354774", Slot = "5")]
		public virtual void OnPanelMenuItemHiding(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1354794", Offset = "0x1354794", VA = "0x1354794", Slot = "6")]
		public virtual void OnPanelMenuItemSwipeLeft(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x13547B4", Offset = "0x13547B4", VA = "0x13547B4", Slot = "7")]
		public virtual void OnPanelMenuItemSwipeRight(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x13547D4", Offset = "0x13547D4", VA = "0x13547D4", Slot = "8")]
		public virtual void OnPanelMenuItemSwipeTop(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x13547F4", Offset = "0x13547F4", VA = "0x13547F4", Slot = "9")]
		public virtual void OnPanelMenuItemSwipeBottom(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1354814", Offset = "0x1354814", VA = "0x1354814", Slot = "10")]
		public virtual PanelMenuItemControllerEventArgs SetPanelMenuItemEvent(GameObject interactableObject)
		{
			return default(PanelMenuItemControllerEventArgs);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x135481C", Offset = "0x135481C", VA = "0x135481C", Slot = "11")]
		public virtual void Show(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x135487C", Offset = "0x135487C", VA = "0x135487C", Slot = "12")]
		public virtual void Hide(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x13548DC", Offset = "0x13548DC", VA = "0x13548DC", Slot = "13")]
		public virtual void SwipeLeft(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1354914", Offset = "0x1354914", VA = "0x1354914", Slot = "14")]
		public virtual void SwipeRight(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x135494C", Offset = "0x135494C", VA = "0x135494C", Slot = "15")]
		public virtual void SwipeTop(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1354984", Offset = "0x1354984", VA = "0x1354984", Slot = "16")]
		public virtual void SwipeBottom(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x13549BC", Offset = "0x13549BC", VA = "0x13549BC", Slot = "17")]
		public virtual void TriggerPressed(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x13549F8", Offset = "0x13549F8", VA = "0x13549F8", Slot = "18")]
		protected virtual void OnPanelMenuItemTriggerPressed(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1354A18", Offset = "0x1354A18", VA = "0x1354A18")]
		public VRTK_PanelMenuItemController()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public delegate void PointerDirectionIndicatorEventHandler(object sender);
	[Token(Token = "0x20001A3")]
	public class VRTK_PointerDirectionIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEBECC", Offset = "0xAEBECC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBECC", Offset = "0xAEBECC")]
		public bool includeHeadsetOffset;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBF2C", Offset = "0xAEBF2C")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBF64", Offset = "0xAEBF64")]
		public bool usePointerColor;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playArea;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform headset;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject validLocation;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject invalidLocation;

		[Token(Token = "0x14000032")]
		public event PointerDirectionIndicatorEventHandler PointerDirectionIndicatorPositionSet
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x135C8EC", Offset = "0x135C8EC", VA = "0x135C8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB002F4", Offset = "0xB002F4")]
			add
			{
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x135C990", Offset = "0x135C990", VA = "0x135C990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00304", Offset = "0xB00304")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x135CA34", Offset = "0x135CA34", VA = "0x135CA34", Slot = "4")]
		public virtual void OnPointerDirectionIndicatorPositionSet()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x135CA4C", Offset = "0x135CA4C", VA = "0x135CA4C", Slot = "5")]
		public virtual void Initialize(VRTK_ControllerEvents events)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x135CAD4", Offset = "0x135CAD4", VA = "0x135CAD4", Slot = "6")]
		public virtual void SetPosition(bool active, Vector3 position)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x135CB68", Offset = "0x135CB68", VA = "0x135CB68", Slot = "7")]
		public virtual Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x135CC38", Offset = "0x135CC38", VA = "0x135CC38", Slot = "8")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x135CD68", Offset = "0x135CD68", VA = "0x135CD68", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x135CE2C", Offset = "0x135CE2C", VA = "0x135CE2C", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x135CF48", Offset = "0x135CF48", VA = "0x135CF48")]
		public VRTK_PointerDirectionIndicator()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public delegate void HapticPulseEventHandler(float strength);
	[Token(Token = "0x20001A5")]
	[ExecuteInEditMode]
	public class VRTK_RadialMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000576")]
		public class RadialMenuButton
		{
			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite ButtonIcon;

			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent OnClick;

			[Token(Token = "0x40028CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnHold;

			[Token(Token = "0x40028CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent OnHoverEnter;

			[Token(Token = "0x40028CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent OnHoverExit;

			[Token(Token = "0x600242C")]
			[Address(RVA = "0x127D27C", Offset = "0x127D27C", VA = "0x127D27C")]
			public RadialMenuButton()
			{
			}
		}

		[Token(Token = "0x2000577")]
		public enum ButtonEvent
		{
			[Token(Token = "0x40028CF")]
			hoverOn,
			[Token(Token = "0x40028D0")]
			hoverOff,
			[Token(Token = "0x40028D1")]
			click,
			[Token(Token = "0x40028D2")]
			unclick
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6324", Offset = "0xAE6324")]
		private sealed class <TweenMenuScale>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_RadialMenu <>4__this;

			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40028D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <Dir>5__3;

			[Token(Token = "0x40028D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x170002C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002430")]
				[Address(RVA = "0x127D20C", Offset = "0x127D20C", VA = "0x127D20C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002432")]
				[Address(RVA = "0x127D274", Offset = "0x127D274", VA = "0x127D274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x127CED4", Offset = "0x127CED4", VA = "0x127CED4")]
			[DebuggerHidden]
			public <TweenMenuScale>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0x127CF00", Offset = "0x127CF00", VA = "0x127CF00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0x127CF04", Offset = "0x127CF04", VA = "0x127CF04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002431")]
			[Address(RVA = "0x127D214", Offset = "0x127D214", VA = "0x127D214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBFBC", Offset = "0xAEBFBC")]
		public List<RadialMenuButton> buttons;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEBFF4", Offset = "0xAEBFF4")]
		public GameObject buttonPrefab;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC02C", Offset = "0xAEC02C")]
		public bool generateOnAwake;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC064", Offset = "0xAEC064")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC064", Offset = "0xAEC064")]
		public float buttonThickness;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC0B8", Offset = "0xAEC0B8")]
		public Color buttonColor;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC0F0", Offset = "0xAEC0F0")]
		public float offsetDistance;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC128", Offset = "0xAEC128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC128", Offset = "0xAEC128")]
		public float offsetRotation;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC180", Offset = "0xAEC180")]
		public bool rotateIcons;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC1B8", Offset = "0xAEC1B8")]
		public float iconMargin;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC1F0", Offset = "0xAEC1F0")]
		public bool isShown;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC228", Offset = "0xAEC228")]
		public bool hideOnRelease;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC260", Offset = "0xAEC260")]
		public bool executeOnUnclick;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC298", Offset = "0xAEC298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC298", Offset = "0xAEC298")]
		public float baseHapticStrength;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC2FC", Offset = "0xAEC2FC")]
		public List<GameObject> menuButtons;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int currentHover;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int currentPress;

		[Token(Token = "0x14000033")]
		public event HapticPulseEventHandler FireHapticPulse
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x135E62C", Offset = "0x135E62C", VA = "0x135E62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00314", Offset = "0xB00314")]
			add
			{
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x135E6D0", Offset = "0x135E6D0", VA = "0x135E6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00324", Offset = "0xB00324")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x135E774", Offset = "0x135E774", VA = "0x135E774", Slot = "4")]
		public virtual void HoverButton(float angle)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x135E788", Offset = "0x135E788", VA = "0x135E788", Slot = "5")]
		public virtual void ClickButton(float angle)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x135E79C", Offset = "0x135E79C", VA = "0x135E79C", Slot = "6")]
		public virtual void UnClickButton(float angle)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x135E7B0", Offset = "0x135E7B0", VA = "0x135E7B0", Slot = "7")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x135E7D0", Offset = "0x135E7D0", VA = "0x135E7D0", Slot = "8")]
		public virtual void StopTouching()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x135E974", Offset = "0x135E974", VA = "0x135E974", Slot = "9")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x135EA14", Offset = "0x135EA14", VA = "0x135EA14", Slot = "10")]
		public virtual RadialMenuButton GetButton(int id)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x135EA98", Offset = "0x135EA98", VA = "0x135EA98", Slot = "11")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x135EB44", Offset = "0x135EB44", VA = "0x135EB44")]
		public void RegenerateButtons()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x135F3AC", Offset = "0x135F3AC", VA = "0x135F3AC")]
		public void AddButton(RadialMenuButton newButton)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x135F41C", Offset = "0x135F41C", VA = "0x135F41C", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x135F4D8", Offset = "0x135F4D8", VA = "0x135F4D8", Slot = "13")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x135F56C", Offset = "0x135F56C", VA = "0x135F56C", Slot = "14")]
		protected virtual void InteractButton(float angle, ButtonEvent evt)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x135FC58", Offset = "0x135FC58", VA = "0x135FC58", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00334", Offset = "0xB00334")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x135FCDC", Offset = "0x135FCDC", VA = "0x135FCDC", Slot = "16")]
		protected virtual void AttempHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x135FCF8", Offset = "0x135FCF8", VA = "0x135FCF8", Slot = "17")]
		protected virtual void RemoveAllButtons()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x135FE08", Offset = "0x135FE08", VA = "0x135FE08")]
		public VRTK_RadialMenu()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE2360", Offset = "0xAE2360")]
	public class VRTK_RadialMenuController : MonoBehaviour
	{
		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC334", Offset = "0xAEC334")]
		public VRTK_ControllerEvents events;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_RadialMenu menu;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float currentAngle;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool touchpadTouched;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x127D334", Offset = "0x127D334", VA = "0x127D334", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x127D398", Offset = "0x127D398", VA = "0x127D398", Slot = "5")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x127D428", Offset = "0x127D428", VA = "0x127D428", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x127D74C", Offset = "0x127D74C", VA = "0x127D74C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x127D8F8", Offset = "0x127D8F8", VA = "0x127D8F8", Slot = "8")]
		protected virtual void DoClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x127D920", Offset = "0x127D920", VA = "0x127D920", Slot = "9")]
		protected virtual void DoUnClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x127D948", Offset = "0x127D948", VA = "0x127D948", Slot = "10")]
		protected virtual void DoShowMenu(float initialAngle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x127D99C", Offset = "0x127D99C", VA = "0x127D99C", Slot = "11")]
		protected virtual void DoHideMenu(bool force, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x127D9E8", Offset = "0x127D9E8", VA = "0x127D9E8", Slot = "12")]
		protected virtual void DoChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x127DA10", Offset = "0x127DA10", VA = "0x127DA10", Slot = "13")]
		protected virtual void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x127DAF0", Offset = "0x127DAF0", VA = "0x127DAF0", Slot = "14")]
		protected virtual void DoTouchpadClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x127DB00", Offset = "0x127DB00", VA = "0x127DB00", Slot = "15")]
		protected virtual void DoTouchpadUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x127DB10", Offset = "0x127DB10", VA = "0x127DB10", Slot = "16")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x127DB74", Offset = "0x127DB74", VA = "0x127DB74", Slot = "17")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x127DB8C", Offset = "0x127DB8C", VA = "0x127DB8C", Slot = "18")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x127DBF0", Offset = "0x127DBF0", VA = "0x127DBF0", Slot = "19")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x127DC04", Offset = "0x127DC04", VA = "0x127DC04")]
		public VRTK_RadialMenuController()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public struct SnapDropZoneEventArgs
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject snappedObject;
	}
	[Token(Token = "0x20001A8")]
	public delegate void SnapDropZoneEventHandler(object sender, SnapDropZoneEventArgs e);
	[Token(Token = "0x20001A9")]
	public class VRTK_SnapDropZone : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		public enum SnapTypes
		{
			[Token(Token = "0x40028DB")]
			UseKinematic,
			[Token(Token = "0x40028DC")]
			UseJoint,
			[Token(Token = "0x40028DD")]
			UseParenting
		}

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6334", Offset = "0xAE6334")]
		private sealed class <UpdateTransformDimensions>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject ioCheck;

			[Token(Token = "0x40028E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject endSettings;

			[Token(Token = "0x40028E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40028E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x40028E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 endScale;

			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Transform <ioTransform>5__3;

			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <startRotation>5__5;

			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <startScale>5__6;

			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector3 <targetPosition>5__7;

			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion <targetRotation>5__8;

			[Token(Token = "0x170002C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002436")]
				[Address(RVA = "0xDE4328", Offset = "0xDE4328", VA = "0xDE4328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002438")]
				[Address(RVA = "0xDE4390", Offset = "0xDE4390", VA = "0xDE4390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0xDE3CD0", Offset = "0xDE3CD0", VA = "0xDE3CD0")]
			[DebuggerHidden]
			public <UpdateTransformDimensions>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0xDE3CFC", Offset = "0xDE3CFC", VA = "0xDE3CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0xDE3D00", Offset = "0xDE3D00", VA = "0xDE3D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0xDE4330", Offset = "0xDE4330", VA = "0xDE4330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6344", Offset = "0xAE6344")]
		private sealed class <AttemptForceSnapAtEndOfFrame>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject objectToSnap;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600243C")]
				[Address(RVA = "0xDE3C60", Offset = "0xDE3C60", VA = "0xDE3C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600243E")]
				[Address(RVA = "0xDE3CC8", Offset = "0xDE3CC8", VA = "0xDE3CC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002439")]
			[Address(RVA = "0xDE3B80", Offset = "0xDE3B80", VA = "0xDE3B80")]
			[DebuggerHidden]
			public <AttemptForceSnapAtEndOfFrame>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0xDE3BAC", Offset = "0xDE3BAC", VA = "0xDE3BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600243B")]
			[Address(RVA = "0xDE3BB0", Offset = "0xDE3BB0", VA = "0xDE3BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0xDE3C68", Offset = "0xDE3C68", VA = "0xDE3C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC36C", Offset = "0xAEC36C")]
		public GameObject highlightObjectPrefab;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC3A4", Offset = "0xAEC3A4")]
		public SnapTypes snapType;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC3DC", Offset = "0xAEC3DC")]
		public float snapDuration;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC414", Offset = "0xAEC414")]
		public bool applyScalingOnSnap;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC44C", Offset = "0xAEC44C")]
		public bool cloneNewOnUnsnap;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC484", Offset = "0xAEC484")]
		public Color highlightColor;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC4BC", Offset = "0xAEC4BC")]
		public bool highlightAlwaysActive;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC4F4", Offset = "0xAEC4F4")]
		public VRTK_PolicyList validObjectListPolicy;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC52C", Offset = "0xAEC52C")]
		public bool displayDropZoneInEditor;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC564", Offset = "0xAEC564")]
		public GameObject defaultSnappedObject;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip hookSound;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject previousPrefab;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject highlightContainer;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject highlightObject;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject highlightEditorObject;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<GameObject> currentValidSnapObjects;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameObject currentSnappedObject;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRTK_InteractableObject currentSnappedIO;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected GameObject objectToClone;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool[] clonedObjectColliderStates;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool willSnap;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		protected bool isSnapped;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		protected bool wasSnapped;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		protected bool isHighlighted;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Coroutine transitionInPlace;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool originalJointCollisionState;

		[Token(Token = "0x4000CA4")]
		protected const string HIGHLIGHT_CONTAINER_NAME = "HighlightContainer";

		[Token(Token = "0x4000CA5")]
		protected const string HIGHLIGHT_OBJECT_NAME = "HighlightObject";

		[Token(Token = "0x4000CA6")]
		protected const string HIGHLIGHT_EDITOR_OBJECT_NAME = "EditorHighlightObject";

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int isHooked;

		[Token(Token = "0x14000034")]
		public event SnapDropZoneEventHandler ObjectEnteredSnapDropZone
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x129194C", Offset = "0x129194C", VA = "0x129194C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00398", Offset = "0xB00398")]
			add
			{
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x12919F0", Offset = "0x12919F0", VA = "0x12919F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003A8", Offset = "0xB003A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event SnapDropZoneEventHandler ObjectExitedSnapDropZone
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x1291A94", Offset = "0x1291A94", VA = "0x1291A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003B8", Offset = "0xB003B8")]
			add
			{
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1291B38", Offset = "0x1291B38", VA = "0x1291B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003C8", Offset = "0xB003C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event SnapDropZoneEventHandler ObjectSnappedToDropZone
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1291BDC", Offset = "0x1291BDC", VA = "0x1291BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003D8", Offset = "0xB003D8")]
			add
			{
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x1291C80", Offset = "0x1291C80", VA = "0x1291C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003E8", Offset = "0xB003E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event SnapDropZoneEventHandler ObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x1291D24", Offset = "0x1291D24", VA = "0x1291D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB003F8", Offset = "0xB003F8")]
			add
			{
			}
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x1291DC8", Offset = "0x1291DC8", VA = "0x1291DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00408", Offset = "0xB00408")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1291E6C", Offset = "0x1291E6C", VA = "0x1291E6C", Slot = "4")]
		public virtual void OnObjectEnteredSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1291E8C", Offset = "0x1291E8C", VA = "0x1291E8C", Slot = "5")]
		public virtual void OnObjectExitedSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1291EAC", Offset = "0x1291EAC", VA = "0x1291EAC", Slot = "6")]
		public virtual void OnObjectSnappedToDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1291ECC", Offset = "0x1291ECC", VA = "0x1291ECC", Slot = "7")]
		public virtual void OnObjectUnsnappedFromDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1291F20", Offset = "0x1291F20", VA = "0x1291F20", Slot = "8")]
		public virtual SnapDropZoneEventArgs SetSnapDropZoneEvent(GameObject interactableObject)
		{
			return default(SnapDropZoneEventArgs);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1291F28", Offset = "0x1291F28", VA = "0x1291F28", Slot = "9")]
		public virtual void InitaliseHighlightObject(bool removeOldObject = false)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1292000", Offset = "0x1292000", VA = "0x1292000", Slot = "10")]
		public virtual void ForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x12921B8", Offset = "0x12921B8", VA = "0x12921B8", Slot = "11")]
		public virtual void ForceUnsnap()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x12922C4", Offset = "0x12922C4", VA = "0x12922C4", Slot = "12")]
		public virtual bool ValidSnappableObjectIsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x129231C", Offset = "0x129231C", VA = "0x129231C", Slot = "13")]
		public virtual bool IsObjectHovering(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1292384", Offset = "0x1292384", VA = "0x1292384", Slot = "14")]
		public virtual List<GameObject> GetHoveringObjects()
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x129238C", Offset = "0x129238C", VA = "0x129238C", Slot = "15")]
		public virtual GameObject GetCurrentSnappedObject()
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1292394", Offset = "0x1292394", VA = "0x1292394", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1292464", Offset = "0x1292464", VA = "0x1292464", Slot = "17")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1292520", Offset = "0x1292520", VA = "0x1292520", Slot = "18")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x12925C0", Offset = "0x12925C0", VA = "0x12925C0", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x129270C", Offset = "0x129270C", VA = "0x129270C", Slot = "20")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x129272C", Offset = "0x129272C", VA = "0x129272C", Slot = "21")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1292808", Offset = "0x1292808", VA = "0x1292808", Slot = "22")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x129295C", Offset = "0x129295C", VA = "0x129295C", Slot = "23")]
		protected virtual VRTK_InteractableObject ValidSnapObject(GameObject checkObject, bool grabState, bool checkGrabState = true)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1292A54", Offset = "0x1292A54", VA = "0x1292A54", Slot = "24")]
		protected virtual string ObjectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1292AA8", Offset = "0x1292AA8", VA = "0x1292AA8", Slot = "25")]
		protected virtual void CheckSnappedItemExists()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1292B58", Offset = "0x1292B58", VA = "0x1292B58", Slot = "26")]
		protected virtual void CheckPrefabUpdate()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1292C2C", Offset = "0x1292C2C", VA = "0x1292C2C", Slot = "27")]
		protected virtual void SetObjectHighlight()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1292C68", Offset = "0x1292C68", VA = "0x1292C68", Slot = "28")]
		protected virtual void CreateHighlightersInEditor()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1292CA4", Offset = "0x1292CA4", VA = "0x1292CA4", Slot = "29")]
		protected virtual void CheckCurrentValidSnapObjectStillValid()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1292F10", Offset = "0x1292F10", VA = "0x1292F10", Slot = "30")]
		protected virtual void ForceSetObjects()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1293184", Offset = "0x1293184", VA = "0x1293184", Slot = "31")]
		protected virtual void GenerateContainer()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1293398", Offset = "0x1293398", VA = "0x1293398", Slot = "32")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1293450", Offset = "0x1293450", VA = "0x1293450", Slot = "33")]
		protected virtual void GenerateObjects()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1293534", Offset = "0x1293534", VA = "0x1293534", Slot = "34")]
		protected virtual void SnapObject(Collider collider)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1293790", Offset = "0x1293790", VA = "0x1293790", Slot = "35")]
		protected virtual void CreatePermanentClone()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1293978", Offset = "0x1293978", VA = "0x1293978", Slot = "36")]
		protected virtual void ResetPermanentCloneColliders(GameObject objectToReset)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1293A9C", Offset = "0x1293A9C", VA = "0x1293A9C", Slot = "37")]
		protected virtual void ResnapPermanentClone()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1293B64", Offset = "0x1293B64", VA = "0x1293B64", Slot = "38")]
		protected virtual void UnsnapObject()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1293DA8", Offset = "0x1293DA8", VA = "0x1293DA8", Slot = "39")]
		protected virtual Vector3 GetNewLocalScale(VRTK_InteractableObject ioCheck)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1293ED0", Offset = "0x1293ED0", VA = "0x1293ED0", Slot = "40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00418", Offset = "0xB00418")]
		protected virtual IEnumerator UpdateTransformDimensions(VRTK_InteractableObject ioCheck, GameObject endSettings, Vector3 endScale, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1293F7C", Offset = "0x1293F7C", VA = "0x1293F7C", Slot = "41")]
		protected virtual void SetDropSnapType(VRTK_InteractableObject ioCheck)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x12945EC", Offset = "0x12945EC", VA = "0x12945EC", Slot = "42")]
		protected virtual void SetSnapDropZoneJoint(Rigidbody snapTo)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1294944", Offset = "0x1294944", VA = "0x1294944", Slot = "43")]
		protected virtual void ResetSnapDropZoneJoint()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x12949F4", Offset = "0x12949F4", VA = "0x12949F4", Slot = "44")]
		protected virtual void AddCurrentValidSnapObject(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1294A8C", Offset = "0x1294A8C", VA = "0x1294A8C", Slot = "45")]
		protected virtual void RemoveCurrentValidSnapObject(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1294B24", Offset = "0x1294B24", VA = "0x1294B24", Slot = "46")]
		protected virtual void AttemptForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1294BC0", Offset = "0x1294BC0", VA = "0x1294BC0", Slot = "47")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0047C", Offset = "0xB0047C")]
		protected virtual IEnumerator AttemptForceSnapAtEndOfFrame(GameObject objectToSnap)
		{
			return null;
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1294C3C", Offset = "0x1294C3C", VA = "0x1294C3C", Slot = "48")]
		protected virtual void ToggleHighlight(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1294E4C", Offset = "0x1294E4C", VA = "0x1294E4C", Slot = "49")]
		protected virtual void CopyObject(GameObject objectBlueprint, ref GameObject clonedObject, string givenName)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1295058", Offset = "0x1295058", VA = "0x1295058", Slot = "50")]
		protected virtual void GenerateHighlightObject()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1295334", Offset = "0x1295334", VA = "0x1295334", Slot = "51")]
		protected virtual void DeleteHighlightObject()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x12953BC", Offset = "0x12953BC", VA = "0x12953BC", Slot = "52")]
		protected virtual void GenerateEditorHighlightObject()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x12955F8", Offset = "0x12955F8", VA = "0x12955F8", Slot = "53")]
		protected virtual void CleanHighlightObject(GameObject objectToClean)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1295904", Offset = "0x1295904", VA = "0x1295904", Slot = "54")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1295B68", Offset = "0x1295B68", VA = "0x1295B68", Slot = "55")]
		protected virtual void ChooseDestroyType(Transform deleteTransform)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1295C20", Offset = "0x1295C20", VA = "0x1295C20", Slot = "56")]
		protected virtual void ChooseDestroyType(GameObject deleteObject)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1295CC0", Offset = "0x1295CC0", VA = "0x1295CC0", Slot = "57")]
		protected virtual void ChooseDestroyType(Component deleteComponent)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1295D60", Offset = "0x1295D60", VA = "0x1295D60", Slot = "58")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1295EC4", Offset = "0x1295EC4", VA = "0x1295EC4")]
		public VRTK_SnapDropZone()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class RadialButtonIcon : MonoBehaviour
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1465018", Offset = "0x1465018", VA = "0x1465018")]
		public RadialButtonIcon()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[ExecuteInEditMode]
	public class UICircle : Graphic
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC5DC", Offset = "0xAEC5DC")]
		public int fillPercent;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool fill;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int thickness;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC5F8", Offset = "0xAEC5F8")]
		public int segments;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Texture setTexture;

		[Token(Token = "0x1700006D")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x10CE5CC", Offset = "0x10CE5CC", VA = "0x10CE5CC", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public Texture texture
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x10CE678", Offset = "0x10CE678", VA = "0x10CE678")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x10CE680", Offset = "0x10CE680", VA = "0x10CE680")]
			set
			{
			}
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x10CE73C", Offset = "0x10CE73C", VA = "0x10CE73C", Slot = "43")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB004E0", Offset = "0xB004E0")]
		protected override void OnPopulateMesh(Mesh toFill)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x10CEC28", Offset = "0x10CEC28", VA = "0x10CEC28", Slot = "50")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x10CED0C", Offset = "0x10CED0C", VA = "0x10CED0C", Slot = "51")]
		protected virtual UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x10CEF40", Offset = "0x10CEF40", VA = "0x10CEF40")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public abstract class SDK_Base : ScriptableObject
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1465020", Offset = "0x1465020", VA = "0x1465020", Slot = "4")]
		public virtual void OnBeforeSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1465024", Offset = "0x1465024", VA = "0x1465024", Slot = "5")]
		public virtual void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1465028", Offset = "0x1465028", VA = "0x1465028", Slot = "6")]
		public virtual void OnBeforeSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x146502C", Offset = "0x146502C", VA = "0x146502C", Slot = "7")]
		public virtual void OnAfterSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1465030", Offset = "0x1465030", VA = "0x1465030")]
		protected SDK_Base()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public abstract class SDK_BaseBoundaries : SDK_Base
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedPlayArea;

		[Token(Token = "0x6000C0E")]
		public abstract void InitBoundaries();

		[Token(Token = "0x6000C0F")]
		public abstract Transform GetPlayArea();

		[Token(Token = "0x6000C10")]
		public abstract Vector3[] GetPlayAreaVertices();

		[Token(Token = "0x6000C11")]
		public abstract float GetPlayAreaBorderThickness();

		[Token(Token = "0x6000C12")]
		public abstract bool IsPlayAreaSizeCalibrated();

		[Token(Token = "0x6000C13")]
		public abstract bool GetDrawAtRuntime();

		[Token(Token = "0x6000C14")]
		public abstract void SetDrawAtRuntime(bool value);

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1465038", Offset = "0x1465038", VA = "0x1465038")]
		protected Transform GetSDKManagerPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1465190", Offset = "0x1465190", VA = "0x1465190")]
		protected SDK_BaseBoundaries()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public abstract class SDK_BaseController : SDK_Base
	{
		[Token(Token = "0x200057C")]
		public enum ButtonTypes
		{
			[Token(Token = "0x40028F1")]
			ButtonOne,
			[Token(Token = "0x40028F2")]
			ButtonTwo,
			[Token(Token = "0x40028F3")]
			Grip,
			[Token(Token = "0x40028F4")]
			GripHairline,
			[Token(Token = "0x40028F5")]
			StartMenu,
			[Token(Token = "0x40028F6")]
			Trigger,
			[Token(Token = "0x40028F7")]
			TriggerHairline,
			[Token(Token = "0x40028F8")]
			Touchpad,
			[Token(Token = "0x40028F9")]
			TouchpadTwo
		}

		[Token(Token = "0x200057D")]
		public enum ButtonPressTypes
		{
			[Token(Token = "0x40028FB")]
			Press,
			[Token(Token = "0x40028FC")]
			PressDown,
			[Token(Token = "0x40028FD")]
			PressUp,
			[Token(Token = "0x40028FE")]
			Touch,
			[Token(Token = "0x40028FF")]
			TouchDown,
			[Token(Token = "0x4002900")]
			TouchUp
		}

		[Token(Token = "0x200057E")]
		public enum ControllerElements
		{
			[Token(Token = "0x4002902")]
			AttachPoint,
			[Token(Token = "0x4002903")]
			Trigger,
			[Token(Token = "0x4002904")]
			GripLeft,
			[Token(Token = "0x4002905")]
			GripRight,
			[Token(Token = "0x4002906")]
			Touchpad,
			[Token(Token = "0x4002907")]
			ButtonOne,
			[Token(Token = "0x4002908")]
			ButtonTwo,
			[Token(Token = "0x4002909")]
			SystemMenu,
			[Token(Token = "0x400290A")]
			Body,
			[Token(Token = "0x400290B")]
			StartMenu
		}

		[Token(Token = "0x200057F")]
		public enum ControllerHand
		{
			[Token(Token = "0x400290D")]
			None,
			[Token(Token = "0x400290E")]
			Left,
			[Token(Token = "0x400290F")]
			Right
		}

		[Token(Token = "0x2000580")]
		public enum ControllerType
		{
			[Token(Token = "0x4002911")]
			Undefined,
			[Token(Token = "0x4002912")]
			Custom,
			[Token(Token = "0x4002913")]
			Simulator_Hand,
			[Token(Token = "0x4002914")]
			SteamVR_ViveWand,
			[Token(Token = "0x4002915")]
			SteamVR_OculusTouch,
			[Token(Token = "0x4002916")]
			Oculus_OculusTouch,
			[Token(Token = "0x4002917")]
			Daydream_Controller,
			[Token(Token = "0x4002918")]
			Ximmerse_Flip,
			[Token(Token = "0x4002919")]
			SteamVR_ValveKnuckles,
			[Token(Token = "0x400291A")]
			Oculus_OculusGamepad,
			[Token(Token = "0x400291B")]
			Oculus_OculusRemote,
			[Token(Token = "0x400291C")]
			Oculus_GearVRHMD,
			[Token(Token = "0x400291D")]
			Oculus_GearVRController,
			[Token(Token = "0x400291E")]
			WindowsMR_MotionController,
			[Token(Token = "0x400291F")]
			SteamVR_WindowsMRController,
			[Token(Token = "0x4002920")]
			PicoNeo_PicoNeoTouch,
			[Token(Token = "0x4002921")]
			NoloX1_NoloX1Touch,
			[Token(Token = "0x4002922")]
			Unity_XRController
		}

		[Token(Token = "0x6000C17")]
		public abstract void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x6000C18")]
		public abstract void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x6000C19")]
		public abstract ControllerType GetCurrentControllerType();

		[Token(Token = "0x6000C1A")]
		public abstract string GetControllerDefaultColliderPath(ControllerHand hand);

		[Token(Token = "0x6000C1B")]
		public abstract string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false);

		[Token(Token = "0x6000C1C")]
		public abstract uint GetControllerIndex(GameObject controller);

		[Token(Token = "0x6000C1D")]
		public abstract GameObject GetControllerByIndex(uint index, bool actual = false);

		[Token(Token = "0x6000C1E")]
		public abstract Transform GetControllerOrigin(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C1F")]
		public abstract Transform GenerateControllerPointerOrigin(GameObject parent);

		[Token(Token = "0x6000C20")]
		public abstract GameObject GetControllerLeftHand(bool actual = false);

		[Token(Token = "0x6000C21")]
		public abstract GameObject GetControllerRightHand(bool actual = false);

		[Token(Token = "0x6000C22")]
		public abstract bool IsControllerLeftHand(GameObject controller);

		[Token(Token = "0x6000C23")]
		public abstract bool IsControllerRightHand(GameObject controller);

		[Token(Token = "0x6000C24")]
		public abstract bool IsControllerLeftHand(GameObject controller, bool actual);

		[Token(Token = "0x6000C25")]
		public abstract bool IsControllerRightHand(GameObject controller, bool actual);

		[Token(Token = "0x6000C26")]
		public abstract GameObject GetControllerModel(GameObject controller);

		[Token(Token = "0x6000C27")]
		public abstract GameObject GetControllerModel(ControllerHand hand);

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1465198", Offset = "0x1465198", VA = "0x1465198", Slot = "25")]
		public virtual ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6000C29")]
		public abstract GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C2A")]
		public abstract void SetControllerRenderModelWheel(GameObject renderModel, bool state);

		[Token(Token = "0x6000C2B")]
		public abstract void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f);

		[Token(Token = "0x6000C2C")]
		public abstract bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip);

		[Token(Token = "0x6000C2D")]
		public abstract SDK_ControllerHapticModifiers GetHapticModifiers();

		[Token(Token = "0x6000C2E")]
		public abstract Vector3 GetVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C2F")]
		public abstract Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C30")]
		public abstract bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity);

		[Token(Token = "0x6000C31")]
		public abstract Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C32")]
		public abstract float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C33")]
		public abstract bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1465300", Offset = "0x1465300", VA = "0x1465300", Slot = "37")]
		protected virtual GameObject GetSDKManagerControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x146540C", Offset = "0x146540C", VA = "0x146540C", Slot = "38")]
		protected virtual GameObject GetSDKManagerControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1465514", Offset = "0x1465514", VA = "0x1465514", Slot = "39")]
		protected virtual bool CheckActualOrScriptAliasControllerIsLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1465574", Offset = "0x1465574", VA = "0x1465574", Slot = "40")]
		protected virtual bool CheckActualOrScriptAliasControllerIsRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x14655D4", Offset = "0x14655D4", VA = "0x14655D4", Slot = "41")]
		protected virtual bool CheckControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1465730", Offset = "0x1465730", VA = "0x1465730", Slot = "42")]
		protected virtual bool CheckControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x146588C", Offset = "0x146588C", VA = "0x146588C", Slot = "43")]
		protected virtual GameObject GetControllerModelFromController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1465918", Offset = "0x1465918", VA = "0x1465918", Slot = "44")]
		protected virtual GameObject GetSDKManagerControllerModelForHand(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1465A04", Offset = "0x1465A04", VA = "0x1465A04", Slot = "45")]
		protected virtual GameObject GetActualController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1465B24", Offset = "0x1465B24", VA = "0x1465B24")]
		protected SDK_BaseController()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class SDK_ControllerHapticModifiers
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float durationModifier;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intervalModifier;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort maxHapticVibration;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hapticsBufferSize;

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1465C94", Offset = "0x1465C94", VA = "0x1465C94")]
		public SDK_ControllerHapticModifiers()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public abstract class SDK_BaseHeadset : SDK_Base
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedHeadset;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform cachedHeadsetCamera;

		[Token(Token = "0x6000C3F")]
		public abstract void ProcessUpdate(Dictionary<string, object> options);

		[Token(Token = "0x6000C40")]
		public abstract void ProcessFixedUpdate(Dictionary<string, object> options);

		[Token(Token = "0x6000C41")]
		public abstract Transform GetHeadset();

		[Token(Token = "0x6000C42")]
		public abstract Transform GetHeadsetCamera();

		[Token(Token = "0x6000C43")]
		public abstract Vector3 GetHeadsetVelocity();

		[Token(Token = "0x6000C44")]
		public abstract Vector3 GetHeadsetAngularVelocity();

		[Token(Token = "0x6000C45")]
		public abstract void HeadsetFade(Color color, float duration, bool fadeOverlay = false);

		[Token(Token = "0x6000C46")]
		public abstract bool HasHeadsetFade(Transform obj);

		[Token(Token = "0x6000C47")]
		public abstract void AddHeadsetFade(Transform camera);

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1465B2C", Offset = "0x1465B2C", VA = "0x1465B2C")]
		protected Transform GetSDKManagerHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1465C84", Offset = "0x1465C84", VA = "0x1465C84")]
		protected SDK_BaseHeadset()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public abstract class SDK_BaseSystem : SDK_Base
	{
		[Token(Token = "0x6000C4A")]
		public abstract bool IsDisplayOnDesktop();

		[Token(Token = "0x6000C4B")]
		public abstract bool ShouldAppRenderWithLowResources();

		[Token(Token = "0x6000C4C")]
		public abstract void ForceInterleavedReprojectionOn(bool force);

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1465C8C", Offset = "0x1465C8C", VA = "0x1465C8C")]
		protected SDK_BaseSystem()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xAE23D4", Offset = "0xAE23D4")]
	public sealed class SDK_DescriptionAttribute : Attribute
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6354", Offset = "0xAE6354")]
		private sealed class <>c
		{
			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SDK_DescriptionAttribute, int> <>9__8_0;

			[Token(Token = "0x6002440")]
			[Address(RVA = "0x1466B48", Offset = "0x1466B48", VA = "0x1466B48")]
			public <>c()
			{
			}

			[Token(Token = "0x6002441")]
			[Address(RVA = "0x1466B50", Offset = "0x1466B50", VA = "0x1466B50")]
			internal int <GetDescriptions>b__8_0(SDK_DescriptionAttribute attribute)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string prettyName;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string symbol;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string vrDeviceName;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int index;

		[Token(Token = "0x1700006F")]
		public bool describesFallbackSDK
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x146649C", Offset = "0x146649C", VA = "0x146649C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x14664F0", Offset = "0x14664F0", VA = "0x14664F0")]
		public SDK_DescriptionAttribute(string prettyName, string symbol, string vrDeviceName, string buildTargetGroupName, int index = 0)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1466670", Offset = "0x1466670", VA = "0x1466670")]
		public SDK_DescriptionAttribute(Type typeToCopyExistingDescriptionFrom, int index = 0)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1466974", Offset = "0x1466974", VA = "0x1466974")]
		public static SDK_DescriptionAttribute[] GetDescriptions(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xAE240C", Offset = "0xAE240C")]
	public sealed class SDK_ScriptingDefineSymbolPredicateAttribute : Attribute, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000CB8")]
		public const string RemovableSymbolPrefix = "VRTK_DEFINE_";

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string symbol;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buildTargetGroupName;

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x10C6D60", Offset = "0x10C6D60", VA = "0x10C6D60")]
		private SDK_ScriptingDefineSymbolPredicateAttribute()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x10C6D68", Offset = "0x10C6D68", VA = "0x10C6D68")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(string symbol, string buildTargetGroupName)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x10C6F2C", Offset = "0x10C6F2C", VA = "0x10C6F2C")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(SDK_ScriptingDefineSymbolPredicateAttribute attributeToCopy)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x10C6F6C", Offset = "0x10C6F6C", VA = "0x10C6F6C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x10C6F70", Offset = "0x10C6F70", VA = "0x10C6F70", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x10C6F74", Offset = "0x10C6F74", VA = "0x10C6F74")]
		private void SetBuildTarget(string groupName)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2444", Offset = "0xAE2444")]
	public class SDK_DaydreamBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x14663E0", Offset = "0x14663E0", VA = "0x14663E0")]
		public SDK_DaydreamBoundaries()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE24AC", Offset = "0xAE24AC")]
	public class SDK_DaydreamController : SDK_FallbackController
	{
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x14663F0", Offset = "0x14663F0", VA = "0x14663F0")]
		public SDK_DaydreamController()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public static class SDK_DaydreamDefines
	{
		[Token(Token = "0x4000CBB")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_DAYDREAM";

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1466400", Offset = "0x1466400", VA = "0x1466400")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00518", Offset = "0xB00518")]
		private static bool IsDaydreamAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2514", Offset = "0xAE2514")]
	public class SDK_DaydreamHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1466484", Offset = "0x1466484", VA = "0x1466484")]
		public SDK_DaydreamHeadset()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE257C", Offset = "0xAE257C")]
	public class SDK_DaydreamSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1466494", Offset = "0x1466494", VA = "0x1466494")]
		public SDK_DaydreamSystem()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE25FC", Offset = "0xAE25FC")]
	public class SDK_FallbackBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1466B68", Offset = "0x1466B68", VA = "0x1466B68", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1466B6C", Offset = "0x1466B6C", VA = "0x1466B6C", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1466B74", Offset = "0x1466B74", VA = "0x1466B74", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1466B7C", Offset = "0x1466B7C", VA = "0x1466B7C", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1466B84", Offset = "0x1466B84", VA = "0x1466B84", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1466B8C", Offset = "0x1466B8C", VA = "0x1466B8C", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1466B94", Offset = "0x1466B94", VA = "0x1466B94", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x14663E8", Offset = "0x14663E8", VA = "0x14663E8")]
		public SDK_FallbackBoundaries()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2664", Offset = "0xAE2664")]
	public class SDK_FallbackController : SDK_BaseController
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1466B98", Offset = "0x1466B98", VA = "0x1466B98", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1466B9C", Offset = "0x1466B9C", VA = "0x1466B9C", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1466BA0", Offset = "0x1466BA0", VA = "0x1466BA0", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1466BA8", Offset = "0x1466BA8", VA = "0x1466BA8", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1466BF0", Offset = "0x1466BF0", VA = "0x1466BF0", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1466C38", Offset = "0x1466C38", VA = "0x1466C38", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1466C40", Offset = "0x1466C40", VA = "0x1466C40", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1466C48", Offset = "0x1466C48", VA = "0x1466C48", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1466C50", Offset = "0x1466C50", VA = "0x1466C50", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1466C58", Offset = "0x1466C58", VA = "0x1466C58", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1466C60", Offset = "0x1466C60", VA = "0x1466C60", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1466C68", Offset = "0x1466C68", VA = "0x1466C68", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1466C70", Offset = "0x1466C70", VA = "0x1466C70", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1466C78", Offset = "0x1466C78", VA = "0x1466C78", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1466C80", Offset = "0x1466C80", VA = "0x1466C80", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1466C88", Offset = "0x1466C88", VA = "0x1466C88", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1466C90", Offset = "0x1466C90", VA = "0x1466C90", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1466C98", Offset = "0x1466C98", VA = "0x1466C98", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1466CA0", Offset = "0x1466CA0", VA = "0x1466CA0", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1466CA4", Offset = "0x1466CA4", VA = "0x1466CA4", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1466CA8", Offset = "0x1466CA8", VA = "0x1466CA8", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1466CB0", Offset = "0x1466CB0", VA = "0x1466CB0", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1466D24", Offset = "0x1466D24", VA = "0x1466D24", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1466D84", Offset = "0x1466D84", VA = "0x1466D84", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1466DE4", Offset = "0x1466DE4", VA = "0x1466DE4", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1466DFC", Offset = "0x1466DFC", VA = "0x1466DFC", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1466E5C", Offset = "0x1466E5C", VA = "0x1466E5C", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1466E64", Offset = "0x1466E64", VA = "0x1466E64", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x14663F8", Offset = "0x14663F8", VA = "0x14663F8")]
		public SDK_FallbackController()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE26CC", Offset = "0xAE26CC")]
	public class SDK_FallbackHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1466E6C", Offset = "0x1466E6C", VA = "0x1466E6C", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1466E70", Offset = "0x1466E70", VA = "0x1466E70", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1466E74", Offset = "0x1466E74", VA = "0x1466E74", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1466E7C", Offset = "0x1466E7C", VA = "0x1466E7C", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1466E84", Offset = "0x1466E84", VA = "0x1466E84", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1466EE4", Offset = "0x1466EE4", VA = "0x1466EE4", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1466F44", Offset = "0x1466F44", VA = "0x1466F44", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1466F48", Offset = "0x1466F48", VA = "0x1466F48", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1466F50", Offset = "0x1466F50", VA = "0x1466F50", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x146648C", Offset = "0x146648C", VA = "0x146648C")]
		public SDK_FallbackHeadset()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2734", Offset = "0xAE2734")]
	public class SDK_FallbackSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x10BBE94", Offset = "0x10BBE94", VA = "0x10BBE94", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x10BBE9C", Offset = "0x10BBE9C", VA = "0x10BBE9C", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x10BBEA4", Offset = "0x10BBEA4", VA = "0x10BBEA4", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x10BBEA8", Offset = "0x10BBEA8", VA = "0x10BBEA8")]
		public SDK_FallbackSystem()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE277C", Offset = "0xAE277C")]
	public class SDK_NoloX1Boundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x10BEC68", Offset = "0x10BEC68", VA = "0x10BEC68")]
		public SDK_NoloX1Boundaries()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE27E4", Offset = "0xAE27E4")]
	public class SDK_NoloX1Controller : SDK_FallbackController
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x10BEC70", Offset = "0x10BEC70", VA = "0x10BEC70")]
		public SDK_NoloX1Controller()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public static class SDK_NoloX1Defines
	{
		[Token(Token = "0x4000CBC")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_NOLOX1";

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x10BEC78", Offset = "0x10BEC78", VA = "0x10BEC78")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00564", Offset = "0xB00564")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00564", Offset = "0xB00564")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE284C", Offset = "0xAE284C")]
	public class SDK_NoloX1Headset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x10BEC80", Offset = "0x10BEC80", VA = "0x10BEC80")]
		public SDK_NoloX1Headset()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE28B4", Offset = "0xAE28B4")]
	public class SDK_NoloX1System : SDK_FallbackSystem
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x10BEC88", Offset = "0x10BEC88", VA = "0x10BEC88")]
		public SDK_NoloX1System()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2924", Offset = "0xAE2924")]
	public class SDK_PicoNeoBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x10BEC90", Offset = "0x10BEC90", VA = "0x10BEC90")]
		public SDK_PicoNeoBoundaries()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE298C", Offset = "0xAE298C")]
	public class SDK_PicoNeoController : SDK_FallbackController
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x10BEC98", Offset = "0x10BEC98", VA = "0x10BEC98")]
		public SDK_PicoNeoController()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public static class SDK_PicoNeoDefines
	{
		[Token(Token = "0x4000CBD")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PICONEO";

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x10BECA0", Offset = "0x10BECA0", VA = "0x10BECA0")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB005F4", Offset = "0xB005F4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB005F4", Offset = "0xB005F4")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE29F4", Offset = "0xAE29F4")]
	public class SDK_PicoNeoHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x10BECA8", Offset = "0x10BECA8", VA = "0x10BECA8")]
		public SDK_PicoNeoHeadset()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2A5C", Offset = "0xAE2A5C")]
	public class SDK_PicoNeoSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x10BECB0", Offset = "0x10BECB0", VA = "0x10BECB0")]
		public SDK_PicoNeoSystem()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class SDK_PlayStationFrustum : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6364", Offset = "0xAE6364")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationFrustum <>4__this;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002445")]
				[Address(RVA = "0x10BF8B0", Offset = "0x10BF8B0", VA = "0x10BF8B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002447")]
				[Address(RVA = "0x10BF918", Offset = "0x10BF918", VA = "0x10BF918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x10BF1D0", Offset = "0x10BF1D0", VA = "0x10BF1D0")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0x10BF7E4", Offset = "0x10BF7E4", VA = "0x10BF7E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x10BF7E8", Offset = "0x10BF7E8", VA = "0x10BF7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x10BF8B8", Offset = "0x10BF8B8", VA = "0x10BF8B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color cachedShowColor;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color cachedHideColor;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 camAcceleration;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fadeSpeed;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform frustumTransform;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 hmdPositionRaw;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion hmdRotationUnity;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion hmdRotationRaw;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float safeDistance;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color showColor;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color hideColor;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAEC634", Offset = "0xAEC634")]
		private bool <ShowFrustum>k__BackingField;

		[Token(Token = "0x17000070")]
		public Vector3[] Bounds
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x10BED4C", Offset = "0x10BED4C", VA = "0x10BED4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public bool ShowFrustum
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x10BF138", Offset = "0x10BF138", VA = "0x10BF138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00684", Offset = "0xB00684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x10BF140", Offset = "0x10BF140", VA = "0x10BF140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB00694", Offset = "0xB00694")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x10BECB8", Offset = "0x10BECB8", VA = "0x10BECB8")]
		public void UpdateFrustumTracking()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x10BECBC", Offset = "0x10BECBC", VA = "0x10BECBC")]
		public void Register()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x10BED48", Offset = "0x10BED48", VA = "0x10BED48")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x10BF14C", Offset = "0x10BF14C", VA = "0x10BF14C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x10BF160", Offset = "0x10BF160", VA = "0x10BF160")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB006A4", Offset = "0xB006A4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x10BF1FC", Offset = "0x10BF1FC", VA = "0x10BF1FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x10BED50", Offset = "0x10BED50", VA = "0x10BED50")]
		private Vector3[] BoundsCalculation()
		{
			return null;
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x10BF200", Offset = "0x10BF200", VA = "0x10BF200")]
		private Bounds CalculateBoundingBox(GameObject gameObjectWithMesh)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x10BF608", Offset = "0x10BF608", VA = "0x10BF608")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x10BF75C", Offset = "0x10BF75C", VA = "0x10BF75C")]
		public void TurnOnFrustum()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x10BF770", Offset = "0x10BF770", VA = "0x10BF770")]
		public void ToggleFrustum(bool on)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x10BF78C", Offset = "0x10BF78C", VA = "0x10BF78C")]
		public void TurnOffFrustum()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x10BF7C8", Offset = "0x10BF7C8", VA = "0x10BF7C8")]
		public SDK_PlayStationFrustum()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class SDK_PlayStationMoveController : MonoBehaviour
	{
		[Token(Token = "0x2000583")]
		public class TrackedDevice
		{
			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 AngularVelocity;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform DeviceTransform;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int Handle;

			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Renderer Light;

			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion Orientation;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool PoorTracking;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 Position;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool Primary;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 Velocity;

			[Token(Token = "0x6002448")]
			[Address(RVA = "0x10BFA5C", Offset = "0x10BFA5C", VA = "0x10BFA5C")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x2000584")]
		public enum Controller
		{
			[Token(Token = "0x4002932")]
			Primary,
			[Token(Token = "0x4002933")]
			Secondary
		}

		[Serializable]
		[Token(Token = "0x2000585")]
		public enum PlayStationKeys
		{
			[Token(Token = "0x4002935")]
			Trigger = 334,
			[Token(Token = "0x4002936")]
			Middle = 335,
			[Token(Token = "0x4002937")]
			Start = 337,
			[Token(Token = "0x4002938")]
			Triangle = 333,
			[Token(Token = "0x4002939")]
			Circle = 331,
			[Token(Token = "0x400293A")]
			Cross = 330,
			[Token(Token = "0x400293B")]
			Square = 332,
			[Token(Token = "0x400293C")]
			None = -1
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6374", Offset = "0xAE6374")]
		private sealed class <EstimateVelocity>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationMoveController <>4__this;

			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600244C")]
				[Address(RVA = "0x10C17C0", Offset = "0x10C17C0", VA = "0x10C17C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600244E")]
				[Address(RVA = "0x10C1828", Offset = "0x10C1828", VA = "0x10C1828", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0x10C04E4", Offset = "0x10C04E4", VA = "0x10C04E4")]
			[DebuggerHidden]
			public <EstimateVelocity>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0x10C10CC", Offset = "0x10C10CC", VA = "0x10C10CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600244B")]
			[Address(RVA = "0x10C10D0", Offset = "0x10C10D0", VA = "0x10C10D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0x10C17C8", Offset = "0x10C17C8", VA = "0x10C17C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrackedDevice device;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool ActiveController;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Controller ControllerType;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool IsTracked;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<PlayStationKeys, int> keyMappings;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastPos;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 lastRot;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> posList;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC664", Offset = "0xAEC664")]
		public bool autoStartSampling;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC69C", Offset = "0xAEC69C")]
		public int velocityAverageFrames;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC6D4", Offset = "0xAEC6D4")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int currentSampleCount;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Coroutine calculateSamplesRoutine;

		[Token(Token = "0x17000072")]
		public TrackedDevice Device
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x10BF920", Offset = "0x10BF920", VA = "0x10BF920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x10BF950", Offset = "0x10BF950", VA = "0x10BF950")]
		public TrackedDevice CreateDevice()
		{
			return null;
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x10BFB2C", Offset = "0x10BFB2C", VA = "0x10BFB2C")]
		public void OnUnregisterMoveController()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x10BFB84", Offset = "0x10BFB84", VA = "0x10BFB84")]
		public Vector2 Trigger()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x10BFBE4", Offset = "0x10BFBE4", VA = "0x10BFBE4")]
		public Vector3 GetDeviceVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x10BFC04", Offset = "0x10BFC04", VA = "0x10BFC04")]
		public Vector3 GetDeviceAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x10BFC24", Offset = "0x10BFC24", VA = "0x10BFC24")]
		public bool IsPoorTrackingQuality()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x10BFCD0", Offset = "0x10BFCD0", VA = "0x10BFCD0")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x10BFD30", Offset = "0x10BFD30", VA = "0x10BFD30", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x10BFDBC", Offset = "0x10BFDBC", VA = "0x10BFDBC", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x10BFDD0", Offset = "0x10BFDD0", VA = "0x10BFDD0", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x10C0004", Offset = "0x10C0004", VA = "0x10C0004", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x10C01CC", Offset = "0x10C01CC", VA = "0x10C01CC", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x10C03B0", Offset = "0x10C03B0", VA = "0x10C03B0", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x10C0400", Offset = "0x10C0400", VA = "0x10C0400", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x10C040C", Offset = "0x10C040C", VA = "0x10C040C", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x10C0474", Offset = "0x10C0474", VA = "0x10C0474", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00708", Offset = "0xB00708")]
		protected virtual IEnumerator EstimateVelocity()
		{
			return null;
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x10C0510", Offset = "0x10C0510", VA = "0x10C0510")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x10C06A0", Offset = "0x10C06A0", VA = "0x10C06A0")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x10C08F4", Offset = "0x10C08F4", VA = "0x10C08F4")]
		public void SetKeyMappings(Dictionary<PlayStationKeys, KeyCode> mapping)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x10C0A68", Offset = "0x10C0A68", VA = "0x10C0A68")]
		public void SetKey(PlayStationKeys key, KeyCode inputKey)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x10C0AD8", Offset = "0x10C0AD8", VA = "0x10C0AD8")]
		public KeyCode GetControllerKey(PlayStationKeys key)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x10C0B54", Offset = "0x10C0B54", VA = "0x10C0B54")]
		public int GetStickId()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x10C0BE0", Offset = "0x10C0BE0", VA = "0x10C0BE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x10C0CE8", Offset = "0x10C0CE8", VA = "0x10C0CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x10C0FA0", Offset = "0x10C0FA0", VA = "0x10C0FA0")]
		public SDK_PlayStationMoveController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2ACC", Offset = "0xAE2ACC")]
	public class SDK_PlayStationVRController : SDK_BaseController
	{
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6384", Offset = "0xAE6384")]
		private sealed class <Vibrate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int strength;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SDK_PlayStationVRController <>4__this;

			[Token(Token = "0x170002CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002452")]
				[Address(RVA = "0x10C3878", Offset = "0x10C3878", VA = "0x10C3878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002454")]
				[Address(RVA = "0x10C38E0", Offset = "0x10C38E0", VA = "0x10C38E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600244F")]
			[Address(RVA = "0x10C1B40", Offset = "0x10C1B40", VA = "0x10C1B40")]
			[DebuggerHidden]
			public <Vibrate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002450")]
			[Address(RVA = "0x10C3774", Offset = "0x10C3774", VA = "0x10C3774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002451")]
			[Address(RVA = "0x10C3778", Offset = "0x10C3778", VA = "0x10C3778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002453")]
			[Address(RVA = "0x10C3880", Offset = "0x10C3880", VA = "0x10C3880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE6394", Offset = "0xAE6394")]
		private sealed class <>c
		{
			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SDK_PlayStationMoveController> <>9__30_0;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<SDK_PlayStationMoveController> <>9__30_1;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<SDK_PlayStationMoveController> <>9__36_0;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<SDK_PlayStationMoveController> <>9__36_1;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<SDK_PlayStationMoveController> <>9__45_0;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<SDK_PlayStationMoveController> <>9__45_1;

			[Token(Token = "0x6002456")]
			[Address(RVA = "0x10C36AC", Offset = "0x10C36AC", VA = "0x10C36AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0x10C36B4", Offset = "0x10C36B4", VA = "0x10C36B4")]
			internal bool <GetActualController>b__30_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0x10C36D4", Offset = "0x10C36D4", VA = "0x10C36D4")]
			internal bool <GetActualController>b__30_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x10C36F4", Offset = "0x10C36F4", VA = "0x10C36F4")]
			internal bool <GetControllerModel>b__36_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0x10C3714", Offset = "0x10C3714", VA = "0x10C3714")]
			internal bool <GetControllerModel>b__36_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x600245B")]
			[Address(RVA = "0x10C3734", Offset = "0x10C3734", VA = "0x10C3734")]
			internal bool <OnEnable>b__45_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x10C3754", Offset = "0x10C3754", VA = "0x10C3754")]
			internal bool <OnEnable>b__45_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine vibrateCoroutine;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int maxVibration;

		[Token(Token = "0x4000CDD")]
		private const string HandName = "Hand";

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SDK_PlayStationVRKeyMappings keyMappings;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool stick;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC70C", Offset = "0xAEC70C")]
		public bool Sticky;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC744", Offset = "0xAEC744")]
		public SDK_PlayStationMoveController.PlayStationKeys TouchPadSimulationActivator;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC77C", Offset = "0xAEC77C")]
		public SDK_PlayStationMoveController.PlayStationKeys TouchPadSimulationKey;

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x10C1838", Offset = "0x10C1838", VA = "0x10C1838")]
		public void SetvibrationStrength(int value)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x10C18BC", Offset = "0x10C18BC", VA = "0x10C18BC", Slot = "46")]
		public virtual void PlayStationHapticPulseOnIndex(uint index, float strength = 0.3f)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x10C19A8", Offset = "0x10C19A8", VA = "0x10C19A8", Slot = "47")]
		public virtual void TriggerHapticPulse(int index, int strength = 119)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x10C1AB0", Offset = "0x10C1AB0", VA = "0x10C1AB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0076C", Offset = "0xB0076C")]
		private IEnumerator Vibrate(int index, int strength = 119, float time = 0.1f)
		{
			return null;
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x10C1B6C", Offset = "0x10C1B6C", VA = "0x10C1B6C", Slot = "48")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x10C1BA8", Offset = "0x10C1BA8", VA = "0x10C1BA8", Slot = "49")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings, SDK_PlayStationMoveController controller)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x10C1BC0", Offset = "0x10C1BC0", VA = "0x10C1BC0", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x10C1BC4", Offset = "0x10C1BC4", VA = "0x10C1BC4", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x10C1BC8", Offset = "0x10C1BC8", VA = "0x10C1BC8", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x10C1C10", Offset = "0x10C1C10", VA = "0x10C1C10", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x10C1CB0", Offset = "0x10C1CB0", VA = "0x10C1CB0", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x10C1D64", Offset = "0x10C1D64", VA = "0x10C1D64", Slot = "50")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x10C1DE8", Offset = "0x10C1DE8", VA = "0x10C1DE8", Slot = "51")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x10C2038", Offset = "0x10C2038", VA = "0x10C2038", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x10C21EC", Offset = "0x10C21EC", VA = "0x10C21EC", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x10C224C", Offset = "0x10C224C", VA = "0x10C224C", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x10C2254", Offset = "0x10C2254", VA = "0x10C2254", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x10C2594", Offset = "0x10C2594", VA = "0x10C2594", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x10C230C", Offset = "0x10C230C", VA = "0x10C230C")]
		private static GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x10C27C4", Offset = "0x10C27C4", VA = "0x10C27C4", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x10C27D4", Offset = "0x10C27D4", VA = "0x10C27D4", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x10C27E4", Offset = "0x10C27E4", VA = "0x10C27E4", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x10C27F8", Offset = "0x10C27F8", VA = "0x10C27F8", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x10C280C", Offset = "0x10C280C", VA = "0x10C280C", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x10C281C", Offset = "0x10C281C", VA = "0x10C281C", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x10C2B1C", Offset = "0x10C2B1C", VA = "0x10C2B1C", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x10C2B20", Offset = "0x10C2B20", VA = "0x10C2B20", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x10C2B7C", Offset = "0x10C2B7C", VA = "0x10C2B7C")]
		protected bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x10C2BDC", Offset = "0x10C2BDC", VA = "0x10C2BDC")]
		protected bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x10C2C3C", Offset = "0x10C2C3C", VA = "0x10C2C3C")]
		protected bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x10C2C74", Offset = "0x10C2C74", VA = "0x10C2C74")]
		protected bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x10C2CB0", Offset = "0x10C2CB0", VA = "0x10C2CB0")]
		private bool TouchPadSimulator(uint index, ButtonPressTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x10C2D3C", Offset = "0x10C2D3C", VA = "0x10C2D3C")]
		private bool IsButtonPressed(uint index, ButtonPressTypes type, SDK_PlayStationMoveController.PlayStationKeys playStationKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x10C2ED4", Offset = "0x10C2ED4", VA = "0x10C2ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x10C3100", Offset = "0x10C3100", VA = "0x10C3100", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x10C3148", Offset = "0x10C3148", VA = "0x10C3148", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x10C314C", Offset = "0x10C314C", VA = "0x10C314C", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x10C3154", Offset = "0x10C3154", VA = "0x10C3154", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x10C3264", Offset = "0x10C3264", VA = "0x10C3264", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x10C3314", Offset = "0x10C3314", VA = "0x10C3314", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x10C331C", Offset = "0x10C331C", VA = "0x10C331C", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x10C33D4", Offset = "0x10C33D4", VA = "0x10C33D4", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x10C33DC", Offset = "0x10C33DC", VA = "0x10C33DC", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x10C3624", Offset = "0x10C3624", VA = "0x10C3624", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x10C362C", Offset = "0x10C362C", VA = "0x10C362C")]
		public SDK_PlayStationVRController()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class SDK_PlayStationVRInput : MonoBehaviour
	{
		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE63A4", Offset = "0xAE63A4")]
		private sealed class <DeviceTracking>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002460")]
				[Address(RVA = "0x10C6BC4", Offset = "0x10C6BC4", VA = "0x10C6BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002462")]
				[Address(RVA = "0x10C6C2C", Offset = "0x10C6C2C", VA = "0x10C6C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600245D")]
			[Address(RVA = "0x10C3A74", Offset = "0x10C3A74", VA = "0x10C3A74")]
			[DebuggerHidden]
			public <DeviceTracking>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0x10C6A74", Offset = "0x10C6A74", VA = "0x10C6A74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x10C6A78", Offset = "0x10C6A78", VA = "0x10C6A78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002461")]
			[Address(RVA = "0x10C6BCC", Offset = "0x10C6BCC", VA = "0x10C6BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE63B4", Offset = "0xAE63B4")]
		private sealed class <RegisterMoveControllers>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002466")]
				[Address(RVA = "0x10C6CD4", Offset = "0x10C6CD4", VA = "0x10C6CD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002468")]
				[Address(RVA = "0x10C6D3C", Offset = "0x10C6D3C", VA = "0x10C6D3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0x10C3D9C", Offset = "0x10C3D9C", VA = "0x10C3D9C")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0x10C6C34", Offset = "0x10C6C34", VA = "0x10C6C34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0x10C6C38", Offset = "0x10C6C38", VA = "0x10C6C38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002467")]
			[Address(RVA = "0x10C6CDC", Offset = "0x10C6CDC", VA = "0x10C6CDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE63C4", Offset = "0xAE63C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__63_0;

			[Token(Token = "0x600246A")]
			[Address(RVA = "0x10C69C0", Offset = "0x10C69C0", VA = "0x10C69C0")]
			public <>c()
			{
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x10C69C8", Offset = "0x10C69C8", VA = "0x10C69C8")]
			internal string <UpdateHints>b__63_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool loaded;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform headsetRoot;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SDK_PlayStationFrustum frustum;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEC7B4", Offset = "0xAEC7B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC7B4", Offset = "0xAEC7B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEC7B4", Offset = "0xAEC7B4")]
		public int MaxVibration;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startHeadTrackingLocation;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool trackingStarted;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEC830", Offset = "0xAEC830")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC830", Offset = "0xAEC830")]
		public bool showControlHints;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC890", Offset = "0xAEC890")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC8C8", Offset = "0xAEC8C8")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC900", Offset = "0xAEC900")]
		public bool lockMouseToView;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEC938", Offset = "0xAEC938")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC938", Offset = "0xAEC938")]
		public float handMoveMultiplier;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC998", Offset = "0xAEC998")]
		public float handRotationMultiplier;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEC9D0", Offset = "0xAEC9D0")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECA08", Offset = "0xAECA08")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAECA40", Offset = "0xAECA40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECA40", Offset = "0xAECA40")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECAA0", Offset = "0xAECAA0")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECAD8", Offset = "0xAECAD8")]
		public KeyCode changeHands;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECB10", Offset = "0xAECB10")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECB48", Offset = "0xAECB48")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECB80", Offset = "0xAECB80")]
		public KeyCode changeAxis;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAECBB8", Offset = "0xAECBB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECBB8", Offset = "0xAECBB8")]
		public KeyCode moveForward;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECC18", Offset = "0xAECC18")]
		public KeyCode moveLeft;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECC50", Offset = "0xAECC50")]
		public KeyCode moveBackward;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECC88", Offset = "0xAECC88")]
		public KeyCode moveRight;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAECCC0", Offset = "0xAECCC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECCC0", Offset = "0xAECCC0")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECD20", Offset = "0xAECD20")]
		public KeyCode gripAlias;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECD58", Offset = "0xAECD58")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECD90", Offset = "0xAECD90")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECDC8", Offset = "0xAECDC8")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECE00", Offset = "0xAECE00")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECE38", Offset = "0xAECE38")]
		public KeyCode touchModifier;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECE70", Offset = "0xAECE70")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECEA8", Offset = "0xAECEA8")]
		public KeyCode RadiusLimitKey;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECEE0", Offset = "0xAECEE0")]
		public KeyCode IncreaseMultipliersKey;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECF18", Offset = "0xAECF18")]
		public KeyCode DecreaseMultipliersKey;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool isHand;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Text hintText;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SDK_PlayStationMoveController currentHand;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 oldPos;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float controllerRadiusLimit;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAECF60", Offset = "0xAECF60")]
		public float PlayerHeight;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform rightHand;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform leftHand;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform myCamera;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform trackedDevices;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject cachedCameraRig;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject hintCanvas;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x10C38F8", Offset = "0x10C38F8", VA = "0x10C38F8")]
		private void InitDeviceTracking()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x10C3A04", Offset = "0x10C3A04", VA = "0x10C3A04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB007D0", Offset = "0xB007D0")]
		private IEnumerator DeviceTracking()
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x10C3AA0", Offset = "0x10C3AA0", VA = "0x10C3AA0")]
		private bool ControllersConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x10C3AA8", Offset = "0x10C3AA8", VA = "0x10C3AA8")]
		private void UpdateInputTracking()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x10C3CA4", Offset = "0x10C3CA4", VA = "0x10C3CA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x10C3CC0", Offset = "0x10C3CC0", VA = "0x10C3CC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x10C3CC4", Offset = "0x10C3CC4", VA = "0x10C3CC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x10C3CCC", Offset = "0x10C3CCC", VA = "0x10C3CCC")]
		private void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x10C3D00", Offset = "0x10C3D00", VA = "0x10C3D00")]
		private void RegisterDevices()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x10C3D2C", Offset = "0x10C3D2C", VA = "0x10C3D2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB00834", Offset = "0xB00834")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x10C3CB8", Offset = "0x10C3CB8", VA = "0x10C3CB8")]
		private void UnregisterDevices()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x10C3DC8", Offset = "0x10C3DC8", VA = "0x10C3DC8")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x10C3BB4", Offset = "0x10C3BB4", VA = "0x10C3BB4")]
		private void Recenter()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x10C3DCC", Offset = "0x10C3DCC", VA = "0x10C3DCC")]
		private void SetUpEditorSimulator()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x10C40A4", Offset = "0x10C40A4", VA = "0x10C40A4")]
		private void UpdateSimulator()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x10C4714", Offset = "0x10C4714", VA = "0x10C4714")]
		private void UpdateHands()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x10C4214", Offset = "0x10C4214", VA = "0x10C4214")]
		private void RadiusLimiter()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x10C443C", Offset = "0x10C443C", VA = "0x10C443C")]
		private void MultiplierInputMonitor()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x10C6368", Offset = "0x10C6368", VA = "0x10C6368")]
		private void AdjustMultipliers(float value)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x10C4A88", Offset = "0x10C4A88", VA = "0x10C4A88")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x10C4D14", Offset = "0x10C4D14", VA = "0x10C4D14")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x10C4528", Offset = "0x10C4528", VA = "0x10C4528")]
		private void SetHand()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x10C44A8", Offset = "0x10C44A8", VA = "0x10C44A8")]
		private void SetMove()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x10C5008", Offset = "0x10C5008", VA = "0x10C5008")]
		private void UpdateHints()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x10C635C", Offset = "0x10C635C", VA = "0x10C635C")]
		private bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x10C620C", Offset = "0x10C620C", VA = "0x10C620C")]
		private Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x10C264C", Offset = "0x10C264C", VA = "0x10C264C")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x10C637C", Offset = "0x10C637C", VA = "0x10C637C")]
		public void ToggleHeight(bool reset)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x10C6550", Offset = "0x10C6550", VA = "0x10C6550")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x10C6648", Offset = "0x10C6648", VA = "0x10C6648")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x10C68EC", Offset = "0x10C68EC", VA = "0x10C68EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x10C68F0", Offset = "0x10C68F0", VA = "0x10C68F0")]
		public SDK_PlayStationVRInput()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2B34", Offset = "0xAE2B34")]
	public class SDK_PlayStationVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x10C1830", Offset = "0x10C1830", VA = "0x10C1830")]
		public SDK_PlayStationVRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public static class SDK_PlayStationVRDefines
	{
		[Token(Token = "0x4000D18")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PlayStation";

		[Token(Token = "0x4000D19")]
		public const string BuildTargetGroupName = "PS4";

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x10C38E8", Offset = "0x10C38E8", VA = "0x10C38E8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00898", Offset = "0xB00898")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2B9C", Offset = "0xAE2B9C")]
	public class SDK_PlayStationVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x10C38F0", Offset = "0x10C38F0", VA = "0x10C38F0")]
		public SDK_PlayStationVRHeadset()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class SDK_PlayStationVRKeyMappings : MonoBehaviour
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SDK_PlayStationMoveController.PlayStationKeys trigger;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDK_PlayStationMoveController.PlayStationKeys triggerHairline;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationMoveController.PlayStationKeys grip;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SDK_PlayStationMoveController.PlayStationKeys gripHairline;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDK_PlayStationMoveController.PlayStationKeys touchpad;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonOne;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonTwo;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public SDK_PlayStationMoveController.PlayStationKeys startMenu;

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x10C6D44", Offset = "0x10C6D44", VA = "0x10C6D44")]
		public SDK_PlayStationVRKeyMappings()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2C04", Offset = "0xAE2C04")]
	public class SDK_PlayStationVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x10C6D58", Offset = "0x10C6D58", VA = "0x10C6D58")]
		public SDK_PlayStationVRSystem()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class SDK_ControllerSim : MonoBehaviour
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastPos;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion lastRot;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> posList;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float magnitude;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 axis;

		[Token(Token = "0x17000073")]
		public bool Selected
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x1465CB4", Offset = "0x1465CB4", VA = "0x1465CB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x1465CBC", Offset = "0x1465CBC", VA = "0x1465CBC")]
			set
			{
			}
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1465CC8", Offset = "0x1465CC8", VA = "0x1465CC8")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1465E90", Offset = "0x1465E90", VA = "0x1465E90")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1466058", Offset = "0x1466058", VA = "0x1466058")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1466124", Offset = "0x1466124", VA = "0x1466124")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x14663D8", Offset = "0x14663D8", VA = "0x14663D8")]
		public SDK_ControllerSim()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class SDK_InputSimulator : MonoBehaviour
	{
		[Token(Token = "0x200058C")]
		public enum MouseInputMode
		{
			[Token(Token = "0x4002957")]
			Always,
			[Token(Token = "0x4002958")]
			RequiresButtonPress
		}

		[Serializable]
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE63D4", Offset = "0xAE63D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__58_0;

			[Token(Token = "0x600246D")]
			[Address(RVA = "0x10BEBB4", Offset = "0x10BEBB4", VA = "0x10BEBB4")]
			public <>c()
			{
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x10BEBBC", Offset = "0x10BEBBC", VA = "0x10BEBBC")]
			internal string <UpdateHints>b__58_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECF78", Offset = "0xAECF78")]
		public bool showControlHints;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECFB0", Offset = "0xAECFB0")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAECFE8", Offset = "0xAECFE8")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED020", Offset = "0xAED020")]
		public MouseInputMode mouseMovementInput;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED058", Offset = "0xAED058")]
		public bool lockMouseToView;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAED090", Offset = "0xAED090")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED090", Offset = "0xAED090")]
		public float handMoveMultiplier;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED0F0", Offset = "0xAED0F0")]
		public float handRotationMultiplier;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED128", Offset = "0xAED128")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED160", Offset = "0xAED160")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED198", Offset = "0xAED198")]
		public float playerSprintMultiplier;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAED1D0", Offset = "0xAED1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED1D0", Offset = "0xAED1D0")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED230", Offset = "0xAED230")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED268", Offset = "0xAED268")]
		public KeyCode changeHands;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED2A0", Offset = "0xAED2A0")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED2D8", Offset = "0xAED2D8")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED310", Offset = "0xAED310")]
		public KeyCode changeAxis;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED348", Offset = "0xAED348")]
		public KeyCode distancePickupLeft;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED380", Offset = "0xAED380")]
		public KeyCode distancePickupRight;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED3B8", Offset = "0xAED3B8")]
		public KeyCode distancePickupModifier;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAED3F0", Offset = "0xAED3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED3F0", Offset = "0xAED3F0")]
		public KeyCode moveForward;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED450", Offset = "0xAED450")]
		public KeyCode moveLeft;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED488", Offset = "0xAED488")]
		public KeyCode moveBackward;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED4C0", Offset = "0xAED4C0")]
		public KeyCode moveRight;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED4F8", Offset = "0xAED4F8")]
		public KeyCode sprint;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAED530", Offset = "0xAED530")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED530", Offset = "0xAED530")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED590", Offset = "0xAED590")]
		public KeyCode gripAlias;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED5C8", Offset = "0xAED5C8")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED600", Offset = "0xAED600")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED638", Offset = "0xAED638")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED670", Offset = "0xAED670")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED6A8", Offset = "0xAED6A8")]
		public KeyCode touchModifier;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED6E0", Offset = "0xAED6E0")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isHand;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject hintCanvas;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text hintText;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform rightHand;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform leftHand;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform currentHand;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 oldPos;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform neck;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SDK_ControllerSim rightController;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SDK_ControllerSim leftController;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject cachedCameraRig;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool destroyed;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float sprintMultiplier;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject crossHairPanel;

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x10BBEB0", Offset = "0x10BBEB0", VA = "0x10BBEB0")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x10BC124", Offset = "0x10BC124", VA = "0x10BC124")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x10BC19C", Offset = "0x10BC19C", VA = "0x10BC19C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x10BC688", Offset = "0x10BC688", VA = "0x10BC688")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x10BC734", Offset = "0x10BC734", VA = "0x10BC734")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x10BD208", Offset = "0x10BD208", VA = "0x10BD208")]
		private void TryPickup(bool rightHand)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x10BCBF8", Offset = "0x10BCBF8", VA = "0x10BCBF8")]
		private void UpdateHands()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x10BCF74", Offset = "0x10BCF74", VA = "0x10BCF74")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x10BD44C", Offset = "0x10BD44C", VA = "0x10BD44C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x10BCA14", Offset = "0x10BCA14", VA = "0x10BCA14")]
		private void SetHand()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x10BC994", Offset = "0x10BC994", VA = "0x10BC994")]
		private void SetMove()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x10BD6E0", Offset = "0x10BD6E0", VA = "0x10BD6E0")]
		private void UpdateHints()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x10BEAB4", Offset = "0x10BEAB4", VA = "0x10BEAB4")]
		private bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x10BE964", Offset = "0x10BE964", VA = "0x10BE964")]
		private Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x10BEAD0", Offset = "0x10BEAD0", VA = "0x10BEAD0")]
		public SDK_InputSimulator()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2C84", Offset = "0xAE2C84")]
	public class SDK_SimBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform area;

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x10C6F7C", Offset = "0x10C6F7C", VA = "0x10C6F7C", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x10C6F80", Offset = "0x10C6F80", VA = "0x10C6F80", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x10C7070", Offset = "0x10C7070", VA = "0x10C7070", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x10C72D8", Offset = "0x10C72D8", VA = "0x10C72D8", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x10C72E4", Offset = "0x10C72E4", VA = "0x10C72E4", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x10C72EC", Offset = "0x10C72EC", VA = "0x10C72EC", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x10C72F4", Offset = "0x10C72F4", VA = "0x10C72F4", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x10C72F8", Offset = "0x10C72F8", VA = "0x10C72F8")]
		public SDK_SimBoundaries()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2CEC", Offset = "0xAE2CEC")]
	public class SDK_SimController : SDK_BaseController
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, KeyCode> keyMappings;

		[Token(Token = "0x4000D5B")]
		protected const string RIGHT_HAND_CONTROLLER_NAME = "RightHand";

		[Token(Token = "0x4000D5C")]
		protected const string LEFT_HAND_CONTROLLER_NAME = "LeftHand";

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x10C7300", Offset = "0x10C7300", VA = "0x10C7300", Slot = "46")]
		public virtual void SetKeyMappings(Dictionary<string, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x10C7308", Offset = "0x10C7308", VA = "0x10C7308", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x10C730C", Offset = "0x10C730C", VA = "0x10C730C", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x10C7310", Offset = "0x10C7310", VA = "0x10C7310", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x10C7318", Offset = "0x10C7318", VA = "0x10C7318", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x10C7360", Offset = "0x10C7360", VA = "0x10C7360", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x10C7400", Offset = "0x10C7400", VA = "0x10C7400", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x10C7460", Offset = "0x10C7460", VA = "0x10C7460", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x10C7624", Offset = "0x10C7624", VA = "0x10C7624", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x10C76D8", Offset = "0x10C76D8", VA = "0x10C76D8", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x10C76E0", Offset = "0x10C76E0", VA = "0x10C76E0", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x10C77AC", Offset = "0x10C77AC", VA = "0x10C77AC", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x10C7878", Offset = "0x10C7878", VA = "0x10C7878", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x10C7888", Offset = "0x10C7888", VA = "0x10C7888", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x10C7898", Offset = "0x10C7898", VA = "0x10C7898", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x10C78AC", Offset = "0x10C78AC", VA = "0x10C78AC", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x10C78C0", Offset = "0x10C78C0", VA = "0x10C78C0", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x10C78D0", Offset = "0x10C78D0", VA = "0x10C78D0", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x10C7A0C", Offset = "0x10C7A0C", VA = "0x10C7A0C", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x10C7A98", Offset = "0x10C7A98", VA = "0x10C7A98", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x10C7A9C", Offset = "0x10C7A9C", VA = "0x10C7A9C", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x10C7AA0", Offset = "0x10C7AA0", VA = "0x10C7AA0", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x10C7AA8", Offset = "0x10C7AA8", VA = "0x10C7AA8", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x10C7B04", Offset = "0x10C7B04", VA = "0x10C7B04", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x10C7C5C", Offset = "0x10C7C5C", VA = "0x10C7C5C", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x10C7DB4", Offset = "0x10C7DB4", VA = "0x10C7DB4", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x10C7DCC", Offset = "0x10C7DCC", VA = "0x10C7DCC", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x10C7E2C", Offset = "0x10C7E2C", VA = "0x10C7E2C", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x10C7E34", Offset = "0x10C7E34", VA = "0x10C7E34", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x10C7F68", Offset = "0x10C7F68", VA = "0x10C7F68", Slot = "47")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x10C7F78", Offset = "0x10C7F78", VA = "0x10C7F78", Slot = "48")]
		protected virtual void SetupPlayer()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x10C8174", Offset = "0x10C8174", VA = "0x10C8174", Slot = "49")]
		protected virtual bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x10C81E0", Offset = "0x10C81E0", VA = "0x10C81E0", Slot = "50")]
		protected virtual bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x10C824C", Offset = "0x10C824C", VA = "0x10C824C", Slot = "51")]
		protected virtual bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x10C829C", Offset = "0x10C829C", VA = "0x10C829C", Slot = "52")]
		protected virtual bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x10C82F0", Offset = "0x10C82F0", VA = "0x10C82F0", Slot = "53")]
		protected virtual bool GetControllerButtonState(uint index, string keyMapping, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x10C846C", Offset = "0x10C846C", VA = "0x10C846C", Slot = "54")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x10C853C", Offset = "0x10C853C", VA = "0x10C853C", Slot = "55")]
		protected virtual GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x10C8650", Offset = "0x10C8650", VA = "0x10C8650")]
		public SDK_SimController()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2D54", Offset = "0xAE2D54")]
	public class SDK_SimHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform camera;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion lastRot;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> posList;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float magnitude;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 axis;

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x10C87B8", Offset = "0x10C87B8", VA = "0x10C87B8", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x10C8A84", Offset = "0x10C8A84", VA = "0x10C8A84", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x10C8A88", Offset = "0x10C8A88", VA = "0x10C8A88", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x10C8B90", Offset = "0x10C8B90", VA = "0x10C8B90", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x10C8B9C", Offset = "0x10C8B9C", VA = "0x10C8B9C", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x10C8D64", Offset = "0x10C8D64", VA = "0x10C8D64", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x10C8F2C", Offset = "0x10C8F2C", VA = "0x10C8F2C", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x10C8FCC", Offset = "0x10C8FCC", VA = "0x10C8FCC", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x10C905C", Offset = "0x10C905C", VA = "0x10C905C", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x10C9148", Offset = "0x10C9148", VA = "0x10C9148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x10C924C", Offset = "0x10C924C", VA = "0x10C924C")]
		public SDK_SimHeadset()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2DBC", Offset = "0xAE2DBC")]
	public class SDK_SimSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x10C92DC", Offset = "0x10C92DC", VA = "0x10C92DC", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x10C92E4", Offset = "0x10C92E4", VA = "0x10C92E4", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x10C92EC", Offset = "0x10C92EC", VA = "0x10C92EC", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10C92F0", Offset = "0x10C92F0", VA = "0x10C92F0")]
		public SDK_SimSystem()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2E14", Offset = "0xAE2E14")]
	public class SDK_SteamVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x10C92F8", Offset = "0x10C92F8", VA = "0x10C92F8")]
		public SDK_SteamVRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2E7C", Offset = "0xAE2E7C")]
	public class SDK_SteamVRController : SDK_FallbackController
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x10C9300", Offset = "0x10C9300", VA = "0x10C9300")]
		public SDK_SteamVRController()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public static class SDK_SteamVRDefines
	{
		[Token(Token = "0x4000D64")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_STEAMVR";

		[Token(Token = "0x4000D65")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x10C9308", Offset = "0x10C9308", VA = "0x10C9308")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB008E4", Offset = "0xB008E4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB008E4", Offset = "0xB008E4")]
		private static bool IsPluginVersion122OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x10C93D0", Offset = "0x10C93D0", VA = "0x10C93D0")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00974", Offset = "0xB00974")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00974", Offset = "0xB00974")]
		private static bool IsPluginVersion121OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x10C9528", Offset = "0x10C9528", VA = "0x10C9528")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00A04", Offset = "0xB00A04")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00A04", Offset = "0xB00A04")]
		private static bool IsPluginVersion120()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x10C967C", Offset = "0x10C967C", VA = "0x10C967C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00A94", Offset = "0xB00A94")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00A94", Offset = "0xB00A94")]
		private static bool IsPluginVersion111OrOlder()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2EE4", Offset = "0xAE2EE4")]
	public class SDK_SteamVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x10C9794", Offset = "0x10C9794", VA = "0x10C9794")]
		public SDK_SteamVRHeadset()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2F4C", Offset = "0xAE2F4C")]
	public class SDK_SteamVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x10C979C", Offset = "0x10C979C", VA = "0x10C979C")]
		public SDK_SteamVRSystem()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE2FCC", Offset = "0xAE2FCC")]
	public class SDK_XRBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x10C9850", Offset = "0x10C9850", VA = "0x10C9850", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x10C9854", Offset = "0x10C9854", VA = "0x10C9854", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x10C9944", Offset = "0x10C9944", VA = "0x10C9944", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x10C9BAC", Offset = "0x10C9BAC", VA = "0x10C9BAC", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x10C9BB8", Offset = "0x10C9BB8", VA = "0x10C9BB8", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x10C9BC0", Offset = "0x10C9BC0", VA = "0x10C9BC0", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x10C9BC8", Offset = "0x10C9BC8", VA = "0x10C9BC8", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x10C9BCC", Offset = "0x10C9BCC", VA = "0x10C9BCC")]
		public SDK_XRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3034", Offset = "0xAE3034")]
	public class SDK_XRController : SDK_BaseController
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SDK_XRBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool[] previousHairTriggerState;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool[] currentHairTriggerState;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool[] previousHairGripState;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] currentHairGripState;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float[] hairTriggerLimit;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float[] hairGripLimit;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, bool> OldFrameData;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x10C9BD4", Offset = "0x10C9BD4", VA = "0x10C9BD4", Slot = "5")]
		public override void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x10C9BDC", Offset = "0x10C9BDC", VA = "0x10C9BDC", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x10C9BEC", Offset = "0x10C9BEC", VA = "0x10C9BEC", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x10C9BF0", Offset = "0x10C9BF0", VA = "0x10C9BF0", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x10C9BF8", Offset = "0x10C9BF8", VA = "0x10C9BF8", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x10C9C40", Offset = "0x10C9C40", VA = "0x10C9C40", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x10C9CE0", Offset = "0x10C9CE0", VA = "0x10C9CE0", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x10C9D94", Offset = "0x10C9D94", VA = "0x10C9D94", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x10C9F48", Offset = "0x10C9F48", VA = "0x10C9F48", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x10C9FA8", Offset = "0x10C9FA8", VA = "0x10C9FA8", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x10C9FB0", Offset = "0x10C9FB0", VA = "0x10C9FB0", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x10CA078", Offset = "0x10CA078", VA = "0x10CA078", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x10CA140", Offset = "0x10CA140", VA = "0x10CA140", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x10CA150", Offset = "0x10CA150", VA = "0x10CA150", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x10CA160", Offset = "0x10CA160", VA = "0x10CA160", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x10CA174", Offset = "0x10CA174", VA = "0x10CA174", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x10CA188", Offset = "0x10CA188", VA = "0x10CA188", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x10CA198", Offset = "0x10CA198", VA = "0x10CA198", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x10CA2F0", Offset = "0x10CA2F0", VA = "0x10CA2F0", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x10CA338", Offset = "0x10CA338", VA = "0x10CA338", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x10CA33C", Offset = "0x10CA33C", VA = "0x10CA33C", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x10CA41C", Offset = "0x10CA41C", VA = "0x10CA41C")]
		private InputDevice? GetDevice(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x10CA524", Offset = "0x10CA524", VA = "0x10CA524", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x10CA52C", Offset = "0x10CA52C", VA = "0x10CA52C", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x10CA588", Offset = "0x10CA588", VA = "0x10CA588", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x10CA6F0", Offset = "0x10CA6F0", VA = "0x10CA6F0", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x10CA858", Offset = "0x10CA858", VA = "0x10CA858", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x10CA864", Offset = "0x10CA864", VA = "0x10CA864", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x10CAB20", Offset = "0x10CAB20", VA = "0x10CAB20", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x10CABA0", Offset = "0x10CABA0", VA = "0x10CABA0", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x10CAF90", Offset = "0x10CAF90", VA = "0x10CAF90", Slot = "46")]
		protected virtual void ProcessControllerUpdate(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x10CB224", Offset = "0x10CB224", VA = "0x10CB224", Slot = "47")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x10CB5B8", Offset = "0x10CB5B8", VA = "0x10CB5B8", Slot = "48")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x10CB63C", Offset = "0x10CB63C", VA = "0x10CB63C", Slot = "49")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, InputDevice inputDevice, InputFeatureUsage<bool> usageType, string buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x10CB8BC", Offset = "0x10CB8BC", VA = "0x10CB8BC", Slot = "50")]
		protected virtual void UpdateHairValues(uint index, float axisValue, float hairDelta, ref bool previousState, ref bool currentState, ref float hairLimit)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x10CB9DC", Offset = "0x10CB9DC", VA = "0x10CB9DC", Slot = "51")]
		protected virtual SDK_XRBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x10CBB50", Offset = "0x10CBB50", VA = "0x10CBB50")]
		public SDK_XRController()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public static class SDK_XRDefines
	{
		[Token(Token = "0x4000D72")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_UNITYXR";

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x10CBC30", Offset = "0x10CBC30", VA = "0x10CBC30")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00B24", Offset = "0xB00B24")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB00B24", Offset = "0xB00B24")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE309C", Offset = "0xAE309C")]
	public class SDK_XRHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x10CBC38", Offset = "0x10CBC38", VA = "0x10CBC38", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x10CBC3C", Offset = "0x10CBC3C", VA = "0x10CBC3C", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x10CBC40", Offset = "0x10CBC40", VA = "0x10CBC40", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x10CBCEC", Offset = "0x10CBCEC", VA = "0x10CBCEC", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x10CBD90", Offset = "0x10CBD90", VA = "0x10CBD90", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x10CBDD0", Offset = "0x10CBDD0", VA = "0x10CBDD0", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x10CBE10", Offset = "0x10CBE10", VA = "0x10CBE10", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x10CBEB0", Offset = "0x10CBEB0", VA = "0x10CBEB0", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x10CBF3C", Offset = "0x10CBF3C", VA = "0x10CBF3C", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x10CC020", Offset = "0x10CC020", VA = "0x10CC020", Slot = "17")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x10CC170", Offset = "0x10CC170", VA = "0x10CC170")]
		public SDK_XRHeadset()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3104", Offset = "0xAE3104")]
	public class SDK_XRSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x10CC178", Offset = "0x10CC178", VA = "0x10CC178", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x10CC180", Offset = "0x10CC180", VA = "0x10CC180", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x10CC188", Offset = "0x10CC188", VA = "0x10CC188", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x10CC18C", Offset = "0x10CC18C", VA = "0x10CC18C")]
		public SDK_XRSystem()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public static class VRTK_SDK_Bridge
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDK_BaseSystem systemSDK;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SDK_BaseHeadset headsetSDK;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SDK_BaseController controllerSDK;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SDK_BaseBoundaries boundariesSDK;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static SDK_BaseController _cachedControllerSDK;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static VRTK_SDKManager _cachedSDKManagerInstance;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x12882E0", Offset = "0x12882E0", VA = "0x12882E0")]
		public static void ControllerProcessUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1288814", Offset = "0x1288814", VA = "0x1288814")]
		public static void ControllerProcessFixedUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x128889C", Offset = "0x128889C", VA = "0x128889C")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x128890C", Offset = "0x128890C", VA = "0x128890C")]
		public static string GetControllerDefaultColliderPath(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1288984", Offset = "0x1288984", VA = "0x1288984")]
		public static string GetControllerElementPath(SDK_BaseController.ControllerElements element, SDK_BaseController.ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1288A14", Offset = "0x1288A14", VA = "0x1288A14")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1288A90", Offset = "0x1288A90", VA = "0x1288A90")]
		public static GameObject GetControllerByIndex(uint index, bool actual)
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1288B1C", Offset = "0x1288B1C", VA = "0x1288B1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00BB4", Offset = "0xB00BB4")]
		public static Transform GetControllerOrigin(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1288BB4", Offset = "0x1288BB4", VA = "0x1288BB4")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1288C30", Offset = "0x1288C30", VA = "0x1288C30")]
		public static Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1288CAC", Offset = "0x1288CAC", VA = "0x1288CAC")]
		public static GameObject GetControllerLeftHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1288D28", Offset = "0x1288D28", VA = "0x1288D28")]
		public static GameObject GetControllerRightHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1288DA4", Offset = "0x1288DA4", VA = "0x1288DA4")]
		public static GameObject GetControllerByHand(SDK_BaseController.ControllerHand hand, bool actual)
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1288E6C", Offset = "0x1288E6C", VA = "0x1288E6C")]
		public static bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1288EE8", Offset = "0x1288EE8", VA = "0x1288EE8")]
		public static bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1288F64", Offset = "0x1288F64", VA = "0x1288F64")]
		public static bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1288FF0", Offset = "0x1288FF0", VA = "0x1288FF0")]
		public static bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x128907C", Offset = "0x128907C", VA = "0x128907C")]
		public static GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x12890F8", Offset = "0x12890F8", VA = "0x12890F8")]
		public static SDK_BaseController.ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1289174", Offset = "0x1289174", VA = "0x1289174")]
		public static GameObject GetControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x12891F0", Offset = "0x12891F0", VA = "0x12891F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00BEC", Offset = "0xB00BEC")]
		public static GameObject GetControllerRenderModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1289288", Offset = "0x1289288", VA = "0x1289288")]
		public static GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1289304", Offset = "0x1289304", VA = "0x1289304")]
		public static void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1289390", Offset = "0x1289390", VA = "0x1289390")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00C24", Offset = "0xB00C24")]
		public static void HapticPulseOnIndex(uint index, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1289438", Offset = "0x1289438", VA = "0x1289438")]
		public static void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x12894C4", Offset = "0x12894C4", VA = "0x12894C4")]
		public static bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1289550", Offset = "0x1289550", VA = "0x1289550")]
		public static SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x12895C4", Offset = "0x12895C4", VA = "0x12895C4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00C5C", Offset = "0xB00C5C")]
		public static Vector3 GetVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x128965C", Offset = "0x128965C", VA = "0x128965C")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x12896D8", Offset = "0x12896D8", VA = "0x12896D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00C94", Offset = "0xB00C94")]
		public static Vector3 GetAngularVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1289770", Offset = "0x1289770", VA = "0x1289770")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x12897EC", Offset = "0x12897EC", VA = "0x12897EC")]
		public static bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x12898A8", Offset = "0x12898A8", VA = "0x12898A8")]
		public static Vector2 GetControllerAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1289934", Offset = "0x1289934", VA = "0x1289934")]
		public static float GetControllerHairlineDelta(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x12899C0", Offset = "0x12899C0", VA = "0x12899C0")]
		public static bool GetControllerButtonState(SDK_BaseController.ButtonTypes buttonType, SDK_BaseController.ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1289A54", Offset = "0x1289A54", VA = "0x1289A54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00CCC", Offset = "0xB00CCC")]
		public static Vector2 GetTouchpadAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1289AF0", Offset = "0x1289AF0", VA = "0x1289AF0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00D04", Offset = "0xB00D04")]
		public static Vector2 GetTriggerAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1289B8C", Offset = "0x1289B8C", VA = "0x1289B8C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00D3C", Offset = "0xB00D3C")]
		public static Vector2 GetGripAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1289C28", Offset = "0x1289C28", VA = "0x1289C28")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00D74", Offset = "0xB00D74")]
		public static float GetTriggerHairlineDeltaOnIndex(uint index)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1289CC4", Offset = "0x1289CC4", VA = "0x1289CC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00DAC", Offset = "0xB00DAC")]
		public static float GetGripHairlineDeltaOnIndex(uint index)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1289D60", Offset = "0x1289D60", VA = "0x1289D60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00DE4", Offset = "0xB00DE4")]
		public static bool IsTriggerPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1289E00", Offset = "0x1289E00", VA = "0x1289E00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00E1C", Offset = "0xB00E1C")]
		public static bool IsTriggerPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1289EA0", Offset = "0x1289EA0", VA = "0x1289EA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00E54", Offset = "0xB00E54")]
		public static bool IsTriggerPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1289F40", Offset = "0x1289F40", VA = "0x1289F40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00E8C", Offset = "0xB00E8C")]
		public static bool IsTriggerTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1289FE0", Offset = "0x1289FE0", VA = "0x1289FE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00EC4", Offset = "0xB00EC4")]
		public static bool IsTriggerTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x128A080", Offset = "0x128A080", VA = "0x128A080")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00EFC", Offset = "0xB00EFC")]
		public static bool IsTriggerTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x128A120", Offset = "0x128A120", VA = "0x128A120")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00F34", Offset = "0xB00F34")]
		public static bool IsHairTriggerDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x128A1C0", Offset = "0x128A1C0", VA = "0x128A1C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00F6C", Offset = "0xB00F6C")]
		public static bool IsHairTriggerUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x128A260", Offset = "0x128A260", VA = "0x128A260")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00FA4", Offset = "0xB00FA4")]
		public static bool IsGripPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x128A300", Offset = "0x128A300", VA = "0x128A300")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB00FDC", Offset = "0xB00FDC")]
		public static bool IsGripPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x128A3A0", Offset = "0x128A3A0", VA = "0x128A3A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01014", Offset = "0xB01014")]
		public static bool IsGripPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x128A440", Offset = "0x128A440", VA = "0x128A440")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0104C", Offset = "0xB0104C")]
		public static bool IsGripTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x128A4E0", Offset = "0x128A4E0", VA = "0x128A4E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01084", Offset = "0xB01084")]
		public static bool IsGripTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x128A580", Offset = "0x128A580", VA = "0x128A580")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB010BC", Offset = "0xB010BC")]
		public static bool IsGripTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x128A620", Offset = "0x128A620", VA = "0x128A620")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB010F4", Offset = "0xB010F4")]
		public static bool IsHairGripDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x128A6C0", Offset = "0x128A6C0", VA = "0x128A6C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0112C", Offset = "0xB0112C")]
		public static bool IsHairGripUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x128A760", Offset = "0x128A760", VA = "0x128A760")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01164", Offset = "0xB01164")]
		public static bool IsTouchpadPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x128A800", Offset = "0x128A800", VA = "0x128A800")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0119C", Offset = "0xB0119C")]
		public static bool IsTouchpadPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x128A8A0", Offset = "0x128A8A0", VA = "0x128A8A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB011D4", Offset = "0xB011D4")]
		public static bool IsTouchpadPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x128A940", Offset = "0x128A940", VA = "0x128A940")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0120C", Offset = "0xB0120C")]
		public static bool IsTouchpadTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x128A9E0", Offset = "0x128A9E0", VA = "0x128A9E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01244", Offset = "0xB01244")]
		public static bool IsTouchpadTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x128AA80", Offset = "0x128AA80", VA = "0x128AA80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0127C", Offset = "0xB0127C")]
		public static bool IsTouchpadTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x128AB20", Offset = "0x128AB20", VA = "0x128AB20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB012B4", Offset = "0xB012B4")]
		public static bool IsButtonOnePressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x128ABC0", Offset = "0x128ABC0", VA = "0x128ABC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB012EC", Offset = "0xB012EC")]
		public static bool IsButtonOnePressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x128AC60", Offset = "0x128AC60", VA = "0x128AC60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01324", Offset = "0xB01324")]
		public static bool IsButtonOnePressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x128AD00", Offset = "0x128AD00", VA = "0x128AD00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0135C", Offset = "0xB0135C")]
		public static bool IsButtonOneTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x128ADA0", Offset = "0x128ADA0", VA = "0x128ADA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01394", Offset = "0xB01394")]
		public static bool IsButtonOneTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x128AE40", Offset = "0x128AE40", VA = "0x128AE40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB013CC", Offset = "0xB013CC")]
		public static bool IsButtonOneTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x128AEE0", Offset = "0x128AEE0", VA = "0x128AEE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01404", Offset = "0xB01404")]
		public static bool IsButtonTwoPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x128AF80", Offset = "0x128AF80", VA = "0x128AF80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0143C", Offset = "0xB0143C")]
		public static bool IsButtonTwoPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x128B020", Offset = "0x128B020", VA = "0x128B020")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01474", Offset = "0xB01474")]
		public static bool IsButtonTwoPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x128B0C0", Offset = "0x128B0C0", VA = "0x128B0C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB014AC", Offset = "0xB014AC")]
		public static bool IsButtonTwoTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x128B160", Offset = "0x128B160", VA = "0x128B160")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB014E4", Offset = "0xB014E4")]
		public static bool IsButtonTwoTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x128B200", Offset = "0x128B200", VA = "0x128B200")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0151C", Offset = "0xB0151C")]
		public static bool IsButtonTwoTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x128B2A0", Offset = "0x128B2A0", VA = "0x128B2A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01554", Offset = "0xB01554")]
		public static bool IsStartMenuPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x128B340", Offset = "0x128B340", VA = "0x128B340")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0158C", Offset = "0xB0158C")]
		public static bool IsStartMenuPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x128B3E0", Offset = "0x128B3E0", VA = "0x128B3E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB015C4", Offset = "0xB015C4")]
		public static bool IsStartMenuPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x128B480", Offset = "0x128B480", VA = "0x128B480")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB015FC", Offset = "0xB015FC")]
		public static bool IsStartMenuTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x128B520", Offset = "0x128B520", VA = "0x128B520")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01634", Offset = "0xB01634")]
		public static bool IsStartMenuTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x128B5C0", Offset = "0x128B5C0", VA = "0x128B5C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0166C", Offset = "0xB0166C")]
		public static bool IsStartMenuTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x128B660", Offset = "0x128B660", VA = "0x128B660")]
		public static void HeadsetProcessUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x128B8D0", Offset = "0x128B8D0", VA = "0x128B8D0")]
		public static void HeadsetProcessFixedUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x128B948", Offset = "0x128B948", VA = "0x128B948")]
		public static Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x128B9B8", Offset = "0x128B9B8", VA = "0x128B9B8")]
		public static Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x128BA28", Offset = "0x128BA28", VA = "0x128BA28")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x128BA98", Offset = "0x128BA98", VA = "0x128BA98")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x128BB0C", Offset = "0x128BB0C", VA = "0x128BB0C")]
		public static void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x128BBC8", Offset = "0x128BBC8", VA = "0x128BBC8")]
		public static bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x128BC44", Offset = "0x128BC44", VA = "0x128BC44")]
		public static void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x128BCC0", Offset = "0x128BCC0", VA = "0x128BCC0")]
		public static Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x127F7B4", Offset = "0x127F7B4", VA = "0x127F7B4")]
		public static Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x128BF28", Offset = "0x128BF28", VA = "0x128BF28")]
		public static float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x128BF98", Offset = "0x128BF98", VA = "0x128BF98")]
		public static bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x128C008", Offset = "0x128C008", VA = "0x128C008")]
		public static bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x128C07C", Offset = "0x128C07C", VA = "0x128C07C")]
		public static void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x128C0F8", Offset = "0x128C0F8", VA = "0x128C0F8")]
		public static bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x128C358", Offset = "0x128C358", VA = "0x128C358")]
		public static bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x128C3C8", Offset = "0x128C3C8", VA = "0x128C3C8")]
		public static void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x128C168", Offset = "0x128C168", VA = "0x128C168")]
		public static SDK_BaseSystem GetSystemSDK()
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x128B6D8", Offset = "0x128B6D8", VA = "0x128B6D8")]
		public static SDK_BaseHeadset GetHeadsetSDK()
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1288368", Offset = "0x1288368", VA = "0x1288368")]
		public static SDK_BaseController GetControllerSDK()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x128BD30", Offset = "0x128BD30", VA = "0x128BD30")]
		public static SDK_BaseBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x128363C", Offset = "0x128363C", VA = "0x128363C")]
		public static void InvalidateCaches()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE3174", Offset = "0xAE3174")]
	public class WindowsMR_Camera : MonoBehaviour
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED718", Offset = "0xAED718")]
		private bool forceRoomScaleTracking;

		[Token(Token = "0x4000D7B")]
		private const string DEVICE_NAME = "WindowsMR";

		[Token(Token = "0x17000074")]
		public bool ForceRoomScaleTracking
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xDF5CB8", Offset = "0xDF5CB8", VA = "0xDF5CB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xDF5CC0", Offset = "0xDF5CC0", VA = "0xDF5CC0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xDF5CCC", Offset = "0xDF5CCC", VA = "0xDF5CCC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xDF5D10", Offset = "0xDF5D10", VA = "0xDF5D10", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xDF5FC0", Offset = "0xDF5FC0", VA = "0xDF5FC0", Slot = "6")]
		protected virtual bool CheckForMixedRealitySupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xDF60E8", Offset = "0xDF60E8", VA = "0xDF60E8", Slot = "7")]
		protected virtual void SetupMRCamera()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xDF61DC", Offset = "0xDF61DC", VA = "0xDF61DC")]
		public WindowsMR_Camera()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class WindowsMR_ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xDF61EC", Offset = "0xDF61EC", VA = "0xDF61EC")]
		public WindowsMR_ControllerManager()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class WindowsMR_TrackedObject : MonoBehaviour
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xDF61F4", Offset = "0xDF61F4", VA = "0xDF61F4")]
		public WindowsMR_TrackedObject()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE31D8", Offset = "0xAE31D8")]
	public class SDK_WindowsMRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x10C97AC", Offset = "0x10C97AC", VA = "0x10C97AC")]
		public SDK_WindowsMRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3240", Offset = "0xAE3240")]
	public class SDK_WindowsMRController : SDK_FallbackController
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10C97B4", Offset = "0x10C97B4", VA = "0x10C97B4")]
		public SDK_WindowsMRController()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public static class SDK_WindowsMRDefines
	{
		[Token(Token = "0x4000D7C")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_WINDOWSMR";

		[Token(Token = "0x4000D7D")]
		private const string BuildTargetGroupName = "WSA";

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x10C97BC", Offset = "0x10C97BC", VA = "0x10C97BC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB016A4", Offset = "0xB016A4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB016A4", Offset = "0xB016A4")]
		private static bool HasControllerVisualization()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10C9840", Offset = "0x10C9840", VA = "0x10C9840")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB01734", Offset = "0xB01734")]
		private static bool IsXRSettingsEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE32A8", Offset = "0xAE32A8")]
	public class SDK_WindowsMRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x10C9848", Offset = "0x10C9848", VA = "0x10C9848")]
		public SDK_WindowsMRHeadset()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3310", Offset = "0xAE3310")]
	public class SDK_WindowsMR : SDK_FallbackSystem
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x10C97A4", Offset = "0x10C97A4", VA = "0x10C97A4")]
		public SDK_WindowsMR()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3390", Offset = "0xAE3390")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3390", Offset = "0xAE3390")]
	public class SDK_XimmerseBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x10CC194", Offset = "0x10CC194", VA = "0x10CC194")]
		public SDK_XimmerseBoundaries()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3424", Offset = "0xAE3424")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE3424", Offset = "0xAE3424")]
	public class SDK_XimmerseController : SDK_FallbackController
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x10CC19C", Offset = "0x10CC19C", VA = "0x10CC19C")]
		public SDK_XimmerseController()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public static class SDK_XimmerseDefines
	{
		[Token(Token = "0x4000D7E")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_XIMMERSE";

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x10CC1A4", Offset = "0x10CC1A4", VA = "0x10CC1A4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB01780", Offset = "0xB01780")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0xB01780", Offset = "0xB01780")]
		private static bool IsXimmerseAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE34B8", Offset = "0xAE34B8")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE34B8", Offset = "0xAE34B8")]
	public class SDK_XimmerseHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x10CC228", Offset = "0x10CC228", VA = "0x10CC228")]
		public SDK_XimmerseHeadset()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE354C", Offset = "0xAE354C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0xAE354C", Offset = "0xAE354C")]
	public class SDK_XimmerseSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x10CC230", Offset = "0x10CC230", VA = "0x10CC230")]
		public SDK_XimmerseSystem()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class VRTK_ContentHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED764", Offset = "0xAED764")]
		public VRTK_Control control;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED79C", Offset = "0xAED79C")]
		public Transform inside;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED7D4", Offset = "0xAED7D4")]
		public Transform outside;

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1691E74", Offset = "0x1691E74", VA = "0x1691E74", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1692000", Offset = "0x1692000", VA = "0x1692000", Slot = "5")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1692134", Offset = "0x1692134", VA = "0x1692134")]
		public VRTK_ContentHandler()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public delegate void Button3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE363C", Offset = "0xAE363C")]
	public class VRTK_Button : VRTK_Control
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE63E4", Offset = "0xAE63E4")]
		public class ButtonEvents
		{
			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEvent OnPush;

			[Token(Token = "0x600246F")]
			[Address(RVA = "0x168F28C", Offset = "0x168F28C", VA = "0x168F28C")]
			public ButtonEvents()
			{
			}
		}

		[Token(Token = "0x200058F")]
		public enum ButtonDirection
		{
			[Token(Token = "0x400295D")]
			autodetect,
			[Token(Token = "0x400295E")]
			x,
			[Token(Token = "0x400295F")]
			y,
			[Token(Token = "0x4002960")]
			z,
			[Token(Token = "0x4002961")]
			negX,
			[Token(Token = "0x4002962")]
			negY,
			[Token(Token = "0x4002963")]
			negZ
		}

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED80C", Offset = "0xAED80C")]
		public GameObject connectedTo;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED844", Offset = "0xAED844")]
		public ButtonDirection direction;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED87C", Offset = "0xAED87C")]
		public float activationDistance;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED8B4", Offset = "0xAED8B4")]
		public float buttonStrength;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED8EC", Offset = "0xAED8EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAED8EC", Offset = "0xAED8EC")]
		public ButtonEvents events;

		[Token(Token = "0x4000D89")]
		protected const float MAX_AUTODETECT_ACTIVATION_LENGTH = 4f;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected ButtonDirection finalDirection;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 restingPosition;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3 activationDir;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody buttonRigidbody;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ConfigurableJoint buttonJoint;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ConstantForce buttonForce;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int forceCount;

		[Token(Token = "0x14000038")]
		public event Button3DEventHandler Pushed
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x168CDC8", Offset = "0x168CDC8", VA = "0x168CDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01810", Offset = "0xB01810")]
			add
			{
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x168CE6C", Offset = "0x168CE6C", VA = "0x168CE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01820", Offset = "0xB01820")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Button3DEventHandler Released
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x168CF10", Offset = "0x168CF10", VA = "0x168CF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01830", Offset = "0xB01830")]
			add
			{
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x168CFB4", Offset = "0x168CFB4", VA = "0x168CFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01840", Offset = "0xB01840")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x168D058", Offset = "0x168D058", VA = "0x168D058", Slot = "19")]
		public virtual void OnPushed(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x168D070", Offset = "0x168D070", VA = "0x168D070", Slot = "20")]
		public virtual void OnReleased(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x168D088", Offset = "0x168D088", VA = "0x168D088", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x168D3AC", Offset = "0x168D3AC", VA = "0x168D3AC", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x168D640", Offset = "0x168D640", VA = "0x168D640", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x168DE38", Offset = "0x168DE38", VA = "0x168DE38", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x168DE44", Offset = "0x168DE44", VA = "0x168DE44", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x168DF14", Offset = "0x168DF14", VA = "0x168DF14", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x168DFFC", Offset = "0x168DFFC", VA = "0x168DFFC", Slot = "22")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x168E00C", Offset = "0x168E00C", VA = "0x168E00C", Slot = "23")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x168E01C", Offset = "0x168E01C", VA = "0x168E01C", Slot = "24")]
		protected virtual ButtonDirection DetectDirection()
		{
			return default(ButtonDirection);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x168EA58", Offset = "0x168EA58", VA = "0x168EA58", Slot = "25")]
		protected virtual Vector3 CalculateActivationDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x168F088", Offset = "0x168F088", VA = "0x168F088", Slot = "26")]
		protected virtual bool ReachedActivationDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x168F15C", Offset = "0x168F15C", VA = "0x168F15C", Slot = "27")]
		protected virtual Vector3 GetForceVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x168F200", Offset = "0x168F200", VA = "0x168F200")]
		public VRTK_Button()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3674", Offset = "0xAE3674")]
	public class VRTK_Chest : VRTK_Control
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED96C", Offset = "0xAED96C")]
		public Direction direction;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED9A4", Offset = "0xAED9A4")]
		public GameObject lid;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAED9DC", Offset = "0xAED9DC")]
		public GameObject body;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDA14", Offset = "0xAEDA14")]
		public GameObject handle;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDA4C", Offset = "0xAEDA4C")]
		public GameObject content;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDA84", Offset = "0xAEDA84")]
		public bool hideContent;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDABC", Offset = "0xAEDABC")]
		public float maxAngle;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float minAngle;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float stepSize;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected FixedJoint handleJoint;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody lidRigidbody;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected HingeJoint lidJoint;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool lidJointCreated;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Direction finalDirection;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float subDirection;

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x168FA58", Offset = "0x168FA58", VA = "0x168FA58", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x168FDC4", Offset = "0x168FDC4", VA = "0x168FDC4", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x168FE2C", Offset = "0x168FE2C", VA = "0x168FE2C", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x1690360", Offset = "0x1690360", VA = "0x1690360", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x1690408", Offset = "0x1690408", VA = "0x1690408", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1690438", Offset = "0x1690438", VA = "0x1690438", Slot = "19")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x16907C8", Offset = "0x16907C8", VA = "0x16907C8", Slot = "20")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x1690894", Offset = "0x1690894", VA = "0x1690894", Slot = "21")]
		protected virtual void InitLid()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1690A2C", Offset = "0x1690A2C", VA = "0x1690A2C", Slot = "22")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1690BE0", Offset = "0x1690BE0", VA = "0x1690BE0", Slot = "23")]
		protected virtual void CreateInteractableObject(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1690D04", Offset = "0x1690D04", VA = "0x1690D04", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1690EB4", Offset = "0x1690EB4", VA = "0x1690EB4")]
		public VRTK_Chest()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public struct Control3DEventArgs
	{
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float normalizedValue;
	}
	[Token(Token = "0x20001F3")]
	public delegate void Control3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x20001F4")]
	[ExecuteInEditMode]
	public abstract class VRTK_Control : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE641C", Offset = "0xAE641C")]
		public class ValueChangedEvent : UnityEvent<float, float>
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x1692AF8", Offset = "0x1692AF8", VA = "0x1692AF8")]
			public ValueChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE6454", Offset = "0xAE6454")]
		public class DefaultControlEvents
		{
			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueChangedEvent OnValueChanged;

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x1692AF0", Offset = "0x1692AF0", VA = "0x1692AF0")]
			public DefaultControlEvents()
			{
			}
		}

		[Token(Token = "0x2000592")]
		public struct ControlValueRange
		{
			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float controlMin;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float controlMax;
		}

		[Token(Token = "0x2000593")]
		public enum Direction
		{
			[Token(Token = "0x4002968")]
			autodetect,
			[Token(Token = "0x4002969")]
			x,
			[Token(Token = "0x400296A")]
			y,
			[Token(Token = "0x400296B")]
			z
		}

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDAF4", Offset = "0xAEDAF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEDAF4", Offset = "0xAEDAF4")]
		public DefaultControlEvents defaultEvents;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDB54", Offset = "0xAEDB54")]
		public bool interactWithoutGrab;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Bounds bounds;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool setupSuccessful;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ControllerRigidbodyActivator autoTriggerVolume;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float value;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color COLOR_OK;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static Color COLOR_ERROR;

		[Token(Token = "0x4000DAD")]
		protected const float MIN_OPENING_DISTANCE = 20f;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected ControlValueRange valueRange;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controlContent;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool hideControlContent;

		[Token(Token = "0x1400003A")]
		public event Control3DEventHandler ValueChanged
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x169213C", Offset = "0x169213C", VA = "0x169213C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01850", Offset = "0xB01850")]
			add
			{
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x16921E0", Offset = "0x16921E0", VA = "0x16921E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01860", Offset = "0xB01860")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E58")]
		protected abstract void InitRequiredComponents();

		[Token(Token = "0x6000E59")]
		protected abstract bool DetectSetup();

		[Token(Token = "0x6000E5A")]
		protected abstract ControlValueRange RegisterValueRange();

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1692284", Offset = "0x1692284", VA = "0x1692284", Slot = "7")]
		public virtual void OnValueChanged(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x169229C", Offset = "0x169229C", VA = "0x169229C", Slot = "8")]
		public virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x16922A4", Offset = "0x16922A4", VA = "0x16922A4", Slot = "9")]
		public virtual float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x16923AC", Offset = "0x16923AC", VA = "0x16923AC", Slot = "10")]
		public virtual void SetContent(GameObject content, bool hideContent)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x16923BC", Offset = "0x16923BC", VA = "0x16923BC", Slot = "11")]
		public virtual GameObject GetContent()
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		protected abstract void HandleUpdate();

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x16923C4", Offset = "0x16923C4", VA = "0x16923C4", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x169246C", Offset = "0x169246C", VA = "0x169246C", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x1692598", Offset = "0x1692598", VA = "0x1692598", Slot = "15")]
		protected virtual Control3DEventArgs SetControlEvent()
		{
			return default(Control3DEventArgs);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x168D1C8", Offset = "0x168D1C8", VA = "0x168D1C8", Slot = "16")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x16925E4", Offset = "0x16925E4", VA = "0x16925E4", Slot = "17")]
		protected virtual void CreateTriggerVolume()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x16927E0", Offset = "0x16927E0", VA = "0x16927E0")]
		protected Vector3 GetThirdDirection(Vector3 axis1, Vector3 axis2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x169292C", Offset = "0x169292C", VA = "0x169292C", Slot = "18")]
		protected virtual void HandleInteractables()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x168F27C", Offset = "0x168F27C", VA = "0x168F27C")]
		protected VRTK_Control()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE36BC", Offset = "0xAE36BC")]
	public class VRTK_Door : VRTK_Control
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDB9C", Offset = "0xAEDB9C")]
		public Direction direction;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDBD4", Offset = "0xAEDBD4")]
		public GameObject door;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDC0C", Offset = "0xAEDC0C")]
		public GameObject handles;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDC44", Offset = "0xAEDC44")]
		public GameObject frame;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDC7C", Offset = "0xAEDC7C")]
		public GameObject content;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDCB4", Offset = "0xAEDCB4")]
		public bool hideContent;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDCEC", Offset = "0xAEDCEC")]
		public float maxAngle;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDD24", Offset = "0xAEDD24")]
		public bool openInward;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDD5C", Offset = "0xAEDD5C")]
		public bool openOutward;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDD94", Offset = "0xAEDD94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEDD94", Offset = "0xAEDD94")]
		public float minSnapClose;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDDE8", Offset = "0xAEDDE8")]
		public float releasedFriction;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDE20", Offset = "0xAEDE20")]
		public float grabbedFriction;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDE58", Offset = "0xAEDE58")]
		public bool handleInteractableOnly;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float stepSize;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody doorRigidbody;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected HingeJoint doorHinge;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConstantForce doorSnapForce;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody frameRigidbody;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Direction finalDirection;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float subDirection;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Vector3 secondaryDirection;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected bool doorHingeCreated;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		protected bool doorSnapForceCreated;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x14AA988", Offset = "0x14AA988", VA = "0x14AA988", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x14AB280", Offset = "0x14AB280", VA = "0x14AB280", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x14AB2E8", Offset = "0x14AB2E8", VA = "0x14AB2E8", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x14ABE28", Offset = "0x14ABE28", VA = "0x14ABE28", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x14ABED0", Offset = "0x14ABED0", VA = "0x14ABED0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x14ABFB0", Offset = "0x14ABFB0", VA = "0x14ABFB0", Slot = "19")]
		protected virtual float GetDirectionFromJoint()
		{
			return default(float);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x14AC018", Offset = "0x14AC018", VA = "0x14AC018", Slot = "20")]
		protected virtual Vector3 Direction2Axis(Direction givenDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x14AC0F4", Offset = "0x14AC0F4", VA = "0x14AC0F4", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x14AC470", Offset = "0x14AC470", VA = "0x14AC470", Slot = "22")]
		protected virtual void InitFrame()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x14AC58C", Offset = "0x14AC58C", VA = "0x14AC58C", Slot = "23")]
		protected virtual void InitDoor()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x14AC7C4", Offset = "0x14AC7C4", VA = "0x14AC7C4", Slot = "24")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x14AC9CC", Offset = "0x14AC9CC", VA = "0x14AC9CC", Slot = "25")]
		protected virtual void CreateInteractableObject(GameObject target)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x14ACB38", Offset = "0x14ACB38", VA = "0x14ACB38", Slot = "26")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x14ACB5C", Offset = "0x14ACB5C", VA = "0x14ACB5C", Slot = "27")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x14ACB80", Offset = "0x14ACB80", VA = "0x14ACB80", Slot = "28")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x14ACC8C", Offset = "0x14ACC8C", VA = "0x14ACC8C", Slot = "29")]
		protected virtual GameObject GetDoor()
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x14ACD18", Offset = "0x14ACD18", VA = "0x14ACD18")]
		public VRTK_Door()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE36F4", Offset = "0xAE36F4")]
	public class VRTK_Drawer : VRTK_Control
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDE90", Offset = "0xAEDE90")]
		public GameObject connectedTo;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDEC8", Offset = "0xAEDEC8")]
		public Direction direction;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDF00", Offset = "0xAEDF00")]
		public GameObject body;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDF38", Offset = "0xAEDF38")]
		public GameObject handle;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDF70", Offset = "0xAEDF70")]
		public GameObject content;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDFA8", Offset = "0xAEDFA8")]
		public bool hideContent;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEDFE0", Offset = "0xAEDFE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEDFE0", Offset = "0xAEDFE0")]
		public float minSnapClose;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE034", Offset = "0xAEE034")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEE034", Offset = "0xAEE034")]
		public float maxExtend;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody drawerRigidbody;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected FixedJoint handleFixedJoint;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConfigurableJoint drawerJoint;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected VRTK_InteractableObject drawerInteractableObject;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ConstantForce drawerSnapForce;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Direction finalDirection;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float subDirection;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float pullDistance;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool drawerJointCreated;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		protected bool drawerSnapForceCreated;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x14ACDB4", Offset = "0x14ACDB4", VA = "0x14ACDB4", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x14AD05C", Offset = "0x14AD05C", VA = "0x14AD05C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x14AD0D4", Offset = "0x14AD0D4", VA = "0x14AD0D4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x14AD754", Offset = "0x14AD754", VA = "0x14AD754", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x14AD764", Offset = "0x14AD764", VA = "0x14AD764", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x14AD860", Offset = "0x14AD860", VA = "0x14AD860", Slot = "19")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x14ADBF0", Offset = "0x14ADBF0", VA = "0x14ADBF0", Slot = "20")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x14ADDA0", Offset = "0x14ADDA0", VA = "0x14ADDA0", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x14AE2D4", Offset = "0x14AE2D4", VA = "0x14AE2D4", Slot = "22")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x14AE46C", Offset = "0x14AE46C", VA = "0x14AE46C", Slot = "23")]
		protected virtual GameObject GetBody()
		{
			return null;
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x14AE4F8", Offset = "0x14AE4F8", VA = "0x14AE4F8", Slot = "24")]
		protected virtual GameObject GetHandle()
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x14AE584", Offset = "0x14AE584", VA = "0x14AE584")]
		public VRTK_Drawer()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE372C", Offset = "0xAE372C")]
	public class VRTK_Knob : VRTK_Control
	{
		[Token(Token = "0x2000594")]
		public enum KnobDirection
		{
			[Token(Token = "0x400296D")]
			x,
			[Token(Token = "0x400296E")]
			y,
			[Token(Token = "0x400296F")]
			z
		}

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE088", Offset = "0xAEE088")]
		public GameObject connectedTo;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE0C0", Offset = "0xAEE0C0")]
		public KnobDirection direction;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE0F8", Offset = "0xAEE0F8")]
		public float min;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE130", Offset = "0xAEE130")]
		public float max;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE168", Offset = "0xAEE168")]
		public float stepSize;

		[Token(Token = "0x4000DE1")]
		protected const float MAX_AUTODETECT_KNOB_WIDTH = 3f;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected KnobDirection finalDirection;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected KnobDirection subDirection;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool subDirectionFound;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 initialLocalRotation;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ConfigurableJoint knobJoint;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool knobJointCreated;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x19483F8", Offset = "0x19483F8", VA = "0x19483F8", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1948488", Offset = "0x1948488", VA = "0x1948488", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x194864C", Offset = "0x194864C", VA = "0x194864C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1948654", Offset = "0x1948654", VA = "0x1948654", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1948684", Offset = "0x1948684", VA = "0x1948684", Slot = "19")]
		protected virtual void InitKnob()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x194898C", Offset = "0x194898C", VA = "0x194898C", Slot = "20")]
		protected virtual KnobDirection DetectDirection()
		{
			return default(KnobDirection);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x194918C", Offset = "0x194918C", VA = "0x194918C", Slot = "21")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1949768", Offset = "0x1949768", VA = "0x1949768")]
		public VRTK_Knob()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3764", Offset = "0xAE3764")]
	public class VRTK_Lever : VRTK_Control
	{
		[Token(Token = "0x2000595")]
		public enum LeverDirection
		{
			[Token(Token = "0x4002971")]
			x,
			[Token(Token = "0x4002972")]
			y,
			[Token(Token = "0x4002973")]
			z
		}

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE1A0", Offset = "0xAEE1A0")]
		public GameObject connectedTo;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE1D8", Offset = "0xAEE1D8")]
		public LeverDirection direction;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE210", Offset = "0xAEE210")]
		public float minAngle;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE248", Offset = "0xAEE248")]
		public float maxAngle;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE280", Offset = "0xAEE280")]
		public float stepSize;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE2B8", Offset = "0xAEE2B8")]
		public float releasedFriction;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE2F0", Offset = "0xAEE2F0")]
		public float grabbedFriction;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected HingeJoint leverHingeJoint;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool leverHingeJointCreated;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody leverRigidbody;

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x19497DC", Offset = "0x19497DC", VA = "0x19497DC", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x19498B8", Offset = "0x19498B8", VA = "0x19498B8", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1949D68", Offset = "0x1949D68", VA = "0x1949D68", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1949D70", Offset = "0x1949D70", VA = "0x1949D70", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x1949DB0", Offset = "0x1949DB0", VA = "0x1949DB0", Slot = "19")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1949EB0", Offset = "0x1949EB0", VA = "0x1949EB0", Slot = "20")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x194A038", Offset = "0x194A038", VA = "0x194A038", Slot = "21")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x194A05C", Offset = "0x194A05C", VA = "0x194A05C", Slot = "22")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x194A080", Offset = "0x194A080", VA = "0x194A080", Slot = "23")]
		protected virtual void InitHingeJoint()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x194A1FC", Offset = "0x194A1FC", VA = "0x194A1FC", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x194A308", Offset = "0x194A308", VA = "0x194A308", Slot = "25")]
		protected virtual void SnapToValue(float value)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x194A4CC", Offset = "0x194A4CC", VA = "0x194A4CC")]
		public VRTK_Lever()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE379C", Offset = "0xAE379C")]
	public class VRTK_Slider : VRTK_Control
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE328", Offset = "0xAEE328")]
		public GameObject connectedTo;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE360", Offset = "0xAEE360")]
		public Direction direction;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE398", Offset = "0xAEE398")]
		public Collider minimumLimit;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE3D0", Offset = "0xAEE3D0")]
		public Collider maximumLimit;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE408", Offset = "0xAEE408")]
		public float minimumValue;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE440", Offset = "0xAEE440")]
		public float maximumValue;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE478", Offset = "0xAEE478")]
		public float stepSize;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE4B0", Offset = "0xAEE4B0")]
		public bool snapToStep;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE4E8", Offset = "0xAEE4E8")]
		public float releasedFriction;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Direction finalDirection;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody sliderRigidbody;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ConfigurableJoint sliderJoint;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool sliderJointCreated;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected Vector3 minimumLimitDiff;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3 maximumLimitDiff;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector3 snapPosition;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x128FF7C", Offset = "0x128FF7C", VA = "0x128FF7C", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x129009C", Offset = "0x129009C", VA = "0x129009C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x12900FC", Offset = "0x12900FC", VA = "0x12900FC", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1290D80", Offset = "0x1290D80", VA = "0x1290D80", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1290D88", Offset = "0x1290D88", VA = "0x1290D88", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1290DD8", Offset = "0x1290DD8", VA = "0x1290DD8", Slot = "19")]
		protected virtual Vector3 CalculateDiff(Vector3 initialPosition, Vector3 givenDirection, float scaleValue, float diffMultiplier, bool addition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1291004", Offset = "0x1291004", VA = "0x1291004", Slot = "20")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x12911DC", Offset = "0x12911DC", VA = "0x12911DC", Slot = "21")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x12912FC", Offset = "0x12912FC", VA = "0x12912FC", Slot = "22")]
		protected virtual void InitJoint()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1291478", Offset = "0x1291478", VA = "0x1291478", Slot = "23")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1291724", Offset = "0x1291724", VA = "0x1291724", Slot = "24")]
		protected virtual void ToggleSpring(bool state)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x12917F8", Offset = "0x12917F8", VA = "0x12917F8", Slot = "25")]
		protected virtual void SnapToValue()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x12918D0", Offset = "0x12918D0", VA = "0x12918D0")]
		public VRTK_Slider()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE37D4", Offset = "0xAE37D4")]
	public class VRTK_SpringLever : VRTK_Lever
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE520", Offset = "0xAEE520")]
		public float springStrength;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE558", Offset = "0xAEE558")]
		public float springDamper;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE590", Offset = "0xAEE590")]
		public bool snapToNearestLimit;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE5C8", Offset = "0xAEE5C8")]
		public bool alwaysActive;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		protected bool wasTowardZero;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		protected bool isGrabbed;

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xDE5088", Offset = "0xDE5088", VA = "0xDE5088", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xDE511C", Offset = "0xDE511C", VA = "0xDE511C", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xDE5150", Offset = "0xDE5150", VA = "0xDE5150", Slot = "21")]
		protected override void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xDE517C", Offset = "0xDE517C", VA = "0xDE517C", Slot = "22")]
		protected override void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xDE51A4", Offset = "0xDE51A4", VA = "0xDE51A4", Slot = "26")]
		protected virtual float GetSpringTarget(bool towardZero)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xDE51BC", Offset = "0xDE51BC", VA = "0xDE51BC", Slot = "27")]
		protected virtual void ApplySpringForce()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xDE52D4", Offset = "0xDE52D4", VA = "0xDE52D4")]
		public VRTK_SpringLever()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE380C", Offset = "0xAE380C")]
	public class VRTK_Wheel : VRTK_Control
	{
		[Token(Token = "0x2000596")]
		public enum GrabTypes
		{
			[Token(Token = "0x4002975")]
			TrackObject,
			[Token(Token = "0x4002976")]
			RotatorTrack
		}

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE600", Offset = "0xAEE600")]
		public GameObject connectedTo;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE638", Offset = "0xAEE638")]
		public GrabTypes grabType;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE670", Offset = "0xAEE670")]
		public float detatchDistance;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE6A8", Offset = "0xAEE6A8")]
		public float minimumValue;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE6E0", Offset = "0xAEE6E0")]
		public float maximumValue;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE718", Offset = "0xAEE718")]
		public float stepSize;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE750", Offset = "0xAEE750")]
		public bool snapToStep;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE788", Offset = "0xAEE788")]
		public float grabbedFriction;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE7C0", Offset = "0xAEE7C0")]
		public float releasedFriction;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEE7F8", Offset = "0xAEE7F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE7F8", Offset = "0xAEE7F8")]
		public float maxAngle;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE850", Offset = "0xAEE850")]
		public bool lockAtLimits;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float angularVelocityLimit;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float springStrengthValue;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float springDamperValue;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody wheelRigidbody;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected HingeJoint wheelHinge;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool wheelHingeCreated;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool initialValueCalculated;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float springAngle;

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xDF4F88", Offset = "0xDF4F88", VA = "0xDF4F88", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xDF4FD4", Offset = "0xDF4FD4", VA = "0xDF4FD4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xDF50E0", Offset = "0xDF50E0", VA = "0xDF50E0", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xDF50E8", Offset = "0xDF50E8", VA = "0xDF50E8", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xDF5150", Offset = "0xDF5150", VA = "0xDF5150", Slot = "19")]
		protected virtual void InitWheel()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xDF51A0", Offset = "0xDF51A0", VA = "0xDF51A0", Slot = "20")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xDF5358", Offset = "0xDF5358", VA = "0xDF5358", Slot = "21")]
		protected virtual void SetupHinge()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xDF5428", Offset = "0xDF5428", VA = "0xDF5428", Slot = "22")]
		protected virtual void SetupHingeRestrictions()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xDF56F0", Offset = "0xDF56F0", VA = "0xDF56F0", Slot = "23")]
		protected virtual void ConfigureHingeSpring()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xDF5788", Offset = "0xDF5788", VA = "0xDF5788", Slot = "24")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xDF594C", Offset = "0xDF594C", VA = "0xDF594C", Slot = "25")]
		protected virtual void WheelInteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xDF5990", Offset = "0xDF5990", VA = "0xDF5990", Slot = "26")]
		protected virtual void WheelInteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xDF59FC", Offset = "0xDF59FC", VA = "0xDF59FC", Slot = "27")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xDF5C10", Offset = "0xDF5C10", VA = "0xDF5C10")]
		public VRTK_Wheel()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE3844", Offset = "0xAE3844")]
	public struct ControllerActionsEventArgs
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE387C", Offset = "0xAE387C")]
	public delegate void ControllerActionsEventHandler(object sender, ControllerActionsEventArgs e);
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE38B4", Offset = "0xAE38B4")]
	public class VRTK_ControllerActions : MonoBehaviour
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE888", Offset = "0xAEE888")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEE888", Offset = "0xAEE888")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE8E8", Offset = "0xAEE8E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEE8E8", Offset = "0xAEE8E8")]
		public VRTK_ControllerElementHighlighters elementHighlighterOverrides;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected GameObject modelContainer;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool controllerVisible;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerHighlighter controllerHighlighter;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool generateControllerHighlighter;

		[Token(Token = "0x1400003B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0AF58", Offset = "0xB0AF58")]
		public event ControllerActionsEventHandler ControllerModelVisible
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x1692B48", Offset = "0x1692B48", VA = "0x1692B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01870", Offset = "0xB01870")]
			add
			{
			}
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x1692BEC", Offset = "0x1692BEC", VA = "0x1692BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01880", Offset = "0xB01880")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0AF90", Offset = "0xB0AF90")]
		public event ControllerActionsEventHandler ControllerModelInvisible
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x1692C90", Offset = "0x1692C90", VA = "0x1692C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01890", Offset = "0xB01890")]
			add
			{
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x1692D34", Offset = "0x1692D34", VA = "0x1692D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB018A0", Offset = "0xB018A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1692DD8", Offset = "0x1692DD8", VA = "0x1692DD8", Slot = "4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB018B0", Offset = "0xB018B0")]
		public virtual void OnControllerModelVisible(ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1692DF8", Offset = "0x1692DF8", VA = "0x1692DF8", Slot = "5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB018E8", Offset = "0xB018E8")]
		public virtual void OnControllerModelInvisible(ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1692E18", Offset = "0x1692E18", VA = "0x1692E18", Slot = "6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01920", Offset = "0xB01920")]
		public virtual bool IsControllerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1692E20", Offset = "0x1692E20", VA = "0x1692E20", Slot = "7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01958", Offset = "0xB01958")]
		public virtual void ToggleControllerModel(bool state, GameObject grabbedChildObject)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1692F20", Offset = "0x1692F20", VA = "0x1692F20", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01990", Offset = "0xB01990")]
		public virtual void SetControllerOpacity(float alpha)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1692F74", Offset = "0x1692F74", VA = "0x1692F74", Slot = "9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB019C8", Offset = "0xB019C8")]
		public virtual void HighlightControllerElement(GameObject element, Color? highlight, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1692FD8", Offset = "0x1692FD8", VA = "0x1692FD8", Slot = "10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01A00", Offset = "0xB01A00")]
		public virtual void UnhighlightControllerElement(GameObject element)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1693014", Offset = "0x1693014", VA = "0x1693014", Slot = "11")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01A38", Offset = "0xB01A38")]
		public virtual void ToggleHighlightControllerElement(bool state, GameObject element, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1693130", Offset = "0x1693130", VA = "0x1693130", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01A70", Offset = "0xB01A70")]
		public virtual void ToggleHighlightTrigger(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1693184", Offset = "0x1693184", VA = "0x1693184", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01AA8", Offset = "0xB01AA8")]
		public virtual void ToggleHighlightGrip(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1693248", Offset = "0x1693248", VA = "0x1693248", Slot = "14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01AE0", Offset = "0xB01AE0")]
		public virtual void ToggleHighlightTouchpad(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x169329C", Offset = "0x169329C", VA = "0x169329C", Slot = "15")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01B18", Offset = "0xB01B18")]
		public virtual void ToggleHighlightButtonOne(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x16932F0", Offset = "0x16932F0", VA = "0x16932F0", Slot = "16")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01B50", Offset = "0xB01B50")]
		public virtual void ToggleHighlightButtonTwo(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1693344", Offset = "0x1693344", VA = "0x1693344", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01B88", Offset = "0xB01B88")]
		public virtual void ToggleHighlightStartMenu(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1693398", Offset = "0x1693398", VA = "0x1693398", Slot = "18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01BC0", Offset = "0xB01BC0")]
		public virtual void ToggleHighlighBody(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x16933EC", Offset = "0x16933EC", VA = "0x16933EC", Slot = "19")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01BF8", Offset = "0xB01BF8")]
		public virtual void ToggleHighlightController(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1693540", Offset = "0x1693540", VA = "0x1693540", Slot = "20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01C30", Offset = "0xB01C30")]
		public virtual void TriggerHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x16935D4", Offset = "0x16935D4", VA = "0x16935D4", Slot = "21")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01C68", Offset = "0xB01C68")]
		public virtual void TriggerHapticPulse(float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1693680", Offset = "0x1693680", VA = "0x1693680", Slot = "22")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB01CA0", Offset = "0xB01CA0")]
		public virtual void InitaliseHighlighters()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x16936A0", Offset = "0x16936A0", VA = "0x16936A0", Slot = "23")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1693718", Offset = "0x1693718", VA = "0x1693718", Slot = "24")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x169385C", Offset = "0x169385C", VA = "0x169385C", Slot = "25")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x16938DC", Offset = "0x16938DC", VA = "0x16938DC", Slot = "26")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1693954", Offset = "0x1693954", VA = "0x1693954", Slot = "27")]
		protected virtual void ToggleElementHighlight(bool state, SDK_BaseController.ControllerElements elementType, Color? color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1693ABC", Offset = "0x1693ABC", VA = "0x1693ABC", Slot = "28")]
		protected virtual ControllerActionsEventArgs SetActionEvent(uint index)
		{
			return default(ControllerActionsEventArgs);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1693AC4", Offset = "0x1693AC4", VA = "0x1693AC4")]
		public VRTK_ControllerActions()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEE968", Offset = "0xAEE968")]
		public uint controllerIndex;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float buttonPressure;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float touchpadAngle;
	}
	[Token(Token = "0x2000200")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE38EC", Offset = "0xAE38EC")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x2000597")]
		public enum ButtonAlias
		{
			[Token(Token = "0x4002978")]
			Undefined,
			[Token(Token = "0x4002979")]
			TriggerHairline,
			[Token(Token = "0x400297A")]
			TriggerTouch,
			[Token(Token = "0x400297B")]
			TriggerPress,
			[Token(Token = "0x400297C")]
			TriggerClick,
			[Token(Token = "0x400297D")]
			GripHairline,
			[Token(Token = "0x400297E")]
			GripTouch,
			[Token(Token = "0x400297F")]
			GripPress,
			[Token(Token = "0x4002980")]
			GripClick,
			[Token(Token = "0x4002981")]
			TouchpadTouch,
			[Token(Token = "0x4002982")]
			TouchpadPress,
			[Token(Token = "0x4002983")]
			ButtonOneTouch,
			[Token(Token = "0x4002984")]
			ButtonOnePress,
			[Token(Token = "0x4002985")]
			ButtonTwoTouch,
			[Token(Token = "0x4002986")]
			ButtonTwoPress,
			[Token(Token = "0x4002987")]
			StartMenuPress
		}

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEE9A0", Offset = "0xAEE9A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEE9A0", Offset = "0xAEE9A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEE9A0", Offset = "0xAEE9A0")]
		public ButtonAlias pointerToggleButton;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEA24", Offset = "0xAEEA24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEA24", Offset = "0xAEEA24")]
		public ButtonAlias pointerSetButton;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEA84", Offset = "0xAEEA84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEA84", Offset = "0xAEEA84")]
		public ButtonAlias grabToggleButton;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEAE4", Offset = "0xAEEAE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEAE4", Offset = "0xAEEAE4")]
		public ButtonAlias useToggleButton;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEB44", Offset = "0xAEEB44")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEB44", Offset = "0xAEEB44")]
		public ButtonAlias uiClickButton;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEBA4", Offset = "0xAEEBA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEBA4", Offset = "0xAEEBA4")]
		public ButtonAlias menuToggleButton;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEEC04", Offset = "0xAEEC04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEC04", Offset = "0xAEEC04")]
		public int axisFidelity;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEC64", Offset = "0xAEEC64")]
		public float triggerClickThreshold;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEEC9C", Offset = "0xAEEC9C")]
		public float triggerForceZeroThreshold;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEECD4", Offset = "0xAEECD4")]
		public bool triggerAxisZeroOnUntouch;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEED0C", Offset = "0xAEED0C")]
		public float gripClickThreshold;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEED44", Offset = "0xAEED44")]
		public float gripForceZeroThreshold;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEED7C", Offset = "0xAEED7C")]
		public bool gripAxisZeroOnUntouch;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[HideInInspector]
		public bool triggerHairlinePressed;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool triggerClicked;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[HideInInspector]
		public bool triggerAxisChanged;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[HideInInspector]
		public bool gripPressed;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		[HideInInspector]
		public bool gripTouched;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool gripHairlinePressed;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool gripClicked;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool gripAxisChanged;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool touchpadPressed;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool touchpadTouched;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool touchpadAxisChanged;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[HideInInspector]
		public bool buttonOnePressed;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[HideInInspector]
		public bool buttonOneTouched;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool buttonTwoPressed;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool buttonTwoTouched;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[HideInInspector]
		public bool startMenuPressed;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEED4", Offset = "0xAEEED4")]
		public bool pointerPressed;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEF20", Offset = "0xAEEF20")]
		public bool grabPressed;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEF6C", Offset = "0xAEEF6C")]
		public bool usePressed;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEEFB8", Offset = "0xAEEFB8")]
		public bool uiClickPressed;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEF004", Offset = "0xAEF004")]
		public bool menuPressed;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool controllerVisible;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected Vector2 touchpadAxis;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Vector2 triggerAxis;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector2 gripAxis;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected float hairTriggerDelta;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected float hairGripDelta;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private VRTK_ControllerReference _cachedControllerReference;

		[Token(Token = "0x1400003D")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1693ADC", Offset = "0x1693ADC", VA = "0x1693ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01CD8", Offset = "0xB01CD8")]
			add
			{
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x1693B80", Offset = "0x1693B80", VA = "0x1693B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01CE8", Offset = "0xB01CE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x1693C24", Offset = "0x1693C24", VA = "0x1693C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01CF8", Offset = "0xB01CF8")]
			add
			{
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x1693CC8", Offset = "0x1693CC8", VA = "0x1693CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D08", Offset = "0xB01D08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x1693D6C", Offset = "0x1693D6C", VA = "0x1693D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D18", Offset = "0xB01D18")]
			add
			{
			}
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x1693E10", Offset = "0x1693E10", VA = "0x1693E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D28", Offset = "0xB01D28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x1693EB4", Offset = "0x1693EB4", VA = "0x1693EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D38", Offset = "0xB01D38")]
			add
			{
			}
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x1693F58", Offset = "0x1693F58", VA = "0x1693F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D48", Offset = "0xB01D48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x1693FFC", Offset = "0x1693FFC", VA = "0x1693FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D58", Offset = "0xB01D58")]
			add
			{
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x16940A0", Offset = "0x16940A0", VA = "0x16940A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D68", Offset = "0xB01D68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x1694144", Offset = "0x1694144", VA = "0x1694144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D78", Offset = "0xB01D78")]
			add
			{
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x16941E8", Offset = "0x16941E8", VA = "0x16941E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D88", Offset = "0xB01D88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x169428C", Offset = "0x169428C", VA = "0x169428C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01D98", Offset = "0xB01D98")]
			add
			{
			}
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x1694330", Offset = "0x1694330", VA = "0x1694330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DA8", Offset = "0xB01DA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x16943D4", Offset = "0x16943D4", VA = "0x16943D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DB8", Offset = "0xB01DB8")]
			add
			{
			}
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x1694478", Offset = "0x1694478", VA = "0x1694478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DC8", Offset = "0xB01DC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x169451C", Offset = "0x169451C", VA = "0x169451C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DD8", Offset = "0xB01DD8")]
			add
			{
			}
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x16945C0", Offset = "0x16945C0", VA = "0x16945C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DE8", Offset = "0xB01DE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x1694664", Offset = "0x1694664", VA = "0x1694664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01DF8", Offset = "0xB01DF8")]
			add
			{
			}
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x1694708", Offset = "0x1694708", VA = "0x1694708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E08", Offset = "0xB01E08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x16947AC", Offset = "0x16947AC", VA = "0x16947AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E18", Offset = "0xB01E18")]
			add
			{
			}
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x1694850", Offset = "0x1694850", VA = "0x1694850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E28", Offset = "0xB01E28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event ControllerInteractionEventHandler GripTouchStart
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x16948F4", Offset = "0x16948F4", VA = "0x16948F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E38", Offset = "0xB01E38")]
			add
			{
			}
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x1694998", Offset = "0x1694998", VA = "0x1694998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E48", Offset = "0xB01E48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event ControllerInteractionEventHandler GripTouchEnd
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x1694A3C", Offset = "0x1694A3C", VA = "0x1694A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E58", Offset = "0xB01E58")]
			add
			{
			}
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1694AE0", Offset = "0x1694AE0", VA = "0x1694AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E68", Offset = "0xB01E68")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event ControllerInteractionEventHandler GripHairlineStart
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1694B84", Offset = "0x1694B84", VA = "0x1694B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E78", Offset = "0xB01E78")]
			add
			{
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1694C28", Offset = "0x1694C28", VA = "0x1694C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E88", Offset = "0xB01E88")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event ControllerInteractionEventHandler GripHairlineEnd
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1694CCC", Offset = "0x1694CCC", VA = "0x1694CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01E98", Offset = "0xB01E98")]
			add
			{
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1694D70", Offset = "0x1694D70", VA = "0x1694D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01EA8", Offset = "0xB01EA8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event ControllerInteractionEventHandler GripClicked
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x1694E14", Offset = "0x1694E14", VA = "0x1694E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01EB8", Offset = "0xB01EB8")]
			add
			{
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1694EB8", Offset = "0x1694EB8", VA = "0x1694EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01EC8", Offset = "0xB01EC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event ControllerInteractionEventHandler GripUnclicked
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1694F5C", Offset = "0x1694F5C", VA = "0x1694F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01ED8", Offset = "0xB01ED8")]
			add
			{
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x1695000", Offset = "0x1695000", VA = "0x1695000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01EE8", Offset = "0xB01EE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event ControllerInteractionEventHandler GripAxisChanged
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x16950A4", Offset = "0x16950A4", VA = "0x16950A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01EF8", Offset = "0xB01EF8")]
			add
			{
			}
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x1695148", Offset = "0x1695148", VA = "0x1695148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F08", Offset = "0xB01F08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x16951EC", Offset = "0x16951EC", VA = "0x16951EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F18", Offset = "0xB01F18")]
			add
			{
			}
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x1695290", Offset = "0x1695290", VA = "0x1695290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F28", Offset = "0xB01F28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x1695334", Offset = "0x1695334", VA = "0x1695334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F38", Offset = "0xB01F38")]
			add
			{
			}
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x16953DC", Offset = "0x16953DC", VA = "0x16953DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F48", Offset = "0xB01F48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x1695484", Offset = "0x1695484", VA = "0x1695484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F58", Offset = "0xB01F58")]
			add
			{
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x169552C", Offset = "0x169552C", VA = "0x169552C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F68", Offset = "0xB01F68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x16955D4", Offset = "0x16955D4", VA = "0x16955D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F78", Offset = "0xB01F78")]
			add
			{
			}
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x169567C", Offset = "0x169567C", VA = "0x169567C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F88", Offset = "0xB01F88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x1695724", Offset = "0x1695724", VA = "0x1695724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01F98", Offset = "0xB01F98")]
			add
			{
			}
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x16957CC", Offset = "0x16957CC", VA = "0x16957CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FA8", Offset = "0xB01FA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event ControllerInteractionEventHandler ButtonOneTouchStart
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x1695874", Offset = "0x1695874", VA = "0x1695874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FB8", Offset = "0xB01FB8")]
			add
			{
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x169591C", Offset = "0x169591C", VA = "0x169591C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FC8", Offset = "0xB01FC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event ControllerInteractionEventHandler ButtonOneTouchEnd
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x16959C4", Offset = "0x16959C4", VA = "0x16959C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FD8", Offset = "0xB01FD8")]
			add
			{
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x1695A6C", Offset = "0x1695A6C", VA = "0x1695A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FE8", Offset = "0xB01FE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event ControllerInteractionEventHandler ButtonOnePressed
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x1695B14", Offset = "0x1695B14", VA = "0x1695B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB01FF8", Offset = "0xB01FF8")]
			add
			{
			}
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x1695BBC", Offset = "0x1695BBC", VA = "0x1695BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02008", Offset = "0xB02008")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event ControllerInteractionEventHandler ButtonOneReleased
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x1695C64", Offset = "0x1695C64", VA = "0x1695C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02018", Offset = "0xB02018")]
			add
			{
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x1695D0C", Offset = "0x1695D0C", VA = "0x1695D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02028", Offset = "0xB02028")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event ControllerInteractionEventHandler ButtonTwoTouchStart
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x1695DB4", Offset = "0x1695DB4", VA = "0x1695DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02038", Offset = "0xB02038")]
			add
			{
			}
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x1695E5C", Offset = "0x1695E5C", VA = "0x1695E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02048", Offset = "0xB02048")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event ControllerInteractionEventHandler ButtonTwoTouchEnd
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x1695F04", Offset = "0x1695F04", VA = "0x1695F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02058", Offset = "0xB02058")]
			add
			{
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x1695FAC", Offset = "0x1695FAC", VA = "0x1695FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02068", Offset = "0xB02068")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event ControllerInteractionEventHandler ButtonTwoPressed
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x1696054", Offset = "0x1696054", VA = "0x1696054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02078", Offset = "0xB02078")]
			add
			{
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x16960FC", Offset = "0x16960FC", VA = "0x16960FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02088", Offset = "0xB02088")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event ControllerInteractionEventHandler ButtonTwoReleased
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x16961A4", Offset = "0x16961A4", VA = "0x16961A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02098", Offset = "0xB02098")]
			add
			{
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x169624C", Offset = "0x169624C", VA = "0x169624C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020A8", Offset = "0xB020A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event ControllerInteractionEventHandler StartMenuPressed
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x16962F4", Offset = "0x16962F4", VA = "0x16962F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020B8", Offset = "0xB020B8")]
			add
			{
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x169639C", Offset = "0x169639C", VA = "0x169639C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020C8", Offset = "0xB020C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event ControllerInteractionEventHandler StartMenuReleased
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x1696444", Offset = "0x1696444", VA = "0x1696444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020D8", Offset = "0xB020D8")]
			add
			{
			}
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x16964EC", Offset = "0x16964EC", VA = "0x16964EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020E8", Offset = "0xB020E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0AFC8", Offset = "0xB0AFC8")]
		public event ControllerInteractionEventHandler AliasPointerOn
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x1696594", Offset = "0x1696594", VA = "0x1696594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB020F8", Offset = "0xB020F8")]
			add
			{
			}
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x169663C", Offset = "0x169663C", VA = "0x169663C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02108", Offset = "0xB02108")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B000", Offset = "0xB0B000")]
		public event ControllerInteractionEventHandler AliasPointerOff
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x16966E4", Offset = "0x16966E4", VA = "0x16966E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02118", Offset = "0xB02118")]
			add
			{
			}
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x169678C", Offset = "0x169678C", VA = "0x169678C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02128", Offset = "0xB02128")]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B038", Offset = "0xB0B038")]
		public event ControllerInteractionEventHandler AliasPointerSet
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x1696834", Offset = "0x1696834", VA = "0x1696834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02138", Offset = "0xB02138")]
			add
			{
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x16968DC", Offset = "0x16968DC", VA = "0x16968DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02148", Offset = "0xB02148")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B070", Offset = "0xB0B070")]
		public event ControllerInteractionEventHandler AliasGrabOn
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x1696984", Offset = "0x1696984", VA = "0x1696984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02158", Offset = "0xB02158")]
			add
			{
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x1696A2C", Offset = "0x1696A2C", VA = "0x1696A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02168", Offset = "0xB02168")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B0A8", Offset = "0xB0B0A8")]
		public event ControllerInteractionEventHandler AliasGrabOff
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x1696AD4", Offset = "0x1696AD4", VA = "0x1696AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02178", Offset = "0xB02178")]
			add
			{
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x1696B7C", Offset = "0x1696B7C", VA = "0x1696B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02188", Offset = "0xB02188")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B0E0", Offset = "0xB0B0E0")]
		public event ControllerInteractionEventHandler AliasUseOn
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x1696C24", Offset = "0x1696C24", VA = "0x1696C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02198", Offset = "0xB02198")]
			add
			{
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x1696CCC", Offset = "0x1696CCC", VA = "0x1696CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021A8", Offset = "0xB021A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B118", Offset = "0xB0B118")]
		public event ControllerInteractionEventHandler AliasUseOff
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x1696D74", Offset = "0x1696D74", VA = "0x1696D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021B8", Offset = "0xB021B8")]
			add
			{
			}
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x1696E1C", Offset = "0x1696E1C", VA = "0x1696E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021C8", Offset = "0xB021C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B150", Offset = "0xB0B150")]
		public event ControllerInteractionEventHandler AliasMenuOn
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x1696EC4", Offset = "0x1696EC4", VA = "0x1696EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021D8", Offset = "0xB021D8")]
			add
			{
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x1696F6C", Offset = "0x1696F6C", VA = "0x1696F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021E8", Offset = "0xB021E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B188", Offset = "0xB0B188")]
		public event ControllerInteractionEventHandler AliasMenuOff
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x1697014", Offset = "0x1697014", VA = "0x1697014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB021F8", Offset = "0xB021F8")]
			add
			{
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x16970BC", Offset = "0x16970BC", VA = "0x16970BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02208", Offset = "0xB02208")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B1C0", Offset = "0xB0B1C0")]
		public event ControllerInteractionEventHandler AliasUIClickOn
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x1697164", Offset = "0x1697164", VA = "0x1697164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02218", Offset = "0xB02218")]
			add
			{
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x169720C", Offset = "0x169720C", VA = "0x169720C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02228", Offset = "0xB02228")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB0B1F8", Offset = "0xB0B1F8")]
		public event ControllerInteractionEventHandler AliasUIClickOff
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x16972B4", Offset = "0x16972B4", VA = "0x16972B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02238", Offset = "0xB02238")]
			add
			{
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x169735C", Offset = "0x169735C", VA = "0x169735C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02248", Offset = "0xB02248")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event ControllerInteractionEventHandler ControllerEnabled
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x1697404", Offset = "0x1697404", VA = "0x1697404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02258", Offset = "0xB02258")]
			add
			{
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x16974AC", Offset = "0x16974AC", VA = "0x16974AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02268", Offset = "0xB02268")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event ControllerInteractionEventHandler ControllerDisabled
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x1697554", Offset = "0x1697554", VA = "0x1697554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02278", Offset = "0xB02278")]
			add
			{
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x16975FC", Offset = "0x16975FC", VA = "0x16975FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02288", Offset = "0xB02288")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event ControllerInteractionEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x16976A4", Offset = "0x16976A4", VA = "0x16976A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02298", Offset = "0xB02298")]
			add
			{
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x169774C", Offset = "0x169774C", VA = "0x169774C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB022A8", Offset = "0xB022A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event ControllerInteractionEventHandler ControllerVisible
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x16977F4", Offset = "0x16977F4", VA = "0x16977F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB022B8", Offset = "0xB022B8")]
			add
			{
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x169789C", Offset = "0x169789C", VA = "0x169789C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB022C8", Offset = "0xB022C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event ControllerInteractionEventHandler ControllerHidden
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x1697944", Offset = "0x1697944", VA = "0x1697944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB022D8", Offset = "0xB022D8")]
			add
			{
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x16979EC", Offset = "0x16979EC", VA = "0x16979EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB022E8", Offset = "0xB022E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1697A94", Offset = "0x1697A94", VA = "0x1697A94", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1697AD0", Offset = "0x1697AD0", VA = "0x1697AD0", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1697B0C", Offset = "0x1697B0C", VA = "0x1697B0C", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1697B48", Offset = "0x1697B48", VA = "0x1697B48", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x1697B84", Offset = "0x1697B84", VA = "0x1697B84", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1697BC0", Offset = "0x1697BC0", VA = "0x1697BC0", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1697BFC", Offset = "0x1697BFC", VA = "0x1697BFC", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1697C38", Offset = "0x1697C38", VA = "0x1697C38", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1697C74", Offset = "0x1697C74", VA = "0x1697C74", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1697CB0", Offset = "0x1697CB0", VA = "0x1697CB0", Slot = "13")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1697CEC", Offset = "0x1697CEC", VA = "0x1697CEC", Slot = "14")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1697D28", Offset = "0x1697D28", VA = "0x1697D28", Slot = "15")]
		public virtual void OnGripTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1697D64", Offset = "0x1697D64", VA = "0x1697D64", Slot = "16")]
		public virtual void OnGripTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1697DA0", Offset = "0x1697DA0", VA = "0x1697DA0", Slot = "17")]
		public virtual void OnGripHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1697DDC", Offset = "0x1697DDC", VA = "0x1697DDC", Slot = "18")]
		public virtual void OnGripHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1697E18", Offset = "0x1697E18", VA = "0x1697E18", Slot = "19")]
		public virtual void OnGripClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1697E54", Offset = "0x1697E54", VA = "0x1697E54", Slot = "20")]
		public virtual void OnGripUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1697E90", Offset = "0x1697E90", VA = "0x1697E90", Slot = "21")]
		public virtual void OnGripAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1697ECC", Offset = "0x1697ECC", VA = "0x1697ECC", Slot = "22")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1697F08", Offset = "0x1697F08", VA = "0x1697F08", Slot = "23")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1697F44", Offset = "0x1697F44", VA = "0x1697F44", Slot = "24")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1697F80", Offset = "0x1697F80", VA = "0x1697F80", Slot = "25")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1697FBC", Offset = "0x1697FBC", VA = "0x1697FBC", Slot = "26")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1697FF8", Offset = "0x1697FF8", VA = "0x1697FF8", Slot = "27")]
		public virtual void OnButtonOneTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1698034", Offset = "0x1698034", VA = "0x1698034", Slot = "28")]
		public virtual void OnButtonOneTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1698070", Offset = "0x1698070", VA = "0x1698070", Slot = "29")]
		public virtual void OnButtonOnePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x16980AC", Offset = "0x16980AC", VA = "0x16980AC", Slot = "30")]
		public virtual void OnButtonOneReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x16980E8", Offset = "0x16980E8", VA = "0x16980E8", Slot = "31")]
		public virtual void OnButtonTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1698124", Offset = "0x1698124", VA = "0x1698124", Slot = "32")]
		public virtual void OnButtonTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1698160", Offset = "0x1698160", VA = "0x1698160", Slot = "33")]
		public virtual void OnButtonTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x169819C", Offset = "0x169819C", VA = "0x169819C", Slot = "34")]
		public virtual void OnButtonTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x16981D8", Offset = "0x16981D8", VA = "0x16981D8", Slot = "35")]
		public virtual void OnStartMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1698214", Offset = "0x1698214", VA = "0x1698214", Slot = "36")]
		public virtual void OnStartMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1698250", Offset = "0x1698250", VA = "0x1698250", Slot = "37")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB022F8", Offset = "0xB022F8")]
		public virtual void OnAliasPointerOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x169828C", Offset = "0x169828C", VA = "0x169828C", Slot = "38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02330", Offset = "0xB02330")]
		public virtual void OnAliasPointerOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x16982C8", Offset = "0x16982C8", VA = "0x16982C8", Slot = "39")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02368", Offset = "0xB02368")]
		public virtual void OnAliasPointerSet(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1698304", Offset = "0x1698304", VA = "0x1698304", Slot = "40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB023A0", Offset = "0xB023A0")]
		public virtual void OnAliasGrabOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1698340", Offset = "0x1698340", VA = "0x1698340", Slot = "41")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB023D8", Offset = "0xB023D8")]
		public virtual void OnAliasGrabOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x169837C", Offset = "0x169837C", VA = "0x169837C", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02410", Offset = "0xB02410")]
		public virtual void OnAliasUseOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x16983B8", Offset = "0x16983B8", VA = "0x16983B8", Slot = "43")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02448", Offset = "0xB02448")]
		public virtual void OnAliasUseOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x16983F4", Offset = "0x16983F4", VA = "0x16983F4", Slot = "44")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02480", Offset = "0xB02480")]
		public virtual void OnAliasUIClickOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1698430", Offset = "0x1698430", VA = "0x1698430", Slot = "45")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB024B8", Offset = "0xB024B8")]
		public virtual void OnAliasUIClickOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x169846C", Offset = "0x169846C", VA = "0x169846C", Slot = "46")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB024F0", Offset = "0xB024F0")]
		public virtual void OnAliasMenuOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x16984A8", Offset = "0x16984A8", VA = "0x16984A8", Slot = "47")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02528", Offset = "0xB02528")]
		public virtual void OnAliasMenuOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x16984E4", Offset = "0x16984E4", VA = "0x16984E4", Slot = "48")]
		public virtual void OnControllerEnabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1698520", Offset = "0x1698520", VA = "0x1698520", Slot = "49")]
		public virtual void OnControllerDisabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x169855C", Offset = "0x169855C", VA = "0x169855C", Slot = "50")]
		public virtual void OnControllerIndexChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1698598", Offset = "0x1698598", VA = "0x1698598", Slot = "51")]
		public virtual void OnControllerVisible(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x16985DC", Offset = "0x16985DC", VA = "0x16985DC", Slot = "52")]
		public virtual void OnControllerHidden(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x169861C", Offset = "0x169861C", VA = "0x169861C", Slot = "53")]
		public virtual ControllerInteractionEventArgs SetControllerEvent()
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1698654", Offset = "0x1698654", VA = "0x1698654", Slot = "54")]
		public virtual ControllerInteractionEventArgs SetControllerEvent(ref bool buttonBool, bool value = false, float buttonPressure = 0f)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1698778", Offset = "0x1698778", VA = "0x1698778", Slot = "55")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02560", Offset = "0xB02560")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x16987F4", Offset = "0x16987F4", VA = "0x16987F4", Slot = "56")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02598", Offset = "0xB02598")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1698870", Offset = "0x1698870", VA = "0x1698870", Slot = "57")]
		public virtual Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x169887C", Offset = "0x169887C", VA = "0x169887C", Slot = "58")]
		public virtual float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1698894", Offset = "0x1698894", VA = "0x1698894", Slot = "59")]
		public virtual float GetTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x169889C", Offset = "0x169889C", VA = "0x169889C", Slot = "60")]
		public virtual float GetGripAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x16988A4", Offset = "0x16988A4", VA = "0x16988A4", Slot = "61")]
		public virtual float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x16988AC", Offset = "0x16988AC", VA = "0x16988AC", Slot = "62")]
		public virtual float GetHairGripDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x16988B4", Offset = "0x16988B4", VA = "0x16988B4", Slot = "63")]
		public virtual bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x16988F4", Offset = "0x16988F4", VA = "0x16988F4", Slot = "64")]
		public virtual bool IsButtonPressed(ButtonAlias button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x169899C", Offset = "0x169899C", VA = "0x169899C", Slot = "65")]
		public virtual void SubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x16989C4", Offset = "0x16989C4", VA = "0x16989C4", Slot = "66")]
		public virtual void UnsubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x16989E4", Offset = "0x16989E4", VA = "0x16989E4", Slot = "67")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1698A5C", Offset = "0x1698A5C", VA = "0x1698A5C", Slot = "68")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1698C14", Offset = "0x1698C14", VA = "0x1698C14", Slot = "69")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1698DB8", Offset = "0x1698DB8", VA = "0x1698DB8", Slot = "70")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1698E30", Offset = "0x1698E30", VA = "0x1698E30", Slot = "71")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x169A57C", Offset = "0x169A57C", VA = "0x169A57C", Slot = "72")]
		protected virtual void ButtonAliasEventSubscription(bool subscribe, ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x169A7BC", Offset = "0x169A7BC", VA = "0x169A7BC", Slot = "73")]
		protected virtual void TrackedControllerEnabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x169A81C", Offset = "0x169A81C", VA = "0x169A81C", Slot = "74")]
		protected virtual void TrackedControllerDisabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x169A890", Offset = "0x169A890", VA = "0x169A890", Slot = "75")]
		protected virtual void TrackedControllerIndexChanged(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x169A8F0", Offset = "0x169A8F0", VA = "0x169A8F0", Slot = "76")]
		protected virtual float CalculateTouchpadAxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x169A994", Offset = "0x169A994", VA = "0x169A994", Slot = "77")]
		protected virtual void EmitAlias(ButtonAlias type, bool touchDown, float buttonPressure, ref bool buttonBool)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x169AD98", Offset = "0x169AD98", VA = "0x169AD98", Slot = "78")]
		protected virtual void DisableEvents()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x169B6B0", Offset = "0x169B6B0", VA = "0x169B6B0")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class VRTK_ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE648C", Offset = "0xAE648C")]
		private sealed class <SimpleHapticPulseRoutine>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float pulseInterval;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float hapticPulseStrength;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OVRInput.Controller <hand>5__2;

			[Token(Token = "0x170002D3")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002475")]
				[Address(RVA = "0x149E288", Offset = "0x149E288", VA = "0x149E288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002477")]
				[Address(RVA = "0x149E2F0", Offset = "0x149E2F0", VA = "0x149E2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002472")]
			[Address(RVA = "0x149DC84", Offset = "0x149DC84", VA = "0x149DC84")]
			[DebuggerHidden]
			public <SimpleHapticPulseRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x149E0A8", Offset = "0x149E0A8", VA = "0x149E0A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002474")]
			[Address(RVA = "0x149E0AC", Offset = "0x149E0AC", VA = "0x149E0AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0x149E290", Offset = "0x149E290", VA = "0x149E290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE649C", Offset = "0xAE649C")]
		private sealed class <AudioClipHapticsRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SDK_ControllerHapticModifiers <hapticModifiers>5__2;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <hapticScalar>5__3;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float[] <audioData>5__4;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <sampleOffset>5__5;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <startTime>5__6;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <length>5__7;

			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <endTime>5__8;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <sampleRate>5__9;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247B")]
				[Address(RVA = "0x149E038", Offset = "0x149E038", VA = "0x149E038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247D")]
				[Address(RVA = "0x149E0A0", Offset = "0x149E0A0", VA = "0x149E0A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0x149DD2C", Offset = "0x149DD2C", VA = "0x149DD2C")]
			[DebuggerHidden]
			public <AudioClipHapticsRoutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002479")]
			[Address(RVA = "0x149DDC8", Offset = "0x149DDC8", VA = "0x149DDC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247A")]
			[Address(RVA = "0x149DDCC", Offset = "0x149DDCC", VA = "0x149DDCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600247C")]
			[Address(RVA = "0x149E040", Offset = "0x149E040", VA = "0x149E040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ControllerHaptics instance;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<VRTK_ControllerReference, CoroutineHandle> hapticLoopCoroutines;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x149D390", Offset = "0x149D390", VA = "0x149D390")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x149D5A0", Offset = "0x149D5A0", VA = "0x149D5A0")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x149D694", Offset = "0x149D694", VA = "0x149D694")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x149D760", Offset = "0x149D760", VA = "0x149D760")]
		public static void CancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x149D824", Offset = "0x149D824", VA = "0x149D824", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x149D468", Offset = "0x149D468", VA = "0x149D468")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x149D888", Offset = "0x149D888", VA = "0x149D888", Slot = "5")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x149D958", Offset = "0x149D958", VA = "0x149D958", Slot = "6")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x149DAF0", Offset = "0x149DAF0", VA = "0x149DAF0", Slot = "7")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x149DAF4", Offset = "0x149DAF4", VA = "0x149DAF4", Slot = "8")]
		protected virtual void InternalCancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x149DBF0", Offset = "0x149DBF0", VA = "0x149DBF0", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB025D0", Offset = "0xB025D0")]
		protected virtual IEnumerator<float> SimpleHapticPulseRoutine(VRTK_ControllerReference controllerReference, float duration, float hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x149DCB0", Offset = "0x149DCB0", VA = "0x149DCB0", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02634", Offset = "0xB02634")]
		protected virtual IEnumerator AudioClipHapticsRoutine(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x149DD58", Offset = "0x149DD58", VA = "0x149DD58")]
		public VRTK_ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3924", Offset = "0xAE3924")]
	public class VRTK_ControllerHighlighter : MonoBehaviour
	{
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64AC", Offset = "0xAE64AC")]
		private sealed class <WaitForModel>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControllerHighlighter <>4__this;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002481")]
				[Address(RVA = "0x14A0724", Offset = "0x14A0724", VA = "0x14A0724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002483")]
				[Address(RVA = "0x14A078C", Offset = "0x14A078C", VA = "0x14A078C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x149FC00", Offset = "0x149FC00", VA = "0x149FC00")]
			[DebuggerHidden]
			public <WaitForModel>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x14A0624", Offset = "0x14A0624", VA = "0x14A0624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x14A0628", Offset = "0x14A0628", VA = "0x14A0628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002482")]
			[Address(RVA = "0x14A072C", Offset = "0x14A072C", VA = "0x14A072C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF370", Offset = "0xAEF370")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF370", Offset = "0xAEF370")]
		public float transitionDuration;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF3D0", Offset = "0xAEF3D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF3D0", Offset = "0xAEF3D0")]
		public Color highlightController;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF430", Offset = "0xAEF430")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF430", Offset = "0xAEF430")]
		public Color highlightBody;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF490", Offset = "0xAEF490")]
		public Color highlightTrigger;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF4C8", Offset = "0xAEF4C8")]
		public Color highlightGrip;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF500", Offset = "0xAEF500")]
		public Color highlightTouchpad;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF538", Offset = "0xAEF538")]
		public Color highlightButtonOne;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF570", Offset = "0xAEF570")]
		public Color highlightButtonTwo;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF5A8", Offset = "0xAEF5A8")]
		public Color highlightSystemMenu;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF5E0", Offset = "0xAEF5E0")]
		public Color highlightStartMenu;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF618", Offset = "0xAEF618")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF618", Offset = "0xAEF618")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF678", Offset = "0xAEF678")]
		public VRTK_ControllerElementHighlighters elementHighlighterOverrides;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF6B0", Offset = "0xAEF6B0")]
		public GameObject controllerAlias;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF6E8", Offset = "0xAEF6E8")]
		public GameObject modelContainer;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool controllerHighlighted;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<string, Transform> cachedElements;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<string, object> highlighterOptions;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Coroutine initHighlightersRoutine;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected GameObject originalControllerAlias;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Color lastHighlightController;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Color lastHighlightBody;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Color lastHighlightTrigger;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Color lastHighlightGrip;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Color lastHighlightTouchpad;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected Color lastHighlightButtonOne;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected Color lastHighlightButtonTwo;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Color lastHighlightSystemMenu;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Color lastHighlightStartMenu;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected SDK_BaseController.ControllerElements[] bodyElements;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected SDK_BaseController.ControllerElements[] triggerElements;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected SDK_BaseController.ControllerElements[] gripElements;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected SDK_BaseController.ControllerElements[] touchpadElements;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected SDK_BaseController.ControllerElements[] buttonOneElements;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected SDK_BaseController.ControllerElements[] buttonTwoElements;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected SDK_BaseController.ControllerElements[] systemMenuElements;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected SDK_BaseController.ControllerElements[] startMenuElements;

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x149E354", Offset = "0x149E354", VA = "0x149E354", Slot = "4")]
		public virtual void ConfigureControllerPaths()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x149E530", Offset = "0x149E530", VA = "0x149E530", Slot = "5")]
		public virtual void PopulateHighlighters()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x149EA78", Offset = "0x149EA78", VA = "0x149EA78", Slot = "6")]
		public virtual void HighlightController(Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x149EC2C", Offset = "0x149EC2C", VA = "0x149EC2C", Slot = "7")]
		public virtual void UnhighlightController()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x149ED20", Offset = "0x149ED20", VA = "0x149ED20", Slot = "8")]
		public virtual void HighlightElement(SDK_BaseController.ControllerElements elementType, Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x149EE9C", Offset = "0x149EE9C", VA = "0x149EE9C", Slot = "9")]
		public virtual void UnhighlightElement(SDK_BaseController.ControllerElements elementType)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x149F058", Offset = "0x149F058", VA = "0x149F058", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x149F0D8", Offset = "0x149F0D8", VA = "0x149F0D8", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x149F444", Offset = "0x149F444", VA = "0x149F444", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x149F458", Offset = "0x149F458", VA = "0x149F458", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x149F4D0", Offset = "0x149F4D0", VA = "0x149F4D0", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x149F618", Offset = "0x149F618", VA = "0x149F618", Slot = "15")]
		protected virtual void ResetLastHighlights()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x149F708", Offset = "0x149F708", VA = "0x149F708", Slot = "16")]
		protected virtual void SetColourParameter(SDK_BaseController.ControllerElements element, Color color)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x149F8D0", Offset = "0x149F8D0", VA = "0x149F8D0", Slot = "17")]
		protected virtual Color GetColourParameter(SDK_BaseController.ControllerElements element)
		{
			return default(Color);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x149F960", Offset = "0x149F960", VA = "0x149F960", Slot = "18")]
		protected virtual void ToggleControllerState()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x149FA34", Offset = "0x149FA34", VA = "0x149FA34", Slot = "19")]
		protected virtual void ToggleHighlightState(Color currentColor, ref Color lastColorState, SDK_BaseController.ControllerElements[] elements)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x149FB90", Offset = "0x149FB90", VA = "0x149FB90", Slot = "20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02698", Offset = "0xB02698")]
		protected virtual IEnumerator WaitForModel()
		{
			return null;
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x149FC2C", Offset = "0x149FC2C", VA = "0x149FC2C", Slot = "21")]
		protected virtual void AddHighlighterToElement(Transform element, VRTK_BaseHighlighter parentHighlighter, VRTK_BaseHighlighter overrideHighlighter)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x149FDAC", Offset = "0x149FDAC", VA = "0x149FDAC", Slot = "22")]
		protected virtual string GetElementPath(string currentPath, SDK_BaseController.ControllerElements elementType)
		{
			return null;
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x149FEB4", Offset = "0x149FEB4", VA = "0x149FEB4", Slot = "23")]
		protected virtual string GetPathForControllerElement(SDK_BaseController.ControllerElements controllerElement)
		{
			return null;
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x149FFC0", Offset = "0x149FFC0", VA = "0x149FFC0", Slot = "24")]
		protected virtual Transform GetElementTransform(string path)
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x14A0200", Offset = "0x14A0200", VA = "0x14A0200", Slot = "25")]
		protected virtual void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x14A0360", Offset = "0x14A0360", VA = "0x14A0360")]
		public VRTK_ControllerHighlighter()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public struct InteractControllerAppearanceEventArgs
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject ignoredObject;
	}
	[Token(Token = "0x2000205")]
	public delegate void InteractControllerAppearanceEventHandler(object sender, InteractControllerAppearanceEventArgs e);
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE395C", Offset = "0xAE395C")]
	public class VRTK_InteractControllerAppearance : MonoBehaviour
	{
		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64BC", Offset = "0xAE64BC")]
		private sealed class <HideController>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject interactingObject;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject ignoredObject;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_InteractControllerAppearance <>4__this;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002487")]
				[Address(RVA = "0x1939C4C", Offset = "0x1939C4C", VA = "0x1939C4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002489")]
				[Address(RVA = "0x1939CB4", Offset = "0x1939CB4", VA = "0x1939CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0x1939B10", Offset = "0x1939B10", VA = "0x1939B10")]
			[DebuggerHidden]
			public <HideController>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0x1939B58", Offset = "0x1939B58", VA = "0x1939B58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0x1939B5C", Offset = "0x1939B5C", VA = "0x1939B5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002488")]
			[Address(RVA = "0x1939C54", Offset = "0x1939C54", VA = "0x1939C54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF720", Offset = "0xAEF720")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF720", Offset = "0xAEF720")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF780", Offset = "0xAEF780")]
		public float hideDelayOnTouch;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF7B8", Offset = "0xAEF7B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF7B8", Offset = "0xAEF7B8")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF818", Offset = "0xAEF818")]
		public float hideDelayOnGrab;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF850", Offset = "0xAEF850")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF850", Offset = "0xAEF850")]
		public bool hideControllerOnUse;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF8B0", Offset = "0xAEF8B0")]
		public float hideDelayOnUse;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool touchControllerShow;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool grabControllerShow;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine hideControllerRoutine;

		[Token(Token = "0x1400006E")]
		public event InteractControllerAppearanceEventHandler ControllerHidden
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1938860", Offset = "0x1938860", VA = "0x1938860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB026FC", Offset = "0xB026FC")]
			add
			{
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1938904", Offset = "0x1938904", VA = "0x1938904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0270C", Offset = "0xB0270C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event InteractControllerAppearanceEventHandler ControllerVisible
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x19389A8", Offset = "0x19389A8", VA = "0x19389A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0271C", Offset = "0xB0271C")]
			add
			{
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1938A4C", Offset = "0x1938A4C", VA = "0x1938A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0272C", Offset = "0xB0272C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event InteractControllerAppearanceEventHandler HiddenOnTouch
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1938AF0", Offset = "0x1938AF0", VA = "0x1938AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0273C", Offset = "0xB0273C")]
			add
			{
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1938B94", Offset = "0x1938B94", VA = "0x1938B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0274C", Offset = "0xB0274C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event InteractControllerAppearanceEventHandler VisibleOnTouch
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1938C38", Offset = "0x1938C38", VA = "0x1938C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0275C", Offset = "0xB0275C")]
			add
			{
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1938CDC", Offset = "0x1938CDC", VA = "0x1938CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0276C", Offset = "0xB0276C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event InteractControllerAppearanceEventHandler HiddenOnGrab
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x1938D80", Offset = "0x1938D80", VA = "0x1938D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0277C", Offset = "0xB0277C")]
			add
			{
			}
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1938E24", Offset = "0x1938E24", VA = "0x1938E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0278C", Offset = "0xB0278C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event InteractControllerAppearanceEventHandler VisibleOnGrab
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x1938EC8", Offset = "0x1938EC8", VA = "0x1938EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0279C", Offset = "0xB0279C")]
			add
			{
			}
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x1938F6C", Offset = "0x1938F6C", VA = "0x1938F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB027AC", Offset = "0xB027AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event InteractControllerAppearanceEventHandler HiddenOnUse
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x1939010", Offset = "0x1939010", VA = "0x1939010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB027BC", Offset = "0xB027BC")]
			add
			{
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x19390B4", Offset = "0x19390B4", VA = "0x19390B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB027CC", Offset = "0xB027CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event InteractControllerAppearanceEventHandler VisibleOnUse
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x1939158", Offset = "0x1939158", VA = "0x1939158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB027DC", Offset = "0xB027DC")]
			add
			{
			}
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x19391FC", Offset = "0x19391FC", VA = "0x19391FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB027EC", Offset = "0xB027EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x19392A0", Offset = "0x19392A0", VA = "0x19392A0", Slot = "4")]
		public virtual void OnControllerHidden(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x19392C4", Offset = "0x19392C4", VA = "0x19392C4", Slot = "5")]
		public virtual void OnControllerVisible(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x19392E8", Offset = "0x19392E8", VA = "0x19392E8", Slot = "6")]
		public virtual void OnHiddenOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x193930C", Offset = "0x193930C", VA = "0x193930C", Slot = "7")]
		public virtual void OnVisibleOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1939330", Offset = "0x1939330", VA = "0x1939330", Slot = "8")]
		public virtual void OnHiddenOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1939354", Offset = "0x1939354", VA = "0x1939354", Slot = "9")]
		public virtual void OnVisibleOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1939378", Offset = "0x1939378", VA = "0x1939378", Slot = "10")]
		public virtual void OnHiddenOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x193939C", Offset = "0x193939C", VA = "0x193939C", Slot = "11")]
		public virtual void OnVisibleOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x19393C0", Offset = "0x19393C0", VA = "0x19393C0", Slot = "12")]
		public virtual void ToggleControllerOnTouch(bool showController, GameObject touchingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1939468", Offset = "0x1939468", VA = "0x1939468", Slot = "13")]
		public virtual void ToggleControllerOnGrab(bool showController, GameObject grabbingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x19395F4", Offset = "0x19395F4", VA = "0x19395F4", Slot = "14")]
		public virtual void ToggleControllerOnUse(bool showController, GameObject usingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x19397CC", Offset = "0x19397CC", VA = "0x19397CC", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1939968", Offset = "0x1939968", VA = "0x1939968", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x193997C", Offset = "0x193997C", VA = "0x193997C", Slot = "17")]
		protected virtual void ToggleController(bool showController, GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x19399F0", Offset = "0x19399F0", VA = "0x19399F0", Slot = "18")]
		protected virtual void ShowController(GameObject interactingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1939A7C", Offset = "0x1939A7C", VA = "0x1939A7C", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB027FC", Offset = "0xB027FC")]
		protected virtual IEnumerator HideController(GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1939B3C", Offset = "0x1939B3C", VA = "0x1939B3C", Slot = "20")]
		protected virtual InteractControllerAppearanceEventArgs SetEventPayload(GameObject interactingObject, GameObject ignroedObject)
		{
			return default(InteractControllerAppearanceEventArgs);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1939B48", Offset = "0x1939B48", VA = "0x1939B48")]
		public VRTK_InteractControllerAppearance()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3994", Offset = "0xAE3994")]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64CC", Offset = "0xAE64CC")]
		private sealed class <SetCurrentControllerAttachPoint>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractGrab <>4__this;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string searchPath;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int attempts;

			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Transform <defaultAttachPoint>5__3;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600248D")]
				[Address(RVA = "0x193D56C", Offset = "0x193D56C", VA = "0x193D56C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600248F")]
				[Address(RVA = "0x193D5D4", Offset = "0x193D5D4", VA = "0x193D5D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600248A")]
			[Address(RVA = "0x193BAB4", Offset = "0x193BAB4", VA = "0x193BAB4")]
			[DebuggerHidden]
			public <SetCurrentControllerAttachPoint>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x600248B")]
			[Address(RVA = "0x193D314", Offset = "0x193D314", VA = "0x193D314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600248C")]
			[Address(RVA = "0x193D318", Offset = "0x193D318", VA = "0x193D318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600248E")]
			[Address(RVA = "0x193D574", Offset = "0x193D574", VA = "0x193D574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEF968", Offset = "0xAEF968")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF968", Offset = "0xAEF968")]
		public VRTK_ControllerEvents.ButtonAlias grabButton;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEF9C8", Offset = "0xAEF9C8")]
		public float grabPrecognition;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFA00", Offset = "0xAEFA00")]
		public float throwMultiplier;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFA38", Offset = "0xAEFA38")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEFA70", Offset = "0xAEFA70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFA70", Offset = "0xAEFA70")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFAD0", Offset = "0xAEFAD0")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFB08", Offset = "0xAEFB08")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedGrabButton;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias savedGrabButton;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool grabPressed;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool influencingGrabbedObject;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int grabEnabledState;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float grabPrecognitionTimer;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject undroppableGrabbedObject;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody originalControllerAttachPoint;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Coroutine attemptSetCurrentControllerAttachPoint;

		[Token(Token = "0x17000075")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x193A46C", Offset = "0x193A46C", VA = "0x193A46C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000076")]
		public event ControllerInteractionEventHandler GrabButtonPressed
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x1939CBC", Offset = "0x1939CBC", VA = "0x1939CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02860", Offset = "0xB02860")]
			add
			{
			}
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x1939D60", Offset = "0x1939D60", VA = "0x1939D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02870", Offset = "0xB02870")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event ControllerInteractionEventHandler GrabButtonReleased
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x1939E04", Offset = "0x1939E04", VA = "0x1939E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02880", Offset = "0xB02880")]
			add
			{
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1939EA8", Offset = "0x1939EA8", VA = "0x1939EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02890", Offset = "0xB02890")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event ObjectInteractEventHandler ControllerStartGrabInteractableObject
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x1939F4C", Offset = "0x1939F4C", VA = "0x1939F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028A0", Offset = "0xB028A0")]
			add
			{
			}
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x1939FF0", Offset = "0x1939FF0", VA = "0x1939FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028B0", Offset = "0xB028B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x193A094", Offset = "0x193A094", VA = "0x193A094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028C0", Offset = "0xB028C0")]
			add
			{
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x193A138", Offset = "0x193A138", VA = "0x193A138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028D0", Offset = "0xB028D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event ObjectInteractEventHandler ControllerStartUngrabInteractableObject
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x193A1DC", Offset = "0x193A1DC", VA = "0x193A1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028E0", Offset = "0xB028E0")]
			add
			{
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x193A280", Offset = "0x193A280", VA = "0x193A280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB028F0", Offset = "0xB028F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x193A324", Offset = "0x193A324", VA = "0x193A324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02900", Offset = "0xB02900")]
			add
			{
			}
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x193A3C8", Offset = "0x193A3C8", VA = "0x193A3C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02910", Offset = "0xB02910")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x193A528", Offset = "0x193A528", VA = "0x193A528", Slot = "4")]
		public virtual void OnControllerStartGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x193A56C", Offset = "0x193A56C", VA = "0x193A56C", Slot = "5")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x193A5B0", Offset = "0x193A5B0", VA = "0x193A5B0", Slot = "6")]
		public virtual void OnControllerStartUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x193A5F4", Offset = "0x193A5F4", VA = "0x193A5F4", Slot = "7")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x193A638", Offset = "0x193A638", VA = "0x193A638", Slot = "8")]
		public virtual void OnGrabButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x193A674", Offset = "0x193A674", VA = "0x193A674", Slot = "9")]
		public virtual void OnGrabButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x193A6B0", Offset = "0x193A6B0", VA = "0x193A6B0", Slot = "10")]
		public virtual bool IsGrabButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x193A6B8", Offset = "0x193A6B8", VA = "0x193A6B8", Slot = "11")]
		public virtual void ForceRelease(bool applyGrabbingObjectVelocity = false)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x193A6CC", Offset = "0x193A6CC", VA = "0x193A6CC", Slot = "12")]
		public virtual void AttemptGrab()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x193A760", Offset = "0x193A760", VA = "0x193A760", Slot = "13")]
		public virtual GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x193A768", Offset = "0x193A768", VA = "0x193A768", Slot = "14")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x193A9FC", Offset = "0x193A9FC", VA = "0x193A9FC", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x193AB14", Offset = "0x193AB14", VA = "0x193AB14", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x193AC40", Offset = "0x193AC40", VA = "0x193AC40", Slot = "17")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x193ACB8", Offset = "0x193ACB8", VA = "0x193ACB8", Slot = "18")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x193AD20", Offset = "0x193AD20", VA = "0x193AD20", Slot = "19")]
		protected virtual void ControllerIndexChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x193AD30", Offset = "0x193AD30", VA = "0x193AD30", Slot = "20")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x193B178", Offset = "0x193B178", VA = "0x193B178", Slot = "21")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x193B268", Offset = "0x193B268", VA = "0x193B268", Slot = "22")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x193B3E4", Offset = "0x193B3E4", VA = "0x193B3E4", Slot = "23")]
		protected virtual void ManageGrabListener(bool state)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x193B620", Offset = "0x193B620", VA = "0x193B620", Slot = "24")]
		protected virtual void RegrabUndroppableObject()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x193B78C", Offset = "0x193B78C", VA = "0x193B78C", Slot = "25")]
		protected virtual void SetUndroppableObject()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x193B89C", Offset = "0x193B89C", VA = "0x193B89C", Slot = "26")]
		protected virtual void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x193BA20", Offset = "0x193BA20", VA = "0x193BA20", Slot = "27")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02920", Offset = "0xB02920")]
		protected virtual IEnumerator SetCurrentControllerAttachPoint(string searchPath, int attempts, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x193BAE0", Offset = "0x193BAE0", VA = "0x193BAE0", Slot = "28")]
		protected virtual bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x193BC18", Offset = "0x193BC18", VA = "0x193BC18", Slot = "29")]
		protected virtual bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x193BCF4", Offset = "0x193BCF4", VA = "0x193BCF4", Slot = "30")]
		protected virtual void ChooseGrabSequence(VRTK_InteractableObject grabbedObjectScript)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x193BD74", Offset = "0x193BD74", VA = "0x193BD74", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x193BEAC", Offset = "0x193BEAC", VA = "0x193BEAC", Slot = "32")]
		protected virtual void InitGrabbedObject()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x193C074", Offset = "0x193C074", VA = "0x193C074", Slot = "33")]
		protected virtual void InitPrimaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x193C294", Offset = "0x193C294", VA = "0x193C294", Slot = "34")]
		protected virtual void InitSecondaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x193C318", Offset = "0x193C318", VA = "0x193C318", Slot = "35")]
		protected virtual void CheckInfluencingObjectOnRelease()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x193C3D0", Offset = "0x193C3D0", VA = "0x193C3D0", Slot = "36")]
		protected virtual void InitUngrabbedObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x193C614", Offset = "0x193C614", VA = "0x193C614", Slot = "37")]
		protected virtual GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x193C708", Offset = "0x193C708", VA = "0x193C708", Slot = "38")]
		protected virtual void IncrementGrabState()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x193C7C0", Offset = "0x193C7C0", VA = "0x193C7C0", Slot = "39")]
		protected virtual GameObject GetUndroppableObject()
		{
			return null;
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x193C8C8", Offset = "0x193C8C8", VA = "0x193C8C8", Slot = "40")]
		protected virtual void AttemptHaptics(bool initialGrabAttempt)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x193C9CC", Offset = "0x193C9CC", VA = "0x193C9CC", Slot = "41")]
		protected virtual void AttemptGrabObject()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x193CA90", Offset = "0x193CA90", VA = "0x193CA90", Slot = "42")]
		protected virtual void PerformGrabAttempt(GameObject objectToGrab)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x193CB0C", Offset = "0x193CB0C", VA = "0x193CB0C", Slot = "43")]
		protected virtual bool ScriptValidGrab(VRTK_InteractableObject objectToGrabScript)
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x193CBEC", Offset = "0x193CBEC", VA = "0x193CBEC", Slot = "44")]
		protected virtual bool IsValidGrabAttempt(GameObject objectToGrab)
		{
			return default(bool);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x193CD9C", Offset = "0x193CD9C", VA = "0x193CD9C", Slot = "45")]
		protected virtual bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x193CE94", Offset = "0x193CE94", VA = "0x193CE94", Slot = "46")]
		protected virtual void AttemptReleaseObject()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x193CF0C", Offset = "0x193CF0C", VA = "0x193CF0C", Slot = "47")]
		protected virtual void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x193CF98", Offset = "0x193CF98", VA = "0x193CF98", Slot = "48")]
		protected virtual void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x193D020", Offset = "0x193D020", VA = "0x193D020", Slot = "49")]
		protected virtual void CheckControllerAttachPointSet()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x193D0B4", Offset = "0x193D0B4", VA = "0x193D0B4", Slot = "50")]
		protected virtual void CreateNonTouchingRigidbody()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x193D1E8", Offset = "0x193D1E8", VA = "0x193D1E8", Slot = "51")]
		protected virtual void CheckPrecognitionGrab()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x193D2FC", Offset = "0x193D2FC", VA = "0x193D2FC")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public struct InteractHapticsEventArgs
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000209")]
	public delegate void InteractHapticsEventHandler(object sender, InteractHapticsEventArgs e);
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE39CC", Offset = "0xAE39CC")]
	public class VRTK_InteractHaptics : MonoBehaviour
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEFBA0", Offset = "0xAEFBA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFBA0", Offset = "0xAEFBA0")]
		public AudioClip clipOnTouch;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFC00", Offset = "0xAEFC00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEFC00", Offset = "0xAEFC00")]
		public float strengthOnTouch;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFC54", Offset = "0xAEFC54")]
		public float durationOnTouch;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFC8C", Offset = "0xAEFC8C")]
		public float intervalOnTouch;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEFCC4", Offset = "0xAEFCC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFCC4", Offset = "0xAEFCC4")]
		public AudioClip clipOnGrab;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFD24", Offset = "0xAEFD24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEFD24", Offset = "0xAEFD24")]
		public float strengthOnGrab;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFD78", Offset = "0xAEFD78")]
		public float durationOnGrab;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFDB0", Offset = "0xAEFDB0")]
		public float intervalOnGrab;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAEFDE8", Offset = "0xAEFDE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFDE8", Offset = "0xAEFDE8")]
		public AudioClip clipOnUse;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFE48", Offset = "0xAEFE48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAEFE48", Offset = "0xAEFE48")]
		public float strengthOnUse;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFE9C", Offset = "0xAEFE9C")]
		public float durationOnUse;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFED4", Offset = "0xAEFED4")]
		public float intervalOnUse;

		[Token(Token = "0x4000EE7")]
		protected const float minInterval = 0.05f;

		[Token(Token = "0x1400007C")]
		public event InteractHapticsEventHandler InteractHapticsTouched
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x193D5DC", Offset = "0x193D5DC", VA = "0x193D5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02984", Offset = "0xB02984")]
			add
			{
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x193D680", Offset = "0x193D680", VA = "0x193D680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02994", Offset = "0xB02994")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event InteractHapticsEventHandler InteractHapticsGrabbed
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x193D724", Offset = "0x193D724", VA = "0x193D724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029A4", Offset = "0xB029A4")]
			add
			{
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x193D7C8", Offset = "0x193D7C8", VA = "0x193D7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029B4", Offset = "0xB029B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event InteractHapticsEventHandler InteractHapticsUsed
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x193D86C", Offset = "0x193D86C", VA = "0x193D86C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029C4", Offset = "0xB029C4")]
			add
			{
			}
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x193D910", Offset = "0x193D910", VA = "0x193D910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB029D4", Offset = "0xB029D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x193D9B4", Offset = "0x193D9B4", VA = "0x193D9B4", Slot = "4")]
		public virtual void OnInteractHapticsTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x193D9D4", Offset = "0x193D9D4", VA = "0x193D9D4", Slot = "5")]
		public virtual void OnInteractHapticsGrabbed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x193D9F4", Offset = "0x193D9F4", VA = "0x193D9F4", Slot = "6")]
		public virtual void OnInteractHapticsUsed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x193DA14", Offset = "0x193DA14", VA = "0x193DA14", Slot = "7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB029E4", Offset = "0xB029E4")]
		public virtual void HapticsOnTouch(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x193DA9C", Offset = "0x193DA9C", VA = "0x193DA9C", Slot = "8")]
		public virtual void HapticsOnTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x193DB90", Offset = "0x193DB90", VA = "0x193DB90", Slot = "9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02A1C", Offset = "0xB02A1C")]
		public virtual void HapticsOnGrab(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x193DC18", Offset = "0x193DC18", VA = "0x193DC18", Slot = "10")]
		public virtual void HapticsOnGrab(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x193DD0C", Offset = "0x193DD0C", VA = "0x193DD0C", Slot = "11")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02A54", Offset = "0xB02A54")]
		public virtual void HapticsOnUse(uint controllerIndex)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x193DD94", Offset = "0x193DD94", VA = "0x193DD94", Slot = "12")]
		public virtual void HapticsOnUse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x193DE88", Offset = "0x193DE88", VA = "0x193DE88", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x193E024", Offset = "0x193E024", VA = "0x193E024", Slot = "14")]
		protected virtual void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float interval)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x193E03C", Offset = "0x193E03C", VA = "0x193E03C", Slot = "15")]
		protected virtual InteractHapticsEventArgs SetEventPayload(VRTK_ControllerReference givenControllerReference)
		{
			return default(InteractHapticsEventArgs);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x193E044", Offset = "0x193E044", VA = "0x193E044")]
		public VRTK_InteractHaptics()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAEFF3C", Offset = "0xAEFF3C")]
		public uint controllerIndex;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;
	}
	[Token(Token = "0x200020C")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3A04", Offset = "0xAE3A04")]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAEFF74", Offset = "0xAEFF74")]
		public GameObject customColliderContainer;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject touchedObject;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Collider> touchedObjectColliders;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Collider> touchedObjectActiveColliders;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controllerCollisionDetector;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool triggerRumble;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool destroyColliderOnDisable;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool triggerIsColliding;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool triggerWasColliding;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool rigidBodyForcedActive;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody touchRigidBody;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected UnityEngine.Object defaultColliderPrefab;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRTK_InteractGrab _interactGrab;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _frameTouchedCount;

		[Token(Token = "0x17000076")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x193E580", Offset = "0x193E580", VA = "0x193E580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400007F")]
		public event ObjectInteractEventHandler ControllerStartTouchInteractableObject
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x193E060", Offset = "0x193E060", VA = "0x193E060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02A8C", Offset = "0xB02A8C")]
			add
			{
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x193E104", Offset = "0x193E104", VA = "0x193E104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02A9C", Offset = "0xB02A9C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x193B030", Offset = "0x193B030", VA = "0x193B030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02AAC", Offset = "0xB02AAC")]
			add
			{
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x193AEE8", Offset = "0x193AEE8", VA = "0x193AEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02ABC", Offset = "0xB02ABC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event ObjectInteractEventHandler ControllerStartUntouchInteractableObject
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x193E1A8", Offset = "0x193E1A8", VA = "0x193E1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02ACC", Offset = "0xB02ACC")]
			add
			{
			}
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x193E24C", Offset = "0x193E24C", VA = "0x193E24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02ADC", Offset = "0xB02ADC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x193B0D4", Offset = "0x193B0D4", VA = "0x193B0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02AEC", Offset = "0xB02AEC")]
			add
			{
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x193AF8C", Offset = "0x193AF8C", VA = "0x193AF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02AFC", Offset = "0xB02AFC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event ObjectInteractEventHandler ControllerRigidbodyActivated
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x193E2F0", Offset = "0x193E2F0", VA = "0x193E2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B0C", Offset = "0xB02B0C")]
			add
			{
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x193E394", Offset = "0x193E394", VA = "0x193E394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B1C", Offset = "0xB02B1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event ObjectInteractEventHandler ControllerRigidbodyDeactivated
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x193E438", Offset = "0x193E438", VA = "0x193E438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B2C", Offset = "0xB02B2C")]
			add
			{
			}
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x193E4DC", Offset = "0x193E4DC", VA = "0x193E4DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B3C", Offset = "0xB02B3C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x193E5FC", Offset = "0x193E5FC", VA = "0x193E5FC", Slot = "4")]
		public virtual void OnControllerStartTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x193E640", Offset = "0x193E640", VA = "0x193E640", Slot = "5")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x193E684", Offset = "0x193E684", VA = "0x193E684", Slot = "6")]
		public virtual void OnControllerStartUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x193E6C8", Offset = "0x193E6C8", VA = "0x193E6C8", Slot = "7")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x193E70C", Offset = "0x193E70C", VA = "0x193E70C", Slot = "8")]
		public virtual void OnControllerRigidbodyActivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x193E750", Offset = "0x193E750", VA = "0x193E750", Slot = "9")]
		public virtual void OnControllerRigidbodyDeactivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x193E794", Offset = "0x193E794", VA = "0x193E794", Slot = "10")]
		public virtual ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x193E834", Offset = "0x193E834", VA = "0x193E834", Slot = "11")]
		public virtual void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x193E928", Offset = "0x193E928", VA = "0x193E928", Slot = "12")]
		public virtual GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x193E930", Offset = "0x193E930", VA = "0x193E930", Slot = "13")]
		public virtual bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x193EA30", Offset = "0x193EA30", VA = "0x193EA30", Slot = "14")]
		public virtual void ToggleControllerRigidBody(bool state, bool forceToggle = false)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x193EBAC", Offset = "0x193EBAC", VA = "0x193EBAC", Slot = "15")]
		public virtual bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x193EBD8", Offset = "0x193EBD8", VA = "0x193EBD8", Slot = "16")]
		public virtual bool IsRigidBodyForcedActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x193EC1C", Offset = "0x193EC1C", VA = "0x193EC1C", Slot = "17")]
		public virtual void ForceStopTouching()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x193ECB4", Offset = "0x193ECB4", VA = "0x193ECB4", Slot = "18")]
		public virtual Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x193ED80", Offset = "0x193ED80", VA = "0x193ED80", Slot = "19")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x193EDF8", Offset = "0x193EDF8", VA = "0x193EDF8", Slot = "20")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x193EEFC", Offset = "0x193EEFC", VA = "0x193EEFC", Slot = "21")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x193EF38", Offset = "0x193EF38", VA = "0x193EF38", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x193EFB0", Offset = "0x193EFB0", VA = "0x193EFB0", Slot = "23")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x193F1A0", Offset = "0x193F1A0", VA = "0x193F1A0", Slot = "24")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x193F238", Offset = "0x193F238", VA = "0x193F238", Slot = "25")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x193F6A4", Offset = "0x193F6A4", VA = "0x193F6A4", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x193F704", Offset = "0x193F704", VA = "0x193F704", Slot = "27")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x193F750", Offset = "0x193F750", VA = "0x193F750", Slot = "28")]
		protected virtual GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x193F804", Offset = "0x193F804", VA = "0x193F804", Slot = "29")]
		protected virtual void AddActiveCollider(Collider collider)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x193F8EC", Offset = "0x193F8EC", VA = "0x193F8EC", Slot = "30")]
		protected virtual void StoreTouchedObjectColliders(Collider collider)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x193F9FC", Offset = "0x193F9FC", VA = "0x193F9FC", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x193FB50", Offset = "0x193FB50", VA = "0x193FB50", Slot = "32")]
		protected virtual void CheckRumbleController(VRTK_InteractableObject touchedObjectScript)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x193FC3C", Offset = "0x193FC3C", VA = "0x193FC3C", Slot = "33")]
		protected virtual void CheckStopTouching()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x193FD8C", Offset = "0x193FD8C", VA = "0x193FD8C", Slot = "34")]
		protected virtual GameObject TriggerStart(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x193FDD0", Offset = "0x193FDD0", VA = "0x193FDD0", Slot = "35")]
		protected virtual bool IsSnapDropZone(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x193FE5C", Offset = "0x193FE5C", VA = "0x193FE5C", Slot = "36")]
		protected virtual void ResetTriggerRumble()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x193FE64", Offset = "0x193FE64", VA = "0x193FE64", Slot = "37")]
		protected virtual void StopTouching(GameObject untouched)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1940070", Offset = "0x1940070", VA = "0x1940070", Slot = "38")]
		protected virtual void CleanupEndTouch()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x19400DC", Offset = "0x19400DC", VA = "0x19400DC", Slot = "39")]
		protected virtual void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x194015C", Offset = "0x194015C", VA = "0x194015C", Slot = "40")]
		protected virtual bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x19402AC", Offset = "0x19402AC", VA = "0x19402AC", Slot = "41")]
		protected virtual void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1940798", Offset = "0x1940798", VA = "0x1940798", Slot = "42")]
		protected virtual void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x19408A0", Offset = "0x19408A0", VA = "0x19408A0", Slot = "43")]
		protected virtual void EmitControllerRigidbodyEvent(bool state)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1940960", Offset = "0x1940960", VA = "0x1940960")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3A3C", Offset = "0xAE3A3C")]
	public class VRTK_InteractUse : MonoBehaviour
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF000C", Offset = "0xAF000C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF000C", Offset = "0xAF000C")]
		public VRTK_ControllerEvents.ButtonAlias useButton;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF006C", Offset = "0xAF006C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF006C", Offset = "0xAF006C")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF00CC", Offset = "0xAF00CC")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0104", Offset = "0xAF0104")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedUseButton;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected VRTK_ControllerEvents.ButtonAlias savedUseButton;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool usePressed;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected GameObject usingObject;

		[Token(Token = "0x17000077")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x19411A0", Offset = "0x19411A0", VA = "0x19411A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000085")]
		public event ControllerInteractionEventHandler UseButtonPressed
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x19409F0", Offset = "0x19409F0", VA = "0x19409F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B4C", Offset = "0xB02B4C")]
			add
			{
			}
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x1940A94", Offset = "0x1940A94", VA = "0x1940A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B5C", Offset = "0xB02B5C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event ControllerInteractionEventHandler UseButtonReleased
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x1940B38", Offset = "0x1940B38", VA = "0x1940B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B6C", Offset = "0xB02B6C")]
			add
			{
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x1940BDC", Offset = "0x1940BDC", VA = "0x1940BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B7C", Offset = "0xB02B7C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event ObjectInteractEventHandler ControllerStartUseInteractableObject
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x1940C80", Offset = "0x1940C80", VA = "0x1940C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B8C", Offset = "0xB02B8C")]
			add
			{
			}
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x1940D24", Offset = "0x1940D24", VA = "0x1940D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02B9C", Offset = "0xB02B9C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event ObjectInteractEventHandler ControllerUseInteractableObject
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x1940DC8", Offset = "0x1940DC8", VA = "0x1940DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BAC", Offset = "0xB02BAC")]
			add
			{
			}
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x1940E6C", Offset = "0x1940E6C", VA = "0x1940E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BBC", Offset = "0xB02BBC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event ObjectInteractEventHandler ControllerStartUnuseInteractableObject
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x1940F10", Offset = "0x1940F10", VA = "0x1940F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BCC", Offset = "0xB02BCC")]
			add
			{
			}
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x1940FB4", Offset = "0x1940FB4", VA = "0x1940FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BDC", Offset = "0xB02BDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event ObjectInteractEventHandler ControllerUnuseInteractableObject
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x1941058", Offset = "0x1941058", VA = "0x1941058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BEC", Offset = "0xB02BEC")]
			add
			{
			}
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x19410FC", Offset = "0x19410FC", VA = "0x19410FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02BFC", Offset = "0xB02BFC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x194125C", Offset = "0x194125C", VA = "0x194125C", Slot = "4")]
		public virtual void OnControllerStartUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x19412A0", Offset = "0x19412A0", VA = "0x19412A0", Slot = "5")]
		public virtual void OnControllerUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x19412E4", Offset = "0x19412E4", VA = "0x19412E4", Slot = "6")]
		public virtual void OnControllerStartUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1941328", Offset = "0x1941328", VA = "0x1941328", Slot = "7")]
		public virtual void OnControllerUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x194136C", Offset = "0x194136C", VA = "0x194136C", Slot = "8")]
		public virtual void OnUseButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x19413A8", Offset = "0x19413A8", VA = "0x19413A8", Slot = "9")]
		public virtual void OnUseButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x19413E4", Offset = "0x19413E4", VA = "0x19413E4", Slot = "10")]
		public virtual bool IsUseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x19413EC", Offset = "0x19413EC", VA = "0x19413EC", Slot = "11")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x19413F4", Offset = "0x19413F4", VA = "0x19413F4", Slot = "12")]
		public virtual void ForceStopUsing()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1941488", Offset = "0x1941488", VA = "0x1941488", Slot = "13")]
		public virtual void ForceResetUsing()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1941520", Offset = "0x1941520", VA = "0x1941520", Slot = "14")]
		public virtual void AttemptUse()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1941530", Offset = "0x1941530", VA = "0x1941530", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1941808", Offset = "0x1941808", VA = "0x1941808", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1941860", Offset = "0x1941860", VA = "0x1941860", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1941874", Offset = "0x1941874", VA = "0x1941874", Slot = "18")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1941A2C", Offset = "0x1941A2C", VA = "0x1941A2C", Slot = "19")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1941B2C", Offset = "0x1941B2C", VA = "0x1941B2C", Slot = "20")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1941C30", Offset = "0x1941C30", VA = "0x1941C30", Slot = "21")]
		protected virtual void ManageUseListener(bool state)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1941E6C", Offset = "0x1941E6C", VA = "0x1941E6C", Slot = "22")]
		protected virtual bool IsObjectUsable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1941FD8", Offset = "0x1941FD8", VA = "0x1941FD8", Slot = "23")]
		protected virtual bool IsObjectHoldOnUse(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x19420B4", Offset = "0x19420B4", VA = "0x19420B4", Slot = "24")]
		protected virtual int GetObjectUsingState(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1942188", Offset = "0x1942188", VA = "0x1942188", Slot = "25")]
		protected virtual void SetObjectUsingState(GameObject obj, int value)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1942260", Offset = "0x1942260", VA = "0x1942260", Slot = "26")]
		protected virtual void AttemptHaptics()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x194235C", Offset = "0x194235C", VA = "0x194235C", Slot = "27")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1942464", Offset = "0x1942464", VA = "0x1942464", Slot = "28")]
		protected virtual void UseInteractedObject(GameObject touchedObject)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1942714", Offset = "0x1942714", VA = "0x1942714", Slot = "29")]
		protected virtual void UnuseInteractedObject(bool completeStop)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1942904", Offset = "0x1942904", VA = "0x1942904", Slot = "30")]
		protected virtual GameObject GetFromGrab()
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x19429A4", Offset = "0x19429A4", VA = "0x19429A4", Slot = "31")]
		protected virtual void StopUsing()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x19429EC", Offset = "0x19429EC", VA = "0x19429EC", Slot = "32")]
		protected virtual void AttemptUseObject()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1942C68", Offset = "0x1942C68", VA = "0x1942C68", Slot = "33")]
		protected virtual void DoStartUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1942CF4", Offset = "0x1942CF4", VA = "0x1942CF4", Slot = "34")]
		protected virtual void DoStopUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1942DB8", Offset = "0x1942DB8", VA = "0x1942DB8")]
		public VRTK_InteractUse()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x2000210")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3A74", Offset = "0xAE3A74")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x200059D")]
		public enum AllowedController
		{
			[Token(Token = "0x40029AD")]
			Both,
			[Token(Token = "0x40029AE")]
			LeftOnly,
			[Token(Token = "0x40029AF")]
			RightOnly
		}

		[Token(Token = "0x200059E")]
		public enum ValidDropTypes
		{
			[Token(Token = "0x40029B1")]
			NoDrop,
			[Token(Token = "0x40029B2")]
			DropAnywhere,
			[Token(Token = "0x40029B3")]
			DropValidSnapDropZone
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64DC", Offset = "0xAE64DC")]
		private sealed class <FrameKinematic>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002493")]
				[Address(RVA = "0x1948124", Offset = "0x1948124", VA = "0x1948124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002495")]
				[Address(RVA = "0x194818C", Offset = "0x194818C", VA = "0x194818C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002490")]
			[Address(RVA = "0x1944B3C", Offset = "0x1944B3C", VA = "0x1944B3C")]
			[DebuggerHidden]
			public <FrameKinematic>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0x1948094", Offset = "0x1948094", VA = "0x1948094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002492")]
			[Address(RVA = "0x1948098", Offset = "0x1948098", VA = "0x1948098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002494")]
			[Address(RVA = "0x194812C", Offset = "0x194812C", VA = "0x194812C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64EC", Offset = "0xAE64EC")]
		private sealed class <RegisterTeleportersAtEndOfFrame>d__158 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002499")]
				[Address(RVA = "0x1948388", Offset = "0x1948388", VA = "0x1948388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600249B")]
				[Address(RVA = "0x19483F0", Offset = "0x19483F0", VA = "0x19483F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002496")]
			[Address(RVA = "0x19475C4", Offset = "0x19475C4", VA = "0x19475C4")]
			[DebuggerHidden]
			public <RegisterTeleportersAtEndOfFrame>d__158(int <>1__state)
			{
			}

			[Token(Token = "0x6002497")]
			[Address(RVA = "0x1948194", Offset = "0x1948194", VA = "0x1948194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0x1948198", Offset = "0x1948198", VA = "0x1948198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600249A")]
			[Address(RVA = "0x1948390", Offset = "0x1948390", VA = "0x1948390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE64FC", Offset = "0xAE64FC")]
		private sealed class <ForceStopInteractingAtEndOfFrame>d__160 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600249F")]
				[Address(RVA = "0x1948024", Offset = "0x1948024", VA = "0x1948024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024A1")]
				[Address(RVA = "0x194808C", Offset = "0x194808C", VA = "0x194808C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600249C")]
			[Address(RVA = "0x1947758", Offset = "0x1947758", VA = "0x1947758")]
			[DebuggerHidden]
			public <ForceStopInteractingAtEndOfFrame>d__160(int <>1__state)
			{
			}

			[Token(Token = "0x600249D")]
			[Address(RVA = "0x1947F74", Offset = "0x1947F74", VA = "0x1947F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600249E")]
			[Address(RVA = "0x1947F78", Offset = "0x1947F78", VA = "0x1947F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x194802C", Offset = "0x194802C", VA = "0x194802C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF019C", Offset = "0xAF019C")]
		public bool disableWhenIdle;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF01D4", Offset = "0xAF01D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF01D4", Offset = "0xAF01D4")]
		public readonly Color touchHighlightColor;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF023C", Offset = "0xAF023C")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0274", Offset = "0xAF0274")]
		public Collider[] ignoredColliders;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF02AC", Offset = "0xAF02AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF02AC", Offset = "0xAF02AC")]
		public bool isGrabbable;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0314", Offset = "0xAF0314")]
		public bool holdButtonToGrab;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF034C", Offset = "0xAF034C")]
		public bool stayGrabbedOnTeleport;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0384", Offset = "0xAF0384")]
		public ValidDropTypes validDrop;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF03BC", Offset = "0xAF03BC")]
		public VRTK_ControllerEvents.ButtonAlias grabOverrideButton;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF03F4", Offset = "0xAF03F4")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF042C", Offset = "0xAF042C")]
		public VRTK_BaseGrabAttach grabAttachMechanicScript;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0464", Offset = "0xAF0464")]
		public VRTK_BaseGrabAction secondaryGrabActionScript;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF049C", Offset = "0xAF049C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF049C", Offset = "0xAF049C")]
		public bool isUsable;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0504", Offset = "0xAF0504")]
		public bool holdButtonToUse;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF053C", Offset = "0xAF053C")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0574", Offset = "0xAF0574")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF05AC", Offset = "0xAF05AC")]
		public VRTK_ControllerEvents.ButtonAlias useOverrideButton;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF05E4", Offset = "0xAF05E4")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool disallowTelekinesis;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public int usingState;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Rigidbody interactableRigidbody;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected List<GameObject> touchingObjects;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected List<GameObject> grabbingObjects;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected List<GameObject> hoveredSnapObjects;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_InteractUse usingObject;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Transform trackPoint;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool customTrackPoint;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform primaryControllerAttachPoint;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Transform secondaryControllerAttachPoint;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Transform previousParent;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool previousKinematicState;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		protected bool previousIsGrabbable;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		protected bool forcedDropped;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		protected bool forceDisabled;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool autoHighlighter;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		protected bool hoveredOverSnapDropZone;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		protected bool snappedInSnapDropZone;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_SnapDropZone storedSnapDropZone;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Vector3 previousLocalScale;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected List<GameObject> currentIgnoredColliders;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool startDisabled;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected Collider[] myColliders;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected List<Collider> collisionColliders;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool _grabAssigned;

		[Token(Token = "0x17000078")]
		public bool isKinematic
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x1943578", Offset = "0x1943578", VA = "0x1943578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x193C1F0", Offset = "0x193C1F0", VA = "0x193C1F0")]
			set
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x193706C", Offset = "0x193706C", VA = "0x193706C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C0C", Offset = "0xB02C0C")]
			add
			{
			}
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x19374A4", Offset = "0x19374A4", VA = "0x19374A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C1C", Offset = "0xB02C1C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x1937110", Offset = "0x1937110", VA = "0x1937110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C2C", Offset = "0xB02C2C")]
			add
			{
			}
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x1937548", Offset = "0x1937548", VA = "0x1937548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C3C", Offset = "0xB02C3C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x1942DC8", Offset = "0x1942DC8", VA = "0x1942DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C4C", Offset = "0xB02C4C")]
			add
			{
			}
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x1942E6C", Offset = "0x1942E6C", VA = "0x1942E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C5C", Offset = "0xB02C5C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x1942F10", Offset = "0x1942F10", VA = "0x1942F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C6C", Offset = "0xB02C6C")]
			add
			{
			}
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x1942FB4", Offset = "0x1942FB4", VA = "0x1942FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C7C", Offset = "0xB02C7C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x1936F24", Offset = "0x1936F24", VA = "0x1936F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C8C", Offset = "0xB02C8C")]
			add
			{
			}
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x193735C", Offset = "0x193735C", VA = "0x193735C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02C9C", Offset = "0xB02C9C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x1936FC8", Offset = "0x1936FC8", VA = "0x1936FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CAC", Offset = "0xB02CAC")]
			add
			{
			}
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x1937400", Offset = "0x1937400", VA = "0x1937400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CBC", Offset = "0xB02CBC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event InteractableObjectEventHandler InteractableObjectEnteredSnapDropZone
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x1943058", Offset = "0x1943058", VA = "0x1943058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CCC", Offset = "0xB02CCC")]
			add
			{
			}
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x19430FC", Offset = "0x19430FC", VA = "0x19430FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CDC", Offset = "0xB02CDC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event InteractableObjectEventHandler InteractableObjectExitedSnapDropZone
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x19431A0", Offset = "0x19431A0", VA = "0x19431A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CEC", Offset = "0xB02CEC")]
			add
			{
			}
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x1943244", Offset = "0x1943244", VA = "0x1943244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02CFC", Offset = "0xB02CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event InteractableObjectEventHandler InteractableObjectSnappedToDropZone
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x19432E8", Offset = "0x19432E8", VA = "0x19432E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02D0C", Offset = "0xB02D0C")]
			add
			{
			}
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x194338C", Offset = "0x194338C", VA = "0x194338C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02D1C", Offset = "0xB02D1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event InteractableObjectEventHandler InteractableObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x1943430", Offset = "0x1943430", VA = "0x1943430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02D2C", Offset = "0xB02D2C")]
			add
			{
			}
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x19434D4", Offset = "0x19434D4", VA = "0x19434D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB02D3C", Offset = "0xB02D3C")]
			remove
			{
			}
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x194365C", Offset = "0x194365C", VA = "0x194365C", Slot = "4")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x194367C", Offset = "0x194367C", VA = "0x194367C", Slot = "5")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x194369C", Offset = "0x194369C", VA = "0x194369C", Slot = "6")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x19436BC", Offset = "0x19436BC", VA = "0x19436BC", Slot = "7")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x19436DC", Offset = "0x19436DC", VA = "0x19436DC", Slot = "8")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x19436FC", Offset = "0x19436FC", VA = "0x19436FC", Slot = "9")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x194371C", Offset = "0x194371C", VA = "0x194371C", Slot = "10")]
		public virtual void OnInteractableObjectEnteredSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x194373C", Offset = "0x194373C", VA = "0x194373C", Slot = "11")]
		public virtual void OnInteractableObjectExitedSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x194375C", Offset = "0x194375C", VA = "0x194375C", Slot = "12")]
		public virtual void OnInteractableObjectSnappedToDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x194377C", Offset = "0x194377C", VA = "0x194377C", Slot = "13")]
		public virtual void OnInteractableObjectUnsnappedFromDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x194379C", Offset = "0x194379C", VA = "0x194379C")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x19437A4", Offset = "0x19437A4", VA = "0x19437A4", Slot = "14")]
		public virtual bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x19437FC", Offset = "0x19437FC", VA = "0x19437FC", Slot = "15")]
		public virtual bool IsGrabbed([Optional] GameObject grabbedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x19438D0", Offset = "0x19438D0", VA = "0x19438D0", Slot = "16")]
		public virtual bool IsUsing([Optional] GameObject usedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x19439F8", Offset = "0x19439F8", VA = "0x19439F8", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02D4C", Offset = "0xB02D4C")]
		public virtual void StartTouching(GameObject currentTouchingObject)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1943AB0", Offset = "0x1943AB0", VA = "0x1943AB0", Slot = "18")]
		public virtual void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1943BD4", Offset = "0x1943BD4", VA = "0x1943BD4", Slot = "19")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02D84", Offset = "0xB02D84")]
		public virtual void StopTouching(GameObject previousTouchingObject)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1943C8C", Offset = "0x1943C8C", VA = "0x1943C8C", Slot = "20")]
		public virtual void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1943DC8", Offset = "0x1943DC8", VA = "0x1943DC8", Slot = "21")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02DBC", Offset = "0xB02DBC")]
		public virtual void Grabbed(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1943E80", Offset = "0x1943E80", VA = "0x1943E80", Slot = "22")]
		public virtual void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1943FA0", Offset = "0x1943FA0", VA = "0x1943FA0", Slot = "23")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02DF4", Offset = "0xB02DF4")]
		public virtual void Ungrabbed(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1944058", Offset = "0x1944058", VA = "0x1944058", Slot = "24")]
		public virtual void Ungrabbed([Optional] VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x19441C4", Offset = "0x19441C4", VA = "0x19441C4", Slot = "25")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02E2C", Offset = "0xB02E2C")]
		public virtual void StartUsing(GameObject currentUsingObject)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x194427C", Offset = "0x194427C", VA = "0x194427C", Slot = "26")]
		public virtual void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1944394", Offset = "0x1944394", VA = "0x1944394", Slot = "27")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB02E64", Offset = "0xB02E64")]
		public virtual void StopUsing(GameObject previousUsingObject)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x194444C", Offset = "0x194444C", VA = "0x194444C", Slot = "28")]
		public virtual void StopUsing([Optional] VRTK_InteractUse previousUsingObject)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1944514", Offset = "0x1944514", VA = "0x1944514", Slot = "29")]
		public virtual void ToggleHighlight(bool toggle)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x19447BC", Offset = "0x19447BC", VA = "0x19447BC", Slot = "30")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1944850", Offset = "0x1944850", VA = "0x1944850", Slot = "31")]
		public virtual void PauseCollisions(float delay)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1944944", Offset = "0x1944944", VA = "0x1944944", Slot = "32")]
		public virtual void ZeroVelocity()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1944ACC", Offset = "0x1944ACC", VA = "0x1944ACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02E9C", Offset = "0xB02E9C")]
		private IEnumerator FrameKinematic()
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1944B68", Offset = "0x1944B68", VA = "0x1944B68", Slot = "33")]
		public virtual void SaveCurrentState()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1944C58", Offset = "0x1944C58", VA = "0x1944C58", Slot = "34")]
		public virtual List<GameObject> GetTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1944C60", Offset = "0x1944C60", VA = "0x1944C60", Slot = "35")]
		public virtual GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1944CE8", Offset = "0x1944CE8", VA = "0x1944CE8", Slot = "36")]
		public virtual GameObject GetSecondaryGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1944D50", Offset = "0x1944D50", VA = "0x1944D50", Slot = "37")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1944DE4", Offset = "0x1944DE4", VA = "0x1944DE4", Slot = "38")]
		public virtual VRTK_InteractUse GetUsingScript()
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1944DEC", Offset = "0x1944DEC", VA = "0x1944DEC", Slot = "39")]
		public virtual bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1944EF8", Offset = "0x1944EF8", VA = "0x1944EF8", Slot = "40")]
		public virtual void ForceStopInteracting()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1944F94", Offset = "0x1944F94", VA = "0x1944F94", Slot = "41")]
		public virtual void ForceStopSecondaryGrabInteraction()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x194505C", Offset = "0x194505C", VA = "0x194505C", Slot = "42")]
		public virtual void RegisterTeleporters()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1945094", Offset = "0x1945094", VA = "0x1945094", Slot = "43")]
		public virtual void UnregisterTeleporters()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1945230", Offset = "0x1945230", VA = "0x1945230", Slot = "44")]
		public virtual void StoreLocalScale()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1945270", Offset = "0x1945270", VA = "0x1945270", Slot = "45")]
		public virtual void ToggleSnapDropZone(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1945308", Offset = "0x1945308", VA = "0x1945308", Slot = "46")]
		public virtual bool IsInSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1945310", Offset = "0x1945310", VA = "0x1945310", Slot = "47")]
		public virtual void SetSnapDropZoneHover(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1945448", Offset = "0x1945448", VA = "0x1945448", Slot = "48")]
		public virtual VRTK_SnapDropZone GetStoredSnapDropZone()
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1945450", Offset = "0x1945450", VA = "0x1945450", Slot = "49")]
		public virtual bool IsDroppable()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1945484", Offset = "0x1945484", VA = "0x1945484", Slot = "50")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1945520", Offset = "0x1945520", VA = "0x1945520", Slot = "51")]
		public virtual bool PerformSecondaryAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1945658", Offset = "0x1945658", VA = "0x1945658", Slot = "52")]
		public virtual void ResetIgnoredColliders()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1945810", Offset = "0x1945810", VA = "0x1945810", Slot = "53")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x19459C8", Offset = "0x19459C8", VA = "0x19459C8")]
		public Vector3 GetClosestPoint(Vector3 fromPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1945C04", Offset = "0x1945C04", VA = "0x1945C04", Slot = "54")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1944678", Offset = "0x1944678", VA = "0x1944678")]
		private void SetGrabButton()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1945C5C", Offset = "0x1945C5C", VA = "0x1945C5C", Slot = "55")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1945CBC", Offset = "0x1945CBC", VA = "0x1945CBC", Slot = "56")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1945DD8", Offset = "0x1945DD8", VA = "0x1945DD8", Slot = "57")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1945F08", Offset = "0x1945F08", VA = "0x1945F08", Slot = "58")]
		protected virtual bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1945F7C", Offset = "0x1945F7C", VA = "0x1945F7C", Slot = "59")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1946064", Offset = "0x1946064", VA = "0x1946064", Slot = "60")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x19461E0", Offset = "0x19461E0", VA = "0x19461E0", Slot = "61")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1946354", Offset = "0x1946354", VA = "0x1946354", Slot = "62")]
		protected virtual void IgnoreColliders(GameObject touchingObject)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1946554", Offset = "0x1946554", VA = "0x1946554", Slot = "63")]
		protected virtual void ToggleEnableState(bool state)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x19465AC", Offset = "0x19465AC", VA = "0x19465AC", Slot = "64")]
		protected virtual void AttemptSetGrabMechanic()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x19466A4", Offset = "0x19466A4", VA = "0x19466A4", Slot = "65")]
		protected virtual void AttemptSetSecondaryGrabAction()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x194673C", Offset = "0x194673C", VA = "0x194673C", Slot = "66")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1946804", Offset = "0x1946804", VA = "0x1946804", Slot = "67")]
		protected virtual void PrimaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x19468F8", Offset = "0x19468F8", VA = "0x19468F8", Slot = "68")]
		protected virtual void SecondaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1946A88", Offset = "0x1946A88", VA = "0x1946A88", Slot = "69")]
		protected virtual void PrimaryControllerUngrab(GameObject previousGrabbingObject, GameObject previousSecondaryGrabbingObject)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1946BE8", Offset = "0x1946BE8", VA = "0x1946BE8", Slot = "70")]
		protected virtual void SecondaryControllerUngrab(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1946CF0", Offset = "0x1946CF0", VA = "0x1946CF0", Slot = "71")]
		protected virtual void UnpauseCollisions()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1946D9C", Offset = "0x1946D9C", VA = "0x1946D9C", Slot = "72")]
		protected virtual void SetTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1946EC4", Offset = "0x1946EC4", VA = "0x1946EC4", Slot = "73")]
		protected virtual Transform CreateAttachPoint(string namePrefix, string nameSuffix, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x19470B0", Offset = "0x19470B0", VA = "0x19470B0", Slot = "74")]
		protected virtual void AddTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1947214", Offset = "0x1947214", VA = "0x1947214", Slot = "75")]
		protected virtual void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1947364", Offset = "0x1947364", VA = "0x1947364", Slot = "76")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x19473AC", Offset = "0x19473AC", VA = "0x19473AC", Slot = "77")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1947554", Offset = "0x1947554", VA = "0x1947554", Slot = "78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02F00", Offset = "0xB02F00")]
		protected virtual IEnumerator RegisterTeleportersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x19475F0", Offset = "0x19475F0", VA = "0x19475F0", Slot = "79")]
		protected virtual void ResetUseState(GameObject checkObject)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x19476E8", Offset = "0x19476E8", VA = "0x19476E8", Slot = "80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02F64", Offset = "0xB02F64")]
		protected virtual IEnumerator ForceStopInteractingAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1947784", Offset = "0x1947784", VA = "0x1947784", Slot = "81")]
		protected virtual void ForceStopAllInteractions()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x19477E0", Offset = "0x19477E0", VA = "0x19477E0", Slot = "82")]
		protected virtual void StopTouchingInteractions()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x19478B0", Offset = "0x19478B0", VA = "0x19478B0", Slot = "83")]
		protected virtual void StopGrabbingInteractions()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x19479B8", Offset = "0x19479B8", VA = "0x19479B8", Slot = "84")]
		protected virtual void StopUsingInteractions()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1947AB8", Offset = "0x1947AB8", VA = "0x1947AB8", Slot = "85")]
		protected virtual void ResetDropSnapType()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1947C30", Offset = "0x1947C30", VA = "0x1947C30", Slot = "86")]
		protected virtual void ResetUsingObject()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1947D24", Offset = "0x1947D24", VA = "0x1947D24")]
		public void ToggleColliderToTrigger(bool value)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1947E30", Offset = "0x1947E30", VA = "0x1947E30")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class VRTK_ObjectAppearance : MonoBehaviour
	{
		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE650C", Offset = "0xAE650C")]
		private sealed class <TransitionRendererOpacity>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAlpha;

			[Token(Token = "0x40029C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAlpha;

			[Token(Token = "0x40029C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionDuration;

			[Token(Token = "0x40029C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_ObjectAppearance <>4__this;

			[Token(Token = "0x40029C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject model;

			[Token(Token = "0x40029C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024A5")]
				[Address(RVA = "0x134E8C4", Offset = "0x134E8C4", VA = "0x134E8C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024A7")]
				[Address(RVA = "0x134E92C", Offset = "0x134E92C", VA = "0x134E92C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x134E63C", Offset = "0x134E63C", VA = "0x134E63C")]
			[DebuggerHidden]
			public <TransitionRendererOpacity>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x134E798", Offset = "0x134E798", VA = "0x134E798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x134E79C", Offset = "0x134E79C", VA = "0x134E79C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x134E8CC", Offset = "0x134E8CC", VA = "0x134E8CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ObjectAppearance instance;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<GameObject, Coroutine> setOpacityCoroutines;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x134D124", Offset = "0x134D124", VA = "0x134D124")]
		public static void SetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x134D33C", Offset = "0x134D33C", VA = "0x134D33C")]
		public static void SetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x134D408", Offset = "0x134D408", VA = "0x134D408")]
		public static void SetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x134D4D4", Offset = "0x134D4D4", VA = "0x134D4D4")]
		public static void ToggleRenderer(bool state, GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x134D4F0", Offset = "0x134D4F0", VA = "0x134D4F0")]
		public static void HighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x134D5EC", Offset = "0x134D5EC", VA = "0x134D5EC")]
		public static void UnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x134D6B0", Offset = "0x134D6B0", VA = "0x134D6B0", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x134D204", Offset = "0x134D204", VA = "0x134D204")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x134D7B0", Offset = "0x134D7B0", VA = "0x134D7B0", Slot = "5")]
		protected virtual void InternalSetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x134D934", Offset = "0x134D934", VA = "0x134D934", Slot = "6")]
		protected virtual void InternalSetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x134DAF8", Offset = "0x134DAF8", VA = "0x134DAF8", Slot = "7")]
		protected virtual void InternalSetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x134DCBC", Offset = "0x134DCBC", VA = "0x134DCBC", Slot = "8")]
		protected virtual void InternalHighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x134DE00", Offset = "0x134DE00", VA = "0x134DE00", Slot = "9")]
		protected virtual void InternalUnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x134DEE4", Offset = "0x134DEE4", VA = "0x134DEE4", Slot = "10")]
		protected virtual void EmitControllerEvents(GameObject model, bool state)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x134E100", Offset = "0x134E100", VA = "0x134E100", Slot = "11")]
		protected virtual void ChangeRendererOpacity(GameObject model, float alpha)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x134E4F0", Offset = "0x134E4F0", VA = "0x134E4F0", Slot = "12")]
		protected virtual float GetInitialAlpha(GameObject model)
		{
			return default(float);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x134E59C", Offset = "0x134E59C", VA = "0x134E59C", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB02FC8", Offset = "0xB02FC8")]
		protected virtual IEnumerator TransitionRendererOpacity(GameObject model, float initialAlpha, float targetAlpha, float transitionDuration)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x134E668", Offset = "0x134E668", VA = "0x134E668", Slot = "14")]
		protected virtual void CancelSetOpacityCoroutine(GameObject model)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x134E728", Offset = "0x134E728", VA = "0x134E728")]
		public VRTK_ObjectAppearance()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public delegate void ObjectAutoGrabEventHandler(object sender);
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3AAC", Offset = "0xAE3AAC")]
	public class VRTK_ObjectAutoGrab : MonoBehaviour
	{
		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE651C", Offset = "0xAE651C")]
		private sealed class <AutoGrab>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ObjectAutoGrab <>4__this;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024AB")]
				[Address(RVA = "0x134F294", Offset = "0x134F294", VA = "0x134F294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024AD")]
				[Address(RVA = "0x134F2FC", Offset = "0x134F2FC", VA = "0x134F2FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x134EB54", Offset = "0x134EB54", VA = "0x134EB54")]
			[DebuggerHidden]
			public <AutoGrab>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x134EB88", Offset = "0x134EB88", VA = "0x134EB88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x134EB8C", Offset = "0x134EB8C", VA = "0x134EB8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x134F29C", Offset = "0x134F29C", VA = "0x134F29C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF06CC", Offset = "0xAF06CC")]
		public VRTK_InteractableObject objectToGrab;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0704", Offset = "0xAF0704")]
		public bool objectIsPrefab;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF073C", Offset = "0xAF073C")]
		public bool cloneGrabbedObject;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0774", Offset = "0xAF0774")]
		public bool alwaysCloneOnEnable;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF07AC", Offset = "0xAF07AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF07AC", Offset = "0xAF07AC")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF080C", Offset = "0xAF080C")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_InteractableObject previousClonedObject;

		[Token(Token = "0x14000095")]
		public event ObjectAutoGrabEventHandler ObjectAutoGrabCompleted
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x134E934", Offset = "0x134E934", VA = "0x134E934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0402C", Offset = "0xB0402C")]
			add
			{
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x134E9D8", Offset = "0x134E9D8", VA = "0x134E9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0403C", Offset = "0xB0403C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x134EA7C", Offset = "0x134EA7C", VA = "0x134EA7C", Slot = "4")]
		public virtual void OnObjectAutoGrabCompleted()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x134EA94", Offset = "0x134EA94", VA = "0x134EA94", Slot = "5")]
		public virtual void ClearPreviousClone()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x134EA9C", Offset = "0x134EA9C", VA = "0x134EA9C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x134EAE4", Offset = "0x134EAE4", VA = "0x134EAE4", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0404C", Offset = "0xB0404C")]
		protected virtual IEnumerator AutoGrab()
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x134EB80", Offset = "0x134EB80", VA = "0x134EB80")]
		public VRTK_ObjectAutoGrab()
		{
		}
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3AE4", Offset = "0xAE3AE4")]
	public class VRTK_ObjectTouchAutoInteract : MonoBehaviour
	{
		[Token(Token = "0x20005A4")]
		public enum AutoInteractions
		{
			[Token(Token = "0x40029C9")]
			Never,
			[Token(Token = "0x40029CA")]
			NoButtonHeld,
			[Token(Token = "0x40029CB")]
			ButtonHeld
		}

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0854", Offset = "0xAF0854")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0854", Offset = "0xAF0854")]
		public AutoInteractions grabOnTouchWhen;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF08B4", Offset = "0xAF08B4")]
		public float regrabDelay;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF08EC", Offset = "0xAF08EC")]
		public bool continuousGrabCheck;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0924", Offset = "0xAF0924")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0924", Offset = "0xAF0924")]
		public AutoInteractions useOnTouchWhen;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0984", Offset = "0xAF0984")]
		public float reuseDelay;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF09BC", Offset = "0xAF09BC")]
		public bool continuousUseCheck;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF09F4", Offset = "0xAF09F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF09F4", Offset = "0xAF09F4")]
		public VRTK_InteractableObject interactableObject;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float regrabTimer;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float reuseTimer;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<GameObject> touchers;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x13513E0", Offset = "0x13513E0", VA = "0x13513E0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x13515D4", Offset = "0x13515D4", VA = "0x13515D4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x135174C", Offset = "0x135174C", VA = "0x135174C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x135187C", Offset = "0x135187C", VA = "0x135187C", Slot = "7")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x13518D8", Offset = "0x13518D8", VA = "0x13518D8", Slot = "8")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x13518EC", Offset = "0x13518EC", VA = "0x13518EC", Slot = "9")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1351924", Offset = "0x1351924", VA = "0x1351924", Slot = "10")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x135195C", Offset = "0x135195C", VA = "0x135195C", Slot = "11")]
		protected virtual void ManageTouchers(GameObject interactingObject, bool add)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1351A40", Offset = "0x1351A40", VA = "0x1351A40", Slot = "12")]
		protected virtual void CheckGrab(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1351B58", Offset = "0x1351B58", VA = "0x1351B58", Slot = "13")]
		protected virtual void CheckUse(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1351CB4", Offset = "0x1351CB4", VA = "0x1351CB4")]
		public VRTK_ObjectTouchAutoInteract()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public struct CollisionTrackerEventArgs
	{
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isTrigger;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider collider;
	}
	[Token(Token = "0x2000217")]
	public delegate void CollisionTrackerEventHandler(object sender, CollisionTrackerEventArgs e);
	[Token(Token = "0x2000218")]
	public class VRTK_CollisionTracker : MonoBehaviour
	{
		[Token(Token = "0x14000096")]
		public event CollisionTrackerEventHandler CollisionEnter
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x168810C", Offset = "0x168810C", VA = "0x168810C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB040B0", Offset = "0xB040B0")]
			add
			{
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x168839C", Offset = "0x168839C", VA = "0x168839C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB040C0", Offset = "0xB040C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event CollisionTrackerEventHandler CollisionStay
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x1690F3C", Offset = "0x1690F3C", VA = "0x1690F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB040D0", Offset = "0xB040D0")]
			add
			{
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1690FE0", Offset = "0x1690FE0", VA = "0x1690FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB040E0", Offset = "0xB040E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event CollisionTrackerEventHandler CollisionExit
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x16881B0", Offset = "0x16881B0", VA = "0x16881B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB040F0", Offset = "0xB040F0")]
			add
			{
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1688440", Offset = "0x1688440", VA = "0x1688440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04100", Offset = "0xB04100")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event CollisionTrackerEventHandler TriggerEnter
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x1688254", Offset = "0x1688254", VA = "0x1688254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04110", Offset = "0xB04110")]
			add
			{
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x16884E4", Offset = "0x16884E4", VA = "0x16884E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04120", Offset = "0xB04120")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public event CollisionTrackerEventHandler TriggerStay
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x1691084", Offset = "0x1691084", VA = "0x1691084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04130", Offset = "0xB04130")]
			add
			{
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x1691128", Offset = "0x1691128", VA = "0x1691128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04140", Offset = "0xB04140")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event CollisionTrackerEventHandler TriggerExit
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x16882F8", Offset = "0x16882F8", VA = "0x16882F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04150", Offset = "0xB04150")]
			add
			{
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x1688588", Offset = "0x1688588", VA = "0x1688588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04160", Offset = "0xB04160")]
			remove
			{
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x16911CC", Offset = "0x16911CC", VA = "0x16911CC")]
		protected void OnCollisionEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1691210", Offset = "0x1691210", VA = "0x1691210")]
		protected void OnCollisionStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1691254", Offset = "0x1691254", VA = "0x1691254")]
		protected void OnCollisionExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1691298", Offset = "0x1691298", VA = "0x1691298")]
		protected void OnTriggerEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x16912DC", Offset = "0x16912DC", VA = "0x16912DC")]
		protected void OnTriggerStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1691320", Offset = "0x1691320", VA = "0x1691320")]
		protected void OnTriggerExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1691364", Offset = "0x1691364", VA = "0x1691364", Slot = "4")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x16913F8", Offset = "0x16913F8", VA = "0x16913F8", Slot = "5")]
		protected virtual void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x169148C", Offset = "0x169148C", VA = "0x169148C", Slot = "6")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1691520", Offset = "0x1691520", VA = "0x1691520", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1691598", Offset = "0x1691598", VA = "0x1691598", Slot = "8")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1691610", Offset = "0x1691610", VA = "0x1691610", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1691688", Offset = "0x1691688", VA = "0x1691688", Slot = "10")]
		protected virtual CollisionTrackerEventArgs SetCollisionTrackerEvent(bool isTrigger, Collision givenCollision, Collider givenCollider)
		{
			return default(CollisionTrackerEventArgs);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x16916A4", Offset = "0x16916A4", VA = "0x16916A4")]
		public VRTK_CollisionTracker()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class VRTK_ControllerReference : IEquatable<VRTK_ControllerReference>
	{
		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<uint, VRTK_ControllerReference> controllerReferences;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected uint storedControllerIndex;

		[Token(Token = "0x17000079")]
		public uint index
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x14A1118", Offset = "0x14A1118", VA = "0x14A1118")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700007A")]
		public GameObject scriptAlias
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x14A1120", Offset = "0x14A1120", VA = "0x14A1120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public GameObject actual
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x14A1190", Offset = "0x14A1190", VA = "0x14A1190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public GameObject model
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x14A1200", Offset = "0x14A1200", VA = "0x14A1200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public SDK_BaseController.ControllerHand hand
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x149E20C", Offset = "0x149E20C", VA = "0x149E20C")]
			get
			{
				return default(SDK_BaseController.ControllerHand);
			}
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x14A0794", Offset = "0x14A0794", VA = "0x14A0794")]
		public static VRTK_ControllerReference GetControllerReference(uint controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x14A097C", Offset = "0x14A097C", VA = "0x14A097C")]
		public static VRTK_ControllerReference GetControllerReference(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x14A0CBC", Offset = "0x14A0CBC", VA = "0x14A0CBC")]
		public static VRTK_ControllerReference GetControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x14A0E70", Offset = "0x14A0E70", VA = "0x14A0E70")]
		public static bool IsValid(VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x14A0E94", Offset = "0x14A0E94", VA = "0x14A0E94")]
		public static uint GetRealIndex(VRTK_ControllerReference controllerReference)
		{
			return default(uint);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x14A0890", Offset = "0x14A0890", VA = "0x14A0890")]
		public VRTK_ControllerReference(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x14A0DF4", Offset = "0x14A0DF4", VA = "0x14A0DF4")]
		public VRTK_ControllerReference(GameObject controllerObject)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x14A104C", Offset = "0x14A104C", VA = "0x14A104C")]
		public VRTK_ControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x14A0E84", Offset = "0x14A0E84", VA = "0x14A0E84")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x14A1280", Offset = "0x14A1280", VA = "0x14A1280", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x14A15AC", Offset = "0x14A15AC", VA = "0x14A15AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x14A15B4", Offset = "0x14A15B4", VA = "0x14A15B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x14A1668", Offset = "0x14A1668", VA = "0x14A1668", Slot = "4")]
		public bool Equals(VRTK_ControllerReference other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x14A16AC", Offset = "0x14A16AC", VA = "0x14A16AC", Slot = "5")]
		protected virtual GameObject GetValidObjectFromIndex()
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x14A17A0", Offset = "0x14A17A0", VA = "0x14A17A0", Slot = "6")]
		protected virtual void AddToCache()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x14A0B08", Offset = "0x14A0B08", VA = "0x14A0B08")]
		private static GameObject GetValidObjectFromHand(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x14A0F08", Offset = "0x14A0F08", VA = "0x14A0F08")]
		private static SDK_BaseController.ControllerHand GetControllerHand(GameObject controllerObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}
	}
	[Token(Token = "0x200021A")]
	public static class Bezier
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xFC526C", Offset = "0xFC526C", VA = "0xFC526C")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xFC53F8", Offset = "0xFC53F8", VA = "0xFC53F8")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xFC5554", Offset = "0xFC5554", VA = "0xFC5554")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xFC574C", Offset = "0xFC574C", VA = "0xFC574C")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200021B")]
	public class VRTK_CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x20005A5")]
		public enum BezierControlPointMode
		{
			[Token(Token = "0x40029CD")]
			Free,
			[Token(Token = "0x40029CE")]
			Aligned,
			[Token(Token = "0x40029CF")]
			Mirrored
		}

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector3[] points;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject[] items;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected BezierControlPointMode[] modes;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loop;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int frequency;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool customTracer;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool rescalePointerTracer;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject tracerLineRenderer;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected LineRenderer customLineRenderer;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool lineRendererAndItem;

		[Token(Token = "0x1700007E")]
		protected virtual bool Loop
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x14A429C", Offset = "0x14A429C", VA = "0x14A429C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x14A42A4", Offset = "0x14A42A4", VA = "0x14A42A4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		protected virtual int ControlPointCount
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x14A4324", Offset = "0x14A4324", VA = "0x14A4324", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000080")]
		protected virtual int CurveCount
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x14A4B44", Offset = "0x14A4B44", VA = "0x14A4B44", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x14A3880", Offset = "0x14A3880", VA = "0x14A3880", Slot = "4")]
		public virtual void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x14A3E60", Offset = "0x14A3E60", VA = "0x14A3E60", Slot = "5")]
		public virtual void SetPoints(Vector3[] controlPoints, Material material, Color color)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x14A3ED0", Offset = "0x14A3ED0", VA = "0x14A3ED0", Slot = "6")]
		public virtual Vector3[] GetPoints(Vector3[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x14A3FF8", Offset = "0x14A3FF8", VA = "0x14A3FF8", Slot = "7")]
		public virtual void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x14A40BC", Offset = "0x14A40BC", VA = "0x14A40BC", Slot = "8")]
		protected virtual void PointsInit(Vector3[] controlPoints)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x14A4124", Offset = "0x14A4124", VA = "0x14A4124", Slot = "9")]
		protected virtual GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x14A4340", Offset = "0x14A4340", VA = "0x14A4340", Slot = "13")]
		protected virtual Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x14A4388", Offset = "0x14A4388", VA = "0x14A4388", Slot = "14")]
		protected virtual void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x14A4850", Offset = "0x14A4850", VA = "0x14A4850", Slot = "15")]
		protected virtual void EnforceMode(int index)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x14A4B7C", Offset = "0x14A4B7C", VA = "0x14A4B7C", Slot = "17")]
		protected virtual Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x14A4D34", Offset = "0x14A4D34", VA = "0x14A4D34", Slot = "18")]
		protected virtual void SetObjects(Material material, Color color)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x14A4DE0", Offset = "0x14A4DE0", VA = "0x14A4DE0", Slot = "19")]
		protected virtual void SetPointData(Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x14A4FB8", Offset = "0x14A4FB8", VA = "0x14A4FB8", Slot = "20")]
		protected virtual void SetItemPosition(int currentIndex, Vector3 setPosition, Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x14A529C", Offset = "0x14A529C", VA = "0x14A529C", Slot = "21")]
		protected virtual void SetItemMaterial(GameObject item, Material material, Color color)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x14A5400", Offset = "0x14A5400", VA = "0x14A5400", Slot = "22")]
		protected virtual void SetMaterial(Material material, Color color)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x14A5548", Offset = "0x14A5548", VA = "0x14A5548")]
		public VRTK_CurveGenerator()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public static class VRTK_Defines
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version CurrentVersion;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Version[] PreviousVersions;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF0AB4", Offset = "0xAF0AB4")]
		private static string <CurrentExactVersionScriptingDefineSymbol>k__BackingField;

		[Token(Token = "0x4000F71")]
		public const string VersionScriptingDefineSymbolPrefix = "VRTK_VERSION_";

		[Token(Token = "0x4000F72")]
		public const string VersionScriptingDefineSymbolSuffix = "_OR_NEWER";

		[Token(Token = "0x17000081")]
		public static string CurrentExactVersionScriptingDefineSymbol
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x14A67EC", Offset = "0x14A67EC", VA = "0x14A67EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04170", Offset = "0xB04170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x14A6854", Offset = "0x14A6854", VA = "0x14A6854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04180", Offset = "0xB04180")]
			private set
			{
			}
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x14A68C0", Offset = "0x14A68C0", VA = "0x14A68C0")]
		static VRTK_Defines()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x14A6A6C", Offset = "0x14A6A6C", VA = "0x14A6A6C")]
		private static string ExactVersionSymbol(Version version)
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x14A6B0C", Offset = "0x14A6B0C", VA = "0x14A6B0C")]
		private static string AtLeastVersionSymbol(Version version)
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	public class VRTK_EventSystem : EventSystem
	{
		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE652C", Offset = "0xAE652C")]
		private sealed class <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSystem eventSystem;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024B1")]
				[Address(RVA = "0x14AEF44", Offset = "0x14AEF44", VA = "0x14AEF44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024B3")]
				[Address(RVA = "0x14AEFAC", Offset = "0x14AEFAC", VA = "0x14AEFAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x14AEC40", Offset = "0x14AEC40", VA = "0x14AEC40")]
			[DebuggerHidden]
			public <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x14AEEA8", Offset = "0x14AEEA8", VA = "0x14AEEA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x14AEEAC", Offset = "0x14AEEAC", VA = "0x14AEEAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x14AEF4C", Offset = "0x14AEF4C", VA = "0x14AEF4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected EventSystem previousEventSystem;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_VRInputModule vrInputModule;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FieldInfo[] EVENT_SYSTEM_FIELD_INFOS;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly PropertyInfo[] EVENT_SYSTEM_PROPERTY_INFOS;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly FieldInfo BASE_INPUT_MODULE_EVENT_SYSTEM_FIELD_INFO;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x14AE604", Offset = "0x14AE604", VA = "0x14AE604", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x14AE968", Offset = "0x14AE968", VA = "0x14AE968", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x14AEB68", Offset = "0x14AEB68", VA = "0x14AEB68", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x14AEC3C", Offset = "0x14AEC3C", VA = "0x14AEC3C", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x14AE754", Offset = "0x14AE754", VA = "0x14AE754")]
		private static void CopyValuesFrom(EventSystem fromEventSystem, EventSystem toEventSystem)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x14AE8F8", Offset = "0x14AE8F8", VA = "0x14AE8F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04190", Offset = "0xB04190")]
		private static IEnumerator SetEventSystemOfBaseInputModulesAfterFrameDelay(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x14AEA50", Offset = "0x14AEA50", VA = "0x14AEA50")]
		private static void SetEventSystemOfBaseInputModules(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x14AEC6C", Offset = "0x14AEC6C", VA = "0x14AEC6C")]
		public VRTK_EventSystem()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class VRTK_Logger : MonoBehaviour
	{
		[Token(Token = "0x20005A7")]
		public enum LogLevels
		{
			[Token(Token = "0x40029D4")]
			Trace,
			[Token(Token = "0x40029D5")]
			Debug,
			[Token(Token = "0x40029D6")]
			Info,
			[Token(Token = "0x40029D7")]
			Warn,
			[Token(Token = "0x40029D8")]
			Error,
			[Token(Token = "0x40029D9")]
			Fatal,
			[Token(Token = "0x40029DA")]
			None
		}

		[Token(Token = "0x20005A8")]
		public enum CommonMessageKeys
		{
			[Token(Token = "0x40029DC")]
			NOT_DEFINED,
			[Token(Token = "0x40029DD")]
			REQUIRED_COMPONENT_MISSING_FROM_SCENE,
			[Token(Token = "0x40029DE")]
			REQUIRED_COMPONENT_MISSING_FROM_GAMEOBJECT,
			[Token(Token = "0x40029DF")]
			REQUIRED_COMPONENT_MISSING_FROM_PARAMETER,
			[Token(Token = "0x40029E0")]
			REQUIRED_COMPONENT_MISSING_NOT_INJECTED,
			[Token(Token = "0x40029E1")]
			COULD_NOT_FIND_OBJECT_FOR_ACTION,
			[Token(Token = "0x40029E2")]
			SDK_OBJECT_NOT_FOUND,
			[Token(Token = "0x40029E3")]
			SDK_NOT_FOUND,
			[Token(Token = "0x40029E4")]
			SDK_MANAGER_ERRORS,
			[Token(Token = "0x40029E5")]
			SCRIPTING_DEFINE_SYMBOLS_ADDED,
			[Token(Token = "0x40029E6")]
			SCRIPTING_DEFINE_SYMBOLS_REMOVED
		}

		[Serializable]
		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE653C", Offset = "0xAE653C")]
		private sealed class <>c
		{
			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Match, int> <>9__7_0;

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x134AEE0", Offset = "0x134AEE0", VA = "0x134AEE0")]
			public <>c()
			{
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x134AEE8", Offset = "0x134AEE8", VA = "0x134AEE8")]
			internal int <CreateIfNotExists>b__7_0(Match m)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_Logger instance;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<CommonMessageKeys, string> commonMessages;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<CommonMessageKeys, int> commonMessageParts;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogLevels minLevel;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool throwExceptions;

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x134A0F0", Offset = "0x134A0F0", VA = "0x134A0F0")]
		public static void CreateIfNotExists()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x134A580", Offset = "0x134A580", VA = "0x134A580")]
		public static string GetCommonMessage(CommonMessageKeys messageKey, params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x134A71C", Offset = "0x134A71C", VA = "0x134A71C")]
		public static void Trace(string message)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x134A938", Offset = "0x134A938", VA = "0x134A938")]
		public static void Debug(string message)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x134A9A0", Offset = "0x134A9A0", VA = "0x134A9A0")]
		public static void Info(string message)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x134AA08", Offset = "0x134AA08", VA = "0x134AA08")]
		public static void Warn(string message)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x134AA70", Offset = "0x134AA70", VA = "0x134AA70")]
		public static void Error(string message)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x134AAD8", Offset = "0x134AAD8", VA = "0x134AAD8")]
		public static void Fatal(string message)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x134AB40", Offset = "0x134AB40", VA = "0x134AB40")]
		public static void Fatal(Exception exception)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x134A784", Offset = "0x134A784", VA = "0x134A784")]
		public static void Log(LogLevels level, string message)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x134ABC8", Offset = "0x134ABC8", VA = "0x134ABC8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x134AC70", Offset = "0x134AC70", VA = "0x134AC70")]
		public VRTK_Logger()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public static class VRTK_ObjectCache
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_BasicTeleport> registeredTeleporters;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<VRTK_DestinationMarker> registeredDestinationMarkers;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static VRTK_HeadsetCollision registeredHeadsetCollider;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static VRTK_HeadsetControllerAware registeredHeadsetControllerAwareness;
	}
	[Token(Token = "0x2000220")]
	public sealed class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x20005AA")]
		public enum ObjectTypes
		{
			[Token(Token = "0x40029EA")]
			Null,
			[Token(Token = "0x40029EB")]
			CameraRig,
			[Token(Token = "0x40029EC")]
			Headset,
			[Token(Token = "0x40029ED")]
			Controller,
			[Token(Token = "0x40029EE")]
			Pointer,
			[Token(Token = "0x40029EF")]
			Highlighter,
			[Token(Token = "0x40029F0")]
			Collider
		}

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1355A60", Offset = "0x1355A60", VA = "0x1355A60")]
		public static void SetPlayerObject(GameObject obj, ObjectTypes objType)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1354CF4", Offset = "0x1354CF4", VA = "0x1354CF4")]
		public static bool IsPlayerObject(GameObject obj, ObjectTypes ofType = ObjectTypes.Null)
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1359370", Offset = "0x1359370", VA = "0x1359370")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x2000221")]
	[ExecuteInEditMode]
	public class VRTK_RoomExtender_PlayAreaGizmo : MonoBehaviour
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireframeHeight;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawWireframeWhenSelectedOnly;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playArea;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x127ECA0", Offset = "0x127ECA0", VA = "0x127ECA0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x127ED10", Offset = "0x127ED10", VA = "0x127ED10", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x127EF08", Offset = "0x127EF08", VA = "0x127EF08", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x127EF78", Offset = "0x127EF78", VA = "0x127EF78", Slot = "7")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x127EF90", Offset = "0x127EF90", VA = "0x127EF90", Slot = "8")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x127EFA8", Offset = "0x127EFA8", VA = "0x127EFA8", Slot = "9")]
		protected virtual void DrawWireframe()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x127F824", Offset = "0x127F824", VA = "0x127F824")]
		public VRTK_RoomExtender_PlayAreaGizmo()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class VRTK_ScreenFade : MonoBehaviour
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_ScreenFade> instances;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material fadeMaterial;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Color currentColor;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Color targetColor;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Color deltaColor;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static float previousDuration;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x128C444", Offset = "0x128C444", VA = "0x128C444")]
		public static void Start(Color newColor, float duration)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x128C688", Offset = "0x128C688", VA = "0x128C688", Slot = "4")]
		public virtual void StartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x128C6F0", Offset = "0x128C6F0", VA = "0x128C6F0", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x128C7BC", Offset = "0x128C7BC", VA = "0x128C7BC", Slot = "6")]
		protected virtual void OnPostRender()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x128CA84", Offset = "0x128CA84", VA = "0x128CA84")]
		public VRTK_ScreenFade()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public struct VRTKTrackedControllerEventArgs
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint currentIndex;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint previousIndex;
	}
	[Token(Token = "0x2000224")]
	public delegate void VRTKTrackedControllerEventHandler(object sender, VRTKTrackedControllerEventArgs e);
	[Token(Token = "0x2000225")]
	public class VRTK_TrackedController : MonoBehaviour
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint index;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected GameObject aliasController;

		[Token(Token = "0x1400009C")]
		public event VRTKTrackedControllerEventHandler ControllerEnabled
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xDEAE80", Offset = "0xDEAE80", VA = "0xDEAE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB041F4", Offset = "0xB041F4")]
			add
			{
			}
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xDEAF24", Offset = "0xDEAF24", VA = "0xDEAF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04204", Offset = "0xB04204")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event VRTKTrackedControllerEventHandler ControllerDisabled
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xDEAFC8", Offset = "0xDEAFC8", VA = "0xDEAFC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04214", Offset = "0xB04214")]
			add
			{
			}
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xDEB06C", Offset = "0xDEB06C", VA = "0xDEB06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04224", Offset = "0xB04224")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public event VRTKTrackedControllerEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xDEB110", Offset = "0xDEB110", VA = "0xDEB110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04234", Offset = "0xB04234")]
			add
			{
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xDEB1B4", Offset = "0xDEB1B4", VA = "0xDEB1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04244", Offset = "0xB04244")]
			remove
			{
			}
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xDEB258", Offset = "0xDEB258", VA = "0xDEB258", Slot = "4")]
		public virtual void OnControllerEnabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xDEB278", Offset = "0xDEB278", VA = "0xDEB278", Slot = "5")]
		public virtual void OnControllerDisabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xDEB298", Offset = "0xDEB298", VA = "0xDEB298", Slot = "6")]
		public virtual void OnControllerIndexChanged(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xDEB2B8", Offset = "0xDEB2B8", VA = "0xDEB2B8", Slot = "7")]
		protected virtual VRTKTrackedControllerEventArgs SetEventPayload(uint previousIndex = uint.MaxValue)
		{
			return default(VRTKTrackedControllerEventArgs);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xDEB2C4", Offset = "0xDEB2C4", VA = "0xDEB2C4", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xDEB33C", Offset = "0xDEB33C", VA = "0xDEB33C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xDEB470", Offset = "0xDEB470", VA = "0xDEB470", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xDEB4AC", Offset = "0xDEB4AC", VA = "0xDEB4AC", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xDEB524", Offset = "0xDEB524", VA = "0xDEB524", Slot = "12")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xDEB5C8", Offset = "0xDEB5C8", VA = "0xDEB5C8", Slot = "13")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xDEB770", Offset = "0xDEB770", VA = "0xDEB770")]
		public VRTK_TrackedController()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class VRTK_TrackedHeadset : MonoBehaviour
	{
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xDEB780", Offset = "0xDEB780", VA = "0xDEB780", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xDEB7E4", Offset = "0xDEB7E4", VA = "0xDEB7E4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xDEB848", Offset = "0xDEB848", VA = "0xDEB848")]
		public VRTK_TrackedHeadset()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE654C", Offset = "0xAE654C")]
		private sealed class <>c
		{
			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__7_0;

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0xDEF4CC", Offset = "0xDEF4CC", VA = "0xDEF4CC")]
			public <>c()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xDEF4D4", Offset = "0xDEF4D4", VA = "0xDEF4D4")]
			internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Canvas currentCanvas;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector2 lastKnownPosition;

		[Token(Token = "0x4000F96")]
		protected const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<RaycastResult> s_RaycastResults;

		[Token(Token = "0x17000082")]
		protected virtual Canvas canvas
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xDEF2E4", Offset = "0xDEF2E4", VA = "0xDEF2E4", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xDEE578", Offset = "0xDEE578", VA = "0xDEE578", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xDEE728", Offset = "0xDEE728", VA = "0xDEE728", Slot = "22")]
		protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xDEE9AC", Offset = "0xDEE9AC", VA = "0xDEE9AC", Slot = "23")]
		protected virtual float GetHitDistance(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xDEED18", Offset = "0xDEED18", VA = "0xDEED18", Slot = "24")]
		protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xDEF38C", Offset = "0xDEF38C", VA = "0xDEF38C")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class VRTK_VRInputModule : PointerInputModule
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<VRTK_UIPointer> pointers;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RaycastResult> results;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RaycastResult> raycasts;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xDF1B60", Offset = "0xDF1B60", VA = "0xDF1B60", Slot = "30")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xDF1BB8", Offset = "0xDF1BB8", VA = "0xDF1BB8", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xDF1BC0", Offset = "0xDF1BC0", VA = "0xDF1BC0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xDF1D40", Offset = "0xDF1D40", VA = "0xDF1D40", Slot = "31")]
		protected virtual List<RaycastResult> CheckRaycasts(VRTK_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xDF1E88", Offset = "0xDF1E88", VA = "0xDF1E88", Slot = "32")]
		protected virtual bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xDF1F78", Offset = "0xDF1F78", VA = "0xDF1F78", Slot = "33")]
		protected virtual bool NoValidCollision(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xDF2038", Offset = "0xDF2038", VA = "0xDF2038", Slot = "34")]
		protected virtual bool IsHovering(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xDF2240", Offset = "0xDF2240", VA = "0xDF2240", Slot = "35")]
		protected virtual bool ValidElement(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xDF22F0", Offset = "0xDF22F0", VA = "0xDF22F0", Slot = "36")]
		protected virtual void CheckPointerHoverClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xDF238C", Offset = "0xDF238C", VA = "0xDF238C", Slot = "37")]
		protected virtual void Hover(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xDF2A6C", Offset = "0xDF2A6C", VA = "0xDF2A6C", Slot = "38")]
		protected virtual void Click(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xDF2AB4", Offset = "0xDF2AB4", VA = "0xDF2AB4", Slot = "39")]
		protected virtual void ClickOnUp(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xDF2B58", Offset = "0xDF2B58", VA = "0xDF2B58", Slot = "40")]
		protected virtual void ClickOnDown(VRTK_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xDF2C18", Offset = "0xDF2C18", VA = "0xDF2C18", Slot = "41")]
		protected virtual bool IsEligibleClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xDF2EEC", Offset = "0xDF2EEC", VA = "0xDF2EEC", Slot = "42")]
		protected virtual bool AttemptClick(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xDF31B8", Offset = "0xDF31B8", VA = "0xDF31B8", Slot = "43")]
		protected virtual void Drag(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xDF3890", Offset = "0xDF3890", VA = "0xDF3890", Slot = "44")]
		protected virtual void Scroll(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xDF3B8C", Offset = "0xDF3B8C", VA = "0xDF3B8C")]
		public VRTK_VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public abstract class VRTK_BaseObjectControlAction : MonoBehaviour
	{
		[Token(Token = "0x20005AC")]
		public enum AxisListeners
		{
			[Token(Token = "0x40029F4")]
			XAxisChanged,
			[Token(Token = "0x40029F5")]
			YAxisChanged
		}

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0AF4", Offset = "0xAF0AF4")]
		public VRTK_ObjectControl objectControlScript;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0B2C", Offset = "0xAF0B2C")]
		public AxisListeners listenOnAxisChange;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider centerCollider;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 colliderCenter;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float colliderRadius;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float colliderHeight;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform controlledTransform;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x60011DD")]
		protected abstract void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive);

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xF95164", Offset = "0xF95164", VA = "0xF95164", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xF951DC", Offset = "0xF951DC", VA = "0xF951DC", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xF95330", Offset = "0xF95330", VA = "0xF95330", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xF95458", Offset = "0xF95458", VA = "0xF95458", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF954D0", Offset = "0xF954D0", VA = "0xF954D0", Slot = "9")]
		protected virtual void AxisChanged(object sender, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xF95508", Offset = "0xF95508", VA = "0xF95508", Slot = "10")]
		protected virtual void RotateAroundPlayer(GameObject controlledGameObject, float angle)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xF956B8", Offset = "0xF956B8", VA = "0xF956B8", Slot = "11")]
		protected virtual void Blink(float blinkSpeed)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xF95870", Offset = "0xF95870", VA = "0xF95870", Slot = "12")]
		protected virtual void ReleaseBlink(float blinkSpeed)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xF9591C", Offset = "0xF9591C", VA = "0xF9591C", Slot = "13")]
		protected virtual Vector3 GetObjectCenter(Transform checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF95CE8", Offset = "0xF95CE8", VA = "0xF95CE8", Slot = "14")]
		protected virtual int GetAxisDirection(float axis)
		{
			return default(int);
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xF95D00", Offset = "0xF95D00", VA = "0xF95D00", Slot = "15")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xF95E78", Offset = "0xF95E78", VA = "0xF95E78")]
		protected VRTK_BaseObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3B2C", Offset = "0xAE3B2C")]
	public class VRTK_RotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0B64", Offset = "0xAF0B64")]
		public float maximumRotationSpeed;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0B9C", Offset = "0xAF0B9C")]
		public float rotationMultiplier;

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x127F860", Offset = "0x127F860", VA = "0x127F860", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x127F8BC", Offset = "0x127F8BC", VA = "0x127F8BC", Slot = "16")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x127F918", Offset = "0x127F918", VA = "0x127F918")]
		public VRTK_RotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3B64", Offset = "0xAE3B64")]
	public class VRTK_SlideObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0BD4", Offset = "0xAF0BD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0BD4", Offset = "0xAF0BD4")]
		public float maximumSpeed;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0C34", Offset = "0xAF0C34")]
		public float deceleration;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0C6C", Offset = "0xAF0C6C")]
		public float fallingDeceleration;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0CA4", Offset = "0xAF0CA4")]
		public float speedMultiplier;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0CDC", Offset = "0xAF0CDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0CDC", Offset = "0xAF0CDC")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float currentSpeed;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x128FB68", Offset = "0x128FB68", VA = "0x128FB68", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x128FBF8", Offset = "0x128FBF8", VA = "0x128FBF8", Slot = "16")]
		protected virtual float CalculateSpeed(float inputValue, bool currentlyFalling, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x128FC30", Offset = "0x128FC30", VA = "0x128FC30", Slot = "17")]
		protected virtual float Decelerate(float speed, bool currentlyFalling)
		{
			return default(float);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x128FD48", Offset = "0x128FD48", VA = "0x128FD48", Slot = "18")]
		protected virtual void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x128FF68", Offset = "0x128FF68", VA = "0x128FF68")]
		public VRTK_SlideObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3B9C", Offset = "0xAE3B9C")]
	public class VRTK_SnapRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0D3C", Offset = "0xAF0D3C")]
		public float anglePerSnap;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0D74", Offset = "0xAF0D74")]
		public float angleMultiplier;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0DAC", Offset = "0xAF0DAC")]
		public float snapDelay;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float oculusSnapDelay;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0DE4", Offset = "0xAF0DE4")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF0E1C", Offset = "0xAF0E1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0E1C", Offset = "0xAF0E1C")]
		public float axisThreshold;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static float snapDelayTimer;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static float pressingTimer;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _pressed;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRTK_Pointer _pointerScript;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _processing;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool vive;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool _modifierReleased;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRTK_ControllerEvents _controllerEvents;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xDE4398", Offset = "0xDE4398", VA = "0xDE4398", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xDE441C", Offset = "0xDE441C", VA = "0xDE441C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xDE44A0", Offset = "0xDE44A0", VA = "0xDE44A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xDE4514", Offset = "0xDE4514", VA = "0xDE4514", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xDE47E0", Offset = "0xDE47E0", VA = "0xDE47E0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xDE4924", Offset = "0xDE4924", VA = "0xDE4924")]
		private void buttonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xDE4A88", Offset = "0xDE4A88", VA = "0xDE4A88")]
		private void buttonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xDE4BEC", Offset = "0xDE4BEC", VA = "0xDE4BEC")]
		private void PressedTouchpad(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xDE4BF8", Offset = "0xDE4BF8", VA = "0xDE4BF8")]
		private void ReleasedTouchpad(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xDE4C00", Offset = "0xDE4C00", VA = "0xDE4C00")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xDE4CD4", Offset = "0xDE4CD4", VA = "0xDE4CD4", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xDE4FDC", Offset = "0xDE4FDC", VA = "0xDE4FDC", Slot = "16")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xDE5014", Offset = "0xDE5014", VA = "0xDE5014", Slot = "17")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xDE5064", Offset = "0xDE5064", VA = "0xDE5064")]
		public VRTK_SnapRotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3BD4", Offset = "0xAE3BD4")]
	public class VRTK_WarpObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0E70", Offset = "0xAF0E70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0E70", Offset = "0xAF0E70")]
		public float warpDistance;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0ED0", Offset = "0xAF0ED0")]
		public float warpMultiplier;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0F08", Offset = "0xAF0F08")]
		public float warpDelay;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0F40", Offset = "0xAF0F40")]
		public float floorHeightTolerance;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0F78", Offset = "0xAF0F78")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF0FB0", Offset = "0xAF0FB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF0FB0", Offset = "0xAF0FB0")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float warpDelayTimer;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform headset;

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xDF490C", Offset = "0xDF490C", VA = "0xDF490C", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xDF49C8", Offset = "0xDF49C8", VA = "0xDF49C8", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xDF4A40", Offset = "0xDF4A40", VA = "0xDF4A40", Slot = "16")]
		protected virtual void Warp(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, bool modifierActive)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xDF4F68", Offset = "0xDF4F68", VA = "0xDF4F68")]
		public VRTK_WarpObjectControlAction()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3C0C", Offset = "0xAE3C0C")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE655C", Offset = "0xAE655C")]
		private sealed class <InitListenersAtEndOfFrame>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BasicTeleport <>4__this;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BD")]
				[Address(RVA = "0xF9D598", Offset = "0xF9D598", VA = "0xF9D598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BF")]
				[Address(RVA = "0xF9D600", Offset = "0xF9D600", VA = "0xF9D600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xF9D1D4", Offset = "0xF9D1D4", VA = "0xF9D1D4")]
			[DebuggerHidden]
			public <InitListenersAtEndOfFrame>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xF9D4D0", Offset = "0xF9D4D0", VA = "0xF9D4D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xF9D4D4", Offset = "0xF9D4D4", VA = "0xF9D4D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xF9D5A0", Offset = "0xF9D5A0", VA = "0xF9D5A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1010", Offset = "0xAF1010")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1010", Offset = "0xAF1010")]
		public Color blinkToColor;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1070", Offset = "0xAF1070")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF10A8", Offset = "0xAF10A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF10A8", Offset = "0xAF10A8")]
		public float distanceBlinkDelay;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1100", Offset = "0xAF1100")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1138", Offset = "0xAF1138")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1170", Offset = "0xAF1170")]
		public float navMeshLimitDistance;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform headset;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playArea;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool enableTeleport;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float blinkPause;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float fadeInTime;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float maxBlinkTransitionSpeed;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float maxBlinkDistance;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x1400009F")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xF9B2B8", Offset = "0xF9B2B8", VA = "0xF9B2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04254", Offset = "0xB04254")]
			add
			{
			}
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xF9B35C", Offset = "0xF9B35C", VA = "0xF9B35C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04264", Offset = "0xB04264")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xF9B400", Offset = "0xF9B400", VA = "0xF9B400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04274", Offset = "0xB04274")]
			add
			{
			}
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xF9B4A4", Offset = "0xF9B4A4", VA = "0xF9B4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04284", Offset = "0xB04284")]
			remove
			{
			}
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xF9B548", Offset = "0xF9B548", VA = "0xF9B548", Slot = "4")]
		public virtual void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xF9B6F4", Offset = "0xF9B6F4", VA = "0xF9B6F4", Slot = "5")]
		public virtual void ToggleTeleportEnabled(bool state)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xF9B700", Offset = "0xF9B700", VA = "0xF9B700", Slot = "6")]
		public virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xF9B8B0", Offset = "0xF9B8B0", VA = "0xF9B8B0", Slot = "7")]
		public virtual void Teleport(DestinationMarkerEventArgs teleportArgs)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xF9B914", Offset = "0xF9B914", VA = "0xF9B914", Slot = "8")]
		public virtual void Teleport(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xF9B9B4", Offset = "0xF9B9B4", VA = "0xF9B9B4", Slot = "9")]
		public virtual void ForceTeleport(Vector3 destinationPosition, [Optional] Quaternion? destinationRotation)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xF9BBF4", Offset = "0xF9BBF4", VA = "0xF9BBF4", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xF9BC6C", Offset = "0xF9BC6C", VA = "0xF9BC6C", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xF9BD70", Offset = "0xF9BD70", VA = "0xF9BD70", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xF9BE20", Offset = "0xF9BE20", VA = "0xF9BE20", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xF9BE98", Offset = "0xF9BE98", VA = "0xF9BE98", Slot = "14")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xF9C038", Offset = "0xF9C038", VA = "0xF9C038", Slot = "15")]
		protected virtual DestinationMarkerEventArgs BuildTeleportArgs(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xF9C1D0", Offset = "0xF9C1D0", VA = "0xF9C1D0", Slot = "16")]
		protected virtual bool ValidRigObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xF9C420", Offset = "0xF9C420", VA = "0xF9C420", Slot = "17")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xF9C8E4", Offset = "0xF9C8E4", VA = "0xF9C8E4", Slot = "18")]
		protected virtual void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF9C9A4", Offset = "0xF9C9A4", VA = "0xF9C9A4", Slot = "19")]
		protected virtual void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 updatedPosition, Quaternion updatedRotation)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xF9C9A8", Offset = "0xF9C9A8", VA = "0xF9C9A8", Slot = "20")]
		protected virtual void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF9CA20", Offset = "0xF9CA20", VA = "0xF9CA20", Slot = "21")]
		protected virtual Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF9CB2C", Offset = "0xF9CB2C", VA = "0xF9CB2C", Slot = "22")]
		protected virtual Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF9CC04", Offset = "0xF9CC04", VA = "0xF9CC04", Slot = "23")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF9CD30", Offset = "0xF9CD30", VA = "0xF9CD30", Slot = "24")]
		protected virtual Vector3 CheckTerrainCollision(Vector3 position, Transform target, bool useHeadsetForPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF9CEB4", Offset = "0xF9CEB4", VA = "0xF9CEB4", Slot = "25")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF9CF04", Offset = "0xF9CF04", VA = "0xF9CF04", Slot = "26")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF9CF54", Offset = "0xF9CF54", VA = "0xF9CF54", Slot = "27")]
		protected virtual void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xF9D0AC", Offset = "0xF9D0AC", VA = "0xF9D0AC", Slot = "28")]
		protected virtual void ReleaseBlink()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF9D164", Offset = "0xF9D164", VA = "0xF9D164", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04294", Offset = "0xB04294")]
		protected virtual IEnumerator InitListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF9D200", Offset = "0xF9D200", VA = "0xF9D200", Slot = "30")]
		protected virtual void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF9D478", Offset = "0xF9D478", VA = "0xF9D478")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3C44", Offset = "0xAE3C44")]
	public class VRTK_ButtonControl : VRTK_ObjectControl
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF11C8", Offset = "0xAF11C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF11C8", Offset = "0xAF11C8")]
		public VRTK_ControllerEvents.ButtonAlias forwardButton;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1228", Offset = "0xAF1228")]
		public VRTK_ControllerEvents.ButtonAlias backwardButton;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1260", Offset = "0xAF1260")]
		public VRTK_ControllerEvents.ButtonAlias leftButton;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1298", Offset = "0xAF1298")]
		public VRTK_ControllerEvents.ButtonAlias rightButton;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool forwardPressed;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool backwardPressed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		protected bool leftPressed;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		protected bool rightPressed;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedForwardButton;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedBackwardButton;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedLeftButton;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRightButton;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector2 axisDeadzone;

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x168F294", Offset = "0x168F294", VA = "0x168F294", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x168F314", Offset = "0x168F314", VA = "0x168F314", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x168F494", Offset = "0x168F494", VA = "0x168F494", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x168F5BC", Offset = "0x168F5BC", VA = "0x168F5BC", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x168F7E8", Offset = "0x168F7E8", VA = "0x168F7E8", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x168F818", Offset = "0x168F818", VA = "0x168F818", Slot = "22")]
		protected virtual void SetDirectionListener(bool state, VRTK_ControllerEvents.ButtonAlias directionButton, ref VRTK_ControllerEvents.ButtonAlias subscribedDirectionButton, ControllerInteractionEventHandler pressCallback, ControllerInteractionEventHandler releaseCallback)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x168F98C", Offset = "0x168F98C", VA = "0x168F98C", Slot = "23")]
		protected virtual void ForwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x168F998", Offset = "0x168F998", VA = "0x168F998", Slot = "24")]
		protected virtual void ForwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x168F9A0", Offset = "0x168F9A0", VA = "0x168F9A0", Slot = "25")]
		protected virtual void BackwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x168F9AC", Offset = "0x168F9AC", VA = "0x168F9AC", Slot = "26")]
		protected virtual void BackwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x168F9B4", Offset = "0x168F9B4", VA = "0x168F9B4", Slot = "27")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x168F9C0", Offset = "0x168F9C0", VA = "0x168F9C0", Slot = "28")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x168F9C8", Offset = "0x168F9C8", VA = "0x168F9C8", Slot = "29")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x168F9D4", Offset = "0x168F9D4", VA = "0x168F9D4", Slot = "30")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x168F9DC", Offset = "0x168F9DC", VA = "0x168F9DC")]
		public VRTK_ButtonControl()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public struct DashTeleportEventArgs
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit[] hits;
	}
	[Token(Token = "0x2000232")]
	public delegate void DashTeleportEventHandler(object sender, DashTeleportEventArgs e);
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3C7C", Offset = "0xAE3C7C")]
	public class VRTK_DashTeleport : VRTK_HeightAdjustTeleport
	{
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE656C", Offset = "0xAE656C")]
		private sealed class <lerpToPosition>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DashTeleport <>4__this;

			[Token(Token = "0x40029FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x40029FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x40029FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public object sender;

			[Token(Token = "0x40029FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private bool <gameObjectInTheWay>5__2;

			[Token(Token = "0x4002A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private RaycastHit[] <allHits>5__3;

			[Token(Token = "0x4002A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x4002A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x4002A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private float <t>5__6;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C3")]
				[Address(RVA = "0x14A677C", Offset = "0x14A677C", VA = "0x14A677C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C5")]
				[Address(RVA = "0x14A67E4", Offset = "0x14A67E4", VA = "0x14A67E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x14A6000", Offset = "0x14A6000", VA = "0x14A6000")]
			[DebuggerHidden]
			public <lerpToPosition>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x14A60AC", Offset = "0x14A60AC", VA = "0x14A60AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x14A60B0", Offset = "0x14A60B0", VA = "0x14A60B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x14A6784", Offset = "0x14A6784", VA = "0x14A6784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF12D0", Offset = "0xAF12D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF12D0", Offset = "0xAF12D0")]
		public float normalLerpTime;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1330", Offset = "0xAF1330")]
		public float minSpeedMps;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1368", Offset = "0xAF1368")]
		public float capsuleTopOffset;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF13A0", Offset = "0xAF13A0")]
		public float capsuleBottomOffset;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF13D8", Offset = "0xAF13D8")]
		public float capsuleRadius;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float minDistanceForNormalLerp;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float lerpTime;

		[Token(Token = "0x140000A1")]
		public event DashTeleportEventHandler WillDashThruObjects
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x14A5B18", Offset = "0x14A5B18", VA = "0x14A5B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB042F8", Offset = "0xB042F8")]
			add
			{
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x14A5BBC", Offset = "0x14A5BBC", VA = "0x14A5BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04308", Offset = "0xB04308")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event DashTeleportEventHandler DashedThruObjects
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x14A5C60", Offset = "0x14A5C60", VA = "0x14A5C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04318", Offset = "0xB04318")]
			add
			{
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x14A5D04", Offset = "0x14A5D04", VA = "0x14A5D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04328", Offset = "0xB04328")]
			remove
			{
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x14A5DA8", Offset = "0x14A5DA8", VA = "0x14A5DA8", Slot = "32")]
		public virtual void OnWillDashThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x14A5DC8", Offset = "0x14A5DC8", VA = "0x14A5DC8", Slot = "33")]
		public virtual void OnDashedThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x14A5DE8", Offset = "0x14A5DE8", VA = "0x14A5DE8", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x14A5E18", Offset = "0x14A5E18", VA = "0x14A5E18", Slot = "21")]
		protected override Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x14A5E2C", Offset = "0x14A5E2C", VA = "0x14A5E2C", Slot = "18")]
		protected override void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x14A5E7C", Offset = "0x14A5E7C", VA = "0x14A5E7C", Slot = "19")]
		protected override void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x14A5F44", Offset = "0x14A5F44", VA = "0x14A5F44", Slot = "20")]
		protected override void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x14A5F48", Offset = "0x14A5F48", VA = "0x14A5F48", Slot = "34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04338", Offset = "0xB04338")]
		protected virtual IEnumerator lerpToPosition(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x14A602C", Offset = "0x14A602C", VA = "0x14A602C", Slot = "35")]
		protected virtual DashTeleportEventArgs SetDashTeleportEvent(RaycastHit[] hits)
		{
			return default(DashTeleportEventArgs);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x14A6034", Offset = "0x14A6034", VA = "0x14A6034")]
		public VRTK_DashTeleport()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x14A605C", Offset = "0x14A605C", VA = "0x14A605C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0439C", Offset = "0xB0439C")]
		[DebuggerHidden]
		private void <>n__0(object sender, DestinationMarkerEventArgs e)
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3CB4", Offset = "0xAE3CB4")]
	public class VRTK_HeightAdjustTeleport : VRTK_BasicTeleport
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1430", Offset = "0xAF1430")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1430", Offset = "0xAF1430")]
		public bool snapToNearestFloor;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1490", Offset = "0xAF1490")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF14C8", Offset = "0xAF14C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF14C8", Offset = "0xAF14C8")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1935C54", Offset = "0x1935C54", VA = "0x1935C54", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1935C80", Offset = "0x1935C80", VA = "0x1935C80", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1935C88", Offset = "0x1935C88", VA = "0x1935C88", Slot = "23")]
		protected override Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1935D20", Offset = "0x1935D20", VA = "0x1935D20", Slot = "31")]
		protected virtual float GetTeleportY(Transform target, Vector3 tipPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1935F20", Offset = "0x1935F20", VA = "0x1935F20")]
		public VRTK_HeightAdjustTeleport()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3CEC", Offset = "0xAE3CEC")]
	public class VRTK_MoveInPlace : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		public enum ControlOptions
		{
			[Token(Token = "0x4002A05")]
			HeadsetAndControllers,
			[Token(Token = "0x4002A06")]
			ControllersOnly,
			[Token(Token = "0x4002A07")]
			HeadsetOnly
		}

		[Token(Token = "0x20005B0")]
		public enum DirectionalMethod
		{
			[Token(Token = "0x4002A09")]
			Gaze,
			[Token(Token = "0x4002A0A")]
			ControllerRotation,
			[Token(Token = "0x4002A0B")]
			DumbDecoupling,
			[Token(Token = "0x4002A0C")]
			SmartDecoupling,
			[Token(Token = "0x4002A0D")]
			EngageControllerRotationOnly,
			[Token(Token = "0x4002A0E")]
			LeftControllerRotationOnly,
			[Token(Token = "0x4002A0F")]
			RightControllerRotationOnly
		}

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1528", Offset = "0xAF1528")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1528", Offset = "0xAF1528")]
		public bool leftController;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1588", Offset = "0xAF1588")]
		public bool rightController;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF15C0", Offset = "0xAF15C0")]
		public VRTK_ControllerEvents.ButtonAlias engageButton;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF15F8", Offset = "0xAF15F8")]
		public ControlOptions controlOptions;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1630", Offset = "0xAF1630")]
		public DirectionalMethod directionMethod;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1668", Offset = "0xAF1668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1668", Offset = "0xAF1668")]
		public float speedScale;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF16C8", Offset = "0xAF16C8")]
		public float maxSpeed;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1700", Offset = "0xAF1700")]
		public float deceleration;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1738", Offset = "0xAF1738")]
		public float fallingDeceleration;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1770", Offset = "0xAF1770")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1770", Offset = "0xAF1770")]
		public float smartDecoupleThreshold;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF17D0", Offset = "0xAF17D0")]
		public float sensitivity;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1808", Offset = "0xAF1808")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1808", Offset = "0xAF1808")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject controllerLeftHand;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controllerRightHand;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_ControllerReference engagedController;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftSubscribed;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightSubscribed;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool previousLeftControllerState;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool previousRightControllerState;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias previousEngageButton;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool currentlyFalling;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int averagePeriod;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Transform> trackedObjects;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<Transform, List<float>> movementList;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<Transform, float> previousYPositions;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 initalGaze;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float currentSpeed;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 direction;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 previousDirection;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool active;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x134AF40", Offset = "0x134AF40", VA = "0x134AF40", Slot = "4")]
		public virtual void SetControlOptions(ControlOptions givenControlOptions)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x134B27C", Offset = "0x134B27C", VA = "0x134B27C", Slot = "5")]
		public virtual Vector3 GetMovementDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x134B288", Offset = "0x134B288", VA = "0x134B288", Slot = "6")]
		public virtual float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x134B290", Offset = "0x134B290", VA = "0x134B290", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x134B308", Offset = "0x134B308", VA = "0x134B308", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x134B730", Offset = "0x134B730", VA = "0x134B730", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x134B79C", Offset = "0x134B79C", VA = "0x134B79C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x134B814", Offset = "0x134B814", VA = "0x134B814", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x134B880", Offset = "0x134B880", VA = "0x134B880", Slot = "12")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x134BA50", Offset = "0x134BA50", VA = "0x134BA50", Slot = "13")]
		protected virtual bool MovementActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x134BA70", Offset = "0x134BA70", VA = "0x134BA70", Slot = "14")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x134BAC8", Offset = "0x134BAC8", VA = "0x134BAC8", Slot = "15")]
		protected virtual float CalculateListAverage()
		{
			return default(float);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x134BCC4", Offset = "0x134BCC4", VA = "0x134BCC4", Slot = "16")]
		protected virtual Vector3 SetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x134C340", Offset = "0x134C340", VA = "0x134C340", Slot = "17")]
		protected virtual Vector3 CalculateControllerRotationDirection(Vector3 calculatedControllerDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x134C410", Offset = "0x134C410", VA = "0x134C410", Slot = "18")]
		protected virtual void SetDeltaTransformData()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x134C4E4", Offset = "0x134C4E4", VA = "0x134C4E4", Slot = "19")]
		protected virtual void MovePlayArea(Vector3 moveDirection, float moveSpeed)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x134C69C", Offset = "0x134C69C", VA = "0x134C69C", Slot = "20")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x134C814", Offset = "0x134C814", VA = "0x134C814", Slot = "21")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x134C918", Offset = "0x134C918", VA = "0x134C918", Slot = "22")]
		protected virtual void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x134C92C", Offset = "0x134C92C", VA = "0x134C92C", Slot = "23")]
		protected virtual void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x134CA28", Offset = "0x134CA28", VA = "0x134CA28", Slot = "24")]
		protected virtual Quaternion DetermineAverageControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x134CC9C", Offset = "0x134CC9C", VA = "0x134CC9C", Slot = "25")]
		protected virtual Quaternion AverageRotation(Quaternion rot1, Quaternion rot2)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x134CD70", Offset = "0x134CD70", VA = "0x134CD70", Slot = "26")]
		protected virtual void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x134CE38", Offset = "0x134CE38", VA = "0x134CE38", Slot = "27")]
		protected virtual void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x134D0F0", Offset = "0x134D0F0", VA = "0x134D0F0")]
		public VRTK_MoveInPlace()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public struct ObjectControlEventArgs
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject controlledGameObject;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform directionDevice;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axisDirection;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float axis;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deadzone;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool currentlyFalling;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool modifierActive;
	}
	[Token(Token = "0x2000237")]
	public delegate void ObjectControlEventHandler(object sender, ObjectControlEventArgs e);
	[Token(Token = "0x2000238")]
	public abstract class VRTK_ObjectControl : MonoBehaviour
	{
		[Token(Token = "0x20005B1")]
		public enum DirectionDevices
		{
			[Token(Token = "0x4002A11")]
			Headset,
			[Token(Token = "0x4002A12")]
			LeftController,
			[Token(Token = "0x4002A13")]
			RightController,
			[Token(Token = "0x4002A14")]
			ControlledObject
		}

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1868", Offset = "0xAF1868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1868", Offset = "0xAF1868")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF18C8", Offset = "0xAF18C8")]
		public DirectionDevices deviceForDirection;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1900", Offset = "0xAF1900")]
		public bool disableOtherControlsOnActive;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1938", Offset = "0xAF1938")]
		public bool affectOnFalling;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1970", Offset = "0xAF1970")]
		public GameObject controlOverrideObject;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ObjectControl otherObjectControl;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controlledGameObject;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject setControlOverrideObject;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform directionDevice;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected DirectionDevices previousDeviceForDirection;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector2 currentAxis;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Vector2 storedAxis;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool currentlyFalling;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool modifierActive;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float controlledGameObjectPreviousY;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float controlledGameObjectPreviousYOffset;

		[Token(Token = "0x140000A3")]
		public event ObjectControlEventHandler XAxisChanged
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x134F3B8", Offset = "0x134F3B8", VA = "0x134F3B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB043D4", Offset = "0xB043D4")]
			add
			{
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x134F45C", Offset = "0x134F45C", VA = "0x134F45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB043E4", Offset = "0xB043E4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event ObjectControlEventHandler YAxisChanged
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x134F500", Offset = "0x134F500", VA = "0x134F500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB043F4", Offset = "0xB043F4")]
			add
			{
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x134F5A4", Offset = "0x134F5A4", VA = "0x134F5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04404", Offset = "0xB04404")]
			remove
			{
			}
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x134F648", Offset = "0x134F648", VA = "0x134F648", Slot = "4")]
		public virtual void OnXAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x134F68C", Offset = "0x134F68C", VA = "0x134F68C", Slot = "5")]
		public virtual void OnYAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001273")]
		protected abstract void ControlFixedUpdate();

		[Token(Token = "0x6001274")]
		protected abstract VRTK_ObjectControl GetOtherControl();

		[Token(Token = "0x6001275")]
		protected abstract bool IsInAction();

		[Token(Token = "0x6001276")]
		protected abstract void SetListeners(bool state);

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x134F6D0", Offset = "0x134F6D0", VA = "0x134F6D0", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x134F748", Offset = "0x134F748", VA = "0x134F748", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x134FA40", Offset = "0x134FA40", VA = "0x134FA40", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x134FA50", Offset = "0x134FA50", VA = "0x134FA50", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x134FAC8", Offset = "0x134FAC8", VA = "0x134FAC8", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x134FB6C", Offset = "0x134FB6C", VA = "0x134FB6C", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x134FBB8", Offset = "0x134FBB8", VA = "0x134FBB8", Slot = "16")]
		protected virtual ObjectControlEventArgs SetEventArguements(Vector3 axisDirection, float axis, float axisDeadzone)
		{
			return default(ObjectControlEventArgs);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x134FBE0", Offset = "0x134FBE0", VA = "0x134FBE0", Slot = "17")]
		protected virtual void SetControlledObject()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x134FCB8", Offset = "0x134FCB8", VA = "0x134FCB8", Slot = "18")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x134FED4", Offset = "0x134FED4", VA = "0x134FED4", Slot = "19")]
		protected virtual bool ObjectHeightChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x134FF54", Offset = "0x134FF54", VA = "0x134FF54", Slot = "20")]
		protected virtual Transform GetDirectionDevice()
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1350068", Offset = "0x1350068", VA = "0x1350068", Slot = "21")]
		protected virtual void CheckDirectionDevice()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x13500B4", Offset = "0x13500B4", VA = "0x13500B4")]
		protected VRTK_ObjectControl()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public struct PlayerClimbEventArgs
	{
		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF19C8", Offset = "0xAF19C8")]
		public uint controllerIndex;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;
	}
	[Token(Token = "0x200023A")]
	public delegate void PlayerClimbEventHandler(object sender, PlayerClimbEventArgs e);
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE3D24", Offset = "0xAE3D24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3D24", Offset = "0xAE3D24")]
	public class VRTK_PlayerClimb : MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1A00", Offset = "0xAF1A00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1A00", Offset = "0xAF1A00")]
		public bool usePlayerScale;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1A60", Offset = "0xAF1A60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1A60", Offset = "0xAF1A60")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1AC0", Offset = "0xAF1AC0")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1AF8", Offset = "0xAF1AF8")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1B30", Offset = "0xAF1B30")]
		public VRTK_PositionRewind positionRewind;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 startControllerScaledLocalPosition;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 startGrabPointLocalPosition;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 startPlayAreaWorldOffset;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbingController;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject climbingObject;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Quaternion climbingObjectLastRotation;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool isClimbing;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool useGrabbedObjectRotation;

		[Token(Token = "0x140000A5")]
		public event PlayerClimbEventHandler PlayerClimbStarted
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x1357928", Offset = "0x1357928", VA = "0x1357928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04414", Offset = "0xB04414")]
			add
			{
			}
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x13579CC", Offset = "0x13579CC", VA = "0x13579CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04424", Offset = "0xB04424")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event PlayerClimbEventHandler PlayerClimbEnded
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x1357A70", Offset = "0x1357A70", VA = "0x1357A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04434", Offset = "0xB04434")]
			add
			{
			}
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x1357B14", Offset = "0x1357B14", VA = "0x1357B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04444", Offset = "0xB04444")]
			remove
			{
			}
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1357BB8", Offset = "0x1357BB8", VA = "0x1357BB8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1357D80", Offset = "0x1357D80", VA = "0x1357D80", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1357DFC", Offset = "0x1357DFC", VA = "0x1357DFC", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1357E44", Offset = "0x1357E44", VA = "0x1357E44", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1357EBC", Offset = "0x1357EBC", VA = "0x1357EBC", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1358244", Offset = "0x1358244", VA = "0x1358244", Slot = "9")]
		protected virtual void OnPlayerClimbStarted(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1358288", Offset = "0x1358288", VA = "0x1358288", Slot = "10")]
		protected virtual void OnPlayerClimbEnded(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x13582CC", Offset = "0x13582CC", VA = "0x13582CC", Slot = "11")]
		protected virtual PlayerClimbEventArgs SetPlayerClimbEvent(VRTK_ControllerReference controllerReference, GameObject target)
		{
			return default(PlayerClimbEventArgs);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1358350", Offset = "0x1358350", VA = "0x1358350", Slot = "12")]
		protected virtual void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1358424", Offset = "0x1358424", VA = "0x1358424", Slot = "13")]
		protected virtual void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x135850C", Offset = "0x135850C", VA = "0x135850C", Slot = "14")]
		protected virtual void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1358570", Offset = "0x1358570", VA = "0x1358570", Slot = "15")]
		protected virtual Vector3 GetScaledLocalPosition(Transform objTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1358714", Offset = "0x1358714", VA = "0x1358714", Slot = "16")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x135882C", Offset = "0x135882C", VA = "0x135882C", Slot = "17")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x135899C", Offset = "0x135899C", VA = "0x135899C", Slot = "18")]
		protected virtual void Grab(GameObject currentGrabbingController, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1358C34", Offset = "0x1358C34", VA = "0x1358C34", Slot = "19")]
		protected virtual void Ungrab(bool carryMomentum, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1358EEC", Offset = "0x1358EEC", VA = "0x1358EEC", Slot = "20")]
		protected virtual bool IsActiveClimbingController(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1358F68", Offset = "0x1358F68", VA = "0x1358F68", Slot = "21")]
		protected virtual bool IsClimbableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x135904C", Offset = "0x135904C", VA = "0x135904C", Slot = "22")]
		protected virtual void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x13591E8", Offset = "0x13591E8", VA = "0x13591E8", Slot = "23")]
		protected virtual bool IsBodyColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x13592C4", Offset = "0x13592C4", VA = "0x13592C4", Slot = "24")]
		protected virtual bool IsHeadsetColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1359360", Offset = "0x1359360", VA = "0x1359360")]
		public VRTK_PlayerClimb()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3DAC", Offset = "0xAE3DAC")]
	public class VRTK_RoomExtender : MonoBehaviour
	{
		[Token(Token = "0x20005B2")]
		public enum MovementFunction
		{
			[Token(Token = "0x4002A16")]
			Nonlinear,
			[Token(Token = "0x4002A17")]
			LinearDirect
		}

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1B88", Offset = "0xAF1B88")]
		public MovementFunction movementFunction;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1BC0", Offset = "0xAF1BC0")]
		public bool additionalMovementEnabled;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1BF8", Offset = "0xAF1BF8")]
		public bool additionalMovementEnabledOnButtonPress;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1C30", Offset = "0xAF1C30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF1C30", Offset = "0xAF1C30")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1C84", Offset = "0xAF1C84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF1C84", Offset = "0xAF1C84")]
		public float headZoneRadius;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1CD8", Offset = "0xAF1CD8")]
		public Transform debugTransform;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x127E0E8", Offset = "0x127E0E8", VA = "0x127E0E8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x127E3A0", Offset = "0x127E3A0", VA = "0x127E3A0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x127E5F8", Offset = "0x127E5F8", VA = "0x127E5F8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x127E6D0", Offset = "0x127E6D0", VA = "0x127E6D0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x127E6FC", Offset = "0x127E6FC", VA = "0x127E6FC", Slot = "8")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x127E918", Offset = "0x127E918", VA = "0x127E918", Slot = "9")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x127EA58", Offset = "0x127EA58", VA = "0x127EA58", Slot = "10")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x127EB98", Offset = "0x127EB98", VA = "0x127EB98", Slot = "11")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x127EC7C", Offset = "0x127EC7C", VA = "0x127EC7C")]
		public VRTK_RoomExtender()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE3DE4", Offset = "0xAE3DE4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3DE4", Offset = "0xAE3DE4")]
	public class VRTK_TeleportDisableOnControllerObscured : MonoBehaviour
	{
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE657C", Offset = "0xAE657C")]
		private sealed class <EnableAtEndOfFrame>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnControllerObscured <>4__this;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C9")]
				[Address(RVA = "0xDE6E8C", Offset = "0xDE6E8C", VA = "0xDE6E8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024CB")]
				[Address(RVA = "0xDE6EF4", Offset = "0xDE6EF4", VA = "0xDE6EF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xDE6C54", Offset = "0xDE6C54", VA = "0xDE6C54")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xDE6CD0", Offset = "0xDE6CD0", VA = "0xDE6CD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0xDE6CD4", Offset = "0xDE6CD4", VA = "0xDE6CD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xDE6E94", Offset = "0xDE6E94", VA = "0xDE6E94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_BasicTeleport basicTeleport;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_HeadsetControllerAware headset;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xDE6A3C", Offset = "0xDE6A3C", VA = "0xDE6A3C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xDE6AB0", Offset = "0xDE6AB0", VA = "0xDE6AB0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xDE6BE4", Offset = "0xDE6BE4", VA = "0xDE6BE4", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04454", Offset = "0xB04454")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xDE6C80", Offset = "0xDE6C80", VA = "0xDE6C80", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xDE6CA4", Offset = "0xDE6CA4", VA = "0xDE6CA4", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xDE6CC8", Offset = "0xDE6CC8", VA = "0xDE6CC8")]
		public VRTK_TeleportDisableOnControllerObscured()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3E6C", Offset = "0xAE3E6C")]
	public class VRTK_TeleportDisableOnHeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE658C", Offset = "0xAE658C")]
		private sealed class <EnableAtEndOfFrame>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnHeadsetCollision <>4__this;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024CF")]
				[Address(RVA = "0xDE734C", Offset = "0xDE734C", VA = "0xDE734C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D1")]
				[Address(RVA = "0xDE73B4", Offset = "0xDE73B4", VA = "0xDE73B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xDE7114", Offset = "0xDE7114", VA = "0xDE7114")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xDE7190", Offset = "0xDE7190", VA = "0xDE7190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xDE7194", Offset = "0xDE7194", VA = "0xDE7194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xDE7354", Offset = "0xDE7354", VA = "0xDE7354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_BasicTeleport basicTeleport;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xDE6EFC", Offset = "0xDE6EFC", VA = "0xDE6EFC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xDE6F70", Offset = "0xDE6F70", VA = "0xDE6F70", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xDE70A4", Offset = "0xDE70A4", VA = "0xDE70A4", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB044B8", Offset = "0xB044B8")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xDE7140", Offset = "0xDE7140", VA = "0xDE7140", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xDE7164", Offset = "0xDE7164", VA = "0xDE7164", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xDE7188", Offset = "0xDE7188", VA = "0xDE7188")]
		public VRTK_TeleportDisableOnHeadsetCollision()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3EA4", Offset = "0xAE3EA4")]
	public class VRTK_TouchpadControl : VRTK_ObjectControl
	{
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE659C", Offset = "0xAE659C")]
		private sealed class <DelayedThumbstickSetting>d__7 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_TouchpadControl <>4__this;

			[Token(Token = "0x170002F1")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60024D5")]
				[Address(RVA = "0xDE8008", Offset = "0xDE8008", VA = "0xDE8008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D7")]
				[Address(RVA = "0xDE8070", Offset = "0xDE8070", VA = "0xDE8070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xDE74CC", Offset = "0xDE74CC", VA = "0xDE74CC")]
			[DebuggerHidden]
			public <DelayedThumbstickSetting>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xDE7E20", Offset = "0xDE7E20", VA = "0xDE7E20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xDE7E24", Offset = "0xDE7E24", VA = "0xDE7E24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xDE8010", Offset = "0xDE8010", VA = "0xDE8010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1D20", Offset = "0xAF1D20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1D20", Offset = "0xAF1D20")]
		public VRTK_ControllerEvents.ButtonAlias primaryActivationButton;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1D80", Offset = "0xAF1D80")]
		public VRTK_ControllerEvents.ButtonAlias actionModifierButton;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1DB8", Offset = "0xAF1DB8")]
		public Vector2 axisDeadzone;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool touchpadFirstChange;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool otherTouchpadControlEnabledState;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool primaryUndefinedForThumbstick;

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xDE73BC", Offset = "0xDE73BC", VA = "0xDE73BC", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xDE745C", Offset = "0xDE745C", VA = "0xDE745C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0451C", Offset = "0xB0451C")]
		private IEnumerator<float> DelayedThumbstickSetting()
		{
			return null;
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xDE74F8", Offset = "0xDE74F8", VA = "0xDE74F8", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xDE7660", Offset = "0xDE7660", VA = "0xDE7660", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xDE778C", Offset = "0xDE778C", VA = "0xDE778C", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xDE78F0", Offset = "0xDE78F0", VA = "0xDE78F0", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xDE7940", Offset = "0xDE7940", VA = "0xDE7940", Slot = "22")]
		protected virtual bool OutsideDeadzone(float axisValue, float deadzoneThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xDE795C", Offset = "0xDE795C", VA = "0xDE795C", Slot = "23")]
		protected virtual bool ValidPrimaryButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xDE7A08", Offset = "0xDE7A08", VA = "0xDE7A08", Slot = "24")]
		protected virtual void ModifierButtonActive()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xDE7AB0", Offset = "0xDE7AB0", VA = "0xDE7AB0", Slot = "25")]
		protected virtual bool TouchpadTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xDE7B50", Offset = "0xDE7B50", VA = "0xDE7B50", Slot = "26")]
		protected virtual void TouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xDE7D00", Offset = "0xDE7D00", VA = "0xDE7D00", Slot = "27")]
		protected virtual void TouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xDE7DC8", Offset = "0xDE7DC8", VA = "0xDE7DC8")]
		public VRTK_TouchpadControl()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public struct TouchpadMovementAxisEventArgs
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_TouchpadMovement.AxisMovementType movementType;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VRTK_TouchpadMovement.AxisMovementDirection direction;
	}
	[Token(Token = "0x2000241")]
	public delegate void TouchpadMovementAxisEventHandler(VRTK_TouchpadMovement sender, TouchpadMovementAxisEventArgs e);
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE3EDC", Offset = "0xAE3EDC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE3EDC", Offset = "0xAE3EDC")]
	public class VRTK_TouchpadMovement : MonoBehaviour
	{
		[Token(Token = "0x20005B6")]
		public enum VerticalAxisMovement
		{
			[Token(Token = "0x4002A22")]
			None,
			[Token(Token = "0x4002A23")]
			Slide,
			[Token(Token = "0x4002A24")]
			Warp,
			[Token(Token = "0x4002A25")]
			WarpWithBlink
		}

		[Token(Token = "0x20005B7")]
		public enum HorizontalAxisMovement
		{
			[Token(Token = "0x4002A27")]
			None,
			[Token(Token = "0x4002A28")]
			Slide,
			[Token(Token = "0x4002A29")]
			Rotate,
			[Token(Token = "0x4002A2A")]
			SnapRotate,
			[Token(Token = "0x4002A2B")]
			SnapRotateWithBlink,
			[Token(Token = "0x4002A2C")]
			Warp,
			[Token(Token = "0x4002A2D")]
			WarpWithBlink
		}

		[Token(Token = "0x20005B8")]
		public enum AxisMovementType
		{
			[Token(Token = "0x4002A2F")]
			Warp,
			[Token(Token = "0x4002A30")]
			FlipDirection,
			[Token(Token = "0x4002A31")]
			SnapRotate
		}

		[Token(Token = "0x20005B9")]
		public enum AxisMovementDirection
		{
			[Token(Token = "0x4002A33")]
			None,
			[Token(Token = "0x4002A34")]
			Left,
			[Token(Token = "0x4002A35")]
			Right,
			[Token(Token = "0x4002A36")]
			Forward,
			[Token(Token = "0x4002A37")]
			Backward
		}

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1E00", Offset = "0xAF1E00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1E00", Offset = "0xAF1E00")]
		public bool leftController;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1E60", Offset = "0xAF1E60")]
		public bool rightController;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1E98", Offset = "0xAF1E98")]
		public VRTK_ControllerEvents.ButtonAlias moveOnButtonPress;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1ED0", Offset = "0xAF1ED0")]
		public VRTK_ControllerEvents.ButtonAlias movementMultiplierButton;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF1F08", Offset = "0xAF1F08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1F08", Offset = "0xAF1F08")]
		public VerticalAxisMovement verticalAxisMovement;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1F68", Offset = "0xAF1F68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF1F68", Offset = "0xAF1F68")]
		public float verticalDeadzone;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1FBC", Offset = "0xAF1FBC")]
		public float verticalMultiplier;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF1FF4", Offset = "0xAF1FF4")]
		public VRTK_DeviceFinder.Devices deviceForDirection;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF202C", Offset = "0xAF202C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF202C", Offset = "0xAF202C")]
		public bool flipDirectionEnabled;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF208C", Offset = "0xAF208C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF208C", Offset = "0xAF208C")]
		public float flipDeadzone;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF20E0", Offset = "0xAF20E0")]
		public float flipDelay;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2118", Offset = "0xAF2118")]
		public bool flipBlink;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2150", Offset = "0xAF2150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2150", Offset = "0xAF2150")]
		public HorizontalAxisMovement horizontalAxisMovement;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF21B0", Offset = "0xAF21B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF21B0", Offset = "0xAF21B0")]
		public float horizontalDeadzone;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2204", Offset = "0xAF2204")]
		public float horizontalMultiplier;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF223C", Offset = "0xAF223C")]
		public float snapRotateDelay;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2274", Offset = "0xAF2274")]
		public float snapRotateAngle;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF22AC", Offset = "0xAF22AC")]
		public float rotateMaxSpeed;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF22E4", Offset = "0xAF22E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF22E4", Offset = "0xAF22E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF22E4", Offset = "0xAF22E4")]
		public float blinkDurationMultiplier;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2360", Offset = "0xAF2360")]
		public float slideMaxSpeed;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2398", Offset = "0xAF2398")]
		public float slideDeceleration;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF23D0", Offset = "0xAF23D0")]
		public float warpDelay;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2408", Offset = "0xAF2408")]
		public float warpRange;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2440", Offset = "0xAF2440")]
		public float warpMaxAltitudeChange;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject controllerLeftHand;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject controllerRightHand;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform playArea;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 touchAxis;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float movementSpeed;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float strafeSpeed;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float blinkFadeInTime;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lastWarp;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastFlip;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastSnapRotate;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool multiplyMovement;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CapsuleCollider bodyCollider;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform headset;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool leftSubscribed;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool rightSubscribed;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ControllerInteractionEventHandler touchpadAxisChanged;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ControllerInteractionEventHandler touchpadUntouched;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool wasFalling;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool previousLeftControllerState;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool previousRightControllerState;

		[Token(Token = "0x140000A7")]
		public event TouchpadMovementAxisEventHandler AxisMovement
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xDE80D4", Offset = "0xDE80D4", VA = "0xDE80D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04580", Offset = "0xB04580")]
			add
			{
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xDE8178", Offset = "0xDE8178", VA = "0xDE8178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04590", Offset = "0xB04590")]
			remove
			{
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xDE821C", Offset = "0xDE821C", VA = "0xDE821C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xDE8294", Offset = "0xDE8294", VA = "0xDE8294", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xDE8800", Offset = "0xDE8800", VA = "0xDE8800", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xDE884C", Offset = "0xDE884C", VA = "0xDE884C", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xDE88C4", Offset = "0xDE88C4", VA = "0xDE88C4", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xDE89A8", Offset = "0xDE89A8", VA = "0xDE89A8", Slot = "9")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xDE9770", Offset = "0xDE9770", VA = "0xDE9770", Slot = "10")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xDE98C4", Offset = "0xDE98C4", VA = "0xDE98C4", Slot = "11")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xDE9900", Offset = "0xDE9900", VA = "0xDE9900")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xDE9B18", Offset = "0xDE9B18", VA = "0xDE9B18")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xDE9B88", Offset = "0xDE9B88", VA = "0xDE9B88")]
		private void OnAxisMovement(AxisMovementType givenMovementType, AxisMovementDirection givenDirection)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xDE8C84", Offset = "0xDE8C84", VA = "0xDE8C84")]
		private void CalculateSpeed(bool horizontal, ref float speed, float inputValue)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xDE9BB0", Offset = "0xDE9BB0", VA = "0xDE9BB0")]
		private void Decelerate(ref float speed)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xDE94D8", Offset = "0xDE94D8", VA = "0xDE94D8")]
		private void Move()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xDE8EBC", Offset = "0xDE8EBC", VA = "0xDE8EBC")]
		private void Warp(bool blink = false, bool horizontal = false)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xDE9CBC", Offset = "0xDE9CBC", VA = "0xDE9CBC")]
		private void RotateAroundPlayer(float angle)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xDE8CC8", Offset = "0xDE8CC8", VA = "0xDE8CC8")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xDE8D28", Offset = "0xDE8D28", VA = "0xDE8D28")]
		private void SnapRotate(bool blink = false, bool flipDirection = false)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xDE9E04", Offset = "0xDE9E04", VA = "0xDE9E04")]
		private void ReleaseBlink()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xDE8748", Offset = "0xDE8748", VA = "0xDE8748")]
		private void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xDE9EB4", Offset = "0xDE9EB4", VA = "0xDE9EB4")]
		private void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xDEA028", Offset = "0xDEA028", VA = "0xDEA028")]
		public VRTK_TouchpadMovement()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE3F64", Offset = "0xAE3F64")]
	public class VRTK_TouchpadWalking : MonoBehaviour
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2478", Offset = "0xAF2478")]
		public bool leftController;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF24B0", Offset = "0xAF24B0")]
		public bool rightController;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF24E8", Offset = "0xAF24E8")]
		public float maxWalkSpeed;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2520", Offset = "0xAF2520")]
		public float deceleration;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2558", Offset = "0xAF2558")]
		public VRTK_ControllerEvents.ButtonAlias moveOnButtonPress;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2590", Offset = "0xAF2590")]
		public VRTK_DeviceFinder.Devices deviceForDirection;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF25C8", Offset = "0xAF25C8")]
		public VRTK_ControllerEvents.ButtonAlias speedMultiplierButton;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2600", Offset = "0xAF2600")]
		public float speedMultiplier;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject controllerLeftHand;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject controllerRightHand;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform playArea;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 touchAxis;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float movementSpeed;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float strafeSpeed;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool leftSubscribed;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rightSubscribed;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ControllerInteractionEventHandler touchpadAxisChanged;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ControllerInteractionEventHandler touchpadUntouched;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool multiplySpeed;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool wasFalling;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool previousLeftControllerState;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool previousRightControllerState;

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xDEA090", Offset = "0xDEA090", VA = "0xDEA090", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xDEA108", Offset = "0xDEA108", VA = "0xDEA108", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xDEA41C", Offset = "0xDEA41C", VA = "0xDEA41C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xDEA468", Offset = "0xDEA468", VA = "0xDEA468", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xDEA4E0", Offset = "0xDEA4E0", VA = "0xDEA4E0", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xDEA5C4", Offset = "0xDEA5C4", VA = "0xDEA5C4", Slot = "9")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xDEA8D8", Offset = "0xDEA8D8", VA = "0xDEA8D8", Slot = "10")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xDEAA2C", Offset = "0xDEAA2C", VA = "0xDEAA2C", Slot = "11")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xDEAA68", Offset = "0xDEAA68", VA = "0xDEAA68")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xDEAB60", Offset = "0xDEAB60", VA = "0xDEAB60")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xDEA610", Offset = "0xDEA610", VA = "0xDEA610")]
		private void CalculateSpeed(ref float speed, float inputValue)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xDEABD0", Offset = "0xDEABD0", VA = "0xDEABD0")]
		private void Decelerate(ref float speed)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xDEA640", Offset = "0xDEA640", VA = "0xDEA640")]
		private void Move()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xDEA364", Offset = "0xDEA364", VA = "0xDEA364")]
		private void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xDEACE8", Offset = "0xDEACE8", VA = "0xDEACE8")]
		private void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xDEAE5C", Offset = "0xDEAE5C", VA = "0xDEAE5C")]
		public VRTK_TouchpadWalking()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class VRTK_BasePointerRenderer : MonoBehaviour
	{
		[Token(Token = "0x20005BA")]
		public enum VisibilityStates
		{
			[Token(Token = "0x4002A39")]
			OnWhenActive,
			[Token(Token = "0x4002A3A")]
			AlwaysOn,
			[Token(Token = "0x4002A3B")]
			AlwaysOff
		}

		[Serializable]
		[Token(Token = "0x20005BB")]
		public sealed class PointerOriginSmoothingSettings
		{
			[Token(Token = "0x4002A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8E88", Offset = "0xAF8E88")]
			public bool smoothsPosition;

			[Token(Token = "0x4002A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8EC0", Offset = "0xAF8EC0")]
			public float maxAllowedPerFrameDistanceDifference;

			[Token(Token = "0x4002A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8EF8", Offset = "0xAF8EF8")]
			public bool smoothsRotation;

			[Token(Token = "0x4002A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8F30", Offset = "0xAF8F30")]
			public float maxAllowedPerFrameAngleDifference;

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xF9B29C", Offset = "0xF9B29C", VA = "0xF9B29C")]
			public PointerOriginSmoothingSettings()
			{
			}
		}

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2638", Offset = "0xAF2638")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2638", Offset = "0xAF2638")]
		public VRTK_PlayAreaCursor playareaCursor;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2698", Offset = "0xAF2698")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF26D0", Offset = "0xAF26D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF26D0", Offset = "0xAF26D0")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2730", Offset = "0xAF2730")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF2730", Offset = "0xAF2730")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2790", Offset = "0xAF2790")]
		public PointerOriginSmoothingSettings pointerOriginSmoothingSettings;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF27C8", Offset = "0xAF27C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF27C8", Offset = "0xAF27C8")]
		public Color validCollisionColor;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2828", Offset = "0xAF2828")]
		public Color invalidCollisionColor;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2860", Offset = "0xAF2860")]
		public VisibilityStates tracerVisibility;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2898", Offset = "0xAF2898")]
		public VisibilityStates cursorVisibility;

		[Token(Token = "0x40010A4")]
		protected const float BEAM_ADJUST_OFFSET = 0.0001f;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_Pointer controllingPointer;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected RaycastHit destinationHit;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Material defaultMaterial;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Color previousColor;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Color currentColor;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_PolicyList invalidListPolicy;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject objectInteractor;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject objectInteractorAttachPoint;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected GameObject pointerOriginTransformFollowGameObject;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_TransformFollow pointerOriginTransformFollow;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected VRTK_InteractGrab controllerGrabScript;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Rigidbody savedAttachPoint;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool attachedToInteractorAttachPoint;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float savedBeamLength;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected List<GameObject> makeRendererVisible;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected bool tracerVisible;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		protected bool cursorVisible;

		[Token(Token = "0x60012F0")]
		public abstract GameObject[] GetPointerObjects();

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xF98784", Offset = "0xF98784", VA = "0xF98784", Slot = "5")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, float givenNavMeshCheckDistance, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xF9891C", Offset = "0xF9891C", VA = "0xF9891C", Slot = "6")]
		public virtual void ResetPointerObjects()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xF98958", Offset = "0xF98958", VA = "0xF98958", Slot = "7")]
		public virtual void Toggle(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xF98A8C", Offset = "0xF98A8C", VA = "0xF98A8C", Slot = "8")]
		public virtual void ToggleInteraction(bool state)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xF98AA0", Offset = "0xF98AA0", VA = "0xF98AA0", Slot = "9")]
		public virtual void UpdateRenderer()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xF98BBC", Offset = "0xF98BBC", VA = "0xF98BBC", Slot = "10")]
		public virtual RaycastHit GetDestinationHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xF98BD0", Offset = "0xF98BD0", VA = "0xF98BD0", Slot = "11")]
		public virtual bool ValidPlayArea()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xF98C88", Offset = "0xF98C88", VA = "0xF98C88", Slot = "12")]
		public virtual bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xF98CD8", Offset = "0xF98CD8", VA = "0xF98CD8", Slot = "13")]
		public virtual bool IsTracerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xF98CFC", Offset = "0xF98CFC", VA = "0xF98CFC", Slot = "14")]
		public virtual bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xF98D20", Offset = "0xF98D20", VA = "0xF98D20", Slot = "15")]
		public virtual bool IsValidCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xF98FCC", Offset = "0xF98FCC", VA = "0xF98FCC", Slot = "16")]
		public virtual GameObject GetObjectInteractor()
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		protected abstract void CreatePointerObjects();

		[Token(Token = "0x60012FE")]
		protected abstract void DestroyPointerObjects();

		[Token(Token = "0x60012FF")]
		protected abstract void ToggleRenderer(bool pointerState, bool actualState);

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xF98FD4", Offset = "0xF98FD4", VA = "0xF98FD4", Slot = "20")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xF990B8", Offset = "0xF990B8", VA = "0xF990B8", Slot = "21")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF9919C", Offset = "0xF9919C", VA = "0xF9919C", Slot = "22")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xF9924C", Offset = "0xF9924C", VA = "0xF9924C", Slot = "23")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF99348", Offset = "0xF99348", VA = "0xF99348", Slot = "24")]
		protected virtual void ToggleObjectInteraction(bool state)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xF99544", Offset = "0xF99544", VA = "0xF99544", Slot = "25")]
		protected virtual void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xF99590", Offset = "0xF99590", VA = "0xF99590", Slot = "26")]
		protected virtual void UpdatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xF9978C", Offset = "0xF9978C", VA = "0xF9978C")]
		protected Transform GetOrigin(bool smoothed = true)
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xF99868", Offset = "0xF99868", VA = "0xF99868", Slot = "27")]
		protected virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xF998C0", Offset = "0xF998C0", VA = "0xF998C0", Slot = "28")]
		protected virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xF99918", Offset = "0xF99918", VA = "0xF99918", Slot = "29")]
		protected virtual bool ValidDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xF99A80", Offset = "0xF99A80", VA = "0xF99A80", Slot = "30")]
		protected virtual void ToggleElement(GameObject givenObject, bool pointerState, bool actualState, VisibilityStates givenVisibility, ref bool currentVisible)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xF99BE8", Offset = "0xF99BE8", VA = "0xF99BE8", Slot = "31")]
		protected virtual void AddVisibleRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xF99C80", Offset = "0xF99C80", VA = "0xF99C80", Slot = "32")]
		protected virtual void MakeRenderersVisible()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xF99D68", Offset = "0xF99D68", VA = "0xF99D68", Slot = "33")]
		protected virtual void ToggleRendererVisibility(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xF99E5C", Offset = "0xF99E5C", VA = "0xF99E5C", Slot = "34")]
		protected virtual void SetupMaterialRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xF99F38", Offset = "0xF99F38", VA = "0xF99F38", Slot = "35")]
		protected virtual void ChangeColor(Color givenColor)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xF9A124", Offset = "0xF9A124", VA = "0xF9A124", Slot = "36")]
		protected virtual void EmitStateEvent()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xF9A1E8", Offset = "0xF9A1E8", VA = "0xF9A1E8", Slot = "37")]
		protected virtual void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xF9A350", Offset = "0xF9A350", VA = "0xF9A350", Slot = "38")]
		protected virtual void ChangeMaterialColor(GameObject givenObject, Color givenColor)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xF9A58C", Offset = "0xF9A58C", VA = "0xF9A58C", Slot = "39")]
		protected virtual void CreateObjectInteractor()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xF9AB18", Offset = "0xF9AB18", VA = "0xF9AB18", Slot = "40")]
		protected virtual void ScaleObjectInteractor(Vector3 scaleAmount)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF9ABDC", Offset = "0xF9ABDC", VA = "0xF9ABDC", Slot = "41")]
		protected virtual void CreatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF9AD44", Offset = "0xF9AD44", VA = "0xF9AD44", Slot = "42")]
		protected virtual float OverrideBeamLength(float currentLength)
		{
			return default(float);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF9AEFC", Offset = "0xF9AEFC", VA = "0xF9AEFC", Slot = "43")]
		protected virtual void UpdateDependencies(Vector3 location)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF9AFC4", Offset = "0xF9AFC4", VA = "0xF9AFC4", Slot = "44")]
		protected virtual void SetupDirectionIndicator()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xF9B0DC", Offset = "0xF9B0DC", VA = "0xF9B0DC", Slot = "45")]
		protected virtual void UpdateDirectionIndicator()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xF9B1F0", Offset = "0xF9B1F0", VA = "0xF9B1F0")]
		protected VRTK_BasePointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3F9C", Offset = "0xAE3F9C")]
	public class VRTK_BezierPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF28D0", Offset = "0xAF28D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF28D0", Offset = "0xAF28D0")]
		public Vector2 maximumLength;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2930", Offset = "0xAF2930")]
		public int tracerDensity;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2968", Offset = "0xAF2968")]
		public float cursorRadius;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF29A0", Offset = "0xAF29A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF29A0", Offset = "0xAF29A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF29A0", Offset = "0xAF29A0")]
		public float heightLimitAngle;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2A1C", Offset = "0xAF2A1C")]
		public float curveOffset;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2A54", Offset = "0xAF2A54")]
		public bool rescaleTracer;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2A8C", Offset = "0xAF2A8C")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2AC4", Offset = "0xAF2AC4")]
		public int collisionCheckFrequency;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2AFC", Offset = "0xAF2AFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2AFC", Offset = "0xAF2AFC")]
		public GameObject customTracer;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2B5C", Offset = "0xAF2B5C")]
		public GameObject customCursor;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2B94", Offset = "0xAF2B94")]
		public GameObject validLocationObject;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2BCC", Offset = "0xAF2BCC")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected VRTK_CurveGenerator actualTracer;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected GameObject actualContainer;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject actualCursor;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected GameObject actualValidLocationObject;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected GameObject actualInvalidLocationObject;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected Vector3 fixedForwardBeamForward;

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF9EE90", Offset = "0xF9EE90", VA = "0xF9EE90", Slot = "9")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF9EFC0", Offset = "0xF9EFC0", VA = "0xF9EFC0", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF9F098", Offset = "0xF9F098", VA = "0xF9F098", Slot = "19")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xF9F1D4", Offset = "0xF9F1D4", VA = "0xF9F1D4", Slot = "17")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xF9F3E0", Offset = "0xF9F3E0", VA = "0xF9F3E0", Slot = "18")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xF9F544", Offset = "0xF9F544", VA = "0xF9F544", Slot = "25")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xF9F704", Offset = "0xF9F704", VA = "0xF9F704", Slot = "37")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xF9F768", Offset = "0xF9F768", VA = "0xF9F768", Slot = "46")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xF9F810", Offset = "0xF9F810", VA = "0xF9F810", Slot = "47")]
		protected virtual GameObject CreateCursorObject()
		{
			return null;
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xF9F958", Offset = "0xF9F958", VA = "0xF9F958", Slot = "48")]
		protected virtual void CreateCursorLocations()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xF9FD0C", Offset = "0xF9FD0C", VA = "0xF9FD0C", Slot = "49")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xF9FF08", Offset = "0xF9FF08", VA = "0xF9FF08", Slot = "50")]
		protected virtual Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xFA0240", Offset = "0xFA0240", VA = "0xFA0240", Slot = "51")]
		protected virtual Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xFA055C", Offset = "0xFA055C", VA = "0xFA055C", Slot = "52")]
		protected virtual void AdjustForEarlyCollisions(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xFA0AB8", Offset = "0xFA0AB8", VA = "0xFA0AB8", Slot = "53")]
		protected virtual void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xFA0D48", Offset = "0xFA0D48", VA = "0xFA0D48", Slot = "54")]
		protected virtual void TogglePointerCursor(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xFA0D74", Offset = "0xFA0D74", VA = "0xFA0D74", Slot = "55")]
		protected virtual void TogglePointerTracer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xFA0E3C", Offset = "0xFA0E3C", VA = "0xFA0E3C", Slot = "56")]
		protected virtual void SetPointerCursor()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xFA11F8", Offset = "0xFA11F8", VA = "0xFA11F8")]
		public VRTK_BezierPointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE3FD4", Offset = "0xAE3FD4")]
	public class VRTK_StraightPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2C04", Offset = "0xAF2C04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2C04", Offset = "0xAF2C04")]
		public float maximumLength;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2C64", Offset = "0xAF2C64")]
		public float scaleFactor;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2C9C", Offset = "0xAF2C9C")]
		public float cursorScaleMultiplier;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2CD4", Offset = "0xAF2CD4")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2D0C", Offset = "0xAF2D0C")]
		public bool cursorDistanceRescale;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2D44", Offset = "0xAF2D44")]
		public Vector3 maximumCursorScale;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2D7C", Offset = "0xAF2D7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2D7C", Offset = "0xAF2D7C")]
		public GameObject customTracer;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2DDC", Offset = "0xAF2DDC")]
		public GameObject customCursor;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected GameObject actualContainer;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected GameObject actualTracer;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected GameObject actualCursor;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected Vector3 cursorOriginalScale;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xDE52EC", Offset = "0xDE52EC", VA = "0xDE52EC", Slot = "9")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xDE53D8", Offset = "0xDE53D8", VA = "0xDE53D8", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xDE54DC", Offset = "0xDE54DC", VA = "0xDE54DC", Slot = "19")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xDE5554", Offset = "0xDE5554", VA = "0xDE5554", Slot = "17")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xDE579C", Offset = "0xDE579C", VA = "0xDE579C", Slot = "18")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xDE5850", Offset = "0xDE5850", VA = "0xDE5850", Slot = "37")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xDE58E0", Offset = "0xDE58E0", VA = "0xDE58E0", Slot = "25")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xDE5AA4", Offset = "0xDE5AA4", VA = "0xDE5AA4", Slot = "46")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xDE5D3C", Offset = "0xDE5D3C", VA = "0xDE5D3C", Slot = "47")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xDE6060", Offset = "0xDE6060", VA = "0xDE6060", Slot = "48")]
		protected virtual void CheckRayMiss(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xDE6208", Offset = "0xDE6208", VA = "0xDE6208", Slot = "49")]
		protected virtual void CheckRayHit(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xDE629C", Offset = "0xDE629C", VA = "0xDE629C", Slot = "50")]
		protected virtual float CastRayForward()
		{
			return default(float);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xDE645C", Offset = "0xDE645C", VA = "0xDE645C", Slot = "51")]
		protected virtual void SetPointerAppearance(float tracerLength)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xDE6964", Offset = "0xDE6964", VA = "0xDE6964")]
		public VRTK_StraightPointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE400C", Offset = "0xAE400C")]
	public abstract class VRTK_BasePointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x20005BC")]
		public enum pointerVisibilityStates
		{
			[Token(Token = "0x4002A41")]
			On_When_Active,
			[Token(Token = "0x4002A42")]
			Always_On,
			[Token(Token = "0x4002A43")]
			Always_Off
		}

		[Serializable]
		[Token(Token = "0x20005BD")]
		public sealed class PointerOriginSmoothingSettings
		{
			[Token(Token = "0x4002A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8F68", Offset = "0xAF8F68")]
			public bool smoothsPosition;

			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8FA0", Offset = "0xAF8FA0")]
			public float maxAllowedPerFrameDistanceDifference;

			[Token(Token = "0x4002A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF8FD8", Offset = "0xAF8FD8")]
			public bool smoothsRotation;

			[Token(Token = "0x4002A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF9010", Offset = "0xAF9010")]
			public float maxAllowedPerFrameAngleDifference;

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xF98768", Offset = "0xF98768", VA = "0xF98768")]
			public PointerOriginSmoothingSettings()
			{
			}
		}

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF2E14", Offset = "0xAF2E14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2E14", Offset = "0xAF2E14")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2E7C", Offset = "0xAF2E7C")]
		public Transform pointerOriginTransform;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2EB4", Offset = "0xAF2EB4")]
		public PointerOriginSmoothingSettings pointerOriginSmoothingSettings;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2EEC", Offset = "0xAF2EEC")]
		public Material pointerMaterial;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2F24", Offset = "0xAF2F24")]
		public Color pointerHitColor;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2F5C", Offset = "0xAF2F5C")]
		public Color pointerMissColor;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2F94", Offset = "0xAF2F94")]
		public bool holdButtonToActivate;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF2FCC", Offset = "0xAF2FCC")]
		public bool interactWithObjects;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3004", Offset = "0xAF3004")]
		public bool grabToPointerTip;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF303C", Offset = "0xAF303C")]
		public float activateDelay;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3074", Offset = "0xAF3074")]
		public pointerVisibilityStates pointerVisibility;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF30AC", Offset = "0xAF30AC")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 destinationPosition;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float pointerContactDistance;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Transform pointerContactTarget;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected RaycastHit pointerContactRaycastHit;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected VRTK_PlayAreaCursor playAreaCursor;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Color currentPointerColor;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected GameObject objectInteractor;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected GameObject objectInteractorAttachPoint;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isActive;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		private bool destinationSetActive;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float activateDelayTimer;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int beamEnabledState;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private VRTK_InteractableObject interactableObject;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody savedAttachPoint;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool attachedToInteractorAttachPoint;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float savedBeamLength;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private VRTK_InteractGrab controllerGrabScript;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject pointerOriginTransformFollowGameObject;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private VRTK_TransformFollow pointerOriginTransformFollow;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Transform originalPointerOriginTransform;

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xF95EF0", Offset = "0xF95EF0", VA = "0xF95EF0", Slot = "15")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xF95EF8", Offset = "0xF95EF8", VA = "0xF95EF8", Slot = "16")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xF95F28", Offset = "0xF95F28", VA = "0xF95F28", Slot = "17")]
		public virtual void ToggleBeam(bool state)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xF961D4", Offset = "0xF961D4", VA = "0xF961D4", Slot = "18")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xF9626C", Offset = "0xF9626C", VA = "0xF9626C", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xF96508", Offset = "0xF96508", VA = "0xF96508", Slot = "19")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xF96724", Offset = "0xF96724", VA = "0xF96724", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xF968C0", Offset = "0xF968C0", VA = "0xF968C0", Slot = "20")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xF96938", Offset = "0xF96938", VA = "0xF96938", Slot = "21")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xF9693C", Offset = "0xF9693C", VA = "0xF9693C", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xF96A14", Offset = "0xF96A14", VA = "0xF96A14", Slot = "23")]
		protected virtual void AliasRegistration(bool state)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xF96BE8", Offset = "0xF96BE8", VA = "0xF96BE8", Slot = "24")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xF96C98", Offset = "0xF96C98", VA = "0xF96C98")]
		protected Transform GetOrigin(bool smoothed = true)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xF96D6C", Offset = "0xF96D6C", VA = "0xF96D6C", Slot = "25")]
		protected virtual void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF96DAC", Offset = "0xF96DAC", VA = "0xF96DAC", Slot = "26")]
		protected virtual void UpdatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xF96EC0", Offset = "0xF96EC0", VA = "0xF96EC0", Slot = "27")]
		protected virtual void InitPointer()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xF96EC4", Offset = "0xF96EC4", VA = "0xF96EC4", Slot = "28")]
		protected virtual void UpdateDependencies(Vector3 location)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF96F88", Offset = "0xF96F88", VA = "0xF96F88", Slot = "29")]
		protected virtual void EnablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF96F90", Offset = "0xF96F90", VA = "0xF96F90", Slot = "30")]
		protected virtual void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF96F98", Offset = "0xF96F98", VA = "0xF96F98", Slot = "31")]
		protected virtual void SetPointerDestination(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF96FA8", Offset = "0xF96FA8", VA = "0xF96FA8", Slot = "32")]
		protected virtual void PointerIn()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xF97230", Offset = "0xF97230", VA = "0xF97230", Slot = "33")]
		protected virtual void PointerOut()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xF973E4", Offset = "0xF973E4", VA = "0xF973E4", Slot = "34")]
		protected virtual void PointerSet()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xF977A0", Offset = "0xF977A0", VA = "0xF977A0", Slot = "35")]
		protected virtual void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xF978E4", Offset = "0xF978E4", VA = "0xF978E4", Slot = "36")]
		protected virtual void ToggleObjectInteraction(bool state)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xF97A7C", Offset = "0xF97A7C", VA = "0xF97A7C", Slot = "37")]
		protected virtual void ChangeMaterialColor(GameObject obj, Color color)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF97C88", Offset = "0xF97C88", VA = "0xF97C88", Slot = "38")]
		protected virtual void SetPointerMaterial(Color color)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xF97D58", Offset = "0xF97D58", VA = "0xF97D58")]
		protected void UpdatePointerMaterial(Color color)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xF97E64", Offset = "0xF97E64", VA = "0xF97E64", Slot = "39")]
		protected virtual bool ValidDestination(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xF97FA8", Offset = "0xF97FA8", VA = "0xF97FA8", Slot = "40")]
		protected virtual void CreateObjectInteractor()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xF983FC", Offset = "0xF983FC", VA = "0xF983FC", Slot = "41")]
		protected virtual void CreatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xF984F0", Offset = "0xF984F0", VA = "0xF984F0", Slot = "42")]
		protected virtual float OverrideBeamLength(float currentLength)
		{
			return default(float);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xF9650C", Offset = "0xF9650C", VA = "0xF9650C")]
		private void SetupController()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xF96438", Offset = "0xF96438", VA = "0xF96438")]
		private void AttemptSetController()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xF9768C", Offset = "0xF9768C", VA = "0xF9768C")]
		private bool InvalidConstantBeam()
		{
			return default(bool);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xF976DC", Offset = "0xF976DC", VA = "0xF976DC")]
		private bool PointerActivatesUseAction(VRTK_InteractableObject io)
		{
			return default(bool);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xF970F0", Offset = "0xF970F0", VA = "0xF970F0")]
		private void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xF97374", Offset = "0xF97374", VA = "0xF97374")]
		private void StopUseAction()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xF96014", Offset = "0xF96014", VA = "0xF96014")]
		private void TurnOnBeam(VRTK_ControllerReference givenControllerReference)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xF96178", Offset = "0xF96178", VA = "0xF96178")]
		private void TurnOffBeam(VRTK_ControllerReference givenControllerReference)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xF96808", Offset = "0xF96808", VA = "0xF96808")]
		private void DisableBeam()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xF98668", Offset = "0xF98668", VA = "0xF98668")]
		protected VRTK_BasePointer()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE4044", Offset = "0xAE4044")]
	public class VRTK_BezierPointer : VRTK_BasePointer
	{
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF30E4", Offset = "0xAF30E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF30E4", Offset = "0xAF30E4")]
		public float pointerLength;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF314C", Offset = "0xAF314C")]
		public int pointerDensity;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3184", Offset = "0xAF3184")]
		public int collisionCheckFrequency;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF31BC", Offset = "0xAF31BC")]
		public float beamCurveOffset;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF31F4", Offset = "0xAF31F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF31F4", Offset = "0xAF31F4")]
		public float beamHeightLimitAngle;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF324C", Offset = "0xAF324C")]
		public bool rescalePointerTracer;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3284", Offset = "0xAF3284")]
		public bool showPointerCursor;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF32BC", Offset = "0xAF32BC")]
		public float pointerCursorRadius;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF32F4", Offset = "0xAF32F4")]
		public bool pointerCursorMatchTargetRotation;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF332C", Offset = "0xAF332C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF332C", Offset = "0xAF332C")]
		public GameObject customPointerTracer;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3394", Offset = "0xAF3394")]
		public GameObject customPointerCursor;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF33CC", Offset = "0xAF33CC")]
		public GameObject validTeleportLocationObject;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private GameObject pointerCursor;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private GameObject curvedBeamContainer;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private VRTK_CurveGenerator curvedBeam;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GameObject validTeleportLocationInstance;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool beamActive;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 fixedForwardBeamForward;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 contactNormal;

		[Token(Token = "0x400110A")]
		private const float BEAM_ADJUST_OFFSET = 1E-05f;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xF9D608", Offset = "0xF9D608", VA = "0xF9D608", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xF9D654", Offset = "0xF9D654", VA = "0xF9D654", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xF9D7C4", Offset = "0xF9D7C4", VA = "0xF9D7C4", Slot = "21")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xF9E3C8", Offset = "0xF9E3C8", VA = "0xF9E3C8", Slot = "27")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xF9E880", Offset = "0xF9E880", VA = "0xF9E880", Slot = "38")]
		protected override void SetPointerMaterial(Color color)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xF9E8D8", Offset = "0xF9E8D8", VA = "0xF9E8D8", Slot = "35")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xF9E96C", Offset = "0xF9E96C", VA = "0xF9E96C", Slot = "30")]
		protected override void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xF9E900", Offset = "0xF9E900", VA = "0xF9E900")]
		private void ToggleBezierBeam(bool state)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xF9E738", Offset = "0xF9E738", VA = "0xF9E738")]
		private GameObject CreateCursor()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xF9E998", Offset = "0xF9E998", VA = "0xF9E998")]
		private void TogglePointerCursor(bool state)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xF9D830", Offset = "0xF9D830", VA = "0xF9D830")]
		private Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xF9DB80", Offset = "0xF9DB80", VA = "0xF9DB80")]
		private Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xF9E9F8", Offset = "0xF9E9F8", VA = "0xF9E9F8")]
		private void SetPointerCursor(Vector3 cursorPosition)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xF9DEA0", Offset = "0xF9DEA0", VA = "0xF9DEA0")]
		private void AdjustForEarlyCollisions(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xF9EC74", Offset = "0xF9EC74", VA = "0xF9EC74")]
		private void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xF9EE60", Offset = "0xF9EE60", VA = "0xF9EE60")]
		public VRTK_BezierPointer()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit raycastHit;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 destinationPosition;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion? destinationRotation;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool forceDestinationPosition;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool enableTeleport;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF3404", Offset = "0xAF3404")]
		public uint controllerIndex;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool setParent;
	}
	[Token(Token = "0x200024A")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x200024B")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF343C", Offset = "0xAF343C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF343C", Offset = "0xAF343C")]
		public bool enableTeleport;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF34A4", Offset = "0xAF34A4")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		protected bool forceHoverOnRepeatedEnter;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Collider existingCollider;

		[Token(Token = "0x140000A8")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x14A6B98", Offset = "0x14A6B98", VA = "0x14A6B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045A0", Offset = "0xB045A0")]
			add
			{
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x14A6C3C", Offset = "0x14A6C3C", VA = "0x14A6C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045B0", Offset = "0xB045B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x14A6CE0", Offset = "0x14A6CE0", VA = "0x14A6CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045C0", Offset = "0xB045C0")]
			add
			{
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x14A6D84", Offset = "0x14A6D84", VA = "0x14A6D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045D0", Offset = "0xB045D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public event DestinationMarkerEventHandler DestinationMarkerHover
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x14A6E28", Offset = "0x14A6E28", VA = "0x14A6E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045E0", Offset = "0xB045E0")]
			add
			{
			}
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x14A6ECC", Offset = "0x14A6ECC", VA = "0x14A6ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB045F0", Offset = "0xB045F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x14A6F70", Offset = "0x14A6F70", VA = "0x14A6F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04600", Offset = "0xB04600")]
			add
			{
			}
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x14A7014", Offset = "0x14A7014", VA = "0x14A7014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04610", Offset = "0xB04610")]
			remove
			{
			}
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x14A70B8", Offset = "0x14A70B8", VA = "0x14A70B8", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x14A7250", Offset = "0x14A7250", VA = "0x14A7250", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x14A72A0", Offset = "0x14A72A0", VA = "0x14A72A0", Slot = "6")]
		public virtual void OnDestinationMarkerHover(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x14A72EC", Offset = "0x14A72EC", VA = "0x14A72EC", Slot = "7")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x14A7338", Offset = "0x14A7338", VA = "0x14A7338", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB04620", Offset = "0xB04620")]
		public virtual void SetInvalidTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x14A7340", Offset = "0x14A7340", VA = "0x14A7340", Slot = "9")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x14A7348", Offset = "0x14A7348", VA = "0x14A7348", Slot = "10")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x14A7354", Offset = "0x14A7354", VA = "0x14A7354", Slot = "11")]
		public virtual void SetForceHoverOnRepeatedEnter(bool state)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x14A7360", Offset = "0x14A7360", VA = "0x14A7360", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x14A73E4", Offset = "0x14A73E4", VA = "0x14A73E4", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x14A7468", Offset = "0x14A7468", VA = "0x14A7468", Slot = "14")]
		protected virtual DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, RaycastHit raycastHit, Vector3 position, VRTK_ControllerReference controllerReference, bool forceDestinationPosition = false, [Optional] Quaternion? rotation, bool setParent = false)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x14A75E8", Offset = "0x14A75E8", VA = "0x14A75E8")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public struct PlayAreaCursorEventArgs
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;
	}
	[Token(Token = "0x200024D")]
	public delegate void PlayAreaCursorEventHandler(object sender, PlayAreaCursorEventArgs e);
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE407C", Offset = "0xAE407C")]
	public class VRTK_PlayAreaCursor : MonoBehaviour
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF351C", Offset = "0xAF351C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF351C", Offset = "0xAF351C")]
		public bool usePointerColor;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF357C", Offset = "0xAF357C")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF35B4", Offset = "0xAF35B4")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF35EC", Offset = "0xAF35EC")]
		public bool headsetOutOfBoundsIsCollision;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3624", Offset = "0xAF3624")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF365C", Offset = "0xAF365C")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3694", Offset = "0xAF3694")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3694", Offset = "0xAF3694")]
		public GameObject validLocationObject;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF36F4", Offset = "0xAF36F4")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		protected bool headsetOutOfBounds;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform playArea;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject playAreaCursor;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform headset;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Renderer[] boundaryRenderers;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject playAreaCursorValidChild;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject playAreaCursorInvalidChild;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int btmRightInner;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int btmLeftInner;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int topLeftInner;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int topRightInner;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int btmRightOuter;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int btmLeftOuter;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int topLeftOuter;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int topRightOuter;

		[Token(Token = "0x140000AC")]
		public event PlayAreaCursorEventHandler PlayAreaCursorStartCollision
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x1354E70", Offset = "0x1354E70", VA = "0x1354E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04658", Offset = "0xB04658")]
			add
			{
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x1354F14", Offset = "0x1354F14", VA = "0x1354F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04668", Offset = "0xB04668")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public event PlayAreaCursorEventHandler PlayAreaCursorEndCollision
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x1354FB8", Offset = "0x1354FB8", VA = "0x1354FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04678", Offset = "0xB04678")]
			add
			{
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x135505C", Offset = "0x135505C", VA = "0x135505C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04688", Offset = "0xB04688")]
			remove
			{
			}
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1355100", Offset = "0x1355100", VA = "0x1355100", Slot = "4")]
		public virtual void OnPlayAreaCursorStartCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1355120", Offset = "0x1355120", VA = "0x1355120", Slot = "5")]
		public virtual void OnPlayAreaCursorEndCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1355140", Offset = "0x1355140", VA = "0x1355140", Slot = "6")]
		public virtual bool HasCollided()
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1355160", Offset = "0x1355160", VA = "0x1355160", Slot = "7")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x135516C", Offset = "0x135516C", VA = "0x135516C", Slot = "8")]
		public virtual void SetPlayAreaCursorCollision(bool state, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x13551DC", Offset = "0x13551DC", VA = "0x13551DC", Slot = "9")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1355380", Offset = "0x1355380", VA = "0x1355380", Slot = "10")]
		public virtual void SetPlayAreaCursorTransform(Vector3 location)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1355680", Offset = "0x1355680", VA = "0x1355680", Slot = "11")]
		public virtual void ToggleState(bool state)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1355740", Offset = "0x1355740", VA = "0x1355740", Slot = "12")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x13557D8", Offset = "0x13557D8", VA = "0x13557D8", Slot = "13")]
		public virtual GameObject GetPlayAreaContainer()
		{
			return null;
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x13557E0", Offset = "0x13557E0", VA = "0x13557E0", Slot = "14")]
		public virtual void ToggleVisibility(bool state)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1355934", Offset = "0x1355934", VA = "0x1355934", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x13559AC", Offset = "0x13559AC", VA = "0x13559AC", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1355B24", Offset = "0x1355B24", VA = "0x1355B24", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1355BD8", Offset = "0x1355BD8", VA = "0x1355BD8", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1355C50", Offset = "0x1355C50", VA = "0x1355C50", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1355CA8", Offset = "0x1355CA8", VA = "0x1355CA8", Slot = "20")]
		protected virtual PlayAreaCursorEventArgs SetEventPayload(Collider collider)
		{
			return default(PlayAreaCursorEventArgs);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1355CB0", Offset = "0x1355CB0", VA = "0x1355CB0", Slot = "21")]
		protected virtual void EmitEvent(Collider collider)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1355D78", Offset = "0x1355D78", VA = "0x1355D78", Slot = "22")]
		protected virtual void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1356288", Offset = "0x1356288", VA = "0x1356288", Slot = "23")]
		protected virtual void SetCursorColor(GameObject cursorObject, Color color)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x13563FC", Offset = "0x13563FC", VA = "0x13563FC", Slot = "24")]
		protected virtual void ToggleValidPlayAreaState(bool state)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x13564F8", Offset = "0x13564F8", VA = "0x13564F8", Slot = "25")]
		protected virtual string GeneratePlayAreaCursorName()
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x13565F0", Offset = "0x13565F0", VA = "0x13565F0", Slot = "26")]
		protected virtual void GeneratePlayAreaCursorFromPrefab(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1356AB8", Offset = "0x1356AB8", VA = "0x1356AB8", Slot = "27")]
		protected virtual void GeneratePlayAreaCursor(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x13572F0", Offset = "0x13572F0", VA = "0x13572F0", Slot = "28")]
		protected virtual void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1357620", Offset = "0x1357620", VA = "0x1357620", Slot = "29")]
		protected virtual void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1357720", Offset = "0x1357720", VA = "0x1357720", Slot = "30")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1357870", Offset = "0x1357870", VA = "0x1357870")]
		public VRTK_PlayAreaCursor()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_PlayAreaCursor parent;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1354A20", Offset = "0x1354A20", VA = "0x1354A20", Slot = "4")]
		public virtual void SetParent(VRTK_PlayAreaCursor setParent)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1354A28", Offset = "0x1354A28", VA = "0x1354A28", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1354A30", Offset = "0x1354A30", VA = "0x1354A30", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1354AD0", Offset = "0x1354AD0", VA = "0x1354AD0", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1354BCC", Offset = "0x1354BCC", VA = "0x1354BCC", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1354C94", Offset = "0x1354C94", VA = "0x1354C94", Slot = "9")]
		protected virtual bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1354E68", Offset = "0x1354E68", VA = "0x1354E68")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE40B4", Offset = "0xAE40B4")]
	public class VRTK_Pointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF374C", Offset = "0xAF374C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF374C", Offset = "0xAF374C")]
		public VRTK_BasePointerRenderer pointerRenderer;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF37AC", Offset = "0xAF37AC")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF37E4", Offset = "0xAF37E4")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF381C", Offset = "0xAF381C")]
		public bool activateOnEnable;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3854", Offset = "0xAF3854")]
		public float activationDelay;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF388C", Offset = "0xAF388C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF388C", Offset = "0xAF388C")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF38EC", Offset = "0xAF38EC")]
		public bool selectOnPress;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3924", Offset = "0xAF3924")]
		public float selectionDelay;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF395C", Offset = "0xAF395C")]
		public float selectAfterHoverDuration;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3994", Offset = "0xAF3994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3994", Offset = "0xAF3994")]
		public bool interactWithObjects;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF39F4", Offset = "0xAF39F4")]
		public bool grabToPointerTip;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3A2C", Offset = "0xAF3A2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3A2C", Offset = "0xAF3A2C")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3A8C", Offset = "0xAF3A8C")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3AC4", Offset = "0xAF3AC4")]
		public Transform customOrigin;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedSelectionButton;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool currentSelectOnPress;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float activateDelayTimer;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float selectDelayTimer;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float hoverDurationTimer;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int currentActivationState;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool willDeactivate;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool wasActivated;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_InteractableObject pointerInteractableObject;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider currentCollider;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool canClickOnHover;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		protected bool activationButtonPressed;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		protected bool selectionButtonPressed;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		protected bool attemptControllerSetup;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Transform originalCustomOrigin;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform _previousTransform;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private VRTK_InteractableObject _previousIO;

		[Token(Token = "0x140000AE")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1359378", Offset = "0x1359378", VA = "0x1359378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04698", Offset = "0xB04698")]
			add
			{
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x135941C", Offset = "0x135941C", VA = "0x135941C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046A8", Offset = "0xB046A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AF")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x13594C0", Offset = "0x13594C0", VA = "0x13594C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046B8", Offset = "0xB046B8")]
			add
			{
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x1359564", Offset = "0x1359564", VA = "0x1359564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046C8", Offset = "0xB046C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x1359608", Offset = "0x1359608", VA = "0x1359608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046D8", Offset = "0xB046D8")]
			add
			{
			}
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x13596AC", Offset = "0x13596AC", VA = "0x13596AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046E8", Offset = "0xB046E8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B1")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x1359750", Offset = "0x1359750", VA = "0x1359750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB046F8", Offset = "0xB046F8")]
			add
			{
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x13597F4", Offset = "0x13597F4", VA = "0x13597F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04708", Offset = "0xB04708")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public event DestinationMarkerEventHandler PointerStateValid
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1359898", Offset = "0x1359898", VA = "0x1359898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04718", Offset = "0xB04718")]
			add
			{
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x135993C", Offset = "0x135993C", VA = "0x135993C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04728", Offset = "0xB04728")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B3")]
		public event DestinationMarkerEventHandler PointerStateInvalid
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x13599E0", Offset = "0x13599E0", VA = "0x13599E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04738", Offset = "0xB04738")]
			add
			{
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x1359A84", Offset = "0x1359A84", VA = "0x1359A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04748", Offset = "0xB04748")]
			remove
			{
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1359B28", Offset = "0x1359B28", VA = "0x1359B28", Slot = "15")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1359B64", Offset = "0x1359B64", VA = "0x1359B64", Slot = "16")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1359BA0", Offset = "0x1359BA0", VA = "0x1359BA0", Slot = "17")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1359BDC", Offset = "0x1359BDC", VA = "0x1359BDC", Slot = "18")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1359C18", Offset = "0x1359C18", VA = "0x1359C18", Slot = "19")]
		public virtual void OnPointerStateValid()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1359C84", Offset = "0x1359C84", VA = "0x1359C84", Slot = "20")]
		public virtual void OnPointerStateInvalid()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x1359CF0", Offset = "0x1359CF0", VA = "0x1359CF0", Slot = "21")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1359CF8", Offset = "0x1359CF8", VA = "0x1359CF8", Slot = "22")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1359D00", Offset = "0x1359D00", VA = "0x1359D00", Slot = "23")]
		public virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x135A064", Offset = "0x135A064", VA = "0x135A064", Slot = "24")]
		public virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x135A2B0", Offset = "0x135A2B0", VA = "0x135A2B0", Slot = "25")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x135A2E0", Offset = "0x135A2E0", VA = "0x135A2E0", Slot = "26")]
		public virtual bool CanSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x135A310", Offset = "0x135A310", VA = "0x135A310", Slot = "27")]
		public virtual bool IsPointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x135A320", Offset = "0x135A320", VA = "0x135A320", Slot = "28")]
		public virtual void ResetActivationTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x135A360", Offset = "0x135A360", VA = "0x135A360", Slot = "29")]
		public virtual void ResetSelectionTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x135A3A0", Offset = "0x135A3A0", VA = "0x135A3A0", Slot = "30")]
		public virtual void Toggle(bool state)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x135A4C0", Offset = "0x135A4C0", VA = "0x135A4C0", Slot = "31")]
		public virtual bool IsStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x135A518", Offset = "0x135A518", VA = "0x135A518", Slot = "32")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x135A598", Offset = "0x135A598", VA = "0x135A598", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x135A72C", Offset = "0x135A72C", VA = "0x135A72C", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x135A774", Offset = "0x135A774", VA = "0x135A774", Slot = "33")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x135A7EC", Offset = "0x135A7EC", VA = "0x135A7EC", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x135A83C", Offset = "0x135A83C", VA = "0x135A83C", Slot = "35")]
		protected virtual void SetDefaultValues()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x135A92C", Offset = "0x135A92C", VA = "0x135A92C", Slot = "36")]
		protected virtual void AttemptControllerSetup()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x135A9B8", Offset = "0x135A9B8", VA = "0x135A9B8", Slot = "37")]
		protected virtual void HandleEnabledPointer()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x135AA88", Offset = "0x135AA88", VA = "0x135AA88", Slot = "38")]
		protected virtual Quaternion? GetCursorRotation()
		{
			return null;
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x135AB7C", Offset = "0x135AB7C", VA = "0x135AB7C", Slot = "39")]
		protected virtual bool EnabledPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x135AC14", Offset = "0x135AC14", VA = "0x135AC14", Slot = "40")]
		protected virtual bool NoPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x135ACB0", Offset = "0x135ACB0", VA = "0x135ACB0", Slot = "41")]
		protected virtual bool CanActivateOnToggleButton(bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x135AD00", Offset = "0x135AD00", VA = "0x135AD00", Slot = "42")]
		protected virtual bool ControllerRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x135AD20", Offset = "0x135AD20", VA = "0x135AD20", Slot = "43")]
		protected virtual bool FindController()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x135AF5C", Offset = "0x135AF5C", VA = "0x135AF5C", Slot = "44")]
		protected virtual void GetInteractUse()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x135B084", Offset = "0x135B084", VA = "0x135B084", Slot = "45")]
		protected virtual void SetupController()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x135B140", Offset = "0x135B140", VA = "0x135B140", Slot = "46")]
		protected virtual void SetupRenderer()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x135B1A0", Offset = "0x135B1A0", VA = "0x135B1A0", Slot = "47")]
		protected virtual bool ButtonMappingIsUndefined(VRTK_ControllerEvents.ButtonAlias givenButton, VRTK_ControllerEvents.ButtonAlias givenSubscribedButton)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x135B1B8", Offset = "0x135B1B8", VA = "0x135B1B8", Slot = "48")]
		protected virtual void CheckButtonMappingConflict()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x135B294", Offset = "0x135B294", VA = "0x135B294", Slot = "49")]
		protected virtual void CheckButtonSubscriptions()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x135B3AC", Offset = "0x135B3AC", VA = "0x135B3AC", Slot = "50")]
		protected virtual void SubscribeActivationButton()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x135B564", Offset = "0x135B564", VA = "0x135B564", Slot = "51")]
		protected virtual void UnsubscribeActivationButton()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x135B700", Offset = "0x135B700", VA = "0x135B700", Slot = "52")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x135B7B4", Offset = "0x135B7B4", VA = "0x135B7B4", Slot = "53")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x135B87C", Offset = "0x135B87C", VA = "0x135B87C", Slot = "54")]
		protected virtual void SubscribeSelectionButton()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x135BA28", Offset = "0x135BA28", VA = "0x135BA28", Slot = "55")]
		protected virtual void UnsubscribeSelectionButton()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x135BBB4", Offset = "0x135BBB4", VA = "0x135BBB4", Slot = "56")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x135BC2C", Offset = "0x135BC2C", VA = "0x135BC2C", Slot = "57")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x135BCA4", Offset = "0x135BCA4", VA = "0x135BCA4", Slot = "58")]
		protected virtual void SelectionButtonAction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x135BCBC", Offset = "0x135BCBC", VA = "0x135BCBC", Slot = "59")]
		protected virtual void ExecuteSelectionButtonAction()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x135BFD8", Offset = "0x135BFD8", VA = "0x135BFD8", Slot = "60")]
		protected virtual bool CanResetActivationState(bool givenState)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x135C008", Offset = "0x135C008", VA = "0x135C008", Slot = "61")]
		protected virtual void ManageActivationState(bool state)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x135C060", Offset = "0x135C060", VA = "0x135C060", Slot = "62")]
		protected virtual bool PointerActivatesUseAction(VRTK_InteractableObject givenInteractableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x135C14C", Offset = "0x135C14C", VA = "0x135C14C", Slot = "63")]
		protected virtual void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x135C304", Offset = "0x135C304", VA = "0x135C304", Slot = "64")]
		protected virtual void StopUseAction()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x135C3EC", Offset = "0x135C3EC", VA = "0x135C3EC", Slot = "65")]
		protected virtual void AttemptUseOnSet(Transform target)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x135C574", Offset = "0x135C574", VA = "0x135C574", Slot = "66")]
		protected virtual void SetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x135C624", Offset = "0x135C624", VA = "0x135C624", Slot = "67")]
		protected virtual void ResetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x135C6B8", Offset = "0x135C6B8", VA = "0x135C6B8", Slot = "68")]
		protected virtual void CheckHoverSelect()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x135C72C", Offset = "0x135C72C", VA = "0x135C72C", Slot = "69")]
		protected virtual DestinationMarkerEventArgs GetStateEventPayload()
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x135C8D0", Offset = "0x135C8D0", VA = "0x135C8D0")]
		public VRTK_Pointer()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAE40EC", Offset = "0xAE40EC")]
	public class VRTK_SimplePointer : VRTK_BasePointer
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3B5C", Offset = "0xAF3B5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3B5C", Offset = "0xAF3B5C")]
		public float pointerThickness;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3BC4", Offset = "0xAF3BC4")]
		public float pointerLength;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3BFC", Offset = "0xAF3BFC")]
		public bool showPointerTip;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3C34", Offset = "0xAF3C34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3C34", Offset = "0xAF3C34")]
		public GameObject customPointerCursor;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3C9C", Offset = "0xAF3C9C")]
		public bool pointerCursorMatchTargetNormal;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3CD4", Offset = "0xAF3CD4")]
		public bool pointerCursorRescaledAlongDistance;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GameObject pointerHolder;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject pointerBeam;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject pointerTip;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 pointerTipScale;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Vector3 pointerCursorOriginalScale;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool activeEnabled;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool storedBeamState;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		private bool storedTipState;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x128DF34", Offset = "0x128DF34", VA = "0x128DF34", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x128DF68", Offset = "0x128DF68", VA = "0x128DF68", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x128E028", Offset = "0x128E028", VA = "0x128E028", Slot = "21")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x128E908", Offset = "0x128E908", VA = "0x128E908", Slot = "25")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x128EA60", Offset = "0x128EA60", VA = "0x128EA60", Slot = "27")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x128F0B8", Offset = "0x128F0B8", VA = "0x128F0B8", Slot = "38")]
		protected override void SetPointerMaterial(Color color)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x128F138", Offset = "0x128F138", VA = "0x128F138", Slot = "35")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x128EF54", Offset = "0x128EF54", VA = "0x128EF54")]
		private void ResizeObjectInteractor()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x128E654", Offset = "0x128E654", VA = "0x128E654")]
		private void SetPointerTransform(float setLength, float setThicknes)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x128E3E0", Offset = "0x128E3E0", VA = "0x128E3E0")]
		private float GetPointerBeamLength(bool hasRayHit, RaycastHit collidedWith)
		{
			return default(float);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x128F38C", Offset = "0x128F38C", VA = "0x128F38C")]
		public VRTK_SimplePointer()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public struct BodyPhysicsEventArgs
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider collider;
	}
	[Token(Token = "0x2000253")]
	public delegate void BodyPhysicsEventHandler(object sender, BodyPhysicsEventArgs e);
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4124", Offset = "0xAE4124")]
	public class VRTK_BodyPhysics : VRTK_DestinationMarker
	{
		[Token(Token = "0x20005BE")]
		public enum FallingRestrictors
		{
			[Token(Token = "0x4002A49")]
			NoRestriction,
			[Token(Token = "0x4002A4A")]
			LeftController,
			[Token(Token = "0x4002A4B")]
			RightController,
			[Token(Token = "0x4002A4C")]
			EitherController,
			[Token(Token = "0x4002A4D")]
			BothControllers
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65AC", Offset = "0xAE65AC")]
		private sealed class <RestoreCollisions>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4002A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_BodyPhysics <>4__this;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024DD")]
				[Address(RVA = "0x168CD58", Offset = "0x168CD58", VA = "0x168CD58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DF")]
				[Address(RVA = "0x168CDC0", Offset = "0x168CDC0", VA = "0x168CDC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x168B5BC", Offset = "0x168B5BC", VA = "0x168B5BC")]
			[DebuggerHidden]
			public <RestoreCollisions>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x168CBDC", Offset = "0x168CBDC", VA = "0x168CBDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x168CBE0", Offset = "0x168CBE0", VA = "0x168CBE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x168CD60", Offset = "0x168CD60", VA = "0x168CD60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3D0C", Offset = "0xAF3D0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3D0C", Offset = "0xAF3D0C")]
		public bool enableBodyCollisions;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3D6C", Offset = "0xAF3D6C")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3DA4", Offset = "0xAF3DA4")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3DDC", Offset = "0xAF3DDC")]
		public float headsetYOffset;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3E14", Offset = "0xAF3E14")]
		public float movementThreshold;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3E4C", Offset = "0xAF3E4C")]
		public float playAreaMovementThreshold;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3E84", Offset = "0xAF3E84")]
		public int standingHistorySamples;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3EBC", Offset = "0xAF3EBC")]
		public float leanYThreshold;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3EF4", Offset = "0xAF3EF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3EF4", Offset = "0xAF3EF4")]
		public float stepUpYOffset;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3F54", Offset = "0xAF3F54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF3F54", Offset = "0xAF3F54")]
		public float stepThicknessMultiplier;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3FB0", Offset = "0xAF3FB0")]
		public float stepDropThreshold;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF3FE8", Offset = "0xAF3FE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF3FE8", Offset = "0xAF3FE8")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4048", Offset = "0xAF4048")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF4048", Offset = "0xAF4048")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF40A8", Offset = "0xAF40A8")]
		public FallingRestrictors fallRestriction;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF40E0", Offset = "0xAF40E0")]
		public float gravityFallYThreshold;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4118", Offset = "0xAF4118")]
		public float blinkYThreshold;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4150", Offset = "0xAF4150")]
		public float floorHeightTolerance;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF4188", Offset = "0xAF4188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4188", Offset = "0xAF4188")]
		public int fallCheckPrecision;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF41DC", Offset = "0xAF41DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF41DC", Offset = "0xAF41DC")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF423C", Offset = "0xAF423C")]
		public GameObject customBodyColliderContainer;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4274", Offset = "0xAF4274")]
		public GameObject customFootColliderContainer;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Transform playArea;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Transform headset;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected GameObject bodyColliderContainer;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected GameObject footColliderContainer;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected CapsuleCollider bodyCollider;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected CapsuleCollider footCollider;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VRTK_CollisionTracker collisionTracker;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected bool currentBodyCollisionsSetting;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected GameObject currentCollidingObject;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject currentValidFloorObject;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected float lastFrameFloorY;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected float hitFloorYDelta;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected bool initialFloorDrop;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		protected bool resetPhysicsAfterTeleport;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		protected bool storedCurrentPhysics;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		protected bool retogglePhysicsOnCanFall;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		protected bool storedRetogglePhysics;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 lastPlayAreaPosition;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected Vector2 currentStandingPosition;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected List<Vector2> standingPositionHistory;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected float playAreaHeightAdjustment;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected float bodyMass;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected float bodyRadius;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		protected float leanForwardLengthAddition;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected float playAreaPositionThreshold;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected float gravityPush;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected int decimalPrecision;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		protected bool isFalling;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		protected bool isMoving;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B6")]
		protected bool isLeaning;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B7")]
		protected bool onGround;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected bool preventSnapToFloor;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		protected bool generateRigidbody;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected Vector3 playAreaVelocity;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected string footColliderContainerNameCheck;

		[Token(Token = "0x40011B9")]
		protected const string BODY_COLLIDER_CONTAINER_NAME = "BodyColliderContainer";

		[Token(Token = "0x40011BA")]
		protected const string FOOT_COLLIDER_CONTAINER_NAME = "FootColliderContainer";

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected bool enableBodyCollisionsStartingValue;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected float fallMinTime;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected List<GameObject> ignoreCollisionsOnGameObjects;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected Transform cachedGrabbedObjectTransform;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected VRTK_InteractableObject cachedGrabbedObject;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected bool drawDebugGizmo;

		[Token(Token = "0x140000B4")]
		public event BodyPhysicsEventHandler StartFalling
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x1685C78", Offset = "0x1685C78", VA = "0x1685C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04758", Offset = "0xB04758")]
			add
			{
			}
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1685D1C", Offset = "0x1685D1C", VA = "0x1685D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04768", Offset = "0xB04768")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B5")]
		public event BodyPhysicsEventHandler StopFalling
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x1685DC0", Offset = "0x1685DC0", VA = "0x1685DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04778", Offset = "0xB04778")]
			add
			{
			}
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1685E64", Offset = "0x1685E64", VA = "0x1685E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04788", Offset = "0xB04788")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		public event BodyPhysicsEventHandler StartMoving
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x1685F08", Offset = "0x1685F08", VA = "0x1685F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04798", Offset = "0xB04798")]
			add
			{
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x1685FAC", Offset = "0x1685FAC", VA = "0x1685FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047A8", Offset = "0xB047A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public event BodyPhysicsEventHandler StopMoving
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x1686050", Offset = "0x1686050", VA = "0x1686050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047B8", Offset = "0xB047B8")]
			add
			{
			}
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x16860F4", Offset = "0x16860F4", VA = "0x16860F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047C8", Offset = "0xB047C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public event BodyPhysicsEventHandler StartColliding
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x1686198", Offset = "0x1686198", VA = "0x1686198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047D8", Offset = "0xB047D8")]
			add
			{
			}
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x168623C", Offset = "0x168623C", VA = "0x168623C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047E8", Offset = "0xB047E8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public event BodyPhysicsEventHandler StopColliding
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x16862E0", Offset = "0x16862E0", VA = "0x16862E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB047F8", Offset = "0xB047F8")]
			add
			{
			}
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x1686384", Offset = "0x1686384", VA = "0x1686384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04808", Offset = "0xB04808")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BA")]
		public event BodyPhysicsEventHandler StartLeaning
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x1686428", Offset = "0x1686428", VA = "0x1686428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04818", Offset = "0xB04818")]
			add
			{
			}
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x16864CC", Offset = "0x16864CC", VA = "0x16864CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04828", Offset = "0xB04828")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BB")]
		public event BodyPhysicsEventHandler StopLeaning
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x1686570", Offset = "0x1686570", VA = "0x1686570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04838", Offset = "0xB04838")]
			add
			{
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1686614", Offset = "0x1686614", VA = "0x1686614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04848", Offset = "0xB04848")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BC")]
		public event BodyPhysicsEventHandler StartTouchingGround
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x16866B8", Offset = "0x16866B8", VA = "0x16866B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04858", Offset = "0xB04858")]
			add
			{
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1686760", Offset = "0x1686760", VA = "0x1686760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04868", Offset = "0xB04868")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public event BodyPhysicsEventHandler StopTouchingGround
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x1686808", Offset = "0x1686808", VA = "0x1686808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04878", Offset = "0xB04878")]
			add
			{
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x16868B0", Offset = "0x16868B0", VA = "0x16868B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04888", Offset = "0xB04888")]
			remove
			{
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1686958", Offset = "0x1686958", VA = "0x1686958", Slot = "15")]
		public virtual bool ArePhysicsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x16869F4", Offset = "0x16869F4", VA = "0x16869F4", Slot = "16")]
		public virtual void ApplyBodyVelocity(Vector3 velocity, bool forcePhysicsOn = false, bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1686B5C", Offset = "0x1686B5C", VA = "0x1686B5C", Slot = "17")]
		public virtual void ToggleOnGround(bool state)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1686BF0", Offset = "0x1686BF0", VA = "0x1686BF0", Slot = "18")]
		public virtual void TogglePreventSnapToFloor(bool state)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1686BFC", Offset = "0x1686BFC", VA = "0x1686BFC", Slot = "19")]
		public virtual void ForceSnapToFloor()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1686C3C", Offset = "0x1686C3C", VA = "0x1686C3C", Slot = "20")]
		public virtual bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1686C44", Offset = "0x1686C44", VA = "0x1686C44", Slot = "21")]
		public virtual bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1686C4C", Offset = "0x1686C4C", VA = "0x1686C4C", Slot = "22")]
		public virtual bool IsLeaning()
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1686C54", Offset = "0x1686C54", VA = "0x1686C54", Slot = "23")]
		public virtual bool OnGround()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1686C5C", Offset = "0x1686C5C", VA = "0x1686C5C", Slot = "24")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1686D14", Offset = "0x1686D14", VA = "0x1686D14", Slot = "25")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1686DCC", Offset = "0x1686DCC", VA = "0x1686DCC", Slot = "26")]
		public virtual void ResetVelocities()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1686E64", Offset = "0x1686E64", VA = "0x1686E64", Slot = "27")]
		public virtual void ResetFalling()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1686E74", Offset = "0x1686E74", VA = "0x1686E74", Slot = "28")]
		public virtual GameObject GetBodyColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1686E7C", Offset = "0x1686E7C", VA = "0x1686E7C", Slot = "29")]
		public virtual GameObject GetFootColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x1686E84", Offset = "0x1686E84", VA = "0x1686E84", Slot = "30")]
		public virtual GameObject GetCurrentCollidingObject()
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1686E8C", Offset = "0x1686E8C", VA = "0x1686E8C", Slot = "31")]
		public virtual void ResetIgnoredCollisions()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x168700C", Offset = "0x168700C", VA = "0x168700C", Slot = "32")]
		public virtual bool SweepCollision(Vector3 direction, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x168730C", Offset = "0x168730C", VA = "0x168730C", Slot = "33")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1687384", Offset = "0x1687384", VA = "0x1687384", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x16874BC", Offset = "0x16874BC", VA = "0x16874BC", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1687530", Offset = "0x1687530", VA = "0x1687530", Slot = "34")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x16875A8", Offset = "0x16875A8", VA = "0x16875A8", Slot = "35")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x16876BC", Offset = "0x16876BC", VA = "0x16876BC", Slot = "36")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1687798", Offset = "0x1687798", VA = "0x1687798", Slot = "37")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1687840", Offset = "0x1687840", VA = "0x1687840", Slot = "38")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x16878EC", Offset = "0x16878EC", VA = "0x16878EC", Slot = "39")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1687980", Offset = "0x1687980", VA = "0x1687980", Slot = "40")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1687AFC", Offset = "0x1687AFC", VA = "0x1687AFC", Slot = "41")]
		protected virtual bool CheckValidCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1687BD4", Offset = "0x1687BD4", VA = "0x1687BD4", Slot = "42")]
		protected virtual bool CheckExistingCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1687C84", Offset = "0x1687C84", VA = "0x1687C84", Slot = "43")]
		protected virtual void SetupPlayArea()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1687DE8", Offset = "0x1687DE8", VA = "0x1687DE8", Slot = "44")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1687EE0", Offset = "0x1687EE0", VA = "0x1687EE0", Slot = "45")]
		protected virtual void ManageCollisionListeners(bool state)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x168862C", Offset = "0x168862C", VA = "0x168862C", Slot = "46")]
		protected virtual void CollisionTracker_TriggerExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1688640", Offset = "0x1688640", VA = "0x1688640", Slot = "47")]
		protected virtual void CollisionTracker_TriggerEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1688654", Offset = "0x1688654", VA = "0x1688654", Slot = "48")]
		protected virtual void CollisionTracker_CollisionExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1688668", Offset = "0x1688668", VA = "0x1688668", Slot = "49")]
		protected virtual void CollisionTracker_CollisionEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x168867C", Offset = "0x168867C", VA = "0x168867C", Slot = "50")]
		protected virtual void OnStartFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x16886A0", Offset = "0x16886A0", VA = "0x16886A0", Slot = "51")]
		protected virtual void OnStopFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x16886C4", Offset = "0x16886C4", VA = "0x16886C4", Slot = "52")]
		protected virtual void OnStartMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x16886E8", Offset = "0x16886E8", VA = "0x16886E8", Slot = "53")]
		protected virtual void OnStopMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x168870C", Offset = "0x168870C", VA = "0x168870C", Slot = "54")]
		protected virtual void OnStartColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1688730", Offset = "0x1688730", VA = "0x1688730", Slot = "55")]
		protected virtual void OnStopColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1688754", Offset = "0x1688754", VA = "0x1688754", Slot = "56")]
		protected virtual void OnStartLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1688778", Offset = "0x1688778", VA = "0x1688778", Slot = "57")]
		protected virtual void OnStopLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x168879C", Offset = "0x168879C", VA = "0x168879C", Slot = "58")]
		protected virtual void OnStartTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x16887C0", Offset = "0x16887C0", VA = "0x16887C0", Slot = "59")]
		protected virtual void OnStopTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x16887E4", Offset = "0x16887E4", VA = "0x16887E4", Slot = "60")]
		protected virtual BodyPhysicsEventArgs SetBodyPhysicsEvent(GameObject target, Collider collider)
		{
			return default(BodyPhysicsEventArgs);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x16887F0", Offset = "0x16887F0", VA = "0x16887F0", Slot = "61")]
		protected virtual void CalculateVelocity()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1688950", Offset = "0x1688950", VA = "0x1688950", Slot = "62")]
		protected virtual void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1688A88", Offset = "0x1688A88", VA = "0x1688A88", Slot = "63")]
		protected virtual void ManageFalling()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1688ADC", Offset = "0x1688ADC", VA = "0x1688ADC", Slot = "64")]
		protected virtual void CheckBodyCollisionsSetting()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1688B18", Offset = "0x1688B18", VA = "0x1688B18", Slot = "65")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1688BC0", Offset = "0x1688BC0", VA = "0x1688BC0", Slot = "66")]
		protected virtual void SetCurrentStandingPosition()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1688D44", Offset = "0x1688D44", VA = "0x1688D44", Slot = "67")]
		protected virtual void SetIsMoving(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1688F08", Offset = "0x1688F08", VA = "0x1688F08", Slot = "68")]
		protected virtual void CheckLean()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x16893C4", Offset = "0x16893C4", VA = "0x16893C4", Slot = "69")]
		protected virtual void CalculateLean(Vector3 startPosition, float forwardLength, float originalRayDistance)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x16896E0", Offset = "0x16896E0", VA = "0x16896E0", Slot = "70")]
		protected virtual void UpdateStandingPosition(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x16898EC", Offset = "0x16898EC", VA = "0x16898EC", Slot = "71")]
		protected virtual void CheckHeadsetMovement()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x1689AB0", Offset = "0x1689AB0", VA = "0x1689AB0", Slot = "72")]
		protected virtual void MovementChanged(bool movementState)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1689B18", Offset = "0x1689B18", VA = "0x1689B18", Slot = "73")]
		protected virtual void EnableDropToFloor()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1689C40", Offset = "0x1689C40", VA = "0x1689C40", Slot = "74")]
		protected virtual void DisableDropToFloor()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x1689D10", Offset = "0x1689D10", VA = "0x1689D10", Slot = "75")]
		protected virtual void Teleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1689D68", Offset = "0x1689D68", VA = "0x1689D68", Slot = "76")]
		protected virtual void EnableBodyPhysics()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1689E30", Offset = "0x1689E30", VA = "0x1689E30", Slot = "77")]
		protected virtual void DisableBodyPhysics()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1689EF0", Offset = "0x1689EF0", VA = "0x1689EF0", Slot = "78")]
		protected virtual void SetupIgnoredCollisions()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x168A040", Offset = "0x168A040", VA = "0x168A040", Slot = "79")]
		protected virtual void ManagePhysicsCollider(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x168A08C", Offset = "0x168A08C", VA = "0x168A08C", Slot = "80")]
		protected virtual void CheckStepUpCollision(Collision collision)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x168A520", Offset = "0x168A520", VA = "0x168A520", Slot = "81")]
		protected virtual GameObject CreateColliderContainer(string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x168A718", Offset = "0x168A718", VA = "0x168A718", Slot = "82")]
		protected virtual GameObject InstantiateColliderContainer(GameObject objectToClone, string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x168A83C", Offset = "0x168A83C", VA = "0x168A83C", Slot = "83")]
		protected virtual void GenerateRigidbody()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x168A930", Offset = "0x168A930", VA = "0x168A930", Slot = "84")]
		protected virtual CapsuleCollider GenerateCapsuleCollider(GameObject parent, float setRadius)
		{
			return null;
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x168AA00", Offset = "0x168AA00", VA = "0x168AA00", Slot = "85")]
		protected virtual void GenerateBodyCollider()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x168ABA0", Offset = "0x168ABA0", VA = "0x168ABA0", Slot = "86")]
		protected virtual void GenerateFootCollider()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x168AD18", Offset = "0x168AD18", VA = "0x168AD18", Slot = "87")]
		protected virtual void CreateCollider()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x168AF28", Offset = "0x168AF28", VA = "0x168AF28", Slot = "88")]
		protected virtual void DestroyCollider()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x168B044", Offset = "0x168B044", VA = "0x168B044", Slot = "89")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x168B35C", Offset = "0x168B35C", VA = "0x168B35C", Slot = "90")]
		protected virtual float CalculateStepUpYOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x168B368", Offset = "0x168B368", VA = "0x168B368", Slot = "91")]
		protected virtual void InitControllerListeners(GameObject mappedController, bool state)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x168B540", Offset = "0x168B540", VA = "0x168B540", Slot = "92")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04898", Offset = "0xB04898")]
		protected virtual IEnumerator RestoreCollisions(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x168B5E8", Offset = "0x168B5E8", VA = "0x168B5E8", Slot = "93")]
		protected virtual void IgnoreCollisions(Collider[] colliders, bool state)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x168B76C", Offset = "0x168B76C", VA = "0x168B76C", Slot = "94")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x168B84C", Offset = "0x168B84C", VA = "0x168B84C", Slot = "95")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x168B8D8", Offset = "0x168B8D8", VA = "0x168B8D8", Slot = "96")]
		protected virtual bool FloorIsGrabbedObject(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x168BA20", Offset = "0x168BA20", VA = "0x168BA20", Slot = "97")]
		protected virtual bool FloorHeightChanged(float currentY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x168BAA0", Offset = "0x168BAA0", VA = "0x168BAA0", Slot = "98")]
		protected virtual bool ValidDrop(bool rayHit, RaycastHit rayCollidedWith, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x168BBE0", Offset = "0x168BBE0", VA = "0x168BBE0", Slot = "99")]
		protected virtual float ControllerHeightCheck(GameObject controllerObj)
		{
			return default(float);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x168BD68", Offset = "0x168BD68", VA = "0x168BD68", Slot = "100")]
		protected virtual bool ControllersStillOverPreviousFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x168BF30", Offset = "0x168BF30", VA = "0x168BF30", Slot = "101")]
		protected virtual void SnapToNearestFloor()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x168C244", Offset = "0x168C244", VA = "0x168C244", Slot = "102")]
		protected virtual bool PreventFall(float hitFloorY)
		{
			return default(bool);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x168C2AC", Offset = "0x168C2AC", VA = "0x168C2AC", Slot = "103")]
		protected virtual void HandleFall(float hitFloorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x168C464", Offset = "0x168C464", VA = "0x168C464", Slot = "104")]
		protected virtual void StartFall(GameObject targetFloor)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x168C5A4", Offset = "0x168C5A4", VA = "0x168C5A4", Slot = "105")]
		protected virtual void StopFall()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x168C678", Offset = "0x168C678", VA = "0x168C678", Slot = "106")]
		protected virtual void GravityFall(RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x168C750", Offset = "0x168C750", VA = "0x168C750", Slot = "107")]
		protected virtual void TeleportFall(float floorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x168C974", Offset = "0x168C974", VA = "0x168C974", Slot = "108")]
		protected virtual void ApplyBodyMomentum(bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x168CA6C", Offset = "0x168CA6C", VA = "0x168CA6C")]
		public VRTK_BodyPhysics()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000256")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE415C", Offset = "0xAE415C")]
	public class VRTK_HeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF434C", Offset = "0xAF434C")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4384", Offset = "0xAF4384")]
		public float colliderRadius;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF43BC", Offset = "0xAF43BC")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool headsetColliding;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Collider collidingWith;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_HeadsetCollider headsetColliderScript;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject headsetColliderContainer;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool generateCollider;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool generateRigidbody;

		[Token(Token = "0x140000BE")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x14B0250", Offset = "0x14B0250", VA = "0x14B0250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB048FC", Offset = "0xB048FC")]
			add
			{
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x14B02F4", Offset = "0x14B02F4", VA = "0x14B02F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0490C", Offset = "0xB0490C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BF")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x14B0398", Offset = "0x14B0398", VA = "0x14B0398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0491C", Offset = "0xB0491C")]
			add
			{
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x14B043C", Offset = "0x14B043C", VA = "0x14B043C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0492C", Offset = "0xB0492C")]
			remove
			{
			}
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x14B04E0", Offset = "0x14B04E0", VA = "0x14B04E0", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x14B0504", Offset = "0x14B0504", VA = "0x14B0504", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x14B0528", Offset = "0x14B0528", VA = "0x14B0528", Slot = "6")]
		public virtual bool IsColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x14B0530", Offset = "0x14B0530", VA = "0x14B0530", Slot = "7")]
		public virtual GameObject GetHeadsetColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x14B0538", Offset = "0x14B0538", VA = "0x14B0538", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x14B05B0", Offset = "0x14B05B0", VA = "0x14B05B0", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x14B06BC", Offset = "0x14B06BC", VA = "0x14B06BC", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x14B07D4", Offset = "0x14B07D4", VA = "0x14B07D4", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x14B084C", Offset = "0x14B084C", VA = "0x14B084C", Slot = "12")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x14B09D8", Offset = "0x14B09D8", VA = "0x14B09D8", Slot = "13")]
		protected virtual void CreateHeadsetColliderContainer()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x14B0BE8", Offset = "0x14B0BE8", VA = "0x14B0BE8", Slot = "14")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x14B0E88", Offset = "0x14B0E88", VA = "0x14B0E88", Slot = "15")]
		protected virtual void TearDownHeadset()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x14B1058", Offset = "0x14B1058", VA = "0x14B1058")]
		public VRTK_HeadsetCollision()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class VRTK_HeadsetCollider : MonoBehaviour
	{
		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_HeadsetCollision parent;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x14AFCF4", Offset = "0x14AFCF4", VA = "0x14AFCF4", Slot = "4")]
		public virtual void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x14AFD60", Offset = "0x14AFD60", VA = "0x14AFD60", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x14AFD68", Offset = "0x14AFD68", VA = "0x14AFD68", Slot = "6")]
		public virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x14AFE7C", Offset = "0x14AFE7C", VA = "0x14AFE7C", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x14AFFEC", Offset = "0x14AFFEC", VA = "0x14AFFEC", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x14B00B4", Offset = "0x14B00B4", VA = "0x14B00B4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x14B018C", Offset = "0x14B018C", VA = "0x14B018C", Slot = "10")]
		protected virtual HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x14B0198", Offset = "0x14B0198", VA = "0x14B0198", Slot = "11")]
		protected virtual bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x14B0248", Offset = "0x14B0248", VA = "0x14B0248")]
		public VRTK_HeadsetCollider()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE4194", Offset = "0xAE4194")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE4194", Offset = "0xAE4194")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4194", Offset = "0xAE4194")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4434", Offset = "0xAF4434")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4434", Offset = "0xAF4434")]
		public float timeTillFade;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4494", Offset = "0xAF4494")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF44CC", Offset = "0xAF44CC")]
		public Color fadeColor;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4504", Offset = "0xAF4504")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4504", Offset = "0xAF4504")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4564", Offset = "0xAF4564")]
		public VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x14B106C", Offset = "0x14B106C", VA = "0x14B106C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x14B11CC", Offset = "0x14B11CC", VA = "0x14B11CC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x14B1288", Offset = "0x14B1288", VA = "0x14B1288", Slot = "6")]
		protected virtual void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x14B12E0", Offset = "0x14B12E0", VA = "0x14B12E0", Slot = "7")]
		protected virtual void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x14B1350", Offset = "0x14B1350", VA = "0x14B1350", Slot = "8")]
		protected virtual void StartFade()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x14B1380", Offset = "0x14B1380", VA = "0x14B1380")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public struct HeadsetControllerAwareEventArgs
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit raycastHit;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF459C", Offset = "0xAF459C")]
		public uint controllerIndex;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x200025B")]
	public delegate void HeadsetControllerAwareEventHandler(object sender, HeadsetControllerAwareEventArgs e);
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4244", Offset = "0xAE4244")]
	public class VRTK_HeadsetControllerAware : MonoBehaviour
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF45D4", Offset = "0xAF45D4")]
		public bool trackLeftController;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF460C", Offset = "0xAF460C")]
		public bool trackRightController;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4644", Offset = "0xAF4644")]
		public float controllerGlanceRadius;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF467C", Offset = "0xAF467C")]
		public Transform customRightControllerOrigin;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF46B4", Offset = "0xAF46B4")]
		public Transform customLeftControllerOrigin;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF46EC", Offset = "0xAF46EC")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject leftController;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject rightController;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftControllerObscured;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightControllerObscured;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool leftControllerLastState;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool rightControllerLastState;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool leftControllerGlance;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		protected bool rightControllerGlance;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		protected bool leftControllerGlanceLastState;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		protected bool rightControllerGlanceLastState;

		[Token(Token = "0x140000C0")]
		public event HeadsetControllerAwareEventHandler ControllerObscured
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x14B13C0", Offset = "0x14B13C0", VA = "0x14B13C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0493C", Offset = "0xB0493C")]
			add
			{
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x14B1464", Offset = "0x14B1464", VA = "0x14B1464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0494C", Offset = "0xB0494C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C1")]
		public event HeadsetControllerAwareEventHandler ControllerUnobscured
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x14B1508", Offset = "0x14B1508", VA = "0x14B1508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0495C", Offset = "0xB0495C")]
			add
			{
			}
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x14B15AC", Offset = "0x14B15AC", VA = "0x14B15AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0496C", Offset = "0xB0496C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C2")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceEnter
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x14A2B5C", Offset = "0x14A2B5C", VA = "0x14A2B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0497C", Offset = "0xB0497C")]
			add
			{
			}
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x14A2528", Offset = "0x14A2528", VA = "0x14A2528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0498C", Offset = "0xB0498C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceExit
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x14A2C00", Offset = "0x14A2C00", VA = "0x14A2C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0499C", Offset = "0xB0499C")]
			add
			{
			}
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x14A25CC", Offset = "0x14A25CC", VA = "0x14A25CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049AC", Offset = "0xB049AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x14B1650", Offset = "0x14B1650", VA = "0x14B1650", Slot = "4")]
		public virtual void OnControllerObscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x14B169C", Offset = "0x14B169C", VA = "0x14B169C", Slot = "5")]
		public virtual void OnControllerUnobscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x14B16E8", Offset = "0x14B16E8", VA = "0x14B16E8", Slot = "6")]
		public virtual void OnControllerGlanceEnter(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x14B1734", Offset = "0x14B1734", VA = "0x14B1734", Slot = "7")]
		public virtual void OnControllerGlanceExit(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x14B1780", Offset = "0x14B1780", VA = "0x14B1780", Slot = "8")]
		public virtual bool LeftControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x14B1788", Offset = "0x14B1788", VA = "0x14B1788", Slot = "9")]
		public virtual bool RightControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x14B1790", Offset = "0x14B1790", VA = "0x14B1790", Slot = "10")]
		public virtual bool LeftControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x14B1798", Offset = "0x14B1798", VA = "0x14B1798", Slot = "11")]
		public virtual bool RightControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x14B17A0", Offset = "0x14B17A0", VA = "0x14B17A0", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x14B1818", Offset = "0x14B1818", VA = "0x14B1818", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x14B18C4", Offset = "0x14B18C4", VA = "0x14B18C4", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x14B1934", Offset = "0x14B1934", VA = "0x14B1934", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x14B19AC", Offset = "0x14B19AC", VA = "0x14B19AC", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x14B1A64", Offset = "0x14B1A64", VA = "0x14B1A64", Slot = "17")]
		protected virtual HeadsetControllerAwareEventArgs SetHeadsetControllerAwareEvent(RaycastHit raycastHit, VRTK_ControllerReference controllerReference)
		{
			return default(HeadsetControllerAwareEventArgs);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x14B1B0C", Offset = "0x14B1B0C", VA = "0x14B1B0C", Slot = "18")]
		protected virtual void RayCastToController(GameObject controller, Transform customDestination, ref bool obscured, ref bool lastState)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x14B1CF8", Offset = "0x14B1CF8", VA = "0x14B1CF8", Slot = "19")]
		protected virtual void ObscuredStateChanged(GameObject controller, bool obscured, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x14B1E98", Offset = "0x14B1E98", VA = "0x14B1E98", Slot = "20")]
		protected virtual void CheckHeadsetView(GameObject controller, Transform customDestination, ref bool controllerGlance, ref bool controllerGlanceLastState)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x14B2104", Offset = "0x14B2104", VA = "0x14B2104", Slot = "21")]
		protected virtual void GlanceStateChanged(GameObject controller, bool glance)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x14B2288", Offset = "0x14B2288", VA = "0x14B2288")]
		public VRTK_HeadsetControllerAware()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public struct HeadsetFadeEventArgs
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeTillComplete;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x200025E")]
	public delegate void HeadsetFadeEventHandler(object sender, HeadsetFadeEventArgs e);
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE427C", Offset = "0xAE427C")]
	public class VRTK_HeadsetFade : MonoBehaviour
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform headset;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool isTransitioning;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isFaded;

		[Token(Token = "0x140000C4")]
		public event HeadsetFadeEventHandler HeadsetFadeStart
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x14B22A4", Offset = "0x14B22A4", VA = "0x14B22A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049BC", Offset = "0xB049BC")]
			add
			{
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x14B2348", Offset = "0x14B2348", VA = "0x14B2348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049CC", Offset = "0xB049CC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public event HeadsetFadeEventHandler HeadsetFadeComplete
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x14B23EC", Offset = "0x14B23EC", VA = "0x14B23EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049DC", Offset = "0xB049DC")]
			add
			{
			}
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x14B2490", Offset = "0x14B2490", VA = "0x14B2490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049EC", Offset = "0xB049EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public event HeadsetFadeEventHandler HeadsetUnfadeStart
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x14B2534", Offset = "0x14B2534", VA = "0x14B2534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB049FC", Offset = "0xB049FC")]
			add
			{
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x14B25D8", Offset = "0x14B25D8", VA = "0x14B25D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04A0C", Offset = "0xB04A0C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C7")]
		public event HeadsetFadeEventHandler HeadsetUnfadeComplete
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x14B267C", Offset = "0x14B267C", VA = "0x14B267C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04A1C", Offset = "0xB04A1C")]
			add
			{
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x14B2720", Offset = "0x14B2720", VA = "0x14B2720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04A2C", Offset = "0xB04A2C")]
			remove
			{
			}
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x14B27C4", Offset = "0x14B27C4", VA = "0x14B27C4", Slot = "4")]
		public virtual void OnHeadsetFadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x14B27E8", Offset = "0x14B27E8", VA = "0x14B27E8", Slot = "5")]
		public virtual void OnHeadsetFadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x14B280C", Offset = "0x14B280C", VA = "0x14B280C", Slot = "6")]
		public virtual void OnHeadsetUnfadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x14B2830", Offset = "0x14B2830", VA = "0x14B2830", Slot = "7")]
		public virtual void OnHeadsetUnfadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x14B2854", Offset = "0x14B2854", VA = "0x14B2854", Slot = "8")]
		public virtual bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x14B285C", Offset = "0x14B285C", VA = "0x14B285C", Slot = "9")]
		public virtual bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x14B2864", Offset = "0x14B2864", VA = "0x14B2864", Slot = "10")]
		public virtual void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x14B2984", Offset = "0x14B2984", VA = "0x14B2984", Slot = "11")]
		public virtual void Unfade(float duration)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x14B2AAC", Offset = "0x14B2AAC", VA = "0x14B2AAC", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x14B2B24", Offset = "0x14B2B24", VA = "0x14B2B24", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x14B2CDC", Offset = "0x14B2CDC", VA = "0x14B2CDC", Slot = "14")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x14B2D54", Offset = "0x14B2D54", VA = "0x14B2D54", Slot = "15")]
		protected virtual HeadsetFadeEventArgs SetHeadsetFadeEvent(Transform currentTransform, float duration)
		{
			return default(HeadsetFadeEventArgs);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x14B2D5C", Offset = "0x14B2D5C", VA = "0x14B2D5C", Slot = "16")]
		protected virtual void FadeComplete()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x14B2DB4", Offset = "0x14B2DB4", VA = "0x14B2DB4", Slot = "17")]
		protected virtual void UnfadeComplete()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x14B2E08", Offset = "0x14B2E08", VA = "0x14B2E08")]
		public VRTK_HeadsetFade()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE42B4", Offset = "0xAE42B4")]
	public class VRTK_HipTracking : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF47A4", Offset = "0xAF47A4")]
		public float HeadOffset;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF47DC", Offset = "0xAF47DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF47DC", Offset = "0xAF47DC")]
		public Transform headOverride;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF483C", Offset = "0xAF483C")]
		public Transform ReferenceUp;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playerHead;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1935F5C", Offset = "0x1935F5C", VA = "0x1935F5C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1935FD4", Offset = "0x1935FD4", VA = "0x1935FD4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1936080", Offset = "0x1936080", VA = "0x1936080", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x19360F8", Offset = "0x19360F8", VA = "0x19360F8", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x193649C", Offset = "0x193649C", VA = "0x193649C")]
		public VRTK_HipTracking()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public struct PositionRewindEventArgs
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 collidedPosition;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 resetPosition;
	}
	[Token(Token = "0x2000262")]
	public delegate void PositionRewindEventHandler(object sender, PositionRewindEventArgs e);
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE42EC", Offset = "0xAE42EC")]
	public class VRTK_PositionRewind : MonoBehaviour
	{
		[Token(Token = "0x20005C0")]
		public enum CollisionDetectors
		{
			[Token(Token = "0x4002A53")]
			HeadsetOnly,
			[Token(Token = "0x4002A54")]
			BodyOnly,
			[Token(Token = "0x4002A55")]
			HeadsetAndBody
		}

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4874", Offset = "0xAF4874")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4874", Offset = "0xAF4874")]
		public CollisionDetectors collisionDetector;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF48D4", Offset = "0xAF48D4")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF490C", Offset = "0xAF490C")]
		public float rewindDelay;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4944", Offset = "0xAF4944")]
		public float pushbackDistance;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF497C", Offset = "0xAF497C")]
		public float crouchThreshold;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF49B4", Offset = "0xAF49B4")]
		public float crouchRewindThreshold;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF49EC", Offset = "0xAF49EC")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4A24", Offset = "0xAF4A24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4A24", Offset = "0xAF4A24")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4A84", Offset = "0xAF4A84")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform playArea;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 lastGoodStandingPosition;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 lastGoodHeadsetPosition;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float highestHeadsetY;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float lastPlayAreaY;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool lastGoodPositionSet;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		protected bool hasCollided;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		protected bool isColliding;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		protected bool isRewinding;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float collideTimer;

		[Token(Token = "0x140000C8")]
		public event PositionRewindEventHandler PositionRewindToSafe
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x135D3EC", Offset = "0x135D3EC", VA = "0x135D3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04A3C", Offset = "0xB04A3C")]
			add
			{
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x135D490", Offset = "0x135D490", VA = "0x135D490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04A4C", Offset = "0xB04A4C")]
			remove
			{
			}
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x135D534", Offset = "0x135D534", VA = "0x135D534", Slot = "4")]
		public virtual void OnPositionRewindToSafe(PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x135D578", Offset = "0x135D578", VA = "0x135D578", Slot = "5")]
		public virtual void SetLastGoodPosition()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x135D664", Offset = "0x135D664", VA = "0x135D664", Slot = "6")]
		public virtual void RewindPosition()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x135D8D0", Offset = "0x135D8D0", VA = "0x135D8D0", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x135D948", Offset = "0x135D948", VA = "0x135D948", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x135DB98", Offset = "0x135DB98", VA = "0x135DB98", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x135DBAC", Offset = "0x135DBAC", VA = "0x135DBAC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x135DC24", Offset = "0x135DC24", VA = "0x135DC24", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x135DC94", Offset = "0x135DC94", VA = "0x135DC94", Slot = "12")]
		protected virtual PositionRewindEventArgs SetEventPayload(Vector3 previousPosition)
		{
			return default(PositionRewindEventArgs);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x135DCEC", Offset = "0x135DCEC", VA = "0x135DCEC", Slot = "13")]
		protected virtual bool CrouchThresholdReached()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x135DD64", Offset = "0x135DD64", VA = "0x135DD64", Slot = "14")]
		protected virtual void SetHighestHeadsetY()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x135DDD4", Offset = "0x135DDD4", VA = "0x135DDD4", Slot = "15")]
		protected virtual void UpdateLastGoodPosition()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x135DE50", Offset = "0x135DE50", VA = "0x135DE50", Slot = "16")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x135DF00", Offset = "0x135DF00", VA = "0x135DF00", Slot = "17")]
		protected virtual void StartCollision(GameObject target, Collider collider)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x135DF7C", Offset = "0x135DF7C", VA = "0x135DF7C", Slot = "18")]
		protected virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x135E024", Offset = "0x135E024", VA = "0x135E024", Slot = "19")]
		protected virtual bool BodyCollisionsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x135E0BC", Offset = "0x135E0BC", VA = "0x135E0BC", Slot = "20")]
		protected virtual bool CanRewind()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x135E184", Offset = "0x135E184", VA = "0x135E184", Slot = "21")]
		protected virtual void DoPositionRewind()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x135E1D4", Offset = "0x135E1D4", VA = "0x135E1D4", Slot = "22")]
		protected virtual bool HeadsetListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x135E1E8", Offset = "0x135E1E8", VA = "0x135E1E8", Slot = "23")]
		protected virtual bool BodyListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x135E1FC", Offset = "0x135E1FC", VA = "0x135E1FC", Slot = "24")]
		protected virtual void ManageListeners(bool state)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x135E584", Offset = "0x135E584", VA = "0x135E584")]
		private void StartColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x135E5A0", Offset = "0x135E5A0", VA = "0x135E5A0")]
		private void StopColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x135E5B4", Offset = "0x135E5B4", VA = "0x135E5B4", Slot = "25")]
		protected virtual void HeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x135E600", Offset = "0x135E600", VA = "0x135E600", Slot = "26")]
		protected virtual void HeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x135E618", Offset = "0x135E618", VA = "0x135E618")]
		public VRTK_PositionRewind()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4324", Offset = "0xAE4324")]
	public class VRTK_UICanvas : MonoBehaviour
	{
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65BC", Offset = "0xAE65BC")]
		private sealed class <CreateDraggablePanel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Canvas canvas;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 canvasSize;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E3")]
				[Address(RVA = "0xDED3C0", Offset = "0xDED3C0", VA = "0xDED3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E5")]
				[Address(RVA = "0xDED428", Offset = "0xDED428", VA = "0xDED428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xDEC8FC", Offset = "0xDEC8FC", VA = "0xDEC8FC")]
			[DebuggerHidden]
			public <CreateDraggablePanel>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xDED03C", Offset = "0xDED03C", VA = "0xDED03C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xDED040", Offset = "0xDED040", VA = "0xDED040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xDED3C8", Offset = "0xDED3C8", VA = "0xDED3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4ACC", Offset = "0xAF4ACC")]
		public bool clickOnPointerCollision;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4B04", Offset = "0xAF4B04")]
		public float autoActivateWithinDistance;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BoxCollider canvasBoxCollider;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody canvasRigidBody;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine draggablePanelCreation;

		[Token(Token = "0x4001217")]
		protected const string CANVAS_DRAGGABLE_PANEL = "VRTK_UICANVAS_DRAGGABLE_PANEL";

		[Token(Token = "0x4001218")]
		protected const string ACTIVATOR_FRONT_TRIGGER_GAMEOBJECT = "VRTK_UICANVAS_ACTIVATOR_FRONT_TRIGGER";

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xDEC154", Offset = "0xDEC154", VA = "0xDEC154", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xDEC160", Offset = "0xDEC160", VA = "0xDEC160", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xDEC16C", Offset = "0xDEC16C", VA = "0xDEC16C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xDEC178", Offset = "0xDEC178", VA = "0xDEC178", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xDEC274", Offset = "0xDEC274", VA = "0xDEC274", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xDEC310", Offset = "0xDEC310", VA = "0xDEC310", Slot = "9")]
		protected virtual void SetupCanvas()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xDEC878", Offset = "0xDEC878", VA = "0xDEC878", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04A5C", Offset = "0xB04A5C")]
		protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
		{
			return null;
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xDEC928", Offset = "0xDEC928", VA = "0xDEC928", Slot = "11")]
		protected virtual void CreateActivator(Canvas canvas, Vector2 canvasSize)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xDECCC4", Offset = "0xDECCC4", VA = "0xDECCC4", Slot = "12")]
		protected virtual void RemoveCanvas()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xDED034", Offset = "0xDED034", VA = "0xDED034")]
		public VRTK_UICanvas()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class VRTK_UIPointerAutoActivator : MonoBehaviour
	{
		[Token(Token = "0x6001511")]
		[Address(RVA = "0xDF1968", Offset = "0xDF1968", VA = "0xDF1968", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xDF1A6C", Offset = "0xDF1A6C", VA = "0xDF1A6C", Slot = "5")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xDF1B58", Offset = "0xDF1B58", VA = "0xDF1B58")]
		public VRTK_UIPointerAutoActivator()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public struct UIDraggableItemEventArgs
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}
	[Token(Token = "0x2000267")]
	public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE435C", Offset = "0xAE435C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE435C", Offset = "0xAE435C")]
	public class VRTK_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4B3C", Offset = "0xAF4B3C")]
		public bool restrictToDropZone;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4B74", Offset = "0xAF4B74")]
		public bool restrictToOriginalCanvas;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4BAC", Offset = "0xAF4BAC")]
		public float forwardOffset;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject validDropZone;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform dragTransform;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 startPosition;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion startRotation;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject startDropZone;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform startParent;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Canvas startCanvas;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x140000C9")]
		public event UIDraggableItemEventHandler DraggableItemDropped
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xDED430", Offset = "0xDED430", VA = "0xDED430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04AC0", Offset = "0xB04AC0")]
			add
			{
			}
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xDED4D4", Offset = "0xDED4D4", VA = "0xDED4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04AD0", Offset = "0xB04AD0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event UIDraggableItemEventHandler DraggableItemReset
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xDED578", Offset = "0xDED578", VA = "0xDED578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04AE0", Offset = "0xB04AE0")]
			add
			{
			}
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xDED61C", Offset = "0xDED61C", VA = "0xDED61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04AF0", Offset = "0xB04AF0")]
			remove
			{
			}
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xDED6C0", Offset = "0xDED6C0", VA = "0xDED6C0", Slot = "7")]
		public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xDED6E0", Offset = "0xDED6E0", VA = "0xDED6E0", Slot = "8")]
		public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xDED700", Offset = "0xDED700", VA = "0xDED700", Slot = "9")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xDED920", Offset = "0xDED920", VA = "0xDED920", Slot = "10")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xDED930", Offset = "0xDED930", VA = "0xDED930", Slot = "11")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xDEDD8C", Offset = "0xDEDD8C", VA = "0xDEDD8C", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xDEDF90", Offset = "0xDEDF90", VA = "0xDEDF90", Slot = "13")]
		protected virtual VRTK_UIPointer GetPointer(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xDEE068", Offset = "0xDEE068", VA = "0xDEE068", Slot = "14")]
		protected virtual void SetDragPosition(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xDEE32C", Offset = "0xDEE32C", VA = "0xDEE32C", Slot = "15")]
		protected virtual void ResetElement()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xDEE3DC", Offset = "0xDEE3DC", VA = "0xDEE3DC", Slot = "16")]
		protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
		{
			return default(UIDraggableItemEventArgs);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xDEE3E4", Offset = "0xDEE3E4", VA = "0xDEE3E4")]
		public VRTK_UIDraggableItem()
		{
		}
	}
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE43E4", Offset = "0xAE43E4")]
	public class VRTK_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_UIDraggableItem droppableItem;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xDEE3F8", Offset = "0xDEE3F8", VA = "0xDEE3F8", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xDEE4E8", Offset = "0xDEE4E8", VA = "0xDEE4E8", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xDEE570", Offset = "0xDEE570", VA = "0xDEE570")]
		public VRTK_UIDropZone()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public struct UIPointerEventArgs
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF4C14", Offset = "0xAF4C14")]
		public uint controllerIndex;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentTarget;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject previousTarget;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RaycastResult raycastResult;
	}
	[Token(Token = "0x200026B")]
	public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE441C", Offset = "0xAE441C")]
	public class VRTK_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x20005C2")]
		public enum ActivationMethods
		{
			[Token(Token = "0x4002A5B")]
			HoldButton,
			[Token(Token = "0x4002A5C")]
			ToggleButton,
			[Token(Token = "0x4002A5D")]
			AlwaysOn
		}

		[Token(Token = "0x20005C3")]
		public enum ClickMethods
		{
			[Token(Token = "0x4002A5F")]
			ClickOnButtonUp,
			[Token(Token = "0x4002A60")]
			ClickOnButtonDown
		}

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4C4C", Offset = "0xAF4C4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4C4C", Offset = "0xAF4C4C")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4CAC", Offset = "0xAF4CAC")]
		public ActivationMethods activationMode;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4CE4", Offset = "0xAF4CE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4CE4", Offset = "0xAF4CE4")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4D44", Offset = "0xAF4D44")]
		public ClickMethods clickMethod;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4D7C", Offset = "0xAF4D7C")]
		public bool attemptClickOnDeactivate;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4DB4", Offset = "0xAF4DB4")]
		public float clickAfterHoverDuration;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF4DEC", Offset = "0xAF4DEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4DEC", Offset = "0xAF4DEC")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4E4C", Offset = "0xAF4E4C")]
		public Transform pointerOriginTransform;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public PointerEventData pointerEventData;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject hoveringElement;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject controllerRenderModel;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float hoverDurationTimer;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool canClickOnHover;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public GameObject autoActivatingCanvas;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool collisionClick;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool pointerClicked;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		protected bool beamEnabledState;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		protected bool lastPointerPressState;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		protected bool lastPointerClickState;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject currentTarget;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected EventSystem cachedEventSystem;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected VRTK_VRInputModule cachedVRInputModule;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform originalPointerOriginTransform;

		[Token(Token = "0x17000083")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0xDF006C", Offset = "0xDF006C", VA = "0xDF006C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000CB")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xDEF4E4", Offset = "0xDEF4E4", VA = "0xDEF4E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B00", Offset = "0xB04B00")]
			add
			{
			}
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xDEF588", Offset = "0xDEF588", VA = "0xDEF588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B10", Offset = "0xB04B10")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CC")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xDEF62C", Offset = "0xDEF62C", VA = "0xDEF62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B20", Offset = "0xB04B20")]
			add
			{
			}
			[Token(Token = "0x6001531")]
			[Address(RVA = "0xDEF6D0", Offset = "0xDEF6D0", VA = "0xDEF6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B30", Offset = "0xB04B30")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CD")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0xDEF774", Offset = "0xDEF774", VA = "0xDEF774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B40", Offset = "0xB04B40")]
			add
			{
			}
			[Token(Token = "0x6001533")]
			[Address(RVA = "0xDEF818", Offset = "0xDEF818", VA = "0xDEF818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B50", Offset = "0xB04B50")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CE")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xDEF8BC", Offset = "0xDEF8BC", VA = "0xDEF8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B60", Offset = "0xB04B60")]
			add
			{
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xDEF960", Offset = "0xDEF960", VA = "0xDEF960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B70", Offset = "0xB04B70")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CF")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xDEFA04", Offset = "0xDEFA04", VA = "0xDEFA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B80", Offset = "0xB04B80")]
			add
			{
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xDEFAA8", Offset = "0xDEFAA8", VA = "0xDEFAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04B90", Offset = "0xB04B90")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D0")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0xDEFB4C", Offset = "0xDEFB4C", VA = "0xDEFB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BA0", Offset = "0xB04BA0")]
			add
			{
			}
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xDEFBF0", Offset = "0xDEFBF0", VA = "0xDEFBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BB0", Offset = "0xB04BB0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D1")]
		public event UIPointerEventHandler UIPointerElementClick
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0xDEFC94", Offset = "0xDEFC94", VA = "0xDEFC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BC0", Offset = "0xB04BC0")]
			add
			{
			}
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xDEFD38", Offset = "0xDEFD38", VA = "0xDEFD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BD0", Offset = "0xB04BD0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D2")]
		public event UIPointerEventHandler UIPointerElementDragStart
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xDEFDDC", Offset = "0xDEFDDC", VA = "0xDEFDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BE0", Offset = "0xB04BE0")]
			add
			{
			}
			[Token(Token = "0x600153D")]
			[Address(RVA = "0xDEFE80", Offset = "0xDEFE80", VA = "0xDEFE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04BF0", Offset = "0xB04BF0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D3")]
		public event UIPointerEventHandler UIPointerElementDragEnd
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xDEFF24", Offset = "0xDEFF24", VA = "0xDEFF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C00", Offset = "0xB04C00")]
			add
			{
			}
			[Token(Token = "0x600153F")]
			[Address(RVA = "0xDEFFC8", Offset = "0xDEFFC8", VA = "0xDEFFC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C10", Offset = "0xB04C10")]
			remove
			{
			}
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xDF0128", Offset = "0xDF0128", VA = "0xDF0128", Slot = "4")]
		public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xDF0224", Offset = "0xDF0224", VA = "0xDF0224", Slot = "5")]
		public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xDF0350", Offset = "0xDF0350", VA = "0xDF0350", Slot = "6")]
		public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xDF0420", Offset = "0xDF0420", VA = "0xDF0420", Slot = "7")]
		public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xDF046C", Offset = "0xDF046C", VA = "0xDF046C", Slot = "8")]
		public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xDF04B8", Offset = "0xDF04B8", VA = "0xDF04B8", Slot = "9")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xDF04F4", Offset = "0xDF04F4", VA = "0xDF04F4", Slot = "10")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xDF0530", Offset = "0xDF0530", VA = "0xDF0530", Slot = "11")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xDF056C", Offset = "0xDF056C", VA = "0xDF056C", Slot = "12")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xDF05A8", Offset = "0xDF05A8", VA = "0xDF05A8", Slot = "13")]
		public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(UIPointerEventArgs);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xDF06B8", Offset = "0xDF06B8", VA = "0xDF06B8", Slot = "14")]
		public virtual VRTK_VRInputModule SetEventSystem(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xDF0878", Offset = "0xDF0878", VA = "0xDF0878", Slot = "15")]
		public virtual void RemoveEventSystem()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xDF09F0", Offset = "0xDF09F0", VA = "0xDF09F0", Slot = "16")]
		public virtual bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xDF0B54", Offset = "0xDF0B54", VA = "0xDF0B54", Slot = "17")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xDF0BF8", Offset = "0xDF0BF8", VA = "0xDF0BF8", Slot = "18")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xDF0C9C", Offset = "0xDF0C9C", VA = "0xDF0C9C", Slot = "19")]
		public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xDF0D20", Offset = "0xDF0D20", VA = "0xDF0D20", Slot = "20")]
		public virtual Vector3 GetOriginPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xDF0DB4", Offset = "0xDF0DB4", VA = "0xDF0DB4", Slot = "21")]
		public virtual Vector3 GetOriginForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xDF0E48", Offset = "0xDF0E48", VA = "0xDF0E48", Slot = "22")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xDF0EC8", Offset = "0xDF0EC8", VA = "0xDF0EC8", Slot = "23")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xDF1180", Offset = "0xDF1180", VA = "0xDF1180", Slot = "24")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xDF13CC", Offset = "0xDF13CC", VA = "0xDF13CC", Slot = "25")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xDF1444", Offset = "0xDF1444", VA = "0xDF1444", Slot = "26")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xDF15C0", Offset = "0xDF15C0", VA = "0xDF15C0", Slot = "27")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xDF162C", Offset = "0xDF162C", VA = "0xDF162C", Slot = "28")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xDF1698", Offset = "0xDF1698", VA = "0xDF1698", Slot = "29")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xDF1704", Offset = "0xDF1704", VA = "0xDF1704", Slot = "30")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xDF1770", Offset = "0xDF1770", VA = "0xDF1770", Slot = "31")]
		protected virtual void ResetHoverTimer()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xDF177C", Offset = "0xDF177C", VA = "0xDF177C", Slot = "32")]
		protected virtual void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xDF1950", Offset = "0xDF1950", VA = "0xDF1950")]
		public VRTK_UIPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class VRTK_ControllerElementHighlighters
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4F84", Offset = "0xAF4F84")]
		public VRTK_BaseHighlighter body;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4FBC", Offset = "0xAF4FBC")]
		public VRTK_BaseHighlighter trigger;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF4FF4", Offset = "0xAF4FF4")]
		public VRTK_BaseHighlighter gripLeft;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF502C", Offset = "0xAF502C")]
		public VRTK_BaseHighlighter gripRight;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5064", Offset = "0xAF5064")]
		public VRTK_BaseHighlighter touchpad;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF509C", Offset = "0xAF509C")]
		public VRTK_BaseHighlighter buttonOne;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF50D4", Offset = "0xAF50D4")]
		public VRTK_BaseHighlighter buttonTwo;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF510C", Offset = "0xAF510C")]
		public VRTK_BaseHighlighter systemMenu;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5144", Offset = "0xAF5144")]
		public VRTK_BaseHighlighter startMenu;

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x1693AD4", Offset = "0x1693AD4", VA = "0x1693AD4")]
		public VRTK_ControllerElementHighlighters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class VRTK_ControllerModelElementPaths
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF517C", Offset = "0xAF517C")]
		public string bodyModelPath;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF51B4", Offset = "0xAF51B4")]
		public string triggerModelPath;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF51EC", Offset = "0xAF51EC")]
		public string leftGripModelPath;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5224", Offset = "0xAF5224")]
		public string rightGripModelPath;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF525C", Offset = "0xAF525C")]
		public string touchpadModelPath;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5294", Offset = "0xAF5294")]
		public string buttonOneModelPath;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF52CC", Offset = "0xAF52CC")]
		public string buttonTwoModelPath;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5304", Offset = "0xAF5304")]
		public string systemMenuModelPath;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF533C", Offset = "0xAF533C")]
		public string startMenuModelPath;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x14A05BC", Offset = "0x14A05BC", VA = "0x14A05BC")]
		public VRTK_ControllerModelElementPaths()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public abstract class VRTK_ObjectFollow : MonoBehaviour
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5374", Offset = "0xAF5374")]
		public GameObject gameObjectToFollow;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF53AC", Offset = "0xAF53AC")]
		public GameObject gameObjectToChange;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF53E4", Offset = "0xAF53E4")]
		public bool followsPosition;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF541C", Offset = "0xAF541C")]
		public bool smoothsPosition;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5454", Offset = "0xAF5454")]
		public float maxAllowedPerFrameDistanceDifference;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF548C", Offset = "0xAF548C")]
		private Vector3 <targetPosition>k__BackingField;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF549C", Offset = "0xAF549C")]
		public bool followsRotation;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF54D4", Offset = "0xAF54D4")]
		public bool smoothsRotation;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF550C", Offset = "0xAF550C")]
		public float maxAllowedPerFrameAngleDifference;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5544", Offset = "0xAF5544")]
		private Quaternion <targetRotation>k__BackingField;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5554", Offset = "0xAF5554")]
		public bool followsScale;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF558C", Offset = "0xAF558C")]
		public bool smoothsScale;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF55C4", Offset = "0xAF55C4")]
		public float maxAllowedPerFrameSizeDifference;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF55FC", Offset = "0xAF55FC")]
		private Vector3 <targetScale>k__BackingField;

		[Token(Token = "0x17000084")]
		public Vector3 targetPosition
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x13500D0", Offset = "0x13500D0", VA = "0x13500D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C20", Offset = "0xB04C20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x13500DC", Offset = "0x13500DC", VA = "0x13500DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C30", Offset = "0xB04C30")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Quaternion targetRotation
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x13500E8", Offset = "0x13500E8", VA = "0x13500E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C40", Offset = "0xB04C40")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x13500F4", Offset = "0x13500F4", VA = "0x13500F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C50", Offset = "0xB04C50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public Vector3 targetScale
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x1350100", Offset = "0x1350100", VA = "0x1350100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C60", Offset = "0xB04C60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x135010C", Offset = "0x135010C", VA = "0x135010C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C70", Offset = "0xB04C70")]
			private set
			{
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1350118", Offset = "0x1350118", VA = "0x1350118", Slot = "4")]
		public virtual void Follow()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x13501EC", Offset = "0x13501EC", VA = "0x13501EC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x135027C", Offset = "0x135027C", VA = "0x135027C", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x600156A")]
		protected abstract Vector3 GetPositionToFollow();

		[Token(Token = "0x600156B")]
		protected abstract void SetPositionOnGameObject(Vector3 newPosition);

		[Token(Token = "0x600156C")]
		protected abstract Quaternion GetRotationToFollow();

		[Token(Token = "0x600156D")]
		protected abstract void SetRotationOnGameObject(Quaternion newRotation);

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x135032C", Offset = "0x135032C", VA = "0x135032C", Slot = "11")]
		protected virtual Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1350358", Offset = "0x1350358", VA = "0x1350358", Slot = "12")]
		protected virtual void SetScaleOnGameObject(Vector3 newScale)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x13503AC", Offset = "0x13503AC", VA = "0x13503AC", Slot = "13")]
		protected virtual void FollowPosition()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x13504F4", Offset = "0x13504F4", VA = "0x13504F4", Slot = "14")]
		protected virtual void FollowRotation()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1350664", Offset = "0x1350664", VA = "0x1350664", Slot = "15")]
		protected virtual void FollowScale()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x13507AC", Offset = "0x13507AC", VA = "0x13507AC")]
		protected VRTK_ObjectFollow()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4454", Offset = "0xAE4454")]
	public class VRTK_RigidbodyFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x20005C4")]
		public enum MovementOption
		{
			[Token(Token = "0x4002A62")]
			Set,
			[Token(Token = "0x4002A63")]
			Move,
			[Token(Token = "0x4002A64")]
			Add
		}

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF560C", Offset = "0xAF560C")]
		public MovementOption movementOption;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody rigidbodyToFollow;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody rigidbodyToChange;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x127DC0C", Offset = "0x127DC0C", VA = "0x127DC0C", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x127DC40", Offset = "0x127DC40", VA = "0x127DC40", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x127DC48", Offset = "0x127DC48", VA = "0x127DC48", Slot = "17")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x127DC54", Offset = "0x127DC54", VA = "0x127DC54", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x127DC70", Offset = "0x127DC70", VA = "0x127DC70", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x127DDD0", Offset = "0x127DDD0", VA = "0x127DDD0", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x127DDEC", Offset = "0x127DDEC", VA = "0x127DDEC", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x127DF6C", Offset = "0x127DF6C", VA = "0x127DF6C", Slot = "11")]
		protected override Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x127DF98", Offset = "0x127DF98", VA = "0x127DF98", Slot = "18")]
		protected virtual void CacheRigidbodies()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x127E0E0", Offset = "0x127E0E0", VA = "0x127E0E0")]
		public VRTK_RigidbodyFollow()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE448C", Offset = "0xAE448C")]
	public class VRTK_TransformFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x20005C5")]
		public enum FollowMoment
		{
			[Token(Token = "0x4002A66")]
			OnUpdate,
			[Token(Token = "0x4002A67")]
			OnLateUpdate,
			[Token(Token = "0x4002A68")]
			OnPreRender,
			[Token(Token = "0x4002A69")]
			OnPreCull
		}

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5644", Offset = "0xAF5644")]
		[SerializeField]
		private FollowMoment _moment;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform transformToFollow;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform transformToChange;

		[Token(Token = "0x17000087")]
		public FollowMoment moment
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0xDEB850", Offset = "0xDEB850", VA = "0xDEB850")]
			get
			{
				return default(FollowMoment);
			}
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xDEB858", Offset = "0xDEB858", VA = "0xDEB858")]
			set
			{
			}
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xDEBAD0", Offset = "0xDEBAD0", VA = "0xDEBAD0", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xDEBB04", Offset = "0xDEBB04", VA = "0xDEBB04", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xDEBC54", Offset = "0xDEBC54", VA = "0xDEBC54", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xDEBD78", Offset = "0xDEBD78", VA = "0xDEBD78")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xDEBD90", Offset = "0xDEBD90", VA = "0xDEBD90", Slot = "17")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xDEBDAC", Offset = "0xDEBDAC", VA = "0xDEBDAC", Slot = "18")]
		protected virtual void OnCamPreRender(Camera cam)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xDEBEA0", Offset = "0xDEBEA0", VA = "0xDEBEA0", Slot = "19")]
		protected virtual void OnCamPreCull(Camera cam)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xDEBF94", Offset = "0xDEBF94", VA = "0xDEBF94", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xDEBFB0", Offset = "0xDEBFB0", VA = "0xDEBFB0", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xDEBFCC", Offset = "0xDEBFCC", VA = "0xDEBFCC", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xDEBFE8", Offset = "0xDEBFE8", VA = "0xDEBFE8", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xDEC004", Offset = "0xDEC004", VA = "0xDEC004", Slot = "20")]
		protected virtual void CacheTransforms()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xDEC144", Offset = "0xDEC144", VA = "0xDEC144")]
		public VRTK_TransformFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000272")]
	public sealed class VRTK_SDKInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5690", Offset = "0xAF5690")]
		private Type <type>k__BackingField;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF56A0", Offset = "0xAF56A0")]
		private string <originalTypeNameWhenFallbackIsUsed>k__BackingField;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF56B0", Offset = "0xAF56B0")]
		private SDK_DescriptionAttribute <description>k__BackingField;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string baseTypeName;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string fallbackTypeName;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string typeName;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int descriptionIndex;

		[Token(Token = "0x17000088")]
		public Type type
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x127F92C", Offset = "0x127F92C", VA = "0x127F92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C80", Offset = "0xB04C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x127F934", Offset = "0x127F934", VA = "0x127F934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04C90", Offset = "0xB04C90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public string originalTypeNameWhenFallbackIsUsed
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x127F93C", Offset = "0x127F93C", VA = "0x127F93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CA0", Offset = "0xB04CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x127F944", Offset = "0x127F944", VA = "0x127F944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CB0", Offset = "0xB04CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public SDK_DescriptionAttribute description
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x127F94C", Offset = "0x127F94C", VA = "0x127F94C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CC0", Offset = "0xB04CC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x127F954", Offset = "0x127F954", VA = "0x127F954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CD0", Offset = "0xB04CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001593")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType, ActualType>() where BaseType : SDK_Base where FallbackType : BaseType where ActualType : BaseType
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType>(Type actualType) where BaseType : SDK_Base where FallbackType : BaseType
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x127F95C", Offset = "0x127F95C", VA = "0x127F95C")]
		private VRTK_SDKInfo()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x127F964", Offset = "0x127F964", VA = "0x127F964")]
		public VRTK_SDKInfo(VRTK_SDKInfo infoToCopy)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x127FA5C", Offset = "0x127FA5C", VA = "0x127FA5C")]
		private void SetUp(Type baseType, Type fallbackType, string actualTypeName, int descriptionIndex)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x12801D4", Offset = "0x12801D4", VA = "0x12801D4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x12801D8", Offset = "0x12801D8", VA = "0x12801D8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x12802B8", Offset = "0x12802B8", VA = "0x12802B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x12803F8", Offset = "0x12803F8", VA = "0x12803F8")]
		public bool Equals(VRTK_SDKInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x12803FC", Offset = "0x12803FC", VA = "0x12803FC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x128033C", Offset = "0x128033C", VA = "0x128033C")]
		public static bool operator ==(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x128041C", Offset = "0x128041C", VA = "0x128041C")]
		public static bool operator !=(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000273")]
	public sealed class VRTK_SDKManager : MonoBehaviour
	{
		[Token(Token = "0x20005C6")]
		public sealed class ScriptingDefineSymbolPredicateInfo
		{
			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly SDK_ScriptingDefineSymbolPredicateAttribute attribute;

			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly MethodInfo methodInfo;

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x1284528", Offset = "0x1284528", VA = "0x1284528")]
			public ScriptingDefineSymbolPredicateInfo(SDK_ScriptingDefineSymbolPredicateAttribute attribute, MethodInfo methodInfo)
			{
			}
		}

		[Token(Token = "0x20005C7")]
		public struct LoadedSetupChangeEventArgs
		{
			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly VRTK_SDKSetup previousSetup;

			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly VRTK_SDKSetup currentSetup;

			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string errorMessage;

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x128270C", Offset = "0x128270C", VA = "0x128270C")]
			public LoadedSetupChangeEventArgs(VRTK_SDKSetup previousSetup, VRTK_SDKSetup currentSetup, string errorMessage)
			{
			}
		}

		[Token(Token = "0x20005C8")]
		public delegate void LoadedSetupChangeEventHandler(VRTK_SDKManager sender, LoadedSetupChangeEventArgs e);

		[Serializable]
		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65CC", Offset = "0xAE65CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<VRTK_SDKSetup> <>9__69_0;

			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<VRTK_SDKSetup> <>9__69_1;

			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, bool> <>9__69_3;

			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<VRTK_SDKSetup> <>9__69_2;

			[Token(Token = "0x4002A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_1;

			[Token(Token = "0x4002A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_0;

			[Token(Token = "0x4002A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Comparison<ScriptingDefineSymbolPredicateInfo> <>9__80_0;

			[Token(Token = "0x4002A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ScriptingDefineSymbolPredicateInfo, bool> <>9__81_0;

			[Token(Token = "0x4002A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<ScriptingDefineSymbolPredicateInfo, string> <>9__81_1;

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x1283E24", Offset = "0x1283E24", VA = "0x1283E24")]
			public <>c()
			{
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x1283E2C", Offset = "0x1283E2C", VA = "0x1283E2C")]
			internal bool <TryLoadSDKSetupFromList>b__69_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x1283FA0", Offset = "0x1283FA0", VA = "0x1283FA0")]
			internal bool <TryLoadSDKSetupFromList>b__69_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x1284200", Offset = "0x1284200", VA = "0x1284200")]
			internal bool <TryLoadSDKSetupFromList>b__69_2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x1284308", Offset = "0x1284308", VA = "0x1284308")]
			internal bool <TryLoadSDKSetupFromList>b__69_3(string vrDeviceName)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x128435C", Offset = "0x128435C", VA = "0x128435C")]
			internal bool <TryLoadSDKSetup>b__71_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x12843AC", Offset = "0x12843AC", VA = "0x12843AC")]
			internal bool <TryLoadSDKSetup>b__71_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x12843C4", Offset = "0x12843C4", VA = "0x12843C4")]
			internal int <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__80_0(ScriptingDefineSymbolPredicateInfo x, ScriptingDefineSymbolPredicateInfo y)
			{
				return default(int);
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x1284400", Offset = "0x1284400", VA = "0x1284400")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__81_0(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x1284490", Offset = "0x1284490", VA = "0x1284490")]
			internal string <PopulateAvailableAndInstalledSDKInfos>b__81_1(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65DC", Offset = "0xAE65DC")]
		private sealed class <FinishSDKSetupLoading>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x4002A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SDKSetup[] sdkSetups;

			[Token(Token = "0x4002A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_SDKSetup previousLoadedSetup;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024FA")]
				[Address(RVA = "0x1284AD4", Offset = "0x1284AD4", VA = "0x1284AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024FC")]
				[Address(RVA = "0x1284B3C", Offset = "0x1284B3C", VA = "0x1284B3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x1283CA4", Offset = "0x1283CA4", VA = "0x1283CA4")]
			[DebuggerHidden]
			public <FinishSDKSetupLoading>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x1284560", Offset = "0x1284560", VA = "0x1284560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x1284564", Offset = "0x1284564", VA = "0x1284564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x1284ADC", Offset = "0x1284ADC", VA = "0x1284ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65EC", Offset = "0xAE65EC")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x4002A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x1283CD0", Offset = "0x1283CD0", VA = "0x1283CD0")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x12844B4", Offset = "0x12844B4", VA = "0x12844B4")]
			internal ScriptingDefineSymbolPredicateInfo <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__1(SDK_ScriptingDefineSymbolPredicateAttribute predicateAttribute)
			{
				return null;
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE65FC", Offset = "0xAE65FC")]
		private sealed class <>c__DisplayClass82_0<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x4002A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type baseType;

			[Token(Token = "0x4002A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type fallbackType;

			[Token(Token = "0x4002A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ICollection<string> symbolsOfInstalledSDKs;

			[Token(Token = "0x60024FF")]
			public <>c__DisplayClass82_0()
			{
			}

			[Token(Token = "0x6002500")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__0(Type type)
			{
				return default(bool);
			}

			[Token(Token = "0x6002501")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__2(VRTK_SDKInfo info)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE660C", Offset = "0xAE660C")]
		private sealed class <>c__82<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x4002A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__82<BaseType, FallbackType> <>9;

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<VRTK_SDKInfo> <>9__82_1;

			[Token(Token = "0x6002503")]
			public <>c__82()
			{
			}

			[Token(Token = "0x6002504")]
			internal int <PopulateAvailableAndInstalledSDKInfos>b__82_1(VRTK_SDKInfo x, VRTK_SDKInfo y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5700", Offset = "0xAF5700")]
		private static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> <AvailableScriptingDefineSymbolPredicateInfos>k__BackingField;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<Type, Type> SDKFallbackTypesByBaseType;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5710", Offset = "0xAF5710")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableSystemSDKInfos>k__BackingField;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5720", Offset = "0xAF5720")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5730", Offset = "0xAF5730")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5740", Offset = "0xAF5740")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5750", Offset = "0xAF5750")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5760", Offset = "0xAF5760")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5770", Offset = "0xAF5770")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5780", Offset = "0xAF5780")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static VRTK_SDKManager _instance;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5790", Offset = "0xAF5790")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAF5790", Offset = "0xAF5790")]
		public bool persistOnLoad;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF57F0", Offset = "0xAF57F0")]
		public bool autoManageScriptDefines;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SDK_ScriptingDefineSymbolPredicateAttribute> activeScriptingDefineSymbolsWithoutSDKClasses;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5828", Offset = "0xAF5828")]
		public GameObject scriptAliasLeftController;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5860", Offset = "0xAF5860")]
		public GameObject scriptAliasRightController;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5898", Offset = "0xAF5898")]
		public bool autoManageVRSettings;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF58D0", Offset = "0xAF58D0")]
		public bool autoLoadSetup;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5908", Offset = "0xAF5908")]
		public VRTK_SDKSetup[] setups;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5940", Offset = "0xAF5940")]
		private VRTK_SDKSetup <loadedSetup>k__BackingField;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static HashSet<VRTK_SDKInfo> _previouslyUsedSetupInfos;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF5950", Offset = "0xAF5950")]
		private ReadOnlyCollection<Behaviour> <behavioursToToggleOnLoadedSetupChange>k__BackingField;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Behaviour> _behavioursToToggleOnLoadedSetupChange;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Behaviour, bool> _behavioursInitialState;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastCheckTime;

		[Token(Token = "0x1700008B")]
		public static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> AvailableScriptingDefineSymbolPredicateInfos
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x1280438", Offset = "0x1280438", VA = "0x1280438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CE0", Offset = "0xB04CE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x12804A0", Offset = "0x12804A0", VA = "0x12804A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04CF0", Offset = "0xB04CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableSystemSDKInfos
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x128050C", Offset = "0x128050C", VA = "0x128050C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D00", Offset = "0xB04D00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1280574", Offset = "0x1280574", VA = "0x1280574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D10", Offset = "0xB04D10")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableBoundariesSDKInfos
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x12805E0", Offset = "0x12805E0", VA = "0x12805E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D20", Offset = "0xB04D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1280648", Offset = "0x1280648", VA = "0x1280648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D30", Offset = "0xB04D30")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableHeadsetSDKInfos
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x12806B4", Offset = "0x12806B4", VA = "0x12806B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D40", Offset = "0xB04D40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x128071C", Offset = "0x128071C", VA = "0x128071C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D50", Offset = "0xB04D50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableControllerSDKInfos
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1280788", Offset = "0x1280788", VA = "0x1280788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D60", Offset = "0xB04D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x12807F0", Offset = "0x12807F0", VA = "0x12807F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D70", Offset = "0xB04D70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledSystemSDKInfos
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x128085C", Offset = "0x128085C", VA = "0x128085C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D80", Offset = "0xB04D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x12808C4", Offset = "0x12808C4", VA = "0x12808C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04D90", Offset = "0xB04D90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledBoundariesSDKInfos
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1280930", Offset = "0x1280930", VA = "0x1280930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DA0", Offset = "0xB04DA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x1280998", Offset = "0x1280998", VA = "0x1280998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DB0", Offset = "0xB04DB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledHeadsetSDKInfos
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x1280A04", Offset = "0x1280A04", VA = "0x1280A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DC0", Offset = "0xB04DC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1280A6C", Offset = "0x1280A6C", VA = "0x1280A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DD0", Offset = "0xB04DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledControllerSDKInfos
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1280AD8", Offset = "0x1280AD8", VA = "0x1280AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DE0", Offset = "0xB04DE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1280B40", Offset = "0x1280B40", VA = "0x1280B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04DF0", Offset = "0xB04DF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public static VRTK_SDKManager instance
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x127E158", Offset = "0x127E158", VA = "0x127E158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		public VRTK_SDKSetup loadedSetup
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1280D8C", Offset = "0x1280D8C", VA = "0x1280D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E00", Offset = "0xB04E00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1280D94", Offset = "0x1280D94", VA = "0x1280D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E10", Offset = "0xB04E10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public ReadOnlyCollection<Behaviour> behavioursToToggleOnLoadedSetupChange
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x1280D9C", Offset = "0x1280D9C", VA = "0x1280D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E20", Offset = "0xB04E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x1280DA4", Offset = "0x1280DA4", VA = "0x1280DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E30", Offset = "0xB04E30")]
			private set
			{
			}
		}

		[Token(Token = "0x140000D4")]
		public event LoadedSetupChangeEventHandler LoadedSetupChanged
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1280DAC", Offset = "0x1280DAC", VA = "0x1280DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E40", Offset = "0xB04E40")]
			add
			{
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1280E50", Offset = "0x1280E50", VA = "0x1280E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04E50", Offset = "0xB04E50")]
			remove
			{
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x127E278", Offset = "0x127E278", VA = "0x127E278")]
		public void AddBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x127E668", Offset = "0x127E668", VA = "0x127E668")]
		public void RemoveBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1280EF4", Offset = "0x1280EF4", VA = "0x1280EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1280FB8", Offset = "0x1280FB8", VA = "0x1280FB8")]
		public void TryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1281664", Offset = "0x1281664", VA = "0x1281664")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x128101C", Offset = "0x128101C", VA = "0x128101C")]
		public void TryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x12823CC", Offset = "0x12823CC", VA = "0x12823CC")]
		public void UnloadSDKSetup(bool disableVR = false)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1282758", Offset = "0x1282758", VA = "0x1282758")]
		static VRTK_SDKManager()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x128351C", Offset = "0x128351C", VA = "0x128351C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x12835A0", Offset = "0x12835A0", VA = "0x12835A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1280BAC", Offset = "0x1280BAC", VA = "0x1280BAC")]
		private void CreateInstance()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1282718", Offset = "0x1282718", VA = "0x1282718")]
		private void OnLoadedSetupChanged(LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1282348", Offset = "0x1282348", VA = "0x1282348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04E60", Offset = "0xB04E60")]
		private IEnumerator FinishSDKSetupLoading(VRTK_SDKSetup[] sdkSetups, VRTK_SDKSetup previousLoadedSetup)
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x1281EEC", Offset = "0x1281EEC", VA = "0x1281EEC")]
		private void ToggleBehaviours(bool state)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x128294C", Offset = "0x128294C", VA = "0x128294C")]
		private static void PopulateAvailableScriptingDefineSymbolPredicateInfos()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1282EB4", Offset = "0x1282EB4", VA = "0x1282EB4")]
		private static void PopulateAvailableAndInstalledSDKInfos()
		{
		}

		[Token(Token = "0x60015C8")]
		private static void PopulateAvailableAndInstalledSDKInfos<BaseType, FallbackType>(List<VRTK_SDKInfo> availableSDKInfos, List<VRTK_SDKInfo> installedSDKInfos, ICollection<string> symbolsOfInstalledSDKs) where BaseType : SDK_Base where FallbackType : BaseType
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1283CD8", Offset = "0x1283CD8", VA = "0x1283CD8")]
		public VRTK_SDKManager()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public sealed class VRTK_SDKSetup : MonoBehaviour
	{
		[Token(Token = "0x20005CE")]
		public delegate void LoadEventHandler(VRTK_SDKManager sender, VRTK_SDKSetup setup);

		[Serializable]
		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE661C", Offset = "0xAE661C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKInfo, string> <>9__35_0;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject, GameObject> <>9__54_0;

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x12868D8", Offset = "0x12868D8", VA = "0x12868D8")]
			public <>c()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x12868E0", Offset = "0x12868E0", VA = "0x12868E0")]
			internal string <get_usedVRDeviceNames>b__35_0(VRTK_SDKInfo info)
			{
				return null;
			}

			[Token(Token = "0x600250C")]
			[Address(RVA = "0x1286904", Offset = "0x1286904", VA = "0x1286904")]
			internal void <SetupControllers>b__54_0(GameObject scriptAliasGameObject, GameObject actualGameObject)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE662C", Offset = "0xAE662C")]
		private sealed class <>c__52<BaseType> where BaseType : SDK_Base
		{
			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__52<BaseType> <>9;

			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<VRTK_SDKInfo, Type> <>9__52_0;

			[Token(Token = "0x600250E")]
			public <>c__52()
			{
			}

			[Token(Token = "0x600250F")]
			internal Type <GetSDKErrorDescription>b__52_0(VRTK_SDKInfo installedInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5970", Offset = "0xAF5970")]
		public bool autoPopulateObjectReferences;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF59A8", Offset = "0xAF59A8")]
		public GameObject actualBoundaries;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF59E0", Offset = "0xAF59E0")]
		public GameObject actualHeadset;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5A18", Offset = "0xAF5A18")]
		public GameObject actualLeftController;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5A50", Offset = "0xAF5A50")]
		public GameObject actualRightController;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5A88", Offset = "0xAF5A88")]
		public GameObject modelAliasLeftController;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5AC0", Offset = "0xAF5AC0")]
		public GameObject modelAliasRightController;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRTK_SDKInfo cachedSystemSDKInfo;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VRTK_SDKInfo cachedBoundariesSDKInfo;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRTK_SDKInfo cachedHeadsetSDKInfo;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VRTK_SDKInfo cachedControllerSDKInfo;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SDK_BaseSystem cachedSystemSDK;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SDK_BaseBoundaries cachedBoundariesSDK;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDK_BaseHeadset cachedHeadsetSDK;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SDK_BaseController cachedControllerSDK;

		[Token(Token = "0x17000097")]
		public VRTK_SDKInfo systemSDKInfo
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x12852AC", Offset = "0x12852AC", VA = "0x12852AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x12852B4", Offset = "0x12852B4", VA = "0x12852B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public VRTK_SDKInfo boundariesSDKInfo
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x12855AC", Offset = "0x12855AC", VA = "0x12855AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x12855B4", Offset = "0x12855B4", VA = "0x12855B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public VRTK_SDKInfo headsetSDKInfo
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x12856B0", Offset = "0x12856B0", VA = "0x12856B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x12856B8", Offset = "0x12856B8", VA = "0x12856B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public VRTK_SDKInfo controllerSDKInfo
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x12857B4", Offset = "0x12857B4", VA = "0x12857B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x12857BC", Offset = "0x12857BC", VA = "0x12857BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public SDK_BaseSystem systemSDK
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x12858B8", Offset = "0x12858B8", VA = "0x12858B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		public SDK_BaseBoundaries boundariesSDK
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x1285A24", Offset = "0x1285A24", VA = "0x1285A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public SDK_BaseHeadset headsetSDK
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x1285B90", Offset = "0x1285B90", VA = "0x1285B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		public SDK_BaseController controllerSDK
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x1285CFC", Offset = "0x1285CFC", VA = "0x1285CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public string[] usedVRDeviceNames
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x1284010", Offset = "0x1284010", VA = "0x1284010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		public bool isValid
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x1284384", Offset = "0x1284384", VA = "0x1284384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000D5")]
		public event LoadEventHandler Loaded
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x128501C", Offset = "0x128501C", VA = "0x128501C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04EC4", Offset = "0xB04EC4")]
			add
			{
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x12850C0", Offset = "0x12850C0", VA = "0x12850C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04ED4", Offset = "0xB04ED4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D6")]
		public event LoadEventHandler Unloaded
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1285164", Offset = "0x1285164", VA = "0x1285164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04EE4", Offset = "0xB04EE4")]
			add
			{
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1285208", Offset = "0x1285208", VA = "0x1285208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04EF4", Offset = "0xB04EF4")]
			remove
			{
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x12853B0", Offset = "0x12853B0", VA = "0x12853B0")]
		public void PopulateObjectReferences(bool force)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1281974", Offset = "0x1281974", VA = "0x1281974")]
		public string[] GetSimplifiedErrorDescriptions()
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1284844", Offset = "0x1284844", VA = "0x1284844")]
		public void OnLoaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1282104", Offset = "0x1282104", VA = "0x1282104")]
		public void OnUnloaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x128665C", Offset = "0x128665C", VA = "0x128665C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E1")]
		private static void HandleSDKGetter<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
		}

		[Token(Token = "0x60015E2")]
		private static string GetSDKErrorDescription<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1285E68", Offset = "0x1285E68", VA = "0x1285E68")]
		private void SetupHeadset()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1285F58", Offset = "0x1285F58", VA = "0x1285F58")]
		private void SetupControllers()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x12866E4", Offset = "0x12866E4", VA = "0x12866E4")]
		public VRTK_SDKSetup()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x12867D4", Offset = "0x12867D4", VA = "0x12867D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04F04", Offset = "0xB04F04")]
		private void <OnLoaded>b__48_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x12867FC", Offset = "0x12867FC", VA = "0x12867FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04F14", Offset = "0xB04F14")]
		private void <OnLoaded>b__48_1(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1286824", Offset = "0x1286824", VA = "0x1286824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04F24", Offset = "0xB04F24")]
		private void <OnUnloaded>b__49_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x128684C", Offset = "0x128684C", VA = "0x128684C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB04F34", Offset = "0xB04F34")]
		private void <OnUnloaded>b__49_1(SDK_Base sdkBase)
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class VRTK_SDKSetupSwitcher : MonoBehaviour
	{
		[Token(Token = "0x20005D1")]
		protected enum ViewingState
		{
			[Token(Token = "0x4002A8A")]
			Status,
			[Token(Token = "0x4002A8B")]
			Selection
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE663C", Offset = "0xAE663C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRTK_SDKSetupSwitcher <>4__this;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_SDKSetup[] setups;

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x12876C0", Offset = "0x12876C0", VA = "0x12876C0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0x12877F4", Offset = "0x12877F4", VA = "0x12877F4")]
			internal void <AddSelectionButtons>b__0()
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE664C", Offset = "0xAE664C")]
		private sealed class <>c__DisplayClass19_1
		{
			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int indexCopy;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass19_0 CS$<>8__locals1;

			[Token(Token = "0x6002512")]
			[Address(RVA = "0x12876C8", Offset = "0x12876C8", VA = "0x12876C8")]
			public <>c__DisplayClass19_1()
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0x128781C", Offset = "0x128781C", VA = "0x128781C")]
			internal void <AddSelectionButtons>b__1()
			{
			}
		}

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF5B58", Offset = "0xAF5B58")]
		[SerializeField]
		private Camera fallbackCamera;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventSystem eventSystem;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF5BB4", Offset = "0xAF5BB4")]
		[SerializeField]
		private Text currentText;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform statusPanel;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform selectionPanel;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button switchButton;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button cancelButton;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button chooseButton;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_SDKManager sdkManager;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<GameObject> chooseButtonGameObjects;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1286B0C", Offset = "0x1286B0C", VA = "0x1286B0C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1286B88", Offset = "0x1286B88", VA = "0x1286B88", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1286CD0", Offset = "0x1286CD0", VA = "0x1286CD0", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1286DF0", Offset = "0x1286DF0", VA = "0x1286DF0", Slot = "7")]
		protected virtual void OnLoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1286E00", Offset = "0x1286E00", VA = "0x1286E00", Slot = "8")]
		protected virtual void OnSwitchButtonClick()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1286E10", Offset = "0x1286E10", VA = "0x1286E10", Slot = "9")]
		protected virtual void OnCancelButtonClick()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1286E20", Offset = "0x1286E20", VA = "0x1286E20", Slot = "10")]
		protected virtual void Show(ViewingState viewingState)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1287110", Offset = "0x1287110", VA = "0x1287110", Slot = "11")]
		protected virtual void UpdateCurrentText()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x12871D4", Offset = "0x12871D4", VA = "0x12871D4", Slot = "12")]
		protected virtual void AddSelectionButtons()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x12876D0", Offset = "0x12876D0", VA = "0x12876D0", Slot = "13")]
		protected virtual void RemoveCreatedChooseButtons()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1287784", Offset = "0x1287784", VA = "0x1287784")]
		public VRTK_SDKSetupSwitcher()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE44C4", Offset = "0xAE44C4")]
	public sealed class VRTK_AdaptiveQuality : MonoBehaviour
	{
		[Token(Token = "0x20005D4")]
		private sealed class AdaptiveSetting<T>
		{
			[Token(Token = "0x4002A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9048", Offset = "0xAF9048")]
			private T <previousValue>k__BackingField;

			[Token(Token = "0x4002A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF9058", Offset = "0xAF9058")]
			private int <lastChangeFrameCount>k__BackingField;

			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int increaseFrameCost;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int decreaseFrameCost;

			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T _currentValue;

			[Token(Token = "0x170002F9")]
			public T currentValue
			{
				[Token(Token = "0x6002514")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002515")]
				set
				{
				}
			}

			[Token(Token = "0x170002FA")]
			public T previousValue
			{
				[Token(Token = "0x6002516")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0A428", Offset = "0xB0A428")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002517")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0A438", Offset = "0xB0A438")]
				private set
				{
				}
			}

			[Token(Token = "0x170002FB")]
			public int lastChangeFrameCount
			{
				[Token(Token = "0x6002518")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0A448", Offset = "0xB0A448")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002519")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0A458", Offset = "0xB0A458")]
				private set
				{
				}
			}

			[Token(Token = "0x600251A")]
			public AdaptiveSetting(T currentValue, int increaseFrameCost, int decreaseFrameCost)
			{
			}
		}

		[Token(Token = "0x20005D5")]
		private static class CommandLineArguments
		{
			[Token(Token = "0x4002A95")]
			public const string Disable = "-noaq";

			[Token(Token = "0x4002A96")]
			public const string MinimumRenderScale = "-aqminscale";

			[Token(Token = "0x4002A97")]
			public const string MaximumRenderScale = "-aqmaxscale";

			[Token(Token = "0x4002A98")]
			public const string MaximumRenderTargetDimension = "-aqmaxres";

			[Token(Token = "0x4002A99")]
			public const string RenderScaleFillRateStepSizeInPercent = "-aqfillratestep";

			[Token(Token = "0x4002A9A")]
			public const string OverrideRenderScaleLevel = "-aqoverride";

			[Token(Token = "0x4002A9B")]
			public const string DrawDebugVisualization = "-vrdebug";

			[Token(Token = "0x4002A9C")]
			public const string MSAALevel = "-msaa";
		}

		[Token(Token = "0x20005D6")]
		private static class KeyboardShortcuts
		{
			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly KeyCode[] Modifiers;

			[Token(Token = "0x4002A9E")]
			public const KeyCode ToggleDrawDebugVisualization = KeyCode.F1;

			[Token(Token = "0x4002A9F")]
			public const KeyCode ToggleOverrideRenderScale = KeyCode.F2;

			[Token(Token = "0x4002AA0")]
			public const KeyCode DecreaseOverrideRenderScaleLevel = KeyCode.F3;

			[Token(Token = "0x4002AA1")]
			public const KeyCode IncreaseOverrideRenderScaleLevel = KeyCode.F4;
		}

		[Token(Token = "0x20005D7")]
		private static class ShaderPropertyIDs
		{
			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int RenderScaleLevelsCount;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int DefaultRenderViewportScaleLevel;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int CurrentRenderViewportScaleLevel;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int CurrentRenderScaleLevel;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int LastFrameIsInBudget;
		}

		[Token(Token = "0x20005D8")]
		private sealed class Timing
		{
			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly float[] buffer;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int bufferIndex;

			[Token(Token = "0x600251D")]
			[Address(RVA = "0xF944B0", Offset = "0xF944B0", VA = "0xF944B0")]
			public void SaveCurrentFrameTiming()
			{
			}

			[Token(Token = "0x600251E")]
			[Address(RVA = "0xF94ED8", Offset = "0xF94ED8", VA = "0xF94ED8")]
			public float GetFrameTiming(int framesAgo)
			{
				return default(float);
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0xF94CA0", Offset = "0xF94CA0", VA = "0xF94CA0")]
			public bool WasFrameTimingBad(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002520")]
			[Address(RVA = "0xF94E4C", Offset = "0xF94E4C", VA = "0xF94E4C")]
			public bool WasFrameTimingGood(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0xF94D2C", Offset = "0xF94D2C", VA = "0xF94D2C")]
			public bool WillFrameTimingBeBad(float extrapolationThresholdInMilliseconds, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002522")]
			[Address(RVA = "0xF95120", Offset = "0xF95120", VA = "0xF95120")]
			private static bool AreFramesAvailable(int framesAgo, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002523")]
			[Address(RVA = "0xF92B98", Offset = "0xF92B98", VA = "0xF92B98")]
			public Timing()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE665C", Offset = "0xAE665C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<float> <>9__49_0;

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xF94F8C", Offset = "0xF94F8C", VA = "0xF94F8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0xF94F94", Offset = "0xF94F94", VA = "0xF94F94")]
			internal bool <UpdateRenderScaleLevels>b__49_0(float renderScale)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5C50", Offset = "0xAF5C50")]
		public bool drawDebugVisualization;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5C88", Offset = "0xAF5C88")]
		public bool allowKeyboardShortcuts;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5CC0", Offset = "0xAF5CC0")]
		public bool allowCommandLineArguments;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5CF8", Offset = "0xAF5CF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF5CF8", Offset = "0xAF5CF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF5CF8", Offset = "0xAF5CF8")]
		public int msaaLevel;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5D70", Offset = "0xAF5D70")]
		public bool scaleRenderViewport;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5DA8", Offset = "0xAF5DA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF5DA8", Offset = "0xAF5DA8")]
		public float minimumRenderScale;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5E00", Offset = "0xAF5E00")]
		public float maximumRenderScale;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5E38", Offset = "0xAF5E38")]
		public int maximumRenderTargetDimension;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5E70", Offset = "0xAF5E70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF5E70", Offset = "0xAF5E70")]
		public int renderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5EC8", Offset = "0xAF5EC8")]
		public bool scaleRenderTargetResolution;

		[NonSerialized]
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5F00", Offset = "0xAF5F00")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF5F00", Offset = "0xAF5F00")]
		public bool overrideRenderViewportScale;

		[NonSerialized]
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5F60", Offset = "0xAF5F60")]
		public int overrideRenderViewportScaleLevel;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly ReadOnlyCollection<float> renderScales;

		[Token(Token = "0x40012BD")]
		private const float DefaultFrameDurationInMilliseconds = 13.888889f;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly AdaptiveSetting<int> renderViewportScaleSetting;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly AdaptiveSetting<int> renderScaleSetting;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<float> allRenderScales;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultRenderViewportScaleLevel;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float previousMinimumRenderScale;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float previousMaximumRenderScale;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float previousRenderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Timing timing;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int lastRenderViewportScaleLevelBelowRenderScaleLevelFrameCount;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool interleavedReprojectionEnabled;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool hmdDisplayIsOnDesktop;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float singleFrameDurationInMilliseconds;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject debugVisualizationQuad;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material debugVisualizationQuadMaterial;

		[Token(Token = "0x170000A1")]
		public static float CurrentRenderScale
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xF928CC", Offset = "0xF928CC", VA = "0xF928CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A2")]
		public Vector2 defaultRenderTargetResolution
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xF928FC", Offset = "0xF928FC", VA = "0xF928FC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000A3")]
		public Vector2 currentRenderTargetResolution
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xF92A28", Offset = "0xF92A28", VA = "0xF92A28")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF92A58", Offset = "0xF92A58", VA = "0xF92A58")]
		public VRTK_AdaptiveQuality()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF9296C", Offset = "0xF9296C", VA = "0xF9296C")]
		public static Vector2 RenderTargetResolutionForRenderScale(float renderScale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF92BF8", Offset = "0xF92BF8", VA = "0xF92BF8")]
		public float BiggestAllowedMaximumRenderScale()
		{
			return default(float);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF92CF8", Offset = "0xF92CF8", VA = "0xF92CF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF93060", Offset = "0xF93060", VA = "0xF93060")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF930D8", Offset = "0xF930D8", VA = "0xF930D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF93670", Offset = "0xF93670", VA = "0xF93670")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF93828", Offset = "0xF93828", VA = "0xF93828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF93560", Offset = "0xF93560", VA = "0xF93560")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xF938A0", Offset = "0xF938A0", VA = "0xF938A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xF94514", Offset = "0xF94514", VA = "0xF94514")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF94AF0", Offset = "0xF94AF0", VA = "0xF94AF0")]
		private void OnCameraPreCull(Camera camera)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF93264", Offset = "0xF93264", VA = "0xF93264")]
		private void HandleCommandLineArguments()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF938E4", Offset = "0xF938E4", VA = "0xF938E4")]
		private void HandleKeyPresses()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF94BD0", Offset = "0xF94BD0", VA = "0xF94BD0")]
		private void UpdateMSAALevel()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF93A30", Offset = "0xF93A30", VA = "0xF93A30")]
		private void UpdateRenderScaleLevels()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF94518", Offset = "0xF94518", VA = "0xF94518")]
		private void UpdateRenderScale()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xF9373C", Offset = "0xF9373C", VA = "0xF9373C")]
		private static void SetRenderScale(float renderScale, float renderViewportScale)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xF94C14", Offset = "0xF94C14", VA = "0xF94C14")]
		private int ClampRenderScaleLevel(int renderScaleLevel)
		{
			return default(int);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF93D70", Offset = "0xF93D70", VA = "0xF93D70")]
		private void CreateOrDestroyDebugVisualization()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF94314", Offset = "0xF94314", VA = "0xF94314")]
		private void UpdateDebugVisualization()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE44FC", Offset = "0xAE44FC")]
	public class VRTK_CustomRaycast : MonoBehaviour
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5F98", Offset = "0xAF5F98")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF5FD0", Offset = "0xAF5FD0")]
		public QueryTriggerInteraction triggerInteraction;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x14A5550", Offset = "0x14A5550", VA = "0x14A5550")]
		public static bool Raycast(VRTK_CustomRaycast customCast, Ray ray, out RaycastHit hitData, LayerMask ignoreLayers, float length = float.PositiveInfinity, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x14A5680", Offset = "0x14A5680", VA = "0x14A5680")]
		public static bool Linecast(VRTK_CustomRaycast customCast, Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x14A57C4", Offset = "0x14A57C4", VA = "0x14A57C4")]
		public static bool CapsuleCast(VRTK_CustomRaycast customCast, Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x14A5944", Offset = "0x14A5944", VA = "0x14A5944", Slot = "4")]
		public virtual bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x14A59B4", Offset = "0x14A59B4", VA = "0x14A59B4", Slot = "5")]
		public virtual bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x14A5A38", Offset = "0x14A5A38", VA = "0x14A5A38", Slot = "6")]
		public virtual bool CustomCapsuleCast(Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x14A5AE4", Offset = "0x14A5AE4", VA = "0x14A5AE4")]
		public VRTK_CustomRaycast()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public static class VRTK_DeviceFinder
	{
		[Token(Token = "0x20005DA")]
		public enum Devices
		{
			[Token(Token = "0x4002AAC")]
			Headset,
			[Token(Token = "0x4002AAD")]
			LeftController,
			[Token(Token = "0x4002AAE")]
			RightController
		}

		[Token(Token = "0x20005DB")]
		public enum Headsets
		{
			[Token(Token = "0x4002AB0")]
			Unknown,
			[Token(Token = "0x4002AB1")]
			OculusRift,
			[Token(Token = "0x4002AB2")]
			OculusRiftCV1,
			[Token(Token = "0x4002AB3")]
			Vive,
			[Token(Token = "0x4002AB4")]
			ViveMV,
			[Token(Token = "0x4002AB5")]
			ViveDVT
		}

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cachedHeadsetType;

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x14A9B54", Offset = "0x14A9B54", VA = "0x14A9B54")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x14A9BB4", Offset = "0x14A9BB4", VA = "0x14A9BB4")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x14A9C1C", Offset = "0x14A9C1C", VA = "0x14A9C1C")]
		public static GameObject GetControllerByIndex(uint index, bool getActual)
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x14A9C94", Offset = "0x14A9C94", VA = "0x14A9C94")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB04F44", Offset = "0xB04F44")]
		public static Transform GetControllerOrigin(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x14A9D28", Offset = "0x14A9D28", VA = "0x14A9D28")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x14A9D90", Offset = "0x14A9D90", VA = "0x14A9D90")]
		public static Transform DeviceTransform(Devices device)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x14A9E80", Offset = "0x14A9E80", VA = "0x14A9E80")]
		public static SDK_BaseController.ControllerHand GetControllerHandType(string hand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x149E9D0", Offset = "0x149E9D0", VA = "0x149E9D0")]
		public static SDK_BaseController.ControllerHand GetControllerHand(GameObject controller)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x14A857C", Offset = "0x14A857C", VA = "0x14A857C")]
		public static GameObject GetControllerLeftHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x14A85E4", Offset = "0x14A85E4", VA = "0x14A85E4")]
		public static GameObject GetControllerRightHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x14A9F1C", Offset = "0x14A9F1C", VA = "0x14A9F1C")]
		public static bool IsControllerOfHand(GameObject checkController, SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x14A9FE4", Offset = "0x14A9FE4", VA = "0x14A9FE4")]
		public static bool IsControllerLeftHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x14AA04C", Offset = "0x14AA04C", VA = "0x14AA04C")]
		public static bool IsControllerRightHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x14A2DCC", Offset = "0x14A2DCC", VA = "0x14A2DCC")]
		public static GameObject GetActualController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x14AA0B4", Offset = "0x14AA0B4", VA = "0x14AA0B4")]
		public static GameObject GetScriptAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x149F3DC", Offset = "0x149F3DC", VA = "0x149F3DC")]
		public static GameObject GetModelAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x14AA20C", Offset = "0x14AA20C", VA = "0x14AA20C")]
		public static SDK_BaseController.ControllerHand GetModelAliasControllerHand(GameObject givenObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x14AA324", Offset = "0x14AA324", VA = "0x14AA324")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB04F7C", Offset = "0xB04F7C")]
		public static Vector3 GetControllerVelocity(GameObject givenController)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x14AA3B8", Offset = "0x14AA3B8", VA = "0x14AA3B8")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x14AA420", Offset = "0x14AA420", VA = "0x14AA420")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB04FB4", Offset = "0xB04FB4")]
		public static Vector3 GetControllerAngularVelocity(GameObject givenController)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x14AA4B4", Offset = "0x14AA4B4", VA = "0x14AA4B4")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x14AA51C", Offset = "0x14AA51C", VA = "0x14AA51C")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x14AA57C", Offset = "0x14AA57C", VA = "0x14AA57C")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x14A7ED0", Offset = "0x14A7ED0", VA = "0x14A7ED0")]
		public static Transform HeadsetTransform()
		{
			return null;
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x14AA5DC", Offset = "0x14AA5DC", VA = "0x14AA5DC")]
		public static Transform HeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x14AA63C", Offset = "0x14AA63C", VA = "0x14AA63C")]
		public static void ResetHeadsetTypeCache()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x14AA6B0", Offset = "0x14AA6B0", VA = "0x14AA6B0")]
		public static Headsets GetHeadsetType(bool summary = false)
		{
			return default(Headsets);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x14A7E70", Offset = "0x14A7E70", VA = "0x14A7E70")]
		public static Transform PlayAreaTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4534", Offset = "0xAE4534")]
	public class VRTK_PolicyList : MonoBehaviour
	{
		[Token(Token = "0x20005DC")]
		public enum OperationTypes
		{
			[Token(Token = "0x4002AB7")]
			Ignore,
			[Token(Token = "0x4002AB8")]
			Include
		}

		[Token(Token = "0x20005DD")]
		public enum CheckTypes
		{
			[Token(Token = "0x4002ABA")]
			Tag = 1,
			[Token(Token = "0x4002ABB")]
			Script = 2,
			[Token(Token = "0x4002ABC")]
			Layer = 4
		}

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6008", Offset = "0xAF6008")]
		public OperationTypes operation;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6040", Offset = "0xAF6040")]
		public CheckTypes checkType;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6078", Offset = "0xAF6078")]
		public List<string> identifiers;

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x135CF60", Offset = "0x135CF60", VA = "0x135CF60", Slot = "4")]
		public virtual bool Find(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1354DBC", Offset = "0x1354DBC", VA = "0x1354DBC")]
		public static bool Check(GameObject obj, VRTK_PolicyList list)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x135CF78", Offset = "0x135CF78", VA = "0x135CF78", Slot = "5")]
		protected virtual bool ScriptCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x135D068", Offset = "0x135D068", VA = "0x135D068", Slot = "6")]
		protected virtual bool TagCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x135D0F4", Offset = "0x135D0F4", VA = "0x135D0F4", Slot = "7")]
		protected virtual bool LayerCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x135D188", Offset = "0x135D188", VA = "0x135D188", Slot = "8")]
		protected virtual bool TypeCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x135D34C", Offset = "0x135D34C", VA = "0x135D34C")]
		public VRTK_PolicyList()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class VRTK_SDKObjectAlias : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		public enum SDKObject
		{
			[Token(Token = "0x4002ABE")]
			Boundary,
			[Token(Token = "0x4002ABF")]
			Headset
		}

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF60B0", Offset = "0xAF60B0")]
		public SDKObject sdkObject;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1284BFC", Offset = "0x1284BFC", VA = "0x1284BFC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1284CE4", Offset = "0x1284CE4", VA = "0x1284CE4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1284DBC", Offset = "0x1284DBC", VA = "0x1284DBC", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1284E4C", Offset = "0x1284E4C", VA = "0x1284E4C", Slot = "7")]
		protected virtual void ChildToSDKObject()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1285014", Offset = "0x1285014", VA = "0x1285014")]
		public VRTK_SDKObjectAlias()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class VRTK_SDKTransformModifiers
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF60E8", Offset = "0xAF60E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF60E8", Offset = "0xAF60E8")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6148", Offset = "0xAF6148")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6180", Offset = "0xAF6180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6180", Offset = "0xAF6180")]
		public Vector3 position;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF61E0", Offset = "0xAF61E0")]
		public Vector3 rotation;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6218", Offset = "0xAF6218")]
		public Vector3 scale;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1287858", Offset = "0x1287858", VA = "0x1287858")]
		public VRTK_SDKTransformModifiers()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class VRTK_SDKTransformModify : MonoBehaviour
	{
		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE666C", Offset = "0xAE666C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentController;

			[Token(Token = "0x6002527")]
			[Address(RVA = "0x1287EB0", Offset = "0x1287EB0", VA = "0x1287EB0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002528")]
			[Address(RVA = "0x1288070", Offset = "0x1288070", VA = "0x1288070")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE667C", Offset = "0xAE667C")]
		private sealed class <UpdateTransform>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_SDKTransformModify <>4__this;

			[Token(Token = "0x170002FC")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600252C")]
				[Address(RVA = "0x1288214", Offset = "0x1288214", VA = "0x1288214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600252E")]
				[Address(RVA = "0x128827C", Offset = "0x128827C", VA = "0x128827C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002529")]
			[Address(RVA = "0x1287F28", Offset = "0x1287F28", VA = "0x1287F28")]
			[DebuggerHidden]
			public <UpdateTransform>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600252A")]
			[Address(RVA = "0x1288094", Offset = "0x1288094", VA = "0x1288094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600252B")]
			[Address(RVA = "0x1288098", Offset = "0x1288098", VA = "0x1288098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600252D")]
			[Address(RVA = "0x128821C", Offset = "0x128821C", VA = "0x128821C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6250", Offset = "0xAF6250")]
		public Transform target;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6288", Offset = "0xAF6288")]
		public List<VRTK_SDKTransformModifiers> sdkOverrides;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_SDKTransformModifiers questOverride;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool init;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalPos;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalRot;

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x12878F0", Offset = "0x12878F0", VA = "0x12878F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x12879C0", Offset = "0x12879C0", VA = "0x12879C0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1287B74", Offset = "0x1287B74", VA = "0x1287B74", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1287C4C", Offset = "0x1287C4C", VA = "0x1287C4C", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1287CCC", Offset = "0x1287CCC", VA = "0x1287CCC", Slot = "7")]
		protected virtual VRTK_SDKTransformModifiers GetSelectedModifier()
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1287EB8", Offset = "0x1287EB8", VA = "0x1287EB8", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB04FEC", Offset = "0xB04FEC")]
		protected virtual IEnumerator<float> UpdateTransform()
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1287F54", Offset = "0x1287F54", VA = "0x1287F54")]
		public VRTK_SDKTransformModify()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1287FE0", Offset = "0x1287FE0", VA = "0x1287FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05050", Offset = "0xB05050")]
		private bool <GetSelectedModifier>b__11_0(VRTK_SDKTransformModifiers item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200027D")]
	public static class VRTK_SharedMethods
	{
		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE668C", Offset = "0xAE668C")]
		private sealed class <>c__DisplayClass18_0<T> where T : Component
		{
			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Scene activeScene;

			[Token(Token = "0x600252F")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002530")]
			internal bool <FindEvenInactiveComponents>b__0(T @object)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE669C", Offset = "0xAE669C")]
		private sealed class <>c__DisplayClass19_0<T> where T : Component
		{
			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Scene activeScene;

			[Token(Token = "0x6002531")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002532")]
			internal bool <FindEvenInactiveComponent>b__0(T @object)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66AC", Offset = "0xAE66AC")]
		private sealed class <>c__DisplayClass20_0<T> where T : Component
		{
			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string gameObjectName;

			[Token(Token = "0x6002533")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002534")]
			internal GameObject <FindEvenInactiveGameObject>b__0(T component)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66BC", Offset = "0xAE66BC")]
		private sealed class <>c__20<T> where T : Component
		{
			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__20<T> <>9;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<GameObject, bool> <>9__20_1;

			[Token(Token = "0x6002536")]
			public <>c__20()
			{
			}

			[Token(Token = "0x6002537")]
			internal bool <FindEvenInactiveGameObject>b__20_1(GameObject gameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x128CBA0", Offset = "0x128CBA0", VA = "0x128CBA0")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x128D09C", Offset = "0x128D09C", VA = "0x128D09C")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x128D108", Offset = "0x128D108", VA = "0x128D108")]
		public static Transform AddCameraFade()
		{
			return null;
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x128D1A0", Offset = "0x128D1A0", VA = "0x128D1A0")]
		public static void CreateColliders(GameObject obj)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x128D2D4", Offset = "0x128D2D4", VA = "0x128D2D4")]
		public static Component CloneComponent(Component source, GameObject destination, bool copyProperties = false)
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x128D480", Offset = "0x128D480", VA = "0x128D480")]
		public static Color ColorDarken(Color color, float percent)
		{
			return default(Color);
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x128D5B0", Offset = "0x128D5B0", VA = "0x128D5B0")]
		public static float RoundFloat(float givenFloat, int decimalPlaces, bool rawFidelity = false)
		{
			return default(float);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x128D6E0", Offset = "0x128D6E0", VA = "0x128D6E0")]
		public static bool IsEditTime()
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x128D6E8", Offset = "0x128D6E8", VA = "0x128D6E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05060", Offset = "0xB05060")]
		public static void TriggerHapticPulse(uint controllerIndex, float strength)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x128D768", Offset = "0x128D768", VA = "0x128D768")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05098", Offset = "0xB05098")]
		public static void TriggerHapticPulse(uint controllerIndex, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x128D800", Offset = "0x128D800", VA = "0x128D800")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB050D0", Offset = "0xB050D0")]
		public static void CancelHapticPulse(uint controllerIndex)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x128D870", Offset = "0x128D870", VA = "0x128D870")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05108", Offset = "0xB05108")]
		public static void SetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x128D878", Offset = "0x128D878", VA = "0x128D878")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05140", Offset = "0xB05140")]
		public static void SetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x128D880", Offset = "0x128D880", VA = "0x128D880")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05178", Offset = "0xB05178")]
		public static void SetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x128D888", Offset = "0x128D888", VA = "0x128D888")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB051B0", Offset = "0xB051B0")]
		public static void ToggleRenderer(bool state, GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x128D894", Offset = "0x128D894", VA = "0x128D894")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB051E8", Offset = "0xB051E8")]
		public static void HighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x128D8C8", Offset = "0x128D8C8", VA = "0x128D8C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB05220", Offset = "0xB05220")]
		public static void UnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x128D8D0", Offset = "0x128D8D0", VA = "0x128D8D0")]
		public static float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001658")]
		public static T[] FindEvenInactiveComponents<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		public static T FindEvenInactiveComponent<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		public static GameObject FindEvenInactiveGameObject<T>([Optional] string gameObjectName, bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		public static T[] FindEvenInactiveComponents<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600165C")]
		public static T FindEvenInactiveComponent<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		private static IEnumerable<T> FindEvenInactiveComponentsInValidScenes<T>(bool searchAllScenes, bool stopOnMatch = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600165E")]
		private static IEnumerable<T> FindEventInactiveComponentsInScene<T>(Scene scene, bool stopOnMatch = false)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x128D94C", Offset = "0x128D94C", VA = "0x128D94C")]
		public static string GenerateVRTKObjectName(bool autoGen, params object[] replacements)
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x128DB28", Offset = "0x128DB28", VA = "0x128DB28")]
		public static float GetGPUTimeLastFrame()
		{
			return default(float);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x128DB60", Offset = "0x128DB60", VA = "0x128DB60")]
		public static bool Vector2ShallowCompare(Vector2 vectorA, Vector2 vectorB, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x128D510", Offset = "0x128D510", VA = "0x128D510")]
		public static float NumberPercent(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x128DCC8", Offset = "0x128DCC8", VA = "0x128DCC8")]
		public static void SetGlobalScale(this Transform transform, Vector3 globalScale)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x128DDD0", Offset = "0x128DDD0", VA = "0x128DDD0")]
		public static Type GetTypeUnknownAssembly(string typeName)
		{
			return null;
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE457C", Offset = "0xAE457C")]
	public class VRTK_Simulator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005E5")]
		public class Keys
		{
			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode forward;

			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode backward;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode strafeLeft;

			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode strafeRight;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode left;

			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode right;

			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode up;

			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode down;

			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode reset;

			[Token(Token = "0x6002538")]
			[Address(RVA = "0x128FB44", Offset = "0x128FB44", VA = "0x128FB44")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF62C0", Offset = "0xAF62C0")]
		public Keys keys;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF62F8", Offset = "0xAF62F8")]
		public bool onlyInEditor;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6330", Offset = "0xAF6330")]
		public float stepSize;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6368", Offset = "0xAF6368")]
		public Transform camStart;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform headset;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform playArea;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initialPosition;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x128F45C", Offset = "0x128F45C", VA = "0x128F45C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x128F4CC", Offset = "0x128F4CC", VA = "0x128F4CC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x128F77C", Offset = "0x128F77C", VA = "0x128F77C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x128F7EC", Offset = "0x128F7EC", VA = "0x128F7EC", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x128FAF0", Offset = "0x128FAF0", VA = "0x128FAF0", Slot = "8")]
		protected virtual Vector3 overwriteY(Vector3 vector, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x128FB28", Offset = "0x128FB28", VA = "0x128FB28")]
		public VRTK_Simulator()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE45B4", Offset = "0xAE45B4")]
	public class VRTK_VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66CC", Offset = "0xAE66CC")]
		private sealed class <EstimateVelocity>d__15 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_VelocityEstimator <>4__this;

			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x170002FE")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600253C")]
				[Address(RVA = "0xDF4840", Offset = "0xDF4840", VA = "0xDF4840", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600253E")]
				[Address(RVA = "0xDF48A8", Offset = "0xDF48A8", VA = "0xDF48A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002539")]
			[Address(RVA = "0xDF4428", Offset = "0xDF4428", VA = "0xDF4428")]
			[DebuggerHidden]
			public <EstimateVelocity>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600253A")]
			[Address(RVA = "0xDF4470", Offset = "0xDF4470", VA = "0xDF4470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600253B")]
			[Address(RVA = "0xDF4474", Offset = "0xDF4474", VA = "0xDF4474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0xDF4848", Offset = "0xDF4848", VA = "0xDF4848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF63A0", Offset = "0xAF63A0")]
		public bool autoStartSampling;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF63D8", Offset = "0xAF63D8")]
		public int velocityAverageFrames;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6410", Offset = "0xAF6410")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int currentSampleCount;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected CoroutineHandle calculateSamplesRoutine;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xDF3C4C", Offset = "0xDF3C4C", VA = "0xDF3C4C", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xDF3CE4", Offset = "0xDF3CE4", VA = "0xDF3CE4", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xDF3D50", Offset = "0xDF3D50", VA = "0xDF3D50", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xDF3F50", Offset = "0xDF3F50", VA = "0xDF3F50", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xDF4118", Offset = "0xDF4118", VA = "0xDF4118", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xDF42FC", Offset = "0xDF42FC", VA = "0xDF42FC", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xDF4344", Offset = "0xDF4344", VA = "0xDF4344", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xDF4350", Offset = "0xDF4350", VA = "0xDF4350", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xDF43B8", Offset = "0xDF43B8", VA = "0xDF43B8", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05268", Offset = "0xB05268")]
		protected virtual IEnumerator<float> EstimateVelocity()
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xDF4454", Offset = "0xDF4454", VA = "0xDF4454")]
		public VRTK_VelocityEstimator()
		{
		}
	}
}
namespace VRTK.UnityEventHelper
{
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE45EC", Offset = "0xAE45EC")]
	public sealed class VRTK_BasicTeleport_UnityEvents : VRTK_UnityEvents<VRTK_BasicTeleport>
	{
		[Serializable]
		[Token(Token = "0x20005E7")]
		public sealed class TeleportEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x10CFDFC", Offset = "0x10CFDFC", VA = "0x10CFDFC")]
			public TeleportEvent()
			{
			}
		}

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportEvent OnTeleporting;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TeleportEvent OnTeleported;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x10CFAAC", Offset = "0x10CFAAC", VA = "0x10CFAAC", Slot = "4")]
		protected override void AddListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x10CFB64", Offset = "0x10CFB64", VA = "0x10CFB64", Slot = "5")]
		protected override void RemoveListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10CFC1C", Offset = "0x10CFC1C", VA = "0x10CFC1C")]
		private void Teleporting(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x10CFCC8", Offset = "0x10CFCC8", VA = "0x10CFCC8")]
		private void Teleported(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x10CFD74", Offset = "0x10CFD74", VA = "0x10CFD74")]
		public VRTK_BasicTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4624", Offset = "0xAE4624")]
	public sealed class VRTK_BodyPhysics_UnityEvents : VRTK_UnityEvents<VRTK_BodyPhysics>
	{
		[Serializable]
		[Token(Token = "0x20005E8")]
		public sealed class BodyPhysicsEvent : UnityEvent<object, BodyPhysicsEventArgs>
		{
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x10D0934", Offset = "0x10D0934", VA = "0x10D0934")]
			public BodyPhysicsEvent()
			{
			}
		}

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BodyPhysicsEvent OnStartFalling;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BodyPhysicsEvent OnStopFalling;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BodyPhysicsEvent OnStartMoving;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BodyPhysicsEvent OnStopMoving;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BodyPhysicsEvent OnStartColliding;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BodyPhysicsEvent OnStopColliding;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BodyPhysicsEvent OnStartLeaning;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BodyPhysicsEvent OnStopLeaning;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BodyPhysicsEvent OnStartTouchingGround;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BodyPhysicsEvent OnStopTouchingGround;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10CFE4C", Offset = "0x10CFE4C", VA = "0x10CFE4C", Slot = "4")]
		protected override void AddListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10D00AC", Offset = "0x10D00AC", VA = "0x10D00AC", Slot = "5")]
		protected override void RemoveListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x10D030C", Offset = "0x10D030C", VA = "0x10D030C")]
		private void StartFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10D038C", Offset = "0x10D038C", VA = "0x10D038C")]
		private void StopFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x10D040C", Offset = "0x10D040C", VA = "0x10D040C")]
		private void StartMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x10D048C", Offset = "0x10D048C", VA = "0x10D048C")]
		private void StopMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x10D050C", Offset = "0x10D050C", VA = "0x10D050C")]
		private void StartColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x10D058C", Offset = "0x10D058C", VA = "0x10D058C")]
		private void StopColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x10D060C", Offset = "0x10D060C", VA = "0x10D060C")]
		private void StartLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x10D068C", Offset = "0x10D068C", VA = "0x10D068C")]
		private void StopLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x10D070C", Offset = "0x10D070C", VA = "0x10D070C")]
		private void StartTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x10D078C", Offset = "0x10D078C", VA = "0x10D078C")]
		private void StopTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x10D080C", Offset = "0x10D080C", VA = "0x10D080C")]
		public VRTK_BodyPhysics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE465C", Offset = "0xAE465C")]
	public sealed class VRTK_Button_UnityEvents : VRTK_UnityEvents<VRTK_Button>
	{
		[Serializable]
		[Token(Token = "0x20005E9")]
		public sealed class Button3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x10D0C8C", Offset = "0x10D0C8C", VA = "0x10D0C8C")]
			public Button3DEvent()
			{
			}
		}

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button3DEvent OnPushed;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button3DEvent OnReleased;

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x10D0984", Offset = "0x10D0984", VA = "0x10D0984", Slot = "4")]
		protected override void AddListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x10D0A44", Offset = "0x10D0A44", VA = "0x10D0A44", Slot = "5")]
		protected override void RemoveListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x10D0B04", Offset = "0x10D0B04", VA = "0x10D0B04")]
		private void Pushed(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x10D0B84", Offset = "0x10D0B84", VA = "0x10D0B84")]
		public void Released(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x10D0C04", Offset = "0x10D0C04", VA = "0x10D0C04")]
		public VRTK_Button_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4694", Offset = "0xAE4694")]
	public sealed class VRTK_Control_UnityEvents : VRTK_UnityEvents<VRTK_Control>
	{
		[Serializable]
		[Token(Token = "0x20005EA")]
		public sealed class Control3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x10D0EE0", Offset = "0x10D0EE0", VA = "0x10D0EE0")]
			public Control3DEvent()
			{
			}
		}

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Control3DEvent OnValueChanged;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x10D0CDC", Offset = "0x10D0CDC", VA = "0x10D0CDC", Slot = "4")]
		protected override void AddListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x10D0D68", Offset = "0x10D0D68", VA = "0x10D0D68", Slot = "5")]
		protected override void RemoveListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x10D0DF4", Offset = "0x10D0DF4", VA = "0x10D0DF4")]
		private void ValueChanged(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x10D0E74", Offset = "0x10D0E74", VA = "0x10D0E74")]
		public VRTK_Control_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public sealed class VRTK_ControllerActions_UnityEvents : VRTK_UnityEvents<VRTK_ControllerActions>
	{
		[Serializable]
		[Token(Token = "0x20005EB")]
		public sealed class ControllerActionsEvent : UnityEvent<object, ControllerActionsEventArgs>
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x10D1218", Offset = "0x10D1218", VA = "0x10D1218")]
			public ControllerActionsEvent()
			{
			}
		}

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerActionsEvent OnControllerModelVisible;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerActionsEvent OnControllerModelInvisible;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x10D0F30", Offset = "0x10D0F30", VA = "0x10D0F30", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerActions component)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x10D0FF0", Offset = "0x10D0FF0", VA = "0x10D0FF0", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerActions component)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x10D10B0", Offset = "0x10D10B0", VA = "0x10D10B0")]
		private void ControllerModelVisible(object o, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x10D1120", Offset = "0x10D1120", VA = "0x10D1120")]
		private void ControllerModelInvisible(object o, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x10D1190", Offset = "0x10D1190", VA = "0x10D1190")]
		public VRTK_ControllerActions_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE46CC", Offset = "0xAE46CC")]
	public sealed class VRTK_ControllerEvents_UnityEvents : VRTK_UnityEvents<VRTK_ControllerEvents>
	{
		[Serializable]
		[Token(Token = "0x20005EC")]
		public sealed class ControllerInteractionEvent : UnityEvent<object, ControllerInteractionEventArgs>
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0xF899D8", Offset = "0xF899D8", VA = "0xF899D8")]
			public ControllerInteractionEvent()
			{
			}
		}

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInteractionEvent OnTriggerPressed;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerInteractionEvent OnTriggerReleased;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControllerInteractionEvent OnTriggerTouchStart;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerInteractionEvent OnTriggerTouchEnd;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInteractionEvent OnTriggerHairlineStart;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControllerInteractionEvent OnTriggerHairlineEnd;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerInteractionEvent OnTriggerClicked;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerInteractionEvent OnTriggerUnclicked;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControllerInteractionEvent OnTriggerAxisChanged;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControllerInteractionEvent OnGripPressed;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ControllerInteractionEvent OnGripReleased;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControllerInteractionEvent OnGripTouchStart;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ControllerInteractionEvent OnGripTouchEnd;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ControllerInteractionEvent OnGripHairlineStart;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ControllerInteractionEvent OnGripHairlineEnd;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ControllerInteractionEvent OnGripClicked;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControllerInteractionEvent OnGripUnclicked;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerInteractionEvent OnGripAxisChanged;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ControllerInteractionEvent OnTouchpadPressed;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ControllerInteractionEvent OnTouchpadReleased;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ControllerInteractionEvent OnTouchpadTouchStart;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ControllerInteractionEvent OnTouchpadTouchEnd;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ControllerInteractionEvent OnTouchpadAxisChanged;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ControllerInteractionEvent OnButtonOnePressed;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ControllerInteractionEvent OnButtonOneReleased;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ControllerInteractionEvent OnButtonOneTouchStart;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ControllerInteractionEvent OnButtonOneTouchEnd;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public ControllerInteractionEvent OnButtonTwoPressed;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ControllerInteractionEvent OnButtonTwoReleased;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ControllerInteractionEvent OnButtonTwoTouchStart;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ControllerInteractionEvent OnButtonTwoTouchEnd;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ControllerInteractionEvent OnStartMenuPressed;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ControllerInteractionEvent OnStartMenuReleased;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ControllerInteractionEvent OnAliasPointerOn;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ControllerInteractionEvent OnAliasPointerOff;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ControllerInteractionEvent OnAliasPointerSet;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ControllerInteractionEvent OnAliasGrabOn;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ControllerInteractionEvent OnAliasGrabOff;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ControllerInteractionEvent OnAliasUseOn;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ControllerInteractionEvent OnAliasUseOff;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ControllerInteractionEvent OnAliasUIClickOn;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ControllerInteractionEvent OnAliasUIClickOff;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ControllerInteractionEvent OnAliasMenuOn;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ControllerInteractionEvent OnAliasMenuOff;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public ControllerInteractionEvent OnControllerEnabled;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public ControllerInteractionEvent OnControllerDisabled;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ControllerInteractionEvent OnControllerIndexChanged;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ControllerInteractionEvent OnControllerVisible;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ControllerInteractionEvent OnControllerHidden;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x10D1268", Offset = "0x10D1268", VA = "0x10D1268", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x10D1CB4", Offset = "0x10D1CB4", VA = "0x10D1CB4", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x10D2700", Offset = "0x10D2700", VA = "0x10D2700")]
		private void TriggerPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x10D278C", Offset = "0x10D278C", VA = "0x10D278C")]
		private void TriggerReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x10D2818", Offset = "0x10D2818", VA = "0x10D2818")]
		private void TriggerTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x10D28A4", Offset = "0x10D28A4", VA = "0x10D28A4")]
		private void TriggerTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x10D2930", Offset = "0x10D2930", VA = "0x10D2930")]
		private void TriggerHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x10D29BC", Offset = "0x10D29BC", VA = "0x10D29BC")]
		private void TriggerHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x10D2A48", Offset = "0x10D2A48", VA = "0x10D2A48")]
		private void TriggerClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x10D2AD4", Offset = "0x10D2AD4", VA = "0x10D2AD4")]
		private void TriggerUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x10D2B60", Offset = "0x10D2B60", VA = "0x10D2B60")]
		private void TriggerAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x10D2BEC", Offset = "0x10D2BEC", VA = "0x10D2BEC")]
		private void GripPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x10D2C78", Offset = "0x10D2C78", VA = "0x10D2C78")]
		private void GripReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x10D2D04", Offset = "0x10D2D04", VA = "0x10D2D04")]
		private void GripTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x10D2D90", Offset = "0x10D2D90", VA = "0x10D2D90")]
		private void GripTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x10D2E1C", Offset = "0x10D2E1C", VA = "0x10D2E1C")]
		private void GripHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x10D2EA8", Offset = "0x10D2EA8", VA = "0x10D2EA8")]
		private void GripHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x10D2F34", Offset = "0x10D2F34", VA = "0x10D2F34")]
		private void GripClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x10D2FC0", Offset = "0x10D2FC0", VA = "0x10D2FC0")]
		private void GripUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x10D304C", Offset = "0x10D304C", VA = "0x10D304C")]
		private void GripAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x10D30D8", Offset = "0x10D30D8", VA = "0x10D30D8")]
		private void TouchpadPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x10D3164", Offset = "0x10D3164", VA = "0x10D3164")]
		private void TouchpadReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x10D31F0", Offset = "0x10D31F0", VA = "0x10D31F0")]
		private void TouchpadTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x10D327C", Offset = "0x10D327C", VA = "0x10D327C")]
		private void TouchpadTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x10D3308", Offset = "0x10D3308", VA = "0x10D3308")]
		private void TouchpadAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x10D3394", Offset = "0x10D3394", VA = "0x10D3394")]
		private void ButtonOnePressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x10D3420", Offset = "0x10D3420", VA = "0x10D3420")]
		private void ButtonOneReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x10D34AC", Offset = "0x10D34AC", VA = "0x10D34AC")]
		private void ButtonOneTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x10D3538", Offset = "0x10D3538", VA = "0x10D3538")]
		private void ButtonOneTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x10D35C4", Offset = "0x10D35C4", VA = "0x10D35C4")]
		private void ButtonTwoPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x10D3650", Offset = "0x10D3650", VA = "0x10D3650")]
		private void ButtonTwoReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x10D36DC", Offset = "0x10D36DC", VA = "0x10D36DC")]
		private void ButtonTwoTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x10D3768", Offset = "0x10D3768", VA = "0x10D3768")]
		private void ButtonTwoTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x10D37F4", Offset = "0x10D37F4", VA = "0x10D37F4")]
		private void StartMenuPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x10D3880", Offset = "0x10D3880", VA = "0x10D3880")]
		private void StartMenuReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x10D390C", Offset = "0x10D390C", VA = "0x10D390C")]
		private void AliasPointerOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x10D3998", Offset = "0x10D3998", VA = "0x10D3998")]
		private void AliasPointerOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x10D3A24", Offset = "0x10D3A24", VA = "0x10D3A24")]
		private void AliasPointerSet(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x10D3AB0", Offset = "0x10D3AB0", VA = "0x10D3AB0")]
		private void AliasGrabOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x10D3B3C", Offset = "0x10D3B3C", VA = "0x10D3B3C")]
		private void AliasGrabOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x10D3BC8", Offset = "0x10D3BC8", VA = "0x10D3BC8")]
		private void AliasUseOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x10D3C54", Offset = "0x10D3C54", VA = "0x10D3C54")]
		private void AliasUseOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x10D3CE0", Offset = "0x10D3CE0", VA = "0x10D3CE0")]
		private void AliasUIClickOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x10D3D6C", Offset = "0x10D3D6C", VA = "0x10D3D6C")]
		private void AliasUIClickOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x10D3DF8", Offset = "0x10D3DF8", VA = "0x10D3DF8")]
		private void AliasMenuOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x10D3E84", Offset = "0x10D3E84", VA = "0x10D3E84")]
		private void AliasMenuOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x10D3F10", Offset = "0x10D3F10", VA = "0x10D3F10")]
		private void ControllerEnabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x10D3F9C", Offset = "0x10D3F9C", VA = "0x10D3F9C")]
		private void ControllerDisabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x10D4028", Offset = "0x10D4028", VA = "0x10D4028")]
		private void ControllerIndexChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x10D40B4", Offset = "0x10D40B4", VA = "0x10D40B4")]
		private void ControllerVisible(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x10D4140", Offset = "0x10D4140", VA = "0x10D4140")]
		private void ControllerHidden(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x10D41CC", Offset = "0x10D41CC", VA = "0x10D41CC")]
		public VRTK_ControllerEvents_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4704", Offset = "0xAE4704")]
	public sealed class VRTK_ControllerRigidbodyActivator_UnityEvents : VRTK_UnityEvents<VRTK_ControllerRigidbodyActivator>
	{
		[Serializable]
		[Token(Token = "0x20005ED")]
		public sealed class ControllerRigidbodyActivatorEvent : UnityEvent<object, ControllerRigidbodyActivatorEventArgs>
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xF89D10", Offset = "0xF89D10", VA = "0xF89D10")]
			public ControllerRigidbodyActivatorEvent()
			{
			}
		}

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOn;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOff;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF89A28", Offset = "0xF89A28", VA = "0xF89A28", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF89AE8", Offset = "0xF89AE8", VA = "0xF89AE8", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF89BA8", Offset = "0xF89BA8", VA = "0xF89BA8")]
		private void ControllerRigidbodyOn(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF89C18", Offset = "0xF89C18", VA = "0xF89C18")]
		private void ControllerRigidbodyOff(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF89C88", Offset = "0xF89C88", VA = "0xF89C88")]
		public VRTK_ControllerRigidbodyActivator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE473C", Offset = "0xAE473C")]
	public sealed class VRTK_ControllerTooltips_UnityEvents : VRTK_UnityEvents<VRTK_ControllerTooltips>
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		public sealed class ControllerTooltipsEvent : UnityEvent<object, ControllerTooltipsEventArgs>
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0xF8A048", Offset = "0xF8A048", VA = "0xF8A048")]
			public ControllerTooltipsEvent()
			{
			}
		}

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTooltipsEvent OnControllerTooltipOn;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerTooltipsEvent OnControllerTooltipOff;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF89D60", Offset = "0xF89D60", VA = "0xF89D60", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF89E20", Offset = "0xF89E20", VA = "0xF89E20", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF89EE0", Offset = "0xF89EE0", VA = "0xF89EE0")]
		private void ControllerTooltipOn(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF89F50", Offset = "0xF89F50", VA = "0xF89F50")]
		private void ControllerTooltipOff(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF89FC0", Offset = "0xF89FC0", VA = "0xF89FC0")]
		public VRTK_ControllerTooltips_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4774", Offset = "0xAE4774")]
	public sealed class VRTK_DashTeleport_UnityEvents : VRTK_UnityEvents<VRTK_DashTeleport>
	{
		[Serializable]
		[Token(Token = "0x20005EF")]
		public sealed class DashTeleportEvent : UnityEvent<object, DashTeleportEventArgs>
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xF8A380", Offset = "0xF8A380", VA = "0xF8A380")]
			public DashTeleportEvent()
			{
			}
		}

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashTeleportEvent OnWillDashThruObjects;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DashTeleportEvent OnDashedThruObjects;

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF8A098", Offset = "0xF8A098", VA = "0xF8A098", Slot = "4")]
		protected override void AddListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF8A158", Offset = "0xF8A158", VA = "0xF8A158", Slot = "5")]
		protected override void RemoveListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF8A218", Offset = "0xF8A218", VA = "0xF8A218")]
		private void WillDashThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF8A288", Offset = "0xF8A288", VA = "0xF8A288")]
		private void DashedThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF8A2F8", Offset = "0xF8A2F8", VA = "0xF8A2F8")]
		public VRTK_DashTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE47AC", Offset = "0xAE47AC")]
	public sealed class VRTK_DestinationMarker_UnityEvents : VRTK_UnityEvents<VRTK_DestinationMarker>
	{
		[Serializable]
		[Token(Token = "0x20005F0")]
		public sealed class DestinationMarkerEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0xF8A980", Offset = "0xF8A980", VA = "0xF8A980")]
			public DestinationMarkerEvent()
			{
			}
		}

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationMarkerEvent OnDestinationMarkerEnter;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationMarkerEvent OnDestinationMarkerExit;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationMarkerEvent OnDestinationMarkerHover;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationMarkerEvent OnDestinationMarkerSet;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xF8A3D0", Offset = "0xF8A3D0", VA = "0xF8A3D0", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xF8A4F8", Offset = "0xF8A4F8", VA = "0xF8A4F8", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xF8A620", Offset = "0xF8A620", VA = "0xF8A620")]
		private void DestinationMarkerEnter(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xF8A6CC", Offset = "0xF8A6CC", VA = "0xF8A6CC")]
		private void DestinationMarkerExit(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xF8A778", Offset = "0xF8A778", VA = "0xF8A778")]
		private void DestinationMarkerHover(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xF8A824", Offset = "0xF8A824", VA = "0xF8A824")]
		private void DestinationMarkerSet(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF8A8D0", Offset = "0xF8A8D0", VA = "0xF8A8D0")]
		public VRTK_DestinationMarker_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE47E4", Offset = "0xAE47E4")]
	public sealed class VRTK_DestinationPoint_UnityEvents : VRTK_UnityEvents<VRTK_DestinationPoint>
	{
		[Serializable]
		[Token(Token = "0x20005F1")]
		public sealed class DestinationPointEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xF8AF54", Offset = "0xF8AF54", VA = "0xF8AF54")]
			public DestinationPointEvent()
			{
			}
		}

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationPointEvent OnDestinationPointEnabled;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationPointEvent OnDestinationPointDisabled;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationPointEvent OnDestinationPointLocked;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationPointEvent OnDestinationPointUnlocked;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestinationPointEvent OnDestinationPointReset;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF8A9D0", Offset = "0xF8A9D0", VA = "0xF8A9D0", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF8AB2C", Offset = "0xF8AB2C", VA = "0xF8AB2C", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF8AC88", Offset = "0xF8AC88", VA = "0xF8AC88")]
		private void DestinationPointEnabled(object o)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF8ACF0", Offset = "0xF8ACF0", VA = "0xF8ACF0")]
		private void DestinationPointDisabled(object o)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF8AD58", Offset = "0xF8AD58", VA = "0xF8AD58")]
		private void DestinationPointLocked(object o)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF8ADC0", Offset = "0xF8ADC0", VA = "0xF8ADC0")]
		private void DestinationPointUnlocked(object o)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF8AE28", Offset = "0xF8AE28", VA = "0xF8AE28")]
		private void DestinationPointReset(object o)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF8AE90", Offset = "0xF8AE90", VA = "0xF8AE90")]
		public VRTK_DestinationPoint_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE481C", Offset = "0xAE481C")]
	public sealed class VRTK_HeadsetCollision_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetCollision>
	{
		[Serializable]
		[Token(Token = "0x20005F2")]
		public sealed class HeadsetCollisionEvent : UnityEvent<object, HeadsetCollisionEventArgs>
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0xF8B2AC", Offset = "0xF8B2AC", VA = "0xF8B2AC")]
			public HeadsetCollisionEvent()
			{
			}
		}

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetCollisionEvent OnHeadsetCollisionDetect;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetCollisionEvent OnHeadsetCollisionEnded;

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF8AFA4", Offset = "0xF8AFA4", VA = "0xF8AFA4", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF8B064", Offset = "0xF8B064", VA = "0xF8B064", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF8B124", Offset = "0xF8B124", VA = "0xF8B124")]
		private void HeadsetCollisionDetect(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF8B1A4", Offset = "0xF8B1A4", VA = "0xF8B1A4")]
		private void HeadsetCollisionEnded(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF8B224", Offset = "0xF8B224", VA = "0xF8B224")]
		public VRTK_HeadsetCollision_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4854", Offset = "0xAE4854")]
	public sealed class VRTK_HeadsetControllerAware_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetControllerAware>
	{
		[Serializable]
		[Token(Token = "0x20005F3")]
		public sealed class HeadsetControllerAwareEvent : UnityEvent<object, HeadsetControllerAwareEventArgs>
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xF8B8AC", Offset = "0xF8B8AC", VA = "0xF8B8AC")]
			public HeadsetControllerAwareEvent()
			{
			}
		}

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetControllerAwareEvent OnControllerObscured;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetControllerAwareEvent OnControllerUnobscured;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetControllerAwareEvent OnControllerGlanceEnter;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetControllerAwareEvent OnControllerGlanceExit;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF8B2FC", Offset = "0xF8B2FC", VA = "0xF8B2FC", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF8B424", Offset = "0xF8B424", VA = "0xF8B424", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF8B54C", Offset = "0xF8B54C", VA = "0xF8B54C")]
		private void ControllerObscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF8B5F8", Offset = "0xF8B5F8", VA = "0xF8B5F8")]
		private void ControllerUnobscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF8B6A4", Offset = "0xF8B6A4", VA = "0xF8B6A4")]
		private void ControllerGlanceEnter(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF8B750", Offset = "0xF8B750", VA = "0xF8B750")]
		private void ControllerGlanceExit(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF8B7FC", Offset = "0xF8B7FC", VA = "0xF8B7FC")]
		public VRTK_HeadsetControllerAware_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE488C", Offset = "0xAE488C")]
	public sealed class VRTK_HeadsetFade_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetFade>
	{
		[Serializable]
		[Token(Token = "0x20005F4")]
		public sealed class HeadsetFadeEvent : UnityEvent<object, HeadsetFadeEventArgs>
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xF8BDFC", Offset = "0xF8BDFC", VA = "0xF8BDFC")]
			public HeadsetFadeEvent()
			{
			}
		}

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetFadeEvent OnHeadsetFadeStart;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetFadeEvent OnHeadsetFadeComplete;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetFadeEvent OnHeadsetUnfadeStart;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetFadeEvent OnHeadsetUnfadeComplete;

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF8B8FC", Offset = "0xF8B8FC", VA = "0xF8B8FC", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF8BA24", Offset = "0xF8BA24", VA = "0xF8BA24", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF8BB4C", Offset = "0xF8BB4C", VA = "0xF8BB4C")]
		private void HeadsetFadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF8BBCC", Offset = "0xF8BBCC", VA = "0xF8BBCC")]
		private void HeadsetFadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF8BC4C", Offset = "0xF8BC4C", VA = "0xF8BC4C")]
		private void HeadsetUnfadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF8BCCC", Offset = "0xF8BCCC", VA = "0xF8BCCC")]
		private void HeadsetUnfadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF8BD4C", Offset = "0xF8BD4C", VA = "0xF8BD4C")]
		public VRTK_HeadsetFade_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE48C4", Offset = "0xAE48C4")]
	public sealed class VRTK_InteractControllerAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractControllerAppearance>
	{
		[Serializable]
		[Token(Token = "0x20005F5")]
		public sealed class InteractControllerAppearanceEvent : UnityEvent<object, InteractControllerAppearanceEventArgs>
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xF8C73C", Offset = "0xF8C73C", VA = "0xF8C73C")]
			public InteractControllerAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractControllerAppearanceEvent OnControllerHidden;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractControllerAppearanceEvent OnControllerVisible;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractControllerAppearanceEvent OnHiddenOnTouch;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractControllerAppearanceEvent OnVisibleOnTouch;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractControllerAppearanceEvent OnHiddenOnGrab;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractControllerAppearanceEvent OnVisibleOnGrab;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractControllerAppearanceEvent OnHiddenOnUse;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractControllerAppearanceEvent OnVisibleOnUse;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF8BE4C", Offset = "0xF8BE4C", VA = "0xF8BE4C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF8C044", Offset = "0xF8C044", VA = "0xF8C044", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF8C23C", Offset = "0xF8C23C", VA = "0xF8C23C")]
		private void ControllerHidden(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF8C2BC", Offset = "0xF8C2BC", VA = "0xF8C2BC")]
		private void ControllerVisible(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF8C33C", Offset = "0xF8C33C", VA = "0xF8C33C")]
		private void HiddenOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF8C3BC", Offset = "0xF8C3BC", VA = "0xF8C3BC")]
		private void VisibleOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF8C43C", Offset = "0xF8C43C", VA = "0xF8C43C")]
		private void HiddenOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF8C4BC", Offset = "0xF8C4BC", VA = "0xF8C4BC")]
		private void VisibleOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF8C53C", Offset = "0xF8C53C", VA = "0xF8C53C")]
		private void HiddenOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF8C5BC", Offset = "0xF8C5BC", VA = "0xF8C5BC")]
		private void VisibleOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF8C63C", Offset = "0xF8C63C", VA = "0xF8C63C")]
		public VRTK_InteractControllerAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE48FC", Offset = "0xAE48FC")]
	public sealed class VRTK_InteractGrab_UnityEvents : VRTK_UnityEvents<VRTK_InteractGrab>
	{
		[Serializable]
		[Token(Token = "0x20005F6")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xF8CF24", Offset = "0xF8CF24", VA = "0xF8CF24")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartGrabInteractableObject;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerGrabInteractableObject;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUngrabInteractableObject;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUngrabInteractableObject;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonPressed;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonReleased;

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF8C78C", Offset = "0xF8C78C", VA = "0xF8C78C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF8C924", Offset = "0xF8C924", VA = "0xF8C924", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF8CABC", Offset = "0xF8CABC", VA = "0xF8CABC")]
		private void ControllerStartGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF8CB58", Offset = "0xF8CB58", VA = "0xF8CB58")]
		private void ControllerGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF8CBF4", Offset = "0xF8CBF4", VA = "0xF8CBF4")]
		private void ControllerStartUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF8CC90", Offset = "0xF8CC90", VA = "0xF8CC90")]
		private void ControllerUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF8CD2C", Offset = "0xF8CD2C", VA = "0xF8CD2C")]
		private void GrabButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF8CDB8", Offset = "0xF8CDB8", VA = "0xF8CDB8")]
		private void GrabButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF8CE44", Offset = "0xF8CE44", VA = "0xF8CE44")]
		public VRTK_InteractGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4934", Offset = "0xAE4934")]
	public sealed class VRTK_InteractHaptics_UnityEvents : VRTK_UnityEvents<VRTK_InteractHaptics>
	{
		[Serializable]
		[Token(Token = "0x20005F7")]
		public sealed class InteractHapticsEvent : UnityEvent<object, InteractHapticsEventArgs>
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xF8D348", Offset = "0xF8D348", VA = "0xF8D348")]
			public InteractHapticsEvent()
			{
			}
		}

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractHapticsEvent OnInteractHapticsTouched;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractHapticsEvent OnInteractHapticsGrabbed;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractHapticsEvent OnInteractHapticsUsed;

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF8CF74", Offset = "0xF8CF74", VA = "0xF8CF74", Slot = "4")]
		protected override void AddListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF8D068", Offset = "0xF8D068", VA = "0xF8D068", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xF8D15C", Offset = "0xF8D15C", VA = "0xF8D15C")]
		private void InteractHapticsTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF8D1CC", Offset = "0xF8D1CC", VA = "0xF8D1CC")]
		private void InteractHapticsGrabbed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF8D23C", Offset = "0xF8D23C", VA = "0xF8D23C")]
		private void InteractHapticsUsed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF8D2AC", Offset = "0xF8D2AC", VA = "0xF8D2AC")]
		public VRTK_InteractHaptics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE496C", Offset = "0xAE496C")]
	public sealed class VRTK_InteractTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractTouch>
	{
		[Serializable]
		[Token(Token = "0x20005F8")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xF8DB38", Offset = "0xF8DB38", VA = "0xF8DB38")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartTouchInteractableObject;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerTouchInteractableObject;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUntouchInteractableObject;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUntouchInteractableObject;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectInteractEvent OnControllerRigidbodyActivated;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectInteractEvent OnControllerRigidbodyDeactivated;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF8D398", Offset = "0xF8D398", VA = "0xF8D398", Slot = "4")]
		protected override void AddListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF8D528", Offset = "0xF8D528", VA = "0xF8D528", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xF8D6B8", Offset = "0xF8D6B8", VA = "0xF8D6B8")]
		private void ControllerStartTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xF8D754", Offset = "0xF8D754", VA = "0xF8D754")]
		private void ControllerTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF8D7F0", Offset = "0xF8D7F0", VA = "0xF8D7F0")]
		private void ControllerStartUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF8D88C", Offset = "0xF8D88C", VA = "0xF8D88C")]
		private void ControllerUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF8D928", Offset = "0xF8D928", VA = "0xF8D928")]
		private void ControllerRigidbodyActivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF8D9C4", Offset = "0xF8D9C4", VA = "0xF8D9C4")]
		private void ControllerRigidbodyDeactivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF8DA60", Offset = "0xF8DA60", VA = "0xF8DA60")]
		public VRTK_InteractTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE49A4", Offset = "0xAE49A4")]
	public sealed class VRTK_InteractUse_UnityEvents : VRTK_UnityEvents<VRTK_InteractUse>
	{
		[Serializable]
		[Token(Token = "0x20005F9")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xF8E320", Offset = "0xF8E320", VA = "0xF8E320")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartUseInteractableObject;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerUseInteractableObject;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUnuseInteractableObject;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUnuseInteractableObject;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonPressed;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonReleased;

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF8DB88", Offset = "0xF8DB88", VA = "0xF8DB88", Slot = "4")]
		protected override void AddListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF8DD20", Offset = "0xF8DD20", VA = "0xF8DD20", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF8DEB8", Offset = "0xF8DEB8", VA = "0xF8DEB8")]
		private void ControllerStartUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF8DF54", Offset = "0xF8DF54", VA = "0xF8DF54")]
		private void ControllerUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF8DFF0", Offset = "0xF8DFF0", VA = "0xF8DFF0")]
		private void ControllerStartUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF8E08C", Offset = "0xF8E08C", VA = "0xF8E08C")]
		private void ControllerUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF8E128", Offset = "0xF8E128", VA = "0xF8E128")]
		private void UseButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF8E1B4", Offset = "0xF8E1B4", VA = "0xF8E1B4")]
		private void UseButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF8E240", Offset = "0xF8E240", VA = "0xF8E240")]
		public VRTK_InteractUse_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE49DC", Offset = "0xAE49DC")]
	public sealed class VRTK_InteractableObject_UnityEvents : VRTK_UnityEvents<VRTK_InteractableObject>
	{
		[Serializable]
		[Token(Token = "0x20005FA")]
		public sealed class InteractableObjectEvent : UnityEvent<object, InteractableObjectEventArgs>
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xF8EDB8", Offset = "0xF8EDB8", VA = "0xF8EDB8")]
			public InteractableObjectEvent()
			{
			}
		}

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectEvent OnTouch;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractableObjectEvent OnUntouch;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractableObjectEvent OnGrab;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractableObjectEvent OnUngrab;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractableObjectEvent OnUse;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableObjectEvent OnUnuse;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractableObjectEvent OnEnterSnapDropZone;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractableObjectEvent OnExitSnapDropZone;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractableObjectEvent OnSnapToDropZone;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractableObjectEvent OnUnsnapFromDropZone;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF8E370", Offset = "0xF8E370", VA = "0xF8E370", Slot = "4")]
		protected override void AddListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xF8E5D0", Offset = "0xF8E5D0", VA = "0xF8E5D0", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xF8E830", Offset = "0xF8E830", VA = "0xF8E830")]
		private void Touch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF8E8A0", Offset = "0xF8E8A0", VA = "0xF8E8A0")]
		private void UnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF8E910", Offset = "0xF8E910", VA = "0xF8E910")]
		private void Grab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF8E980", Offset = "0xF8E980", VA = "0xF8E980")]
		private void UnGrab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF8E9F0", Offset = "0xF8E9F0", VA = "0xF8E9F0")]
		private void Use(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF8EA60", Offset = "0xF8EA60", VA = "0xF8EA60")]
		private void Unuse(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF8EAD0", Offset = "0xF8EAD0", VA = "0xF8EAD0")]
		private void EnterSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF8EB40", Offset = "0xF8EB40", VA = "0xF8EB40")]
		private void ExitSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF8EBB0", Offset = "0xF8EBB0", VA = "0xF8EBB0")]
		private void SnapToDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF8EC20", Offset = "0xF8EC20", VA = "0xF8EC20")]
		private void UnsnapFromDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF8EC90", Offset = "0xF8EC90", VA = "0xF8EC90")]
		public VRTK_InteractableObject_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4A14", Offset = "0xAE4A14")]
	public sealed class VRTK_ObjectAutoGrab_UnityEvents : VRTK_UnityEvents<VRTK_ObjectAutoGrab>
	{
		[Serializable]
		[Token(Token = "0x20005FB")]
		public sealed class ObjectAutoGrabEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0xF8EFF4", Offset = "0xF8EFF4", VA = "0xF8EFF4")]
			public ObjectAutoGrabEvent()
			{
			}
		}

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectAutoGrabEvent OnObjectAutoGrabCompleted;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF8EE08", Offset = "0xF8EE08", VA = "0xF8EE08", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF8EE94", Offset = "0xF8EE94", VA = "0xF8EE94", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF8EF20", Offset = "0xF8EF20", VA = "0xF8EF20")]
		private void ObjectAutoGrabCompleted(object o)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF8EF88", Offset = "0xF8EF88", VA = "0xF8EF88")]
		public VRTK_ObjectAutoGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4A4C", Offset = "0xAE4A4C")]
	public sealed class VRTK_ObjectControl_UnityEvents : VRTK_UnityEvents<VRTK_ObjectControl>
	{
		[Serializable]
		[Token(Token = "0x20005FC")]
		public sealed class ObjectControlEvent : UnityEvent<object, ObjectControlEventArgs>
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xF8F384", Offset = "0xF8F384", VA = "0xF8F384")]
			public ObjectControlEvent()
			{
			}
		}

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectControlEvent OnXAxisChanged;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectControlEvent OnYAxisChanged;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xF8F044", Offset = "0xF8F044", VA = "0xF8F044", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF8F104", Offset = "0xF8F104", VA = "0xF8F104", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF8F1C4", Offset = "0xF8F1C4", VA = "0xF8F1C4")]
		private void XAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF8F260", Offset = "0xF8F260", VA = "0xF8F260")]
		private void YAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF8F2FC", Offset = "0xF8F2FC", VA = "0xF8F2FC")]
		public VRTK_ObjectControl_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4A84", Offset = "0xAE4A84")]
	public sealed class VRTK_ObjectTooltip_UnityEvents : VRTK_UnityEvents<VRTK_ObjectTooltip>
	{
		[Serializable]
		[Token(Token = "0x20005FD")]
		public sealed class ObjectTooltipEvent : UnityEvent<object, ObjectTooltipEventArgs>
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xF8F6BC", Offset = "0xF8F6BC", VA = "0xF8F6BC")]
			public ObjectTooltipEvent()
			{
			}
		}

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTooltipEvent OnObjectTooltipReset;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectTooltipEvent OnObjectTooltipTextUpdated;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF8F3D4", Offset = "0xF8F3D4", VA = "0xF8F3D4", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF8F494", Offset = "0xF8F494", VA = "0xF8F494", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF8F554", Offset = "0xF8F554", VA = "0xF8F554")]
		private void ObjectTooltipReset(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF8F5C4", Offset = "0xF8F5C4", VA = "0xF8F5C4")]
		private void ObjectTooltipTextUpdated(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF8F634", Offset = "0xF8F634", VA = "0xF8F634")]
		public VRTK_ObjectTooltip_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4ABC", Offset = "0xAE4ABC")]
	public sealed class VRTK_PlayAreaCursor_UnityEvents : VRTK_UnityEvents<VRTK_PlayAreaCursor>
	{
		[Serializable]
		[Token(Token = "0x20005FE")]
		public sealed class PlayAreaCursorEvent : UnityEvent<object, PlayAreaCursorEventArgs>
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xF8F9F4", Offset = "0xF8F9F4", VA = "0xF8F9F4")]
			public PlayAreaCursorEvent()
			{
			}
		}

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAreaCursorEvent OnPlayAreaCursorStartCollision;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAreaCursorEvent OnPlayAreaCursorEndCollision;

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF8F70C", Offset = "0xF8F70C", VA = "0xF8F70C", Slot = "4")]
		protected override void AddListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF8F7CC", Offset = "0xF8F7CC", VA = "0xF8F7CC", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF8F88C", Offset = "0xF8F88C", VA = "0xF8F88C")]
		private void PlayAreaCursorStartCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF8F8FC", Offset = "0xF8F8FC", VA = "0xF8F8FC")]
		private void PlayAreaCursorEndCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF8F96C", Offset = "0xF8F96C", VA = "0xF8F96C")]
		public VRTK_PlayAreaCursor_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4AF4", Offset = "0xAE4AF4")]
	public sealed class VRTK_PlayerClimb_UnityEvents : VRTK_UnityEvents<VRTK_PlayerClimb>
	{
		[Serializable]
		[Token(Token = "0x20005FF")]
		public sealed class PlayerClimbEvent : UnityEvent<object, PlayerClimbEventArgs>
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xF8FD84", Offset = "0xF8FD84", VA = "0xF8FD84")]
			public PlayerClimbEvent()
			{
			}
		}

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerClimbEvent OnPlayerClimbStarted;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerClimbEvent OnPlayerClimbEnded;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF8FA44", Offset = "0xF8FA44", VA = "0xF8FA44", Slot = "4")]
		protected override void AddListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF8FB04", Offset = "0xF8FB04", VA = "0xF8FB04", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF8FBC4", Offset = "0xF8FBC4", VA = "0xF8FBC4")]
		private void PlayerClimbStarted(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF8FC60", Offset = "0xF8FC60", VA = "0xF8FC60")]
		private void PlayerClimbEnded(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF8FCFC", Offset = "0xF8FCFC", VA = "0xF8FCFC")]
		public VRTK_PlayerClimb_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4B2C", Offset = "0xAE4B2C")]
	public sealed class VRTK_PointerDirectionIndicator_UnityEvents : VRTK_UnityEvents<VRTK_PointerDirectionIndicator>
	{
		[Serializable]
		[Token(Token = "0x2000600")]
		public sealed class PointerDirectionIndicatorEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0xF8FFC0", Offset = "0xF8FFC0", VA = "0xF8FFC0")]
			public PointerDirectionIndicatorEvent()
			{
			}
		}

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PointerDirectionIndicatorEvent OnPointerDirectionIndicatorPositionSet;

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF8FDD4", Offset = "0xF8FDD4", VA = "0xF8FDD4", Slot = "4")]
		protected override void AddListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xF8FE60", Offset = "0xF8FE60", VA = "0xF8FE60", Slot = "5")]
		protected override void RemoveListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xF8FEEC", Offset = "0xF8FEEC", VA = "0xF8FEEC")]
		private void PointerDirectionIndicatorPositionSet(object o)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xF8FF54", Offset = "0xF8FF54", VA = "0xF8FF54")]
		public VRTK_PointerDirectionIndicator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4B64", Offset = "0xAE4B64")]
	public sealed class VRTK_Pointer_UnityEvents : VRTK_UnityEvents<VRTK_Pointer>
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateValid;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateInvalid;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF90010", Offset = "0xF90010", VA = "0xF90010", Slot = "4")]
		protected override void AddListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF901FC", Offset = "0xF901FC", VA = "0xF901FC", Slot = "5")]
		protected override void RemoveListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF903E8", Offset = "0xF903E8", VA = "0xF903E8")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xF90474", Offset = "0xF90474", VA = "0xF90474")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF90500", Offset = "0xF90500", VA = "0xF90500")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF9058C", Offset = "0xF9058C", VA = "0xF9058C")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF90618", Offset = "0xF90618", VA = "0xF90618")]
		private void PointerStateValid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF906C4", Offset = "0xF906C4", VA = "0xF906C4")]
		private void PointerStateInvalid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF90770", Offset = "0xF90770", VA = "0xF90770")]
		public VRTK_Pointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4B9C", Offset = "0xAE4B9C")]
	public sealed class VRTK_PositionRewind_UnityEvents : VRTK_UnityEvents<VRTK_PositionRewind>
	{
		[Serializable]
		[Token(Token = "0x2000601")]
		public sealed class PositionRewindEvent : UnityEvent<object, PositionRewindEventArgs>
		{
			[Token(Token = "0x6002559")]
			[Address(RVA = "0xF90A70", Offset = "0xF90A70", VA = "0xF90A70")]
			public PositionRewindEvent()
			{
			}
		}

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionRewindEvent OnPositionRewindToSafe;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF90850", Offset = "0xF90850", VA = "0xF90850", Slot = "4")]
		protected override void AddListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF908DC", Offset = "0xF908DC", VA = "0xF908DC", Slot = "5")]
		protected override void RemoveListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xF90968", Offset = "0xF90968", VA = "0xF90968")]
		private void PositionRewindToSafe(object o, PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xF90A04", Offset = "0xF90A04", VA = "0xF90A04")]
		public VRTK_PositionRewind_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public sealed class VRTK_SDKManager_UnityEvents : VRTK_UnityEvents<VRTK_SDKManager>
	{
		[Serializable]
		[Token(Token = "0x2000602")]
		public sealed class LoadedSetupChangeEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKManager.LoadedSetupChangeEventArgs>
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xF90CE0", Offset = "0xF90CE0", VA = "0xF90CE0")]
			public LoadedSetupChangeEvent()
			{
			}
		}

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedSetupChangeEvent OnLoadedSetupChanged;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xF90AC0", Offset = "0xF90AC0", VA = "0xF90AC0", Slot = "4")]
		protected override void AddListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xF90B4C", Offset = "0xF90B4C", VA = "0xF90B4C", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF90BD8", Offset = "0xF90BD8", VA = "0xF90BD8")]
		private void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF90C74", Offset = "0xF90C74", VA = "0xF90C74")]
		public VRTK_SDKManager_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public sealed class VRTK_SDKSetup_UnityEvents : VRTK_UnityEvents<VRTK_SDKSetup>
	{
		[Serializable]
		[Token(Token = "0x2000603")]
		public sealed class LoadEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKSetup>
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xF91018", Offset = "0xF91018", VA = "0xF91018")]
			public LoadEvent()
			{
			}
		}

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadEvent OnLoaded;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadEvent OnUnloaded;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF90D30", Offset = "0xF90D30", VA = "0xF90D30", Slot = "4")]
		protected override void AddListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF90DF0", Offset = "0xF90DF0", VA = "0xF90DF0", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF90EB0", Offset = "0xF90EB0", VA = "0xF90EB0")]
		private void Loaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF90F20", Offset = "0xF90F20", VA = "0xF90F20")]
		private void Unloaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF90F90", Offset = "0xF90F90", VA = "0xF90F90")]
		public VRTK_SDKSetup_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4BD4", Offset = "0xAE4BD4")]
	public sealed class VRTK_SnapDropZone_UnityEvents : VRTK_UnityEvents<VRTK_SnapDropZone>
	{
		[Serializable]
		[Token(Token = "0x2000604")]
		public sealed class SnapDropZoneEvent : UnityEvent<object, SnapDropZoneEventArgs>
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0xF91528", Offset = "0xF91528", VA = "0xF91528")]
			public SnapDropZoneEvent()
			{
			}
		}

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnapDropZoneEvent OnObjectEnteredSnapDropZone;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapDropZoneEvent OnObjectExitedSnapDropZone;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapDropZoneEvent OnObjectSnappedToDropZone;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SnapDropZoneEvent OnObjectUnsnappedFromDropZone;

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xF91068", Offset = "0xF91068", VA = "0xF91068", Slot = "4")]
		protected override void AddListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xF91190", Offset = "0xF91190", VA = "0xF91190", Slot = "5")]
		protected override void RemoveListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xF912B8", Offset = "0xF912B8", VA = "0xF912B8")]
		private void ObjectEnteredSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF91328", Offset = "0xF91328", VA = "0xF91328")]
		private void ObjectExitedSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xF91398", Offset = "0xF91398", VA = "0xF91398")]
		private void ObjectSnappedToDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF91408", Offset = "0xF91408", VA = "0xF91408")]
		private void ObjectUnsnappedFromDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF91478", Offset = "0xF91478", VA = "0xF91478")]
		public VRTK_SnapDropZone_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4C0C", Offset = "0xAE4C0C")]
	public sealed class VRTK_UIDraggableItem_UnityEvents : VRTK_UnityEvents<VRTK_UIDraggableItem>
	{
		[Serializable]
		[Token(Token = "0x2000605")]
		public sealed class UIDraggableItemEvent : UnityEvent<object, UIDraggableItemEventArgs>
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0xF91860", Offset = "0xF91860", VA = "0xF91860")]
			public UIDraggableItemEvent()
			{
			}
		}

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIDraggableItemEvent OnDraggableItemDropped;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIDraggableItemEvent OnDraggableItemReset;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF91578", Offset = "0xF91578", VA = "0xF91578", Slot = "4")]
		protected override void AddListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF91638", Offset = "0xF91638", VA = "0xF91638", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF916F8", Offset = "0xF916F8", VA = "0xF916F8")]
		private void DraggableItemDropped(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF91768", Offset = "0xF91768", VA = "0xF91768")]
		private void DraggableItemReset(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF917D8", Offset = "0xF917D8", VA = "0xF917D8")]
		public VRTK_UIDraggableItem_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4C44", Offset = "0xAE4C44")]
	public sealed class VRTK_UIPointer_UnityEvents : VRTK_UnityEvents<VRTK_UIPointer>
	{
		[Serializable]
		[Token(Token = "0x2000606")]
		public sealed class UIPointerEvent : UnityEvent<object, UIPointerEventArgs>
		{
			[Token(Token = "0x600255E")]
			[Address(RVA = "0xF923C0", Offset = "0xF923C0", VA = "0xF923C0")]
			public UIPointerEvent()
			{
			}
		}

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPointerEvent OnUIPointerElementEnter;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIPointerEvent OnUIPointerElementExit;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIPointerEvent OnUIPointerElementClick;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIPointerEvent OnUIPointerElementDragStart;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIPointerEvent OnUIPointerElementDragEnd;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF918B0", Offset = "0xF918B0", VA = "0xF918B0", Slot = "4")]
		protected override void AddListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF91AE4", Offset = "0xF91AE4", VA = "0xF91AE4", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF91D18", Offset = "0xF91D18", VA = "0xF91D18")]
		private void UIPointerElementEnter(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF91DC4", Offset = "0xF91DC4", VA = "0xF91DC4")]
		private void UIPointerElementExit(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF91E70", Offset = "0xF91E70", VA = "0xF91E70")]
		private void UIPointerElementClick(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF91F1C", Offset = "0xF91F1C", VA = "0xF91F1C")]
		private void UIPointerElementDragStart(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF91FC8", Offset = "0xF91FC8", VA = "0xF91FC8")]
		private void UIPointerElementDragEnd(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF92074", Offset = "0xF92074", VA = "0xF92074")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF92100", Offset = "0xF92100", VA = "0xF92100")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF9218C", Offset = "0xF9218C", VA = "0xF9218C")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF92218", Offset = "0xF92218", VA = "0xF92218")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF922A4", Offset = "0xF922A4", VA = "0xF922A4")]
		public VRTK_UIPointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public abstract class VRTK_UnityEvents<T> : MonoBehaviour where T : Component
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T component;

		[Token(Token = "0x600177D")]
		protected abstract void AddListeners(T component);

		[Token(Token = "0x600177E")]
		protected abstract void RemoveListeners(T component);

		[Token(Token = "0x600177F")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001780")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001781")]
		protected VRTK_UnityEvents()
		{
		}
	}
}
namespace VRTK.SecondaryControllerGrabActions
{
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4C7C", Offset = "0xAE4C7C")]
	public class VRTK_AxisScaleGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6448", Offset = "0xAF6448")]
		public float ungrabDistance;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6480", Offset = "0xAF6480")]
		public bool lockXAxis;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF64B8", Offset = "0xAF64B8")]
		public bool lockYAxis;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF64F0", Offset = "0xAF64F0")]
		public bool lockZAxis;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6528", Offset = "0xAF6528")]
		public bool uniformScaling;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 initialScale;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float initalLength;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float initialScaleFactor;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x10CC238", Offset = "0x10CC238", VA = "0x10CC238", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x10CC3EC", Offset = "0x10CC3EC", VA = "0x10CC3EC", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x10CC400", Offset = "0x10CC400", VA = "0x10CC400", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x10CC434", Offset = "0x10CC434", VA = "0x10CC434", Slot = "12")]
		protected virtual void ApplyScale(Vector3 newScale)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x10CC51C", Offset = "0x10CC51C", VA = "0x10CC51C", Slot = "13")]
		protected virtual void NonUniformScale()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x10CC7EC", Offset = "0x10CC7EC", VA = "0x10CC7EC", Slot = "14")]
		protected virtual void UniformScale()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x10CC938", Offset = "0x10CC938", VA = "0x10CC938", Slot = "15")]
		protected virtual float CalculateAxisScale(float centerPosition, float initialPosition, float currentPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x10CC94C", Offset = "0x10CC94C", VA = "0x10CC94C")]
		public VRTK_AxisScaleGrabAction()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public abstract class VRTK_BaseGrabAction : MonoBehaviour
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractableObject grabbedObject;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_InteractGrab primaryGrabbingObject;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_InteractGrab secondaryGrabbingObject;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform primaryInitialGrabPoint;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform secondaryInitialGrabPoint;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool initialised;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isActionable;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		protected bool isSwappable;

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x10CC3D4", Offset = "0x10CC3D4", VA = "0x10CC3D4", Slot = "4")]
		public virtual void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x10CC974", Offset = "0x10CC974", VA = "0x10CC974", Slot = "5")]
		public virtual void ResetAction()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x10CC98C", Offset = "0x10CC98C", VA = "0x10CC98C", Slot = "6")]
		public virtual bool IsActionable()
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x10CC994", Offset = "0x10CC994", VA = "0x10CC994", Slot = "7")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x10CC3FC", Offset = "0x10CC3FC", VA = "0x10CC3FC", Slot = "8")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x10CC430", Offset = "0x10CC430", VA = "0x10CC430", Slot = "9")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x10CC99C", Offset = "0x10CC99C", VA = "0x10CC99C", Slot = "10")]
		public virtual void OnDropAction()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x10CC9A0", Offset = "0x10CC9A0", VA = "0x10CC9A0", Slot = "11")]
		protected virtual void CheckForceStopDistance(float ungrabDistance)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10CC964", Offset = "0x10CC964", VA = "0x10CC964")]
		protected VRTK_BaseGrabAction()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4CB4", Offset = "0xAE4CB4")]
	public class VRTK_ControlDirectionGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66DC", Offset = "0xAE66DC")]
		private sealed class <RealignOnRelease>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlDirectionGrabAction <>4__this;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002562")]
				[Address(RVA = "0x10CD594", Offset = "0x10CD594", VA = "0x10CD594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002564")]
				[Address(RVA = "0x10CD5FC", Offset = "0x10CD5FC", VA = "0x10CD5FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600255F")]
			[Address(RVA = "0x10CCD08", Offset = "0x10CCD08", VA = "0x10CCD08")]
			[DebuggerHidden]
			public <RealignOnRelease>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0x10CD3E8", Offset = "0x10CD3E8", VA = "0x10CD3E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0x10CD3EC", Offset = "0x10CD3EC", VA = "0x10CD3EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002563")]
			[Address(RVA = "0x10CD59C", Offset = "0x10CD59C", VA = "0x10CD59C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6560", Offset = "0xAF6560")]
		public float ungrabDistance;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6598", Offset = "0xAF6598")]
		public float releaseSnapSpeed;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF65D0", Offset = "0xAF65D0")]
		public bool lockZRotation;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 initialPosition;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion releaseRotation;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Coroutine snappingOnRelease;

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x10CCACC", Offset = "0x10CCACC", VA = "0x10CCACC", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x10CCB54", Offset = "0x10CCB54", VA = "0x10CCB54", Slot = "5")]
		public override void ResetAction()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x10CCC2C", Offset = "0x10CCC2C", VA = "0x10CCC2C", Slot = "10")]
		public override void OnDropAction()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x10CCC38", Offset = "0x10CCC38", VA = "0x10CCC38", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x10CCC48", Offset = "0x10CCC48", VA = "0x10CCC48", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x10CCC64", Offset = "0x10CCC64", VA = "0x10CCC64", Slot = "12")]
		protected virtual void StopRealignOnRelease()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x10CCC98", Offset = "0x10CCC98", VA = "0x10CCC98", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB052CC", Offset = "0xB052CC")]
		protected virtual IEnumerator RealignOnRelease()
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x10CCD34", Offset = "0x10CCD34", VA = "0x10CCD34", Slot = "14")]
		protected virtual void AimObject()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x10CCFD0", Offset = "0x10CCFD0", VA = "0x10CCFD0", Slot = "15")]
		protected virtual void ZLockedAim()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x10CD3C8", Offset = "0x10CD3C8", VA = "0x10CD3C8")]
		public VRTK_ControlDirectionGrabAction()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4CEC", Offset = "0xAE4CEC")]
	public class VRTK_SwapControllerGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x600179D")]
		[Address(RVA = "0x10CD604", Offset = "0x10CD604", VA = "0x10CD604", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x10CD610", Offset = "0x10CD610", VA = "0x10CD610")]
		public VRTK_SwapControllerGrabAction()
		{
		}
	}
}
namespace VRTK.Highlighters
{
	[Token(Token = "0x20002A6")]
	public abstract class VRTK_BaseHighlighter : MonoBehaviour
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6608", Offset = "0xAF6608")]
		public bool active;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6640", Offset = "0xAF6640")]
		public bool unhighlightOnDisable;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool usesClonedObject;

		[Token(Token = "0x600179F")]
		public abstract void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options);

		[Token(Token = "0x60017A0")]
		public abstract void ResetHighlighter();

		[Token(Token = "0x60017A1")]
		public abstract void Highlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x60017A2")]
		public abstract void Unhighlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x60017A3")]
		public virtual T GetOption<T>(Dictionary<string, object> options, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x145E7DC", Offset = "0x145E7DC", VA = "0x145E7DC", Slot = "9")]
		public virtual bool UsesClonedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x145E7E4", Offset = "0x145E7E4", VA = "0x145E7E4")]
		public static VRTK_BaseHighlighter GetActiveHighlighter(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x145E890", Offset = "0x145E890", VA = "0x145E890")]
		protected VRTK_BaseHighlighter()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4D24", Offset = "0xAE4D24")]
	public class VRTK_MaterialColorSwapHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66EC", Offset = "0xAE66EC")]
		private sealed class <CycleColor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public VRTK_MaterialColorSwapHighlighter <>4__this;

			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000302")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002568")]
				[Address(RVA = "0x145F3F0", Offset = "0x145F3F0", VA = "0x145F3F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600256A")]
				[Address(RVA = "0x145F458", Offset = "0x145F458", VA = "0x145F458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002565")]
			[Address(RVA = "0x145F16C", Offset = "0x145F16C", VA = "0x145F16C")]
			[DebuggerHidden]
			public <CycleColor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002566")]
			[Address(RVA = "0x145F238", Offset = "0x145F238", VA = "0x145F238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0x145F23C", Offset = "0x145F23C", VA = "0x145F23C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002569")]
			[Address(RVA = "0x145F3F8", Offset = "0x145F3F8", VA = "0x145F3F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6678", Offset = "0xAF6678")]
		public float emissionDarken;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF66B0", Offset = "0xAF66B0")]
		public Material customMaterial;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, Material[]> originalSharedRendererMaterials;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<string, Material[]> originalRendererMaterials;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<string, Coroutine> faderRoutines;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool resetMainTexture;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x145E8A0", Offset = "0x145E8A0", VA = "0x145E8A0", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x145E9B4", Offset = "0x145E9B4", VA = "0x145E9B4", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x145E9C0", Offset = "0x145E9C0", VA = "0x145E9C0", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x145EA58", Offset = "0x145EA58", VA = "0x145EA58", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x145ED24", Offset = "0x145ED24", VA = "0x145ED24", Slot = "10")]
		protected virtual void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x145EEC4", Offset = "0x145EEC4", VA = "0x145EEC4", Slot = "11")]
		protected virtual void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x145F094", Offset = "0x145F094", VA = "0x145F094", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05330", Offset = "0xB05330")]
		protected virtual IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x145F198", Offset = "0x145F198", VA = "0x145F198")]
		public VRTK_MaterialColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4D5C", Offset = "0xAE4D5C")]
	public class VRTK_MaterialPropertyBlockColorSwapHighlighter : VRTK_MaterialColorSwapHighlighter
	{
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE66FC", Offset = "0xAE66FC")]
		private sealed class <CycleColor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialPropertyBlock highlightMaterialPropertyBlock;

			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color endColor;

			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Renderer renderer;

			[Token(Token = "0x4002AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600256E")]
				[Address(RVA = "0x145FF30", Offset = "0x145FF30", VA = "0x145FF30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002570")]
				[Address(RVA = "0x145FF98", Offset = "0x145FF98", VA = "0x145FF98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600256B")]
			[Address(RVA = "0x145FCA4", Offset = "0x145FCA4", VA = "0x145FCA4")]
			[DebuggerHidden]
			public <CycleColor>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600256C")]
			[Address(RVA = "0x145FD5C", Offset = "0x145FD5C", VA = "0x145FD5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0x145FD60", Offset = "0x145FD60", VA = "0x145FD60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0x145FF38", Offset = "0x145FF38", VA = "0x145FF38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<string, MaterialPropertyBlock> originalMaterialPropertyBlocks;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Dictionary<string, MaterialPropertyBlock> highlightMaterialPropertyBlocks;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x145F460", Offset = "0x145F460", VA = "0x145F460", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x145F4FC", Offset = "0x145F4FC", VA = "0x145F4FC", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x145F71C", Offset = "0x145F71C", VA = "0x145F71C", Slot = "10")]
		protected override void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x145F8E0", Offset = "0x145F8E0", VA = "0x145F8E0", Slot = "11")]
		protected override void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x145FBEC", Offset = "0x145FBEC", VA = "0x145FBEC", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05394", Offset = "0xB05394")]
		protected virtual IEnumerator CycleColor(Renderer renderer, MaterialPropertyBlock highlightMaterialPropertyBlock, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x145FCD0", Offset = "0x145FCD0", VA = "0x145FCD0")]
		public VRTK_MaterialPropertyBlockColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4D94", Offset = "0xAE4D94")]
	public class VRTK_OutlineObjectCopyHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF66E8", Offset = "0xAF66E8")]
		public float thickness;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6720", Offset = "0xAF6720")]
		public GameObject[] customOutlineModels;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6758", Offset = "0xAF6758")]
		public string[] customOutlineModelPaths;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6790", Offset = "0xAF6790")]
		public bool enableSubmeshHighlight;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Material stencilOutline;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject[] highlightModels;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string[] copyComponents;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x145FFA0", Offset = "0x145FFA0", VA = "0x145FFA0", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x14600E4", Offset = "0x14600E4", VA = "0x14600E4", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1460144", Offset = "0x1460144", VA = "0x1460144", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1460298", Offset = "0x1460298", VA = "0x1460298", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1460384", Offset = "0x1460384", VA = "0x1460384", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1460404", Offset = "0x1460404", VA = "0x1460404", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1460530", Offset = "0x1460530", VA = "0x1460530", Slot = "12")]
		protected virtual void ResetHighlighterWithCustomModels()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1460648", Offset = "0x1460648", VA = "0x1460648", Slot = "13")]
		protected virtual void ResetHighlighterWithCustomModelPaths()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1460764", Offset = "0x1460764", VA = "0x1460764", Slot = "14")]
		protected virtual void ResetHighlightersWithCurrentGameObject()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x146083C", Offset = "0x146083C", VA = "0x146083C", Slot = "15")]
		protected virtual void SetOptions([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1460970", Offset = "0x1460970", VA = "0x1460970", Slot = "16")]
		protected virtual void DeleteExistingHighlightModels()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1460A64", Offset = "0x1460A64", VA = "0x1460A64", Slot = "17")]
		protected virtual GameObject CreateHighlightModel(GameObject givenOutlineModel, string givenOutlineModelPath)
		{
			return null;
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x146126C", Offset = "0x146126C", VA = "0x146126C")]
		public VRTK_OutlineObjectCopyHighlighter()
		{
		}
	}
}
namespace VRTK.GrabAttachMechanics
{
	[Token(Token = "0x20002AA")]
	public abstract class VRTK_BaseGrabAttach : MonoBehaviour
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF67C8", Offset = "0xAF67C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF67C8", Offset = "0xAF67C8")]
		public bool precisionGrab;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6830", Offset = "0xAF6830")]
		public Transform rightSnapHandle;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6868", Offset = "0xAF6868")]
		public Transform leftSnapHandle;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handSnapHandle;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF68A0", Offset = "0xAF68A0")]
		public bool throwVelocityWithAttachDistance;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF68D8", Offset = "0xAF68D8")]
		public float throwMultiplier;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6910", Offset = "0xAF6910")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool tracked;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		protected bool climbable;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		protected bool kinematic;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject grabbedObject;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Rigidbody grabbedObjectRigidBody;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_InteractableObject grabbedObjectScript;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform trackPoint;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform grabbedSnapHandle;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform initialAttachPoint;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody controllerAttachPoint;

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x145AB7C", Offset = "0x145AB7C", VA = "0x145AB7C", Slot = "4")]
		public virtual bool IsTracked()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x145AB84", Offset = "0x145AB84", VA = "0x145AB84", Slot = "5")]
		public virtual bool IsClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x145AB8C", Offset = "0x145AB8C", VA = "0x145AB8C", Slot = "6")]
		public virtual bool IsKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x145AB94", Offset = "0x145AB94", VA = "0x145AB94", Slot = "7")]
		public virtual bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x145AB9C", Offset = "0x145AB9C", VA = "0x145AB9C", Slot = "8")]
		public virtual void SetTrackPoint(Transform givenTrackPoint)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x145ABA4", Offset = "0x145ABA4", VA = "0x145ABA4", Slot = "9")]
		public virtual void SetInitialAttachPoint(Transform givenInitialAttachPoint)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x145ABAC", Offset = "0x145ABAC", VA = "0x145ABAC", Slot = "10")]
		public virtual bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x145ACCC", Offset = "0x145ACCC", VA = "0x145ACCC", Slot = "11")]
		public virtual void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x145ACE0", Offset = "0x145ACE0", VA = "0x145ACE0", Slot = "12")]
		public virtual Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x145ACEC", Offset = "0x145ACEC", VA = "0x145ACEC", Slot = "13")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x145ACF0", Offset = "0x145ACF0", VA = "0x145ACF0", Slot = "14")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60017CD")]
		protected abstract void Initialise();

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x145ACF4", Offset = "0x145ACF4", VA = "0x145ACF4", Slot = "16")]
		protected virtual Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x145ACFC", Offset = "0x145ACFC", VA = "0x145ACFC", Slot = "17")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x145AE38", Offset = "0x145AE38", VA = "0x145AE38", Slot = "18")]
		protected virtual void ReleaseObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x145AF00", Offset = "0x145AF00", VA = "0x145AF00", Slot = "19")]
		protected virtual void FlipSnapHandles()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x145AF44", Offset = "0x145AF44", VA = "0x145AF44", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x145AF54", Offset = "0x145AF54", VA = "0x145AF54", Slot = "21")]
		protected virtual void ThrowReleasedObject(Rigidbody objectRigidbody)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x145B464", Offset = "0x145B464", VA = "0x145B464", Slot = "22")]
		protected virtual Transform GetSnapHandle(GameObject grabbingObject)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x145B600", Offset = "0x145B600", VA = "0x145B600", Slot = "23")]
		protected virtual void FlipSnapHandle(Transform snapHandle)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x145B6FC", Offset = "0x145B6FC", VA = "0x145B6FC")]
		protected VRTK_BaseGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public abstract class VRTK_BaseJointGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6948", Offset = "0xAF6948")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6948", Offset = "0xAF6948")]
		public bool destroyImmediatelyOnThrow;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Joint givenJoint;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Joint controllerAttachJoint;

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x145B70C", Offset = "0x145B70C", VA = "0x145B70C", Slot = "7")]
		public override bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x145B7E4", Offset = "0x145B7E4", VA = "0x145B7E4", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x145B830", Offset = "0x145B830", VA = "0x145B830", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x145B870", Offset = "0x145B870", VA = "0x145B870", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x145B880", Offset = "0x145B880", VA = "0x145B880", Slot = "16")]
		protected override Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x145B948", Offset = "0x145B948", VA = "0x145B948", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x145B958", Offset = "0x145B958", VA = "0x145B958", Slot = "25")]
		protected virtual void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x145BA44", Offset = "0x145BA44", VA = "0x145BA44", Slot = "26")]
		protected virtual void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x145BB08", Offset = "0x145BB08", VA = "0x145BB08", Slot = "27")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x145BD98", Offset = "0x145BD98", VA = "0x145BD98", Slot = "28")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x145BDEC", Offset = "0x145BDEC", VA = "0x145BDEC")]
		protected VRTK_BaseJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4DCC", Offset = "0xAE4DCC")]
	public class VRTK_ChildOfControllerGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x145BE04", Offset = "0x145BE04", VA = "0x145BE04", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x145BE6C", Offset = "0x145BE6C", VA = "0x145BE6C", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x145BEAC", Offset = "0x145BEAC", VA = "0x145BEAC", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x145BEBC", Offset = "0x145BEBC", VA = "0x145BEBC", Slot = "24")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x145C228", Offset = "0x145C228", VA = "0x145C228", Slot = "25")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x145C2BC", Offset = "0x145C2BC", VA = "0x145C2BC")]
		public VRTK_ChildOfControllerGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4E04", Offset = "0xAE4E04")]
	public class VRTK_ClimbableGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF69B0", Offset = "0xAF69B0")]
		public bool useObjectRotation;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x145C2CC", Offset = "0x145C2CC", VA = "0x145C2CC", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x145C2E0", Offset = "0x145C2E0", VA = "0x145C2E0")]
		public VRTK_ClimbableGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4E3C", Offset = "0xAE4E3C")]
	public class VRTK_CustomJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF69E8", Offset = "0xAF69E8")]
		public Joint customJoint;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject jointHolder;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x145C2F0", Offset = "0x145C2F0", VA = "0x145C2F0", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x145C30C", Offset = "0x145C30C", VA = "0x145C30C", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x145C5AC", Offset = "0x145C5AC", VA = "0x145C5AC", Slot = "26")]
		protected override void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x145C5B8", Offset = "0x145C5B8", VA = "0x145C5B8", Slot = "29")]
		protected virtual void CopyCustomJoint()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x145C7B0", Offset = "0x145C7B0", VA = "0x145C7B0")]
		public VRTK_CustomJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4E74", Offset = "0xAE4E74")]
	public class VRTK_FixedJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6A20", Offset = "0xAF6A20")]
		public float breakForce;

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x145C7C8", Offset = "0x145C7C8", VA = "0x145C7C8", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x145C884", Offset = "0x145C884", VA = "0x145C884")]
		public VRTK_FixedJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4EAC", Offset = "0xAE4EAC")]
	public class VRTK_RotatorTrackGrabAttach : VRTK_TrackObjectGrabAttach
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x145C8A8", Offset = "0x145C8A8", VA = "0x145C8A8", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x145C90C", Offset = "0x145C90C", VA = "0x145C90C", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x145CA28", Offset = "0x145CA28", VA = "0x145CA28", Slot = "24")]
		protected override void SetTrackPointOrientation(ref Transform trackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x145CA94", Offset = "0x145CA94", VA = "0x145CA94")]
		public VRTK_RotatorTrackGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4EE4", Offset = "0xAE4EE4")]
	public class VRTK_SpringJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6A58", Offset = "0xAF6A58")]
		public float breakForce;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6A90", Offset = "0xAF6A90")]
		public float strength;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6AC8", Offset = "0xAF6AC8")]
		public float damper;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x145CAEC", Offset = "0x145CAEC", VA = "0x145CAEC", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x145CBC8", Offset = "0x145CBC8", VA = "0x145CBC8")]
		public VRTK_SpringJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAE4F1C", Offset = "0xAE4F1C")]
	public class VRTK_TrackObjectGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6B00", Offset = "0xAF6B00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6B00", Offset = "0xAF6B00")]
		public float detachDistance;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6B68", Offset = "0xAF6B68")]
		public float velocityLimit;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6BA0", Offset = "0xAF6BA0")]
		public float angularVelocityLimit;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isReleasable;

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x145C8C0", Offset = "0x145C8C0", VA = "0x145C8C0", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x145CBF4", Offset = "0x145CBF4", VA = "0x145CBF4", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x145CE30", Offset = "0x145CE30", VA = "0x145CE30", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x145CF88", Offset = "0x145CF88", VA = "0x145CF88", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x145D3C8", Offset = "0x145D3C8", VA = "0x145D3C8", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x145D3E4", Offset = "0x145D3E4", VA = "0x145D3E4", Slot = "24")]
		protected virtual void SetTrackPointOrientation(ref Transform trackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x145CAC0", Offset = "0x145CAC0", VA = "0x145CAC0")]
		public VRTK_TrackObjectGrabAttach()
		{
		}
	}
}
namespace VRTK.WindowsMixedReality.Utilities
{
	[Token(Token = "0x20002B3")]
	public static class InteractionSourceExtensions
	{
		[Token(Token = "0x40013DD")]
		private const ushort ContinuousBuzzWaveform = 4100;
	}
	[Token(Token = "0x20002B4")]
	public static class WindowsApiChecker
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF6BD8", Offset = "0xAF6BD8")]
		private static bool <UniversalApiContractV5_IsAvailable>k__BackingField;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF6BE8", Offset = "0xAF6BE8")]
		private static bool <UniversalApiContractV4_IsAvailable>k__BackingField;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF6BF8", Offset = "0xAF6BF8")]
		private static bool <UniversalApiContractV3_IsAvailable>k__BackingField;

		[Token(Token = "0x170000A4")]
		public static bool UniversalApiContractV5_IsAvailable
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xDF62F4", Offset = "0xDF62F4", VA = "0xDF62F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB053F8", Offset = "0xB053F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xDF635C", Offset = "0xDF635C", VA = "0xDF635C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05408", Offset = "0xB05408")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public static bool UniversalApiContractV4_IsAvailable
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0xDF63CC", Offset = "0xDF63CC", VA = "0xDF63CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05418", Offset = "0xB05418")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001802")]
			[Address(RVA = "0xDF6434", Offset = "0xDF6434", VA = "0xDF6434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05428", Offset = "0xB05428")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public static bool UniversalApiContractV3_IsAvailable
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0xDF64A4", Offset = "0xDF64A4", VA = "0xDF64A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05438", Offset = "0xB05438")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xDF650C", Offset = "0xDF650C", VA = "0xDF650C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05448", Offset = "0xB05448")]
			private set
			{
			}
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xDF61FC", Offset = "0xDF61FC", VA = "0xDF61FC")]
		static WindowsApiChecker()
		{
		}
	}
}
namespace VRTK.Examples
{
	[Token(Token = "0x20002B5")]
	public class AutoRotation : MonoBehaviour
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6C08", Offset = "0xAF6C08")]
		public float degPerSec;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6C40", Offset = "0xAF6C40")]
		public Vector3 rotAxis;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Space space;

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xFCAF80", Offset = "0xFCAF80", VA = "0xFCAF80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xFCAF8C", Offset = "0xFCAF8C", VA = "0xFCAF8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xFCAFF8", Offset = "0xFCAFF8", VA = "0xFCAFF8")]
		public AutoRotation()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class Breakable_Cube : MonoBehaviour
	{
		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float breakForce;

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xFCB080", Offset = "0xFCB080", VA = "0xFCB080")]
		private void Start()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xFCB0E4", Offset = "0xFCB0E4", VA = "0xFCB0E4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xFCB11C", Offset = "0xFCB11C", VA = "0xFCB11C")]
		private float GetCollisionForce(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xFCB24C", Offset = "0xFCB24C", VA = "0xFCB24C")]
		private void ExplodeCube(float force)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xFCB39C", Offset = "0xFCB39C", VA = "0xFCB39C")]
		private void ExplodeFace(Transform face, float force)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xFCB4E4", Offset = "0xFCB4E4", VA = "0xFCB4E4")]
		public Breakable_Cube()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class ButtonReactor : MonoBehaviour
	{
		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform dispenseLocation;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_Button_UnityEvents buttonEvents;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xFCB4F4", Offset = "0xFCB4F4", VA = "0xFCB4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xFCB614", Offset = "0xFCB614", VA = "0xFCB614")]
		private void handlePush(object sender, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xFCB75C", Offset = "0xFCB75C", VA = "0xFCB75C")]
		public ButtonReactor()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class ControlReactor : MonoBehaviour
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh go;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_Control_UnityEvents controlEvents;

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xFCB764", Offset = "0xFCB764", VA = "0xFCB764")]
		private void Start()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xFCB884", Offset = "0xFCB884", VA = "0xFCB884")]
		private void HandleChange(object sender, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xFCB938", Offset = "0xFCB938", VA = "0xFCB938")]
		public ControlReactor()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class Controller_Hand : MonoBehaviour
	{
		[Token(Token = "0x200060A")]
		public enum Hands
		{
			[Token(Token = "0x4002AEB")]
			Right,
			[Token(Token = "0x4002AEC")]
			Left
		}

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hands hand;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform pointerFinger;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform gripFingers;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxRotation;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalPointerRotation;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float originalGripRotation;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetPointerRotation;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetGripRotation;

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xFCB940", Offset = "0xFCB940", VA = "0xFCB940")]
		private void Start()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xFCBC28", Offset = "0xFCBC28", VA = "0xFCBC28")]
		private void InversePosition(Transform givenTransform)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xFCBD14", Offset = "0xFCBD14", VA = "0xFCBD14")]
		private void DoGrabOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xFCBD20", Offset = "0xFCBD20", VA = "0xFCBD20")]
		private void DoGrabOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xFCBD2C", Offset = "0xFCBD2C", VA = "0xFCBD2C")]
		private void DoUseOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xFCBD38", Offset = "0xFCBD38", VA = "0xFCBD38")]
		private void DoUseOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xFCBD44", Offset = "0xFCBD44", VA = "0xFCBD44")]
		private void Update()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xFCBDE4", Offset = "0xFCBDE4", VA = "0xFCBDE4")]
		public Controller_Hand()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Controller_Menu : MonoBehaviour
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject menuObject;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject clonedMenuObject;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool menuInit;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool menuActive;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xFCBDF4", Offset = "0xFCBDF4", VA = "0xFCBDF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xFCBEE4", Offset = "0xFCBEE4", VA = "0xFCBEE4")]
		private void InitMenu()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xFCC014", Offset = "0xFCC014", VA = "0xFCC014")]
		private void DoMenuOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xFCC0BC", Offset = "0xFCC0BC", VA = "0xFCC0BC")]
		private void DoMenuOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xFCC150", Offset = "0xFCC150", VA = "0xFCC150")]
		private void Update()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xFCC254", Offset = "0xFCC254", VA = "0xFCC254")]
		public Controller_Menu()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class ExampleSceneSimulatorCameraRigMover : MonoBehaviour
	{
		[Token(Token = "0x6001822")]
		[Address(RVA = "0xFCC25C", Offset = "0xFCC25C", VA = "0xFCC25C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xFCC364", Offset = "0xFCC364", VA = "0xFCC364")]
		public ExampleSceneSimulatorCameraRigMover()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class ExcludeTeleport : MonoBehaviour
	{
		[Token(Token = "0x6001824")]
		[Address(RVA = "0xFCC36C", Offset = "0xFCC36C", VA = "0xFCC36C")]
		public ExcludeTeleport()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class FireExtinguisher_Base : VRTK_InteractableObject
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Animation leverAnimation;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FireExtinguisher_Sprayer sprayer;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xFCC374", Offset = "0xFCC374", VA = "0xFCC374", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xFCC3F0", Offset = "0xFCC3F0", VA = "0xFCC3F0", Slot = "28")]
		public override void StopUsing(VRTK_InteractUse previousUsingObject)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xFCC418", Offset = "0xFCC418", VA = "0xFCC418", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xFCC540", Offset = "0xFCC540", VA = "0xFCC540")]
		private void Spray(float power)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xFCC57C", Offset = "0xFCC57C", VA = "0xFCC57C")]
		private void SetHandleFrame(float frame)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xFCC6E4", Offset = "0xFCC6E4", VA = "0xFCC6E4")]
		public FireExtinguisher_Base()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class FireExtinguisher_Sprayer : VRTK_InteractableObject
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public FireExtinguisher_Base baseCan;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float breakDistance;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float maxSprayPower;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject waterSpray;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private ParticleSystem particles;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xFCC62C", Offset = "0xFCC62C", VA = "0xFCC62C")]
		public void Spray(float power)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xFCC6EC", Offset = "0xFCC6EC", VA = "0xFCC6EC", Slot = "53")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xFCC790", Offset = "0xFCC790", VA = "0xFCC790", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xFCC8B8", Offset = "0xFCC8B8", VA = "0xFCC8B8")]
		public FireExtinguisher_Sprayer()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class Gun : VRTK_InteractableObject
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GameObject bullet;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float bulletSpeed;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float bulletLife;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xFCC8CC", Offset = "0xFCC8CC", VA = "0xFCC8CC", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xFCCABC", Offset = "0xFCCABC", VA = "0xFCCABC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xFCC8F4", Offset = "0xFCC8F4", VA = "0xFCC8F4")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xFCCB40", Offset = "0xFCCB40", VA = "0xFCCB40")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class HandLift : VRTK_InteractableObject
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6C78", Offset = "0xAF6C78")]
		public float speed;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform handleTop;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform ropeTop;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform ropeBottom;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject rope;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject handle;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool isMoving;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool isMovingUp;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xFCCB54", Offset = "0xFCCB54", VA = "0xFCCB54", Slot = "6")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xFCCB80", Offset = "0xFCCB80", VA = "0xFCCB80", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xFCCE70", Offset = "0xFCCE70", VA = "0xFCCE70")]
		public HandLift()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class Lamp : VRTK_InteractableObject
	{
		[Token(Token = "0x6001836")]
		[Address(RVA = "0xFCCE8C", Offset = "0xFCCE8C", VA = "0xFCCE8C", Slot = "22")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xFCCF8C", Offset = "0xFCCF8C", VA = "0xFCCF8C", Slot = "24")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xFCCEB8", Offset = "0xFCCEB8", VA = "0xFCCEB8")]
		private void ToggleKinematics(bool state)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xFCCFB8", Offset = "0xFCCFB8", VA = "0xFCCFB8")]
		public Lamp()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class LightSaber : VRTK_InteractableObject
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool beamActive;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector2 beamLimits;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float currentBeamSize;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float beamExtendSpeed;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject blade;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Color activeColor;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Color targetColor;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Color[] bladePhaseColors;

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xFCCFC0", Offset = "0xFCCFC0", VA = "0xFCCFC0", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xFCD0AC", Offset = "0xFCD0AC", VA = "0xFCD0AC", Slot = "28")]
		public override void StopUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xFCD0D8", Offset = "0xFCD0D8", VA = "0xFCD0D8")]
		protected void Start()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xFCD1E4", Offset = "0xFCD1E4", VA = "0xFCD1E4", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xFCD15C", Offset = "0xFCD15C", VA = "0xFCD15C")]
		private void SetBeamSize()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xFCD2CC", Offset = "0xFCD2CC", VA = "0xFCD2CC")]
		private void PulseBeam()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xFCD474", Offset = "0xFCD474", VA = "0xFCD474")]
		public LightSaber()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class Menu_Color_Changer : VRTK_InteractableObject
	{
		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Color newMenuColor;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xFCD4C4", Offset = "0xFCD4C4", VA = "0xFCD4C4", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xFCD720", Offset = "0xFCD720", VA = "0xFCD720", Slot = "54")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xFCD654", Offset = "0xFCD654", VA = "0xFCD654")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xFCD7B4", Offset = "0xFCD7B4", VA = "0xFCD7B4")]
		public Menu_Color_Changer()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class Menu_Container_Object_Colors : VRTK_InteractableObject
	{
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xFCD574", Offset = "0xFCD574", VA = "0xFCD574")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xFCD8A8", Offset = "0xFCD8A8", VA = "0xFCD8A8")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xFCD8E4", Offset = "0xFCD8E4", VA = "0xFCD8E4")]
		public Menu_Container_Object_Colors()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class Menu_Object_Spawner : VRTK_InteractableObject
	{
		[Token(Token = "0x200060B")]
		public enum PrimitiveTypes
		{
			[Token(Token = "0x4002AEE")]
			Cube,
			[Token(Token = "0x4002AEF")]
			Sphere
		}

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public PrimitiveTypes shape;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Color selectedColor;

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xFCD7F0", Offset = "0xFCD7F0", VA = "0xFCD7F0")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xFCD8EC", Offset = "0xFCD8EC", VA = "0xFCD8EC", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xFCD958", Offset = "0xFCD958", VA = "0xFCD958")]
		private void CreateShape(PrimitiveType shape, Color color)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xFCDAB4", Offset = "0xFCDAB4", VA = "0xFCDAB4")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xFCDB80", Offset = "0xFCDB80", VA = "0xFCDB80")]
		public Menu_Object_Spawner()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class ModelVillage_TeleportLocation : VRTK_DestinationMarker
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destination;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool lastUsePressedState;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xFCDB88", Offset = "0xFCDB88", VA = "0xFCDB88")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xFCDE54", Offset = "0xFCDE54", VA = "0xFCDE54")]
		public ModelVillage_TeleportLocation()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class Openable_Door : VRTK_InteractableObject
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool flipped;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public bool rotated;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float sideFlip;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float side;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float smooth;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float doorOpenAngle;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool open;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 defaultRotation;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 openRotation;

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xFCDE5C", Offset = "0xFCDE5C", VA = "0xFCDE5C", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xFCDFC4", Offset = "0xFCDFC4", VA = "0xFCDFC4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xFCE028", Offset = "0xFCE028", VA = "0xFCE028", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xFCDF54", Offset = "0xFCDF54", VA = "0xFCDF54")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xFCDEC0", Offset = "0xFCDEC0", VA = "0xFCDEC0")]
		private void SetDoorRotation(Vector3 interacterPosition)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xFCE194", Offset = "0xFCE194", VA = "0xFCE194")]
		public Openable_Door()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class RC_Car : MonoBehaviour
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAcceleration;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpPower;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float acceleration;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float movementSpeed;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationSpeed;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isJumping;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 touchAxis;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float triggerAxis;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xFCF3E4", Offset = "0xFCF3E4", VA = "0xFCF3E4")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xFCF3EC", Offset = "0xFCF3EC", VA = "0xFCF3EC")]
		public void SetTriggerAxis(float data)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xFCF3F4", Offset = "0xFCF3F4", VA = "0xFCF3F4")]
		public void ResetCar()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xFCF44C", Offset = "0xFCF44C", VA = "0xFCF44C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xFCF4E8", Offset = "0xFCF4E8", VA = "0xFCF4E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xFCF52C", Offset = "0xFCF52C", VA = "0xFCF52C")]
		private void CalculateSpeed()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xFCF894", Offset = "0xFCF894", VA = "0xFCF894")]
		private void Decelerate()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xFCF5E0", Offset = "0xFCF5E0", VA = "0xFCF5E0")]
		private void Move()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xFCF6FC", Offset = "0xFCF6FC", VA = "0xFCF6FC")]
		private void Turn()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xFCF7E0", Offset = "0xFCF7E0", VA = "0xFCF7E0")]
		private void Jump()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xFCF980", Offset = "0xFCF980", VA = "0xFCF980")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xFCF988", Offset = "0xFCF988", VA = "0xFCF988")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xFCF994", Offset = "0xFCF994", VA = "0xFCF994")]
		public RC_Car()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class RC_Car_Controller : MonoBehaviour
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rcCar;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RC_Car rcCarScript;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xFCF9BC", Offset = "0xFCF9BC", VA = "0xFCF9BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xFCFB98", Offset = "0xFCFB98", VA = "0xFCFB98")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xFCFBB8", Offset = "0xFCFBB8", VA = "0xFCFBB8")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xFCFBD8", Offset = "0xFCFBD8", VA = "0xFCFBD8")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xFCFC50", Offset = "0xFCFC50", VA = "0xFCFC50")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xFCFC6C", Offset = "0xFCFC6C", VA = "0xFCFC6C")]
		private void DoCarReset(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xFCFC84", Offset = "0xFCFC84", VA = "0xFCFC84")]
		public RC_Car_Controller()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class RealGun : VRTK_InteractableObject
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float bulletSpeed;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float bulletLife;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject bullet;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject trigger;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private RealGun_Slide slide;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private RealGun_SafetySwitch safetySwitch;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Rigidbody slideRigidbody;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Collider slideCollider;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Rigidbody safetySwitchRigidbody;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Collider safetySwitchCollider;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float minTriggerRotation;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float maxTriggerRotation;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xFCFC8C", Offset = "0xFCFC8C", VA = "0xFCFC8C")]
		private void ToggleCollision(Rigidbody objRB, Collider objCol, bool state)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xFCFCD4", Offset = "0xFCFCD4", VA = "0xFCFCD4")]
		private void ToggleSlide(bool state)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xFCFD40", Offset = "0xFCFD40", VA = "0xFCFD40")]
		private void ToggleSafetySwitch(bool state)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xFCFD88", Offset = "0xFCFD88", VA = "0xFCFD88", Slot = "22")]
		public override void Grabbed(VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xFCFEF0", Offset = "0xFCFEF0", VA = "0xFCFEF0", Slot = "24")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xFCFF54", Offset = "0xFCFF54", VA = "0xFCFF54", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xFD0264", Offset = "0xFD0264", VA = "0xFD0264", Slot = "53")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xFD040C", Offset = "0xFD040C", VA = "0xFD040C", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xFD00A0", Offset = "0xFD00A0", VA = "0xFD00A0")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xFD055C", Offset = "0xFD055C", VA = "0xFD055C")]
		public RealGun()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class RealGun_SafetySwitch : VRTK_InteractableObject
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool safetyOff;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float offAngle;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 fixedPosition;

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xFD0580", Offset = "0xFD0580", VA = "0xFD0580", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xFD05B0", Offset = "0xFD05B0", VA = "0xFD05B0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xFD05F0", Offset = "0xFD05F0", VA = "0xFD05F0", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xFD06B4", Offset = "0xFD06B4", VA = "0xFD06B4")]
		private void SetSafety(bool safety)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xFD06C0", Offset = "0xFD06C0", VA = "0xFD06C0")]
		public RealGun_SafetySwitch()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class RealGun_Slide : VRTK_InteractableObject
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float restPosition;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float fireTimer;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float fireDistance;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float boltSpeed;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xFD0094", Offset = "0xFD0094", VA = "0xFD0094")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xFD06D8", Offset = "0xFD06D8", VA = "0xFD06D8", Slot = "53")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xFD071C", Offset = "0xFD071C", VA = "0xFD071C", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xFD099C", Offset = "0xFD099C", VA = "0xFD099C")]
		public RealGun_Slide()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Remote_Beam : MonoBehaviour
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 touchAxis;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationSpeed;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentYaw;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentPitch;

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xFD09B4", Offset = "0xFD09B4", VA = "0xFD09B4")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xFD09BC", Offset = "0xFD09BC", VA = "0xFD09BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xFD0B54", Offset = "0xFD0B54", VA = "0xFD0B54")]
		public Remote_Beam()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class Remote_Beam_Controller : MonoBehaviour
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject remoteBeam;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Remote_Beam remoteBeamScript;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xFD0B64", Offset = "0xFD0B64", VA = "0xFD0B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xFD0C68", Offset = "0xFD0C68", VA = "0xFD0C68")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xFD0C88", Offset = "0xFD0C88", VA = "0xFD0C88")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xFD0D00", Offset = "0xFD0D00", VA = "0xFD0D00")]
		public Remote_Beam_Controller()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class RendererOffOnDash : MonoBehaviour
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool wasSwitchedOff;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VRTK_DashTeleport> dashTeleporters;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xFD0D08", Offset = "0xFD0D08", VA = "0xFD0D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xFD0FC0", Offset = "0xFD0FC0", VA = "0xFD0FC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xFD112C", Offset = "0xFD112C", VA = "0xFD112C")]
		private void RendererOff(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xFD130C", Offset = "0xFD130C", VA = "0xFD130C")]
		private void RendererOn(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xFD1284", Offset = "0xFD1284", VA = "0xFD1284")]
		private void SwitchRenderer(GameObject go, bool enable)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xFD1360", Offset = "0xFD1360", VA = "0xFD1360")]
		public RendererOffOnDash()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class SnapDropZoneGroup_Switcher : MonoBehaviour
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject cubeZone;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject sphereZone;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xFD13D0", Offset = "0xFD13D0", VA = "0xFD13D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xFD16FC", Offset = "0xFD16FC", VA = "0xFD16FC")]
		private void DoCubeZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xFD171C", Offset = "0xFD171C", VA = "0xFD171C")]
		private void DoCubeZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xFD173C", Offset = "0xFD173C", VA = "0xFD173C")]
		private void DoSphereZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xFD175C", Offset = "0xFD175C", VA = "0xFD175C")]
		private void DoSphereZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xFD177C", Offset = "0xFD177C", VA = "0xFD177C")]
		public SnapDropZoneGroup_Switcher()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class Sphere_Spawner : MonoBehaviour
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject spawnMe;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 position;

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xFD1784", Offset = "0xFD1784", VA = "0xFD1784")]
		private void Start()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xFD1A00", Offset = "0xFD1A00", VA = "0xFD1A00")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xFD1A58", Offset = "0xFD1A58", VA = "0xFD1A58")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xFD1AC8", Offset = "0xFD1AC8", VA = "0xFD1AC8")]
		private void CreateSphere()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xFD1BB8", Offset = "0xFD1BB8", VA = "0xFD1BB8")]
		public Sphere_Spawner()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class Sword : VRTK_InteractableObject
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float impactMagnifier;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float collisionForce;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float maxCollisionForce;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xFD1BC0", Offset = "0xFD1BC0", VA = "0xFD1BC0")]
		public float CollisionForce()
		{
			return default(float);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xFD1BC8", Offset = "0xFD1BC8", VA = "0xFD1BC8", Slot = "22")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xFD1C74", Offset = "0xFD1C74", VA = "0xFD1C74", Slot = "24")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xFD1C9C", Offset = "0xFD1C9C", VA = "0xFD1C9C", Slot = "54")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xFD1CD8", Offset = "0xFD1CD8", VA = "0xFD1CD8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xFD1E28", Offset = "0xFD1E28", VA = "0xFD1E28")]
		public Sword()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class UI_Interactions : MonoBehaviour
	{
		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE670C", Offset = "0xAE670C")]
		private sealed class <CreateCanvasOnNextFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002574")]
				[Address(RVA = "0x1453C0C", Offset = "0x1453C0C", VA = "0x1453C0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002576")]
				[Address(RVA = "0x1453C74", Offset = "0x1453C74", VA = "0x1453C74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0x14533C8", Offset = "0x14533C8", VA = "0x14533C8")]
			[DebuggerHidden]
			public <CreateCanvasOnNextFrame>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0x14533FC", Offset = "0x14533FC", VA = "0x14533FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x1453400", Offset = "0x1453400", VA = "0x1453400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x1453C14", Offset = "0x1453C14", VA = "0x1453C14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001450")]
		private const int EXISTING_CANVAS_COUNT = 4;

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1452FBC", Offset = "0x1452FBC", VA = "0x1452FBC")]
		public void Button_Red()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1453028", Offset = "0x1453028", VA = "0x1453028")]
		public void Button_Pink()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1453094", Offset = "0x1453094", VA = "0x1453094")]
		public void Toggle(bool state)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1453134", Offset = "0x1453134", VA = "0x1453134")]
		public void Dropdown(int value)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x14531E4", Offset = "0x14531E4", VA = "0x14531E4")]
		public void SetDropText(BaseEventData data)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x145333C", Offset = "0x145333C", VA = "0x145333C")]
		public void CreateCanvas()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1453368", Offset = "0x1453368", VA = "0x1453368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05458", Offset = "0xB05458")]
		private IEnumerator CreateCanvasOnNextFrame()
		{
			return null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x14533F4", Offset = "0x14533F4", VA = "0x14533F4")]
		public UI_Interactions()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class UI_Keyboard : MonoBehaviour
	{
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1453C7C", Offset = "0x1453C7C", VA = "0x1453C7C")]
		public void ClickKey(string character)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1453CB8", Offset = "0x1453CB8", VA = "0x1453CB8")]
		public void Backspace()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1453D14", Offset = "0x1453D14", VA = "0x1453D14")]
		public void Enter()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1453DD0", Offset = "0x1453DD0", VA = "0x1453DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1453E28", Offset = "0x1453E28", VA = "0x1453E28")]
		public UI_Keyboard()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class UseRotate : VRTK_InteractableObject
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6CBC", Offset = "0xAF6CBC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6CBC", Offset = "0xAF6CBC")]
		private float idleSpinSpeed;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6D2C", Offset = "0xAF6D2C")]
		private float activeSpinSpeed;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6D78", Offset = "0xAF6D78")]
		[SerializeField]
		private Transform rotatingObject;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float spinSpeed;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1453E30", Offset = "0x1453E30", VA = "0x1453E30", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1453E5C", Offset = "0x1453E5C", VA = "0x1453E5C", Slot = "28")]
		public override void StopUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1453E88", Offset = "0x1453E88", VA = "0x1453E88")]
		protected void Start()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1453F18", Offset = "0x1453F18", VA = "0x1453F18", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1453F88", Offset = "0x1453F88", VA = "0x1453F88")]
		public UseRotate()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class VRTK_ControllerAppearance_Example : MonoBehaviour
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool highlightBodyOnlyOnCollision;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool pulseTriggerHighlightColor;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerTooltips tooltips;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_ControllerHighlighter highligher;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_ControllerEvents events;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color highlightColor;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color pulseColor;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color currentPulseColor;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float highlightTimer;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulseTimer;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float dimOpacity;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float defaultOpacity;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool highlighted;

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x145449C", Offset = "0x145449C", VA = "0x145449C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1454984", Offset = "0x1454984", VA = "0x1454984")]
		private void PulseTrigger()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1454A34", Offset = "0x1454A34", VA = "0x1454A34")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1454B44", Offset = "0x1454B44", VA = "0x1454B44")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1454C54", Offset = "0x1454C54", VA = "0x1454C54")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1454D28", Offset = "0x1454D28", VA = "0x1454D28")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1454E18", Offset = "0x1454E18", VA = "0x1454E18")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1454EEC", Offset = "0x1454EEC", VA = "0x1454EEC")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1454FDC", Offset = "0x1454FDC", VA = "0x1454FDC")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x14550B0", Offset = "0x14550B0", VA = "0x14550B0")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x14551A0", Offset = "0x14551A0", VA = "0x14551A0")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1455298", Offset = "0x1455298", VA = "0x1455298")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x14553A0", Offset = "0x14553A0", VA = "0x14553A0")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1455474", Offset = "0x1455474", VA = "0x1455474")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1455564", Offset = "0x1455564", VA = "0x1455564")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1455568", Offset = "0x1455568", VA = "0x1455568")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x14555F0", Offset = "0x14555F0", VA = "0x14555F0")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1455660", Offset = "0x1455660", VA = "0x1455660")]
		public VRTK_ControllerAppearance_Example()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class VRTK_ControllerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x14556B0", Offset = "0x14556B0", VA = "0x14556B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x145631C", Offset = "0x145631C", VA = "0x145631C")]
		private void DebugLogger(uint index, string button, string action, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x14566C4", Offset = "0x14566C4", VA = "0x14566C4")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1456768", Offset = "0x1456768", VA = "0x1456768")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x145680C", Offset = "0x145680C", VA = "0x145680C")]
		private void DoTriggerTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x14568B0", Offset = "0x14568B0", VA = "0x14568B0")]
		private void DoTriggerTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1456954", Offset = "0x1456954", VA = "0x1456954")]
		private void DoTriggerHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x14569F8", Offset = "0x14569F8", VA = "0x14569F8")]
		private void DoTriggerHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1456A9C", Offset = "0x1456A9C", VA = "0x1456A9C")]
		private void DoTriggerClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1456B40", Offset = "0x1456B40", VA = "0x1456B40")]
		private void DoTriggerUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1456BE4", Offset = "0x1456BE4", VA = "0x1456BE4")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1456C88", Offset = "0x1456C88", VA = "0x1456C88")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1456D2C", Offset = "0x1456D2C", VA = "0x1456D2C")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1456DD0", Offset = "0x1456DD0", VA = "0x1456DD0")]
		private void DoGripTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1456E74", Offset = "0x1456E74", VA = "0x1456E74")]
		private void DoGripTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1456F18", Offset = "0x1456F18", VA = "0x1456F18")]
		private void DoGripHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1456FBC", Offset = "0x1456FBC", VA = "0x1456FBC")]
		private void DoGripHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1457060", Offset = "0x1457060", VA = "0x1457060")]
		private void DoGripClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1457104", Offset = "0x1457104", VA = "0x1457104")]
		private void DoGripUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x14571A8", Offset = "0x14571A8", VA = "0x14571A8")]
		private void DoGripAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x145724C", Offset = "0x145724C", VA = "0x145724C")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x14572F0", Offset = "0x14572F0", VA = "0x14572F0")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1457394", Offset = "0x1457394", VA = "0x1457394")]
		private void DoTouchpadTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1457438", Offset = "0x1457438", VA = "0x1457438")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x14574DC", Offset = "0x14574DC", VA = "0x14574DC")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1457580", Offset = "0x1457580", VA = "0x1457580")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1457624", Offset = "0x1457624", VA = "0x1457624")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x14576C8", Offset = "0x14576C8", VA = "0x14576C8")]
		private void DoButtonOneTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x145776C", Offset = "0x145776C", VA = "0x145776C")]
		private void DoButtonOneTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1457810", Offset = "0x1457810", VA = "0x1457810")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x14578B4", Offset = "0x14578B4", VA = "0x14578B4")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1457958", Offset = "0x1457958", VA = "0x1457958")]
		private void DoButtonTwoTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x14579FC", Offset = "0x14579FC", VA = "0x14579FC")]
		private void DoButtonTwoTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1457AA0", Offset = "0x1457AA0", VA = "0x1457AA0")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1457B44", Offset = "0x1457B44", VA = "0x1457B44")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1457BE8", Offset = "0x1457BE8", VA = "0x1457BE8")]
		private void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1457C8C", Offset = "0x1457C8C", VA = "0x1457C8C")]
		private void DoControllerDisabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1457D30", Offset = "0x1457D30", VA = "0x1457D30")]
		private void DoControllerIndexChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1457DD4", Offset = "0x1457DD4", VA = "0x1457DD4")]
		public VRTK_ControllerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class VRTK_ControllerInteract_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1457DDC", Offset = "0x1457DDC", VA = "0x1457DDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1458110", Offset = "0x1458110", VA = "0x1458110")]
		private void DebugLogger(uint index, string action, GameObject target)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1458320", Offset = "0x1458320", VA = "0x1458320")]
		private void DoInteractTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x14583E4", Offset = "0x14583E4", VA = "0x14583E4")]
		private void DoInteractUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x14584A8", Offset = "0x14584A8", VA = "0x14584A8")]
		private void DoInteractGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x145856C", Offset = "0x145856C", VA = "0x145856C")]
		private void DoInteractUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1458630", Offset = "0x1458630", VA = "0x1458630")]
		public VRTK_ControllerInteract_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class VRTK_ControllerPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showHoverState;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x1458638", Offset = "0x1458638", VA = "0x1458638")]
		private void Start()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x145892C", Offset = "0x145892C", VA = "0x145892C")]
		private void DebugLogger(uint index, string action, Transform target, RaycastHit raycastHit, float distance, Vector3 tipPosition)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x1458D60", Offset = "0x1458D60", VA = "0x1458D60")]
		private void DoPointerIn(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x1458E34", Offset = "0x1458E34", VA = "0x1458E34")]
		private void DoPointerOut(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x1458F08", Offset = "0x1458F08", VA = "0x1458F08")]
		private void DoPointerHover(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1458FDC", Offset = "0x1458FDC", VA = "0x1458FDC")]
		private void DoPointerDestinationSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x14590B0", Offset = "0x14590B0", VA = "0x14590B0")]
		public VRTK_ControllerPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class VRTK_ControllerUIPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool togglePointerOnHit;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x14590B8", Offset = "0x14590B8", VA = "0x14590B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1459410", Offset = "0x1459410", VA = "0x1459410")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementEnter(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x145975C", Offset = "0x145975C", VA = "0x145975C")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementExit(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1459A24", Offset = "0x1459A24", VA = "0x1459A24")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementClick(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x1459CF4", Offset = "0x1459CF4", VA = "0x1459CF4")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragStart(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x1459FC4", Offset = "0x1459FC4", VA = "0x1459FC4")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x145A294", Offset = "0x145A294", VA = "0x145A294")]
		public VRTK_ControllerUIPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class VRTK_RoomExtender_ControllerExample : MonoBehaviour
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x145A29C", Offset = "0x145A29C", VA = "0x145A29C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x145A640", Offset = "0x145A640", VA = "0x145A640")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x145A6FC", Offset = "0x145A6FC", VA = "0x145A6FC")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x145A720", Offset = "0x145A720", VA = "0x145A720")]
		private void DoSwitchMovementFunction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x145A6C0", Offset = "0x145A6C0", VA = "0x145A6C0")]
		private void EnableAdditionalMovement()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x145A6E0", Offset = "0x145A6E0", VA = "0x145A6E0")]
		private void DisableAdditionalMovement()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x145A758", Offset = "0x145A758", VA = "0x145A758")]
		public VRTK_RoomExtender_ControllerExample()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class Whirlygig : VRTK_InteractableObject
	{
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float spinSpeed;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform rotator;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x145A760", Offset = "0x145A760", VA = "0x145A760", Slot = "26")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x145A78C", Offset = "0x145A78C", VA = "0x145A78C", Slot = "28")]
		public override void StopUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x145A7B4", Offset = "0x145A7B4", VA = "0x145A7B4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x145A820", Offset = "0x145A820", VA = "0x145A820", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x145A8B0", Offset = "0x145A8B0", VA = "0x145A8B0")]
		public Whirlygig()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class Zipline : VRTK_InteractableObject
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6DD4", Offset = "0xAF6DD4")]
		public float downStartSpeed;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float acceleration;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float upSpeed;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform handleEndPosition;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform handleStartPosition;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject handle;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool isMoving;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool isMovingDown;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentSpeed;

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x145A8B8", Offset = "0x145A8B8", VA = "0x145A8B8", Slot = "6")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x145A8E4", Offset = "0x145A8E4", VA = "0x145A8E4", Slot = "53")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x145A910", Offset = "0x145A910", VA = "0x145A910", Slot = "57")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x145AB54", Offset = "0x145AB54", VA = "0x145AB54")]
		public Zipline()
		{
		}
	}
}
namespace VRTK.Examples.Tests
{
	[Token(Token = "0x20002DE")]
	public abstract class VRTK_BaseTest : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE671C", Offset = "0xAE671C")]
		private sealed class <RunTests>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BaseTest <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600257A")]
				[Address(RVA = "0x144E898", Offset = "0x144E898", VA = "0x144E898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257C")]
				[Address(RVA = "0x144E900", Offset = "0x144E900", VA = "0x144E900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0x144E7C0", Offset = "0x144E7C0", VA = "0x144E7C0")]
			[DebuggerHidden]
			public <RunTests>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002578")]
			[Address(RVA = "0x144E7EC", Offset = "0x144E7EC", VA = "0x144E7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0x144E7F0", Offset = "0x144E7F0", VA = "0x144E7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600257B")]
			[Address(RVA = "0x144E8A0", Offset = "0x144E8A0", VA = "0x144E8A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string currentTest;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string currentSetup;

		[Token(Token = "0x600190A")]
		protected abstract void Test();

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xFD1E40", Offset = "0xFD1E40", VA = "0xFD1E40", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xFD1E74", Offset = "0xFD1E74", VA = "0xFD1E74", Slot = "6")]
		protected virtual void BeginTest(string name, int level = 1)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xFD2048", Offset = "0xFD2048", VA = "0xFD2048", Slot = "7")]
		protected virtual void SetUp(string message)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xFD20EC", Offset = "0xFD20EC", VA = "0xFD20EC", Slot = "8")]
		protected virtual void TearDown()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xFD2158", Offset = "0xFD2158", VA = "0xFD2158", Slot = "9")]
		protected virtual void Assert(string description, bool assertion, string failure, string success = "")
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xFD24A8", Offset = "0xFD24A8", VA = "0xFD24A8", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB054BC", Offset = "0xB054BC")]
		protected virtual IEnumerator RunTests()
		{
			return null;
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xFD2518", Offset = "0xFD2518", VA = "0xFD2518")]
		protected VRTK_BaseTest()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class VRTK_ControllerReference_Setup : VRTK_BaseTest
	{
		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint overrideActualIndex;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject overrideActualController;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject overrideAliasController;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject overrideModelController;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SDK_BaseController.ControllerHand actualControllerHand;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ControllerReference testReference;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected uint actualIndex;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject actualController;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject aliasController;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject modelController;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x144E908", Offset = "0x144E908", VA = "0x144E908", Slot = "7")]
		protected override void SetUp(string message)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x144EB00", Offset = "0x144EB00", VA = "0x144EB00", Slot = "8")]
		protected override void TearDown()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x144EB38", Offset = "0x144EB38", VA = "0x144EB38", Slot = "4")]
		protected override void Test()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x144EC30", Offset = "0x144EC30", VA = "0x144EC30", Slot = "11")]
		protected virtual List<SDK_BaseController.ControllerHand> GetOtherHands(SDK_BaseController.ControllerHand ignore)
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x144ED1C", Offset = "0x144ED1C", VA = "0x144ED1C", Slot = "12")]
		protected virtual void TestNullState()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x144EDC4", Offset = "0x144EDC4", VA = "0x144EDC4", Slot = "13")]
		protected virtual void TestStaticIndex()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x144FA18", Offset = "0x144FA18", VA = "0x144FA18", Slot = "14")]
		protected virtual void TestStaticActual()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x145066C", Offset = "0x145066C", VA = "0x145066C", Slot = "15")]
		protected virtual void TestStaticAlias()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x14512C0", Offset = "0x14512C0", VA = "0x14512C0", Slot = "16")]
		protected virtual void TestStaticModel()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1451F14", Offset = "0x1451F14", VA = "0x1451F14", Slot = "17")]
		protected virtual void TestStaticHand()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1452B68", Offset = "0x1452B68", VA = "0x1452B68", Slot = "18")]
		protected virtual void TestStaticIsValid()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1452D28", Offset = "0x1452D28", VA = "0x1452D28", Slot = "19")]
		protected virtual void TestStaticGetRealIndex()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1452FA4", Offset = "0x1452FA4", VA = "0x1452FA4")]
		public VRTK_ControllerReference_Setup()
		{
		}
	}
}
namespace VRTK.Examples.Utilities
{
	[Token(Token = "0x20002E0")]
	public class SceneChanger : MonoBehaviour
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool canPress;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x145400C", Offset = "0x145400C", VA = "0x145400C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1454070", Offset = "0x1454070", VA = "0x1454070")]
		private bool IsForwardPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x14541A4", Offset = "0x14541A4", VA = "0x14541A4")]
		private bool IsBackPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x14542D8", Offset = "0x14542D8", VA = "0x14542D8")]
		private void ResetPress()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x14542E4", Offset = "0x14542E4", VA = "0x14542E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1454494", Offset = "0x1454494", VA = "0x1454494")]
		public SceneChanger()
		{
		}
	}
}
namespace VRTK.Examples.PanelMenu
{
	[Token(Token = "0x20002E1")]
	public class PanelMenuDemoFlyingSaucer : MonoBehaviour
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xFCE1AC", Offset = "0xFCE1AC", VA = "0xFCE1AC")]
		public void UpdateGridLayoutValue(int selectedIndex)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xFCE280", Offset = "0xFCE280", VA = "0xFCE280")]
		public PanelMenuDemoFlyingSaucer()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class PanelMenuDemoSphere : MonoBehaviour
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xFCE3D4", Offset = "0xFCE3D4", VA = "0xFCE3D4")]
		public void UpdateSliderValue(float value)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xFCE4B0", Offset = "0xFCE4B0", VA = "0xFCE4B0")]
		public PanelMenuDemoSphere()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class PanelMenuUIGrid : MonoBehaviour
	{
		[Token(Token = "0x200060E")]
		public enum Direction
		{
			[Token(Token = "0x4002AF6")]
			None,
			[Token(Token = "0x4002AF7")]
			Up,
			[Token(Token = "0x4002AF8")]
			Down,
			[Token(Token = "0x4002AF9")]
			Left,
			[Token(Token = "0x4002AFA")]
			Right
		}

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color colorDefault;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color colorSelected;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float colorAlpha;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GridLayoutGroup gridLayoutGroup;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int selectedIndex;

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xFCE63C", Offset = "0xFCE63C", VA = "0xFCE63C")]
		private void Start()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xFCED58", Offset = "0xFCED58", VA = "0xFCED58")]
		public bool MoveSelectGridLayoutItem(Direction direction, GameObject interactableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xFCED9C", Offset = "0xFCED9C", VA = "0xFCED9C")]
		private int FindNextItemBasedOnMoveDirection(Direction direction)
		{
			return default(int);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xFCE988", Offset = "0xFCE988", VA = "0xFCE988")]
		private void SetGridLayoutItemSelectedState(int index)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xFCEF08", Offset = "0xFCEF08", VA = "0xFCEF08")]
		private void OnPanelMenuItemSwipeTop(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xFCEF10", Offset = "0xFCEF10", VA = "0xFCEF10")]
		private void OnPanelMenuItemSwipeBottom(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xFCEF18", Offset = "0xFCEF18", VA = "0xFCEF18")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xFCEF20", Offset = "0xFCEF20", VA = "0xFCEF20")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xFCEF28", Offset = "0xFCEF28", VA = "0xFCEF28")]
		private void OnPanelMenuItemTriggerPressed(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xFCEF30", Offset = "0xFCEF30", VA = "0xFCEF30")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xFCEFBC", Offset = "0xFCEFBC", VA = "0xFCEFBC")]
		public PanelMenuUIGrid()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class PanelMenuUISlider : MonoBehaviour
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider slider;

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xFCF008", Offset = "0xFCF008", VA = "0xFCF008")]
		private void Start()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xFCF264", Offset = "0xFCF264", VA = "0xFCF264")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xFCF370", Offset = "0xFCF370", VA = "0xFCF370")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xFCF2D0", Offset = "0xFCF2D0", VA = "0xFCF2D0")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xFCF3DC", Offset = "0xFCF3DC", VA = "0xFCF3DC")]
		public PanelMenuUISlider()
		{
		}
	}
}
namespace VRTK.Examples.Archery
{
	[Token(Token = "0x20002E5")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxArrowLife;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool inFlight;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool collided;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject arrowHolder;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 originalPosition;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion originalRotation;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalScale;

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xFC9088", Offset = "0xFC9088", VA = "0xFC9088")]
		public void SetArrowHolder(GameObject holder)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xFC90AC", Offset = "0xFC90AC", VA = "0xFC90AC")]
		public void OnNock()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xFC90B4", Offset = "0xFC90B4", VA = "0xFC90B4")]
		public void Fired()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xFC9150", Offset = "0xFC9150", VA = "0xFC9150")]
		public void ResetArrow()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xFC938C", Offset = "0xFC938C", VA = "0xFC938C")]
		private void Start()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xFC93E8", Offset = "0xFC93E8", VA = "0xFC93E8")]
		private void SetOrigns()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xFC9464", Offset = "0xFC9464", VA = "0xFC9464")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xFC957C", Offset = "0xFC957C", VA = "0xFC957C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xFC917C", Offset = "0xFC917C", VA = "0xFC917C")]
		private void RecreateNotch()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xFC9298", Offset = "0xFC9298", VA = "0xFC9298")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xFC90BC", Offset = "0xFC90BC", VA = "0xFC90BC")]
		private void DestroyArrow(float time)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xFC95B4", Offset = "0xFC95B4", VA = "0xFC95B4")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class ArrowNotch : MonoBehaviour
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject arrow;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_InteractableObject obj;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xFC95C4", Offset = "0xFC95C4", VA = "0xFC95C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xFC9654", Offset = "0xFC9654", VA = "0xFC9654")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xFC9844", Offset = "0xFC9844", VA = "0xFC9844")]
		private void CopyNotchToArrow()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xFC99C8", Offset = "0xFC99C8", VA = "0xFC99C8")]
		public ArrowNotch()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class ArrowSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowPrefab;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnDelay;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float spawnDelayTimer;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BowAim bow;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xFC99D0", Offset = "0xFC99D0", VA = "0xFC99D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xFC99D8", Offset = "0xFC99D8", VA = "0xFC99D8")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xFC9B98", Offset = "0xFC9B98", VA = "0xFC9B98")]
		private bool CanGrab(VRTK_InteractGrab grabbingController)
		{
			return default(bool);
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xFC9C74", Offset = "0xFC9C74", VA = "0xFC9C74")]
		private bool NoArrowNotched(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xFC9EC8", Offset = "0xFC9EC8", VA = "0xFC9EC8")]
		public ArrowSpawner()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class BowAim : MonoBehaviour
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE672C", Offset = "0xAE672C")]
		private sealed class <GetBaseRotation>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BowAim <>4__this;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002580")]
				[Address(RVA = "0xFCAD58", Offset = "0xFCAD58", VA = "0xFCAD58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002582")]
				[Address(RVA = "0xFCADC0", Offset = "0xFCADC0", VA = "0xFCADC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xFCA178", Offset = "0xFCA178", VA = "0xFCA178")]
			[DebuggerHidden]
			public <GetBaseRotation>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600257E")]
			[Address(RVA = "0xFCAC90", Offset = "0xFCAC90", VA = "0xFCAC90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600257F")]
			[Address(RVA = "0xFCAC94", Offset = "0xFCAC94", VA = "0xFCAC94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002581")]
			[Address(RVA = "0xFCAD60", Offset = "0xFCAD60", VA = "0xFCAD60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerMultiplier;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pullMultiplier;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pullOffset;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxPullDistance;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bowVibration;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float stringVibration;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BowAnimation bowAnimation;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject currentArrow;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BowHandle handle;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRTK_InteractableObject interact;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_InteractGrab holdControl;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_InteractGrab stringControl;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion releaseRotation;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion baseRotation;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool fired;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fireOffset;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float currentPull;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float previousPull;

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xFC9ED8", Offset = "0xFC9ED8", VA = "0xFC9ED8")]
		public VRTK_InteractGrab GetPullHand()
		{
			return null;
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xFC981C", Offset = "0xFC981C", VA = "0xFC981C")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xFC9E58", Offset = "0xFC9E58", VA = "0xFC9E58")]
		public bool HasArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xFC9EE0", Offset = "0xFC9EE0", VA = "0xFC9EE0")]
		public void SetArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xFC9EE8", Offset = "0xFC9EE8", VA = "0xFC9EE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xFC9FBC", Offset = "0xFC9FBC", VA = "0xFC9FBC")]
		private void DoObjectGrab(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xFCA108", Offset = "0xFCA108", VA = "0xFCA108")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05520", Offset = "0xB05520")]
		private IEnumerator GetBaseRotation()
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xFCA1A4", Offset = "0xFCA1A4", VA = "0xFCA1A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xFCA8CC", Offset = "0xFCA8CC", VA = "0xFCA8CC")]
		private void Release()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xFCABD8", Offset = "0xFCABD8", VA = "0xFCABD8")]
		private void ReleaseArrow()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xFCA460", Offset = "0xFCA460", VA = "0xFCA460")]
		private void AimArrow()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xFCA52C", Offset = "0xFCA52C", VA = "0xFCA52C")]
		private void AimBow()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xFCA6BC", Offset = "0xFCA6BC", VA = "0xFCA6BC")]
		private void PullString()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xFCAC70", Offset = "0xFCAC70", VA = "0xFCAC70")]
		public BowAim()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class BowAnimation : MonoBehaviour
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation animationTimeline;

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xFCAB28", Offset = "0xFCAB28", VA = "0xFCAB28")]
		public void SetFrame(float frame)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xFCADC8", Offset = "0xFCADC8", VA = "0xFCADC8")]
		public BowAnimation()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class BowHandle : MonoBehaviour
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform arrowNockingPoint;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BowAim aim;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform nockSide;

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xFCADD0", Offset = "0xFCADD0", VA = "0xFCADD0")]
		public BowHandle()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool followPosition;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool followRotation;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xFCADD8", Offset = "0xFCADD8", VA = "0xFCADD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xFCAF78", Offset = "0xFCAF78", VA = "0xFCAF78")]
		public Follow()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20002EC")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE673C", Offset = "0xAE673C")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6750", Offset = "0xAE6750")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6764", Offset = "0xAE6764")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6778", Offset = "0xAE6778")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE678C", Offset = "0xAE678C")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE67A0", Offset = "0xAE67A0")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE67B4", Offset = "0xAE67B4")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE67C8", Offset = "0xAE67C8")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE67DC", Offset = "0xAE67DC")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE67F0", Offset = "0xAE67F0")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6804", Offset = "0xAE6804")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6818", Offset = "0xAE6818")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE682C", Offset = "0xAE682C")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6840", Offset = "0xAE6840")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6854", Offset = "0xAE6854")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6868", Offset = "0xAE6868")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE687C", Offset = "0xAE687C")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6890", Offset = "0xAE6890")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE68A4", Offset = "0xAE68A4")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE68B8", Offset = "0xAE68B8")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE68CC", Offset = "0xAE68CC")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE68E0", Offset = "0xAE68E0")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE68F4", Offset = "0xAE68F4")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6908", Offset = "0xAE6908")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE691C", Offset = "0xAE691C")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6930", Offset = "0xAE6930")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6944", Offset = "0xAE6944")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6958", Offset = "0xAE6958")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE696C", Offset = "0xAE696C")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6980", Offset = "0xAE6980")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6994", Offset = "0xAE6994")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE69A8", Offset = "0xAE69A8")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE69BC", Offset = "0xAE69BC")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE69D0", Offset = "0xAE69D0")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE69E4", Offset = "0xAE69E4")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE69F8", Offset = "0xAE69F8")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A0C", Offset = "0xAE6A0C")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A20", Offset = "0xAE6A20")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A34", Offset = "0xAE6A34")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A48", Offset = "0xAE6A48")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A5C", Offset = "0xAE6A5C")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A70", Offset = "0xAE6A70")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A84", Offset = "0xAE6A84")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6A98", Offset = "0xAE6A98")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6AAC", Offset = "0xAE6AAC")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6AC0", Offset = "0xAE6AC0")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6AD4", Offset = "0xAE6AD4")]
		internal delegate uint _GetAppContainerFilePaths(StringBuilder pchBuffer, uint unBufferSize);

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6AE8", Offset = "0xAE6AE8")]
		internal delegate IntPtr _GetRuntimeVersion();

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetAppContainerFilePaths GetAppContainerFilePaths;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _GetRuntimeVersion GetRuntimeVersion;
	}
	[Token(Token = "0x20002ED")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6AFC", Offset = "0xAE6AFC")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B10", Offset = "0xAE6B10")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B24", Offset = "0xAE6B24")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20002EE")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B38", Offset = "0xAE6B38")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B4C", Offset = "0xAE6B4C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B60", Offset = "0xAE6B60")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B74", Offset = "0xAE6B74")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B88", Offset = "0xAE6B88")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6B9C", Offset = "0xAE6B9C")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6BB0", Offset = "0xAE6BB0")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6BC4", Offset = "0xAE6BC4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6BD8", Offset = "0xAE6BD8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6BEC", Offset = "0xAE6BEC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C00", Offset = "0xAE6C00")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C14", Offset = "0xAE6C14")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20002EF")]
	public struct IVRApplications
	{
		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C28", Offset = "0xAE6C28")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C3C", Offset = "0xAE6C3C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C50", Offset = "0xAE6C50")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C64", Offset = "0xAE6C64")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C78", Offset = "0xAE6C78")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6C8C", Offset = "0xAE6C8C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6CA0", Offset = "0xAE6CA0")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6CB4", Offset = "0xAE6CB4")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6CC8", Offset = "0xAE6CC8")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6CDC", Offset = "0xAE6CDC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6CF0", Offset = "0xAE6CF0")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D04", Offset = "0xAE6D04")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D18", Offset = "0xAE6D18")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D2C", Offset = "0xAE6D2C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D40", Offset = "0xAE6D40")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D54", Offset = "0xAE6D54")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D68", Offset = "0xAE6D68")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D7C", Offset = "0xAE6D7C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6D90", Offset = "0xAE6D90")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6DA4", Offset = "0xAE6DA4")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6DB8", Offset = "0xAE6DB8")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6DCC", Offset = "0xAE6DCC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6DE0", Offset = "0xAE6DE0")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6DF4", Offset = "0xAE6DF4")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E08", Offset = "0xAE6E08")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E1C", Offset = "0xAE6E1C")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E30", Offset = "0xAE6E30")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E44", Offset = "0xAE6E44")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E58", Offset = "0xAE6E58")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E6C", Offset = "0xAE6E6C")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E80", Offset = "0xAE6E80")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20002F0")]
	public struct IVRChaperone
	{
		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6E94", Offset = "0xAE6E94")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6EA8", Offset = "0xAE6EA8")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6EBC", Offset = "0xAE6EBC")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6ED0", Offset = "0xAE6ED0")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6EE4", Offset = "0xAE6EE4")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6EF8", Offset = "0xAE6EF8")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F0C", Offset = "0xAE6F0C")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F20", Offset = "0xAE6F20")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20002F1")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F34", Offset = "0xAE6F34")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F48", Offset = "0xAE6F48")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F5C", Offset = "0xAE6F5C")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F70", Offset = "0xAE6F70")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F84", Offset = "0xAE6F84")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6F98", Offset = "0xAE6F98")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6FAC", Offset = "0xAE6FAC")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6FC0", Offset = "0xAE6FC0")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6FD4", Offset = "0xAE6FD4")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6FE8", Offset = "0xAE6FE8")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE6FFC", Offset = "0xAE6FFC")]
		internal delegate void _SetWorkingPerimeter([In][Out] HmdVector2_t[] pPointBuffer, uint unPointCount);

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7010", Offset = "0xAE7010")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7024", Offset = "0xAE7024")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7038", Offset = "0xAE7038")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE704C", Offset = "0xAE704C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7060", Offset = "0xAE7060")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7074", Offset = "0xAE7074")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7088", Offset = "0xAE7088")]
		internal delegate void _ShowWorkingSetPreview();

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE709C", Offset = "0xAE709C")]
		internal delegate void _HideWorkingSetPreview();

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE70B0", Offset = "0xAE70B0")]
		internal delegate void _RoomSetupStarting();

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingPerimeter SetWorkingPerimeter;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ShowWorkingSetPreview ShowWorkingSetPreview;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _HideWorkingSetPreview HideWorkingSetPreview;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _RoomSetupStarting RoomSetupStarting;
	}
	[Token(Token = "0x20002F2")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE70C4", Offset = "0xAE70C4")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE70D8", Offset = "0xAE70D8")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE70EC", Offset = "0xAE70EC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7100", Offset = "0xAE7100")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7114", Offset = "0xAE7114")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7128", Offset = "0xAE7128")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE713C", Offset = "0xAE713C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7150", Offset = "0xAE7150")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7164", Offset = "0xAE7164")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7178", Offset = "0xAE7178")]
		internal delegate uint _GetFrameTimings([In][Out] Compositor_FrameTiming[] pTiming, uint nFrames);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE718C", Offset = "0xAE718C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE71A0", Offset = "0xAE71A0")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE71B4", Offset = "0xAE71B4")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE71C8", Offset = "0xAE71C8")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE71DC", Offset = "0xAE71DC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE71F0", Offset = "0xAE71F0")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7204", Offset = "0xAE7204")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7218", Offset = "0xAE7218")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE722C", Offset = "0xAE722C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7240", Offset = "0xAE7240")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7254", Offset = "0xAE7254")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7268", Offset = "0xAE7268")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE727C", Offset = "0xAE727C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7290", Offset = "0xAE7290")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE72A4", Offset = "0xAE72A4")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE72B8", Offset = "0xAE72B8")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE72CC", Offset = "0xAE72CC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE72E0", Offset = "0xAE72E0")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE72F4", Offset = "0xAE72F4")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7308", Offset = "0xAE7308")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE731C", Offset = "0xAE731C")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7330", Offset = "0xAE7330")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7344", Offset = "0xAE7344")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7358", Offset = "0xAE7358")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE736C", Offset = "0xAE736C")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7380", Offset = "0xAE7380")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7394", Offset = "0xAE7394")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE73A8", Offset = "0xAE73A8")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE73BC", Offset = "0xAE73BC")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE73D0", Offset = "0xAE73D0")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE73E4", Offset = "0xAE73E4")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE73F8", Offset = "0xAE73F8")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE740C", Offset = "0xAE740C")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7420", Offset = "0xAE7420")]
		internal delegate bool _IsMotionSmoothingEnabled();

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7434", Offset = "0xAE7434")]
		internal delegate bool _IsMotionSmoothingSupported();

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7448", Offset = "0xAE7448")]
		internal delegate bool _IsCurrentSceneFocusAppLoading();

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsMotionSmoothingEnabled IsMotionSmoothingEnabled;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _IsMotionSmoothingSupported IsMotionSmoothingSupported;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _IsCurrentSceneFocusAppLoading IsCurrentSceneFocusAppLoading;
	}
	[Token(Token = "0x20002F3")]
	public struct IVROverlay
	{
		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE745C", Offset = "0xAE745C")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7470", Offset = "0xAE7470")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7484", Offset = "0xAE7484")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7498", Offset = "0xAE7498")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE74AC", Offset = "0xAE74AC")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE74C0", Offset = "0xAE74C0")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE74D4", Offset = "0xAE74D4")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE74E8", Offset = "0xAE74E8")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE74FC", Offset = "0xAE74FC")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7510", Offset = "0xAE7510")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7524", Offset = "0xAE7524")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7538", Offset = "0xAE7538")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE754C", Offset = "0xAE754C")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7560", Offset = "0xAE7560")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7574", Offset = "0xAE7574")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7588", Offset = "0xAE7588")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE759C", Offset = "0xAE759C")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE75B0", Offset = "0xAE75B0")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE75C4", Offset = "0xAE75C4")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE75D8", Offset = "0xAE75D8")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE75EC", Offset = "0xAE75EC")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7600", Offset = "0xAE7600")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7614", Offset = "0xAE7614")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7628", Offset = "0xAE7628")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE763C", Offset = "0xAE763C")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7650", Offset = "0xAE7650")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7664", Offset = "0xAE7664")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7678", Offset = "0xAE7678")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE768C", Offset = "0xAE768C")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE76A0", Offset = "0xAE76A0")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE76B4", Offset = "0xAE76B4")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE76C8", Offset = "0xAE76C8")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE76DC", Offset = "0xAE76DC")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE76F0", Offset = "0xAE76F0")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7704", Offset = "0xAE7704")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7718", Offset = "0xAE7718")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE772C", Offset = "0xAE772C")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7740", Offset = "0xAE7740")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7754", Offset = "0xAE7754")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7768", Offset = "0xAE7768")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE777C", Offset = "0xAE777C")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7790", Offset = "0xAE7790")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE77A4", Offset = "0xAE77A4")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE77B8", Offset = "0xAE77B8")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE77CC", Offset = "0xAE77CC")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE77E0", Offset = "0xAE77E0")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE77F4", Offset = "0xAE77F4")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7808", Offset = "0xAE7808")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE781C", Offset = "0xAE781C")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7830", Offset = "0xAE7830")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7844", Offset = "0xAE7844")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7858", Offset = "0xAE7858")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE786C", Offset = "0xAE786C")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7880", Offset = "0xAE7880")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7894", Offset = "0xAE7894")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE78A8", Offset = "0xAE78A8")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE78BC", Offset = "0xAE78BC")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, float fRadius);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE78D0", Offset = "0xAE78D0")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE78E4", Offset = "0xAE78E4")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE78F8", Offset = "0xAE78F8")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE790C", Offset = "0xAE790C")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7920", Offset = "0xAE7920")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7934", Offset = "0xAE7934")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7948", Offset = "0xAE7948")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE795C", Offset = "0xAE795C")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7970", Offset = "0xAE7970")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7984", Offset = "0xAE7984")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7998", Offset = "0xAE7998")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE79AC", Offset = "0xAE79AC")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE79C0", Offset = "0xAE79C0")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE79D4", Offset = "0xAE79D4")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE79E8", Offset = "0xAE79E8")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE79FC", Offset = "0xAE79FC")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A10", Offset = "0xAE7A10")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A24", Offset = "0xAE7A24")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A38", Offset = "0xAE7A38")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A4C", Offset = "0xAE7A4C")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A60", Offset = "0xAE7A60")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A74", Offset = "0xAE7A74")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A88", Offset = "0xAE7A88")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7A9C", Offset = "0xAE7A9C")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7AB0", Offset = "0xAE7AB0")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20002F4")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7AC4", Offset = "0xAE7AC4")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7AD8", Offset = "0xAE7AD8")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7AEC", Offset = "0xAE7AEC")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x200070D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B00", Offset = "0xAE7B00")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B14", Offset = "0xAE7B14")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B28", Offset = "0xAE7B28")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B3C", Offset = "0xAE7B3C")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B50", Offset = "0xAE7B50")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B64", Offset = "0xAE7B64")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B78", Offset = "0xAE7B78")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7B8C", Offset = "0xAE7B8C")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7BA0", Offset = "0xAE7BA0")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7BB4", Offset = "0xAE7BB4")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7BC8", Offset = "0xAE7BC8")]
		internal delegate bool _GetComponentStateForDevicePath(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7BDC", Offset = "0xAE7BDC")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7BF0", Offset = "0xAE7BF0")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C04", Offset = "0xAE7C04")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C18", Offset = "0xAE7C18")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C2C", Offset = "0xAE7C2C")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentStateForDevicePath GetComponentStateForDevicePath;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20002F5")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C40", Offset = "0xAE7C40")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C54", Offset = "0xAE7C54")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20002F6")]
	public struct IVRSettings
	{
		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C68", Offset = "0xAE7C68")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C7C", Offset = "0xAE7C7C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7C90", Offset = "0xAE7C90")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7CA4", Offset = "0xAE7CA4")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7CB8", Offset = "0xAE7CB8")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7CCC", Offset = "0xAE7CCC")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7CE0", Offset = "0xAE7CE0")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7CF4", Offset = "0xAE7CF4")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D08", Offset = "0xAE7D08")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D1C", Offset = "0xAE7D1C")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D30", Offset = "0xAE7D30")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D44", Offset = "0xAE7D44")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20002F7")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D58", Offset = "0xAE7D58")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D6C", Offset = "0xAE7D6C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D80", Offset = "0xAE7D80")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7D94", Offset = "0xAE7D94")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7DA8", Offset = "0xAE7DA8")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7DBC", Offset = "0xAE7DBC")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7DD0", Offset = "0xAE7DD0")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20002F8")]
	public struct IVRResources
	{
		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7DE4", Offset = "0xAE7DE4")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7DF8", Offset = "0xAE7DF8")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20002F9")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E0C", Offset = "0xAE7E0C")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E20", Offset = "0xAE7E20")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E34", Offset = "0xAE7E34")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E48", Offset = "0xAE7E48")]
		internal delegate bool _IsEnabled(uint nDriver);

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _IsEnabled IsEnabled;
	}
	[Token(Token = "0x20002FA")]
	public struct IVRInput
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E5C", Offset = "0xAE7E5C")]
		internal delegate EVRInputError _SetActionManifestPath(string pchActionManifestPath);

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E70", Offset = "0xAE7E70")]
		internal delegate EVRInputError _GetActionSetHandle(string pchActionSetName, ref ulong pHandle);

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E84", Offset = "0xAE7E84")]
		internal delegate EVRInputError _GetActionHandle(string pchActionName, ref ulong pHandle);

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7E98", Offset = "0xAE7E98")]
		internal delegate EVRInputError _GetInputSourceHandle(string pchInputSourcePath, ref ulong pHandle);

		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7EAC", Offset = "0xAE7EAC")]
		internal delegate EVRInputError _UpdateActionState([In][Out] VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount);

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7EC0", Offset = "0xAE7EC0")]
		internal delegate EVRInputError _GetDigitalActionData(ulong action, ref InputDigitalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7ED4", Offset = "0xAE7ED4")]
		internal delegate EVRInputError _GetAnalogActionData(ulong action, ref InputAnalogActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7EE8", Offset = "0xAE7EE8")]
		internal delegate EVRInputError _GetPoseActionDataRelativeToNow(ulong action, ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7EFC", Offset = "0xAE7EFC")]
		internal delegate EVRInputError _GetPoseActionDataForNextFrame(ulong action, ETrackingUniverseOrigin eOrigin, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice);

		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F10", Offset = "0xAE7F10")]
		internal delegate EVRInputError _GetSkeletalActionData(ulong action, ref InputSkeletalActionData_t pActionData, uint unActionDataSize);

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F24", Offset = "0xAE7F24")]
		internal delegate EVRInputError _GetBoneCount(ulong action, ref uint pBoneCount);

		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F38", Offset = "0xAE7F38")]
		internal delegate EVRInputError _GetBoneHierarchy(ulong action, [In][Out] int[] pParentIndices, uint unIndexArayCount);

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F4C", Offset = "0xAE7F4C")]
		internal delegate EVRInputError _GetBoneName(ulong action, int nBoneIndex, StringBuilder pchBoneName, uint unNameBufferSize);

		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F60", Offset = "0xAE7F60")]
		internal delegate EVRInputError _GetSkeletalReferenceTransforms(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalReferencePose eReferencePose, [In][Out] VRBoneTransform_t[] pTransformArray, uint unTransformArrayCount);

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F74", Offset = "0xAE7F74")]
		internal delegate EVRInputError _GetSkeletalTrackingLevel(ulong action, ref EVRSkeletalTrackingLevel pSkeletalTrackingLevel);

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F88", Offset = "0xAE7F88")]
		internal delegate EVRInputError _GetSkeletalBoneData(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, [In][Out] VRBoneTransform_t[] pTransformArray, uint unTransformArrayCount);

		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7F9C", Offset = "0xAE7F9C")]
		internal delegate EVRInputError _GetSkeletalSummaryData(ulong action, EVRSummaryType eSummaryType, ref VRSkeletalSummaryData_t pSkeletalSummaryData);

		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7FB0", Offset = "0xAE7FB0")]
		internal delegate EVRInputError _GetSkeletalBoneDataCompressed(ulong action, EVRSkeletalMotionRange eMotionRange, IntPtr pvCompressedData, uint unCompressedSize, ref uint punRequiredCompressedSize);

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7FC4", Offset = "0xAE7FC4")]
		internal delegate EVRInputError _DecompressSkeletalBoneData(IntPtr pvCompressedBuffer, uint unCompressedBufferSize, EVRSkeletalTransformSpace eTransformSpace, [In][Out] VRBoneTransform_t[] pTransformArray, uint unTransformArrayCount);

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7FD8", Offset = "0xAE7FD8")]
		internal delegate EVRInputError _TriggerHapticVibrationAction(ulong action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, ulong ulRestrictToDevice);

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE7FEC", Offset = "0xAE7FEC")]
		internal delegate EVRInputError _GetActionOrigins(ulong actionSetHandle, ulong digitalActionHandle, [In][Out] ulong[] originsOut, uint originOutCount);

		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8000", Offset = "0xAE8000")]
		internal delegate EVRInputError _GetOriginLocalizedName(ulong origin, StringBuilder pchNameArray, uint unNameArraySize, int unStringSectionsToInclude);

		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8014", Offset = "0xAE8014")]
		internal delegate EVRInputError _GetOriginTrackedDeviceInfo(ulong origin, ref InputOriginInfo_t pOriginInfo, uint unOriginInfoSize);

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8028", Offset = "0xAE8028")]
		internal delegate EVRInputError _GetActionBindingInfo(ulong action, ref InputBindingInfo_t pOriginInfo, uint unBindingInfoSize, uint unBindingInfoCount, ref uint punReturnedBindingInfoCount);

		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE803C", Offset = "0xAE803C")]
		internal delegate EVRInputError _ShowActionOrigins(ulong actionSetHandle, ulong ulActionHandle);

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8050", Offset = "0xAE8050")]
		internal delegate EVRInputError _ShowBindingsForActionSet([In][Out] VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount, ulong originToHighlight);

		[Token(Token = "0x2000752")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8064", Offset = "0xAE8064")]
		internal delegate bool _IsUsingLegacyInput();

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetActionManifestPath SetActionManifestPath;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetActionSetHandle GetActionSetHandle;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetActionHandle GetActionHandle;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetInputSourceHandle GetInputSourceHandle;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateActionState UpdateActionState;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetDigitalActionData GetDigitalActionData;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetAnalogActionData GetAnalogActionData;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetPoseActionDataRelativeToNow GetPoseActionDataRelativeToNow;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetPoseActionDataForNextFrame GetPoseActionDataForNextFrame;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetSkeletalActionData GetSkeletalActionData;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetBoneCount GetBoneCount;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetBoneHierarchy GetBoneHierarchy;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetBoneName GetBoneName;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSkeletalReferenceTransforms GetSkeletalReferenceTransforms;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetSkeletalTrackingLevel GetSkeletalTrackingLevel;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSkeletalBoneData GetSkeletalBoneData;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetSkeletalSummaryData GetSkeletalSummaryData;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetSkeletalBoneDataCompressed GetSkeletalBoneDataCompressed;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _DecompressSkeletalBoneData DecompressSkeletalBoneData;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _TriggerHapticVibrationAction TriggerHapticVibrationAction;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetActionOrigins GetActionOrigins;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOriginLocalizedName GetOriginLocalizedName;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetOriginTrackedDeviceInfo GetOriginTrackedDeviceInfo;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetActionBindingInfo GetActionBindingInfo;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _ShowActionOrigins ShowActionOrigins;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowBindingsForActionSet ShowBindingsForActionSet;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _IsUsingLegacyInput IsUsingLegacyInput;
	}
	[Token(Token = "0x20002FB")]
	public struct IVRIOBuffer
	{
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8078", Offset = "0xAE8078")]
		internal delegate EIOBufferError _Open(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer);

		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE808C", Offset = "0xAE808C")]
		internal delegate EIOBufferError _Close(ulong ulBuffer);

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE80A0", Offset = "0xAE80A0")]
		internal delegate EIOBufferError _Read(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead);

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE80B4", Offset = "0xAE80B4")]
		internal delegate EIOBufferError _Write(ulong ulBuffer, IntPtr pSrc, uint unBytes);

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE80C8", Offset = "0xAE80C8")]
		internal delegate ulong _PropertyContainer(ulong ulBuffer);

		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE80DC", Offset = "0xAE80DC")]
		internal delegate bool _HasReaders(ulong ulBuffer);

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _Open Open;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Close Close;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _Read Read;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _Write Write;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _PropertyContainer PropertyContainer;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _HasReaders HasReaders;
	}
	[Token(Token = "0x20002FC")]
	public struct IVRSpatialAnchors
	{
		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE80F0", Offset = "0xAE80F0")]
		internal delegate EVRSpatialAnchorError _CreateSpatialAnchorFromDescriptor(string pchDescriptor, ref uint pHandleOut);

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8104", Offset = "0xAE8104")]
		internal delegate EVRSpatialAnchorError _CreateSpatialAnchorFromPose(uint unDeviceIndex, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPose, ref uint pHandleOut);

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8118", Offset = "0xAE8118")]
		internal delegate EVRSpatialAnchorError _GetSpatialAnchorPose(uint unHandle, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPoseOut);

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE812C", Offset = "0xAE812C")]
		internal delegate EVRSpatialAnchorError _GetSpatialAnchorDescriptor(uint unHandle, StringBuilder pchDescriptorOut, ref uint punDescriptorBufferLenInOut);

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateSpatialAnchorFromDescriptor CreateSpatialAnchorFromDescriptor;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateSpatialAnchorFromPose CreateSpatialAnchorFromPose;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetSpatialAnchorPose GetSpatialAnchorPose;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetSpatialAnchorDescriptor GetSpatialAnchorDescriptor;
	}
	[Token(Token = "0x20002FD")]
	public struct IVRDebug
	{
		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8140", Offset = "0xAE8140")]
		internal delegate EVRDebugError _EmitVrProfilerEvent(string pchMessage);

		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8154", Offset = "0xAE8154")]
		internal delegate EVRDebugError _BeginVrProfilerEvent(ref ulong pHandleOut);

		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8168", Offset = "0xAE8168")]
		internal delegate EVRDebugError _FinishVrProfilerEvent(ulong hHandle, string pchMessage);

		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE817C", Offset = "0xAE817C")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _EmitVrProfilerEvent EmitVrProfilerEvent;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _BeginVrProfilerEvent BeginVrProfilerEvent;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _FinishVrProfilerEvent FinishVrProfilerEvent;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _DriverDebugRequest DriverDebugRequest;
	}
	[Token(Token = "0x20002FE")]
	public class CVRSystem
	{
		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE8190", Offset = "0xAE8190")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000762")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE81A4", Offset = "0xAE81A4")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000764")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4002B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4002B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE81B8", Offset = "0xAE81B8")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000766")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4002B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x16B4DD8", Offset = "0x16B4DD8", VA = "0x16B4DD8")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x16B4EE0", Offset = "0x16B4EE0", VA = "0x16B4EE0")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x16B4F04", Offset = "0x16B4F04", VA = "0x16B4F04")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x16B4F20", Offset = "0x16B4F20", VA = "0x16B4F20")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x16B4F4C", Offset = "0x16B4F4C", VA = "0x16B4F4C")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x16B4F68", Offset = "0x16B4F68", VA = "0x16B4F68")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x16B4F84", Offset = "0x16B4F84", VA = "0x16B4F84")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x16B4FA8", Offset = "0x16B4FA8", VA = "0x16B4FA8")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x16B4FC4", Offset = "0x16B4FC4", VA = "0x16B4FC4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x16B4FE4", Offset = "0x16B4FE4", VA = "0x16B4FE4")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x16B5004", Offset = "0x16B5004", VA = "0x16B5004")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x16B5020", Offset = "0x16B5020", VA = "0x16B5020")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x16B5040", Offset = "0x16B5040", VA = "0x16B5040")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x16B5068", Offset = "0x16B5068", VA = "0x16B5068")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x16B5084", Offset = "0x16B5084", VA = "0x16B5084")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x16B50A0", Offset = "0x16B50A0", VA = "0x16B50A0")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x16B50BC", Offset = "0x16B50BC", VA = "0x16B50BC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x16B50E8", Offset = "0x16B50E8", VA = "0x16B50E8")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x16B5104", Offset = "0x16B5104", VA = "0x16B5104")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x16B5120", Offset = "0x16B5120", VA = "0x16B5120")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x16B513C", Offset = "0x16B513C", VA = "0x16B513C")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x16B5158", Offset = "0x16B5158", VA = "0x16B5158")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x16B5174", Offset = "0x16B5174", VA = "0x16B5174")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x16B5190", Offset = "0x16B5190", VA = "0x16B5190")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x16B51AC", Offset = "0x16B51AC", VA = "0x16B51AC")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x16B51C8", Offset = "0x16B51C8", VA = "0x16B51C8")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x16B51E4", Offset = "0x16B51E4", VA = "0x16B51E4")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x16B5200", Offset = "0x16B5200", VA = "0x16B5200")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x16B521C", Offset = "0x16B521C", VA = "0x16B521C")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x16B5238", Offset = "0x16B5238", VA = "0x16B5238")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x16B5254", Offset = "0x16B5254", VA = "0x16B5254")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x16B52E8", Offset = "0x16B52E8", VA = "0x16B52E8")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x16B56D8", Offset = "0x16B56D8", VA = "0x16B56D8")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x16B56F4", Offset = "0x16B56F4", VA = "0x16B56F4")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x16B5788", Offset = "0x16B5788", VA = "0x16B5788")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x16B57A4", Offset = "0x16B57A4", VA = "0x16B57A4")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x16B5BD8", Offset = "0x16B5BD8", VA = "0x16B5BD8")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x16B6084", Offset = "0x16B6084", VA = "0x16B6084")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x16B60A0", Offset = "0x16B60A0", VA = "0x16B60A0")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x16B6134", Offset = "0x16B6134", VA = "0x16B6134")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x16B61C8", Offset = "0x16B61C8", VA = "0x16B61C8")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x16B61E4", Offset = "0x16B61E4", VA = "0x16B61E4")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x16B6200", Offset = "0x16B6200", VA = "0x16B6200")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x16B621C", Offset = "0x16B621C", VA = "0x16B621C")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x16B6238", Offset = "0x16B6238", VA = "0x16B6238")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x16B6254", Offset = "0x16B6254", VA = "0x16B6254")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x16B6270", Offset = "0x16B6270", VA = "0x16B6270")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x16B628C", Offset = "0x16B628C", VA = "0x16B628C")]
		public uint GetAppContainerFilePaths(StringBuilder pchBuffer, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x16B62A8", Offset = "0x16B62A8", VA = "0x16B62A8")]
		public string GetRuntimeVersion()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FF")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xDF7A98", Offset = "0xDF7A98", VA = "0xDF7A98")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xDF7BA0", Offset = "0xDF7BA0", VA = "0xDF7BA0")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xDF7BCC", Offset = "0xDF7BCC", VA = "0xDF7BCC")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xDF7BF8", Offset = "0xDF7BF8", VA = "0xDF7BF8")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x16B668C", Offset = "0x16B668C", VA = "0x16B668C")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x16B6794", Offset = "0x16B6794", VA = "0x16B6794")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x16B6828", Offset = "0x16B6828", VA = "0x16B6828")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x16B6848", Offset = "0x16B6848", VA = "0x16B6848")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x16B6870", Offset = "0x16B6870", VA = "0x16B6870")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x16B688C", Offset = "0x16B688C", VA = "0x16B688C")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, uint nCameraIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x16B68A8", Offset = "0x16B68A8", VA = "0x16B68A8")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x16B68C8", Offset = "0x16B68C8", VA = "0x16B68C8")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x16B68E4", Offset = "0x16B68E4", VA = "0x16B68E4")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x16B6900", Offset = "0x16B6900", VA = "0x16B6900")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x16B6924", Offset = "0x16B6924", VA = "0x16B6924")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x16B6940", Offset = "0x16B6940", VA = "0x16B6940")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x16B6960", Offset = "0x16B6960", VA = "0x16B6960")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x2000301")]
	public class CVRApplications
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xDF657C", Offset = "0xDF657C", VA = "0xDF657C")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xDF6684", Offset = "0xDF6684", VA = "0xDF6684")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xDF66A4", Offset = "0xDF66A4", VA = "0xDF66A4")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xDF66C0", Offset = "0xDF66C0", VA = "0xDF66C0")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xDF66DC", Offset = "0xDF66DC", VA = "0xDF66DC")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xDF66F8", Offset = "0xDF66F8", VA = "0xDF66F8")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xDF6714", Offset = "0xDF6714", VA = "0xDF6714")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xDF6730", Offset = "0xDF6730", VA = "0xDF6730")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xDF674C", Offset = "0xDF674C", VA = "0xDF674C")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xDF6774", Offset = "0xDF6774", VA = "0xDF6774")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xDF6790", Offset = "0xDF6790", VA = "0xDF6790")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xDF67AC", Offset = "0xDF67AC", VA = "0xDF67AC")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xDF67C8", Offset = "0xDF67C8", VA = "0xDF67C8")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xDF67E4", Offset = "0xDF67E4", VA = "0xDF67E4")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xDF6800", Offset = "0xDF6800", VA = "0xDF6800")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xDF6894", Offset = "0xDF6894", VA = "0xDF6894")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xDF68B0", Offset = "0xDF68B0", VA = "0xDF68B0")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xDF68CC", Offset = "0xDF68CC", VA = "0xDF68CC")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xDF68E8", Offset = "0xDF68E8", VA = "0xDF68E8")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xDF6908", Offset = "0xDF6908", VA = "0xDF6908")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xDF6924", Offset = "0xDF6924", VA = "0xDF6924")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xDF6940", Offset = "0xDF6940", VA = "0xDF6940")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xDF695C", Offset = "0xDF695C", VA = "0xDF695C")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xDF6978", Offset = "0xDF6978", VA = "0xDF6978")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xDF6994", Offset = "0xDF6994", VA = "0xDF6994")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xDF69B0", Offset = "0xDF69B0", VA = "0xDF69B0")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xDF69CC", Offset = "0xDF69CC", VA = "0xDF69CC")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xDF69E8", Offset = "0xDF69E8", VA = "0xDF69E8")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xDF6A04", Offset = "0xDF6A04", VA = "0xDF6A04")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xDF6A98", Offset = "0xDF6A98", VA = "0xDF6A98")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xDF6AB4", Offset = "0xDF6AB4", VA = "0xDF6AB4")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xDF6AD0", Offset = "0xDF6AD0", VA = "0xDF6AD0")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000302")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xDF6AEC", Offset = "0xDF6AEC", VA = "0xDF6AEC")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xDF6BF4", Offset = "0xDF6BF4", VA = "0xDF6BF4")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xDF6C10", Offset = "0xDF6C10", VA = "0xDF6C10")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xDF6C34", Offset = "0xDF6C34", VA = "0xDF6C34")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xDF6C50", Offset = "0xDF6C50", VA = "0xDF6C50")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xDF6C6C", Offset = "0xDF6C6C", VA = "0xDF6C6C")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xDF6C88", Offset = "0xDF6C88", VA = "0xDF6C88")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xDF6CA4", Offset = "0xDF6CA4", VA = "0xDF6CA4")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xDF6CC0", Offset = "0xDF6CC0", VA = "0xDF6CC0")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xDF6CE0", Offset = "0xDF6CE0", VA = "0xDF6CE0")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xDF6DE8", Offset = "0xDF6DE8", VA = "0xDF6DE8")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xDF6E04", Offset = "0xDF6E04", VA = "0xDF6E04")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xDF6E20", Offset = "0xDF6E20", VA = "0xDF6E20")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xDF6E44", Offset = "0xDF6E44", VA = "0xDF6E44")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xDF6E60", Offset = "0xDF6E60", VA = "0xDF6E60")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xDF6F00", Offset = "0xDF6F00", VA = "0xDF6F00")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xDF6FA0", Offset = "0xDF6FA0", VA = "0xDF6FA0")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xDF6FBC", Offset = "0xDF6FBC", VA = "0xDF6FBC")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xDF6FD8", Offset = "0xDF6FD8", VA = "0xDF6FD8")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xDF6FF4", Offset = "0xDF6FF4", VA = "0xDF6FF4")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xDF701C", Offset = "0xDF701C", VA = "0xDF701C")]
		public void SetWorkingPerimeter(HmdVector2_t[] pPointBuffer)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xDF7044", Offset = "0xDF7044", VA = "0xDF7044")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xDF7060", Offset = "0xDF7060", VA = "0xDF7060")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xDF707C", Offset = "0xDF707C", VA = "0xDF707C")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xDF7098", Offset = "0xDF7098", VA = "0xDF7098")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xDF70B4", Offset = "0xDF70B4", VA = "0xDF70B4")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xDF70D4", Offset = "0xDF70D4", VA = "0xDF70D4")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xDF70F0", Offset = "0xDF70F0", VA = "0xDF70F0")]
		public void ShowWorkingSetPreview()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xDF710C", Offset = "0xDF710C", VA = "0xDF710C")]
		public void HideWorkingSetPreview()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xDF7128", Offset = "0xDF7128", VA = "0xDF7128")]
		public void RoomSetupStarting()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xDF7144", Offset = "0xDF7144", VA = "0xDF7144")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xDF724C", Offset = "0xDF724C", VA = "0xDF724C")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xDF7268", Offset = "0xDF7268", VA = "0xDF7268")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xDF7284", Offset = "0xDF7284", VA = "0xDF7284")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xDF72B8", Offset = "0xDF72B8", VA = "0xDF72B8")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xDF72EC", Offset = "0xDF72EC", VA = "0xDF72EC")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xDF7308", Offset = "0xDF7308", VA = "0xDF7308")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xDF7324", Offset = "0xDF7324", VA = "0xDF7324")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xDF7340", Offset = "0xDF7340", VA = "0xDF7340")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xDF735C", Offset = "0xDF735C", VA = "0xDF735C")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xDF7378", Offset = "0xDF7378", VA = "0xDF7378")]
		public uint GetFrameTimings(Compositor_FrameTiming[] pTiming)
		{
			return default(uint);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xDF73A0", Offset = "0xDF73A0", VA = "0xDF73A0")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xDF73BC", Offset = "0xDF73BC", VA = "0xDF73BC")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xDF73D8", Offset = "0xDF73D8", VA = "0xDF73D8")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xDF73F8", Offset = "0xDF73F8", VA = "0xDF73F8")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xDF7418", Offset = "0xDF7418", VA = "0xDF7418")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xDF7438", Offset = "0xDF7438", VA = "0xDF7438")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xDF7454", Offset = "0xDF7454", VA = "0xDF7454")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xDF747C", Offset = "0xDF747C", VA = "0xDF747C")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xDF7498", Offset = "0xDF7498", VA = "0xDF7498")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xDF74B4", Offset = "0xDF74B4", VA = "0xDF74B4")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xDF74D0", Offset = "0xDF74D0", VA = "0xDF74D0")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xDF74EC", Offset = "0xDF74EC", VA = "0xDF74EC")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xDF7508", Offset = "0xDF7508", VA = "0xDF7508")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xDF7524", Offset = "0xDF7524", VA = "0xDF7524")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xDF7540", Offset = "0xDF7540", VA = "0xDF7540")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xDF755C", Offset = "0xDF755C", VA = "0xDF755C")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xDF7578", Offset = "0xDF7578", VA = "0xDF7578")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xDF7594", Offset = "0xDF7594", VA = "0xDF7594")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xDF75B0", Offset = "0xDF75B0", VA = "0xDF75B0")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xDF75CC", Offset = "0xDF75CC", VA = "0xDF75CC")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xDF75E8", Offset = "0xDF75E8", VA = "0xDF75E8")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xDF7608", Offset = "0xDF7608", VA = "0xDF7608")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xDF7624", Offset = "0xDF7624", VA = "0xDF7624")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xDF7644", Offset = "0xDF7644", VA = "0xDF7644")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xDF7660", Offset = "0xDF7660", VA = "0xDF7660")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xDF767C", Offset = "0xDF767C", VA = "0xDF767C")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xDF769C", Offset = "0xDF769C", VA = "0xDF769C")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xDF76B8", Offset = "0xDF76B8", VA = "0xDF76B8")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xDF76D4", Offset = "0xDF76D4", VA = "0xDF76D4")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xDF76F0", Offset = "0xDF76F0", VA = "0xDF76F0")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xDF770C", Offset = "0xDF770C", VA = "0xDF770C")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xDF7728", Offset = "0xDF7728", VA = "0xDF7728")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xDF7744", Offset = "0xDF7744", VA = "0xDF7744")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xDF7760", Offset = "0xDF7760", VA = "0xDF7760")]
		public bool IsMotionSmoothingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xDF777C", Offset = "0xDF777C", VA = "0xDF777C")]
		public bool IsMotionSmoothingSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xDF7798", Offset = "0xDF7798", VA = "0xDF7798")]
		public bool IsCurrentSceneFocusAppLoading()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000305")]
	public class CVROverlay
	{
		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE81CC", Offset = "0xAE81CC")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000768")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x16B2BF8", Offset = "0x16B2BF8", VA = "0x16B2BF8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x16B2D00", Offset = "0x16B2D00", VA = "0x16B2D00")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x16B2D20", Offset = "0x16B2D20", VA = "0x16B2D20")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x16B2D40", Offset = "0x16B2D40", VA = "0x16B2D40")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x16B2D5C", Offset = "0x16B2D5C", VA = "0x16B2D5C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x16B2D78", Offset = "0x16B2D78", VA = "0x16B2D78")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x16B2D94", Offset = "0x16B2D94", VA = "0x16B2D94")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x16B2DB0", Offset = "0x16B2DB0", VA = "0x16B2DB0")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x16B2DCC", Offset = "0x16B2DCC", VA = "0x16B2DCC")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x16B2DE8", Offset = "0x16B2DE8", VA = "0x16B2DE8")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x16B2E0C", Offset = "0x16B2E0C", VA = "0x16B2E0C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x16B2EA0", Offset = "0x16B2EA0", VA = "0x16B2EA0")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x16B2EBC", Offset = "0x16B2EBC", VA = "0x16B2EBC")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x16B2ED8", Offset = "0x16B2ED8", VA = "0x16B2ED8")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x16B2EF8", Offset = "0x16B2EF8", VA = "0x16B2EF8")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x16B2F18", Offset = "0x16B2F18", VA = "0x16B2F18")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x16B2F34", Offset = "0x16B2F34", VA = "0x16B2F34")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x16B2F5C", Offset = "0x16B2F5C", VA = "0x16B2F5C")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x16B2F78", Offset = "0x16B2F78", VA = "0x16B2F78")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x16B2F98", Offset = "0x16B2F98", VA = "0x16B2F98")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x16B2FB4", Offset = "0x16B2FB4", VA = "0x16B2FB4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x16B2FD4", Offset = "0x16B2FD4", VA = "0x16B2FD4")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x16B2FF0", Offset = "0x16B2FF0", VA = "0x16B2FF0")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x16B3010", Offset = "0x16B3010", VA = "0x16B3010")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x16B302C", Offset = "0x16B302C", VA = "0x16B302C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x16B304C", Offset = "0x16B304C", VA = "0x16B304C")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x16B3068", Offset = "0x16B3068", VA = "0x16B3068")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x16B308C", Offset = "0x16B308C", VA = "0x16B308C")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x16B30A8", Offset = "0x16B30A8", VA = "0x16B30A8")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x16B30C4", Offset = "0x16B30C4", VA = "0x16B30C4")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x16B30E0", Offset = "0x16B30E0", VA = "0x16B30E0")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x16B30FC", Offset = "0x16B30FC", VA = "0x16B30FC")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x16B3118", Offset = "0x16B3118", VA = "0x16B3118")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x16B3134", Offset = "0x16B3134", VA = "0x16B3134")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x16B3150", Offset = "0x16B3150", VA = "0x16B3150")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x16B316C", Offset = "0x16B316C", VA = "0x16B316C")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x16B3188", Offset = "0x16B3188", VA = "0x16B3188")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x16B31A4", Offset = "0x16B31A4", VA = "0x16B31A4")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x16B31C4", Offset = "0x16B31C4", VA = "0x16B31C4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x16B31E0", Offset = "0x16B31E0", VA = "0x16B31E0")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x16B3200", Offset = "0x16B3200", VA = "0x16B3200")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x16B3220", Offset = "0x16B3220", VA = "0x16B3220")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x16B323C", Offset = "0x16B323C", VA = "0x16B323C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x16B3258", Offset = "0x16B3258", VA = "0x16B3258")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x16B3274", Offset = "0x16B3274", VA = "0x16B3274")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x16B3290", Offset = "0x16B3290", VA = "0x16B3290")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x16B32AC", Offset = "0x16B32AC", VA = "0x16B32AC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x16B36D0", Offset = "0x16B36D0", VA = "0x16B36D0")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x16B36EC", Offset = "0x16B36EC", VA = "0x16B36EC")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x16B3708", Offset = "0x16B3708", VA = "0x16B3708")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x16B3724", Offset = "0x16B3724", VA = "0x16B3724")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x16B3740", Offset = "0x16B3740", VA = "0x16B3740")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x16B375C", Offset = "0x16B375C", VA = "0x16B375C")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x16B3778", Offset = "0x16B3778", VA = "0x16B3778")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x16B3794", Offset = "0x16B3794", VA = "0x16B3794")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x16B37B0", Offset = "0x16B37B0", VA = "0x16B37B0")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x16B37CC", Offset = "0x16B37CC", VA = "0x16B37CC")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x16B37E8", Offset = "0x16B37E8", VA = "0x16B37E8")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x16B3804", Offset = "0x16B3804", VA = "0x16B3804")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x16B3824", Offset = "0x16B3824", VA = "0x16B3824")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x16B3840", Offset = "0x16B3840", VA = "0x16B3840")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x16B385C", Offset = "0x16B385C", VA = "0x16B385C")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x16B3878", Offset = "0x16B3878", VA = "0x16B3878")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x16B3894", Offset = "0x16B3894", VA = "0x16B3894")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x16B38C8", Offset = "0x16B38C8", VA = "0x16B38C8")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x16B38E4", Offset = "0x16B38E4", VA = "0x16B38E4")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x16B3908", Offset = "0x16B3908", VA = "0x16B3908")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x16B392C", Offset = "0x16B392C", VA = "0x16B392C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x16B3948", Offset = "0x16B3948", VA = "0x16B3948")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x16B3964", Offset = "0x16B3964", VA = "0x16B3964")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x16B3980", Offset = "0x16B3980", VA = "0x16B3980")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x16B39A0", Offset = "0x16B39A0", VA = "0x16B39A0")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x16B39BC", Offset = "0x16B39BC", VA = "0x16B39BC")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x16B39D8", Offset = "0x16B39D8", VA = "0x16B39D8")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x16B39FC", Offset = "0x16B39FC", VA = "0x16B39FC")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x16B3A24", Offset = "0x16B3A24", VA = "0x16B3A24")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x16B3A40", Offset = "0x16B3A40", VA = "0x16B3A40")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x16B3A5C", Offset = "0x16B3A5C", VA = "0x16B3A5C")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x16B3A78", Offset = "0x16B3A78", VA = "0x16B3A78")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x16B3A94", Offset = "0x16B3A94", VA = "0x16B3A94")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x16B3AB0", Offset = "0x16B3AB0", VA = "0x16B3AB0")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x16B3AD0", Offset = "0x16B3AD0", VA = "0x16B3AD0")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x16B3AEC", Offset = "0x16B3AEC", VA = "0x16B3AEC")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAE81E0", Offset = "0xAE81E0")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200076A")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x16B3C24", Offset = "0x16B3C24", VA = "0x16B3C24")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x16B3D2C", Offset = "0x16B3D2C", VA = "0x16B3D2C")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x16B3D48", Offset = "0x16B3D48", VA = "0x16B3D48")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x16B3D64", Offset = "0x16B3D64", VA = "0x16B3D64")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x16B3D80", Offset = "0x16B3D80", VA = "0x16B3D80")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x16B3D9C", Offset = "0x16B3D9C", VA = "0x16B3D9C")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x16B3DB8", Offset = "0x16B3DB8", VA = "0x16B3DB8")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x16B3DD4", Offset = "0x16B3DD4", VA = "0x16B3DD4")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x16B3DF0", Offset = "0x16B3DF0", VA = "0x16B3DF0")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x16B3E0C", Offset = "0x16B3E0C", VA = "0x16B3E0C")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x16B3E28", Offset = "0x16B3E28", VA = "0x16B3E28")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x16B3E44", Offset = "0x16B3E44", VA = "0x16B3E44")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x16B3E60", Offset = "0x16B3E60", VA = "0x16B3E60")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x16B3E7C", Offset = "0x16B3E7C", VA = "0x16B3E7C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x16B3E98", Offset = "0x16B3E98", VA = "0x16B3E98")]
		public bool GetComponentStateForDevicePath(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x16B3EB4", Offset = "0x16B3EB4", VA = "0x16B3EB4")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x16B4440", Offset = "0x16B4440", VA = "0x16B4440")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x16B445C", Offset = "0x16B445C", VA = "0x16B445C")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x16B4478", Offset = "0x16B4478", VA = "0x16B4478")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x16B4494", Offset = "0x16B4494", VA = "0x16B4494")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000307")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x16B2AB8", Offset = "0x16B2AB8", VA = "0x16B2AB8")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x16B2BB8", Offset = "0x16B2BB8", VA = "0x16B2BB8")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x16B2BDC", Offset = "0x16B2BDC", VA = "0x16B2BDC")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000308")]
	public class CVRSettings
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x16B4984", Offset = "0x16B4984", VA = "0x16B4984")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x16B4A8C", Offset = "0x16B4A8C", VA = "0x16B4A8C")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x16B4B20", Offset = "0x16B4B20", VA = "0x16B4B20")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x16B4B40", Offset = "0x16B4B40", VA = "0x16B4B40")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x16B4B60", Offset = "0x16B4B60", VA = "0x16B4B60")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x16B4B7C", Offset = "0x16B4B7C", VA = "0x16B4B7C")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x16B4B98", Offset = "0x16B4B98", VA = "0x16B4B98")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x16B4BB4", Offset = "0x16B4BB4", VA = "0x16B4BB4")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x16B4BD0", Offset = "0x16B4BD0", VA = "0x16B4BD0")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x16B4BEC", Offset = "0x16B4BEC", VA = "0x16B4BEC")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x16B4C08", Offset = "0x16B4C08", VA = "0x16B4C08")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x16B4C24", Offset = "0x16B4C24", VA = "0x16B4C24")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x16B4C40", Offset = "0x16B4C40", VA = "0x16B4C40")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class CVRScreenshots
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x16B479C", Offset = "0x16B479C", VA = "0x16B479C")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x16B48AC", Offset = "0x16B48AC", VA = "0x16B48AC")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x16B48CC", Offset = "0x16B48CC", VA = "0x16B48CC")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x16B48F4", Offset = "0x16B48F4", VA = "0x16B48F4")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x16B4910", Offset = "0x16B4910", VA = "0x16B4910")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x16B492C", Offset = "0x16B492C", VA = "0x16B492C")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x16B4948", Offset = "0x16B4948", VA = "0x16B4948")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x16B4968", Offset = "0x16B4968", VA = "0x16B4968")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x200030A")]
	public class CVRResources
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x16B4664", Offset = "0x16B4664", VA = "0x16B4664")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x16B4764", Offset = "0x16B4764", VA = "0x16B4764")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x16B4780", Offset = "0x16B4780", VA = "0x16B4780")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200030B")]
	public class CVRDriverManager
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xDF7928", Offset = "0xDF7928", VA = "0xDF7928")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xDF7A28", Offset = "0xDF7A28", VA = "0xDF7A28")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xDF7A44", Offset = "0xDF7A44", VA = "0xDF7A44")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xDF7A60", Offset = "0xDF7A60", VA = "0xDF7A60")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xDF7A7C", Offset = "0xDF7A7C", VA = "0xDF7A7C")]
		public bool IsEnabled(uint nDriver)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030C")]
	public class CVRInput
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRInput FnTable;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xDF7DD4", Offset = "0xDF7DD4", VA = "0xDF7DD4")]
		internal CVRInput(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xDF7EDC", Offset = "0xDF7EDC", VA = "0xDF7EDC")]
		public EVRInputError SetActionManifestPath(string pchActionManifestPath)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xDF7EF8", Offset = "0xDF7EF8", VA = "0xDF7EF8")]
		public EVRInputError GetActionSetHandle(string pchActionSetName, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xDF7F18", Offset = "0xDF7F18", VA = "0xDF7F18")]
		public EVRInputError GetActionHandle(string pchActionName, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xDF7F38", Offset = "0xDF7F38", VA = "0xDF7F38")]
		public EVRInputError GetInputSourceHandle(string pchInputSourcePath, ref ulong pHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xDF7F58", Offset = "0xDF7F58", VA = "0xDF7F58")]
		public EVRInputError UpdateActionState(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xDF7F80", Offset = "0xDF7F80", VA = "0xDF7F80")]
		public EVRInputError GetDigitalActionData(ulong action, ref InputDigitalActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xDF7F9C", Offset = "0xDF7F9C", VA = "0xDF7F9C")]
		public EVRInputError GetAnalogActionData(ulong action, ref InputAnalogActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xDF7FB8", Offset = "0xDF7FB8", VA = "0xDF7FB8")]
		public EVRInputError GetPoseActionDataRelativeToNow(ulong action, ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xDF7FD4", Offset = "0xDF7FD4", VA = "0xDF7FD4")]
		public EVRInputError GetPoseActionDataForNextFrame(ulong action, ETrackingUniverseOrigin eOrigin, ref InputPoseActionData_t pActionData, uint unActionDataSize, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xDF7FF0", Offset = "0xDF7FF0", VA = "0xDF7FF0")]
		public EVRInputError GetSkeletalActionData(ulong action, ref InputSkeletalActionData_t pActionData, uint unActionDataSize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xDF800C", Offset = "0xDF800C", VA = "0xDF800C")]
		public EVRInputError GetBoneCount(ulong action, ref uint pBoneCount)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xDF802C", Offset = "0xDF802C", VA = "0xDF802C")]
		public EVRInputError GetBoneHierarchy(ulong action, int[] pParentIndices)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xDF8054", Offset = "0xDF8054", VA = "0xDF8054")]
		public EVRInputError GetBoneName(ulong action, int nBoneIndex, StringBuilder pchBoneName, uint unNameBufferSize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xDF8070", Offset = "0xDF8070", VA = "0xDF8070")]
		public EVRInputError GetSkeletalReferenceTransforms(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalReferencePose eReferencePose, VRBoneTransform_t[] pTransformArray)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xDF8098", Offset = "0xDF8098", VA = "0xDF8098")]
		public EVRInputError GetSkeletalTrackingLevel(ulong action, ref EVRSkeletalTrackingLevel pSkeletalTrackingLevel)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xDF80B4", Offset = "0xDF80B4", VA = "0xDF80B4")]
		public EVRInputError GetSkeletalBoneData(ulong action, EVRSkeletalTransformSpace eTransformSpace, EVRSkeletalMotionRange eMotionRange, VRBoneTransform_t[] pTransformArray)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xDF80DC", Offset = "0xDF80DC", VA = "0xDF80DC")]
		public EVRInputError GetSkeletalSummaryData(ulong action, EVRSummaryType eSummaryType, ref VRSkeletalSummaryData_t pSkeletalSummaryData)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xDF80F8", Offset = "0xDF80F8", VA = "0xDF80F8")]
		public EVRInputError GetSkeletalBoneDataCompressed(ulong action, EVRSkeletalMotionRange eMotionRange, IntPtr pvCompressedData, uint unCompressedSize, ref uint punRequiredCompressedSize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xDF8118", Offset = "0xDF8118", VA = "0xDF8118")]
		public EVRInputError DecompressSkeletalBoneData(IntPtr pvCompressedBuffer, uint unCompressedBufferSize, EVRSkeletalTransformSpace eTransformSpace, VRBoneTransform_t[] pTransformArray)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xDF8140", Offset = "0xDF8140", VA = "0xDF8140")]
		public EVRInputError TriggerHapticVibrationAction(ulong action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, ulong ulRestrictToDevice)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xDF815C", Offset = "0xDF815C", VA = "0xDF815C")]
		public EVRInputError GetActionOrigins(ulong actionSetHandle, ulong digitalActionHandle, ulong[] originsOut)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xDF8184", Offset = "0xDF8184", VA = "0xDF8184")]
		public EVRInputError GetOriginLocalizedName(ulong origin, StringBuilder pchNameArray, uint unNameArraySize, int unStringSectionsToInclude)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xDF81A0", Offset = "0xDF81A0", VA = "0xDF81A0")]
		public EVRInputError GetOriginTrackedDeviceInfo(ulong origin, ref InputOriginInfo_t pOriginInfo, uint unOriginInfoSize)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xDF81BC", Offset = "0xDF81BC", VA = "0xDF81BC")]
		public EVRInputError GetActionBindingInfo(ulong action, ref InputBindingInfo_t pOriginInfo, uint unBindingInfoSize, uint unBindingInfoCount, ref uint punReturnedBindingInfoCount)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xDF81DC", Offset = "0xDF81DC", VA = "0xDF81DC")]
		public EVRInputError ShowActionOrigins(ulong actionSetHandle, ulong ulActionHandle)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xDF81F8", Offset = "0xDF81F8", VA = "0xDF81F8")]
		public EVRInputError ShowBindingsForActionSet(VRActiveActionSet_t[] pSets, uint unSizeOfVRSelectedActionSet_t, ulong originToHighlight)
		{
			return default(EVRInputError);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xDF8224", Offset = "0xDF8224", VA = "0xDF8224")]
		public bool IsUsingLegacyInput()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030D")]
	public class CVRIOBuffer
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRIOBuffer FnTable;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xDF7C1C", Offset = "0xDF7C1C", VA = "0xDF7C1C")]
		internal CVRIOBuffer(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xDF7D24", Offset = "0xDF7D24", VA = "0xDF7D24")]
		public EIOBufferError Open(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xDF7D44", Offset = "0xDF7D44", VA = "0xDF7D44")]
		public EIOBufferError Close(ulong ulBuffer)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xDF7D60", Offset = "0xDF7D60", VA = "0xDF7D60")]
		public EIOBufferError Read(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xDF7D80", Offset = "0xDF7D80", VA = "0xDF7D80")]
		public EIOBufferError Write(ulong ulBuffer, IntPtr pSrc, uint unBytes)
		{
			return default(EIOBufferError);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xDF7D9C", Offset = "0xDF7D9C", VA = "0xDF7D9C")]
		public ulong PropertyContainer(ulong ulBuffer)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xDF7DB8", Offset = "0xDF7DB8", VA = "0xDF7DB8")]
		public bool HasReaders(ulong ulBuffer)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030E")]
	public class CVRSpatialAnchors
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSpatialAnchors FnTable;

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x16B4C5C", Offset = "0x16B4C5C", VA = "0x16B4C5C")]
		internal CVRSpatialAnchors(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x16B4D5C", Offset = "0x16B4D5C", VA = "0x16B4D5C")]
		public EVRSpatialAnchorError CreateSpatialAnchorFromDescriptor(string pchDescriptor, ref uint pHandleOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x16B4D7C", Offset = "0x16B4D7C", VA = "0x16B4D7C")]
		public EVRSpatialAnchorError CreateSpatialAnchorFromPose(uint unDeviceIndex, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPose, ref uint pHandleOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x16B4D9C", Offset = "0x16B4D9C", VA = "0x16B4D9C")]
		public EVRSpatialAnchorError GetSpatialAnchorPose(uint unHandle, ETrackingUniverseOrigin eOrigin, ref SpatialAnchorPose_t pPoseOut)
		{
			return default(EVRSpatialAnchorError);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x16B4DB8", Offset = "0x16B4DB8", VA = "0x16B4DB8")]
		public EVRSpatialAnchorError GetSpatialAnchorDescriptor(uint unHandle, StringBuilder pchDescriptorOut, ref uint punDescriptorBufferLenInOut)
		{
			return default(EVRSpatialAnchorError);
		}
	}
	[Token(Token = "0x200030F")]
	public class CVRDebug
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDebug FnTable;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xDF77B4", Offset = "0xDF77B4", VA = "0xDF77B4")]
		internal CVRDebug(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xDF78B4", Offset = "0xDF78B4", VA = "0xDF78B4")]
		public EVRDebugError EmitVrProfilerEvent(string pchMessage)
		{
			return default(EVRDebugError);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xDF78D0", Offset = "0xDF78D0", VA = "0xDF78D0")]
		public EVRDebugError BeginVrProfilerEvent(ref ulong pHandleOut)
		{
			return default(EVRDebugError);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xDF78F0", Offset = "0xDF78F0", VA = "0xDF78F0")]
		public EVRDebugError FinishVrProfilerEvent(ulong hHandle, string pchMessage)
		{
			return default(EVRDebugError);
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xDF790C", Offset = "0xDF790C", VA = "0xDF790C")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000310")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xD89940", Offset = "0xD89940", VA = "0xD89940")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD899D4", Offset = "0xD899D4", VA = "0xD899D4")]
		internal static extern uint InitInternal2(ref EVRInitError peError, EVRApplicationType eApplicationType, [In] string pStartupInfo);

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD89A8C", Offset = "0xD89A8C", VA = "0xD89A8C")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD89B00", Offset = "0xD89B00", VA = "0xD89B00")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD89B80", Offset = "0xD89B80", VA = "0xD89B80")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD89C00", Offset = "0xD89C00", VA = "0xD89C00")]
		internal static extern string RuntimePath();

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD89D04", Offset = "0xD89D04", VA = "0xD89D04")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD89D88", Offset = "0xD89D88", VA = "0xD89D88")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD89E34", Offset = "0xD89E34", VA = "0xD89E34")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD89ED4", Offset = "0xD89ED4", VA = "0xD89ED4")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xD8B764", Offset = "0xD8B764", VA = "0xD8B764")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public enum EVREye
	{
		[Token(Token = "0x4001613")]
		Eye_Left,
		[Token(Token = "0x4001614")]
		Eye_Right
	}
	[Token(Token = "0x2000312")]
	public enum ETextureType
	{
		[Token(Token = "0x4001616")]
		Invalid = -1,
		[Token(Token = "0x4001617")]
		DirectX,
		[Token(Token = "0x4001618")]
		OpenGL,
		[Token(Token = "0x4001619")]
		Vulkan,
		[Token(Token = "0x400161A")]
		IOSurface,
		[Token(Token = "0x400161B")]
		DirectX12,
		[Token(Token = "0x400161C")]
		DXGISharedHandle,
		[Token(Token = "0x400161D")]
		Metal
	}
	[Token(Token = "0x2000313")]
	public enum EColorSpace
	{
		[Token(Token = "0x400161F")]
		Auto,
		[Token(Token = "0x4001620")]
		Gamma,
		[Token(Token = "0x4001621")]
		Linear
	}
	[Token(Token = "0x2000314")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001623")]
		Uninitialized = 1,
		[Token(Token = "0x4001624")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001625")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001626")]
		Running_OK = 200,
		[Token(Token = "0x4001627")]
		Running_OutOfRange = 201,
		[Token(Token = "0x4001628")]
		Fallback_RotationOnly = 300
	}
	[Token(Token = "0x2000315")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x400162A")]
		Invalid,
		[Token(Token = "0x400162B")]
		HMD,
		[Token(Token = "0x400162C")]
		Controller,
		[Token(Token = "0x400162D")]
		GenericTracker,
		[Token(Token = "0x400162E")]
		TrackingReference,
		[Token(Token = "0x400162F")]
		DisplayRedirect,
		[Token(Token = "0x4001630")]
		Max
	}
	[Token(Token = "0x2000316")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001632")]
		Invalid,
		[Token(Token = "0x4001633")]
		LeftHand,
		[Token(Token = "0x4001634")]
		RightHand,
		[Token(Token = "0x4001635")]
		OptOut,
		[Token(Token = "0x4001636")]
		Treadmill,
		[Token(Token = "0x4001637")]
		Max
	}
	[Token(Token = "0x2000317")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001639")]
		TrackingUniverseSeated,
		[Token(Token = "0x400163A")]
		TrackingUniverseStanding,
		[Token(Token = "0x400163B")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000318")]
	public enum EAdditionalRadioFeatures
	{
		[Token(Token = "0x400163D")]
		None = 0,
		[Token(Token = "0x400163E")]
		HTCLinkBox = 1,
		[Token(Token = "0x400163F")]
		InternalDongle = 2,
		[Token(Token = "0x4001640")]
		ExternalDongle = 4
	}
	[Token(Token = "0x2000319")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001642")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001643")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001644")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001645")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001646")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001647")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001648")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001649")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x400164A")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x400164B")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x400164C")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x400164D")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x400164E")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x400164F")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001650")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001651")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001652")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001653")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001654")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001655")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001656")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001657")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001658")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001659")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x400165A")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x400165B")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x400165C")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x400165D")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x400165E")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400165F")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001660")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001661")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001662")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001663")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001664")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001665")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001666")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001667")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001668")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001669")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x400166A")]
		Prop_NumCameras_Int32 = 1039,
		[Token(Token = "0x400166B")]
		Prop_CameraFrameLayout_Int32 = 1040,
		[Token(Token = "0x400166C")]
		Prop_CameraStreamFormat_Int32 = 1041,
		[Token(Token = "0x400166D")]
		Prop_AdditionalDeviceSettingsPath_String = 1042,
		[Token(Token = "0x400166E")]
		Prop_Identifiable_Bool = 1043,
		[Token(Token = "0x400166F")]
		Prop_BootloaderVersion_Uint64 = 1044,
		[Token(Token = "0x4001670")]
		Prop_AdditionalSystemReportData_String = 1045,
		[Token(Token = "0x4001671")]
		Prop_CompositeFirmwareVersion_String = 1046,
		[Token(Token = "0x4001672")]
		Prop_Firmware_RemindUpdate_Bool = 1047,
		[Token(Token = "0x4001673")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001674")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001675")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001676")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001677")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001678")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001679")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400167A")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400167B")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400167C")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400167D")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x400167E")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x400167F")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001680")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001681")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001682")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001683")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001684")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001685")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001686")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001687")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001688")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001689")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400168A")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400168B")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400168C")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400168D")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x400168E")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x400168F")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001690")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001691")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001692")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001693")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001694")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001695")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001696")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001697")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001698")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001699")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400169A")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400169B")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400169C")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400169D")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x400169E")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x400169F")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40016A0")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40016A1")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40016A2")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40016A3")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40016A4")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40016A5")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40016A6")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40016A7")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40016A8")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40016A9")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x40016AA")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40016AB")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40016AC")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40016AD")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x40016AE")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x40016AF")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x40016B0")]
		Prop_ImuToHeadTransform_Matrix34 = 2063,
		[Token(Token = "0x40016B1")]
		Prop_ImuFactoryGyroBias_Vector3 = 2064,
		[Token(Token = "0x40016B2")]
		Prop_ImuFactoryGyroScale_Vector3 = 2065,
		[Token(Token = "0x40016B3")]
		Prop_ImuFactoryAccelerometerBias_Vector3 = 2066,
		[Token(Token = "0x40016B4")]
		Prop_ImuFactoryAccelerometerScale_Vector3 = 2067,
		[Token(Token = "0x40016B5")]
		Prop_ConfigurationIncludesLighthouse20Features_Bool = 2069,
		[Token(Token = "0x40016B6")]
		Prop_AdditionalRadioFeatures_Uint64 = 2070,
		[Token(Token = "0x40016B7")]
		Prop_CameraWhiteBalance_Vector4_Array = 2071,
		[Token(Token = "0x40016B8")]
		Prop_CameraDistortionFunction_Int32_Array = 2072,
		[Token(Token = "0x40016B9")]
		Prop_CameraDistortionCoefficients_Float_Array = 2073,
		[Token(Token = "0x40016BA")]
		Prop_ExpectedControllerType_String = 2074,
		[Token(Token = "0x40016BB")]
		Prop_HmdTrackingStyle_Int32 = 2075,
		[Token(Token = "0x40016BC")]
		Prop_DriverProvidedChaperoneVisibility_Bool = 2076,
		[Token(Token = "0x40016BD")]
		Prop_DisplayAvailableFrameRates_Float_Array = 2080,
		[Token(Token = "0x40016BE")]
		Prop_DisplaySupportsMultipleFramerates_Bool = 2081,
		[Token(Token = "0x40016BF")]
		Prop_DisplayColorMultLeft_Vector3 = 2082,
		[Token(Token = "0x40016C0")]
		Prop_DisplayColorMultRight_Vector3 = 2083,
		[Token(Token = "0x40016C1")]
		Prop_DashboardLayoutPathName_String = 2090,
		[Token(Token = "0x40016C2")]
		Prop_DriverRequestedMuraCorrectionMode_Int32 = 2200,
		[Token(Token = "0x40016C3")]
		Prop_DriverRequestedMuraFeather_InnerLeft_Int32 = 2201,
		[Token(Token = "0x40016C4")]
		Prop_DriverRequestedMuraFeather_InnerRight_Int32 = 2202,
		[Token(Token = "0x40016C5")]
		Prop_DriverRequestedMuraFeather_InnerTop_Int32 = 2203,
		[Token(Token = "0x40016C6")]
		Prop_DriverRequestedMuraFeather_InnerBottom_Int32 = 2204,
		[Token(Token = "0x40016C7")]
		Prop_DriverRequestedMuraFeather_OuterLeft_Int32 = 2205,
		[Token(Token = "0x40016C8")]
		Prop_DriverRequestedMuraFeather_OuterRight_Int32 = 2206,
		[Token(Token = "0x40016C9")]
		Prop_DriverRequestedMuraFeather_OuterTop_Int32 = 2207,
		[Token(Token = "0x40016CA")]
		Prop_DriverRequestedMuraFeather_OuterBottom_Int32 = 2208,
		[Token(Token = "0x40016CB")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40016CC")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40016CD")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40016CE")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40016CF")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40016D0")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40016D1")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40016D2")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40016D3")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40016D4")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40016D5")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40016D6")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40016D7")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40016D8")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40016D9")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x40016DA")]
		Prop_CanWirelessIdentify_Bool = 4007,
		[Token(Token = "0x40016DB")]
		Prop_Nonce_Int32 = 4008,
		[Token(Token = "0x40016DC")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x40016DD")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x40016DE")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x40016DF")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x40016E0")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x40016E1")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x40016E2")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x40016E3")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x40016E4")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x40016E5")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x40016E6")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x40016E7")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x40016E8")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x40016E9")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x40016EA")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x40016EB")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x40016EC")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x40016ED")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x40016EE")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x40016EF")]
		Prop_HasSpatialAnchorsSupport_Bool = 6007,
		[Token(Token = "0x40016F0")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x40016F1")]
		Prop_ControllerHandSelectionPriority_Int32 = 7002,
		[Token(Token = "0x40016F2")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40016F3")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x40016F4")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x200031A")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x40016F6")]
		TrackedProp_Success,
		[Token(Token = "0x40016F7")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x40016F8")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x40016F9")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x40016FA")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x40016FB")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x40016FC")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x40016FD")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x40016FE")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x40016FF")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001700")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001701")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001702")]
		TrackedProp_CannotWriteToWildcards,
		[Token(Token = "0x4001703")]
		TrackedProp_IPCReadFailure
	}
	[Token(Token = "0x200031B")]
	public enum EHmdTrackingStyle
	{
		[Token(Token = "0x4001705")]
		Unknown,
		[Token(Token = "0x4001706")]
		Lighthouse,
		[Token(Token = "0x4001707")]
		OutsideInCameras,
		[Token(Token = "0x4001708")]
		InsideOutCameras
	}
	[Token(Token = "0x200031C")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x400170A")]
		Submit_Default = 0,
		[Token(Token = "0x400170B")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x400170C")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x400170D")]
		Submit_Reserved = 4,
		[Token(Token = "0x400170E")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x400170F")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x200031D")]
	public enum EVRState
	{
		[Token(Token = "0x4001711")]
		Undefined = -1,
		[Token(Token = "0x4001712")]
		Off,
		[Token(Token = "0x4001713")]
		Searching,
		[Token(Token = "0x4001714")]
		Searching_Alert,
		[Token(Token = "0x4001715")]
		Ready,
		[Token(Token = "0x4001716")]
		Ready_Alert,
		[Token(Token = "0x4001717")]
		NotReady,
		[Token(Token = "0x4001718")]
		Standby,
		[Token(Token = "0x4001719")]
		Ready_Alert_Low
	}
	[Token(Token = "0x200031E")]
	public enum EVREventType
	{
		[Token(Token = "0x400171B")]
		VREvent_None = 0,
		[Token(Token = "0x400171C")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x400171D")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x400171E")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x400171F")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001720")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001721")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001722")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001723")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001724")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001725")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001726")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001727")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001728")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001729")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x400172A")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x400172B")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x400172C")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x400172D")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x400172E")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x400172F")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001730")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001731")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001732")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001733")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001734")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001735")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001736")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001737")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001738")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001739")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x400173A")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x400173B")]
		VREvent_ScrollDiscrete = 305,
		[Token(Token = "0x400173C")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x400173D")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x400173E")]
		VREvent_ReloadOverlays = 308,
		[Token(Token = "0x400173F")]
		VREvent_ScrollSmooth = 309,
		[Token(Token = "0x4001740")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001741")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001742")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001743")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001744")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001745")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001746")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001747")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001748")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4001749")]
		VREvent_ActionBindingReloaded = 409,
		[Token(Token = "0x400174A")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x400174B")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x400174C")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x400174D")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x400174E")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x400174F")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001750")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001751")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001752")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001753")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001754")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001755")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001756")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001757")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001758")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001759")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x400175A")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x400175B")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x400175C")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x400175D")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x400175E")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x400175F")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001760")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001761")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001762")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001763")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001764")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001765")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001766")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001767")]
		VREvent_ShowUI = 528,
		[Token(Token = "0x4001768")]
		VREvent_ShowDevTools = 529,
		[Token(Token = "0x4001769")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x400176A")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x400176B")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x400176C")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x400176D")]
		VREvent_Quit = 700,
		[Token(Token = "0x400176E")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x400176F")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001770")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001771")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001772")]
		VREvent_RestartRequested = 705,
		[Token(Token = "0x4001773")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001774")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001775")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001776")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001777")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001778")]
		VREvent_ChaperoneFlushCache = 805,
		[Token(Token = "0x4001779")]
		VREvent_ChaperoneRoomSetupStarting = 806,
		[Token(Token = "0x400177A")]
		VREvent_ChaperoneRoomSetupFinished = 807,
		[Token(Token = "0x400177B")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x400177C")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x400177D")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x400177E")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x400177F")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001780")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001781")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001782")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001783")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001784")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001785")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001786")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001787")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001788")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001789")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x400178A")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x400178B")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x400178C")]
		VREvent_TrackersSectionSettingChanged = 866,
		[Token(Token = "0x400178D")]
		VREvent_LastKnownSectionSettingChanged = 867,
		[Token(Token = "0x400178E")]
		VREvent_DismissedWarningsSectionSettingChanged = 868,
		[Token(Token = "0x400178F")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001790")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001791")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001792")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001793")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001794")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001795")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001796")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001797")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001798")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001799")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x400179A")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x400179B")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x400179C")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x400179D")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x400179E")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x400179F")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40017A0")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40017A1")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40017A2")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40017A3")]
		VREvent_Compositor_DisplayDisconnected = 1412,
		[Token(Token = "0x40017A4")]
		VREvent_Compositor_DisplayReconnected = 1413,
		[Token(Token = "0x40017A5")]
		VREvent_Compositor_HDCPError = 1414,
		[Token(Token = "0x40017A6")]
		VREvent_Compositor_ApplicationNotResponding = 1415,
		[Token(Token = "0x40017A7")]
		VREvent_Compositor_ApplicationResumed = 1416,
		[Token(Token = "0x40017A8")]
		VREvent_Compositor_OutOfVideoMemory = 1417,
		[Token(Token = "0x40017A9")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40017AA")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40017AB")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40017AC")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x40017AD")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x40017AE")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x40017AF")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x40017B0")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x40017B1")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x40017B2")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x40017B3")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x40017B4")]
		VREvent_Input_BindingLoadFailed = 1701,
		[Token(Token = "0x40017B5")]
		VREvent_Input_BindingLoadSuccessful = 1702,
		[Token(Token = "0x40017B6")]
		VREvent_Input_ActionManifestReloaded = 1703,
		[Token(Token = "0x40017B7")]
		VREvent_Input_ActionManifestLoadFailed = 1704,
		[Token(Token = "0x40017B8")]
		VREvent_Input_ProgressUpdate = 1705,
		[Token(Token = "0x40017B9")]
		VREvent_Input_TrackerActivated = 1706,
		[Token(Token = "0x40017BA")]
		VREvent_Input_BindingsUpdated = 1707,
		[Token(Token = "0x40017BB")]
		VREvent_SpatialAnchors_PoseUpdated = 1800,
		[Token(Token = "0x40017BC")]
		VREvent_SpatialAnchors_DescriptorUpdated = 1801,
		[Token(Token = "0x40017BD")]
		VREvent_SpatialAnchors_RequestPoseUpdate = 1802,
		[Token(Token = "0x40017BE")]
		VREvent_SpatialAnchors_RequestDescriptorUpdate = 1803,
		[Token(Token = "0x40017BF")]
		VREvent_SystemReport_Started = 1900,
		[Token(Token = "0x40017C0")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40017C1")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x200031F")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x40017C3")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x40017C4")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x40017C5")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x40017C6")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x40017C7")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000320")]
	public enum EVRButtonId
	{
		[Token(Token = "0x40017C9")]
		k_EButton_System = 0,
		[Token(Token = "0x40017CA")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x40017CB")]
		k_EButton_Grip = 2,
		[Token(Token = "0x40017CC")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x40017CD")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x40017CE")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x40017CF")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x40017D0")]
		k_EButton_A = 7,
		[Token(Token = "0x40017D1")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x40017D2")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x40017D3")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x40017D4")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x40017D5")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x40017D6")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x40017D7")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x40017D8")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x40017D9")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x40017DA")]
		k_EButton_IndexController_A = 36,
		[Token(Token = "0x40017DB")]
		k_EButton_IndexController_B = 1,
		[Token(Token = "0x40017DC")]
		k_EButton_IndexController_JoyStick = 35,
		[Token(Token = "0x40017DD")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000321")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x40017DF")]
		Left = 1,
		[Token(Token = "0x40017E0")]
		Right = 2,
		[Token(Token = "0x40017E1")]
		Middle = 4
	}
	[Token(Token = "0x2000322")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x40017E3")]
		k_EDualAnalog_Left,
		[Token(Token = "0x40017E4")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000323")]
	public enum EShowUIType
	{
		[Token(Token = "0x40017E6")]
		ShowUI_ControllerBinding = 0,
		[Token(Token = "0x40017E7")]
		ShowUI_ManageTrackers = 1,
		[Token(Token = "0x40017E8")]
		ShowUI_Pairing = 3,
		[Token(Token = "0x40017E9")]
		ShowUI_Settings = 4,
		[Token(Token = "0x40017EA")]
		ShowUI_DebugCommands = 5
	}
	[Token(Token = "0x2000324")]
	public enum EHDCPError
	{
		[Token(Token = "0x40017EC")]
		None,
		[Token(Token = "0x40017ED")]
		LinkLost,
		[Token(Token = "0x40017EE")]
		Tampered,
		[Token(Token = "0x40017EF")]
		DeviceRevoked,
		[Token(Token = "0x40017F0")]
		Unknown
	}
	[Token(Token = "0x2000325")]
	public enum EVRInputError
	{
		[Token(Token = "0x40017F2")]
		None,
		[Token(Token = "0x40017F3")]
		NameNotFound,
		[Token(Token = "0x40017F4")]
		WrongType,
		[Token(Token = "0x40017F5")]
		InvalidHandle,
		[Token(Token = "0x40017F6")]
		InvalidParam,
		[Token(Token = "0x40017F7")]
		NoSteam,
		[Token(Token = "0x40017F8")]
		MaxCapacityReached,
		[Token(Token = "0x40017F9")]
		IPCError,
		[Token(Token = "0x40017FA")]
		NoActiveActionSet,
		[Token(Token = "0x40017FB")]
		InvalidDevice,
		[Token(Token = "0x40017FC")]
		InvalidSkeleton,
		[Token(Token = "0x40017FD")]
		InvalidBoneCount,
		[Token(Token = "0x40017FE")]
		InvalidCompressedData,
		[Token(Token = "0x40017FF")]
		NoData,
		[Token(Token = "0x4001800")]
		BufferTooSmall,
		[Token(Token = "0x4001801")]
		MismatchedActionManifest,
		[Token(Token = "0x4001802")]
		MissingSkeletonData,
		[Token(Token = "0x4001803")]
		InvalidBoneIndex
	}
	[Token(Token = "0x2000326")]
	public enum EVRSpatialAnchorError
	{
		[Token(Token = "0x4001805")]
		Success,
		[Token(Token = "0x4001806")]
		Internal,
		[Token(Token = "0x4001807")]
		UnknownHandle,
		[Token(Token = "0x4001808")]
		ArrayTooSmall,
		[Token(Token = "0x4001809")]
		InvalidDescriptorChar,
		[Token(Token = "0x400180A")]
		NotYetAvailable,
		[Token(Token = "0x400180B")]
		NotAvailableInThisUniverse,
		[Token(Token = "0x400180C")]
		PermanentlyUnavailable,
		[Token(Token = "0x400180D")]
		WrongDriver,
		[Token(Token = "0x400180E")]
		DescriptorTooLong,
		[Token(Token = "0x400180F")]
		Unknown,
		[Token(Token = "0x4001810")]
		NoRoomCalibration,
		[Token(Token = "0x4001811")]
		InvalidArgument,
		[Token(Token = "0x4001812")]
		UnknownDriver
	}
	[Token(Token = "0x2000327")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001814")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001815")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001816")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001817")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000328")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001819")]
		k_eControllerAxis_None,
		[Token(Token = "0x400181A")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x400181B")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x400181C")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000329")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x400181E")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x400181F")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200032A")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001821")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001822")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001823")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001824")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001825")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001826")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x200032B")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001828")]
		None = 0,
		[Token(Token = "0x4001829")]
		UnknownOverlay = 10,
		[Token(Token = "0x400182A")]
		InvalidHandle = 11,
		[Token(Token = "0x400182B")]
		PermissionDenied = 12,
		[Token(Token = "0x400182C")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x400182D")]
		WrongVisibilityType = 14,
		[Token(Token = "0x400182E")]
		KeyTooLong = 15,
		[Token(Token = "0x400182F")]
		NameTooLong = 16,
		[Token(Token = "0x4001830")]
		KeyInUse = 17,
		[Token(Token = "0x4001831")]
		WrongTransformType = 18,
		[Token(Token = "0x4001832")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001833")]
		InvalidParameter = 20,
		[Token(Token = "0x4001834")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001835")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001836")]
		RequestFailed = 23,
		[Token(Token = "0x4001837")]
		InvalidTexture = 24,
		[Token(Token = "0x4001838")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001839")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x400183A")]
		NoNeighbor = 27,
		[Token(Token = "0x400183B")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x400183C")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x400183D")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x400183E")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x400183F")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x200032C")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001841")]
		VRApplication_Other,
		[Token(Token = "0x4001842")]
		VRApplication_Scene,
		[Token(Token = "0x4001843")]
		VRApplication_Overlay,
		[Token(Token = "0x4001844")]
		VRApplication_Background,
		[Token(Token = "0x4001845")]
		VRApplication_Utility,
		[Token(Token = "0x4001846")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001847")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001848")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001849")]
		VRApplication_WebHelper,
		[Token(Token = "0x400184A")]
		VRApplication_Max
	}
	[Token(Token = "0x200032D")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x400184C")]
		None,
		[Token(Token = "0x400184D")]
		Success,
		[Token(Token = "0x400184E")]
		Fail
	}
	[Token(Token = "0x200032E")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001850")]
		OK = 0,
		[Token(Token = "0x4001851")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001852")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001853")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001854")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x200032F")]
	public enum EVRSkeletalMotionRange
	{
		[Token(Token = "0x4001856")]
		WithController,
		[Token(Token = "0x4001857")]
		WithoutController
	}
	[Token(Token = "0x2000330")]
	public enum EVRSkeletalTrackingLevel
	{
		[Token(Token = "0x4001859")]
		VRSkeletalTracking_Estimated = 0,
		[Token(Token = "0x400185A")]
		VRSkeletalTracking_Partial = 1,
		[Token(Token = "0x400185B")]
		VRSkeletalTracking_Full = 2,
		[Token(Token = "0x400185C")]
		Count = 3,
		[Token(Token = "0x400185D")]
		Max = 2
	}
	[Token(Token = "0x2000331")]
	public enum EVRInitError
	{
		[Token(Token = "0x400185F")]
		None = 0,
		[Token(Token = "0x4001860")]
		Unknown = 1,
		[Token(Token = "0x4001861")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001862")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001863")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001864")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001865")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001866")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001867")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001868")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001869")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x400186A")]
		Init_NotInitialized = 109,
		[Token(Token = "0x400186B")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x400186C")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x400186D")]
		Init_NoLogPath = 112,
		[Token(Token = "0x400186E")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x400186F")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001870")]
		Init_Retry = 115,
		[Token(Token = "0x4001871")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001872")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001873")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001874")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001875")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001876")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001877")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001878")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001879")]
		Init_Internal = 124,
		[Token(Token = "0x400187A")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x400187B")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x400187C")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x400187D")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x400187E")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x400187F")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001880")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001881")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001882")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001883")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001884")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001885")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001886")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001887")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001888")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001889")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x400188A")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x400188B")]
		Init_TrackerManagerInitFailed = 142,
		[Token(Token = "0x400188C")]
		Init_AlreadyRunning = 143,
		[Token(Token = "0x400188D")]
		Init_FailedForVrMonitor = 144,
		[Token(Token = "0x400188E")]
		Init_PropertyManagerInitFailed = 145,
		[Token(Token = "0x400188F")]
		Driver_Failed = 200,
		[Token(Token = "0x4001890")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001891")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001892")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001893")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001894")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001895")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001896")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001897")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001898")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001899")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x400189A")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x400189B")]
		Driver_HmdDisplayNotFoundLaptop = 213,
		[Token(Token = "0x400189C")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x400189D")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x400189E")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x400189F")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x40018A0")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x40018A1")]
		IPC_Failed = 305,
		[Token(Token = "0x40018A2")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x40018A3")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x40018A4")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x40018A5")]
		IPC_ConnectFailedAfterTargetExited = 309,
		[Token(Token = "0x40018A6")]
		IPC_NamespaceUnavailable = 310,
		[Token(Token = "0x40018A7")]
		Compositor_Failed = 400,
		[Token(Token = "0x40018A8")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x40018A9")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x40018AA")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x40018AB")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x40018AC")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x40018AD")]
		Compositor_SharedStateIsNull = 406,
		[Token(Token = "0x40018AE")]
		Compositor_NotificationManagerIsNull = 407,
		[Token(Token = "0x40018AF")]
		Compositor_ResourceManagerClientIsNull = 408,
		[Token(Token = "0x40018B0")]
		Compositor_MessageOverlaySharedStateInitFailure = 409,
		[Token(Token = "0x40018B1")]
		Compositor_PropertiesInterfaceIsNull = 410,
		[Token(Token = "0x40018B2")]
		Compositor_CreateFullscreenWindowFailed = 411,
		[Token(Token = "0x40018B3")]
		Compositor_SettingsInterfaceIsNull = 412,
		[Token(Token = "0x40018B4")]
		Compositor_FailedToShowWindow = 413,
		[Token(Token = "0x40018B5")]
		Compositor_DistortInterfaceIsNull = 414,
		[Token(Token = "0x40018B6")]
		Compositor_DisplayFrequencyFailure = 415,
		[Token(Token = "0x40018B7")]
		Compositor_RendererInitializationFailed = 416,
		[Token(Token = "0x40018B8")]
		Compositor_DXGIFactoryInterfaceIsNull = 417,
		[Token(Token = "0x40018B9")]
		Compositor_DXGIFactoryCreateFailed = 418,
		[Token(Token = "0x40018BA")]
		Compositor_DXGIFactoryQueryFailed = 419,
		[Token(Token = "0x40018BB")]
		Compositor_InvalidAdapterDesktop = 420,
		[Token(Token = "0x40018BC")]
		Compositor_InvalidHmdAttachment = 421,
		[Token(Token = "0x40018BD")]
		Compositor_InvalidOutputDesktop = 422,
		[Token(Token = "0x40018BE")]
		Compositor_InvalidDeviceProvided = 423,
		[Token(Token = "0x40018BF")]
		Compositor_D3D11RendererInitializationFailed = 424,
		[Token(Token = "0x40018C0")]
		Compositor_FailedToFindDisplayMode = 425,
		[Token(Token = "0x40018C1")]
		Compositor_FailedToCreateSwapChain = 426,
		[Token(Token = "0x40018C2")]
		Compositor_FailedToGetBackBuffer = 427,
		[Token(Token = "0x40018C3")]
		Compositor_FailedToCreateRenderTarget = 428,
		[Token(Token = "0x40018C4")]
		Compositor_FailedToCreateDXGI2SwapChain = 429,
		[Token(Token = "0x40018C5")]
		Compositor_FailedtoGetDXGI2BackBuffer = 430,
		[Token(Token = "0x40018C6")]
		Compositor_FailedToCreateDXGI2RenderTarget = 431,
		[Token(Token = "0x40018C7")]
		Compositor_FailedToGetDXGIDeviceInterface = 432,
		[Token(Token = "0x40018C8")]
		Compositor_SelectDisplayMode = 433,
		[Token(Token = "0x40018C9")]
		Compositor_FailedToCreateNvAPIRenderTargets = 434,
		[Token(Token = "0x40018CA")]
		Compositor_NvAPISetDisplayMode = 435,
		[Token(Token = "0x40018CB")]
		Compositor_FailedToCreateDirectModeDisplay = 436,
		[Token(Token = "0x40018CC")]
		Compositor_InvalidHmdPropertyContainer = 437,
		[Token(Token = "0x40018CD")]
		Compositor_UpdateDisplayFrequency = 438,
		[Token(Token = "0x40018CE")]
		Compositor_CreateRasterizerState = 439,
		[Token(Token = "0x40018CF")]
		Compositor_CreateWireframeRasterizerState = 440,
		[Token(Token = "0x40018D0")]
		Compositor_CreateSamplerState = 441,
		[Token(Token = "0x40018D1")]
		Compositor_CreateClampToBorderSamplerState = 442,
		[Token(Token = "0x40018D2")]
		Compositor_CreateAnisoSamplerState = 443,
		[Token(Token = "0x40018D3")]
		Compositor_CreateOverlaySamplerState = 444,
		[Token(Token = "0x40018D4")]
		Compositor_CreatePanoramaSamplerState = 445,
		[Token(Token = "0x40018D5")]
		Compositor_CreateFontSamplerState = 446,
		[Token(Token = "0x40018D6")]
		Compositor_CreateNoBlendState = 447,
		[Token(Token = "0x40018D7")]
		Compositor_CreateBlendState = 448,
		[Token(Token = "0x40018D8")]
		Compositor_CreateAlphaBlendState = 449,
		[Token(Token = "0x40018D9")]
		Compositor_CreateBlendStateMaskR = 450,
		[Token(Token = "0x40018DA")]
		Compositor_CreateBlendStateMaskG = 451,
		[Token(Token = "0x40018DB")]
		Compositor_CreateBlendStateMaskB = 452,
		[Token(Token = "0x40018DC")]
		Compositor_CreateDepthStencilState = 453,
		[Token(Token = "0x40018DD")]
		Compositor_CreateDepthStencilStateNoWrite = 454,
		[Token(Token = "0x40018DE")]
		Compositor_CreateDepthStencilStateNoDepth = 455,
		[Token(Token = "0x40018DF")]
		Compositor_CreateFlushTexture = 456,
		[Token(Token = "0x40018E0")]
		Compositor_CreateDistortionSurfaces = 457,
		[Token(Token = "0x40018E1")]
		Compositor_CreateConstantBuffer = 458,
		[Token(Token = "0x40018E2")]
		Compositor_CreateHmdPoseConstantBuffer = 459,
		[Token(Token = "0x40018E3")]
		Compositor_CreateHmdPoseStagingConstantBuffer = 460,
		[Token(Token = "0x40018E4")]
		Compositor_CreateSharedFrameInfoConstantBuffer = 461,
		[Token(Token = "0x40018E5")]
		Compositor_CreateOverlayConstantBuffer = 462,
		[Token(Token = "0x40018E6")]
		Compositor_CreateSceneTextureIndexConstantBuffer = 463,
		[Token(Token = "0x40018E7")]
		Compositor_CreateReadableSceneTextureIndexConstantBuffer = 464,
		[Token(Token = "0x40018E8")]
		Compositor_CreateLayerGraphicsTextureIndexConstantBuffer = 465,
		[Token(Token = "0x40018E9")]
		Compositor_CreateLayerComputeTextureIndexConstantBuffer = 466,
		[Token(Token = "0x40018EA")]
		Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer = 467,
		[Token(Token = "0x40018EB")]
		Compositor_CreateComputeHmdPoseConstantBuffer = 468,
		[Token(Token = "0x40018EC")]
		Compositor_CreateGeomConstantBuffer = 469,
		[Token(Token = "0x40018ED")]
		Compositor_CreatePanelMaskConstantBuffer = 470,
		[Token(Token = "0x40018EE")]
		Compositor_CreatePixelSimUBO = 471,
		[Token(Token = "0x40018EF")]
		Compositor_CreateMSAARenderTextures = 472,
		[Token(Token = "0x40018F0")]
		Compositor_CreateResolveRenderTextures = 473,
		[Token(Token = "0x40018F1")]
		Compositor_CreateComputeResolveRenderTextures = 474,
		[Token(Token = "0x40018F2")]
		Compositor_CreateDriverDirectModeResolveTextures = 475,
		[Token(Token = "0x40018F3")]
		Compositor_OpenDriverDirectModeResolveTextures = 476,
		[Token(Token = "0x40018F4")]
		Compositor_CreateFallbackSyncTexture = 477,
		[Token(Token = "0x40018F5")]
		Compositor_ShareFallbackSyncTexture = 478,
		[Token(Token = "0x40018F6")]
		Compositor_CreateOverlayIndexBuffer = 479,
		[Token(Token = "0x40018F7")]
		Compositor_CreateOverlayVertextBuffer = 480,
		[Token(Token = "0x40018F8")]
		Compositor_CreateTextVertexBuffer = 481,
		[Token(Token = "0x40018F9")]
		Compositor_CreateTextIndexBuffer = 482,
		[Token(Token = "0x40018FA")]
		Compositor_CreateMirrorTextures = 483,
		[Token(Token = "0x40018FB")]
		Compositor_CreateLastFrameRenderTexture = 484,
		[Token(Token = "0x40018FC")]
		Compositor_CreateMirrorOverlay = 485,
		[Token(Token = "0x40018FD")]
		Compositor_FailedToCreateVirtualDisplayBackbuffer = 486,
		[Token(Token = "0x40018FE")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x40018FF")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001900")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001901")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001902")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001903")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001904")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001905")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001906")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001907")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001908")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001909")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x400190A")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x400190B")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x400190C")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x400190D")]
		VendorSpecific_OculusRuntimeBadInstall = 1114,
		[Token(Token = "0x400190E")]
		Steam_SteamInstallationNotFound = 2000,
		[Token(Token = "0x400190F")]
		LastError = 2001
	}
	[Token(Token = "0x2000332")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001911")]
		None,
		[Token(Token = "0x4001912")]
		Mono,
		[Token(Token = "0x4001913")]
		Stereo,
		[Token(Token = "0x4001914")]
		Cubemap,
		[Token(Token = "0x4001915")]
		MonoPanorama,
		[Token(Token = "0x4001916")]
		StereoPanorama
	}
	[Token(Token = "0x2000333")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001918")]
		Preview,
		[Token(Token = "0x4001919")]
		VR
	}
	[Token(Token = "0x2000334")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x400191B")]
		None = 0,
		[Token(Token = "0x400191C")]
		OperationFailed = 100,
		[Token(Token = "0x400191D")]
		InvalidHandle = 101,
		[Token(Token = "0x400191E")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x400191F")]
		OutOfHandles = 103,
		[Token(Token = "0x4001920")]
		IPCFailure = 104,
		[Token(Token = "0x4001921")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001922")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001923")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001924")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001925")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001926")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001927")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001928")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001929")]
		NoFrameAvailable = 113,
		[Token(Token = "0x400192A")]
		InvalidArgument = 114,
		[Token(Token = "0x400192B")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000335")]
	public enum EVRTrackedCameraFrameLayout
	{
		[Token(Token = "0x400192D")]
		Mono = 1,
		[Token(Token = "0x400192E")]
		Stereo = 2,
		[Token(Token = "0x400192F")]
		VerticalLayout = 0x10,
		[Token(Token = "0x4001930")]
		HorizontalLayout = 0x20
	}
	[Token(Token = "0x2000336")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001932")]
		Distorted,
		[Token(Token = "0x4001933")]
		Undistorted,
		[Token(Token = "0x4001934")]
		MaximumUndistorted,
		[Token(Token = "0x4001935")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000337")]
	public enum EVRDistortionFunctionType
	{
		[Token(Token = "0x4001937")]
		None,
		[Token(Token = "0x4001938")]
		FTheta,
		[Token(Token = "0x4001939")]
		Extended_FTheta,
		[Token(Token = "0x400193A")]
		MAX_DISTORTION_FUNCTION_TYPES
	}
	[Token(Token = "0x2000338")]
	public enum EVSync
	{
		[Token(Token = "0x400193C")]
		None,
		[Token(Token = "0x400193D")]
		WaitRender,
		[Token(Token = "0x400193E")]
		NoWaitRender
	}
	[Token(Token = "0x2000339")]
	public enum EVRMuraCorrectionMode
	{
		[Token(Token = "0x4001940")]
		Default,
		[Token(Token = "0x4001941")]
		NoCorrection
	}
	[Token(Token = "0x200033A")]
	public enum Imu_OffScaleFlags
	{
		[Token(Token = "0x4001943")]
		OffScale_AccelX = 1,
		[Token(Token = "0x4001944")]
		OffScale_AccelY = 2,
		[Token(Token = "0x4001945")]
		OffScale_AccelZ = 4,
		[Token(Token = "0x4001946")]
		OffScale_GyroX = 8,
		[Token(Token = "0x4001947")]
		OffScale_GyroY = 0x10,
		[Token(Token = "0x4001948")]
		OffScale_GyroZ = 0x20
	}
	[Token(Token = "0x200033B")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x400194A")]
		None = 0,
		[Token(Token = "0x400194B")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x400194C")]
		NoManifest = 101,
		[Token(Token = "0x400194D")]
		NoApplication = 102,
		[Token(Token = "0x400194E")]
		InvalidIndex = 103,
		[Token(Token = "0x400194F")]
		UnknownApplication = 104,
		[Token(Token = "0x4001950")]
		IPCFailed = 105,
		[Token(Token = "0x4001951")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001952")]
		InvalidManifest = 107,
		[Token(Token = "0x4001953")]
		InvalidApplication = 108,
		[Token(Token = "0x4001954")]
		LaunchFailed = 109,
		[Token(Token = "0x4001955")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001956")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001957")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001958")]
		TransitionAborted = 113,
		[Token(Token = "0x4001959")]
		IsTemplate = 114,
		[Token(Token = "0x400195A")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x400195B")]
		BufferTooSmall = 200,
		[Token(Token = "0x400195C")]
		PropertyNotSet = 201,
		[Token(Token = "0x400195D")]
		UnknownProperty = 202,
		[Token(Token = "0x400195E")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200033C")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001960")]
		Name_String = 0,
		[Token(Token = "0x4001961")]
		LaunchType_String = 11,
		[Token(Token = "0x4001962")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001963")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001964")]
		Arguments_String = 14,
		[Token(Token = "0x4001965")]
		URL_String = 15,
		[Token(Token = "0x4001966")]
		Description_String = 50,
		[Token(Token = "0x4001967")]
		NewsURL_String = 51,
		[Token(Token = "0x4001968")]
		ImagePath_String = 52,
		[Token(Token = "0x4001969")]
		Source_String = 53,
		[Token(Token = "0x400196A")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x400196B")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x400196C")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x400196D")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x400196E")]
		IsInternal_Bool = 63,
		[Token(Token = "0x400196F")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001970")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x200033D")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001972")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001973")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001974")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001975")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x200033E")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001977")]
		OK = 1,
		[Token(Token = "0x4001978")]
		Warning = 100,
		[Token(Token = "0x4001979")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x400197A")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x400197B")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x400197C")]
		Error = 200,
		[Token(Token = "0x400197D")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x400197E")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x400197F")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001980")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200033F")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001982")]
		Live = 1,
		[Token(Token = "0x4001983")]
		Temp
	}
	[Token(Token = "0x2000340")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001985")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x2000341")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001987")]
		None = 0,
		[Token(Token = "0x4001988")]
		RequestFailed = 1,
		[Token(Token = "0x4001989")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400198A")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x400198B")]
		InvalidTexture = 102,
		[Token(Token = "0x400198C")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x400198D")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x400198E")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x400198F")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001990")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001991")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001992")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000342")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001994")]
		Implicit,
		[Token(Token = "0x4001995")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001996")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000343")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001998")]
		None,
		[Token(Token = "0x4001999")]
		Mouse,
		[Token(Token = "0x400199A")]
		DualAnalog
	}
	[Token(Token = "0x2000344")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x400199C")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x400199D")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x400199E")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x400199F")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000345")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40019A1")]
		None,
		[Token(Token = "0x40019A2")]
		Curved,
		[Token(Token = "0x40019A3")]
		RGSS4X,
		[Token(Token = "0x40019A4")]
		NoDashboardTab,
		[Token(Token = "0x40019A5")]
		AcceptsGamepadEvents,
		[Token(Token = "0x40019A6")]
		ShowGamepadFocus,
		[Token(Token = "0x40019A7")]
		SendVRDiscreteScrollEvents,
		[Token(Token = "0x40019A8")]
		SendVRTouchpadEvents,
		[Token(Token = "0x40019A9")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x40019AA")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x40019AB")]
		SideBySide_Parallel,
		[Token(Token = "0x40019AC")]
		SideBySide_Crossed,
		[Token(Token = "0x40019AD")]
		Panorama,
		[Token(Token = "0x40019AE")]
		StereoPanorama,
		[Token(Token = "0x40019AF")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x40019B0")]
		VisibleInDashboard,
		[Token(Token = "0x40019B1")]
		MakeOverlaysInteractiveIfVisible,
		[Token(Token = "0x40019B2")]
		SendVRSmoothScrollEvents,
		[Token(Token = "0x40019B3")]
		ProtectedContent
	}
	[Token(Token = "0x2000346")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x40019B5")]
		ButtonPress_0,
		[Token(Token = "0x40019B6")]
		ButtonPress_1,
		[Token(Token = "0x40019B7")]
		ButtonPress_2,
		[Token(Token = "0x40019B8")]
		ButtonPress_3,
		[Token(Token = "0x40019B9")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x40019BA")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x40019BB")]
		ApplicationQuit
	}
	[Token(Token = "0x2000347")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x40019BD")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x40019BE")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x40019BF")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000348")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x40019C1")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x40019C2")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000349")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x40019C4")]
		Up,
		[Token(Token = "0x40019C5")]
		Down,
		[Token(Token = "0x40019C6")]
		Left,
		[Token(Token = "0x40019C7")]
		Right,
		[Token(Token = "0x40019C8")]
		Count
	}
	[Token(Token = "0x200034A")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x40019CA")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x40019CB")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x200034B")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x40019CD")]
		None = 0,
		[Token(Token = "0x40019CE")]
		Loading = 100,
		[Token(Token = "0x40019CF")]
		NotSupported = 200,
		[Token(Token = "0x40019D0")]
		InvalidArg = 300,
		[Token(Token = "0x40019D1")]
		InvalidModel = 301,
		[Token(Token = "0x40019D2")]
		NoShapes = 302,
		[Token(Token = "0x40019D3")]
		MultipleShapes = 303,
		[Token(Token = "0x40019D4")]
		TooManyVertices = 304,
		[Token(Token = "0x40019D5")]
		MultipleTextures = 305,
		[Token(Token = "0x40019D6")]
		BufferTooSmall = 306,
		[Token(Token = "0x40019D7")]
		NotEnoughNormals = 307,
		[Token(Token = "0x40019D8")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x40019D9")]
		InvalidTexture = 400
	}
	[Token(Token = "0x200034C")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x40019DB")]
		IsStatic = 1,
		[Token(Token = "0x40019DC")]
		IsVisible = 2,
		[Token(Token = "0x40019DD")]
		IsTouched = 4,
		[Token(Token = "0x40019DE")]
		IsPressed = 8,
		[Token(Token = "0x40019DF")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x200034D")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x40019E1")]
		Transient,
		[Token(Token = "0x40019E2")]
		Persistent,
		[Token(Token = "0x40019E3")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x200034E")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x40019E5")]
		None = 0,
		[Token(Token = "0x40019E6")]
		Application = 100,
		[Token(Token = "0x40019E7")]
		Contact_Disabled = 200,
		[Token(Token = "0x40019E8")]
		Contact_Enabled = 201,
		[Token(Token = "0x40019E9")]
		Contact_Active = 202
	}
	[Token(Token = "0x200034F")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x40019EB")]
		None,
		[Token(Token = "0x40019EC")]
		IPCFailed,
		[Token(Token = "0x40019ED")]
		WriteFailed,
		[Token(Token = "0x40019EE")]
		ReadFailed,
		[Token(Token = "0x40019EF")]
		JsonParseFailed,
		[Token(Token = "0x40019F0")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x2000350")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x40019F2")]
		None = 0,
		[Token(Token = "0x40019F3")]
		RequestFailed = 1,
		[Token(Token = "0x40019F4")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40019F5")]
		NotFound = 101,
		[Token(Token = "0x40019F6")]
		BufferTooSmall = 102,
		[Token(Token = "0x40019F7")]
		ScreenshotAlreadyInProgress = 108
	}
	[Token(Token = "0x2000351")]
	public enum EVRSkeletalTransformSpace
	{
		[Token(Token = "0x40019F9")]
		Model,
		[Token(Token = "0x40019FA")]
		Parent
	}
	[Token(Token = "0x2000352")]
	public enum EVRSkeletalReferencePose
	{
		[Token(Token = "0x40019FC")]
		BindPose,
		[Token(Token = "0x40019FD")]
		OpenHand,
		[Token(Token = "0x40019FE")]
		Fist,
		[Token(Token = "0x40019FF")]
		GripLimit
	}
	[Token(Token = "0x2000353")]
	public enum EVRFinger
	{
		[Token(Token = "0x4001A01")]
		Thumb,
		[Token(Token = "0x4001A02")]
		Index,
		[Token(Token = "0x4001A03")]
		Middle,
		[Token(Token = "0x4001A04")]
		Ring,
		[Token(Token = "0x4001A05")]
		Pinky,
		[Token(Token = "0x4001A06")]
		Count
	}
	[Token(Token = "0x2000354")]
	public enum EVRFingerSplay
	{
		[Token(Token = "0x4001A08")]
		Thumb_Index,
		[Token(Token = "0x4001A09")]
		Index_Middle,
		[Token(Token = "0x4001A0A")]
		Middle_Ring,
		[Token(Token = "0x4001A0B")]
		Ring_Pinky,
		[Token(Token = "0x4001A0C")]
		Count
	}
	[Token(Token = "0x2000355")]
	public enum EVRSummaryType
	{
		[Token(Token = "0x4001A0E")]
		FromAnimation,
		[Token(Token = "0x4001A0F")]
		FromDevice
	}
	[Token(Token = "0x2000356")]
	public enum EVRInputFilterCancelType
	{
		[Token(Token = "0x4001A11")]
		VRInputFilterCancel_Timers,
		[Token(Token = "0x4001A12")]
		VRInputFilterCancel_Momentum
	}
	[Token(Token = "0x2000357")]
	public enum EVRInputStringBits
	{
		[Token(Token = "0x4001A14")]
		VRInputString_Hand = 1,
		[Token(Token = "0x4001A15")]
		VRInputString_ControllerType = 2,
		[Token(Token = "0x4001A16")]
		VRInputString_InputSource = 4,
		[Token(Token = "0x4001A17")]
		VRInputString_All = -1
	}
	[Token(Token = "0x2000358")]
	public enum EIOBufferError
	{
		[Token(Token = "0x4001A19")]
		IOBuffer_Success = 0,
		[Token(Token = "0x4001A1A")]
		IOBuffer_OperationFailed = 100,
		[Token(Token = "0x4001A1B")]
		IOBuffer_InvalidHandle = 101,
		[Token(Token = "0x4001A1C")]
		IOBuffer_InvalidArgument = 102,
		[Token(Token = "0x4001A1D")]
		IOBuffer_PathExists = 103,
		[Token(Token = "0x4001A1E")]
		IOBuffer_PathDoesNotExist = 104,
		[Token(Token = "0x4001A1F")]
		IOBuffer_Permission = 105
	}
	[Token(Token = "0x2000359")]
	public enum EIOBufferMode
	{
		[Token(Token = "0x4001A21")]
		Read = 1,
		[Token(Token = "0x4001A22")]
		Write = 2,
		[Token(Token = "0x4001A23")]
		Create = 0x200
	}
	[Token(Token = "0x200035A")]
	public enum EVRDebugError
	{
		[Token(Token = "0x4001A25")]
		Success,
		[Token(Token = "0x4001A26")]
		BadParameter
	}
	[StructLayout(2)]
	[Token(Token = "0x200035B")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_WebConsole_t webConsole;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_InputBindingLoad_t inputBinding;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SpatialAnchor_t spatialAnchor;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_InputActionManifestLoad_t actionManifest;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ProgressUpdate_t progressUpdate;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ShowUI_t showUi;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ShowDevTools_t showDevTools;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HDCPError_t hdcpError;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x200035C")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x200035D")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x200035E")]
	public struct HmdMatrix33_t
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;
	}
	[Token(Token = "0x200035F")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000360")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000361")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000362")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000363")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000364")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000365")]
	public struct HmdQuaternionf_t
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float x;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float y;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float z;
	}
	[Token(Token = "0x2000366")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000367")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000368")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000369")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x200036A")]
	public struct Texture_t
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200036B")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200036C")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x200036D")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200036E")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200036F")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000370")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000371")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000372")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000373")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000374")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000375")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unused;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float viewportscale;
	}
	[Token(Token = "0x2000376")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000377")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000378")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool bConnectionLost;
	}
	[Token(Token = "0x2000379")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong devicePath;
	}
	[Token(Token = "0x200037A")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x200037B")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;

		[Token(Token = "0x170000A7")]
		public string cNewInput
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xD8B87C", Offset = "0xD8B87C", VA = "0xD8B87C")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200037C")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x200037D")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x200037E")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong reserved4;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong reserved5;
	}
	[Token(Token = "0x200037F")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000380")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000381")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000382")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000383")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000384")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000385")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000386")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000387")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000388")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000389")]
	public struct VREvent_WebConsole_t
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong webConsoleHandle;
	}
	[Token(Token = "0x200038A")]
	public struct VREvent_InputBindingLoad_t
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulAppContainer;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong pathMessage;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong pathUrl;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong pathControllerType;
	}
	[Token(Token = "0x200038B")]
	public struct VREvent_InputActionManifestLoad_t
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong pathAppKey;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong pathMessage;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong pathMessageParam;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong pathManifestPath;
	}
	[Token(Token = "0x200038C")]
	public struct VREvent_SpatialAnchor_t
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unHandle;
	}
	[Token(Token = "0x200038D")]
	public struct VREvent_ProgressUpdate_t
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulApplicationPropertyContainer;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong pathDevice;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong pathInputSource;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong pathProgressAction;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong pathIcon;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fProgress;
	}
	[Token(Token = "0x200038E")]
	public struct VREvent_ShowUI_t
	{
		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EShowUIType eType;
	}
	[Token(Token = "0x200038F")]
	public struct VREvent_ShowDevTools_t
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nBrowserIdentifier;
	}
	[Token(Token = "0x2000390")]
	public struct VREvent_HDCPError_t
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EHDCPError eCode;
	}
	[Token(Token = "0x2000391")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000392")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD8B998", Offset = "0xD8B998", VA = "0xD8B998")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD8B9E8", Offset = "0xD8B9E8", VA = "0xD8B9E8")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000393")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000394")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000395")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000396")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD8B7F4", Offset = "0xD8B7F4", VA = "0xD8B7F4")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD8B838", Offset = "0xD8B838", VA = "0xD8B838")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000398")]
	public struct VRBoneTransform_t
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector4_t position;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HmdQuaternionf_t orientation;
	}
	[Token(Token = "0x2000399")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ulong ulFrameExposureTime;
	}
	[Token(Token = "0x200039A")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public uint m_nNumVSyncsReadyForUse;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public uint m_nNumVSyncsToFirstView;
	}
	[Token(Token = "0x200039B")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200039C")]
	public struct ImuSample_t
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double fSampleTime;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector3d_t vAccel;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HmdVector3d_t vGyro;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint unOffScaleFlags;
	}
	[Token(Token = "0x200039D")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200039E")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200039F")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20003A0")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20003A1")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20003A2")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x20003A3")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x20003A4")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x20003A5")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x20003A6")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort unWidth;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort unHeight;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x20003A7")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort unWidth;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort unHeight;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD8B76C", Offset = "0xD8B76C", VA = "0xD8B76C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD8B780", Offset = "0xD8B780", VA = "0xD8B780")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x20003A9")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD8B79C", Offset = "0xD8B79C", VA = "0xD8B79C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD8B7C8", Offset = "0xD8B7C8", VA = "0xD8B7C8")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x20003AB")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x20003AC")]
	public struct CVRSettingHelper
	{
		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pSettings;
	}
	[Token(Token = "0x20003AD")]
	public struct InputAnalogActionData_t
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deltaX;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deltaY;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float deltaZ;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fUpdateTime;
	}
	[Token(Token = "0x20003AE")]
	public struct InputDigitalActionData_t
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bState;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool bChanged;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fUpdateTime;
	}
	[Token(Token = "0x20003AF")]
	public struct InputPoseActionData_t
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackedDevicePose_t pose;
	}
	[Token(Token = "0x20003B0")]
	public struct InputSkeletalActionData_t
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bActive;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong activeOrigin;
	}
	[Token(Token = "0x20003B1")]
	public struct InputOriginInfo_t
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong devicePath;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public byte rchRenderModelComponentName0;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public byte rchRenderModelComponentName1;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public byte rchRenderModelComponentName2;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public byte rchRenderModelComponentName3;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte rchRenderModelComponentName4;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte rchRenderModelComponentName5;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte rchRenderModelComponentName6;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public byte rchRenderModelComponentName7;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte rchRenderModelComponentName8;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte rchRenderModelComponentName9;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte rchRenderModelComponentName10;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public byte rchRenderModelComponentName11;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte rchRenderModelComponentName12;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte rchRenderModelComponentName13;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte rchRenderModelComponentName14;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public byte rchRenderModelComponentName15;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte rchRenderModelComponentName16;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public byte rchRenderModelComponentName17;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public byte rchRenderModelComponentName18;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public byte rchRenderModelComponentName19;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte rchRenderModelComponentName20;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte rchRenderModelComponentName21;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte rchRenderModelComponentName22;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public byte rchRenderModelComponentName23;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public byte rchRenderModelComponentName24;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public byte rchRenderModelComponentName25;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public byte rchRenderModelComponentName26;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public byte rchRenderModelComponentName27;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte rchRenderModelComponentName28;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public byte rchRenderModelComponentName29;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public byte rchRenderModelComponentName30;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public byte rchRenderModelComponentName31;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public byte rchRenderModelComponentName32;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public byte rchRenderModelComponentName33;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public byte rchRenderModelComponentName34;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public byte rchRenderModelComponentName35;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte rchRenderModelComponentName36;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public byte rchRenderModelComponentName37;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public byte rchRenderModelComponentName38;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public byte rchRenderModelComponentName39;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte rchRenderModelComponentName40;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public byte rchRenderModelComponentName41;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public byte rchRenderModelComponentName42;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public byte rchRenderModelComponentName43;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte rchRenderModelComponentName44;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public byte rchRenderModelComponentName45;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public byte rchRenderModelComponentName46;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public byte rchRenderModelComponentName47;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public byte rchRenderModelComponentName48;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public byte rchRenderModelComponentName49;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public byte rchRenderModelComponentName50;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public byte rchRenderModelComponentName51;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte rchRenderModelComponentName52;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public byte rchRenderModelComponentName53;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public byte rchRenderModelComponentName54;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public byte rchRenderModelComponentName55;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public byte rchRenderModelComponentName56;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public byte rchRenderModelComponentName57;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public byte rchRenderModelComponentName58;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public byte rchRenderModelComponentName59;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte rchRenderModelComponentName60;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public byte rchRenderModelComponentName61;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public byte rchRenderModelComponentName62;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public byte rchRenderModelComponentName63;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public byte rchRenderModelComponentName64;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public byte rchRenderModelComponentName65;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public byte rchRenderModelComponentName66;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public byte rchRenderModelComponentName67;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public byte rchRenderModelComponentName68;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public byte rchRenderModelComponentName69;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public byte rchRenderModelComponentName70;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public byte rchRenderModelComponentName71;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public byte rchRenderModelComponentName72;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public byte rchRenderModelComponentName73;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public byte rchRenderModelComponentName74;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public byte rchRenderModelComponentName75;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte rchRenderModelComponentName76;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public byte rchRenderModelComponentName77;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public byte rchRenderModelComponentName78;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public byte rchRenderModelComponentName79;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public byte rchRenderModelComponentName80;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public byte rchRenderModelComponentName81;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public byte rchRenderModelComponentName82;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public byte rchRenderModelComponentName83;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte rchRenderModelComponentName84;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public byte rchRenderModelComponentName85;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public byte rchRenderModelComponentName86;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public byte rchRenderModelComponentName87;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public byte rchRenderModelComponentName88;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public byte rchRenderModelComponentName89;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public byte rchRenderModelComponentName90;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public byte rchRenderModelComponentName91;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public byte rchRenderModelComponentName92;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public byte rchRenderModelComponentName93;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public byte rchRenderModelComponentName94;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public byte rchRenderModelComponentName95;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public byte rchRenderModelComponentName96;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public byte rchRenderModelComponentName97;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public byte rchRenderModelComponentName98;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public byte rchRenderModelComponentName99;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public byte rchRenderModelComponentName100;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public byte rchRenderModelComponentName101;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public byte rchRenderModelComponentName102;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public byte rchRenderModelComponentName103;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public byte rchRenderModelComponentName104;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public byte rchRenderModelComponentName105;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public byte rchRenderModelComponentName106;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public byte rchRenderModelComponentName107;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public byte rchRenderModelComponentName108;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public byte rchRenderModelComponentName109;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public byte rchRenderModelComponentName110;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public byte rchRenderModelComponentName111;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public byte rchRenderModelComponentName112;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public byte rchRenderModelComponentName113;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public byte rchRenderModelComponentName114;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public byte rchRenderModelComponentName115;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte rchRenderModelComponentName116;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public byte rchRenderModelComponentName117;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public byte rchRenderModelComponentName118;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public byte rchRenderModelComponentName119;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public byte rchRenderModelComponentName120;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public byte rchRenderModelComponentName121;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public byte rchRenderModelComponentName122;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public byte rchRenderModelComponentName123;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public byte rchRenderModelComponentName124;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public byte rchRenderModelComponentName125;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public byte rchRenderModelComponentName126;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public byte rchRenderModelComponentName127;

		[Token(Token = "0x170000A8")]
		public string rchRenderModelComponentName
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x11162A4", Offset = "0x11162A4", VA = "0x11162A4")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x20003B2")]
	public struct InputBindingInfo_t
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte rchDevicePathName0;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte rchDevicePathName1;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte rchDevicePathName2;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte rchDevicePathName3;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte rchDevicePathName4;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte rchDevicePathName5;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte rchDevicePathName6;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte rchDevicePathName7;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte rchDevicePathName8;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public byte rchDevicePathName9;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public byte rchDevicePathName10;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public byte rchDevicePathName11;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public byte rchDevicePathName12;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public byte rchDevicePathName13;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public byte rchDevicePathName14;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public byte rchDevicePathName15;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte rchDevicePathName16;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte rchDevicePathName17;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte rchDevicePathName18;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public byte rchDevicePathName19;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte rchDevicePathName20;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte rchDevicePathName21;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte rchDevicePathName22;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public byte rchDevicePathName23;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte rchDevicePathName24;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte rchDevicePathName25;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte rchDevicePathName26;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public byte rchDevicePathName27;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte rchDevicePathName28;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public byte rchDevicePathName29;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public byte rchDevicePathName30;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public byte rchDevicePathName31;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte rchDevicePathName32;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte rchDevicePathName33;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte rchDevicePathName34;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public byte rchDevicePathName35;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public byte rchDevicePathName36;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public byte rchDevicePathName37;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public byte rchDevicePathName38;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public byte rchDevicePathName39;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte rchDevicePathName40;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public byte rchDevicePathName41;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public byte rchDevicePathName42;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public byte rchDevicePathName43;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public byte rchDevicePathName44;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public byte rchDevicePathName45;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public byte rchDevicePathName46;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public byte rchDevicePathName47;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte rchDevicePathName48;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public byte rchDevicePathName49;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public byte rchDevicePathName50;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public byte rchDevicePathName51;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte rchDevicePathName52;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public byte rchDevicePathName53;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public byte rchDevicePathName54;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public byte rchDevicePathName55;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte rchDevicePathName56;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public byte rchDevicePathName57;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public byte rchDevicePathName58;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public byte rchDevicePathName59;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public byte rchDevicePathName60;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public byte rchDevicePathName61;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public byte rchDevicePathName62;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public byte rchDevicePathName63;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte rchDevicePathName64;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public byte rchDevicePathName65;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public byte rchDevicePathName66;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public byte rchDevicePathName67;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public byte rchDevicePathName68;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public byte rchDevicePathName69;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public byte rchDevicePathName70;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public byte rchDevicePathName71;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte rchDevicePathName72;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public byte rchDevicePathName73;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public byte rchDevicePathName74;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public byte rchDevicePathName75;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public byte rchDevicePathName76;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public byte rchDevicePathName77;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public byte rchDevicePathName78;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public byte rchDevicePathName79;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public byte rchDevicePathName80;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public byte rchDevicePathName81;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public byte rchDevicePathName82;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public byte rchDevicePathName83;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public byte rchDevicePathName84;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public byte rchDevicePathName85;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public byte rchDevicePathName86;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public byte rchDevicePathName87;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte rchDevicePathName88;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public byte rchDevicePathName89;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public byte rchDevicePathName90;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public byte rchDevicePathName91;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public byte rchDevicePathName92;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public byte rchDevicePathName93;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public byte rchDevicePathName94;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public byte rchDevicePathName95;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte rchDevicePathName96;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public byte rchDevicePathName97;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public byte rchDevicePathName98;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public byte rchDevicePathName99;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public byte rchDevicePathName100;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public byte rchDevicePathName101;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public byte rchDevicePathName102;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public byte rchDevicePathName103;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public byte rchDevicePathName104;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public byte rchDevicePathName105;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public byte rchDevicePathName106;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public byte rchDevicePathName107;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public byte rchDevicePathName108;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public byte rchDevicePathName109;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public byte rchDevicePathName110;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public byte rchDevicePathName111;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public byte rchDevicePathName112;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public byte rchDevicePathName113;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public byte rchDevicePathName114;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public byte rchDevicePathName115;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public byte rchDevicePathName116;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public byte rchDevicePathName117;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public byte rchDevicePathName118;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public byte rchDevicePathName119;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public byte rchDevicePathName120;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public byte rchDevicePathName121;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public byte rchDevicePathName122;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public byte rchDevicePathName123;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public byte rchDevicePathName124;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public byte rchDevicePathName125;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public byte rchDevicePathName126;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public byte rchDevicePathName127;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte rchInputPathName0;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public byte rchInputPathName1;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public byte rchInputPathName2;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public byte rchInputPathName3;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public byte rchInputPathName4;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public byte rchInputPathName5;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public byte rchInputPathName6;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public byte rchInputPathName7;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public byte rchInputPathName8;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public byte rchInputPathName9;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public byte rchInputPathName10;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public byte rchInputPathName11;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public byte rchInputPathName12;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public byte rchInputPathName13;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		public byte rchInputPathName14;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
		public byte rchInputPathName15;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte rchInputPathName16;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public byte rchInputPathName17;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public byte rchInputPathName18;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public byte rchInputPathName19;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public byte rchInputPathName20;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public byte rchInputPathName21;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		public byte rchInputPathName22;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		public byte rchInputPathName23;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public byte rchInputPathName24;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public byte rchInputPathName25;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public byte rchInputPathName26;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public byte rchInputPathName27;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public byte rchInputPathName28;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public byte rchInputPathName29;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public byte rchInputPathName30;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		public byte rchInputPathName31;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public byte rchInputPathName32;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public byte rchInputPathName33;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public byte rchInputPathName34;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public byte rchInputPathName35;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public byte rchInputPathName36;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public byte rchInputPathName37;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public byte rchInputPathName38;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		public byte rchInputPathName39;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public byte rchInputPathName40;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public byte rchInputPathName41;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public byte rchInputPathName42;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public byte rchInputPathName43;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public byte rchInputPathName44;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public byte rchInputPathName45;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public byte rchInputPathName46;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		public byte rchInputPathName47;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public byte rchInputPathName48;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public byte rchInputPathName49;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public byte rchInputPathName50;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public byte rchInputPathName51;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public byte rchInputPathName52;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public byte rchInputPathName53;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public byte rchInputPathName54;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		public byte rchInputPathName55;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public byte rchInputPathName56;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public byte rchInputPathName57;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public byte rchInputPathName58;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public byte rchInputPathName59;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public byte rchInputPathName60;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public byte rchInputPathName61;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public byte rchInputPathName62;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		public byte rchInputPathName63;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public byte rchInputPathName64;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public byte rchInputPathName65;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public byte rchInputPathName66;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public byte rchInputPathName67;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public byte rchInputPathName68;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public byte rchInputPathName69;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		public byte rchInputPathName70;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
		public byte rchInputPathName71;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public byte rchInputPathName72;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public byte rchInputPathName73;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public byte rchInputPathName74;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public byte rchInputPathName75;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public byte rchInputPathName76;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public byte rchInputPathName77;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public byte rchInputPathName78;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
		public byte rchInputPathName79;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public byte rchInputPathName80;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public byte rchInputPathName81;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public byte rchInputPathName82;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public byte rchInputPathName83;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public byte rchInputPathName84;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		public byte rchInputPathName85;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		public byte rchInputPathName86;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
		public byte rchInputPathName87;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public byte rchInputPathName88;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public byte rchInputPathName89;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public byte rchInputPathName90;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public byte rchInputPathName91;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public byte rchInputPathName92;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public byte rchInputPathName93;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		public byte rchInputPathName94;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
		public byte rchInputPathName95;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public byte rchInputPathName96;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public byte rchInputPathName97;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		public byte rchInputPathName98;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		public byte rchInputPathName99;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public byte rchInputPathName100;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public byte rchInputPathName101;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		public byte rchInputPathName102;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		public byte rchInputPathName103;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public byte rchInputPathName104;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public byte rchInputPathName105;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		public byte rchInputPathName106;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		public byte rchInputPathName107;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public byte rchInputPathName108;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		public byte rchInputPathName109;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		public byte rchInputPathName110;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF")]
		public byte rchInputPathName111;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public byte rchInputPathName112;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public byte rchInputPathName113;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		public byte rchInputPathName114;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		public byte rchInputPathName115;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public byte rchInputPathName116;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public byte rchInputPathName117;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public byte rchInputPathName118;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		public byte rchInputPathName119;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public byte rchInputPathName120;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public byte rchInputPathName121;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		public byte rchInputPathName122;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		public byte rchInputPathName123;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public byte rchInputPathName124;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		public byte rchInputPathName125;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		public byte rchInputPathName126;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF")]
		public byte rchInputPathName127;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public byte rchModeName0;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public byte rchModeName1;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public byte rchModeName2;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		public byte rchModeName3;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public byte rchModeName4;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public byte rchModeName5;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		public byte rchModeName6;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		public byte rchModeName7;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public byte rchModeName8;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public byte rchModeName9;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public byte rchModeName10;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public byte rchModeName11;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public byte rchModeName12;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public byte rchModeName13;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		public byte rchModeName14;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		public byte rchModeName15;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public byte rchModeName16;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public byte rchModeName17;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public byte rchModeName18;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public byte rchModeName19;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public byte rchModeName20;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public byte rchModeName21;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		public byte rchModeName22;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		public byte rchModeName23;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public byte rchModeName24;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public byte rchModeName25;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public byte rchModeName26;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public byte rchModeName27;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public byte rchModeName28;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		public byte rchModeName29;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public byte rchModeName30;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		public byte rchModeName31;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public byte rchModeName32;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public byte rchModeName33;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		public byte rchModeName34;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		public byte rchModeName35;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public byte rchModeName36;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		public byte rchModeName37;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		public byte rchModeName38;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
		public byte rchModeName39;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public byte rchModeName40;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public byte rchModeName41;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public byte rchModeName42;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public byte rchModeName43;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public byte rchModeName44;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		public byte rchModeName45;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		public byte rchModeName46;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
		public byte rchModeName47;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public byte rchModeName48;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		public byte rchModeName49;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		public byte rchModeName50;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		public byte rchModeName51;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public byte rchModeName52;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public byte rchModeName53;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		public byte rchModeName54;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		public byte rchModeName55;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public byte rchModeName56;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public byte rchModeName57;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public byte rchModeName58;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public byte rchModeName59;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public byte rchModeName60;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public byte rchModeName61;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		public byte rchModeName62;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
		public byte rchModeName63;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public byte rchModeName64;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public byte rchModeName65;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public byte rchModeName66;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public byte rchModeName67;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public byte rchModeName68;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		public byte rchModeName69;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
		public byte rchModeName70;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
		public byte rchModeName71;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public byte rchModeName72;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public byte rchModeName73;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		public byte rchModeName74;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		public byte rchModeName75;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public byte rchModeName76;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		public byte rchModeName77;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
		public byte rchModeName78;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F")]
		public byte rchModeName79;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public byte rchModeName80;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		public byte rchModeName81;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		public byte rchModeName82;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
		public byte rchModeName83;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public byte rchModeName84;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		public byte rchModeName85;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
		public byte rchModeName86;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x157")]
		public byte rchModeName87;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public byte rchModeName88;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		public byte rchModeName89;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		public byte rchModeName90;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		public byte rchModeName91;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public byte rchModeName92;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		public byte rchModeName93;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
		public byte rchModeName94;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F")]
		public byte rchModeName95;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public byte rchModeName96;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public byte rchModeName97;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public byte rchModeName98;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
		public byte rchModeName99;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public byte rchModeName100;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		public byte rchModeName101;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
		public byte rchModeName102;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
		public byte rchModeName103;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public byte rchModeName104;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		public byte rchModeName105;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		public byte rchModeName106;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
		public byte rchModeName107;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public byte rchModeName108;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		public byte rchModeName109;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		public byte rchModeName110;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
		public byte rchModeName111;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public byte rchModeName112;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public byte rchModeName113;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		public byte rchModeName114;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		public byte rchModeName115;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public byte rchModeName116;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public byte rchModeName117;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
		public byte rchModeName118;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x177")]
		public byte rchModeName119;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public byte rchModeName120;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		public byte rchModeName121;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		public byte rchModeName122;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
		public byte rchModeName123;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public byte rchModeName124;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		public byte rchModeName125;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17E")]
		public byte rchModeName126;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17F")]
		public byte rchModeName127;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public byte rchSlotName0;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		public byte rchSlotName1;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		public byte rchSlotName2;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		public byte rchSlotName3;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public byte rchSlotName4;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public byte rchSlotName5;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
		public byte rchSlotName6;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x187")]
		public byte rchSlotName7;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public byte rchSlotName8;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		public byte rchSlotName9;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		public byte rchSlotName10;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		public byte rchSlotName11;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public byte rchSlotName12;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		public byte rchSlotName13;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
		public byte rchSlotName14;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
		public byte rchSlotName15;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public byte rchSlotName16;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public byte rchSlotName17;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public byte rchSlotName18;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x193")]
		public byte rchSlotName19;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public byte rchSlotName20;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public byte rchSlotName21;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		public byte rchSlotName22;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x197")]
		public byte rchSlotName23;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public byte rchSlotName24;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		public byte rchSlotName25;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		public byte rchSlotName26;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		public byte rchSlotName27;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public byte rchSlotName28;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
		public byte rchSlotName29;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
		public byte rchSlotName30;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
		public byte rchSlotName31;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public byte rchSlotName32;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public byte rchSlotName33;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
		public byte rchSlotName34;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
		public byte rchSlotName35;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public byte rchSlotName36;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
		public byte rchSlotName37;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
		public byte rchSlotName38;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
		public byte rchSlotName39;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public byte rchSlotName40;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public byte rchSlotName41;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public byte rchSlotName42;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
		public byte rchSlotName43;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public byte rchSlotName44;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		public byte rchSlotName45;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
		public byte rchSlotName46;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
		public byte rchSlotName47;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public byte rchSlotName48;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		public byte rchSlotName49;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		public byte rchSlotName50;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
		public byte rchSlotName51;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public byte rchSlotName52;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		public byte rchSlotName53;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B6")]
		public byte rchSlotName54;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B7")]
		public byte rchSlotName55;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public byte rchSlotName56;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		public byte rchSlotName57;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		public byte rchSlotName58;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
		public byte rchSlotName59;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public byte rchSlotName60;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		public byte rchSlotName61;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
		public byte rchSlotName62;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF")]
		public byte rchSlotName63;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public byte rchSlotName64;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		public byte rchSlotName65;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		public byte rchSlotName66;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C3")]
		public byte rchSlotName67;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public byte rchSlotName68;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
		public byte rchSlotName69;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C6")]
		public byte rchSlotName70;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C7")]
		public byte rchSlotName71;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public byte rchSlotName72;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public byte rchSlotName73;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public byte rchSlotName74;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
		public byte rchSlotName75;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public byte rchSlotName76;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		public byte rchSlotName77;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
		public byte rchSlotName78;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
		public byte rchSlotName79;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public byte rchSlotName80;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		public byte rchSlotName81;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		public byte rchSlotName82;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
		public byte rchSlotName83;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public byte rchSlotName84;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
		public byte rchSlotName85;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
		public byte rchSlotName86;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
		public byte rchSlotName87;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public byte rchSlotName88;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		public byte rchSlotName89;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
		public byte rchSlotName90;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
		public byte rchSlotName91;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public byte rchSlotName92;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
		public byte rchSlotName93;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DE")]
		public byte rchSlotName94;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DF")]
		public byte rchSlotName95;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public byte rchSlotName96;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public byte rchSlotName97;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
		public byte rchSlotName98;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
		public byte rchSlotName99;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public byte rchSlotName100;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		public byte rchSlotName101;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E6")]
		public byte rchSlotName102;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E7")]
		public byte rchSlotName103;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public byte rchSlotName104;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public byte rchSlotName105;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		public byte rchSlotName106;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		public byte rchSlotName107;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public byte rchSlotName108;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		public byte rchSlotName109;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
		public byte rchSlotName110;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EF")]
		public byte rchSlotName111;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public byte rchSlotName112;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public byte rchSlotName113;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public byte rchSlotName114;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
		public byte rchSlotName115;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public byte rchSlotName116;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F5")]
		public byte rchSlotName117;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F6")]
		public byte rchSlotName118;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F7")]
		public byte rchSlotName119;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public byte rchSlotName120;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		public byte rchSlotName121;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		public byte rchSlotName122;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB")]
		public byte rchSlotName123;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public byte rchSlotName124;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
		public byte rchSlotName125;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
		public byte rchSlotName126;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FF")]
		public byte rchSlotName127;

		[Token(Token = "0x170000A9")]
		public string rchDevicePathName
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x1114034", Offset = "0x1114034", VA = "0x1114034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public string rchInputPathName
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x11148D0", Offset = "0x11148D0", VA = "0x11148D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public string rchModeName
		{
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x111516C", Offset = "0x111516C", VA = "0x111516C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public string rchSlotName
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x1115A08", Offset = "0x1115A08", VA = "0x1115A08")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x20003B3")]
	public struct VRActiveActionSet_t
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulActionSet;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulRestrictedToDevice;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulSecondaryActionSet;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unPadding;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nPriority;
	}
	[Token(Token = "0x20003B4")]
	public struct VRSkeletalSummaryData_t
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float flFingerCurl0;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flFingerCurl1;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float flFingerCurl2;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float flFingerCurl3;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float flFingerCurl4;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float flFingerSplay0;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float flFingerSplay1;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float flFingerSplay2;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float flFingerSplay3;
	}
	[Token(Token = "0x20003B5")]
	public struct SpatialAnchorPose_t
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mAnchorToAbsoluteTracking;
	}
	[Token(Token = "0x20003B6")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntPtr m_pVRInput;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntPtr m_pVRIOBuffer;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntPtr m_pVRSpatialAnchors;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IntPtr m_pVRDebug;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IntPtr m_pVRNotifications;
	}
	[Token(Token = "0x20003B7")]
	public class OpenVR
	{
		[Token(Token = "0x200076B")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private CVRInput m_pVRInput;

			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CVRIOBuffer m_pVRIOBuffer;

			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private CVRSpatialAnchors m_pVRSpatialAnchors;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private CVRNotifications m_pVRNotifications;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private CVRDebug m_pVRDebug;

			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0xD8A0F8", Offset = "0xD8A0F8", VA = "0xD8A0F8")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xD8B5A8", Offset = "0xD8B5A8", VA = "0xD8B5A8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0xD8B630", Offset = "0xD8B630", VA = "0xD8B630")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xD8A190", Offset = "0xD8A190", VA = "0xD8A190")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0xD8A2B8", Offset = "0xD8A2B8", VA = "0xD8A2B8")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xD8A3E0", Offset = "0xD8A3E0", VA = "0xD8A3E0")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0xD8A508", Offset = "0xD8A508", VA = "0xD8A508")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0xD8A630", Offset = "0xD8A630", VA = "0xD8A630")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0xD8A6F0", Offset = "0xD8A6F0", VA = "0xD8A6F0")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xD8A818", Offset = "0xD8A818", VA = "0xD8A818")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0xD8A940", Offset = "0xD8A940", VA = "0xD8A940")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0xD8AA68", Offset = "0xD8AA68", VA = "0xD8AA68")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0xD8AB90", Offset = "0xD8AB90", VA = "0xD8AB90")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0xD8ACB8", Offset = "0xD8ACB8", VA = "0xD8ACB8")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}

			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0xD8ADE0", Offset = "0xD8ADE0", VA = "0xD8ADE0")]
			public CVRInput VRInput()
			{
				return null;
			}

			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0xD8AF08", Offset = "0xD8AF08", VA = "0xD8AF08")]
			public CVRIOBuffer VRIOBuffer()
			{
				return null;
			}

			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0xD8B030", Offset = "0xD8B030", VA = "0xD8B030")]
			public CVRSpatialAnchors VRSpatialAnchors()
			{
				return null;
			}

			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0xD8B280", Offset = "0xD8B280", VA = "0xD8B280")]
			public CVRDebug VRDebug()
			{
				return null;
			}

			[Token(Token = "0x6002AED")]
			[Address(RVA = "0xD8B158", Offset = "0xD8B158", VA = "0xD8B158")]
			public CVRNotifications VRNotifications()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E4C")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001E4D")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001E4E")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001E4F")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001E50")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001E51")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001E52")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001E53")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001E54")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001E55")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001E56")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001E57")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001E58")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001E59")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001E5A")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001E5B")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001E5C")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001E5D")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001E5E")]
		public const uint k_unHmdVector2PropertyTag = 24u;

		[Token(Token = "0x4001E5F")]
		public const uint k_unHmdQuadPropertyTag = 25u;

		[Token(Token = "0x4001E60")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001E61")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001E62")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001E63")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001E64")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001E65")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001E66")]
		public const uint k_unSkeletonPropertyTag = 36u;

		[Token(Token = "0x4001E67")]
		public const uint k_unSpatialAnchorPosePropertyTag = 40u;

		[Token(Token = "0x4001E68")]
		public const uint k_unJsonPropertyTag = 41u;

		[Token(Token = "0x4001E69")]
		public const uint k_unActiveActionSetPropertyTag = 42u;

		[Token(Token = "0x4001E6A")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001E6B")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001E6C")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001E6D")]
		public const ulong k_ulInvalidActionHandle = 0uL;

		[Token(Token = "0x4001E6E")]
		public const ulong k_ulInvalidActionSetHandle = 0uL;

		[Token(Token = "0x4001E6F")]
		public const ulong k_ulInvalidInputValueHandle = 0uL;

		[Token(Token = "0x4001E70")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001E71")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001E72")]
		public const uint k_unMaxDistortionFunctionParameters = 8u;

		[Token(Token = "0x4001E73")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001E74")]
		public const string IVRSystem_Version = "IVRSystem_020";

		[Token(Token = "0x4001E75")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001E76")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_005";

		[Token(Token = "0x4001E77")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001E78")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001E79")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001E7A")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001E7B")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001E7C")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_006";

		[Token(Token = "0x4001E7D")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001E7E")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001E7F")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001E80")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001E81")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001E82")]
		public const string IVROverlay_Version = "IVROverlay_019";

		[Token(Token = "0x4001E83")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001E84")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001E85")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001E86")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001E87")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001E88")]
		public const string IVRRenderModels_Version = "IVRRenderModels_006";

		[Token(Token = "0x4001E89")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001E8A")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001E8B")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001E8C")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001E8D")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001E8E")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001E8F")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001E90")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001E91")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001E92")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001E93")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001E94")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001E95")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001E96")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001E97")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001E98")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001E99")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001E9A")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001E9B")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001E9C")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001E9D")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001E9E")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001E9F")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001EA0")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001EA1")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001EA2")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Int32 = "basestationPowerManagement";

		[Token(Token = "0x4001EA3")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001EA4")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001EA5")]
		public const string k_pch_SteamVR_MaxRecommendedResolution_Int32 = "maxRecommendedResolution";

		[Token(Token = "0x4001EA6")]
		public const string k_pch_SteamVR_MotionSmoothing_Bool = "motionSmoothing";

		[Token(Token = "0x4001EA7")]
		public const string k_pch_SteamVR_MotionSmoothingOverride_Int32 = "motionSmoothingOverride";

		[Token(Token = "0x4001EA8")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001EA9")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "mirrorView";

		[Token(Token = "0x4001EAA")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001EAB")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001EAC")]
		public const string k_pch_SteamVR_MirrorViewGeometryMaximized_String = "mirrorViewGeometryMaximized";

		[Token(Token = "0x4001EAD")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001EAE")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001EAF")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001EB0")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001EB1")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001EB2")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001EB3")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001EB4")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001EB5")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4001EB6")]
		public const string k_pch_SteamVR_SupersampleManualOverride_Bool = "supersampleManualOverride";

		[Token(Token = "0x4001EB7")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001EB8")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001EB9")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001EBA")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001EBB")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001EBC")]
		public const string k_pch_SteamVR_DebugInputBinding = "debugInputBinding";

		[Token(Token = "0x4001EBD")]
		public const string k_pch_SteamVR_DoNotFadeToGrid = "doNotFadeToGrid";

		[Token(Token = "0x4001EBE")]
		public const string k_pch_SteamVR_RenderCameraMode = "renderCameraMode";

		[Token(Token = "0x4001EBF")]
		public const string k_pch_SteamVR_EnableSharedResourceJournaling = "enableSharedResourceJournaling";

		[Token(Token = "0x4001EC0")]
		public const string k_pch_SteamVR_EnableSafeMode = "enableSafeMode";

		[Token(Token = "0x4001EC1")]
		public const string k_pch_SteamVR_PreferredRefreshRate = "preferredRefreshRate";

		[Token(Token = "0x4001EC2")]
		public const string k_pch_SteamVR_LastVersionNotice = "lastVersionNotice";

		[Token(Token = "0x4001EC3")]
		public const string k_pch_SteamVR_LastVersionNoticeDate = "lastVersionNoticeDate";

		[Token(Token = "0x4001EC4")]
		public const string k_pch_SteamVR_HmdDisplayColorGainR_Float = "hmdDisplayColorGainR";

		[Token(Token = "0x4001EC5")]
		public const string k_pch_SteamVR_HmdDisplayColorGainG_Float = "hmdDisplayColorGainG";

		[Token(Token = "0x4001EC6")]
		public const string k_pch_SteamVR_HmdDisplayColorGainB_Float = "hmdDisplayColorGainB";

		[Token(Token = "0x4001EC7")]
		public const string k_pch_DirectMode_Section = "direct_mode";

		[Token(Token = "0x4001EC8")]
		public const string k_pch_DirectMode_Enable_Bool = "enable";

		[Token(Token = "0x4001EC9")]
		public const string k_pch_DirectMode_Count_Int32 = "count";

		[Token(Token = "0x4001ECA")]
		public const string k_pch_DirectMode_EdidVid_Int32 = "edidVid";

		[Token(Token = "0x4001ECB")]
		public const string k_pch_DirectMode_EdidPid_Int32 = "edidPid";

		[Token(Token = "0x4001ECC")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001ECD")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001ECE")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001ECF")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001ED0")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001ED1")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001ED2")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001ED3")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001ED4")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4001ED5")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations2_String = "PowerManagedBaseStations2";

		[Token(Token = "0x4001ED6")]
		public const string k_pch_Lighthouse_InactivityTimeoutForBaseStations_Int32 = "InactivityTimeoutForBaseStations";

		[Token(Token = "0x4001ED7")]
		public const string k_pch_Lighthouse_EnableImuFallback_Bool = "enableImuFallback";

		[Token(Token = "0x4001ED8")]
		public const string k_pch_Lighthouse_NewPairing_Bool = "newPairing";

		[Token(Token = "0x4001ED9")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001EDA")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001EDB")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001EDC")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4001EDD")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4001EDE")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4001EDF")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001EE0")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001EE1")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001EE2")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001EE3")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001EE4")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001EE5")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001EE6")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001EE7")]
		public const string k_pch_UserInterface_HidePopupsWhenStatusMinimized_Bool = "HidePopupsWhenStatusMinimized";

		[Token(Token = "0x4001EE8")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001EE9")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001EEA")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001EEB")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001EEC")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001EED")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4001EEE")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4001EEF")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4001EF0")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001EF1")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001EF2")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001EF3")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001EF4")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001EF5")]
		public const string k_pch_Perf_PerfGraphInHMD_Bool = "perfGraphInHMD";

		[Token(Token = "0x4001EF6")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001EF7")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001EF8")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001EF9")]
		public const string k_pch_Perf_GPUProfiling_Bool = "GPUProfiling";

		[Token(Token = "0x4001EFA")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001EFB")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001EFC")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001EFD")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001EFE")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001EFF")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001F00")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001F01")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001F02")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001F03")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001F04")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001F05")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001F06")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001F07")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001F08")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001F09")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001F0A")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001F0B")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001F0C")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001F0D")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001F0E")]
		public const string k_pch_Camera_RoomViewMode_Int32 = "cameraRoomViewMode";

		[Token(Token = "0x4001F0F")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001F10")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001F11")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001F12")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001F13")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001F14")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001F15")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001F16")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001F17")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001F18")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001F19")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001F1A")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001F1B")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001F1C")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001F1D")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001F1E")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001F1F")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001F20")]
		public const string k_pch_Dashboard_UseWebDashboard = "useWebDashboard";

		[Token(Token = "0x4001F21")]
		public const string k_pch_Dashboard_UseWebSettings = "useWebSettings";

		[Token(Token = "0x4001F22")]
		public const string k_pch_Dashboard_UseWebIPD = "useWebIPD";

		[Token(Token = "0x4001F23")]
		public const string k_pch_Dashboard_UseWebPowerMenu = "useWebPowerMenu";

		[Token(Token = "0x4001F24")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001F25")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001F26")]
		public const string k_pch_Driver_LoadPriority_Int32 = "loadPriority";

		[Token(Token = "0x4001F27")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4001F28")]
		public const string k_pch_WebInterface_WebEnable_Bool = "WebEnable";

		[Token(Token = "0x4001F29")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4001F2A")]
		public const string k_pch_VRWebHelper_Section = "VRWebHelper";

		[Token(Token = "0x4001F2B")]
		public const string k_pch_VRWebHelper_DebuggerEnabled_Bool = "DebuggerEnabled";

		[Token(Token = "0x4001F2C")]
		public const string k_pch_VRWebHelper_DebuggerPort_Int32 = "DebuggerPort";

		[Token(Token = "0x4001F2D")]
		public const string k_pch_TrackingOverride_Section = "TrackingOverrides";

		[Token(Token = "0x4001F2E")]
		public const string k_pch_App_BindingAutosaveURLSuffix_String = "AutosaveURL";

		[Token(Token = "0x4001F2F")]
		public const string k_pch_App_BindingCurrentURLSuffix_String = "CurrentURL";

		[Token(Token = "0x4001F30")]
		public const string k_pch_App_NeedToUpdateAutosaveSuffix_Bool = "NeedToUpdateAutosave";

		[Token(Token = "0x4001F31")]
		public const string k_pch_Trackers_Section = "trackers";

		[Token(Token = "0x4001F32")]
		public const string k_pch_DesktopUI_Section = "DesktopUI";

		[Token(Token = "0x4001F33")]
		public const string k_pch_LastKnown_Section = "LastKnown";

		[Token(Token = "0x4001F34")]
		public const string k_pch_LastKnown_HMDManufacturer_String = "HMDManufacturer";

		[Token(Token = "0x4001F35")]
		public const string k_pch_LastKnown_HMDModel_String = "HMDModel";

		[Token(Token = "0x4001F36")]
		public const string k_pch_DismissedWarnings_Section = "DismissedWarnings";

		[Token(Token = "0x4001F37")]
		public const string k_pch_Input_Section = "input";

		[Token(Token = "0x4001F38")]
		public const string k_pch_Input_LeftThumbstickRotation_Float = "leftThumbstickRotation";

		[Token(Token = "0x4001F39")]
		public const string k_pch_Input_RightThumbstickRotation_Float = "rightThumbstickRotation";

		[Token(Token = "0x4001F3A")]
		public const string k_pch_Input_ThumbstickDeadzone_Float = "thumbstickDeadzone";

		[Token(Token = "0x4001F3B")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001F3C")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001F3D")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001F3E")]
		public const uint k_unMaxActionNameLength = 64u;

		[Token(Token = "0x4001F3F")]
		public const uint k_unMaxActionSetNameLength = 64u;

		[Token(Token = "0x4001F40")]
		public const uint k_unMaxActionOriginCount = 16u;

		[Token(Token = "0x4001F41")]
		public const uint k_unMaxBoneNameLength = 32u;

		[Token(Token = "0x4001F42")]
		public const string IVRInput_Version = "IVRInput_007";

		[Token(Token = "0x4001F43")]
		public const ulong k_ulInvalidIOBufferHandle = 0uL;

		[Token(Token = "0x4001F44")]
		public const string IVRIOBuffer_Version = "IVRIOBuffer_002";

		[Token(Token = "0x4001F45")]
		public const uint k_ulInvalidSpatialAnchorHandle = 0u;

		[Token(Token = "0x4001F46")]
		public const string IVRSpatialAnchors_Version = "IVRSpatialAnchors_001";

		[Token(Token = "0x4001F47")]
		public const string IVRDebug_Version = "IVRDebug_001";

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF6E38", Offset = "0xAF6E38")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001F49")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000AD")]
		private static uint VRToken
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xD89F48", Offset = "0xD89F48", VA = "0xD89F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05584", Offset = "0xB05584")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xD89FB0", Offset = "0xD89FB0", VA = "0xD89FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05594", Offset = "0xB05594")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xD8A01C", Offset = "0xD8A01C", VA = "0xD8A01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xD8A128", Offset = "0xD8A128", VA = "0xD8A128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xD8A250", Offset = "0xD8A250", VA = "0xD8A250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xD8A378", Offset = "0xD8A378", VA = "0xD8A378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xD8A4A0", Offset = "0xD8A4A0", VA = "0xD8A4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xD8A5C8", Offset = "0xD8A5C8", VA = "0xD8A5C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xD7EE40", Offset = "0xD7EE40", VA = "0xD7EE40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xD8A7B0", Offset = "0xD8A7B0", VA = "0xD8A7B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD8A8D8", Offset = "0xD8A8D8", VA = "0xD8A8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xD8AA00", Offset = "0xD8AA00", VA = "0xD8AA00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xD8AB28", Offset = "0xD8AB28", VA = "0xD8AB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xD8AC50", Offset = "0xD8AC50", VA = "0xD8AC50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public static CVRInput Input
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xD8AD78", Offset = "0xD8AD78", VA = "0xD8AD78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public static CVRIOBuffer IOBuffer
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xD8AEA0", Offset = "0xD8AEA0", VA = "0xD8AEA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public static CVRSpatialAnchors SpatialAnchors
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xD8AFC8", Offset = "0xD8AFC8", VA = "0xD8AFC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public static CVRNotifications Notifications
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xD8B0F0", Offset = "0xD8B0F0", VA = "0xD8B0F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public static CVRDebug Debug
		{
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xD8B218", Offset = "0xD8B218", VA = "0xD8B218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD8993C", Offset = "0xD8993C", VA = "0xD8993C")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD899D0", Offset = "0xD899D0", VA = "0xD899D0")]
		public static uint InitInternal2(ref EVRInitError peError, EVRApplicationType eApplicationType, string pchStartupInfo)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD89A88", Offset = "0xD89A88", VA = "0xD89A88")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD89AFC", Offset = "0xD89AFC", VA = "0xD89AFC")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD89B7C", Offset = "0xD89B7C", VA = "0xD89B7C")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD89BFC", Offset = "0xD89BFC", VA = "0xD89BFC")]
		public static string RuntimePath()
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD89C8C", Offset = "0xD89C8C", VA = "0xD89C8C")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD89D84", Offset = "0xD89D84", VA = "0xD89D84")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD89E30", Offset = "0xD89E30", VA = "0xD89E30")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xD89ED0", Offset = "0xD89ED0", VA = "0xD89ED0")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD8B340", Offset = "0xD8B340", VA = "0xD8B340")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene, string pchStartupInfo = "")
		{
			return null;
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD8B5C8", Offset = "0xD8B5C8", VA = "0xD8B5C8")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD8B624", Offset = "0xD8B624", VA = "0xD8B624")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE4F54", Offset = "0xAE4F54")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1116DFC", Offset = "0x1116DFC", VA = "0x1116DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1116E54", Offset = "0x1116E54", VA = "0x1116E54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1116FF0", Offset = "0x1116FF0", VA = "0x1116FF0")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE4FB8", Offset = "0xAE4FB8")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x200076C")]
		public enum Axis_t
		{
			[Token(Token = "0x4002B19")]
			XAxis,
			[Token(Token = "0x4002B1A")]
			YAxis,
			[Token(Token = "0x4002B1B")]
			ZAxis
		}

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE81F4", Offset = "0xAE81F4")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x4002B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x4002B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AF1")]
				[Address(RVA = "0x1119820", Offset = "0x1119820", VA = "0x1119820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF3")]
				[Address(RVA = "0x1119888", Offset = "0x1119888", VA = "0x1119888", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x1117EB4", Offset = "0x1117EB4", VA = "0x1117EB4")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x11196A4", Offset = "0x11196A4", VA = "0x11196A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x11196A8", Offset = "0x11196A8", VA = "0x11196A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x1119828", Offset = "0x1119828", VA = "0x1119828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6E48", Offset = "0xAF6E48")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6E80", Offset = "0xAF6E80")]
		public Collider childCollider;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6EB8", Offset = "0xAF6EB8")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6EF0", Offset = "0xAF6EF0")]
		public bool hoverLock;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6F28", Offset = "0xAF6F28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6F28", Offset = "0xAF6F28")]
		public bool limited;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF6F88", Offset = "0xAF6F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6F88", Offset = "0xAF6F88")]
		public float minAngle;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF6FE8", Offset = "0xAF6FE8")]
		public bool freezeOnMin;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7020", Offset = "0xAF7020")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7058", Offset = "0xAF7058")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7058", Offset = "0xAF7058")]
		public float maxAngle;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF70B8", Offset = "0xAF70B8")]
		public bool freezeOnMax;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF70F0", Offset = "0xAF70F0")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7128", Offset = "0xAF7128")]
		public bool forceStart;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7160", Offset = "0xAF7160")]
		public float startAngle;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7198", Offset = "0xAF7198")]
		public bool rotateGameObject;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF71D0", Offset = "0xAF71D0")]
		public bool debugPath;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7208", Offset = "0xAF7208")]
		public int dbgPathLimit;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7240", Offset = "0xAF7240")]
		public TextMesh debugText;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7278", Offset = "0xAF7278")]
		public float outAngle;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1117728", Offset = "0x1117728", VA = "0x1117728")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1117788", Offset = "0x1117788", VA = "0x1117788")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x11177A8", Offset = "0x11177A8", VA = "0x11177A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1117BE0", Offset = "0x1117BE0", VA = "0x1117BE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1117E24", Offset = "0x1117E24", VA = "0x1117E24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB055A4", Offset = "0xB055A4")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1117EE0", Offset = "0x1117EE0", VA = "0x1117EE0")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x1118010", Offset = "0x1118010", VA = "0x1118010")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1118180", Offset = "0x1118180", VA = "0x1118180")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x11183EC", Offset = "0x11183EC", VA = "0x11183EC")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1118B70", Offset = "0x1118B70", VA = "0x1118B70")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1119244", Offset = "0x1119244", VA = "0x1119244")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1119400", Offset = "0x1119400", VA = "0x1119400")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1119304", Offset = "0x1119304", VA = "0x1119304")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1117BB4", Offset = "0x1117BB4", VA = "0x1117BB4")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1118704", Offset = "0x1118704", VA = "0x1118704")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x111951C", Offset = "0x111951C", VA = "0x111951C")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE501C", Offset = "0xAE501C")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x200076E")]
		public enum AttachMode
		{
			[Token(Token = "0x4002B24")]
			FixedJoint,
			[Token(Token = "0x4002B25")]
			Force
		}

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1119890", Offset = "0x1119890", VA = "0x1119890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x11198E4", Offset = "0x11198E4", VA = "0x11198E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1119B6C", Offset = "0x1119B6C", VA = "0x1119B6C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x1119C08", Offset = "0x1119C08", VA = "0x1119C08")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1119CA4", Offset = "0x1119CA4", VA = "0x1119CA4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x1119CEC", Offset = "0x1119CEC", VA = "0x1119CEC")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x11199A8", Offset = "0x11199A8", VA = "0x11199A8")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x111A810", Offset = "0x111A810", VA = "0x111A810")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x111AAD8", Offset = "0x111AAD8", VA = "0x111AAD8")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x111F6DC", Offset = "0x111F6DC", VA = "0x111F6DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x111F734", Offset = "0x111F734", VA = "0x111F734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x111F7D8", Offset = "0x111F7D8", VA = "0x111F7D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x111F7F8", Offset = "0x111F7F8", VA = "0x111F7F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x111F818", Offset = "0x111F818", VA = "0x111F818")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x111F8A8", Offset = "0x111F8A8", VA = "0x111F8A8")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x111FDE4", Offset = "0x111FDE4", VA = "0x111FDE4")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x111FFE4", Offset = "0x111FFE4", VA = "0x111FFE4")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1120100", Offset = "0x1120100", VA = "0x1120100")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1120220", Offset = "0x1120220", VA = "0x1120220")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x111FECC", Offset = "0x111FECC", VA = "0x111FECC")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x111FFE8", Offset = "0x111FFE8", VA = "0x111FFE8")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x1120224", Offset = "0x1120224", VA = "0x1120224")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x200076F")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x1120284", Offset = "0x1120284", VA = "0x1120284")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000770")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x1120234", Offset = "0x1120234", VA = "0x1120234")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x20003BD")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x170000BF")]
		public static DebugUI instance
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x11202D4", Offset = "0x11202D4", VA = "0x11202D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x11203A0", Offset = "0x11203A0", VA = "0x11203A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x11203C8", Offset = "0x11203C8", VA = "0x11203C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x11203E4", Offset = "0x11203E4", VA = "0x11203E4")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5080", Offset = "0xAE5080")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x11203EC", Offset = "0x11203EC", VA = "0x11203EC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1120468", Offset = "0x1120468", VA = "0x1120468")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE50E4", Offset = "0xAE50E4")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1120470", Offset = "0x1120470", VA = "0x1120470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x11204E8", Offset = "0x11204E8", VA = "0x11204E8")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1120588", Offset = "0x1120588", VA = "0x1120588")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1120590", Offset = "0x1120590", VA = "0x1120590")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x11205C4", Offset = "0x11205C4", VA = "0x11205C4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x11206BC", Offset = "0x11206BC", VA = "0x11206BC")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8204", Offset = "0xAE8204")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AF9")]
				[Address(RVA = "0x11209AC", Offset = "0x11209AC", VA = "0x11209AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AFB")]
				[Address(RVA = "0x1120A14", Offset = "0x1120A14", VA = "0x1120A14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x1120734", Offset = "0x1120734", VA = "0x1120734")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x11207D0", Offset = "0x11207D0", VA = "0x11207D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0x11207D4", Offset = "0x11207D4", VA = "0x11207D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x11209B4", Offset = "0x11209B4", VA = "0x11209B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x11206C4", Offset = "0x11206C4", VA = "0x11206C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05608", Offset = "0xB05608")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1120760", Offset = "0x1120760", VA = "0x1120760")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1120A1C", Offset = "0x1120A1C", VA = "0x1120A1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1120A84", Offset = "0x1120A84", VA = "0x1120A84")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1120A8C", Offset = "0x1120A8C", VA = "0x1120A8C")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5148", Offset = "0xAE5148")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1120A94", Offset = "0x1120A94", VA = "0x1120A94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1120ABC", Offset = "0x1120ABC", VA = "0x1120ABC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1120E24", Offset = "0x1120E24", VA = "0x1120E24")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1120ED8", Offset = "0x1120ED8", VA = "0x1120ED8")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000772")]
		public enum HandType
		{
			[Token(Token = "0x4002B2A")]
			Left,
			[Token(Token = "0x4002B2B")]
			Right,
			[Token(Token = "0x4002B2C")]
			Any
		}

		[Token(Token = "0x2000773")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x4002B2E")]
			SnapOnAttach = 1,
			[Token(Token = "0x4002B2F")]
			DetachOthers = 2,
			[Token(Token = "0x4002B30")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x4002B31")]
			ParentToHand = 8
		}

		[Token(Token = "0x2000774")]
		public struct AttachedObject
		{
			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8224", Offset = "0xAE8224")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x1121C48", Offset = "0x1121C48", VA = "0x1121C48")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x11233E8", Offset = "0x11233E8", VA = "0x11233E8")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8234", Offset = "0xAE8234")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x1123370", Offset = "0x1123370", VA = "0x1123370")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x1123378", Offset = "0x1123378", VA = "0x1123378")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8244", Offset = "0xAE8244")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B04")]
				[Address(RVA = "0x112380C", Offset = "0x112380C", VA = "0x112380C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B06")]
				[Address(RVA = "0x1123874", Offset = "0x1123874", VA = "0x1123874", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x1121F90", Offset = "0x1121F90", VA = "0x1121F90")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x1123500", Offset = "0x1123500", VA = "0x1123500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x1123504", Offset = "0x1123504", VA = "0x1123504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x1123814", Offset = "0x1123814", VA = "0x1123814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8254", Offset = "0xAE8254")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x1121FBC", Offset = "0x1121FBC", VA = "0x1121FBC")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x1123468", Offset = "0x1123468", VA = "0x1123468")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F92")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF72C0", Offset = "0xAF72C0")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x4001FA7")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x170000C0")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x1120EF4", Offset = "0x1120EF4", VA = "0x1120EF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public bool hoverLocked
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x1120F4C", Offset = "0x1120F4C", VA = "0x1120F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0566C", Offset = "0xB0566C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x1120F54", Offset = "0x1120F54", VA = "0x1120F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0567C", Offset = "0xB0567C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0x1120F60", Offset = "0x1120F60", VA = "0x1120F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0x1120F68", Offset = "0x1120F68", VA = "0x1120F68")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x1121280", Offset = "0x1121280", VA = "0x1121280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x11213F0", Offset = "0x11213F0", VA = "0x11213F0")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x11214C0", Offset = "0x11214C0", VA = "0x11214C0")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x111A124", Offset = "0x111A124", VA = "0x111A124")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x111A48C", Offset = "0x111A48C", VA = "0x111A48C")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1121C50", Offset = "0x1121C50", VA = "0x1121C50")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1121D08", Offset = "0x1121D08", VA = "0x1121D08")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x11212F8", Offset = "0x11212F8", VA = "0x11212F8")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1121DC0", Offset = "0x1121DC0", VA = "0x1121DC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1121F20", Offset = "0x1121F20", VA = "0x1121F20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0568C", Offset = "0xB0568C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x11215E4", Offset = "0x11215E4", VA = "0x11215E4")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1121FC4", Offset = "0x1121FC4", VA = "0x1121FC4")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x112235C", Offset = "0x112235C", VA = "0x112235C")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x11228D8", Offset = "0x11228D8", VA = "0x11228D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x11229E4", Offset = "0x11229E4", VA = "0x11229E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1122A20", Offset = "0x1122A20", VA = "0x1122A20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1122B34", Offset = "0x1122B34", VA = "0x1122B34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1122BE4", Offset = "0x1122BE4", VA = "0x1122BE4")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1122E24", Offset = "0x1122E24", VA = "0x1122E24")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1122E28", Offset = "0x1122E28", VA = "0x1122E28")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x11211B4", Offset = "0x11211B4", VA = "0x11211B4")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1122CC4", Offset = "0x1122CC4", VA = "0x1122CC4")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1118684", Offset = "0x1118684", VA = "0x1118684")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1117D78", Offset = "0x1117D78", VA = "0x1117D78")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x111834C", Offset = "0x111834C", VA = "0x111834C")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1118AD0", Offset = "0x1118AD0", VA = "0x1118AD0")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x11180E0", Offset = "0x11180E0", VA = "0x11180E0")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1122F0C", Offset = "0x1122F0C", VA = "0x1122F0C")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1123264", Offset = "0x1123264", VA = "0x1123264")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE51AC", Offset = "0xAE51AC")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF72D0", Offset = "0xAF72D0")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7308", Offset = "0xAF7308")]
		public int teethCount;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7340", Offset = "0xAF7340")]
		public int minimumPulseDuration;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7378", Offset = "0xAF7378")]
		public int maximumPulseDuration;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF73B0", Offset = "0xAF73B0")]
		public UnityEvent onPulse;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x112387C", Offset = "0x112387C", VA = "0x112387C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x112390C", Offset = "0x112390C", VA = "0x112390C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1123914", Offset = "0x1123914", VA = "0x1123914")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x112391C", Offset = "0x112391C", VA = "0x112391C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x11239CC", Offset = "0x11239CC", VA = "0x11239CC")]
		private void Pulse()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1123AA4", Offset = "0x1123AA4", VA = "0x1123AA4")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1123AC8", Offset = "0x1123AC8", VA = "0x1123AC8")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x1123AF0", Offset = "0x1123AF0", VA = "0x1123AF0")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF73E8", Offset = "0xAF73E8")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1123AF8", Offset = "0x1123AF8", VA = "0x1123AF8")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x170000C4")]
		public static InputModule instance
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0x1123B08", Offset = "0x1123B08", VA = "0x1123B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1123BD4", Offset = "0x1123BD4", VA = "0x1123BD4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1123C64", Offset = "0x1123C64", VA = "0x1123C64")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1123D50", Offset = "0x1123D50", VA = "0x1123D50")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1123E54", Offset = "0x1123E54", VA = "0x1123E54")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1123E5C", Offset = "0x1123E5C", VA = "0x1123E5C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1123F94", Offset = "0x1123F94", VA = "0x1123F94")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x2000779")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x200077A")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x140000D7")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0x1123F9C", Offset = "0x1123F9C", VA = "0x1123F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB056F0", Offset = "0xB056F0")]
			add
			{
			}
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x1124040", Offset = "0x1124040", VA = "0x1124040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05700", Offset = "0xB05700")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D8")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0x11240E4", Offset = "0x11240E4", VA = "0x11240E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05710", Offset = "0xB05710")]
			add
			{
			}
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x1124188", Offset = "0x1124188", VA = "0x1124188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05720", Offset = "0xB05720")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x112422C", Offset = "0x112422C", VA = "0x112422C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x11245D0", Offset = "0x11245D0", VA = "0x11245D0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1124974", Offset = "0x1124974", VA = "0x1124974")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5210", Offset = "0xAE5210")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x11249FC", Offset = "0x11249FC", VA = "0x11249FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1124BB4", Offset = "0x1124BB4", VA = "0x1124BB4")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5274", Offset = "0xAE5274")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1125120", Offset = "0x1125120", VA = "0x1125120")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x112513C", Offset = "0x112513C", VA = "0x112513C")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1125158", Offset = "0x1125158", VA = "0x1125158")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1125174", Offset = "0x1125174", VA = "0x1125174")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1125190", Offset = "0x1125190", VA = "0x1125190")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x200077B")]
		public enum ItemPackageType
		{
			[Token(Token = "0x4002B3D")]
			Unrestricted,
			[Token(Token = "0x4002B3E")]
			OneHanded,
			[Token(Token = "0x4002B3F")]
			TwoHanded
		}

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1125198", Offset = "0x1125198", VA = "0x1125198")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x11251A0", Offset = "0x11251A0", VA = "0x11251A0")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE52D8", Offset = "0xAE52D8")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x170000C5")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x11251A8", Offset = "0x11251A8", VA = "0x11251A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x11251B0", Offset = "0x11251B0", VA = "0x11251B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x11251B4", Offset = "0x11251B4", VA = "0x11251B4")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x112570C", Offset = "0x112570C", VA = "0x112570C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1125710", Offset = "0x1125710", VA = "0x1125710")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x11257E8", Offset = "0x11257E8", VA = "0x11257E8")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x112541C", Offset = "0x112541C", VA = "0x112541C")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x11258DC", Offset = "0x11258DC", VA = "0x11258DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1125988", Offset = "0x1125988", VA = "0x1125988")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1125B80", Offset = "0x1125B80", VA = "0x1125B80")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1125A84", Offset = "0x1125A84", VA = "0x1125A84")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x112606C", Offset = "0x112606C", VA = "0x112606C")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x112617C", Offset = "0x112617C", VA = "0x112617C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1125EC4", Offset = "0x1125EC4", VA = "0x1125EC4")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x11261C0", Offset = "0x11261C0", VA = "0x11261C0")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x1125BDC", Offset = "0x1125BDC", VA = "0x1125BDC")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1126320", Offset = "0x1126320", VA = "0x1126320")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1126338", Offset = "0x1126338", VA = "0x1126338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x112649C", Offset = "0x112649C", VA = "0x112649C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x11264F8", Offset = "0x11264F8", VA = "0x11264F8")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x1126500", Offset = "0x1126500", VA = "0x1126500")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1126600", Offset = "0x1126600", VA = "0x1126600")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x11266A4", Offset = "0x11266A4", VA = "0x11266A4")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x11266B4", Offset = "0x11266B4", VA = "0x11266B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1126794", Offset = "0x1126794", VA = "0x1126794")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x11267A4", Offset = "0x11267A4", VA = "0x11267A4")]
		private void Apply()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1126860", Offset = "0x1126860", VA = "0x1126860")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1126870", Offset = "0x1126870", VA = "0x1126870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1126950", Offset = "0x1126950", VA = "0x1126950")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x11269C8", Offset = "0x11269C8", VA = "0x11269C8")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x11269D0", Offset = "0x11269D0", VA = "0x11269D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1126A84", Offset = "0x1126A84", VA = "0x1126A84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1126BC8", Offset = "0x1126BC8", VA = "0x1126BC8")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE533C", Offset = "0xAE533C")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1126BD0", Offset = "0x1126BD0", VA = "0x1126BD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1126C28", Offset = "0x1126C28", VA = "0x1126C28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1126F60", Offset = "0x1126F60", VA = "0x1126F60")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x11271F4", Offset = "0x11271F4", VA = "0x11271F4")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1126D64", Offset = "0x1126D64", VA = "0x1126D64")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1127080", Offset = "0x1127080", VA = "0x1127080")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x11272E0", Offset = "0x11272E0", VA = "0x11272E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1127498", Offset = "0x1127498", VA = "0x1127498")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD7BB70", Offset = "0xD7BB70", VA = "0xD7BB70")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE53A0", Offset = "0xAE53A0")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7450", Offset = "0xAF7450")]
		public AudioClip[] waveFile;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7488", Offset = "0xAF7488")]
		public bool stopOnPlay;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF74C0", Offset = "0xAF74C0")]
		public bool disableOnEnd;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF74F8", Offset = "0xAF74F8")]
		public bool looping;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7530", Offset = "0xAF7530")]
		public bool stopOnEnd;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7568", Offset = "0xAF7568")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF75A0", Offset = "0xAF75A0")]
		public bool useRandomVolume;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF75D8", Offset = "0xAF75D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF75D8", Offset = "0xAF75D8")]
		public float volMin;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF762C", Offset = "0xAF762C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF762C", Offset = "0xAF762C")]
		public float volMax;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7680", Offset = "0xAF7680")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7680", Offset = "0xAF7680")]
		public bool useRandomPitch;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF76E0", Offset = "0xAF76E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF76E0", Offset = "0xAF76E0")]
		public float pitchMin;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7734", Offset = "0xAF7734")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF7734", Offset = "0xAF7734")]
		public float pitchMax;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7788", Offset = "0xAF7788")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7788", Offset = "0xAF7788")]
		public bool useRetriggerTime;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF77E8", Offset = "0xAF77E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF77E8", Offset = "0xAF77E8")]
		public float timeInitial;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7840", Offset = "0xAF7840")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF7840", Offset = "0xAF7840")]
		public float timeMin;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7898", Offset = "0xAF7898")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF7898", Offset = "0xAF7898")]
		public float timeMax;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF78F0", Offset = "0xAF78F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF78F0", Offset = "0xAF78F0")]
		public bool useRandomSilence;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7950", Offset = "0xAF7950")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF7950", Offset = "0xAF7950")]
		public float percentToNotPlay;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF79A4", Offset = "0xAF79A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF79A4", Offset = "0xAF79A4")]
		public float delayOffsetTime;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD7BB78", Offset = "0xD7BB78", VA = "0xD7BB78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD7BCA8", Offset = "0xD7BCA8", VA = "0xD7BCA8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD7BCB8", Offset = "0xD7BCB8", VA = "0xD7BCB8")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD7BDF4", Offset = "0xD7BDF4", VA = "0xD7BDF4")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD7BD30", Offset = "0xD7BD30", VA = "0xD7BD30")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD7BFD4", Offset = "0xD7BFD4", VA = "0xD7BFD4")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD7BFFC", Offset = "0xD7BFFC", VA = "0xD7BFFC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD7BEBC", Offset = "0xD7BEBC", VA = "0xD7BEBC")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD7C018", Offset = "0xD7C018", VA = "0xD7C018")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7A04", Offset = "0xAF7A04")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7A3C", Offset = "0xAF7A3C")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7A74", Offset = "0xAF7A74")]
		public Hand[] hands;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7AAC", Offset = "0xAF7AAC")]
		public Collider headCollider;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7AE4", Offset = "0xAF7AE4")]
		public GameObject rigSteamVR;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7B1C", Offset = "0xAF7B1C")]
		public GameObject rig2DFallback;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7B54", Offset = "0xAF7B54")]
		public Transform audioListener;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x170000C6")]
		public static Player instance
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xD7C038", Offset = "0xD7C038", VA = "0xD7C038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public int handCount
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xD7C104", Offset = "0xD7C104", VA = "0xD7C104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C8")]
		public Hand leftHand
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xD7C244", Offset = "0xD7C244", VA = "0xD7C244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public Hand rightHand
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xD7C310", Offset = "0xD7C310", VA = "0xD7C310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xD7C3E0", Offset = "0xD7C3E0", VA = "0xD7C3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xD7C474", Offset = "0xD7C474", VA = "0xD7C474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public Transform hmdTransform
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xD7C508", Offset = "0xD7C508", VA = "0xD7C508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public float eyeHeight
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xD7C5AC", Offset = "0xD7C5AC", VA = "0xD7C5AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CE")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xD7C73C", Offset = "0xD7C73C", VA = "0xD7C73C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000CF")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xD7C8F8", Offset = "0xD7C8F8", VA = "0xD7C8F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD7C194", Offset = "0xD7C194", VA = "0xD7C194")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD7CAC8", Offset = "0xD7CAC8", VA = "0xD7CAC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD7CB50", Offset = "0xD7CB50", VA = "0xD7CB50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD7CD8C", Offset = "0xD7CD8C", VA = "0xD7CD8C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD7D2F8", Offset = "0xD7D2F8", VA = "0xD7D2F8")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD7CBE0", Offset = "0xD7CBE0", VA = "0xD7CBE0")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xD7D45C", Offset = "0xD7D45C", VA = "0xD7D45C")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xD7D460", Offset = "0xD7D460", VA = "0xD7D460")]
		public Player()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xD7D470", Offset = "0xD7D470", VA = "0xD7D470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xD7DA48", Offset = "0xD7DA48", VA = "0xD7DA48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xD7DB18", Offset = "0xD7DB18", VA = "0xD7DB18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xD7DBE8", Offset = "0xD7DBE8", VA = "0xD7DBE8")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xD7DC08", Offset = "0xD7DC08", VA = "0xD7DC08")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xD7DC28", Offset = "0xD7DC28", VA = "0xD7DC28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xD7DE6C", Offset = "0xD7DE6C", VA = "0xD7DE6C")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xD7DE74", Offset = "0xD7DE74", VA = "0xD7DE74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xD7DF1C", Offset = "0xD7DF1C", VA = "0xD7DF1C")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xD7DF24", Offset = "0xD7DF24", VA = "0xD7DF24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xD7DF7C", Offset = "0xD7DF7C", VA = "0xD7DF7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xD7E068", Offset = "0xD7E068", VA = "0xD7E068")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xD7E078", Offset = "0xD7E078", VA = "0xD7E078")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xD7E0E8", Offset = "0xD7E0E8", VA = "0xD7E0E8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xD7E224", Offset = "0xD7E224", VA = "0xD7E224")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xD7E2B8", Offset = "0xD7E2B8", VA = "0xD7E2B8")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xD7E34C", Offset = "0xD7E34C", VA = "0xD7E34C")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xD7E354", Offset = "0xD7E354", VA = "0xD7E354")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xD7E3AC", Offset = "0xD7E3AC", VA = "0xD7E3AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xD7E534", Offset = "0xD7E534", VA = "0xD7E534")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xD7E53C", Offset = "0xD7E53C", VA = "0xD7E53C")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xD7E650", Offset = "0xD7E650", VA = "0xD7E650")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xD7E658", Offset = "0xD7E658", VA = "0xD7E658")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xD7E720", Offset = "0xD7E720", VA = "0xD7E720")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xD7EA58", Offset = "0xD7EA58", VA = "0xD7EA58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xD7EBF4", Offset = "0xD7EBF4", VA = "0xD7EBF4")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xD7EBFC", Offset = "0xD7EBFC", VA = "0xD7EBFC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xD7EC04", Offset = "0xD7EC04", VA = "0xD7EC04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xD7E7C0", Offset = "0xD7E7C0", VA = "0xD7E7C0")]
		private void ShowController()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xD7EAF8", Offset = "0xD7EAF8", VA = "0xD7EAF8")]
		private void HideController()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xD7EFA4", Offset = "0xD7EFA4", VA = "0xD7EFA4")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xD7F2B0", Offset = "0xD7F2B0", VA = "0xD7F2B0")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5404", Offset = "0xAE5404")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5404", Offset = "0xAE5404")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5404", Offset = "0xAE5404")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8264", Offset = "0xAE8264")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B14")]
				[Address(RVA = "0xD87000", Offset = "0xD87000", VA = "0xD87000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B16")]
				[Address(RVA = "0xD87068", Offset = "0xD87068", VA = "0xD87068", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0xD86E20", Offset = "0xD86E20", VA = "0xD86E20")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xD86F38", Offset = "0xD86F38", VA = "0xD86F38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B13")]
			[Address(RVA = "0xD86F3C", Offset = "0xD86F3C", VA = "0xD86F3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xD87008", Offset = "0xD87008", VA = "0xD87008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7B8C", Offset = "0xAF7B8C")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7BD8", Offset = "0xAF7BD8")]
		public string attachmentPoint;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7C10", Offset = "0xAF7C10")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7C48", Offset = "0xAF7C48")]
		public bool restoreOriginalParent;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xD85D70", Offset = "0xD85D70", VA = "0xD85D70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xD85E04", Offset = "0xD85E04", VA = "0xD85E04")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xD85EE4", Offset = "0xD85EE4", VA = "0xD85EE4")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xD85F68", Offset = "0xD85F68", VA = "0xD85F68")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xD86040", Offset = "0xD86040", VA = "0xD86040")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xD862DC", Offset = "0xD862DC", VA = "0xD862DC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xD86B2C", Offset = "0xD86B2C", VA = "0xD86B2C")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xD86DA4", Offset = "0xD86DA4", VA = "0xD86DA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05730", Offset = "0xB05730")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xD86E4C", Offset = "0xD86E4C", VA = "0xD86E4C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xD86E8C", Offset = "0xD86E8C", VA = "0xD86E8C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xD86EE4", Offset = "0xD86EE4", VA = "0xD86EE4")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE54B8", Offset = "0xAE54B8")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xD87070", Offset = "0xD87070", VA = "0xD87070")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xD8715C", Offset = "0xD8715C", VA = "0xD8715C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xD8721C", Offset = "0xD8721C", VA = "0xD8721C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xD872E0", Offset = "0xD872E0", VA = "0xD872E0")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xD873B4", Offset = "0xD873B4", VA = "0xD873B4")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xD87410", Offset = "0xD87410", VA = "0xD87410")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xD87418", Offset = "0xD87418", VA = "0xD87418")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xD87514", Offset = "0xD87514", VA = "0xD87514")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xD875D8", Offset = "0xD875D8", VA = "0xD875D8")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xD875E0", Offset = "0xD875E0", VA = "0xD875E0")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public static class Util
	{
		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8274", Offset = "0xAE8274")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B1A")]
				[Address(RVA = "0xD89158", Offset = "0xD89158", VA = "0xD89158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1C")]
				[Address(RVA = "0xD891C0", Offset = "0xD891C0", VA = "0xD891C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xD888CC", Offset = "0xD888CC", VA = "0xD888CC")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xD88FF0", Offset = "0xD88FF0", VA = "0xD88FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xD88FF4", Offset = "0xD88FF4", VA = "0xD88FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0xD89160", Offset = "0xD89160", VA = "0xD89160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8284", Offset = "0xAE8284")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x6002B1E")]
			public <>c__47()
			{
			}

			[Token(Token = "0x6002B1F")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4002049")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x400204A")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x400204B")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x400204C")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x400204D")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x400204E")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x400204F")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x4002050")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x4002051")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x4002052")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xD875E8", Offset = "0xD875E8", VA = "0xD875E8")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xD82C78", Offset = "0xD82C78", VA = "0xD82C78")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xD87604", Offset = "0xD87604", VA = "0xD87604")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xD8762C", Offset = "0xD8762C", VA = "0xD8762C")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xD87744", Offset = "0xD87744", VA = "0xD87744")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xD8791C", Offset = "0xD8791C", VA = "0xD8791C")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xD87A58", Offset = "0xD87A58", VA = "0xD87A58")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xD87B94", Offset = "0xD87B94", VA = "0xD87B94")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xD87BA4", Offset = "0xD87BA4", VA = "0xD87BA4")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xD87BE0", Offset = "0xD87BE0", VA = "0xD87BE0")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xD87C10", Offset = "0xD87C10", VA = "0xD87C10")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xD87CC8", Offset = "0xD87CC8", VA = "0xD87CC8")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001C05")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x6001C06")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x6001C07")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xD87D90", Offset = "0xD87D90", VA = "0xD87D90")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xD87E90", Offset = "0xD87E90", VA = "0xD87E90")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0B")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001C0E")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x6001C0F")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001C10")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x6001C11")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xD8818C", Offset = "0xD8818C", VA = "0xD8818C")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xD84804", Offset = "0xD84804", VA = "0xD84804")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xD7EEA8", Offset = "0xD7EEA8", VA = "0xD7EEA8")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xD88244", Offset = "0xD88244", VA = "0xD88244")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xD88430", Offset = "0xD88430", VA = "0xD88430")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xD884BC", Offset = "0xD884BC", VA = "0xD884BC")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xD885D8", Offset = "0xD885D8", VA = "0xD885D8")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xD88708", Offset = "0xD88708", VA = "0xD88708")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xD88850", Offset = "0xD88850", VA = "0xD88850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05794", Offset = "0xB05794")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xD888F8", Offset = "0xD888F8", VA = "0xD888F8")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xD88900", Offset = "0xD88900", VA = "0xD88900")]
		public static void Quit()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xD88908", Offset = "0xD88908", VA = "0xD88908")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x6001C1E")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x6001C1F")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xD889C0", Offset = "0xD889C0", VA = "0xD889C0")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xD88A70", Offset = "0xD88A70", VA = "0xD88A70")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xD88BEC", Offset = "0xD88BEC", VA = "0xD88BEC")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xD88C80", Offset = "0xD88C80", VA = "0xD88C80")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xD88D4C", Offset = "0xD88D4C", VA = "0xD88D4C")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xD88E60", Offset = "0xD88E60", VA = "0xD88E60")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xD88F04", Offset = "0xD88F04", VA = "0xD88F04")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8294", Offset = "0xAE8294")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x17000316")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B23")]
				[Address(RVA = "0x1116D7C", Offset = "0x1116D7C", VA = "0x1116D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000317")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B25")]
				[Address(RVA = "0x1116DE4", Offset = "0x1116DE4", VA = "0x1116DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x1116BF4", Offset = "0x1116BF4", VA = "0x1116BF4")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x1116C88", Offset = "0x1116C88", VA = "0x1116C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x1116C8C", Offset = "0x1116C8C", VA = "0x1116C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x1116D84", Offset = "0x1116D84", VA = "0x1116D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1116B40", Offset = "0x1116B40", VA = "0x1116B40")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1116B84", Offset = "0x1116B84", VA = "0x1116B84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05828", Offset = "0xB05828")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x1116C20", Offset = "0x1116C20", VA = "0x1116C20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1116C80", Offset = "0x1116C80", VA = "0x1116C80")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82A4", Offset = "0xAE82A4")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B29")]
				[Address(RVA = "0xD898CC", Offset = "0xD898CC", VA = "0xD898CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B2B")]
				[Address(RVA = "0xD89934", Offset = "0xD89934", VA = "0xD89934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B26")]
			[Address(RVA = "0xD8949C", Offset = "0xD8949C", VA = "0xD8949C")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xD894DC", Offset = "0xD894DC", VA = "0xD894DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B28")]
			[Address(RVA = "0xD894E0", Offset = "0xD894E0", VA = "0xD894E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0xD898D4", Offset = "0xD898D4", VA = "0xD898D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7C80", Offset = "0xAF7C80")]
		public int velocityAverageFrames;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7CB8", Offset = "0xAF7CB8")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xD8628C", Offset = "0xD8628C", VA = "0xD8628C")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xD8676C", Offset = "0xD8676C", VA = "0xD8676C")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xD8679C", Offset = "0xD8679C", VA = "0xD8679C")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xD86964", Offset = "0xD86964", VA = "0xD86964")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xD89238", Offset = "0xD89238", VA = "0xD89238")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xD8941C", Offset = "0xD8941C", VA = "0xD8941C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xD891C8", Offset = "0xD891C8", VA = "0xD891C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB0588C", Offset = "0xB0588C")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xD894C8", Offset = "0xD894C8", VA = "0xD894C8")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x2000781")]
		private enum OffsetType
		{
			[Token(Token = "0x4002B53")]
			Up,
			[Token(Token = "0x4002B54")]
			Right,
			[Token(Token = "0x4002B55")]
			Forward,
			[Token(Token = "0x4002B56")]
			Back
		}

		[Token(Token = "0x2000782")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x111D004", Offset = "0x111D004", VA = "0x111D004")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82B4", Offset = "0xAE82B4")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x1700031A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B30")]
				[Address(RVA = "0x111EB24", Offset = "0x111EB24", VA = "0x111EB24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B32")]
				[Address(RVA = "0x111EB8C", Offset = "0x111EB8C", VA = "0x111EB8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x111D81C", Offset = "0x111D81C", VA = "0x111D81C")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x111E8A8", Offset = "0x111E8A8", VA = "0x111E8A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x111E8AC", Offset = "0x111E8AC", VA = "0x111E8AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x111EB2C", Offset = "0x111EB2C", VA = "0x111EB2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82C4", Offset = "0xAE82C4")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x1700031C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B36")]
				[Address(RVA = "0x111EDCC", Offset = "0x111EDCC", VA = "0x111EDCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B38")]
				[Address(RVA = "0x111EE34", Offset = "0x111EE34", VA = "0x111EE34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x111D8B8", Offset = "0x111D8B8", VA = "0x111D8B8")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x111EB94", Offset = "0x111EB94", VA = "0x111EB94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x111EB98", Offset = "0x111EB98", VA = "0x111EB98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x111EDD4", Offset = "0x111EDD4", VA = "0x111EDD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7CF0", Offset = "0xAF7CF0")]
		public bool debugHints;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7D28", Offset = "0xAF7D28")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x170000D0")]
		public bool initialized
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x111ABC4", Offset = "0x111ABC4", VA = "0x111ABC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB058F0", Offset = "0xB058F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x111ABCC", Offset = "0x111ABCC", VA = "0x111ABCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05900", Offset = "0xB05900")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x111ABD8", Offset = "0x111ABD8", VA = "0x111ABD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x111AC94", Offset = "0x111AC94", VA = "0x111AC94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x111ACBC", Offset = "0x111ACBC", VA = "0x111ACBC")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x111AD68", Offset = "0x111AD68", VA = "0x111AD68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x111AD88", Offset = "0x111AD88", VA = "0x111AD88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x111AE28", Offset = "0x111AE28", VA = "0x111AE28")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x111AFB4", Offset = "0x111AFB4", VA = "0x111AFB4")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x111B18C", Offset = "0x111B18C", VA = "0x111B18C")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x111BA74", Offset = "0x111BA74", VA = "0x111BA74")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x111CAAC", Offset = "0x111CAAC", VA = "0x111CAAC")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x111D00C", Offset = "0x111D00C", VA = "0x111D00C")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x111AE4C", Offset = "0x111AE4C", VA = "0x111AE4C")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x111D3AC", Offset = "0x111D3AC", VA = "0x111D3AC")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x111D644", Offset = "0x111D644", VA = "0x111D644")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x111D7AC", Offset = "0x111D7AC", VA = "0x111D7AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05910", Offset = "0xB05910")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x111D848", Offset = "0x111D848", VA = "0x111D848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05974", Offset = "0xB05974")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x111D8E4", Offset = "0x111D8E4", VA = "0x111D8E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x111DBE8", Offset = "0x111DBE8", VA = "0x111DBE8")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x111ADC0", Offset = "0x111ADC0", VA = "0x111ADC0")]
		private void Clear()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x111DEE4", Offset = "0x111DEE4", VA = "0x111DEE4")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x111E0C4", Offset = "0x111E0C4", VA = "0x111E0C4")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x111AE8C", Offset = "0x111AE8C", VA = "0x111AE8C")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x111E1B8", Offset = "0x111E1B8", VA = "0x111E1B8")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x111E288", Offset = "0x111E288", VA = "0x111E288")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1117F60", Offset = "0x1117F60", VA = "0x1117F60")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1117CC8", Offset = "0x1117CC8", VA = "0x1117CC8")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x111E360", Offset = "0x111E360", VA = "0x111E360")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x111E3FC", Offset = "0x111E3FC", VA = "0x111E3FC")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x111E4B0", Offset = "0x111E4B0", VA = "0x111E4B0")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x111E57C", Offset = "0x111E57C", VA = "0x111E57C")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x111E62C", Offset = "0x111E62C", VA = "0x111E62C")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x111E6C8", Offset = "0x111E6C8", VA = "0x111E6C8")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x111E78C", Offset = "0x111E78C", VA = "0x111E78C")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class ControllerHintsExample : MonoBehaviour
	{
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82D4", Offset = "0xAE82D4")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x1700031E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3C")]
				[Address(RVA = "0x111F3B0", Offset = "0x111F3B0", VA = "0x111F3B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3E")]
				[Address(RVA = "0x111F418", Offset = "0x111F418", VA = "0x111F418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x111F080", Offset = "0x111F080", VA = "0x111F080")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x111F0E0", Offset = "0x111F0E0", VA = "0x111F0E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x111F0E4", Offset = "0x111F0E4", VA = "0x111F0E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0x111F3B8", Offset = "0x111F3B8", VA = "0x111F3B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82E4", Offset = "0xAE82E4")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x17000320")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B42")]
				[Address(RVA = "0x111F66C", Offset = "0x111F66C", VA = "0x111F66C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B44")]
				[Address(RVA = "0x111F6D4", Offset = "0x111F6D4", VA = "0x111F6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x111F0AC", Offset = "0x111F0AC", VA = "0x111F0AC")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x111F420", Offset = "0x111F420", VA = "0x111F420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x111F424", Offset = "0x111F424", VA = "0x111F424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x111F674", Offset = "0x111F674", VA = "0x111F674", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x111EE3C", Offset = "0x111EE3C", VA = "0x111EE3C")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x111EF00", Offset = "0x111EF00", VA = "0x111EF00")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x111EFC4", Offset = "0x111EFC4", VA = "0x111EFC4")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x111EE90", Offset = "0x111EE90", VA = "0x111EE90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB059D8", Offset = "0xB059D8")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x111EF54", Offset = "0x111EF54", VA = "0x111EF54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05A3C", Offset = "0xB05A3C")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x111F0D8", Offset = "0x111F0D8", VA = "0x111F0D8")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE552C", Offset = "0xAE552C")]
	public class InteractableExample : MonoBehaviour
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1124BBC", Offset = "0x1124BBC", VA = "0x1124BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1124C2C", Offset = "0x1124C2C", VA = "0x1124C2C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1124CBC", Offset = "0x1124CBC", VA = "0x1124CBC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x1124D18", Offset = "0x1124D18", VA = "0x1124D18")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1124F00", Offset = "0x1124F00", VA = "0x1124F00")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1124FA0", Offset = "0x1124FA0", VA = "0x1124FA0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1125030", Offset = "0x1125030", VA = "0x1125030")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1125108", Offset = "0x1125108", VA = "0x1125108")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x112510C", Offset = "0x112510C", VA = "0x112510C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1125110", Offset = "0x1125110", VA = "0x1125110")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class AllowTeleportWhileAttachedToHand : MonoBehaviour
	{
		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1116DEC", Offset = "0x1116DEC", VA = "0x1116DEC")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class ChaperoneInfo : MonoBehaviour
	{
		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE82F4", Offset = "0xAE82F4")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x17000322")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B48")]
				[Address(RVA = "0x11176B8", Offset = "0x11176B8", VA = "0x11176B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000323")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4A")]
				[Address(RVA = "0x1117720", Offset = "0x1117720", VA = "0x1117720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x111730C", Offset = "0x111730C", VA = "0x111730C")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x11173AC", Offset = "0x11173AC", VA = "0x11173AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x11173B0", Offset = "0x11173B0", VA = "0x11173B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x11176C0", Offset = "0x11176C0", VA = "0x11176C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7D38", Offset = "0xAF7D38")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7D48", Offset = "0xAF7D48")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7D58", Offset = "0xAF7D58")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7D68", Offset = "0xAF7D68")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x170000D1")]
		public bool initialized
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x1116FF8", Offset = "0x1116FF8", VA = "0x1116FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AA0", Offset = "0xB05AA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x1117000", Offset = "0x1117000", VA = "0x1117000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AB0", Offset = "0xB05AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public float playAreaSizeX
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x111700C", Offset = "0x111700C", VA = "0x111700C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AC0", Offset = "0xB05AC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x1117014", Offset = "0x1117014", VA = "0x1117014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AD0", Offset = "0xB05AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x111701C", Offset = "0x111701C", VA = "0x111701C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AE0", Offset = "0xB05AE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1117024", Offset = "0x1117024", VA = "0x1117024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05AF0", Offset = "0xB05AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public bool roomscale
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x111702C", Offset = "0x111702C", VA = "0x111702C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05B00", Offset = "0xB05B00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x1117034", Offset = "0x1117034", VA = "0x1117034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05B10", Offset = "0xB05B10")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x11170DC", Offset = "0x11170DC", VA = "0x11170DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x1117040", Offset = "0x1117040", VA = "0x1117040")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x111729C", Offset = "0x111729C", VA = "0x111729C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05B20", Offset = "0xB05B20")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x1117338", Offset = "0x1117338", VA = "0x1117338")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class IgnoreTeleportTrace : MonoBehaviour
	{
		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1123B00", Offset = "0x1123B00", VA = "0x1123B00")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8304", Offset = "0xAE8304")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000324")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B4E")]
				[Address(RVA = "0xD83FCC", Offset = "0xD83FCC", VA = "0xD83FCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000325")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0xD84034", Offset = "0xD84034", VA = "0xD84034", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xD839AC", Offset = "0xD839AC", VA = "0xD839AC")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xD83D60", Offset = "0xD83D60", VA = "0xD83D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xD83D64", Offset = "0xD83D64", VA = "0xD83D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xD83FD4", Offset = "0xD83FD4", VA = "0xD83FD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7D78", Offset = "0xAF7D78")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7DB0", Offset = "0xAF7DB0")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7DE8", Offset = "0xAF7DE8")]
		public AudioClip teleportSound;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF7E20", Offset = "0xAF7E20")]
		public bool debugFloor;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x170000D6")]
		public static Teleport instance
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xD7F580", Offset = "0xD7F580", VA = "0xD7F580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xD7F394", Offset = "0xD7F394", VA = "0xD7F394")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xD7F438", Offset = "0xD7F438", VA = "0xD7F438")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xD7F4DC", Offset = "0xD7F4DC", VA = "0xD7F4DC")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xD7F6A8", Offset = "0xD7F6A8", VA = "0xD7F6A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xD7F85C", Offset = "0xD7F85C", VA = "0xD7F85C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xD7FDEC", Offset = "0xD7FDEC", VA = "0xD7FDEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xD80A0C", Offset = "0xD80A0C", VA = "0xD80A0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xD7FCAC", Offset = "0xD7FCAC", VA = "0xD7FCAC")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xD80ED4", Offset = "0xD80ED4", VA = "0xD80ED4")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xD80F5C", Offset = "0xD80F5C", VA = "0xD80F5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xD81A78", Offset = "0xD81A78", VA = "0xD81A78")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xD82EA4", Offset = "0xD82EA4", VA = "0xD82EA4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xD7FE24", Offset = "0xD7FE24", VA = "0xD7FE24")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xD7F984", Offset = "0xD7F984", VA = "0xD7F984")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xD814A8", Offset = "0xD814A8", VA = "0xD814A8")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xD82564", Offset = "0xD82564", VA = "0xD82564")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xD8335C", Offset = "0xD8335C", VA = "0xD8335C")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xD834A8", Offset = "0xD834A8", VA = "0xD834A8")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xD81330", Offset = "0xD81330", VA = "0xD81330")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xD834E4", Offset = "0xD834E4", VA = "0xD834E4")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xD80A44", Offset = "0xD80A44", VA = "0xD80A44")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xD828E8", Offset = "0xD828E8", VA = "0xD828E8")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xD83900", Offset = "0xD83900", VA = "0xD83900")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xD83740", Offset = "0xD83740", VA = "0xD83740")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xD8393C", Offset = "0xD8393C", VA = "0xD8393C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05B84", Offset = "0xB05B84")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xD839D8", Offset = "0xD839D8", VA = "0xD839D8")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xD832D0", Offset = "0xD832D0", VA = "0xD832D0")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xD81270", Offset = "0xD81270", VA = "0xD81270")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xD819B8", Offset = "0xD819B8", VA = "0xD819B8")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xD813E8", Offset = "0xD813E8", VA = "0xD813E8")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xD833E8", Offset = "0xD833E8", VA = "0xD833E8")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xD83B8C", Offset = "0xD83B8C", VA = "0xD83B8C")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7E58", Offset = "0xAF7E58")]
		public float arcDuration;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7E90", Offset = "0xAF7E90")]
		public float segmentBreak;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAF7EC8", Offset = "0xAF7EC8")]
		public float arcSpeed;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xD8403C", Offset = "0xD8403C", VA = "0xD8403C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xD84064", Offset = "0xD84064", VA = "0xD84064")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xD840B0", Offset = "0xD840B0", VA = "0xD840B0")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xD8267C", Offset = "0xD8267C", VA = "0xD8267C")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xD833D0", Offset = "0xD833D0", VA = "0xD833D0")]
		public void Show()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xD83398", Offset = "0xD83398", VA = "0xD83398")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xD826D0", Offset = "0xD826D0", VA = "0xD826D0")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xD84718", Offset = "0xD84718", VA = "0xD84718")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xD82B94", Offset = "0xD82B94", VA = "0xD82B94")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xD844C0", Offset = "0xD844C0", VA = "0xD844C0")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xD82D4C", Offset = "0xD82D4C", VA = "0xD82D4C")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xD8443C", Offset = "0xD8443C", VA = "0xD8443C")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xD84AF8", Offset = "0xD84AF8", VA = "0xD84AF8")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF7F10", Offset = "0xAF7F10")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x170000D7")]
		public Bounds meshBounds
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xD84B20", Offset = "0xD84B20", VA = "0xD84B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05BE8", Offset = "0xB05BE8")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xD84B34", Offset = "0xD84B34", VA = "0xD84B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05BF8", Offset = "0xB05BF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xD84B48", Offset = "0xD84B48", VA = "0xD84B48")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xD84CD4", Offset = "0xD84CD4", VA = "0xD84CD4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xD84DA4", Offset = "0xD84DA4", VA = "0xD84DA4", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xD84DAC", Offset = "0xD84DAC", VA = "0xD84DAC", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xD84DB4", Offset = "0xD84DB4", VA = "0xD84DB4", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD84E88", Offset = "0xD84E88", VA = "0xD84E88", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD84FA4", Offset = "0xD84FA4", VA = "0xD84FA4", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD85050", Offset = "0xD85050", VA = "0xD85050")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD84BBC", Offset = "0xD84BBC", VA = "0xD84BBC")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD84F48", Offset = "0xD84F48", VA = "0xD84F48")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xD85114", Offset = "0xD85114", VA = "0xD85114")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public abstract class TeleportMarkerBase : MonoBehaviour
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x170000D8")]
		public virtual bool showReticle
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xD85180", Offset = "0xD85180", VA = "0xD85180", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xD85188", Offset = "0xD85188", VA = "0xD85188")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xD8519C", Offset = "0xD8519C", VA = "0xD8519C", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x6001CB4")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x6001CB5")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x6001CB6")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x6001CB7")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x6001CB8")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xD85170", Offset = "0xD85170", VA = "0xD85170")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x2000789")]
		public enum TeleportPointType
		{
			[Token(Token = "0x4002B7C")]
			MoveToLocation,
			[Token(Token = "0x4002B7D")]
			SwitchToNewScene
		}

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x40020FD")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x40020FE")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x40020FF")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x170000D9")]
		public override bool showReticle
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xD851A0", Offset = "0xD851A0", VA = "0xD851A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xD851A8", Offset = "0xD851A8", VA = "0xD851A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xD8541C", Offset = "0xD8541C", VA = "0xD8541C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD85440", Offset = "0xD85440", VA = "0xD85440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD854D4", Offset = "0xD854D4", VA = "0xD854D4", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD855AC", Offset = "0xD855AC", VA = "0xD855AC", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD855B4", Offset = "0xD855B4", VA = "0xD855B4", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD8578C", Offset = "0xD8578C", VA = "0xD8578C", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD858EC", Offset = "0xD858EC", VA = "0xD858EC", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD856CC", Offset = "0xD856CC", VA = "0xD856CC")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD83818", Offset = "0xD83818", VA = "0xD83818")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD85294", Offset = "0xD85294", VA = "0xD85294")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xD85A0C", Offset = "0xD85A0C", VA = "0xD85A0C")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xD85A20", Offset = "0xD85A20", VA = "0xD85A20")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xD85CD0", Offset = "0xD85CD0", VA = "0xD85CD0")]
		public TeleportPoint()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x20003F1")]
	public class BezierPoint : MonoBehaviour
	{
		[Token(Token = "0x200078A")]
		public enum HandleMode
		{
			[Token(Token = "0x4002B7F")]
			Free,
			[Token(Token = "0x4002B80")]
			Aligned,
			[Token(Token = "0x4002B81")]
			Mirrored
		}

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_position;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x170000DA")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xE09368", Offset = "0xE09368", VA = "0xE09368")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xE0938C", Offset = "0xE0938C", VA = "0xE0938C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public Vector3 position
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xE093D8", Offset = "0xE093D8", VA = "0xE093D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xE094C4", Offset = "0xE094C4", VA = "0xE094C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xE09510", Offset = "0xE09510", VA = "0xE09510")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xE09534", Offset = "0xE09534", VA = "0xE09534")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xE09588", Offset = "0xE09588", VA = "0xE09588")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xE095AC", Offset = "0xE095AC", VA = "0xE095AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xE09600", Offset = "0xE09600", VA = "0xE09600")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xE09624", Offset = "0xE09624", VA = "0xE09624")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xE09670", Offset = "0xE09670", VA = "0xE09670")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xE09694", Offset = "0xE09694", VA = "0xE09694")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public Vector3 localScale
		{
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xE096E0", Offset = "0xE096E0", VA = "0xE096E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xE09704", Offset = "0xE09704", VA = "0xE09704")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xE09750", Offset = "0xE09750", VA = "0xE09750")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xE0975C", Offset = "0xE0975C", VA = "0xE0975C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xE098F0", Offset = "0xE098F0", VA = "0xE098F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xE09938", Offset = "0xE09938", VA = "0xE09938")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xE09BA4", Offset = "0xE09BA4", VA = "0xE09BA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xE09BB0", Offset = "0xE09BB0", VA = "0xE09BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xE09D44", Offset = "0xE09D44", VA = "0xE09D44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xE09D8C", Offset = "0xE09D8C", VA = "0xE09D8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public HandleMode handleMode
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xE09FF8", Offset = "0xE09FF8", VA = "0xE09FF8")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xE0A000", Offset = "0xE0A000", VA = "0xE0A000")]
			set
			{
			}
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xE0A020", Offset = "0xE0A020", VA = "0xE0A020")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xE0A048", Offset = "0xE0A048", VA = "0xE0A048")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xE09420", Offset = "0xE09420", VA = "0xE09420")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xE0A148", Offset = "0xE0A148", VA = "0xE0A148")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xE0A234", Offset = "0xE0A234", VA = "0xE0A234")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAE5590", Offset = "0xAE5590")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color gizmoColor;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gizmoStep;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<BezierPoint> endPoints;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool loop;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool drawGizmos;

		[Token(Token = "0x170000E6")]
		public int Count
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xE0A2C4", Offset = "0xE0A2C4", VA = "0xE0A2C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public float Length
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xE0A314", Offset = "0xE0A314", VA = "0xE0A314")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E8")]
		public BezierPoint Item
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xE0A4CC", Offset = "0xE0A4CC", VA = "0xE0A4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xE0A6C8", Offset = "0xE0A6C8", VA = "0xE0A6C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xE0A73C", Offset = "0xE0A73C", VA = "0xE0A73C")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xE0A6CC", Offset = "0xE0A6CC", VA = "0xE0A6CC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xE0A8E8", Offset = "0xE0A8E8", VA = "0xE0A8E8")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xE0AC78", Offset = "0xE0AC78", VA = "0xE0AC78")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xE0AED4", Offset = "0xE0AED4", VA = "0xE0AED4")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xE0B1C8", Offset = "0xE0B1C8", VA = "0xE0B1C8")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xE0B470", Offset = "0xE0B470", VA = "0xE0B470")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xE0B4D8", Offset = "0xE0B4D8", VA = "0xE0B4D8")]
		public void DrawGizmos(Color color, int smoothness = 4)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xE0B5AC", Offset = "0xE0B5AC", VA = "0xE0B5AC")]
		public void HideGizmos()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xE0B5B4", Offset = "0xE0B5B4", VA = "0xE0B5B4")]
		public Vector3 GetPoint(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xE0B8E8", Offset = "0xE0B8E8", VA = "0xE0B8E8")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xE0A328", Offset = "0xE0A328", VA = "0xE0A328")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xE0BE0C", Offset = "0xE0BE0C", VA = "0xE0BE0C")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xE0BE30", Offset = "0xE0BE30", VA = "0xE0BE30")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xE0BFA0", Offset = "0xE0BFA0", VA = "0xE0BFA0")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xE0C080", Offset = "0xE0C080", VA = "0xE0C080")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xE0C394", Offset = "0xE0C394", VA = "0xE0C394")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xE0D058", Offset = "0xE0D058", VA = "0xE0D058")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xE0D368", Offset = "0xE0D368", VA = "0xE0D368")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xE0BD68", Offset = "0xE0BD68", VA = "0xE0BD68")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xE0D8BC", Offset = "0xE0D8BC", VA = "0xE0D8BC")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xE0DB68", Offset = "0xE0DB68", VA = "0xE0DB68")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAE55DC", Offset = "0xAE55DC")]
	public class BezierWalkerLocomotion : MonoBehaviour, IBezierWalker
	{
		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IBezierWalker walker;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> tailObjects;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<float> tailObjectDistances;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationLerpModifier;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool lookForward;

		[Token(Token = "0x170000E9")]
		public int TailLength
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xE0DBF4", Offset = "0xE0DBF4", VA = "0xE0DBF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EA")]
		public Transform Item
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xE0DC44", Offset = "0xE0DC44", VA = "0xE0DC44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public BezierSpline Spline
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xE0DCBC", Offset = "0xE0DCBC", VA = "0xE0DCBC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public float NormalizedT
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xE0DD6C", Offset = "0xE0DD6C", VA = "0xE0DD6C", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		public bool MovingForward
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xE0DE20", Offset = "0xE0DE20", VA = "0xE0DE20", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xE0DED4", Offset = "0xE0DED4", VA = "0xE0DED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xE0E138", Offset = "0xE0E138", VA = "0xE0E138")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xE0E3C8", Offset = "0xE0E3C8", VA = "0xE0E3C8")]
		public void AddToTail(Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xE0E4D0", Offset = "0xE0E4D0", VA = "0xE0E4D0")]
		public void InsertIntoTail(int index, Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xE0E5E4", Offset = "0xE0E5E4", VA = "0xE0E5E4")]
		public void RemoveFromTail(Transform transform)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xE0E76C", Offset = "0xE0E76C", VA = "0xE0E76C")]
		public BezierWalkerLocomotion()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class BezierWalkerWithSpeed : MonoBehaviour, IBezierWalker
	{
		[Token(Token = "0x200078B")]
		public enum TravelMode
		{
			[Token(Token = "0x4002B83")]
			Once,
			[Token(Token = "0x4002B84")]
			Loop,
			[Token(Token = "0x4002B85")]
			PingPong
		}

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cachedTransform;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierSpline spline;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TravelMode travelMode;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float progress;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationLerpModifier;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool lookForward;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isGoingForward;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x170000EE")]
		public BezierSpline Spline
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xE0E784", Offset = "0xE0E784", VA = "0xE0E784", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public float NormalizedT
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xE0E78C", Offset = "0xE0E78C", VA = "0xE0E78C", Slot = "5")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xE0E794", Offset = "0xE0E794", VA = "0xE0E794")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public bool MovingForward
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xE0E79C", Offset = "0xE0E79C", VA = "0xE0E79C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xE0E7BC", Offset = "0xE0E7BC", VA = "0xE0E7BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xE0E7E4", Offset = "0xE0E7E4", VA = "0xE0E7E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xE0EAE4", Offset = "0xE0EAE4", VA = "0xE0EAE4")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class BezierWalkerWithTime : MonoBehaviour, IBezierWalker
	{
		[Token(Token = "0x200078C")]
		public enum TravelMode
		{
			[Token(Token = "0x4002B87")]
			Once,
			[Token(Token = "0x4002B88")]
			Loop,
			[Token(Token = "0x4002B89")]
			PingPong
		}

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cachedTransform;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierSpline spline;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TravelMode travelMode;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float travelTime;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float progress;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float movementLerpModifier;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationLerpModifier;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lookForward;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isGoingForward;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x170000F1")]
		public BezierSpline Spline
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xE0EB64", Offset = "0xE0EB64", VA = "0xE0EB64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public float NormalizedT
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xE0EB6C", Offset = "0xE0EB6C", VA = "0xE0EB6C", Slot = "5")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xE0EB74", Offset = "0xE0EB74", VA = "0xE0EB74")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public bool MovingForward
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xE0EB7C", Offset = "0xE0EB7C", VA = "0xE0EB7C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xE0EB84", Offset = "0xE0EB84", VA = "0xE0EB84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xE0EBAC", Offset = "0xE0EBAC", VA = "0xE0EBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xE0EF00", Offset = "0xE0EF00", VA = "0xE0EF00")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public interface IBezierWalker
	{
		[Token(Token = "0x170000F4")]
		BezierSpline Spline
		{
			[Token(Token = "0x6001D19")]
			get;
		}

		[Token(Token = "0x170000F5")]
		float NormalizedT
		{
			[Token(Token = "0x6001D1A")]
			get;
		}

		[Token(Token = "0x170000F6")]
		bool MovingForward
		{
			[Token(Token = "0x6001D1B")]
			get;
		}
	}
	[Token(Token = "0x20003F7")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x200078D")]
		public enum FollowMode
		{
			[Token(Token = "0x4002B8B")]
			Relaxed,
			[Token(Token = "0x4002B8C")]
			Strict
		}

		[Token(Token = "0x4002128")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowMode followMode;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cachedTransform;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector4> particleData;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xE0EF80", Offset = "0xE0EF80", VA = "0xE0EF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xE0F06C", Offset = "0xE0F06C", VA = "0xE0F06C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xE0F69C", Offset = "0xE0F69C", VA = "0xE0F69C")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20003F8")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xF69518", Offset = "0xF69518", VA = "0xF69518")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xF695A4", Offset = "0xF695A4", VA = "0xF695A4")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xF695B4", Offset = "0xF695B4", VA = "0xF695B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xF6961C", Offset = "0xF6961C", VA = "0xF6961C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xF696C0", Offset = "0xF696C0", VA = "0xF696C0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF69870", Offset = "0xF69870", VA = "0xF69870")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF69878", Offset = "0xF69878", VA = "0xF69878")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xF69A90", Offset = "0xF69A90", VA = "0xF69A90")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace TornadoBanditsStudio
{
	[Token(Token = "0x20003FB")]
	public class TBS_CameraMovement : MonoBehaviour
	{
		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8314", Offset = "0xAE8314")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TBS_CameraMovement <>4__this;

			[Token(Token = "0x17000326")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B54")]
				[Address(RVA = "0xF70874", Offset = "0xF70874", VA = "0xF70874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000327")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B56")]
				[Address(RVA = "0xF708DC", Offset = "0xF708DC", VA = "0xF708DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xF703E8", Offset = "0xF703E8", VA = "0xF703E8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xF70774", Offset = "0xF70774", VA = "0xF70774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xF70778", Offset = "0xF70778", VA = "0xF70778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xF7087C", Offset = "0xF7087C", VA = "0xF7087C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8324", Offset = "0xAE8324")]
		private sealed class <MoveCamera>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TBS_CameraMovement <>4__this;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 startPoint;

			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPoint;

			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <i>5__2;

			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <rate>5__3;

			[Token(Token = "0x17000328")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B5A")]
				[Address(RVA = "0xF70704", Offset = "0xF70704", VA = "0xF70704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000329")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B5C")]
				[Address(RVA = "0xF7076C", Offset = "0xF7076C", VA = "0xF7076C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xF704C0", Offset = "0xF704C0", VA = "0xF704C0")]
			[DebuggerHidden]
			public <MoveCamera>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xF705A0", Offset = "0xF705A0", VA = "0xF705A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xF705A4", Offset = "0xF705A4", VA = "0xF705A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xF7070C", Offset = "0xF7070C", VA = "0xF7070C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 targePosition;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startPostion;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool comeBack;

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xF70378", Offset = "0xF70378", VA = "0xF70378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05C08", Offset = "0xB05C08")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xF70414", Offset = "0xF70414", VA = "0xF70414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05C6C", Offset = "0xB05C6C")]
		private IEnumerator MoveCamera(Vector3 startPoint, Vector3 targetPoint)
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF704EC", Offset = "0xF704EC", VA = "0xF704EC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF70588", Offset = "0xF70588", VA = "0xF70588")]
		public TBS_CameraMovement()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class TBS_RotateableObject : MonoBehaviour
	{
		[Token(Token = "0x2000790")]
		private enum ROTATION_AXIS
		{
			[Token(Token = "0x4002B98")]
			X,
			[Token(Token = "0x4002B99")]
			Y,
			[Token(Token = "0x4002B9A")]
			Z
		}

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ROTATION_AXIS rotationAxis;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool randomSpeed;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool randomDirection;

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xF708E4", Offset = "0xF708E4", VA = "0xF708E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF70954", Offset = "0xF70954", VA = "0xF70954")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF70A34", Offset = "0xF70A34", VA = "0xF70A34")]
		public TBS_RotateableObject()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class TBS_SimpleForwardMovement : MonoBehaviour
	{
		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float speed_;

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF70A4C", Offset = "0xF70A4C", VA = "0xF70A4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xF70B20", Offset = "0xF70B20", VA = "0xF70B20")]
		public TBS_SimpleForwardMovement()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003FE")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000F7")]
		public bool Highlight
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xE83E78", Offset = "0xE83E78", VA = "0xE83E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xE83E80", Offset = "0xE83E80", VA = "0xE83E80")]
			set
			{
			}
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xE83E8C", Offset = "0xE83E8C", VA = "0xE83E8C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xE84058", Offset = "0xE84058", VA = "0xE84058", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xE84080", Offset = "0xE84080", VA = "0xE84080", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xE840A8", Offset = "0xE840A8", VA = "0xE840A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xE83F58", Offset = "0xE83F58", VA = "0xE83F58")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xE842FC", Offset = "0xE842FC", VA = "0xE842FC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000F8")]
		public bool InRange
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xE84A64", Offset = "0xE84A64", VA = "0xE84A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xE84A6C", Offset = "0xE84A6C", VA = "0xE84A6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool Targeted
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xE84BE8", Offset = "0xE84BE8", VA = "0xE84BE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xE84BF0", Offset = "0xE84BF0", VA = "0xE84BF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xE84BFC", Offset = "0xE84BFC", VA = "0xE84BFC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xE84A78", Offset = "0xE84A78", VA = "0xE84A78")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xE84D9C", Offset = "0xE84D9C", VA = "0xE84D9C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5624", Offset = "0xAE5624")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000FA")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0xE84DA4", Offset = "0xE84DA4", VA = "0xE84DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xE84DAC", Offset = "0xE84DAC", VA = "0xE84DAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xE84DC8", Offset = "0xE84DC8", VA = "0xE84DC8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xE84FD0", Offset = "0xE84FD0", VA = "0xE84FD0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xE858EC", Offset = "0xE858EC", VA = "0xE858EC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xE85EA8", Offset = "0xE85EA8", VA = "0xE85EA8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xE86288", Offset = "0xE86288", VA = "0xE86288")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xE8521C", Offset = "0xE8521C", VA = "0xE8521C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xE86364", Offset = "0xE86364", VA = "0xE86364")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xE867A0", Offset = "0xE867A0", VA = "0xE867A0", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xE867B8", Offset = "0xE867B8", VA = "0xE867B8", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xE867C0", Offset = "0xE867C0", VA = "0xE867C0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xE88310", Offset = "0xE88310", VA = "0xE88310")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xE883C0", Offset = "0xE883C0", VA = "0xE883C0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xE8846C", Offset = "0xE8846C", VA = "0xE8846C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000791")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002B9C")]
			Disabled,
			[Token(Token = "0x4002B9D")]
			Enabled,
			[Token(Token = "0x4002B9E")]
			Targeted
		}

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xE88474", Offset = "0xE88474", VA = "0xE88474")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xE84D00", Offset = "0xE84D00", VA = "0xE84D00")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xE884DC", Offset = "0xE884DC", VA = "0xE884DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xE88524", Offset = "0xE88524", VA = "0xE88524")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xE8D338", Offset = "0xE8D338", VA = "0xE8D338")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xE8D404", Offset = "0xE8D404", VA = "0xE8D404")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xE8D410", Offset = "0xE8D410", VA = "0xE8D410")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xE8D41C", Offset = "0xE8D41C", VA = "0xE8D41C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xE829F0", Offset = "0xE829F0", VA = "0xE829F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xE82A48", Offset = "0xE82A48", VA = "0xE82A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xE82CEC", Offset = "0xE82CEC", VA = "0xE82CEC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xE82DDC", Offset = "0xE82DDC", VA = "0xE82DDC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xE82A4C", Offset = "0xE82A4C", VA = "0xE82A4C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xE82ECC", Offset = "0xE82ECC", VA = "0xE82ECC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000792")]
		public enum ContactTest
		{
			[Token(Token = "0x4002BA0")]
			PerpenTest,
			[Token(Token = "0x4002BA1")]
			BackwardsPress
		}

		[Token(Token = "0x4002164")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4002165")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8240", Offset = "0xAF8240")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000FB")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xE82F64", Offset = "0xE82F64", VA = "0xE82F64", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FC")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xE82F6C", Offset = "0xE82F6C", VA = "0xE82F6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000FD")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xE82F78", Offset = "0xE82F78", VA = "0xE82F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05CD0", Offset = "0xB05CD0")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xE82F80", Offset = "0xE82F80", VA = "0xE82F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05CE0", Offset = "0xB05CE0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xE82F88", Offset = "0xE82F88", VA = "0xE82F88", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xE830D8", Offset = "0xE830D8", VA = "0xE830D8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xE832E0", Offset = "0xE832E0", VA = "0xE832E0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xE83838", Offset = "0xE83838", VA = "0xE83838")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xE83988", Offset = "0xE83988", VA = "0xE83988")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xE83750", Offset = "0xE83750", VA = "0xE83750")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xE83A78", Offset = "0xE83A78", VA = "0xE83A78")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xE83B6C", Offset = "0xE83B6C", VA = "0xE83B6C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xE83C98", Offset = "0xE83C98", VA = "0xE83C98")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8260", Offset = "0xAF8260")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8270", Offset = "0xAF8270")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000FE")]
		public Collider Collider
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xE83D84", Offset = "0xE83D84", VA = "0xE83D84", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05CF0", Offset = "0xB05CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xE83D8C", Offset = "0xE83D8C", VA = "0xE83D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05D00", Offset = "0xB05D00")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xE83D94", Offset = "0xE83D94", VA = "0xE83D94", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05D10", Offset = "0xB05D10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xE83D9C", Offset = "0xE83D9C", VA = "0xE83D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05D20", Offset = "0xB05D20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xE83DA4", Offset = "0xE83DA4", VA = "0xE83DA4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xE83DF4", Offset = "0xE83DF4", VA = "0xE83DF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xE83E70", Offset = "0xE83E70", VA = "0xE83E70")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000101")]
		Collider Collider
		{
			[Token(Token = "0x6001D71")]
			get;
		}

		[Token(Token = "0x17000102")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001D72")]
			get;
		}

		[Token(Token = "0x17000103")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001D73")]
			get;
		}
	}
	[Token(Token = "0x2000408")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xE8323C", Offset = "0xE8323C", VA = "0xE8323C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public enum InteractionType
	{
		[Token(Token = "0x400217A")]
		Enter,
		[Token(Token = "0x400217B")]
		Stay,
		[Token(Token = "0x400217C")]
		Exit
	}
	[Token(Token = "0x200040A")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000793")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002BA3")]
			Mesh,
			[Token(Token = "0x4002BA4")]
			Skeleton,
			[Token(Token = "0x4002BA5")]
			Both
		}

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8334", Offset = "0xAE8334")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700032A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B60")]
				[Address(RVA = "0xE89418", Offset = "0xE89418", VA = "0xE89418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B62")]
				[Address(RVA = "0xE89480", Offset = "0xE89480", VA = "0xE89480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xE88F0C", Offset = "0xE88F0C", VA = "0xE88F0C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xE891F8", Offset = "0xE891F8", VA = "0xE891F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xE891FC", Offset = "0xE891FC", VA = "0xE891FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xE89420", Offset = "0xE89420", VA = "0xE89420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400217D")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF82A0", Offset = "0xAF82A0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000104")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xE87414", Offset = "0xE87414", VA = "0xE87414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xE8852C", Offset = "0xE8852C", VA = "0xE8852C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xE87F94", Offset = "0xE87F94", VA = "0xE87F94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xE88594", Offset = "0xE88594", VA = "0xE88594")]
			private set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xE885FC", Offset = "0xE885FC", VA = "0xE885FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xE88634", Offset = "0xE88634", VA = "0xE88634")]
			private set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xE8869C", Offset = "0xE8869C", VA = "0xE8869C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xE886D4", Offset = "0xE886D4", VA = "0xE886D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xE8873C", Offset = "0xE8873C", VA = "0xE8873C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xE88774", Offset = "0xE88774", VA = "0xE88774")]
			private set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xE873E0", Offset = "0xE873E0", VA = "0xE873E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xE887DC", Offset = "0xE887DC", VA = "0xE887DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xE87F60", Offset = "0xE87F60", VA = "0xE87F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xE88840", Offset = "0xE88840", VA = "0xE88840")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xE888A4", Offset = "0xE888A4", VA = "0xE888A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xE888D8", Offset = "0xE888D8", VA = "0xE888D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xE8893C", Offset = "0xE8893C", VA = "0xE8893C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xE88970", Offset = "0xE88970", VA = "0xE88970")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xE889D4", Offset = "0xE889D4", VA = "0xE889D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xE88A08", Offset = "0xE88A08", VA = "0xE88A08")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xE88A6C", Offset = "0xE88A6C", VA = "0xE88A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05D30", Offset = "0xB05D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xE88ABC", Offset = "0xE88ABC", VA = "0xE88ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05D40", Offset = "0xB05D40")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xE88B10", Offset = "0xE88B10", VA = "0xE88B10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xE88E84", Offset = "0xE88E84", VA = "0xE88E84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xE88E14", Offset = "0xE88E14", VA = "0xE88E14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05D50", Offset = "0xB05D50")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xE848B8", Offset = "0xE848B8", VA = "0xE848B8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xE88F38", Offset = "0xE88F38", VA = "0xE88F38")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xE87FCC", Offset = "0xE87FCC", VA = "0xE87FCC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xE87250", Offset = "0xE87250", VA = "0xE87250")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xE89118", Offset = "0xE89118", VA = "0xE89118")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000795")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xE89BD0", Offset = "0xE89BD0", VA = "0xE89BD0")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700010F")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xE89488", Offset = "0xE89488", VA = "0xE89488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xE89490", Offset = "0xE89490", VA = "0xE89490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xE89498", Offset = "0xE89498", VA = "0xE89498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xE894A0", Offset = "0xE894A0", VA = "0xE894A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x140000D9")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xE894A8", Offset = "0xE894A8", VA = "0xE894A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05DB4", Offset = "0xB05DB4")]
			add
			{
			}
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xE8954C", Offset = "0xE8954C", VA = "0xE8954C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05DC4", Offset = "0xB05DC4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DA")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xE89664", Offset = "0xE89664", VA = "0xE89664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05DD4", Offset = "0xB05DD4")]
			add
			{
			}
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xE89708", Offset = "0xE89708", VA = "0xE89708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05DE4", Offset = "0xB05DE4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DB")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xE89820", Offset = "0xE89820", VA = "0xE89820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05DF4", Offset = "0xB05DF4")]
			add
			{
			}
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xE898C4", Offset = "0xE898C4", VA = "0xE898C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05E04", Offset = "0xB05E04")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xE895F0", Offset = "0xE895F0", VA = "0xE895F0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xE897AC", Offset = "0xE897AC", VA = "0xE897AC", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xE89968", Offset = "0xE89968", VA = "0xE89968", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001DA0")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xE83074", Offset = "0xE83074", VA = "0xE83074", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xE89AA4", Offset = "0xE89AA4", VA = "0xE89AA4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xE83D7C", Offset = "0xE83D7C", VA = "0xE83D7C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002195")]
		None,
		[Token(Token = "0x4002196")]
		Proximity,
		[Token(Token = "0x4002197")]
		Contact,
		[Token(Token = "0x4002198")]
		Action
	}
	[Token(Token = "0x200040D")]
	public enum InteractableState
	{
		[Token(Token = "0x400219A")]
		Default,
		[Token(Token = "0x400219B")]
		ProximityState,
		[Token(Token = "0x400219C")]
		ContactState,
		[Token(Token = "0x400219D")]
		ActionState
	}
	[Token(Token = "0x200040E")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xE838E4", Offset = "0xE838E4", VA = "0xE838E4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000113")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xE89C20", Offset = "0xE89C20", VA = "0xE89C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xE899DC", Offset = "0xE899DC", VA = "0xE899DC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xE89B08", Offset = "0xE89B08", VA = "0xE89B08")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xE89C88", Offset = "0xE89C88", VA = "0xE89C88")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8344", Offset = "0xAE8344")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700032C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B68")]
				[Address(RVA = "0xE8ACC8", Offset = "0xE8ACC8", VA = "0xE8ACC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B6A")]
				[Address(RVA = "0xE8AD30", Offset = "0xE8AD30", VA = "0xE8AD30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xE8A78C", Offset = "0xE8A78C", VA = "0xE8A78C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xE8A8B8", Offset = "0xE8A8B8", VA = "0xE8A8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xE8A92C", Offset = "0xE8A92C", VA = "0xE8A92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xE8A8D4", Offset = "0xE8A8D4", VA = "0xE8A8D4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xE8ACD0", Offset = "0xE8ACD0", VA = "0xE8ACD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xE8A684", Offset = "0xE8A684", VA = "0xE8A684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xE8A700", Offset = "0xE8A700", VA = "0xE8A700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05E14", Offset = "0xB05E14")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xE8A7B8", Offset = "0xE8A7B8", VA = "0xE8A7B8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xE8A8B0", Offset = "0xE8A8B0", VA = "0xE8A8B0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000114")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xE86C8C", Offset = "0xE86C8C", VA = "0xE86C8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xE86DF4", Offset = "0xE86DF4", VA = "0xE86DF4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xE8AD38", Offset = "0xE8AD38", VA = "0xE8AD38")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xE8ADE4", Offset = "0xE8ADE4", VA = "0xE8ADE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xE8B0AC", Offset = "0xE8B0AC", VA = "0xE8B0AC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xE8B0F4", Offset = "0xE8B0F4", VA = "0xE8B0F4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xE8B344", Offset = "0xE8B344", VA = "0xE8B344")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xE8B470", Offset = "0xE8B470", VA = "0xE8B470")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8354", Offset = "0xAE8354")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700032E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B6E")]
				[Address(RVA = "0xE881DC", Offset = "0xE881DC", VA = "0xE881DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B70")]
				[Address(RVA = "0xE88244", Offset = "0xE88244", VA = "0xE88244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xE86F10", Offset = "0xE86F10", VA = "0xE86F10")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xE87BF8", Offset = "0xE87BF8", VA = "0xE87BF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xE87BFC", Offset = "0xE87BFC", VA = "0xE87BFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xE881E4", Offset = "0xE881E4", VA = "0xE881E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021AD")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000115")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xE86B70", Offset = "0xE86B70", VA = "0xE86B70", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000116")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xE86B78", Offset = "0xE86B78", VA = "0xE86B78", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000117")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xE86B80", Offset = "0xE86B80", VA = "0xE86B80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public override bool EnableState
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xE86B88", Offset = "0xE86B88", VA = "0xE86B88", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xE86BB4", Offset = "0xE86BB4", VA = "0xE86BB4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xE86BF0", Offset = "0xE86BF0", VA = "0xE86BF0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xE86EA0", Offset = "0xE86EA0", VA = "0xE86EA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05E78", Offset = "0xB05E78")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xE86F3C", Offset = "0xE86F3C", VA = "0xE86F3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xE8744C", Offset = "0xE8744C", VA = "0xE8744C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xE876C4", Offset = "0xE876C4", VA = "0xE876C4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xE87804", Offset = "0xE87804", VA = "0xE87804", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xE87ACC", Offset = "0xE87ACC", VA = "0xE87ACC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xE87AD0", Offset = "0xE87AD0", VA = "0xE87AD0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xE87AD4", Offset = "0xE87AD4", VA = "0xE87AD4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8330", Offset = "0xAF8330")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8340", Offset = "0xAF8340")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8350", Offset = "0xAF8350")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000119")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xE8824C", Offset = "0xE8824C", VA = "0xE8824C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05EDC", Offset = "0xB05EDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xE88254", Offset = "0xE88254", VA = "0xE88254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05EEC", Offset = "0xB05EEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool EnableState
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xE8825C", Offset = "0xE8825C", VA = "0xE8825C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xE88278", Offset = "0xE88278", VA = "0xE88278", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xE88298", Offset = "0xE88298", VA = "0xE88298", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05EFC", Offset = "0xB05EFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xE882A0", Offset = "0xE882A0", VA = "0xE882A0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F0C", Offset = "0xB05F0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public float SphereRadius
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xE882AC", Offset = "0xE882AC", VA = "0xE882AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F1C", Offset = "0xB05F1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xE882B4", Offset = "0xE882B4", VA = "0xE882B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F2C", Offset = "0xB05F2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xE882BC", Offset = "0xE882BC", VA = "0xE882BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xE88304", Offset = "0xE88304", VA = "0xE88304", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xE88308", Offset = "0xE88308", VA = "0xE88308")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40021BD")]
		None = 0,
		[Token(Token = "0x40021BE")]
		Ray = 1,
		[Token(Token = "0x40021BF")]
		Poke = 4,
		[Token(Token = "0x40021C0")]
		All = -1
	}
	[Token(Token = "0x2000415")]
	public enum ToolInputState
	{
		[Token(Token = "0x40021C2")]
		Inactive,
		[Token(Token = "0x40021C3")]
		PrimaryInputDown,
		[Token(Token = "0x40021C4")]
		PrimaryInputDownStay,
		[Token(Token = "0x40021C5")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000416")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xE87A88", Offset = "0xE87A88", VA = "0xE87A88")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000417")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8360", Offset = "0xAF8360")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8370", Offset = "0xAF8370")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8380", Offset = "0xAF8380")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700011D")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xE83C90", Offset = "0xE83C90", VA = "0xE83C90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xE89D04", Offset = "0xE89D04", VA = "0xE89D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F3C", Offset = "0xB05F3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xE89D0C", Offset = "0xE89D0C", VA = "0xE89D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F4C", Offset = "0xB05F4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001DD3")]
			get;
		}

		[Token(Token = "0x17000120")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001DD4")]
			get;
		}

		[Token(Token = "0x17000121")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001DD5")]
			get;
		}

		[Token(Token = "0x17000122")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xE89D18", Offset = "0xE89D18", VA = "0xE89D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F5C", Offset = "0xB05F5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xE89D24", Offset = "0xE89D24", VA = "0xE89D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F6C", Offset = "0xB05F6C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xE89D30", Offset = "0xE89D30", VA = "0xE89D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F7C", Offset = "0xB05F7C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xE89D3C", Offset = "0xE89D3C", VA = "0xE89D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F8C", Offset = "0xB05F8C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001DDE")]
			get;
			[Token(Token = "0x6001DDF")]
			set;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xE89D48", Offset = "0xE89D48", VA = "0xE89D48")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001DDB")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001DDC")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001DDD")]
		public abstract void DeFocus();

		[Token(Token = "0x6001DE0")]
		public abstract void Initialize();

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xE89D50", Offset = "0xE89D50", VA = "0xE89D50")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xE89DA0", Offset = "0xE89DA0", VA = "0xE89DA0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xE89DF8", Offset = "0xE89DF8", VA = "0xE89DF8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xE8A03C", Offset = "0xE8A03C", VA = "0xE8A03C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xE87AE8", Offset = "0xE87AE8", VA = "0xE87AE8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000125")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001DE6")]
			get;
		}

		[Token(Token = "0x17000126")]
		bool EnableState
		{
			[Token(Token = "0x6001DE8")]
			get;
			[Token(Token = "0x6001DE9")]
			set;
		}

		[Token(Token = "0x17000127")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001DEA")]
			get;
			[Token(Token = "0x6001DEB")]
			set;
		}

		[Token(Token = "0x6001DE7")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000419")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000798")]
		private enum PinchState
		{
			[Token(Token = "0x4002BB6")]
			None,
			[Token(Token = "0x4002BB7")]
			PinchDown,
			[Token(Token = "0x4002BB8")]
			PinchStay,
			[Token(Token = "0x4002BB9")]
			PinchUp
		}

		[Token(Token = "0x40021D2")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000128")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xE8D424", Offset = "0xE8D424", VA = "0xE8D424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000129")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xE8D4B0", Offset = "0xE8D4B0", VA = "0xE8D4B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012A")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xE8D53C", Offset = "0xE8D53C", VA = "0xE8D53C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xE8D5C8", Offset = "0xE8D5C8", VA = "0xE8D5C8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xE8D5F4", Offset = "0xE8D5F4", VA = "0xE8D5F4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40021D5")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40021D6")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40021D7")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40021D8")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40021D9")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF83A0", Offset = "0xAF83A0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700012B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xE8D894", Offset = "0xE8D894", VA = "0xE8D894", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700012C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xE8D89C", Offset = "0xE8D89C", VA = "0xE8D89C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700012D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xE8D904", Offset = "0xE8D904", VA = "0xE8D904", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public override bool EnableState
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xE8D90C", Offset = "0xE8D90C", VA = "0xE8D90C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xE8D950", Offset = "0xE8D950", VA = "0xE8D950", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xE8D9C4", Offset = "0xE8D9C4", VA = "0xE8D9C4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xE8DA1C", Offset = "0xE8DA1C", VA = "0xE8DA1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xE8DAB8", Offset = "0xE8DAB8", VA = "0xE8DAB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xE8DDB8", Offset = "0xE8DDB8", VA = "0xE8DDB8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xE8DEB4", Offset = "0xE8DEB4", VA = "0xE8DEB4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xE8E218", Offset = "0xE8E218", VA = "0xE8E218")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xE8E3BC", Offset = "0xE8E3BC", VA = "0xE8E3BC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xE8E4E4", Offset = "0xE8E4E4", VA = "0xE8E4E4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xE8E81C", Offset = "0xE8E81C", VA = "0xE8E81C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xE8EC2C", Offset = "0xE8EC2C", VA = "0xE8EC2C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xE8ED00", Offset = "0xE8ED00", VA = "0xE8ED00", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xE8ED34", Offset = "0xE8ED34", VA = "0xE8ED34")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40021E5")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40021E6")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8414", Offset = "0xAF8414")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700012F")]
		public bool EnableState
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xE8D934", Offset = "0xE8D934", VA = "0xE8D934", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xE8D96C", Offset = "0xE8D96C", VA = "0xE8D96C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xE8EDEC", Offset = "0xE8EDEC", VA = "0xE8EDEC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xE8DD7C", Offset = "0xE8DD7C", VA = "0xE8DD7C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xE8F01C", Offset = "0xE8F01C", VA = "0xE8F01C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05F9C", Offset = "0xB05F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xE8F024", Offset = "0xE8F024", VA = "0xE8F024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB05FAC", Offset = "0xB05FAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xE8EDF4", Offset = "0xE8EDF4", VA = "0xE8EDF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xE8EC60", Offset = "0xE8EC60", VA = "0xE8EC60", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xE8F02C", Offset = "0xE8F02C", VA = "0xE8F02C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xE8F358", Offset = "0xE8F358", VA = "0xE8F358")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xE8F548", Offset = "0xE8F548", VA = "0xE8F548")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000132")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xE867E0", Offset = "0xE867E0", VA = "0xE867E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xE867E8", Offset = "0xE867E8", VA = "0xE867E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xE86870", Offset = "0xE86870", VA = "0xE86870")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xE86878", Offset = "0xE86878", VA = "0xE86878")]
			set
			{
			}
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xE868E4", Offset = "0xE868E4", VA = "0xE868E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xE86B48", Offset = "0xE86B48", VA = "0xE86B48")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xE86B58", Offset = "0xE86B58", VA = "0xE86B58")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xE86B68", Offset = "0xE86B68", VA = "0xE86B68")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xE843E8", Offset = "0xE843E8", VA = "0xE843E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xE843EC", Offset = "0xE843EC", VA = "0xE843EC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xE8446C", Offset = "0xE8446C", VA = "0xE8446C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xE8455C", Offset = "0xE8455C", VA = "0xE8455C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xE8464C", Offset = "0xE8464C", VA = "0xE8464C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xE8470C", Offset = "0xE8470C", VA = "0xE8470C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xE847FC", Offset = "0xE847FC", VA = "0xE847FC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xE84844", Offset = "0xE84844", VA = "0xE84844")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xE849A0", Offset = "0xE849A0", VA = "0xE849A0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xE84A10", Offset = "0xE84A10", VA = "0xE84A10")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xE84A18", Offset = "0xE84A18", VA = "0xE84A18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xE84A1C", Offset = "0xE84A1C", VA = "0xE84A1C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xE849D4", Offset = "0xE849D4", VA = "0xE849D4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xE84A5C", Offset = "0xE84A5C", VA = "0xE84A5C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8364", Offset = "0xAE8364")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000330")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B74")]
				[Address(RVA = "0xE8D2C8", Offset = "0xE8D2C8", VA = "0xE8D2C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000331")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B76")]
				[Address(RVA = "0xE8D330", Offset = "0xE8D330", VA = "0xE8D330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xE8CFFC", Offset = "0xE8CFFC", VA = "0xE8CFFC")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xE8D0D8", Offset = "0xE8D0D8", VA = "0xE8D0D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xE8D0DC", Offset = "0xE8D0DC", VA = "0xE8D0DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xE8D2D0", Offset = "0xE8D2D0", VA = "0xE8D2D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F6")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40021F7")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xE8CC14", Offset = "0xE8CC14", VA = "0xE8CC14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xE8CCAC", Offset = "0xE8CCAC", VA = "0xE8CCAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xE8CF38", Offset = "0xE8CF38", VA = "0xE8CF38")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xE8CEC8", Offset = "0xE8CEC8", VA = "0xE8CEC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB05FBC", Offset = "0xB05FBC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xE8D028", Offset = "0xE8D028", VA = "0xE8D028")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200079A")]
		public enum SelectionState
		{
			[Token(Token = "0x4002BC1")]
			Off,
			[Token(Token = "0x4002BC2")]
			Selected,
			[Token(Token = "0x4002BC3")]
			Highlighted
		}

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000134")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xE8F5A8", Offset = "0xE8F5A8", VA = "0xE8F5A8")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xE8F5B0", Offset = "0xE8F5B0", VA = "0xE8F5B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xE8F738", Offset = "0xE8F738", VA = "0xE8F738")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE8F8F8", Offset = "0xE8F8F8", VA = "0xE8F8F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xE8F638", Offset = "0xE8F638", VA = "0xE8F638")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xE8F9E8", Offset = "0xE8F9E8", VA = "0xE8F9E8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200079B")]
		public enum SegmentType
		{
			[Token(Token = "0x4002BC5")]
			Straight,
			[Token(Token = "0x4002BC6")]
			LeftTurn,
			[Token(Token = "0x4002BC7")]
			RightTurn,
			[Token(Token = "0x4002BC8")]
			Switch
		}

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400220C")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400220D")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF84F4", Offset = "0xAF84F4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000135")]
		public float StartDistance
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xE8FA54", Offset = "0xE8FA54", VA = "0xE8FA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06020", Offset = "0xB06020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xE8FA5C", Offset = "0xE8FA5C", VA = "0xE8FA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06030", Offset = "0xB06030")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float GridSize
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xE8FA64", Offset = "0xE8FA64", VA = "0xE8FA64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xE8FA6C", Offset = "0xE8FA6C", VA = "0xE8FA6C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public int SubDivCount
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xE8FA74", Offset = "0xE8FA74", VA = "0xE8FA74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xE8FA7C", Offset = "0xE8FA7C", VA = "0xE8FA7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public SegmentType Type
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xE8FA84", Offset = "0xE8FA84", VA = "0xE8FA84")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000139")]
		public Pose EndPose
		{
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xE8FA8C", Offset = "0xE8FA8C", VA = "0xE8FA8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public float Radius
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xE8FF20", Offset = "0xE8FF20", VA = "0xE8FF20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013B")]
		public float SegmentLength
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xE8FAF4", Offset = "0xE8FAF4", VA = "0xE8FAF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xE8FF30", Offset = "0xE8FF30", VA = "0xE8FF30")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xE8FF48", Offset = "0xE8FF48", VA = "0xE8FF48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xE8FB34", Offset = "0xE8FB34", VA = "0xE8FB34")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xE8FF4C", Offset = "0xE8FF4C", VA = "0xE8FF4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xE8FF50", Offset = "0xE8FF50", VA = "0xE8FF50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xE8FFBC", Offset = "0xE8FFBC", VA = "0xE8FFBC")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xE90B44", Offset = "0xE90B44", VA = "0xE90B44")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xE90E50", Offset = "0xE90E50", VA = "0xE90E50")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8374", Offset = "0xAE8374")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000332")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B7A")]
				[Address(RVA = "0xE91A58", Offset = "0xE91A58", VA = "0xE91A58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000333")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B7C")]
				[Address(RVA = "0xE91AC0", Offset = "0xE91AC0", VA = "0xE91AC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xE917D0", Offset = "0xE917D0", VA = "0xE917D0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xE918AC", Offset = "0xE918AC", VA = "0xE918AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xE918B0", Offset = "0xE918B0", VA = "0xE918B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xE91A60", Offset = "0xE91A60", VA = "0xE91A60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002213")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4002214")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xE90EF4", Offset = "0xE90EF4", VA = "0xE90EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xE90FA0", Offset = "0xE90FA0", VA = "0xE90FA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xE91054", Offset = "0xE91054", VA = "0xE91054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xE91180", Offset = "0xE91180", VA = "0xE91180")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xE912F0", Offset = "0xE912F0", VA = "0xE912F0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xE9148C", Offset = "0xE9148C", VA = "0xE9148C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xE91708", Offset = "0xE91708", VA = "0xE91708")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xE915A0", Offset = "0xE915A0", VA = "0xE915A0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xE915B4", Offset = "0xE915B4", VA = "0xE915B4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xE91760", Offset = "0xE91760", VA = "0xE91760")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB06040", Offset = "0xB06040")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xE917FC", Offset = "0xE917FC", VA = "0xE917FC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700013C")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xE91AC8", Offset = "0xE91AC8", VA = "0xE91AC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xE91AD8", Offset = "0xE91AD8", VA = "0xE91AD8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xE91AE0", Offset = "0xE91AE0", VA = "0xE91AE0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xE91F4C", Offset = "0xE91F4C", VA = "0xE91F4C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4002227")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4002228")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF85F4", Offset = "0xAF85F4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700013D")]
		public float Distance
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xE92044", Offset = "0xE92044", VA = "0xE92044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB060A4", Offset = "0xB060A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xE9204C", Offset = "0xE9204C", VA = "0xE9204C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB060B4", Offset = "0xB060B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public float Scale
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xE92054", Offset = "0xE92054", VA = "0xE92054")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xE9205C", Offset = "0xE9205C", VA = "0xE9205C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xE91ADC", Offset = "0xE91ADC", VA = "0xE91ADC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xE92064", Offset = "0xE92064", VA = "0xE92064")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xE91B28", Offset = "0xE91B28", VA = "0xE91B28")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xE91E00", Offset = "0xE91E00", VA = "0xE91E00")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001E58")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xE91FBC", Offset = "0xE91FBC", VA = "0xE91FBC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8384", Offset = "0xAE8384")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000334")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B80")]
				[Address(RVA = "0xE92A04", Offset = "0xE92A04", VA = "0xE92A04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B82")]
				[Address(RVA = "0xE92A6C", Offset = "0xE92A6C", VA = "0xE92A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xE92648", Offset = "0xE92648", VA = "0xE92648")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xE927E0", Offset = "0xE927E0", VA = "0xE927E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xE927E4", Offset = "0xE927E4", VA = "0xE927E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xE92A0C", Offset = "0xE92A0C", VA = "0xE92A0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xE92234", Offset = "0xE92234", VA = "0xE92234")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xE92280", Offset = "0xE92280", VA = "0xE92280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xE9238C", Offset = "0xE9238C", VA = "0xE9238C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xE924EC", Offset = "0xE924EC", VA = "0xE924EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xE923E8", Offset = "0xE923E8", VA = "0xE923E8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xE925C8", Offset = "0xE925C8", VA = "0xE925C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB060C4", Offset = "0xB060C4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xE92674", Offset = "0xE92674", VA = "0xE92674")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xE92720", Offset = "0xE92720", VA = "0xE92720")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xE92780", Offset = "0xE92780", VA = "0xE92780")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200079E")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002BDB")]
			Start,
			[Token(Token = "0x4002BDC")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002BDD")]
			Stop
		}

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8394", Offset = "0xAE8394")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000336")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B86")]
				[Address(RVA = "0xE933C0", Offset = "0xE933C0", VA = "0xE933C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B88")]
				[Address(RVA = "0xE93428", Offset = "0xE93428", VA = "0xE93428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0xE92D2C", Offset = "0xE92D2C", VA = "0xE92D2C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0xE931A0", Offset = "0xE931A0", VA = "0xE931A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0xE931A4", Offset = "0xE931A4", VA = "0xE931A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xE933C8", Offset = "0xE933C8", VA = "0xE933C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400223B")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400223C")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400223D")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400223E")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8654", Offset = "0xAF8654")]
		protected float _initialSpeed;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xE92A74", Offset = "0xE92A74", VA = "0xE92A74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xE92BCC", Offset = "0xE92BCC", VA = "0xE92BCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xE92BD8", Offset = "0xE92BD8", VA = "0xE92BD8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xE84420", Offset = "0xE84420", VA = "0xE84420")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xE92B48", Offset = "0xE92B48", VA = "0xE92B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB06128", Offset = "0xB06128")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xE92D58", Offset = "0xE92D58", VA = "0xE92D58")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xE92CC8", Offset = "0xE92CC8", VA = "0xE92CC8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xE844A0", Offset = "0xE844A0", VA = "0xE844A0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xE84590", Offset = "0xE84590", VA = "0xE84590")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xE92FA4", Offset = "0xE92FA4", VA = "0xE92FA4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xE930AC", Offset = "0xE930AC", VA = "0xE930AC")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xE84680", Offset = "0xE84680", VA = "0xE84680")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xE84740", Offset = "0xE84740", VA = "0xE84740")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xE84834", Offset = "0xE84834", VA = "0xE84834")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xE93134", Offset = "0xE93134", VA = "0xE93134")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700013F")]
		public float TrackLength
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xE93430", Offset = "0xE93430", VA = "0xE93430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xE93438", Offset = "0xE93438", VA = "0xE93438")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xE93440", Offset = "0xE93440", VA = "0xE93440")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xE920E4", Offset = "0xE920E4", VA = "0xE920E4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xE93444", Offset = "0xE93444", VA = "0xE93444")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xE9363C", Offset = "0xE9363C", VA = "0xE9363C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xE93758", Offset = "0xE93758", VA = "0xE93758")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class Pose
	{
		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xE8D778", Offset = "0xE8D778", VA = "0xE8D778")]
		public Pose()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xE8D824", Offset = "0xE8D824", VA = "0xE8D824")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83A4", Offset = "0xAE83A4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B8C")]
				[Address(RVA = "0xE93D3C", Offset = "0xE93D3C", VA = "0xE93D3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8E")]
				[Address(RVA = "0xE93DA4", Offset = "0xE93DA4", VA = "0xE93DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xE93A00", Offset = "0xE93A00", VA = "0xE93A00")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xE93B60", Offset = "0xE93B60", VA = "0xE93B60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xE93B64", Offset = "0xE93B64", VA = "0xE93B64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xE93D44", Offset = "0xE93D44", VA = "0xE93D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83B4", Offset = "0xAE83B4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4002BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B92")]
				[Address(RVA = "0xE93E78", Offset = "0xE93E78", VA = "0xE93E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B94")]
				[Address(RVA = "0xE93EE0", Offset = "0xE93EE0", VA = "0xE93EE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xE93AC0", Offset = "0xE93AC0", VA = "0xE93AC0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0xE93DAC", Offset = "0xE93DAC", VA = "0xE93DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xE93DB0", Offset = "0xE93DB0", VA = "0xE93DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xE93E80", Offset = "0xE93E80", VA = "0xE93E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002261")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF883C", Offset = "0xAF883C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000140")]
		public bool IsMoving
		{
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xE93774", Offset = "0xE93774", VA = "0xE93774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0618C", Offset = "0xB0618C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xE9377C", Offset = "0xE9377C", VA = "0xE9377C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB0619C", Offset = "0xB0619C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xE93788", Offset = "0xE93788", VA = "0xE93788")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xE937C4", Offset = "0xE937C4", VA = "0xE937C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xE93918", Offset = "0xE93918", VA = "0xE93918")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xE93980", Offset = "0xE93980", VA = "0xE93980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB061AC", Offset = "0xB061AC")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xE93A2C", Offset = "0xE93A2C", VA = "0xE93A2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB06210", Offset = "0xB06210")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xE93AEC", Offset = "0xE93AEC", VA = "0xE93AEC")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xE93B58", Offset = "0xE93B58", VA = "0xE93B58")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xE93EE8", Offset = "0xE93EE8", VA = "0xE93EE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xE93F50", Offset = "0xE93F50", VA = "0xE93F50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xE94008", Offset = "0xE94008", VA = "0xE94008")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xE94108", Offset = "0xE94108", VA = "0xE94108")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xE94184", Offset = "0xE94184", VA = "0xE94184")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xE94260", Offset = "0xE94260", VA = "0xE94260")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4002272")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4002273")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4002274")]
		EUDT_None,
		[Token(Token = "0x4002275")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200042C")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83C4", Offset = "0xAE83C4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B98")]
				[Address(RVA = "0xE8CBA4", Offset = "0xE8CBA4", VA = "0xE8CBA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9A")]
				[Address(RVA = "0xE8CC0C", Offset = "0xE8CC0C", VA = "0xE8CC0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xE8C220", Offset = "0xE8C220", VA = "0xE8C220")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0xE8C958", Offset = "0xE8C958", VA = "0xE8C958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xE8C95C", Offset = "0xE8C95C", VA = "0xE8C95C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xE8CBAC", Offset = "0xE8CBAC", VA = "0xE8CBAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4002277")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4002278")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4002279")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF887C", Offset = "0xAF887C")]
		public GameObject mainCamera;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAF88B4", Offset = "0xAF88B4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xE8B530", Offset = "0xE8B530", VA = "0xE8B530")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xE8BD48", Offset = "0xE8BD48", VA = "0xE8BD48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xE8BE88", Offset = "0xE8BE88", VA = "0xE8BE88")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xE8BFB0", Offset = "0xE8BFB0", VA = "0xE8BFB0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xE8C0D8", Offset = "0xE8C0D8", VA = "0xE8C0D8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xE8BE5C", Offset = "0xE8BE5C", VA = "0xE8BE5C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xE8C1B0", Offset = "0xE8C1B0", VA = "0xE8C1B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB06274", Offset = "0xB06274")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xE8C24C", Offset = "0xE8C24C", VA = "0xE8C24C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xE8B8AC", Offset = "0xE8B8AC", VA = "0xE8B8AC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xE8C374", Offset = "0xE8C374", VA = "0xE8C374")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xE8C280", Offset = "0xE8C280", VA = "0xE8C280")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xE8C710", Offset = "0xE8C710", VA = "0xE8C710")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xE8C7EC", Offset = "0xE8C7EC", VA = "0xE8C7EC")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xE8C868", Offset = "0xE8C868", VA = "0xE8C868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB062D8", Offset = "0xB062D8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xE8C8B8", Offset = "0xE8C8B8", VA = "0xE8C8B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB062E8", Offset = "0xB062E8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xE8C908", Offset = "0xE8C908", VA = "0xE8C908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB062F8", Offset = "0xB062F8")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAE5698", Offset = "0xAE5698")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83D4", Offset = "0xAE83D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xE65620", Offset = "0xE65620", VA = "0xE65620")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xE65628", Offset = "0xE65628", VA = "0xE65628")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400228E")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400228F")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002290")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002291")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002292")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002293")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4002294")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4002295")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4002296")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4002297")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4002298")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xE64864", Offset = "0xE64864", VA = "0xE64864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xE648BC", Offset = "0xE648BC", VA = "0xE648BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xE64CC4", Offset = "0xE64CC4", VA = "0xE64CC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xE64D90", Offset = "0xE64D90", VA = "0xE64D90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xE64E9C", Offset = "0xE64E9C", VA = "0xE64E9C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xE651D4", Offset = "0xE651D4", VA = "0xE651D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xE6533C", Offset = "0xE6533C", VA = "0xE6533C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xE65488", Offset = "0xE65488", VA = "0xE65488")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xE64F38", Offset = "0xE64F38", VA = "0xE64F38")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xE64FD8", Offset = "0xE64FD8", VA = "0xE64FD8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xE64B18", Offset = "0xE64B18", VA = "0xE64B18")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xE655A4", Offset = "0xE655A4", VA = "0xE655A4")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public enum HandPoseId
	{
		[Token(Token = "0x40022AB")]
		Default,
		[Token(Token = "0x40022AC")]
		Generic,
		[Token(Token = "0x40022AD")]
		PingPongBall,
		[Token(Token = "0x40022AE")]
		Controller
	}
	[Token(Token = "0x200042F")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000141")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xE65654", Offset = "0xE65654", VA = "0xE65654")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xE6565C", Offset = "0xE6565C", VA = "0xE6565C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xE65664", Offset = "0xE65664", VA = "0xE65664")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xE6566C", Offset = "0xE6566C", VA = "0xE6566C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xE65674", Offset = "0xE65674", VA = "0xE65674")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xE658E8", Offset = "0xE658E8", VA = "0xE658E8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xE65944", Offset = "0xE65944", VA = "0xE65944")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xE65988", Offset = "0xE65988", VA = "0xE65988")]
		public TouchController()
		{
		}
	}
}
namespace ERMG
{
	[Token(Token = "0x2000431")]
	public enum NavAction
	{
		[Token(Token = "0x40022B6")]
		Add,
		[Token(Token = "0x40022B7")]
		Delete
	}
}
namespace NVIDIA
{
	[StructLayout(0)]
	[Token(Token = "0x2000432")]
	public class Ansel : MonoBehaviour
	{
		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xE61E40", Offset = "0xE61E40", VA = "0xE61E40")]
		public Ansel()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x2000433")]
	public enum LODReplacement
	{
		[Token(Token = "0x40022B9")]
		DoNothing,
		[Token(Token = "0x40022BA")]
		ReplaceCulled,
		[Token(Token = "0x40022BB")]
		ReplaceLast,
		[Token(Token = "0x40022BC")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x40022BD")]
		ReplaceSpecific,
		[Token(Token = "0x40022BE")]
		ReplaceAfterSpecific,
		[Token(Token = "0x40022BF")]
		InsertAfter
	}
	[Token(Token = "0x2000434")]
	public enum CutMode
	{
		[Token(Token = "0x40022C1")]
		Automatic,
		[Token(Token = "0x40022C2")]
		Manual
	}
	[Token(Token = "0x2000435")]
	public enum FolderMode
	{
		[Token(Token = "0x40022C4")]
		RelativeToPrefab,
		[Token(Token = "0x40022C5")]
		Global
	}
	[Token(Token = "0x2000436")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x40022C7")]
		None,
		[Token(Token = "0x40022C8")]
		LW,
		[Token(Token = "0x40022C9")]
		HD,
		[Token(Token = "0x40022CA")]
		Custom
	}
	[Token(Token = "0x2000437")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x40022CB")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x40022CC")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x40022CD")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x40022CE")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x40022CF")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x40022D0")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x40022D1")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x40022D2")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x40022D3")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x40022D4")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x40022D5")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x40022E1")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x40022E2")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x40022E3")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x40022EF")]
		private const int BlockSize = 65536;

		[Token(Token = "0x17000144")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xDFA4B0", Offset = "0xDFA4B0", VA = "0xDFA4B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xDFA4B8", Offset = "0xDFA4B8", VA = "0xDFA4B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public Transform RootTransform
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xDFA4C0", Offset = "0xDFA4C0", VA = "0xDFA4C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xDFA4C8", Offset = "0xDFA4C8", VA = "0xDFA4C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xDFA4D0", Offset = "0xDFA4D0", VA = "0xDFA4D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xDFA4D8", Offset = "0xDFA4D8", VA = "0xDFA4D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xDFA4E0", Offset = "0xDFA4E0", VA = "0xDFA4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xDFA4E8", Offset = "0xDFA4E8", VA = "0xDFA4E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xDFA4F0", Offset = "0xDFA4F0", VA = "0xDFA4F0")]
		private void GenerateTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xDFA704", Offset = "0xDFA704", VA = "0xDFA704")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xDFA868", Offset = "0xDFA868", VA = "0xDFA868")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xDFA8F0", Offset = "0xDFA8F0", VA = "0xDFA8F0")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xDFA978", Offset = "0xDFA978", VA = "0xDFA978")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xDFBE2C", Offset = "0xDFBE2C", VA = "0xDFBE2C")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xDFC5F0", Offset = "0xDFC5F0", VA = "0xDFC5F0")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xDFC3D4", Offset = "0xDFC3D4", VA = "0xDFC3D4")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xDFC500", Offset = "0xDFC500", VA = "0xDFC500")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xDFC71C", Offset = "0xDFC71C", VA = "0xDFC71C")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xDFD7F8", Offset = "0xDFD7F8", VA = "0xDFD7F8")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xDFDED8", Offset = "0xDFDED8", VA = "0xDFDED8")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public enum ImpostorType
	{
		[Token(Token = "0x40022F1")]
		Spherical,
		[Token(Token = "0x40022F2")]
		Octahedron,
		[Token(Token = "0x40022F3")]
		HemiOctahedron
	}
	[Token(Token = "0x2000439")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x40022F5")]
		AlbedoAlpha = 1,
		[Token(Token = "0x40022F6")]
		SpecularSmoothness = 2,
		[Token(Token = "0x40022F7")]
		NormalDepth = 4,
		[Token(Token = "0x40022F8")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x200043A")]
	public enum RenderingMaps
	{
		[Token(Token = "0x40022FA")]
		Standard,
		[Token(Token = "0x40022FB")]
		Custom
	}
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE570C", Offset = "0xAE570C")]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public int Version;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool LockedSizes;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		public int SelectedSize;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8B0C", Offset = "0xAF8B0C")]
		public int HorizontalFrames;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8B50", Offset = "0xAF8B50")]
		public int VerticalFrames;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8B94", Offset = "0xAF8B94")]
		public int PixelPadding;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8BD8", Offset = "0xAF8BD8")]
		public int MaxVertices;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8C18", Offset = "0xAF8C18")]
		public float Tolerance;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8C5C", Offset = "0xAF8C5C")]
		public float NormalScale;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xDFDFE4", Offset = "0xDFDFE4", VA = "0xDFDFE4")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public enum ImageFormat
	{
		[Token(Token = "0x400230E")]
		PNG,
		[Token(Token = "0x400230F")]
		TGA
	}
	[Token(Token = "0x200043D")]
	public enum TextureChannels
	{
		[Token(Token = "0x4002311")]
		RGBA,
		[Token(Token = "0x4002312")]
		RGB
	}
	[Token(Token = "0x200043E")]
	public enum TextureCompression
	{
		[Token(Token = "0x4002314")]
		None,
		[Token(Token = "0x4002315")]
		Normal,
		[Token(Token = "0x4002316")]
		High,
		[Token(Token = "0x4002317")]
		Low
	}
	[Token(Token = "0x200043F")]
	public enum TextureScale
	{
		[Token(Token = "0x4002319")]
		Full = 1,
		[Token(Token = "0x400231A")]
		Half = 2,
		[Token(Token = "0x400231B")]
		Quarter = 4,
		[Token(Token = "0x400231C")]
		Eighth = 8
	}
	[Token(Token = "0x2000440")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x400231E")]
		OutputToggle = 1,
		[Token(Token = "0x400231F")]
		NameSuffix = 2,
		[Token(Token = "0x4002320")]
		RelativeScale = 4,
		[Token(Token = "0x4002321")]
		ColorSpace = 8,
		[Token(Token = "0x4002322")]
		QualityCompression = 0x10,
		[Token(Token = "0x4002323")]
		FileFormat = 0x20
	}
	[Serializable]
	[Token(Token = "0x2000441")]
	public class TextureOutput
	{
		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xDFE8E8", Offset = "0xDFE8E8", VA = "0xDFE8E8")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xDFE964", Offset = "0xDFE964", VA = "0xDFE964")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xDFEA40", Offset = "0xDFEA40", VA = "0xDFEA40")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAE5760", Offset = "0xAE5760")]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xDFE254", Offset = "0xDFE254", VA = "0xDFE254")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public static class BoundsEx
	{
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xDFC1C0", Offset = "0xDFC1C0", VA = "0xDFC1C0")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x2000444")]
	public static class Texture2DEx
	{
		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] Footer;

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xDFE618", Offset = "0xDFE618", VA = "0xDFE618")]
		public static byte[] EncodeToTGA(this Texture2D tex, bool withAlpha = true)
		{
			return null;
		}
	}
	[Token(Token = "0x2000445")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x17000148")]
		public static Type Type
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xDFE4C8", Offset = "0xDFE4C8", VA = "0xDFE4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xDFCC04", Offset = "0xDFCC04", VA = "0xDFCC04")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x2000446")]
	public static class Vector2Ex
	{
		[Serializable]
		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83E4", Offset = "0xAE83E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__3_0;

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xDFF744", Offset = "0xDFF744", VA = "0xDFF744")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xDFF74C", Offset = "0xDFF74C", VA = "0xDFF74C")]
			internal int <ConvexHull>b__3_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE83F4", Offset = "0xAE83F4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] P;

			[Token(Token = "0x4002BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int smallestIndex;

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xDFF444", Offset = "0xDFF444", VA = "0xDFF444")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xDFF790", Offset = "0xDFF790", VA = "0xDFF790")]
			internal bool <ReduceLeastSignificantVertice>b__0(Vector2 x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xDFF00C", Offset = "0xDFF00C", VA = "0xDFF00C")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xDFF02C", Offset = "0xDFF02C", VA = "0xDFF02C")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xDFF0DC", Offset = "0xDFF0DC", VA = "0xDFF0DC")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xDFCF08", Offset = "0xDFCF08", VA = "0xDFCF08")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xDFD55C", Offset = "0xDFD55C", VA = "0xDFD55C")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xDFF188", Offset = "0xDFF188", VA = "0xDFF188")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xDFD21C", Offset = "0xDFD21C", VA = "0xDFD21C")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xDFF44C", Offset = "0xDFF44C", VA = "0xDFF44C")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xDFF5EC", Offset = "0xDFF5EC", VA = "0xDFF5EC")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000447")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x2000448")]
	public class Triangulator
	{
		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x17000149")]
		public List<Vector2> Points
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xDFEAC8", Offset = "0xDFEAC8", VA = "0xDFEAC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xDFDBA8", Offset = "0xDFDBA8", VA = "0xDFDBA8")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xDFEAD0", Offset = "0xDFEAD0", VA = "0xDFEAD0")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xDFDC4C", Offset = "0xDFDC4C", VA = "0xDFDC4C")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xDFEC28", Offset = "0xDFEC28", VA = "0xDFEC28")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xDFED44", Offset = "0xDFED44", VA = "0xDFED44")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xDFEF98", Offset = "0xDFEF98", VA = "0xDFEF98")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000449")]
	public class VersionInfo
	{
		[Token(Token = "0x400234A")]
		public const byte Major = 0;

		[Token(Token = "0x400234B")]
		public const byte Minor = 9;

		[Token(Token = "0x400234C")]
		public const byte Release = 5;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x1700014A")]
		public static int FullNumber
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xDFF95C", Offset = "0xDFF95C", VA = "0xDFF95C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014B")]
		public static string FullLabel
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xDFF9CC", Offset = "0xDFF9CC", VA = "0xDFF9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xDFF808", Offset = "0xDFF808", VA = "0xDFF808")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xDFFA64", Offset = "0xDFFA64", VA = "0xDFFA64")]
		public VersionInfo()
		{
		}
	}
}
namespace ns3dRudder
{
	[Token(Token = "0x200044A")]
	public class U3D_AnimationCurve : Curve
	{
		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve Curve;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x20B9020", Offset = "0x20B9020", VA = "0x20B9020")]
		public U3D_AnimationCurve(float fxSat, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x20B9054", Offset = "0x20B9054", VA = "0x20B9054", Slot = "5")]
		public override float CalcCurveValue(float fValue)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200044B")]
	public class AxesParamUnity3D : IAxesParam
	{
		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve[] animationCurves;

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xD908C4", Offset = "0xD908C4", VA = "0xD908C4")]
		public AxesParamUnity3D()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xD90B9C", Offset = "0xD90B9C", VA = "0xD90B9C", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x200044C")]
	public class FPSLocomotion : ILocomotion
	{
		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AnglePerSecond;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LocalTranslation;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool UsePhysics;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 translation;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float angle;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform trans;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask interestingLayers;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private LayerMask sliderBlockerLayers;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int notWalkableLayer;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int walkableLayermask;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float walkRayLenght;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private RaycastHit hitInfo;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 groundPoint;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 finalPlayAreaPosition;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 moveDirection;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool checkSphere;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool moveAllowed;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 headPosition;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject finalPosition;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform camera;

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x20B5BF8", Offset = "0x20B5BF8", VA = "0x20B5BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x20B5D80", Offset = "0x20B5D80", VA = "0x20B5D80", Slot = "4")]
		public override void UpdateAxes(Controller3dRudder controller3dRudder, Vector4 axesWithFactor)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x20B5E20", Offset = "0x20B5E20", VA = "0x20B5E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x20B66D4", Offset = "0x20B66D4", VA = "0x20B66D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x20B67A4", Offset = "0x20B67A4", VA = "0x20B67A4")]
		public FPSLocomotion()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public abstract class ILocomotion : MonoBehaviour
	{
		[Token(Token = "0x6001EEF")]
		public abstract void UpdateAxes(Controller3dRudder controller3dRudder, Vector4 axesWithFactor);

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x20B67C4", Offset = "0x20B67C4", VA = "0x20B67C4")]
		protected ILocomotion()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class AxesParamCustom : IAxesParam
	{
		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Curve[] CustomCurves;

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xD8FF28", Offset = "0xD8FF28", VA = "0xD8FF28")]
		public AxesParamCustom()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xD901A0", Offset = "0xD901A0", VA = "0xD901A0", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x200044F")]
	public class AxesParamDefault : IAxesParam
	{
		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float DEFAULT_DEADZONE;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float DEFAULT_XSAT;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float DEFAULT_DEADZONE_ROTATION;

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xD9045C", Offset = "0xD9045C", VA = "0xD9045C")]
		public AxesParamDefault()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xD904E4", Offset = "0xD904E4", VA = "0xD904E4", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xD8FFA4", Offset = "0xD8FFA4", VA = "0xD8FFA4")]
		public static Curve[] GetDefaultNonNormalizedCurves()
		{
			return null;
		}
	}
	[Token(Token = "0x2000450")]
	public class AxesParamNormalizedLinear : IAxesParam
	{
		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xD9071C", Offset = "0xD9071C", VA = "0xD9071C")]
		public AxesParamNormalizedLinear()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xD90854", Offset = "0xD90854", VA = "0xD90854", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x2000451")]
	public enum Axes
	{
		[Token(Token = "0x4002369")]
		LeftRight,
		[Token(Token = "0x400236A")]
		ForwardBackward,
		[Token(Token = "0x400236B")]
		UpDown,
		[Token(Token = "0x400236C")]
		Rotation,
		[Token(Token = "0x400236D")]
		MaxAxes
	}
	[Token(Token = "0x2000452")]
	public enum Status
	{
		[Token(Token = "0x400236F")]
		NoStatus = 0,
		[Token(Token = "0x4002370")]
		NoFootStayStill = 1,
		[Token(Token = "0x4002371")]
		Initialization = 2,
		[Token(Token = "0x4002372")]
		PutYourFeet = 3,
		[Token(Token = "0x4002373")]
		PutSecondFoot = 4,
		[Token(Token = "0x4002374")]
		StayStill = 5,
		[Token(Token = "0x4002375")]
		InUse = 6,
		[Token(Token = "0x4002376")]
		Frozen = 253,
		[Token(Token = "0x4002377")]
		IsNotConnected = 254,
		[Token(Token = "0x4002378")]
		Error = 255
	}
	[Token(Token = "0x2000453")]
	public enum ErrorCode
	{
		[Token(Token = "0x400237A")]
		Success = 0,
		[Token(Token = "0x400237B")]
		NotConnected = 1,
		[Token(Token = "0x400237C")]
		Fail = 2,
		[Token(Token = "0x400237D")]
		IncorrectCommand = 3,
		[Token(Token = "0x400237E")]
		Timeout = 4,
		[Token(Token = "0x400237F")]
		DeviceNotSupported = 5,
		[Token(Token = "0x4002380")]
		DeviceInitError = 6,
		[Token(Token = "0x4002381")]
		ValidationError = 7,
		[Token(Token = "0x4002382")]
		ValidationTimeOut = 8,
		[Token(Token = "0x4002383")]
		NotReady = 9,
		[Token(Token = "0x4002384")]
		FirmwareNeedToBeUpdated = 10,
		[Token(Token = "0x4002385")]
		NotInitialized = 11,
		[Token(Token = "0x4002386")]
		NotSupported = 12,
		[Token(Token = "0x4002387")]
		DashboardInstallError = 13,
		[Token(Token = "0x4002388")]
		DashboardUpdateError = 14,
		[Token(Token = "0x4002389")]
		Other = 255
	}
	[Token(Token = "0x2000454")]
	public delegate float CalcCurveValue_t(IntPtr pCurve, float value);
	[Token(Token = "0x2000455")]
	public delegate void CallbackTypeConnect(uint value);
	[Token(Token = "0x2000456")]
	public class Sdk3dRudder
	{
		[Token(Token = "0x20007A6")]
		private class Import
		{
			[PreserveSig]
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x20B7194", Offset = "0x20B7194", VA = "0x20B7194")]
			public static extern uint Init();

			[PreserveSig]
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x20B727C", Offset = "0x20B727C", VA = "0x20B727C")]
			public static extern ushort GetSDKVersion();

			[PreserveSig]
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x20B72F4", Offset = "0x20B72F4", VA = "0x20B72F4")]
			public static extern uint GetNumberOfConnectedDevice();

			[PreserveSig]
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0x20B736C", Offset = "0x20B736C", VA = "0x20B736C")]
			public static extern bool IsDeviceConnected(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x20B73F4", Offset = "0x20B73F4", VA = "0x20B73F4")]
			public static extern ushort GetFWVersion(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x20B7478", Offset = "0x20B7478", VA = "0x20B7478")]
			public static extern ErrorCode HideSystemDevice(uint nPortNumber, bool bHide);

			[PreserveSig]
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x20B750C", Offset = "0x20B750C", VA = "0x20B750C")]
			public static extern bool IsSystemDeviceHidden(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0x20B7594", Offset = "0x20B7594", VA = "0x20B7594")]
			public static extern ErrorCode PlaySnd(uint nPortNumber, ushort nFrequency, ushort nDuration);

			[PreserveSig]
			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x20B76A0", Offset = "0x20B76A0", VA = "0x20B76A0")]
			public static extern ErrorCode PlaySndEx1(uint nPortNumber, uint nSize, IntPtr pTones, bool bAddToPlayedList);

			[PreserveSig]
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x20B77EC", Offset = "0x20B77EC", VA = "0x20B77EC")]
			public static extern ErrorCode PlaySndEx2(uint nPortNumber, IntPtr sTones, bool bAddToPlayedList);

			[PreserveSig]
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x20B78E4", Offset = "0x20B78E4", VA = "0x20B78E4")]
			public static extern ErrorCode GetUserOffset(uint nPortNumber, IntPtr pAxisValue);

			[PreserveSig]
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x20B7D54", Offset = "0x20B7D54", VA = "0x20B7D54")]
			public static extern ErrorCode GetAxes(uint nPortNumber, IntPtr pAxesParam, IntPtr pAxisValue, CalcCurveValue_t pCalcCurve);

			[PreserveSig]
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x20B7E08", Offset = "0x20B7E08", VA = "0x20B7E08")]
			public static extern Status GetStatus(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x20B7E88", Offset = "0x20B7E88", VA = "0x20B7E88")]
			public static extern ushort GetSensor(uint nPortNumber, uint nIndex);

			[PreserveSig]
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x20B801C", Offset = "0x20B801C", VA = "0x20B801C")]
			public static extern IntPtr GetDeviceInformation(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x20B8138", Offset = "0x20B8138", VA = "0x20B8138")]
			public static extern ErrorCode SetFreeze(uint nPortNumber, bool bEnable);

			[PreserveSig]
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x20B81CC", Offset = "0x20B81CC", VA = "0x20B81CC")]
			public static extern bool IsFrozen(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x20B82C8", Offset = "0x20B82C8", VA = "0x20B82C8")]
			public static extern IntPtr GetErrorText(ErrorCode nError);

			[PreserveSig]
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x20B8254", Offset = "0x20B8254", VA = "0x20B8254")]
			public static extern ErrorCode GetLastSdkError();

			[PreserveSig]
			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x20B8344", Offset = "0x20B8344", VA = "0x20B8344")]
			public static extern void Set3dREvent(CallbackTypeConnect OnConnect, CallbackTypeConnect OnDisconnect, CallbackTypeConnect OnEndSound);

			[PreserveSig]
			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x20B6FC8", Offset = "0x20B6FC8", VA = "0x20B6FC8")]
			public static extern void InitQueueEvent();

			[PreserveSig]
			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x20B84F8", Offset = "0x20B84F8", VA = "0x20B84F8")]
			public static extern IntPtr GetEventMessage();

			[PreserveSig]
			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x20B8570", Offset = "0x20B8570", VA = "0x20B8570")]
			public static extern float CalcCurveValue(float fDeadZone, float fxSat, float fExp, float fValue);

			[PreserveSig]
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x20B868C", Offset = "0x20B868C", VA = "0x20B868C")]
			public static extern float CalcNonSymmetricalPitch(uint nPortNumber, float fNormalizedV, IntPtr pCurve);

			[PreserveSig]
			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x20B8098", Offset = "0x20B8098", VA = "0x20B8098")]
			public static extern void MemCpy(IntPtr pDest, IntPtr pSrc, int nSize);

			[PreserveSig]
			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x20B8884", Offset = "0x20B8884", VA = "0x20B8884")]
			public static extern ErrorCode StopSDK();

			[PreserveSig]
			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x20B8E38", Offset = "0x20B8E38", VA = "0x20B8E38")]
			public static extern void EndSDK();

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x20B8EA8", Offset = "0x20B8EA8", VA = "0x20B8EA8")]
			public Import()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAE8404", Offset = "0xAE8404")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<uint> <>9__3_0;

			[Token(Token = "0x4002BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<uint> <>9__3_1;

			[Token(Token = "0x4002BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<uint> <>9__3_2;

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x20B8A68", Offset = "0x20B8A68", VA = "0x20B8A68")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x20B8A70", Offset = "0x20B8A70", VA = "0x20B8A70")]
			internal void <Initialize>b__3_0(uint portNumber)
			{
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x20B8BD8", Offset = "0x20B8BD8", VA = "0x20B8BD8")]
			internal void <Initialize>b__3_1(uint portNumber)
			{
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x20B8D40", Offset = "0x20B8D40", VA = "0x20B8D40")]
			internal void <Initialize>b__3_2(uint portNumber)
			{
			}
		}

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MAX_DEVICE;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly uint _3DRUDDER_SDK_VERSION;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly uint _3DRUDDER_PACKAGE_VERSION;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x20B6AB4", Offset = "0x20B6AB4", VA = "0x20B6AB4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x20B7038", Offset = "0x20B7038", VA = "0x20B7038")]
		public static ErrorCode Init()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x20B7190", Offset = "0x20B7190", VA = "0x20B7190")]
		public static ushort GetSDKVersion()
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x20B72F0", Offset = "0x20B72F0", VA = "0x20B72F0")]
		public static uint GetNumberOfConnectedDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x20B7368", Offset = "0x20B7368", VA = "0x20B7368")]
		public static bool IsDeviceConnected(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x20B73F0", Offset = "0x20B73F0", VA = "0x20B73F0")]
		public static ushort GetVersion(uint nPortNumber)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x20B7470", Offset = "0x20B7470", VA = "0x20B7470")]
		public static ErrorCode HideSystemDevice(uint nPortNumber, bool bHide)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x20B7508", Offset = "0x20B7508", VA = "0x20B7508")]
		public static bool IsSystemDeviceHidden(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x20B7590", Offset = "0x20B7590", VA = "0x20B7590")]
		public static ErrorCode PlaySnd(uint nPortNumber, ushort nFrequency, ushort nDuration)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x20B762C", Offset = "0x20B762C", VA = "0x20B762C")]
		public static ErrorCode PlaySndEx(uint nPortNumber, uint nSize, Tone sTones, bool bAddToPlayedList = true)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x20B7748", Offset = "0x20B7748", VA = "0x20B7748")]
		public static ErrorCode PlaySndEx(uint nPortNumber, string sTones, bool bAddToPlayedList = true)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x20B7884", Offset = "0x20B7884", VA = "0x20B7884")]
		public static ErrorCode GetUserOffset(uint nPortNumber, AxesValue sAxis)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x20B7974", Offset = "0x20B7974", VA = "0x20B7974")]
		public static ErrorCode GetAxes(uint nPortNumber, IAxesParam sAxesParam, AxesValue sAxes)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x20B7E04", Offset = "0x20B7E04", VA = "0x20B7E04")]
		public static Status GetStatus(uint nPortNumber)
		{
			return default(Status);
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x20B7E84", Offset = "0x20B7E84", VA = "0x20B7E84")]
		public static ushort GetSensor(uint nPortNumber, uint nIndex)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x20B7F18", Offset = "0x20B7F18", VA = "0x20B7F18")]
		public static DeviceInformation GetDeviceInformation(uint nPortNumber)
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x20B8130", Offset = "0x20B8130", VA = "0x20B8130")]
		public static ErrorCode SetFreeze(uint nPortNumber, bool bEnable)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x20B81C8", Offset = "0x20B81C8", VA = "0x20B81C8")]
		public static bool IsFrozen(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x20B8250", Offset = "0x20B8250", VA = "0x20B8250")]
		public static ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x20B7204", Offset = "0x20B7204", VA = "0x20B7204")]
		public static string GetErrorText(ErrorCode nError)
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x20B6FC4", Offset = "0x20B6FC4", VA = "0x20B6FC4")]
		public static void SetEvent(CallbackTypeConnect OnConnect, CallbackTypeConnect OnDisconnect, CallbackTypeConnect OnEndSound)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x20B83FC", Offset = "0x20B83FC", VA = "0x20B83FC")]
		public static EventData GetEventMessage()
		{
			return null;
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x20B856C", Offset = "0x20B856C", VA = "0x20B856C")]
		public static float CalcCurveValue(float fDeadZone, float fxSat, float fExp, float fValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x20B8614", Offset = "0x20B8614", VA = "0x20B8614")]
		public static float CalcNonSymmetricalPitch(uint nPortNumber, float fNormalizedV, Curve sCurve)
		{
			return default(float);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x20B872C", Offset = "0x20B872C", VA = "0x20B872C")]
		public static ErrorCode Stop()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x20B88F8", Offset = "0x20B88F8", VA = "0x20B88F8")]
		public static Vector3 GetAxes3D(AxesValue sAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x20B8988", Offset = "0x20B8988", VA = "0x20B8988")]
		public Sdk3dRudder()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class EventRudder
	{
		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<uint> OnConnectEvent;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<uint> OnDisconnectEvent;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<uint> OnEndSoundEvent;

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x20B5948", Offset = "0x20B5948", VA = "0x20B5948")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB06358", Offset = "0xB06358")]
		public static void OnConnect(uint nPortNumber)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x20B5A00", Offset = "0x20B5A00", VA = "0x20B5A00")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB063BC", Offset = "0xB063BC")]
		public static void OnDisconnect(uint nPortNumber)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x20B5AB8", Offset = "0x20B5AB8", VA = "0x20B5AB8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB06420", Offset = "0xB06420")]
		public static void OnEndSound(uint nPortNumber)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x20B5B70", Offset = "0x20B5B70", VA = "0x20B5B70")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x20B5BEC", Offset = "0x20B5BEC", VA = "0x20B5BEC")]
		public EventRudder()
		{
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x2000458")]
	public class EventData
	{
		[Token(Token = "0x20007A8")]
		public enum TypeEVent
		{
			[Token(Token = "0x4002C01")]
			OnConnect,
			[Token(Token = "0x4002C02")]
			OnDisconnect,
			[Token(Token = "0x4002C03")]
			OnEndSound
		}

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TypeEVent typeEvent;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint portNumber;

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x20B5940", Offset = "0x20B5940", VA = "0x20B5940")]
		public EventData()
		{
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x2000459")]
	public class DeviceInformation
	{
		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte m_sDeviceName0;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private byte m_sDeviceName1;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private byte m_sDeviceName2;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private byte m_sDeviceName3;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private byte m_sDeviceName4;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private byte m_sDeviceName5;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private byte m_sDeviceName6;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private byte m_sDeviceName7;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte m_sDeviceName8;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private byte m_sDeviceName9;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private byte m_sDeviceName10;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private byte m_sDeviceName11;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private byte m_sDeviceName12;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private byte m_sDeviceName13;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private byte m_sDeviceName14;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private byte m_sDeviceName15;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte m_sDeviceName16;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private byte m_sDeviceName17;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private byte m_sDeviceName18;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private byte m_sDeviceName19;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private byte m_sDeviceName20;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private byte m_sDeviceName21;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private byte m_sDeviceName22;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		private byte m_sDeviceName23;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte m_sDeviceName24;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private byte m_sDeviceName25;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private byte m_sDeviceName26;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private byte m_sDeviceName27;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private byte m_sDeviceName28;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private byte m_sDeviceName29;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private byte m_sDeviceName30;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		private byte m_sDeviceName31;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint m_nSerialNumber;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_fMaxRoll;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_fMaxPitch;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_fMaxYaw;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_fUserRoll;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_fUserPitch;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_fUserYaw;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_DefaultRoll2YawCompensation;

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xD91640", Offset = "0xD91640", VA = "0xD91640")]
		public DeviceInformation()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xD91648", Offset = "0xD91648", VA = "0xD91648")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xD918D0", Offset = "0xD918D0", VA = "0xD918D0")]
		public uint GetSerialNumber()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xD918D8", Offset = "0xD918D8", VA = "0xD918D8")]
		public void SetUserRoll(float nVal)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xD918E0", Offset = "0xD918E0", VA = "0xD918E0")]
		public void SetUserPitch(float nVal)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xD918E8", Offset = "0xD918E8", VA = "0xD918E8")]
		public void SetUserYaw(float nVal)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xD918F0", Offset = "0xD918F0", VA = "0xD918F0")]
		public float GetMaxRoll()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xD918F8", Offset = "0xD918F8", VA = "0xD918F8")]
		public float GetMaxPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xD91900", Offset = "0xD91900", VA = "0xD91900")]
		public float GetMaxYaw()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xD91908", Offset = "0xD91908", VA = "0xD91908")]
		public float GetUserRoll()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xD91910", Offset = "0xD91910", VA = "0xD91910")]
		public float GetUserPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xD91918", Offset = "0xD91918", VA = "0xD91918")]
		public float GetUserYaw()
		{
			return default(float);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xD91920", Offset = "0xD91920", VA = "0xD91920")]
		public float GetDefaultRoll2YawCompensation()
		{
			return default(float);
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x200045A")]
	public class AxesValue : IDisposable
	{
		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_Axes1;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_Axes2;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Axes3;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_Axes4;

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xD90DA4", Offset = "0xD90DA4", VA = "0xD90DA4", Slot = "1")]
		~AxesValue()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xD90E14", Offset = "0xD90E14", VA = "0xD90E14")]
		public AxesValue()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xD90E3C", Offset = "0xD90E3C", VA = "0xD90E3C")]
		public float Get(Axes nAxis)
		{
			return default(float);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xD90E88", Offset = "0xD90E88", VA = "0xD90E88", Slot = "5")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[StructLayout(0)]
	[Token(Token = "0x200045B")]
	public class Curve : IDisposable
	{
		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float DeadZone;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float XSat;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Exp;

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xD91504", Offset = "0xD91504", VA = "0xD91504")]
		public Curve()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xD90414", Offset = "0xD90414", VA = "0xD90414")]
		public Curve(float fxSat, float fDeadZone, float fExp)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xD9153C", Offset = "0xD9153C", VA = "0xD9153C", Slot = "1")]
		~Curve()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xD915AC", Offset = "0xD915AC", VA = "0xD915AC", Slot = "5")]
		public virtual float CalcCurveValue(float fValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xD9163C", Offset = "0xD9163C", VA = "0xD9163C", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045C")]
	public abstract class IAxesParam : ScriptableObject
	{
		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Curve[] m_Curve;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float Roll2YawCompensation;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool NonSymmetrical;

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x20B68FC", Offset = "0x20B68FC", VA = "0x20B68FC")]
		public IAxesParam()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x20B69B0", Offset = "0x20B69B0", VA = "0x20B69B0", Slot = "4")]
		public virtual ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x20B69B8", Offset = "0x20B69B8", VA = "0x20B69B8")]
		public Curve GetCurve(Axes nCurve)
		{
			return null;
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x20B6A04", Offset = "0x20B6A04", VA = "0x20B6A04")]
		public void SetCurve(Axes nCurve, Curve pCurve)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x20B6A84", Offset = "0x20B6A84", VA = "0x20B6A84")]
		public void SetCurves(Curve[] curves)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x20B6AA8", Offset = "0x20B6AA8", VA = "0x20B6AA8")]
		public void NoUpDown()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x20B6820", Offset = "0x20B6820", VA = "0x20B6820")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB06484", Offset = "0xB06484")]
		public static float CalcCurveValueCb(IntPtr pCurve, float fVal)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200045D")]
	public struct InternalAxesParam
	{
		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fDeadZone1;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_fDeadZone2;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_fDeadZone3;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_fDeadZone4;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fxSat1;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fxSat2;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fxSat3;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_fxSat4;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_fExp1;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_fExp2;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_fExp3;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_fExp4;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong m_handleCurveObject1;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ulong m_handleCurveObject2;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ulong m_handleCurveObject3;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ulong m_handleCurveObject4;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public uint m_bValidatedAxes1;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public uint m_bValidatedAxes2;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public uint m_bValidatedAxes3;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public uint m_bValidatedAxes4;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_fRoll2YawCompensation;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public uint m_bNonSymmetrical;
	}
	[StructLayout(0)]
	[Token(Token = "0x200045E")]
	public class Tone : IDisposable
	{
		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8DA4", Offset = "0xAF8DA4")]
		private ushort <Frequency>k__BackingField;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8DB4", Offset = "0xAF8DB4")]
		private ushort <DurationOfTone>k__BackingField;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAF8DC4", Offset = "0xAF8DC4")]
		private ushort <PauseAfterTone>k__BackingField;

		[Token(Token = "0x1700014C")]
		public ushort Frequency
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x20B8F00", Offset = "0x20B8F00", VA = "0x20B8F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB064E8", Offset = "0xB064E8")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x20B8F08", Offset = "0x20B8F08", VA = "0x20B8F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB064F8", Offset = "0xB064F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public ushort DurationOfTone
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x20B8F10", Offset = "0x20B8F10", VA = "0x20B8F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06508", Offset = "0xB06508")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x20B8F18", Offset = "0x20B8F18", VA = "0x20B8F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06518", Offset = "0xB06518")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public ushort PauseAfterTone
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x20B8F20", Offset = "0x20B8F20", VA = "0x20B8F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06528", Offset = "0xB06528")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x20B8F28", Offset = "0x20B8F28", VA = "0x20B8F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB06538", Offset = "0xB06538")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x20B8F30", Offset = "0x20B8F30", VA = "0x20B8F30", Slot = "1")]
		~Tone()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x20B8FA0", Offset = "0x20B8FA0", VA = "0x20B8FA0")]
		public Tone()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x20B8FD8", Offset = "0x20B8FD8", VA = "0x20B8FD8")]
		public Tone(ushort nFrequency, ushort nDurationOfTone, ushort nPauseAfterTone)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x20B901C", Offset = "0x20B901C", VA = "0x20B901C", Slot = "5")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class SmoothMovement
	{
		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enable;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAF8DD4", Offset = "0xAF8DD4")]
		public float Smoothness;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float CurrentSpeed;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x20B8EB0", Offset = "0x20B8EB0", VA = "0x20B8EB0")]
		public SmoothMovement()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x20B8EE4", Offset = "0x20B8EE4", VA = "0x20B8EE4")]
		public float ComputeSpeed(float input, float deltatime)
		{
			return default(float);
		}
	}
}
