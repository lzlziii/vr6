using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using ES;
using EternalStarlight;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Voice;
using Pico.Platform;
using Pico.Platform.Models;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityStandardAssets.ImageEffects;
using VacuumBreather;
using Viveport;
using Viveport.Internal;
using VolumetricLines;
using VolumetricLines.Utils;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AddVertexId : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCBB3AC", Offset = "0xCBB3AC", VA = "0xCBB3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCBB4A0", Offset = "0xCBB4A0", VA = "0xCBB4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCBB4A4", Offset = "0xCBB4A4", VA = "0xCBB4A4")]
	public AddVertexId()
	{
	}
}
[Token(Token = "0x2000003")]
public class AnimationFixer : MonoBehaviour
{
	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCC63F8", Offset = "0xCC63F8", VA = "0xCC63F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCC63FC", Offset = "0xCC63FC", VA = "0xCC63FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCC6720", Offset = "0xCC6720", VA = "0xCC6720")]
	public AnimationFixer()
	{
	}
}
[Token(Token = "0x2000004")]
public class SciFiBeamScript : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D71E8", Offset = "0x6D71E8")]
	public GameObject[] beamLineRendererPrefab;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] beamStartPrefab;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] beamEndPrefab;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBeam;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject beamStart;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject beamEnd;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject beam;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer line;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D7220", Offset = "0x6D7220")]
	public float beamEndOffset;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float textureScrollSpeed;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float textureLengthScale;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D7258", Offset = "0x6D7258")]
	public Slider endOffSetSlider;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider scrollSpeedSlider;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D7290", Offset = "0x6D7290")]
	public Text textBeamName;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD45344", Offset = "0xD45344", VA = "0xD45344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD454B4", Offset = "0xD454B4", VA = "0xD454B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD45BCC", Offset = "0xD45BCC", VA = "0xD45BCC")]
	public void nextBeam()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xD45CC0", Offset = "0xD45CC0", VA = "0xD45CC0")]
	public void previousBeam()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xD45DB4", Offset = "0xD45DB4", VA = "0xD45DB4")]
	public void UpdateEndOffset()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xD45DF0", Offset = "0xD45DF0", VA = "0xD45DF0")]
	public void UpdateScrollSpeed()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xD458E4", Offset = "0xD458E4", VA = "0xD458E4")]
	private void ShootBeamInDir(Vector3 start, Vector3 dir)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xD45E2C", Offset = "0xD45E2C", VA = "0xD45E2C")]
	public SciFiBeamScript()
	{
	}
}
[Token(Token = "0x2000005")]
public class AssignToTracker : MonoBehaviour
{
	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCCAF18", Offset = "0xCCAF18", VA = "0xCCAF18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCCAF1C", Offset = "0xCCAF1C", VA = "0xCCAF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCCAF20", Offset = "0xCCAF20", VA = "0xCCAF20")]
	public AssignToTracker()
	{
	}
}
[Token(Token = "0x2000006")]
public class BeamControllerTester : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeamController bc;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB5E8D0", Offset = "0xB5E8D0", VA = "0xB5E8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB5E954", Offset = "0xB5E954", VA = "0xB5E954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB5E958", Offset = "0xB5E958", VA = "0xB5E958")]
	public BeamControllerTester()
	{
	}
}
[Token(Token = "0x2000007")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000008")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB607A4", Offset = "0xB607A4", VA = "0xB607A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB608D4", Offset = "0xB608D4", VA = "0xB608D4")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB61024", Offset = "0xB61024", VA = "0xB61024")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB610E0", Offset = "0xB610E0", VA = "0xB610E0")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB6113C", Offset = "0xB6113C", VA = "0xB6113C")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB611A4", Offset = "0xB611A4", VA = "0xB611A4")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB61080", Offset = "0xB61080", VA = "0xB61080")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB615D8", Offset = "0xB615D8", VA = "0xB615D8")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB629E8", Offset = "0xB629E8", VA = "0xB629E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xB62BF0", Offset = "0xB62BF0", VA = "0xB62BF0")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xB62EB8", Offset = "0xB62EB8", VA = "0xB62EB8")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB62ED0", Offset = "0xB62ED0", VA = "0xB62ED0")]
	private void Open()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB62AF8", Offset = "0xB62AF8", VA = "0xB62AF8")]
	private void Close()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB62FC8", Offset = "0xB62FC8", VA = "0xB62FC8")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D72E8", Offset = "0x6D72E8")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D7330", Offset = "0x6D7330")]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB62FD0", Offset = "0xB62FD0", VA = "0xB62FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB63148", Offset = "0xB63148", VA = "0xB63148")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB6316C", Offset = "0xB6316C", VA = "0xB6316C")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB632CC", Offset = "0xB632CC", VA = "0xB632CC")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB63170", Offset = "0xB63170", VA = "0xB63170")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB63400", Offset = "0xB63400", VA = "0xB63400")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x200000B")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB63464", Offset = "0xB63464", VA = "0xB63464")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB636D8", Offset = "0xB636D8", VA = "0xB636D8")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB63898", Offset = "0xB63898", VA = "0xB63898")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB637A4", Offset = "0xB637A4", VA = "0xB637A4")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB63988", Offset = "0xB63988", VA = "0xB63988")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB63AA4", Offset = "0xB63AA4", VA = "0xB63AA4")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x200000C")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB63AB4", Offset = "0xB63AB4", VA = "0xB63AB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB63B2C", Offset = "0xB63B2C", VA = "0xB63B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB63CB4", Offset = "0xB63CB4", VA = "0xB63CB4")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB63DE0", Offset = "0xB63DE0", VA = "0xB63DE0")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB63D40", Offset = "0xB63D40", VA = "0xB63D40")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB63E80", Offset = "0xB63E80", VA = "0xB63E80")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB63F24", Offset = "0xB63F24", VA = "0xB63F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB63FCC", Offset = "0xB63FCC", VA = "0xB63FCC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB6405C", Offset = "0xB6405C", VA = "0xB6405C")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4DBC", Offset = "0x6D4DBC")]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x9FB694", Offset = "0x9FB694", VA = "0x9FB694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0x9FB6DC", Offset = "0x9FB6DC", VA = "0x9FB6DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x9FB18C", Offset = "0x9FB18C", VA = "0x9FB18C")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x9FB1B8", Offset = "0x9FB1B8", VA = "0x9FB1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x9FB1BC", Offset = "0x9FB1BC", VA = "0x9FB1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x9FB69C", Offset = "0x9FB69C", VA = "0x9FB69C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB6406C", Offset = "0xB6406C", VA = "0xB6406C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB640C8", Offset = "0xB640C8", VA = "0xB640C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB640F4", Offset = "0xB640F4", VA = "0xB640F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DC684", Offset = "0x6DC684")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB6416C", Offset = "0xB6416C", VA = "0xB6416C")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB641E0", Offset = "0xB641E0", VA = "0xB641E0")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB64344", Offset = "0xB64344", VA = "0xB64344")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB6483C", Offset = "0xB6483C", VA = "0xB6483C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB648B8", Offset = "0xB648B8", VA = "0xB648B8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB64930", Offset = "0xB64930", VA = "0xB64930")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB64938", Offset = "0xB64938", VA = "0xB64938")]
	public void Play()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB649CC", Offset = "0xB649CC", VA = "0xB649CC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB64A64", Offset = "0xB64A64", VA = "0xB64A64")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4DCC", Offset = "0x6D4DCC")]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000053")]
			[Address(RVA = "0x9FB97C", Offset = "0x9FB97C", VA = "0x9FB97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000055")]
			[Address(RVA = "0x9FB9C4", Offset = "0x9FB9C4", VA = "0x9FB9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x9FB6E4", Offset = "0x9FB6E4", VA = "0x9FB6E4")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0x9FB710", Offset = "0x9FB710", VA = "0x9FB710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x9FB714", Offset = "0x9FB714", VA = "0x9FB714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x9FB984", Offset = "0x9FB984", VA = "0x9FB984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB64A6C", Offset = "0xB64A6C", VA = "0xB64A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB64AE4", Offset = "0xB64AE4", VA = "0xB64AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB64B2C", Offset = "0xB64B2C", VA = "0xB64B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB64A70", Offset = "0xB64A70", VA = "0xB64A70")]
	private void Play()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB64BFC", Offset = "0xB64BFC", VA = "0xB64BFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DC734", Offset = "0x6DC734")]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB64C74", Offset = "0xB64C74", VA = "0xB64C74")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB64C7C", Offset = "0xB64C7C", VA = "0xB64C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB64E68", Offset = "0xB64E68", VA = "0xB64E68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB658B4", Offset = "0xB658B4", VA = "0xB658B4")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB65924", Offset = "0xB65924", VA = "0xB65924")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB65A24", Offset = "0xB65A24", VA = "0xB65A24")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB65AA4", Offset = "0xB65AA4", VA = "0xB65AA4")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB65B14", Offset = "0xB65B14", VA = "0xB65B14")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB65C8C", Offset = "0xB65C8C", VA = "0xB65C8C")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB65F8C", Offset = "0xB65F8C", VA = "0xB65F8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB65FF0", Offset = "0xB65FF0", VA = "0xB65FF0")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB66224", Offset = "0xB66224", VA = "0xB66224")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x2000017")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB665F0", Offset = "0xB665F0", VA = "0xB665F0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB66684", Offset = "0xB66684", VA = "0xB66684")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB6671C", Offset = "0xB6671C", VA = "0xB6671C")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB667E8", Offset = "0xB667E8", VA = "0xB667E8")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB667F0", Offset = "0xB667F0", VA = "0xB667F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB66848", Offset = "0xB66848", VA = "0xB66848")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB66898", Offset = "0xB66898", VA = "0xB66898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB668D0", Offset = "0xB668D0", VA = "0xB668D0")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB66948", Offset = "0xB66948", VA = "0xB66948")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6D73DC", Offset = "0x6D73DC")]
	public Text angleXText;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB66960", Offset = "0xB66960", VA = "0xB66960")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB66A14", Offset = "0xB66A14", VA = "0xB66A14")]
	public void Stop()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB66AAC", Offset = "0xB66AAC", VA = "0xB66AAC")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB66B90", Offset = "0xB66B90", VA = "0xB66B90")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB66C94", Offset = "0xB66C94", VA = "0xB66C94")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4DDC", Offset = "0x6D4DDC")]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007A")]
			[Address(RVA = "0x9FBAF8", Offset = "0x9FBAF8", VA = "0x9FBAF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0x9FBB40", Offset = "0x9FBB40", VA = "0x9FBB40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x9FB9CC", Offset = "0x9FB9CC", VA = "0x9FB9CC")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x9FB9F8", Offset = "0x9FB9F8", VA = "0x9FB9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0x9FB9FC", Offset = "0x9FB9FC", VA = "0x9FB9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x9FBB00", Offset = "0x9FBB00", VA = "0x9FBB00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6D742C", Offset = "0x6D742C")]
	private Transform[] lookingTransforms;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB66C9C", Offset = "0xB66C9C", VA = "0xB66C9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB66CF8", Offset = "0xB66CF8", VA = "0xB66CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB66E98", Offset = "0xB66E98", VA = "0xB66E98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB66F3C", Offset = "0xB66F3C", VA = "0xB66F3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB66EC4", Offset = "0xB66EC4", VA = "0xB66EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DC7E4", Offset = "0x6DC7E4")]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB66F44", Offset = "0xB66F44", VA = "0xB66F44")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB66CFC", Offset = "0xB66CFC", VA = "0xB66CFC")]
	private void Looking()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB671D8", Offset = "0xB671D8", VA = "0xB671D8")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x200001C")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB671F4", Offset = "0xB671F4", VA = "0xB671F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB6724C", Offset = "0xB6724C", VA = "0xB6724C")]
	private void Update()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB67250", Offset = "0xB67250", VA = "0xB67250")]
	private void Check()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB67828", Offset = "0xB67828", VA = "0xB67828")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB67880", Offset = "0xB67880", VA = "0xB67880")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB67888", Offset = "0xB67888", VA = "0xB67888")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x200001E")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB67890", Offset = "0xB67890", VA = "0xB67890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB67A90", Offset = "0xB67A90", VA = "0xB67A90")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB67BE4", Offset = "0xB67BE4", VA = "0xB67BE4")]
	private void Open()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB67C3C", Offset = "0xB67C3C", VA = "0xB67C3C")]
	private void Play()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB67E24", Offset = "0xB67E24", VA = "0xB67E24")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB68028", Offset = "0xB68028", VA = "0xB68028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB6802C", Offset = "0xB6802C", VA = "0xB6802C")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB68124", Offset = "0xB68124", VA = "0xB68124")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x2000020")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB6812C", Offset = "0xB6812C", VA = "0xB6812C")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB683BC", Offset = "0xB683BC", VA = "0xB683BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB684C4", Offset = "0xB684C4", VA = "0xB684C4")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB68624", Offset = "0xB68624", VA = "0xB68624")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x2000021")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB68834", Offset = "0xB68834", VA = "0xB68834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xB68888", Offset = "0xB68888", VA = "0xB68888")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB68904", Offset = "0xB68904", VA = "0xB68904")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D4DEC", Offset = "0x6D4DEC")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D7524", Offset = "0x6D7524")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D755C", Offset = "0x6D755C")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7594", Offset = "0x6D7594")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB63454", Offset = "0xB63454", VA = "0xB63454")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x2000023")]
public class BhapticsLogger
{
	[Token(Token = "0x2000024")]
	public enum LogLevel
	{
		[Token(Token = "0x400007D")]
		Debug,
		[Token(Token = "0x400007E")]
		Info,
		[Token(Token = "0x400007F")]
		Error
	}

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB62DCC", Offset = "0xB62DCC", VA = "0xB62DCC")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB635E8", Offset = "0xB635E8", VA = "0xB635E8")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB6592C", Offset = "0xB6592C", VA = "0xB6592C")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB659CC", Offset = "0xB659CC", VA = "0xB659CC")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000025")]
public class BhapticsManager
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB61D48", Offset = "0xB61D48", VA = "0xB61D48")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB65C94", Offset = "0xB65C94", VA = "0xB65C94")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB65CEC", Offset = "0xB65CEC", VA = "0xB65CEC")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB65F80", Offset = "0xB65F80", VA = "0xB65F80")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000026")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB6862C", Offset = "0xB6862C", VA = "0xB6862C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB68688", Offset = "0xB68688", VA = "0xB68688")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB6882C", Offset = "0xB6882C", VA = "0xB6882C")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000027")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB6890C", Offset = "0xB6890C", VA = "0xB6890C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB68D88", Offset = "0xB68D88", VA = "0xB68D88")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB68A24", Offset = "0xB68A24", VA = "0xB68A24")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB68DE0", Offset = "0xB68DE0", VA = "0xB68DE0")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D4E58", Offset = "0x6D4E58")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_SuperHexagon : MonoBehaviour
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D75DC", Offset = "0x6D75DC")]
	public float _AlphaHexa;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float TimeX;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D75F4", Offset = "0x6D75F4")]
	public float HexaSize;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _BorderSize;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color _BorderColor;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color _HexaColor;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _SpotSize;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 center;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float Radius;

	[Token(Token = "0x17000007")]
	private Material material
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xD7EBFC", Offset = "0xD7EBFC", VA = "0xD7EBFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xD7ECD8", Offset = "0xD7ECD8", VA = "0xD7ECD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xD7ED5C", Offset = "0xD7ED5C", VA = "0xD7ED5C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xD7F128", Offset = "0xD7F128", VA = "0xD7F128")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xD7F12C", Offset = "0xD7F12C", VA = "0xD7F12C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xD7F1D8", Offset = "0xD7F1D8", VA = "0xD7F1D8")]
	public CameraFilterPack_AAA_SuperHexagon()
	{
	}
}
[Token(Token = "0x2000029")]
[ExecuteInEditMode]
public class CustomIK : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootBone;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform elbowBone;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endBone;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform extraJoint;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetIK;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform elbowIK;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform extraIK;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minElbowAng;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool specialBridgeLimit;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool debugLines;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool handRotation;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	public bool isEnabled;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xD8AFA8", Offset = "0xD8AFA8", VA = "0xD8AFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xD8B100", Offset = "0xD8B100", VA = "0xD8B100")]
	private void CalculateIK()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xD8B990", Offset = "0xD8B990", VA = "0xD8B990")]
	private Vector3 CalculateElbowAdjacent()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xD8B930", Offset = "0xD8B930", VA = "0xD8B930")]
	private float CalculateTriangleHeight(float side1, float side2, float side3)
	{
		return default(float);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xD8BD58", Offset = "0xD8BD58", VA = "0xD8BD58")]
	public CustomIK()
	{
	}
}
[Token(Token = "0x200002A")]
public class _CameraRotate_DS_L01 : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetObject;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float averageDistance;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomSpeed;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotateOnOff;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x9F8194", Offset = "0x9F8194", VA = "0x9F8194")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x9F84D4", Offset = "0x9F84D4", VA = "0x9F84D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x9F8198", Offset = "0x9F8198", VA = "0x9F8198")]
	public void Init()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x9F84D8", Offset = "0x9F84D8", VA = "0x9F84D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x9F8958", Offset = "0x9F8958", VA = "0x9F8958")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x9F8988", Offset = "0x9F8988", VA = "0x9F8988")]
	public _CameraRotate_DS_L01()
	{
	}
}
[Token(Token = "0x200002B")]
public class _ScrollingUVs_DS_L01 : MonoBehaviour
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int materialIndex;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x9F91F4", Offset = "0x9F91F4", VA = "0x9F91F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x9F92DC", Offset = "0x9F92DC", VA = "0x9F92DC")]
	public _ScrollingUVs_DS_L01()
	{
	}
}
[Token(Token = "0x200002C")]
public class _Turn_DS_L01 : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SpeedY;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedZ;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x9F9640", Offset = "0x9F9640", VA = "0x9F9640")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x9F9644", Offset = "0x9F9644", VA = "0x9F9644")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x9F967C", Offset = "0x9F967C", VA = "0x9F967C")]
	public _Turn_DS_L01()
	{
	}
}
[Token(Token = "0x200002D")]
public class _UI_Flicker : MonoBehaviour
{
	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4EB4", Offset = "0x6D4EB4")]
	private sealed class <Disp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public _UI_Flicker <>4__this;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x1181A8C", Offset = "0x1181A8C", VA = "0x1181A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0x1181AD4", Offset = "0x1181AD4", VA = "0x1181AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x11818EC", Offset = "0x11818EC", VA = "0x11818EC")]
		[DebuggerHidden]
		public <Disp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x1181918", Offset = "0x1181918", VA = "0x1181918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x118191C", Offset = "0x118191C", VA = "0x118191C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x1181A94", Offset = "0x1181A94", VA = "0x1181A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image img2;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x9F96E0", Offset = "0x9F96E0", VA = "0x9F96E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x9F9738", Offset = "0x9F9738", VA = "0x9F9738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DC894", Offset = "0x6DC894")]
	private IEnumerator Disp()
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x9F97B0", Offset = "0x9F97B0", VA = "0x9F97B0")]
	public _UI_Flicker()
	{
	}
}
[Token(Token = "0x200002F")]
public class _CameraRotate_DS_L03 : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetObject;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float averageDistance;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomSpeed;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotateOnOff;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x9F89C4", Offset = "0x9F89C4", VA = "0x9F89C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x9F8D04", Offset = "0x9F8D04", VA = "0x9F8D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x9F89C8", Offset = "0x9F89C8", VA = "0x9F89C8")]
	public void Init()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x9F8D08", Offset = "0x9F8D08", VA = "0x9F8D08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x9F9188", Offset = "0x9F9188", VA = "0x9F9188")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x9F91B8", Offset = "0x9F91B8", VA = "0x9F91B8")]
	public _CameraRotate_DS_L03()
	{
	}
}
[Token(Token = "0x2000030")]
public class _ScrollingUVs_L03 : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int materialIndex;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x9F9350", Offset = "0x9F9350", VA = "0x9F9350")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x9F9438", Offset = "0x9F9438", VA = "0x9F9438")]
	public _ScrollingUVs_L03()
	{
	}
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
public class _Set_Sorting_Layer_L03 : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer MyRenderer;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string MySortingLayer;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MySortingOrderInLayer;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x9F94AC", Offset = "0x9F94AC", VA = "0x9F94AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x9F9560", Offset = "0x9F9560", VA = "0x9F9560")]
	public void SetLayer()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x9F9638", Offset = "0x9F9638", VA = "0x9F9638")]
	public _Set_Sorting_Layer_L03()
	{
	}
}
[Token(Token = "0x2000032")]
public class _Turn_DS_L03 : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SpeedY;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedZ;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x9F9690", Offset = "0x9F9690", VA = "0x9F9690")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x9F9694", Offset = "0x9F9694", VA = "0x9F9694")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x9F96CC", Offset = "0x9F96CC", VA = "0x9F96CC")]
	public _Turn_DS_L03()
	{
	}
}
[Token(Token = "0x2000033")]
public class _UI_Flicker_L03 : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4ED4", Offset = "0x6D4ED4")]
	private sealed class <Disp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public _UI_Flicker_L03 <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0x1181C7C", Offset = "0x1181C7C", VA = "0x1181C7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0x1181CC4", Offset = "0x1181CC4", VA = "0x1181CC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x1181ADC", Offset = "0x1181ADC", VA = "0x1181ADC")]
		[DebuggerHidden]
		public <Disp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1181B08", Offset = "0x1181B08", VA = "0x1181B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1181B0C", Offset = "0x1181B0C", VA = "0x1181B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1181C84", Offset = "0x1181C84", VA = "0x1181C84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image img2;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x9F97B8", Offset = "0x9F97B8", VA = "0x9F97B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x9F9810", Offset = "0x9F9810", VA = "0x9F9810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DC944", Offset = "0x6DC944")]
	private IEnumerator Disp()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x9F9888", Offset = "0x9F9888", VA = "0x9F9888")]
	public _UI_Flicker_L03()
	{
	}
}
[Token(Token = "0x2000035")]
public class DeskLevelControl : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 handleGrabPos;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool controlsMoving;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StandardButtonObject controlsHandle;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxY;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float defaultLevel;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minY;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lastLevel;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int state;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x91BE78", Offset = "0x91BE78", VA = "0x91BE78")]
	public void ControlsHandleClicked()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x91BF04", Offset = "0x91BF04", VA = "0x91BF04")]
	public void ControlsHandleUnclicked()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x91BF4C", Offset = "0x91BF4C", VA = "0x91BF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x91BFD8", Offset = "0x91BFD8", VA = "0x91BFD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x91BFE0", Offset = "0x91BFE0", VA = "0x91BFE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x91BFE8", Offset = "0x91BFE8", VA = "0x91BFE8")]
	public void RiseUp()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x91C210", Offset = "0x91C210", VA = "0x91C210")]
	public void Drop()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x91C3F0", Offset = "0x91C3F0", VA = "0x91C3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x91C598", Offset = "0x91C598", VA = "0x91C598")]
	public DeskLevelControl()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x91C5AC", Offset = "0x91C5AC", VA = "0x91C5AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC9F4", Offset = "0x6DC9F4")]
	private void <RiseUp>b__13_0(AbstractGoTween gt)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x91C5B4", Offset = "0x91C5B4", VA = "0x91C5B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCA04", Offset = "0x6DCA04")]
	private void <Drop>b__14_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D4EE4", Offset = "0x6D4EE4")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x2000037")]
	public enum UpdateMode
	{
		[Token(Token = "0x400010D")]
		Normal,
		[Token(Token = "0x400010E")]
		AnimatePhysics,
		[Token(Token = "0x400010F")]
		UnscaledTime
	}

	[Token(Token = "0x2000038")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000111")]
		None,
		[Token(Token = "0x4000112")]
		X,
		[Token(Token = "0x4000113")]
		Y,
		[Token(Token = "0x4000114")]
		Z
	}

	[Token(Token = "0x2000039")]
	private class Particle
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x9FEB10", Offset = "0x9FEB10", VA = "0x9FEB10")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D7610", Offset = "0x6D7610")]
	public float m_Damping;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D7628", Offset = "0x6D7628")]
	public float m_Elasticity;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D7640", Offset = "0x6D7640")]
	public float m_Stiffness;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D7658", Offset = "0x6D7658")]
	public float m_Inert;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_Radius;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_EndLength;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 m_Gravity;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 m_Force;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool m_DistantDisable;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_ObjectScale;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_Time;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Weight;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_DistantDisabled;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Particle> m_Particles;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x922814", Offset = "0x922814", VA = "0x922814")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x92294C", Offset = "0x92294C", VA = "0x92294C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x9229A0", Offset = "0x9229A0", VA = "0x9229A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x9229D0", Offset = "0x9229D0", VA = "0x9229D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x92297C", Offset = "0x92297C", VA = "0x92297C")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x922A30", Offset = "0x922A30", VA = "0x922A30")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x923000", Offset = "0x923000", VA = "0x923000")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x923004", Offset = "0x923004", VA = "0x923004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x923008", Offset = "0x923008", VA = "0x923008")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x9230D0", Offset = "0x9230D0", VA = "0x9230D0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x923288", Offset = "0x923288", VA = "0x923288")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9232E4", Offset = "0x9232E4", VA = "0x9232E4")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x922BE8", Offset = "0x922BE8", VA = "0x922BE8")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x922818", Offset = "0x922818", VA = "0x922818")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x9240B4", Offset = "0x9240B4", VA = "0x9240B4")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x924610", Offset = "0x924610", VA = "0x924610")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x922D7C", Offset = "0x922D7C", VA = "0x922D7C")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x922E90", Offset = "0x922E90", VA = "0x922E90")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x9232EC", Offset = "0x9232EC", VA = "0x9232EC")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x9234CC", Offset = "0x9234CC", VA = "0x9234CC")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x923A5C", Offset = "0x923A5C", VA = "0x923A5C")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x9248E0", Offset = "0x9248E0", VA = "0x9248E0")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x923E70", Offset = "0x923E70", VA = "0x923E70")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x924914", Offset = "0x924914", VA = "0x924914")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D4F1C", Offset = "0x6D4F1C")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Radius;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Height;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x924A28", Offset = "0x924A28", VA = "0x924A28")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x924A70", Offset = "0x924A70", VA = "0x924A70", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x924C7C", Offset = "0x924C7C", VA = "0x924C7C")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x924D3C", Offset = "0x924D3C", VA = "0x924D3C")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x924DEC", Offset = "0x924DEC", VA = "0x924DEC")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x925004", Offset = "0x925004", VA = "0x925004")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x925210", Offset = "0x925210", VA = "0x925210")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x9253AC", Offset = "0x9253AC", VA = "0x9253AC")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x200003B")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	public enum Direction
	{
		[Token(Token = "0x4000128")]
		X,
		[Token(Token = "0x4000129")]
		Y,
		[Token(Token = "0x400012A")]
		Z
	}

	[Token(Token = "0x200003D")]
	public enum Bound
	{
		[Token(Token = "0x400012C")]
		Outside,
		[Token(Token = "0x400012D")]
		Inside
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direction m_Direction;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_Center;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bound m_Bound;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x92542C", Offset = "0x92542C", VA = "0x92542C", Slot = "4")]
	public virtual void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x9253F0", Offset = "0x9253F0", VA = "0x9253F0")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D4F54", Offset = "0x6D4F54")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000108")]
	[Address(RVA = "0x925430", Offset = "0x925430", VA = "0x925430")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x925434", Offset = "0x925434", VA = "0x925434", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x92558C", Offset = "0x92558C", VA = "0x92558C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x9256AC", Offset = "0x9256AC", VA = "0x9256AC")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6D4F8C", Offset = "0x6D4F8C")]
public class EditorButtonAttribute : PropertyAttribute
{
	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB44484", Offset = "0xB44484", VA = "0xB44484")]
	public EditorButtonAttribute()
	{
	}
}
[Token(Token = "0x2000040")]
public class ExplodeIfOwnerDies : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit ship;

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB4B660", Offset = "0xB4B660", VA = "0xB4B660")]
	public void Restart()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB4B6BC", Offset = "0xB4B6BC", VA = "0xB4B6BC")]
	public void Update()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB4B7AC", Offset = "0xB4B7AC", VA = "0xB4B7AC")]
	public ExplodeIfOwnerDies()
	{
	}
}
[Token(Token = "0x2000041")]
public class FTsample_ClickToSpawn : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject camObject;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lightObject;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject robotObject;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text prefabName;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] particlePrefab;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int particleNum;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject effectPrefab;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool checkEffect;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool checkChara;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool checkLight;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool checkCamera;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator camAnim;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB4C698", Offset = "0xB4C698", VA = "0xB4C698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB4C6FC", Offset = "0xB4C6FC", VA = "0xB4C6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB4C940", Offset = "0xB4C940", VA = "0xB4C940")]
	public void OnClick_cam()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB4C99C", Offset = "0xB4C99C", VA = "0xB4C99C")]
	public void OnClick_light()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB4C9F8", Offset = "0xB4C9F8", VA = "0xB4C9F8")]
	public void OnClick_chara()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB4CA54", Offset = "0xB4CA54", VA = "0xB4CA54")]
	public FTsample_ClickToSpawn()
	{
	}
}
[Token(Token = "0x2000042")]
public class FTEM_AnimationScrollTexture : MonoBehaviour
{
	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB4C5E4", Offset = "0xB4C5E4", VA = "0xB4C5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB4C5E8", Offset = "0xB4C5E8", VA = "0xB4C5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB4C5EC", Offset = "0xB4C5EC", VA = "0xB4C5EC")]
	public FTEM_AnimationScrollTexture()
	{
	}
}
[Token(Token = "0x2000043")]
public class FTEM_AnimationSpriteSheet : MonoBehaviour
{
	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB4C5F4", Offset = "0xB4C5F4", VA = "0xB4C5F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB4C5F8", Offset = "0xB4C5F8", VA = "0xB4C5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB4C5FC", Offset = "0xB4C5FC", VA = "0xB4C5FC")]
	public FTEM_AnimationSpriteSheet()
	{
	}
}
[Token(Token = "0x2000044")]
public class FTEM_DeadTime : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deadTime;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB4C604", Offset = "0xB4C604", VA = "0xB4C604")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB4C68C", Offset = "0xB4C68C", VA = "0xB4C68C")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB4C690", Offset = "0xB4C690", VA = "0xB4C690")]
	public FTEM_DeadTime()
	{
	}
}
[Token(Token = "0x2000045")]
public class BoardVisualizer : MonoBehaviour
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material rock;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material scissors;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material paper;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB69808", Offset = "0xB69808", VA = "0xB69808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB69864", Offset = "0xB69864", VA = "0xB69864")]
	public void ShowRock()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB69888", Offset = "0xB69888", VA = "0xB69888")]
	public void ShowScissors()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB698AC", Offset = "0xB698AC", VA = "0xB698AC")]
	public void ShowPaper()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB698D0", Offset = "0xB698D0", VA = "0xB698D0")]
	public BoardVisualizer()
	{
	}
}
[Token(Token = "0x2000046")]
public class Comments : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string text;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xD88698", Offset = "0xD88698", VA = "0xD88698")]
	public Comments()
	{
	}
}
[Token(Token = "0x2000047")]
public class GestureRecognizer : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7680", Offset = "0x6D7680")]
	public GestureSO gestureToRecognize;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D76B8", Offset = "0x6D76B8")]
	public UnityEvent OnGestureRecognized;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D76F0", Offset = "0x6D76F0")]
	private bool shouldRecognize;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D773C", Offset = "0x6D773C")]
	public float timeBetweenRecognition;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7774", Offset = "0x6D7774")]
	public float recognitionThreshold;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D77AC", Offset = "0x6D77AC")]
	public bool waitForHighConfidenceData;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<OVRBone> fingerBones;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastRecognition;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHand hand;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB56688", Offset = "0xB56688", VA = "0xB56688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB56970", Offset = "0xB56970", VA = "0xB56970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB56AA8", Offset = "0xB56AA8", VA = "0xB56AA8")]
	private bool CheckRecognition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB56694", Offset = "0xB56694", VA = "0xB56694")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB56CE8", Offset = "0xB56CE8", VA = "0xB56CE8")]
	public GestureRecognizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000048")]
public class GestureSO : ScriptableObject
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gestureName;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestureHand hand;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> fingerPositions;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB56D08", Offset = "0xB56D08", VA = "0xB56D08")]
	public GestureSO()
	{
	}
}
[Token(Token = "0x2000049")]
public enum GestureHand
{
	[Token(Token = "0x400014F")]
	LeftHand,
	[Token(Token = "0x4000150")]
	RightHand
}
[Token(Token = "0x200004A")]
public class GestureSaver : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public OVRSkeleton skeleton;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OVRBone> fingerBones;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string gestureName;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7804", Offset = "0x6D7804")]
	public GestureHand handToSave;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D783C", Offset = "0x6D783C")]
	public KeyCode saveKey;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB56D10", Offset = "0xB56D10", VA = "0xB56D10")]
	private void Start()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB57014", Offset = "0xB57014", VA = "0xB57014")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB57050", Offset = "0xB57050", VA = "0xB57050")]
	public void SaveGesture()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB572C0", Offset = "0xB572C0", VA = "0xB572C0")]
	private void CreateGestureAsset([Optional] List<Vector3> data)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB572C4", Offset = "0xB572C4", VA = "0xB572C4")]
	public string GetSavedGestureLocation()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB56D14", Offset = "0xB56D14", VA = "0xB56D14")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB5732C", Offset = "0xB5732C", VA = "0xB5732C")]
	public GestureSaver()
	{
	}
}
[Token(Token = "0x200004B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D4FA0", Offset = "0x6D4FA0")]
[ExecuteInEditMode]
public class GlitchEffect : ImageEffectBase
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D displacementMap;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float glitchup;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float glitchdown;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float flicker;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float glitchupTime;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float glitchdownTime;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float flickerTime;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float intensity;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB57770", Offset = "0xB57770", VA = "0xB57770")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB57AB8", Offset = "0xB57AB8", VA = "0xB57AB8")]
	public GlitchEffect()
	{
	}
}
[Token(Token = "0x200004C")]
public class BaseDemoGUI : MonoBehaviour
{
	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected AbstractGoTween _tween;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float _tweenTimeScale;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB5AAB0", Offset = "0xB5AAB0", VA = "0xB5AAB0", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB5B30C", Offset = "0xB5B30C", VA = "0xB5B30C")]
	protected void easeTypesGUI()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB5B788", Offset = "0xB5B788", VA = "0xB5B788")]
	public BaseDemoGUI()
	{
	}
}
[Token(Token = "0x200004D")]
public class FPSHUD : MonoBehaviour
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float accum;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeleft;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fps;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB4C220", Offset = "0xB4C220", VA = "0xB4C220")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB4C254", Offset = "0xB4C254", VA = "0xB4C254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB4C260", Offset = "0xB4C260", VA = "0xB4C260")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB4C2F8", Offset = "0xB4C2F8", VA = "0xB4C2F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB4C3F0", Offset = "0xB4C3F0", VA = "0xB4C3F0")]
	public FPSHUD()
	{
	}
}
[Token(Token = "0x200004E")]
public class GoKitSplineTest : MonoBehaviour
{
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float testDelay;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float retestDelay;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<double> testTimes;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int splineCount;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int splineLookupCount;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 startPosition;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 controlPosition1;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 controlPosition2;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector3 endPosition;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Vector3[] splineNodes;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE7A188", Offset = "0xE7A188", VA = "0xE7A188")]
	protected void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE7A2DC", Offset = "0xE7A2DC", VA = "0xE7A2DC")]
	protected void BuildSplines()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE7A64C", Offset = "0xE7A64C", VA = "0xE7A64C")]
	protected void BuildSplines(int num)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE7A870", Offset = "0xE7A870", VA = "0xE7A870")]
	protected void LookupSpline(GoSpline spline)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE7A70C", Offset = "0xE7A70C", VA = "0xE7A70C")]
	protected double GetAverage(List<double> values)
	{
		return default(double);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE7A958", Offset = "0xE7A958", VA = "0xE7A958")]
	public GoKitSplineTest()
	{
	}
}
[Token(Token = "0x200004F")]
public class PathTweenGUI : BaseDemoGUI
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cube;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform optionalLookTarget;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool LoadScriptableObject;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GoPathSettings Path;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x128F320", Offset = "0x128F320", VA = "0x128F320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x128F548", Offset = "0x128F548", VA = "0x128F548")]
	public PathTweenGUI()
	{
	}
}
[Token(Token = "0x2000050")]
public class ShakeVariantsGUI : BaseDemoGUI
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cube;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD48CF8", Offset = "0xD48CF8", VA = "0xD48CF8", Slot = "4")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD4969C", Offset = "0xD4969C", VA = "0xD4969C")]
	private void stopRunningTween()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD49704", Offset = "0xD49704", VA = "0xD49704")]
	public ShakeVariantsGUI()
	{
	}
}
[Token(Token = "0x2000051")]
public class SimpleTween : BaseDemoGUI
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cube;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD02BE4", Offset = "0xD02BE4", VA = "0xD02BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD02D0C", Offset = "0xD02D0C", VA = "0xD02D0C")]
	public SimpleTween()
	{
	}
}
[Token(Token = "0x2000052")]
public class StressTestGUI : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	public class Perlin
	{
		[Token(Token = "0x4000180")]
		private const int B = 256;

		[Token(Token = "0x4000181")]
		private const int BM = 255;

		[Token(Token = "0x4000182")]
		private const int N = 4096;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int[] p;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[,] g3;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[,] g2;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] g1;

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x117BCEC", Offset = "0x117BCEC", VA = "0x117BCEC")]
		private float s_curve(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x117BD04", Offset = "0x117BD04", VA = "0x117BD04")]
		private float lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x117BD14", Offset = "0x117BD14", VA = "0x117BD14")]
		private void setup(float value, out int b0, out int b1, out float r0, out float r1)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x117BD6C", Offset = "0x117BD6C", VA = "0x117BD6C")]
		private float at2(float rx, float ry, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x117BD7C", Offset = "0x117BD7C", VA = "0x117BD7C")]
		private float at3(float rx, float ry, float rz, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x117BBB8", Offset = "0x117BBB8", VA = "0x117BBB8")]
		public float Noise(float arg)
		{
			return default(float);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x117BD94", Offset = "0x117BD94", VA = "0x117BD94")]
		public float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x117BF90", Offset = "0x117BF90", VA = "0x117BF90")]
		public float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x117C334", Offset = "0x117C334", VA = "0x117C334")]
		private void normalize2(ref float x, ref float y)
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x117C394", Offset = "0x117C394", VA = "0x117C394")]
		private void normalize3(ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x117C418", Offset = "0x117C418", VA = "0x117C418")]
		public Perlin()
		{
		}
	}

	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4FEC", Offset = "0x6D4FEC")]
	private sealed class <runTest>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StressTestGUI <>4__this;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waiter>5__2;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0x117BC9C", Offset = "0x117BC9C", VA = "0x117BC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x117BCE4", Offset = "0x117BCE4", VA = "0x117BCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x117B92C", Offset = "0x117B92C", VA = "0x117B92C")]
		[DebuggerHidden]
		public <runTest>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x117B958", Offset = "0x117B958", VA = "0x117B958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x117B95C", Offset = "0x117B95C", VA = "0x117B95C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x117BCA4", Offset = "0x117BCA4", VA = "0x117BCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] cubes;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] origPos;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GoTween[] tweens;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PositionTweenProperty[] props;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Perlin noise;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float updateChange;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timex;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timey;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timez;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 endPt;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int i;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBB7D70", Offset = "0xBB7D70", VA = "0xBB7D70")]
	private void Start()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBB8260", Offset = "0xBB8260", VA = "0xBB8260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DCA14", Offset = "0x6DCA14")]
	private IEnumerator runTest()
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBB82D8", Offset = "0xBB82D8", VA = "0xBB82D8")]
	public StressTestGUI()
	{
	}
}
[Token(Token = "0x2000055")]
public class TweenChainGUI : BaseDemoGUI
{
	[Serializable]
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D4FFC", Offset = "0x6D4FFC")]
	private sealed class <>c
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<AbstractGoTween> <>9__1_0;

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x117E8F0", Offset = "0x117E8F0", VA = "0x117E8F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x117E8F8", Offset = "0x117E8F8", VA = "0x117E8F8")]
		internal void <Start>b__1_0(AbstractGoTween c)
		{
		}
	}

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] cubes;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1B04110", Offset = "0x1B04110", VA = "0x1B04110")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1B04424", Offset = "0x1B04424", VA = "0x1B04424")]
	public TweenChainGUI()
	{
	}
}
[Token(Token = "0x2000057")]
public class TweenFlowGUI : BaseDemoGUI
{
	[Serializable]
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D500C", Offset = "0x6D500C")]
	private sealed class <>c
	{
		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<AbstractGoTween> <>9__1_0;

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x117E9D0", Offset = "0x117E9D0", VA = "0x117E9D0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x117E9D8", Offset = "0x117E9D8", VA = "0x117E9D8")]
		internal void <Start>b__1_0(AbstractGoTween c)
		{
		}
	}

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] cubes;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1B0442C", Offset = "0x1B0442C", VA = "0x1B0442C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1B04798", Offset = "0x1B04798", VA = "0x1B04798")]
	public TweenFlowGUI()
	{
	}
}
[Token(Token = "0x2000059")]
public class UnityGUITween : BaseDemoGUI
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform anchorImage;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform sizeOffsetImage;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1B0B824", Offset = "0x1B0B824", VA = "0x1B0B824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1B0B9E4", Offset = "0x1B0B9E4", VA = "0x1B0B9E4")]
	public UnityGUITween()
	{
	}
}
[Token(Token = "0x200005A")]
public class Go : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D501C", Offset = "0x6D501C")]
	private sealed class <timeScaleIndependentUpdate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Go <>4__this;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000184")]
			[Address(RVA = "0x9FF914", Offset = "0x9FF914", VA = "0x9FF914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x9FF95C", Offset = "0x9FF95C", VA = "0x9FF95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x9FF7A8", Offset = "0x9FF7A8", VA = "0x9FF7A8")]
		[DebuggerHidden]
		public <timeScaleIndependentUpdate>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x9FF7D4", Offset = "0x9FF7D4", VA = "0x9FF7D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x9FF7D8", Offset = "0x9FF7D8", VA = "0x9FF7D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x9FF91C", Offset = "0x9FF91C", VA = "0x9FF91C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GoEaseType defaultEaseType;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static GoLoopType defaultLoopType;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GoUpdateType defaultUpdateType;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static GoDuplicatePropertyRuleType duplicatePropertyRule;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GoLogLevel logLevel;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool validateTargetObjectsEachTick;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool _applicationIsQuitting;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<AbstractGoTween> _tweens;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _timeScaleIndependentUpdateIsRunning;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Go _instance;

	[Token(Token = "0x1700000E")]
	public static Go instance
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xB57AD8", Offset = "0xB57AD8", VA = "0xB57AD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB57D88", Offset = "0xB57D88", VA = "0xB57D88")]
	private void handleUpdateOfType(GoUpdateType updateType, float deltaTime)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB580E0", Offset = "0xB580E0", VA = "0xB580E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB58178", Offset = "0xB58178", VA = "0xB58178")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB58210", Offset = "0xB58210", VA = "0xB58210")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB582A8", Offset = "0xB582A8", VA = "0xB582A8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xB58374", Offset = "0xB58374", VA = "0xB58374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DCAC4", Offset = "0x6DCAC4")]
	private IEnumerator timeScaleIndependentUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xB583EC", Offset = "0xB583EC", VA = "0xB583EC")]
	private static bool handleDuplicatePropertiesInTween(GoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB5881C", Offset = "0xB5881C", VA = "0xB5881C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6DCB24", Offset = "0x6DCB24")]
	private static void log(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB588EC", Offset = "0xB588EC", VA = "0xB588EC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6DCB5C", Offset = "0x6DCB5C")]
	public static void warn(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB58A30", Offset = "0xB58A30", VA = "0xB58A30")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6DCB94", Offset = "0x6DCB94")]
	public static void error(object format, params object[] paramList)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB45CF4", Offset = "0xB45CF4", VA = "0xB45CF4")]
	public static GoTween to(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB58E40", Offset = "0xB58E40", VA = "0xB58E40")]
	public static GoTween to(object target, GoSpline path, float speed, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB58F30", Offset = "0xB58F30", VA = "0xB58F30")]
	public static GoTween from(object target, float duration, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB58FFC", Offset = "0xB58FFC", VA = "0xB58FFC")]
	public static GoTween from(object target, GoSpline path, float speed, GoTweenConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB58B9C", Offset = "0xB58B9C", VA = "0xB58B9C")]
	public static void addTween(AbstractGoTween tween)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB57F40", Offset = "0xB57F40", VA = "0xB57F40")]
	public static bool removeTween(AbstractGoTween tween)
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB590EC", Offset = "0xB590EC", VA = "0xB590EC")]
	public static void removeTweenWithTag(string tag)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xB59248", Offset = "0xB59248", VA = "0xB59248")]
	public static List<AbstractGoTween> tweensWithTag(string tag)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xB5944C", Offset = "0xB5944C", VA = "0xB5944C")]
	public static List<AbstractGoTween> tweensWithId(int id)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB585DC", Offset = "0xB585DC", VA = "0xB585DC")]
	public static List<GoTween> tweensWithTarget(object target, bool traverseCollections = false)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB595C8", Offset = "0xB595C8", VA = "0xB595C8")]
	public static void killAllTweensWithTarget(object target)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB596A4", Offset = "0xB596A4", VA = "0xB596A4")]
	public Go()
	{
	}
}
[Token(Token = "0x200005C")]
public class GoDummyPath : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useStandardHandles;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool forceStraightLinePath;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int pathResolution;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB59798", Offset = "0xB59798", VA = "0xB59798")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB59844", Offset = "0xB59844", VA = "0xB59844")]
	public GoDummyPath()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D502C", Offset = "0x6D502C")]
public class GoPathSettings : ScriptableObject
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> Nodes;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xE7C910", Offset = "0xE7C910", VA = "0xE7C910")]
	public GoPathSettings()
	{
	}
}
[Token(Token = "0x200005E")]
public class GoProxyProp<T>
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7894", Offset = "0x6D7894")]
	private T <value>k__BackingField;

	[Token(Token = "0x17000011")]
	public T value
	{
		[Token(Token = "0x600018A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC1C", Offset = "0x6DCC1C")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600018B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC2C", Offset = "0x6DCC2C")]
		set
		{
		}
	}

	[Token(Token = "0x600018C")]
	public GoProxyProp(T startValue)
	{
	}
}
[Token(Token = "0x200005F")]
public sealed class GoTween : AbstractGoTween
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78A4", Offset = "0x6D78A4")]
	private object <target>k__BackingField;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78B4", Offset = "0x6D78B4")]
	private float <delay>k__BackingField;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _elapsedDelay;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _delayComplete;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78C4", Offset = "0x6D78C4")]
	private bool <isFrom>k__BackingField;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<AbstractTweenProperty> _tweenPropertyList;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Type targetType;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GoEaseType _easeType;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78D4", Offset = "0x6D78D4")]
	private AnimationCurve <easeCurve>k__BackingField;

	[Token(Token = "0x17000012")]
	public object target
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xE7EDE8", Offset = "0xE7EDE8", VA = "0xE7EDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC3C", Offset = "0x6DCC3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xE7EDF0", Offset = "0xE7EDF0", VA = "0xE7EDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC4C", Offset = "0x6DCC4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float delay
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xE7EDF8", Offset = "0xE7EDF8", VA = "0xE7EDF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC5C", Offset = "0x6DCC5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xE7EE00", Offset = "0xE7EE00", VA = "0xE7EE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC6C", Offset = "0x6DCC6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool isFrom
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xE7EE08", Offset = "0xE7EE08", VA = "0xE7EE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC7C", Offset = "0x6DCC7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xE7EE10", Offset = "0xE7EE10", VA = "0xE7EE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC8C", Offset = "0x6DCC8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public GoEaseType easeType
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xE7EE1C", Offset = "0xE7EE1C", VA = "0xE7EE1C")]
		get
		{
			return default(GoEaseType);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xE7EE24", Offset = "0xE7EE24", VA = "0xE7EE24")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public AnimationCurve easeCurve
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xE7EED0", Offset = "0xE7EED0", VA = "0xE7EED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCC9C", Offset = "0x6DCC9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xE7EED8", Offset = "0xE7EED8", VA = "0xE7EED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCAC", Offset = "0x6DCCAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE7EEE0", Offset = "0xE7EEE0", VA = "0xE7EEE0")]
	public GoTween(object target, float duration, GoTweenConfig config, [Optional] Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE7F318", Offset = "0xE7F318", VA = "0xE7F318", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xE7F5BC", Offset = "0xE7F5BC", VA = "0xE7F5BC", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE7F1B8", Offset = "0xE7F1B8", VA = "0xE7F1B8")]
	public void addTweenProperty(AbstractTweenProperty tweenProp)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE7F5CC", Offset = "0xE7F5CC", VA = "0xE7F5CC", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE7F66C", Offset = "0xE7F66C", VA = "0xE7F66C", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xE7F6D0", Offset = "0xE7F6D0", VA = "0xE7F6D0")]
	public void clearTweenProperties()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xE7F724", Offset = "0xE7F724", VA = "0xE7F724", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xE7F72C", Offset = "0xE7F72C", VA = "0xE7F72C", Slot = "4")]
	protected override void onInit()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xE7F7DC", Offset = "0xE7F7DC", VA = "0xE7F7DC", Slot = "15")]
	public override void destroy()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE7F84C", Offset = "0xE7F84C", VA = "0xE7F84C", Slot = "22")]
	public override void goTo(float time, bool skipDelay)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xE7F948", Offset = "0xE7F948", VA = "0xE7F948", Slot = "21")]
	public override void complete()
	{
	}
}
[Token(Token = "0x2000060")]
public sealed class GoTweenChain : AbstractGoTweenCollection
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xE7F964", Offset = "0xE7F964", VA = "0xE7F964")]
	public GoTweenChain()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xE7FA4C", Offset = "0xE7FA4C", VA = "0xE7FA4C")]
	public GoTweenChain(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xE7FA54", Offset = "0xE7FA54", VA = "0xE7FA54")]
	private void append(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xE7FC20", Offset = "0xE7FC20", VA = "0xE7FC20")]
	private void prepend(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE7FE58", Offset = "0xE7FE58", VA = "0xE7FE58")]
	public GoTweenChain append(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xE7FEE0", Offset = "0xE7FEE0", VA = "0xE7FEE0")]
	public GoTweenChain appendDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xE7FF60", Offset = "0xE7FF60", VA = "0xE7FF60")]
	public GoTweenChain prepend(AbstractGoTween tween)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xE7FFDC", Offset = "0xE7FFDC", VA = "0xE7FFDC")]
	public GoTweenChain prependDelay(float delay)
	{
		return null;
	}
}
[Token(Token = "0x2000061")]
public class GoTweenCollectionConfig
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int iterations;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GoLoopType loopType;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE80058", Offset = "0xE80058", VA = "0xE80058")]
	public GoTweenCollectionConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xE80060", Offset = "0xE80060", VA = "0xE80060")]
	public GoTweenCollectionConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xE80068", Offset = "0xE80068", VA = "0xE80068")]
	public GoTweenCollectionConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xE80070", Offset = "0xE80070", VA = "0xE80070")]
	public GoTweenCollectionConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xE80098", Offset = "0xE80098", VA = "0xE80098")]
	public GoTweenCollectionConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE800C0", Offset = "0xE800C0", VA = "0xE800C0")]
	public GoTweenCollectionConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xE800E8", Offset = "0xE800E8", VA = "0xE800E8")]
	public GoTweenCollectionConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xE80110", Offset = "0xE80110", VA = "0xE80110")]
	public GoTweenCollectionConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE80138", Offset = "0xE80138", VA = "0xE80138")]
	public GoTweenCollectionConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xE80160", Offset = "0xE80160", VA = "0xE80160")]
	public GoTweenCollectionConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xE7F9C4", Offset = "0xE7F9C4", VA = "0xE7F9C4")]
	public GoTweenCollectionConfig()
	{
	}
}
[Token(Token = "0x2000062")]
public class GoTweenConfig
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AbstractTweenProperty> _tweenProperties;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int iterations;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeScale;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GoLoopType loopType;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GoEaseType easeType;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve easeCurve;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isPaused;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GoUpdateType propertyUpdateType;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isFrom;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<AbstractGoTween> onInitHandler;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<AbstractGoTween> onBeginHandler;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<AbstractGoTween> onIterationStartHandler;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<AbstractGoTween> onUpdateHandler;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<AbstractGoTween> onIterationEndHandler;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<AbstractGoTween> onCompleteHandler;

	[Token(Token = "0x17000017")]
	public List<AbstractTweenProperty> tweenProperties
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xE80168", Offset = "0xE80168", VA = "0xE80168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xE7B590", Offset = "0xE7B590", VA = "0xE7B590")]
	public GoTweenConfig position(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE7B730", Offset = "0xE7B730", VA = "0xE7B730")]
	public GoTweenConfig localPosition(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE80170", Offset = "0xE80170", VA = "0xE80170")]
	public GoTweenConfig positionPath(GoSpline path, bool isRelative = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE8022C", Offset = "0xE8022C", VA = "0xE8022C")]
	public GoTweenConfig scale(float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE7B8E0", Offset = "0xE7B8E0", VA = "0xE7B8E0")]
	public GoTweenConfig scale(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE8023C", Offset = "0xE8023C", VA = "0xE8023C")]
	public GoTweenConfig scalePath(GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xE7B250", Offset = "0xE7B250", VA = "0xE7B250")]
	public GoTweenConfig eulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE7B3F0", Offset = "0xE7B3F0", VA = "0xE7B3F0")]
	public GoTweenConfig localEulerAngles(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE7ABA0", Offset = "0xE7ABA0", VA = "0xE7ABA0")]
	public GoTweenConfig rotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE7AD40", Offset = "0xE7AD40", VA = "0xE7AD40")]
	public GoTweenConfig localRotation(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE7AEF0", Offset = "0xE7AEF0", VA = "0xE7AEF0")]
	public GoTweenConfig rotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE7B0A8", Offset = "0xE7B0A8", VA = "0xE7B0A8")]
	public GoTweenConfig localRotation(Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE802DC", Offset = "0xE802DC", VA = "0xE802DC")]
	public GoTweenConfig anchoredPosition(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE8038C", Offset = "0xE8038C", VA = "0xE8038C")]
	public GoTweenConfig anchoredPosition3D(Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE8044C", Offset = "0xE8044C", VA = "0xE8044C")]
	public GoTweenConfig anchorMax(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE804FC", Offset = "0xE804FC", VA = "0xE804FC")]
	public GoTweenConfig anchorMin(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE805AC", Offset = "0xE805AC", VA = "0xE805AC")]
	public GoTweenConfig offsetMax(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE8065C", Offset = "0xE8065C", VA = "0xE8065C")]
	public GoTweenConfig offsetMin(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE8070C", Offset = "0xE8070C", VA = "0xE8070C")]
	public GoTweenConfig pivot(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE807BC", Offset = "0xE807BC", VA = "0xE807BC")]
	public GoTweenConfig sizeDelta(Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE7C260", Offset = "0xE7C260", VA = "0xE7C260")]
	public GoTweenConfig materialColor(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE7C420", Offset = "0xE7C420", VA = "0xE7C420")]
	public GoTweenConfig materialVector(Vector4 endValue, string propertyName, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE7C5B8", Offset = "0xE7C5B8", VA = "0xE7C5B8")]
	public GoTweenConfig materialFloat(float endValue, string propertyName, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE7BA94", Offset = "0xE7BA94", VA = "0xE7BA94")]
	public GoTweenConfig shake(Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xE8086C", Offset = "0xE8086C", VA = "0xE8086C")]
	public GoTweenConfig vector2Prop(string propertyName, Vector2 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xE80924", Offset = "0xE80924", VA = "0xE80924")]
	public GoTweenConfig vector3Prop(string propertyName, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xE809EC", Offset = "0xE809EC", VA = "0xE809EC")]
	public GoTweenConfig vector4Prop(string propertyName, Vector4 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE80ABC", Offset = "0xE80ABC", VA = "0xE80ABC")]
	public GoTweenConfig vector3PathProp(string propertyName, GoSpline path, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE80B6C", Offset = "0xE80B6C", VA = "0xE80B6C")]
	public GoTweenConfig vector3XProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xE80C1C", Offset = "0xE80C1C", VA = "0xE80C1C")]
	public GoTweenConfig vector3YProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xE80CCC", Offset = "0xE80CCC", VA = "0xE80CCC")]
	public GoTweenConfig vector3ZProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xE80D7C", Offset = "0xE80D7C", VA = "0xE80D7C")]
	public GoTweenConfig colorProp(string propertyName, Color endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xE80E4C", Offset = "0xE80E4C", VA = "0xE80E4C")]
	public GoTweenConfig intProp(string propertyName, int endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xE80EFC", Offset = "0xE80EFC", VA = "0xE80EFC")]
	public GoTweenConfig floatProp(string propertyName, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xE80FAC", Offset = "0xE80FAC", VA = "0xE80FAC")]
	public GoTweenConfig addTweenProperty(AbstractTweenProperty tweenProp)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE81018", Offset = "0xE81018", VA = "0xE81018")]
	public GoTweenConfig clearProperties()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xE81074", Offset = "0xE81074", VA = "0xE81074")]
	public GoTweenConfig clearEvents()
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xE810F0", Offset = "0xE810F0", VA = "0xE810F0")]
	public GoTweenConfig setDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE810F8", Offset = "0xE810F8", VA = "0xE810F8")]
	public GoTweenConfig setIterations(int iterations)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xE81100", Offset = "0xE81100", VA = "0xE81100")]
	public GoTweenConfig setIterations(int iterations, GoLoopType loopType)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xE8110C", Offset = "0xE8110C", VA = "0xE8110C")]
	public GoTweenConfig setTimeScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE81114", Offset = "0xE81114", VA = "0xE81114")]
	public GoTweenConfig setEaseType(GoEaseType easeType)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE8111C", Offset = "0xE8111C", VA = "0xE8111C")]
	public GoTweenConfig setEaseCurve(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xE8114C", Offset = "0xE8114C", VA = "0xE8114C")]
	public GoTweenConfig startPaused()
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xE81158", Offset = "0xE81158", VA = "0xE81158")]
	public GoTweenConfig setUpdateType(GoUpdateType setUpdateType)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xE81160", Offset = "0xE81160", VA = "0xE81160")]
	public GoTweenConfig setIsFrom()
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE8116C", Offset = "0xE8116C", VA = "0xE8116C")]
	public GoTweenConfig setIsTo()
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xE81174", Offset = "0xE81174", VA = "0xE81174")]
	public GoTweenConfig onInit(Action<AbstractGoTween> onInit)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xE8119C", Offset = "0xE8119C", VA = "0xE8119C")]
	public GoTweenConfig onBegin(Action<AbstractGoTween> onBegin)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xE811C4", Offset = "0xE811C4", VA = "0xE811C4")]
	public GoTweenConfig onIterationStart(Action<AbstractGoTween> onIterationStart)
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xE811EC", Offset = "0xE811EC", VA = "0xE811EC")]
	public GoTweenConfig onUpdate(Action<AbstractGoTween> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xE81214", Offset = "0xE81214", VA = "0xE81214")]
	public GoTweenConfig onIterationEnd(Action<AbstractGoTween> onIterationEnd)
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xE8123C", Offset = "0xE8123C", VA = "0xE8123C")]
	public GoTweenConfig onComplete(Action<AbstractGoTween> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xE81264", Offset = "0xE81264", VA = "0xE81264")]
	public GoTweenConfig setId(int id)
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xE8126C", Offset = "0xE8126C", VA = "0xE8126C")]
	public GoTweenConfig clone()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xE7AAAC", Offset = "0xE7AAAC", VA = "0xE7AAAC")]
	public GoTweenConfig()
	{
	}
}
[Token(Token = "0x2000063")]
public sealed class GoTweenFlow : AbstractGoTweenCollection
{
	[Serializable]
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D508C", Offset = "0x6D508C")]
	private sealed class <>c
	{
		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<TweenFlowItem> <>9__2_0;

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x9FFA18", Offset = "0x9FFA18", VA = "0x9FFA18")]
		public <>c()
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x9FFA20", Offset = "0x9FFA20", VA = "0x9FFA20")]
		internal int <insert>b__2_0(TweenFlowItem x, TweenFlowItem y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xE813E4", Offset = "0xE813E4", VA = "0xE813E4")]
	public GoTweenFlow()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xE81444", Offset = "0xE81444", VA = "0xE81444")]
	public GoTweenFlow(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xE8144C", Offset = "0xE8144C", VA = "0xE8144C")]
	private void insert(TweenFlowItem item)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xE81720", Offset = "0xE81720", VA = "0xE81720")]
	public GoTweenFlow insert(float startTime, AbstractGoTween tween)
	{
		return null;
	}
}
[Token(Token = "0x2000065")]
public abstract class AbstractGoTween
{
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D509C", Offset = "0x6D509C")]
	private sealed class <waitForCompletion>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AbstractGoTween <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0x9FA130", Offset = "0x9FA130", VA = "0x9FA130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0x9FA178", Offset = "0x9FA178", VA = "0x9FA178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x9FA094", Offset = "0x9FA094", VA = "0x9FA094")]
		[DebuggerHidden]
		public <waitForCompletion>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x9FA0C0", Offset = "0x9FA0C0", VA = "0x9FA0C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x9FA0C4", Offset = "0x9FA0C4", VA = "0x9FA0C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x9FA138", Offset = "0x9FA138", VA = "0x9FA138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78E4", Offset = "0x6D78E4")]
	private int <id>k__BackingField;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D78F4", Offset = "0x6D78F4")]
	private string <tag>k__BackingField;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7904", Offset = "0x6D7904")]
	private GoTweenState <state>k__BackingField;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7914", Offset = "0x6D7914")]
	private float <duration>k__BackingField;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7924", Offset = "0x6D7924")]
	private float <totalDuration>k__BackingField;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7934", Offset = "0x6D7934")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7944", Offset = "0x6D7944")]
	private GoUpdateType <updateType>k__BackingField;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7954", Offset = "0x6D7954")]
	private GoLoopType <loopType>k__BackingField;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7964", Offset = "0x6D7964")]
	private int <iterations>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7974", Offset = "0x6D7974")]
	private bool <autoRemoveOnComplete>k__BackingField;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7984", Offset = "0x6D7984")]
	private bool <isReversed>k__BackingField;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7994", Offset = "0x6D7994")]
	private bool <allowEvents>k__BackingField;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	protected bool _didInit;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _didBegin;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool _fireIterationStart;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool _fireIterationEnd;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _elapsedTime;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _totalElapsedTime;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _isLoopingBackOnPingPong;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	protected bool _didIterateLastFrame;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	protected bool _didIterateThisFrame;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int _deltaIterations;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected int _completedIterations;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Action<AbstractGoTween> _onInit;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Action<AbstractGoTween> _onBegin;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<AbstractGoTween> _onIterationStart;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Action<AbstractGoTween> _onUpdate;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Action<AbstractGoTween> _onIterationEnd;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Action<AbstractGoTween> _onComplete;

	[Token(Token = "0x17000018")]
	public int id
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xCB68EC", Offset = "0xCB68EC", VA = "0xCB68EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCBC", Offset = "0x6DCCBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xCB68F4", Offset = "0xCB68F4", VA = "0xCB68F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCCC", Offset = "0x6DCCCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public string tag
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xCB68FC", Offset = "0xCB68FC", VA = "0xCB68FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCDC", Offset = "0x6DCCDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xCB6904", Offset = "0xCB6904", VA = "0xCB6904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCEC", Offset = "0x6DCCEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public GoTweenState state
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xCB690C", Offset = "0xCB690C", VA = "0xCB690C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCCFC", Offset = "0x6DCCFC")]
		get
		{
			return default(GoTweenState);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xCB6914", Offset = "0xCB6914", VA = "0xCB6914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD0C", Offset = "0x6DCD0C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float duration
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xCB691C", Offset = "0xCB691C", VA = "0xCB691C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD1C", Offset = "0x6DCD1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xCB6924", Offset = "0xCB6924", VA = "0xCB6924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD2C", Offset = "0x6DCD2C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float totalDuration
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xCB692C", Offset = "0xCB692C", VA = "0xCB692C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD3C", Offset = "0x6DCD3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xCB6934", Offset = "0xCB6934", VA = "0xCB6934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD4C", Offset = "0x6DCD4C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float timeScale
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xCB693C", Offset = "0xCB693C", VA = "0xCB693C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD5C", Offset = "0x6DCD5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xCB6944", Offset = "0xCB6944", VA = "0xCB6944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD6C", Offset = "0x6DCD6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public GoUpdateType updateType
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xCB694C", Offset = "0xCB694C", VA = "0xCB694C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD7C", Offset = "0x6DCD7C")]
		get
		{
			return default(GoUpdateType);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xCB6954", Offset = "0xCB6954", VA = "0xCB6954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD8C", Offset = "0x6DCD8C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public GoLoopType loopType
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xCB695C", Offset = "0xCB695C", VA = "0xCB695C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCD9C", Offset = "0x6DCD9C")]
		get
		{
			return default(GoLoopType);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xCB6964", Offset = "0xCB6964", VA = "0xCB6964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDAC", Offset = "0x6DCDAC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public int iterations
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xCB696C", Offset = "0xCB696C", VA = "0xCB696C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDBC", Offset = "0x6DCDBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xCB6974", Offset = "0xCB6974", VA = "0xCB6974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDCC", Offset = "0x6DCDCC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public bool autoRemoveOnComplete
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xCB697C", Offset = "0xCB697C", VA = "0xCB697C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDDC", Offset = "0x6DCDDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xCB6984", Offset = "0xCB6984", VA = "0xCB6984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDEC", Offset = "0x6DCDEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool isReversed
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xCB6990", Offset = "0xCB6990", VA = "0xCB6990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCDFC", Offset = "0x6DCDFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xCB6998", Offset = "0xCB6998", VA = "0xCB6998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCE0C", Offset = "0x6DCE0C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool allowEvents
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xCB69A4", Offset = "0xCB69A4", VA = "0xCB69A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCE1C", Offset = "0x6DCE1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xCB69AC", Offset = "0xCB69AC", VA = "0xCB69AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DCE2C", Offset = "0x6DCE2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float totalElapsedTime
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xCB69B8", Offset = "0xCB69B8", VA = "0xCB69B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	public bool isLoopingBackOnPingPong
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xCB69C0", Offset = "0xCB69C0", VA = "0xCB69C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000026")]
	public int completedIterations
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xCB69C8", Offset = "0xCB69C8", VA = "0xCB69C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xCB69D0", Offset = "0xCB69D0", VA = "0xCB69D0")]
	public void setOnInitHandler(Action<AbstractGoTween> onInit)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xCB69D8", Offset = "0xCB69D8", VA = "0xCB69D8")]
	public void setOnBeginHandler(Action<AbstractGoTween> onBegin)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xCB69E0", Offset = "0xCB69E0", VA = "0xCB69E0")]
	public void setonIterationStartHandler(Action<AbstractGoTween> onIterationStart)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xCB69E8", Offset = "0xCB69E8", VA = "0xCB69E8")]
	public void setOnUpdateHandler(Action<AbstractGoTween> onUpdate)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xCB69F0", Offset = "0xCB69F0", VA = "0xCB69F0")]
	public void setonIterationEndHandler(Action<AbstractGoTween> onIterationEnd)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xCB69F8", Offset = "0xCB69F8", VA = "0xCB69F8")]
	public void setOnCompleteHandler(Action<AbstractGoTween> onComplete)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xCB6A00", Offset = "0xCB6A00", VA = "0xCB6A00", Slot = "4")]
	protected virtual void onInit()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xCB6A68", Offset = "0xCB6A68", VA = "0xCB6A68", Slot = "5")]
	protected virtual void onBegin()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xCB6AF4", Offset = "0xCB6AF4", VA = "0xCB6AF4", Slot = "6")]
	protected virtual void onIterationStart()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xCB6B5C", Offset = "0xCB6B5C", VA = "0xCB6B5C", Slot = "7")]
	protected virtual void onUpdate()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xCB6BC4", Offset = "0xCB6BC4", VA = "0xCB6BC4", Slot = "8")]
	protected virtual void onIterationEnd()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xCB6C2C", Offset = "0xCB6C2C", VA = "0xCB6C2C", Slot = "9")]
	protected virtual void onComplete()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xCB6C94", Offset = "0xCB6C94", VA = "0xCB6C94", Slot = "10")]
	public virtual bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600021E")]
	public abstract bool isValid();

	[Token(Token = "0x600021F")]
	public abstract bool removeTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x6000220")]
	public abstract bool containsTweenProperty(AbstractTweenProperty property);

	[Token(Token = "0x6000221")]
	public abstract List<AbstractTweenProperty> allTweenProperties();

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xCB6F1C", Offset = "0xCB6F1C", VA = "0xCB6F1C", Slot = "15")]
	public virtual void destroy()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xCB6F28", Offset = "0xCB6F28", VA = "0xCB6F28", Slot = "16")]
	public virtual void pause()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xCB6F34", Offset = "0xCB6F34", VA = "0xCB6F34", Slot = "17")]
	public virtual void play()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xCB6F3C", Offset = "0xCB6F3C", VA = "0xCB6F3C")]
	public void playForward()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCB6F84", Offset = "0xCB6F84", VA = "0xCB6F84")]
	public void playBackwards()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCB6FCC", Offset = "0xCB6FCC", VA = "0xCB6FCC", Slot = "18")]
	protected virtual void reset(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCB701C", Offset = "0xCB701C", VA = "0xCB701C", Slot = "19")]
	public virtual void rewind(bool skipDelay = true)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCB705C", Offset = "0xCB705C", VA = "0xCB705C")]
	public void restart(bool skipDelay = true)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCB709C", Offset = "0xCB709C", VA = "0xCB709C", Slot = "20")]
	public virtual void reverse()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xCB7114", Offset = "0xCB7114", VA = "0xCB7114", Slot = "21")]
	public virtual void complete()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xCB7144", Offset = "0xCB7144", VA = "0xCB7144")]
	public void goTo(float time)
	{
	}

	[Token(Token = "0x600022D")]
	public abstract void goTo(float time, bool skipDelay);

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCB7158", Offset = "0xCB7158", VA = "0xCB7158")]
	public void goToAndPlay(float time, bool skipDelay = true)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCB7198", Offset = "0xCB7198", VA = "0xCB7198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DCE3C", Offset = "0x6DCE3C")]
	public IEnumerator waitForCompletion()
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCB7210", Offset = "0xCB7210", VA = "0xCB7210")]
	protected AbstractGoTween()
	{
	}
}
[Token(Token = "0x2000067")]
public class AbstractGoTweenCollection : AbstractGoTween
{
	[Token(Token = "0x2000068")]
	protected class TweenFlowItem
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startTime;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float duration;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AbstractGoTween tween;

		[Token(Token = "0x17000029")]
		public float endTime
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0x9FA180", Offset = "0x9FA180", VA = "0x9FA180")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x9FA18C", Offset = "0x9FA18C", VA = "0x9FA18C")]
		public TweenFlowItem(float startTime, AbstractGoTween tween)
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x9FA1F0", Offset = "0x9FA1F0", VA = "0x9FA1F0")]
		public TweenFlowItem(float startTime, float duration)
		{
		}
	}

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected List<TweenFlowItem> _tweenFlows;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCB7218", Offset = "0xCB7218", VA = "0xCB7218")]
	public AbstractGoTweenCollection(GoTweenCollectionConfig config)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCB7380", Offset = "0xCB7380", VA = "0xCB7380")]
	public List<GoTween> tweensWithTarget(object target)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCB7564", Offset = "0xCB7564", VA = "0xCB7564", Slot = "12")]
	public override bool removeTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCB7628", Offset = "0xCB7628", VA = "0xCB7628", Slot = "13")]
	public override bool containsTweenProperty(AbstractTweenProperty property)
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCB76F0", Offset = "0xCB76F0", VA = "0xCB76F0", Slot = "14")]
	public override List<AbstractTweenProperty> allTweenProperties()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCB7810", Offset = "0xCB7810", VA = "0xCB7810", Slot = "11")]
	public override bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xCB7818", Offset = "0xCB7818", VA = "0xCB7818", Slot = "17")]
	public override void play()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xCB78CC", Offset = "0xCB78CC", VA = "0xCB78CC", Slot = "16")]
	public override void pause()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xCB7984", Offset = "0xCB7984", VA = "0xCB7984", Slot = "10")]
	public override bool update(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xCB7DBC", Offset = "0xCB7DBC", VA = "0xCB7DBC", Slot = "20")]
	public override void reverse()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xCB7F20", Offset = "0xCB7F20", VA = "0xCB7F20", Slot = "22")]
	public override void goTo(float time, bool skipDelay)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xCB81E0", Offset = "0xCB81E0", VA = "0xCB81E0")]
	private void changeTimeForFlowItem(TweenFlowItem flowItem, float time)
	{
	}
}
[Token(Token = "0x2000069")]
public static class GoEaseAnimationCurve
{
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D50AC", Offset = "0x6D50AC")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GoTween tween;

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x9FF964", Offset = "0x9FF964", VA = "0x9FF964")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x9FF96C", Offset = "0x9FF96C", VA = "0x9FF96C")]
		internal float <EaseCurve>b__0(float t, float b, float c, float d)
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB5995C", Offset = "0xB5995C", VA = "0xB5995C")]
	public static Func<float, float, float, float, float> EaseCurve(GoTween tween)
	{
		return null;
	}
}
[Token(Token = "0x200006B")]
public static class GoEaseBack
{
	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB59AD8", Offset = "0xB59AD8", VA = "0xB59AD8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB59B08", Offset = "0xB59B08", VA = "0xB59B08")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB59B48", Offset = "0xB59B48", VA = "0xB59B48")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200006C")]
public static class GoEaseBounce
{
	[Token(Token = "0x600024C")]
	[Address(RVA = "0xE79258", Offset = "0xE79258", VA = "0xE79258")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xE79324", Offset = "0xE79324", VA = "0xE79324")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xE79358", Offset = "0xE79358", VA = "0xE79358")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200006D")]
public static class GoEaseCircular
{
	[Token(Token = "0x600024F")]
	[Address(RVA = "0xE793D8", Offset = "0xE793D8", VA = "0xE793D8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE79484", Offset = "0xE79484", VA = "0xE79484")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xE79530", Offset = "0xE79530", VA = "0xE79530")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200006E")]
public static class GoEaseCubic
{
	[Token(Token = "0x6000252")]
	[Address(RVA = "0xE79628", Offset = "0xE79628", VA = "0xE79628")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xE79640", Offset = "0xE79640", VA = "0xE79640")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE79668", Offset = "0xE79668", VA = "0xE79668")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x200006F")]
public class GoEaseElastic
{
	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE796BC", Offset = "0xE796BC", VA = "0xE796BC")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE797D8", Offset = "0xE797D8", VA = "0xE797D8")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xE798F4", Offset = "0xE798F4", VA = "0xE798F4")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xE79AA4", Offset = "0xE79AA4", VA = "0xE79AA4")]
	public static float Punch(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xE79B1C", Offset = "0xE79B1C", VA = "0xE79B1C")]
	public GoEaseElastic()
	{
	}
}
[Token(Token = "0x2000070")]
public static class GoEaseExponential
{
	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE79B24", Offset = "0xE79B24", VA = "0xE79B24")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE79BD8", Offset = "0xE79BD8", VA = "0xE79BD8")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE79C88", Offset = "0xE79C88", VA = "0xE79C88")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000071")]
public static class GoEaseLinear
{
	[Token(Token = "0x600025D")]
	[Address(RVA = "0xE79DB4", Offset = "0xE79DB4", VA = "0xE79DB4")]
	public static float EaseNone(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000072")]
public static class GoEaseQuadratic
{
	[Token(Token = "0x600025E")]
	[Address(RVA = "0xE79DC4", Offset = "0xE79DC4", VA = "0xE79DC4")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xE79DD8", Offset = "0xE79DD8", VA = "0xE79DD8")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xE79DF4", Offset = "0xE79DF4", VA = "0xE79DF4")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000073")]
public static class GoEaseQuartic
{
	[Token(Token = "0x6000261")]
	[Address(RVA = "0xE79E48", Offset = "0xE79E48", VA = "0xE79E48")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xE79E64", Offset = "0xE79E64", VA = "0xE79E64")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xE79E8C", Offset = "0xE79E8C", VA = "0xE79E8C")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000074")]
public static class GoEaseQuintic
{
	[Token(Token = "0x6000264")]
	[Address(RVA = "0xE79EE8", Offset = "0xE79EE8", VA = "0xE79EE8")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xE79F08", Offset = "0xE79F08", VA = "0xE79F08")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xE79F38", Offset = "0xE79F38", VA = "0xE79F38")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000075")]
public static class GoEaseSinusoidal
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0xE79F9C", Offset = "0xE79F9C", VA = "0xE79F9C")]
	public static float EaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xE7A03C", Offset = "0xE7A03C", VA = "0xE7A03C")]
	public static float EaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xE7A0D8", Offset = "0xE7A0D8", VA = "0xE7A0D8")]
	public static float EaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000076")]
public enum GoDuplicatePropertyRuleType
{
	[Token(Token = "0x40001F5")]
	None,
	[Token(Token = "0x40001F6")]
	RemoveRunningProperty,
	[Token(Token = "0x40001F7")]
	DontAddCurrentProperty
}
[Token(Token = "0x2000077")]
public enum GoEaseType
{
	[Token(Token = "0x40001F9")]
	Linear,
	[Token(Token = "0x40001FA")]
	SineIn,
	[Token(Token = "0x40001FB")]
	SineOut,
	[Token(Token = "0x40001FC")]
	SineInOut,
	[Token(Token = "0x40001FD")]
	QuadIn,
	[Token(Token = "0x40001FE")]
	QuadOut,
	[Token(Token = "0x40001FF")]
	QuadInOut,
	[Token(Token = "0x4000200")]
	CubicIn,
	[Token(Token = "0x4000201")]
	CubicOut,
	[Token(Token = "0x4000202")]
	CubicInOut,
	[Token(Token = "0x4000203")]
	QuartIn,
	[Token(Token = "0x4000204")]
	QuartOut,
	[Token(Token = "0x4000205")]
	QuartInOut,
	[Token(Token = "0x4000206")]
	QuintIn,
	[Token(Token = "0x4000207")]
	QuintOut,
	[Token(Token = "0x4000208")]
	QuintInOut,
	[Token(Token = "0x4000209")]
	ExpoIn,
	[Token(Token = "0x400020A")]
	ExpoOut,
	[Token(Token = "0x400020B")]
	ExpoInOut,
	[Token(Token = "0x400020C")]
	CircIn,
	[Token(Token = "0x400020D")]
	CircOut,
	[Token(Token = "0x400020E")]
	CircInOut,
	[Token(Token = "0x400020F")]
	ElasticIn,
	[Token(Token = "0x4000210")]
	ElasticOut,
	[Token(Token = "0x4000211")]
	ElasticInOut,
	[Token(Token = "0x4000212")]
	Punch,
	[Token(Token = "0x4000213")]
	BackIn,
	[Token(Token = "0x4000214")]
	BackOut,
	[Token(Token = "0x4000215")]
	BackInOut,
	[Token(Token = "0x4000216")]
	BounceIn,
	[Token(Token = "0x4000217")]
	BounceOut,
	[Token(Token = "0x4000218")]
	BounceInOut,
	[Token(Token = "0x4000219")]
	AnimationCurve
}
[Token(Token = "0x2000078")]
public enum GoLogLevel
{
	[Token(Token = "0x400021B")]
	None,
	[Token(Token = "0x400021C")]
	Info,
	[Token(Token = "0x400021D")]
	Warn,
	[Token(Token = "0x400021E")]
	Error
}
[Token(Token = "0x2000079")]
public enum GoLookAtType
{
	[Token(Token = "0x4000220")]
	None,
	[Token(Token = "0x4000221")]
	NextPathNode,
	[Token(Token = "0x4000222")]
	TargetTransform
}
[Token(Token = "0x200007A")]
public enum GoLoopType
{
	[Token(Token = "0x4000224")]
	RestartFromBeginning,
	[Token(Token = "0x4000225")]
	PingPong
}
[Token(Token = "0x200007B")]
[Flags]
public enum GoShakeType
{
	[Token(Token = "0x4000227")]
	Position = 1,
	[Token(Token = "0x4000228")]
	Scale = 2,
	[Token(Token = "0x4000229")]
	Eulers = 4
}
[Token(Token = "0x200007C")]
public enum GoSplineType
{
	[Token(Token = "0x400022B")]
	StraightLine,
	[Token(Token = "0x400022C")]
	QuadraticBezier,
	[Token(Token = "0x400022D")]
	CubicBezier,
	[Token(Token = "0x400022E")]
	CatmullRom
}
[Token(Token = "0x200007D")]
public enum GoTweenState
{
	[Token(Token = "0x4000230")]
	Running,
	[Token(Token = "0x4000231")]
	Paused,
	[Token(Token = "0x4000232")]
	Complete,
	[Token(Token = "0x4000233")]
	Destroyed
}
[Token(Token = "0x200007E")]
public enum GoUpdateType
{
	[Token(Token = "0x4000235")]
	Update,
	[Token(Token = "0x4000236")]
	LateUpdate,
	[Token(Token = "0x4000237")]
	FixedUpdate,
	[Token(Token = "0x4000238")]
	TimeScaleIndependentUpdate
}
[Token(Token = "0x200007F")]
public static class GoKitTweenExtensions
{
	[Token(Token = "0x600026A")]
	[Address(RVA = "0xE7A9D0", Offset = "0xE7A9D0", VA = "0xE7A9D0")]
	public static GoTween rotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xE7AC64", Offset = "0xE7AC64", VA = "0xE7AC64")]
	public static GoTween localRotationTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xE7AE04", Offset = "0xE7AE04", VA = "0xE7AE04")]
	public static GoTween rotationTo(this Transform self, float duration, Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xE7AFBC", Offset = "0xE7AFBC", VA = "0xE7AFBC")]
	public static GoTween localRotationTo(this Transform self, float duration, Quaternion endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xE7B174", Offset = "0xE7B174", VA = "0xE7B174")]
	public static GoTween eulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xE7B314", Offset = "0xE7B314", VA = "0xE7B314")]
	public static GoTween localEulerAnglesTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xE7B4B4", Offset = "0xE7B4B4", VA = "0xE7B4B4")]
	public static GoTween positionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xE7B654", Offset = "0xE7B654", VA = "0xE7B654")]
	public static GoTween localPositionTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xE7B7F4", Offset = "0xE7B7F4", VA = "0xE7B7F4")]
	public static GoTween scaleTo(this Transform self, float duration, float endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xE7B804", Offset = "0xE7B804", VA = "0xE7B804")]
	public static GoTween scaleTo(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xE7B9A0", Offset = "0xE7B9A0", VA = "0xE7B9A0")]
	public static GoTween shake(this Transform self, float duration, Vector3 shakeMagnitude, GoShakeType shakeType = GoShakeType.Position, int frameMod = 1, bool useLocalProperties = false)
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xE7BB6C", Offset = "0xE7BB6C", VA = "0xE7BB6C")]
	public static GoTween rotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xE7BC48", Offset = "0xE7BC48", VA = "0xE7BC48")]
	public static GoTween localRotationFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xE7BD24", Offset = "0xE7BD24", VA = "0xE7BD24")]
	public static GoTween eulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xE7BE00", Offset = "0xE7BE00", VA = "0xE7BE00")]
	public static GoTween localEulerAnglesFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xE7BEDC", Offset = "0xE7BEDC", VA = "0xE7BEDC")]
	public static GoTween positionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xE7BFB8", Offset = "0xE7BFB8", VA = "0xE7BFB8")]
	public static GoTween localPositionFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xE7C094", Offset = "0xE7C094", VA = "0xE7C094")]
	public static GoTween scaleFrom(this Transform self, float duration, Vector3 endValue, bool isRelative = false)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xE7C170", Offset = "0xE7C170", VA = "0xE7C170")]
	public static GoTween colorTo(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xE7C330", Offset = "0xE7C330", VA = "0xE7C330")]
	public static GoTween vectorTo(this Material self, float duration, Vector4 endValue, string propertyName)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xE7C4F0", Offset = "0xE7C4F0", VA = "0xE7C4F0")]
	public static GoTween floatTo(this Material self, float duration, float endValue, string propertyName)
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xE7C668", Offset = "0xE7C668", VA = "0xE7C668")]
	public static GoTween colorFrom(this Material self, float duration, Color endValue, string colorName = "_Color")
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xE7C758", Offset = "0xE7C758", VA = "0xE7C758")]
	public static GoTween vectorFrom(this Material self, float duration, Vector4 endValue, string propertyName)
	{
		return null;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE7C848", Offset = "0xE7C848", VA = "0xE7C848")]
	public static GoTween colorFrom(this Material self, float duration, float endValue, string propertyName)
	{
		return null;
	}
}
[Token(Token = "0x2000080")]
public static class GoTweenUtils
{
	[Token(Token = "0x6000282")]
	[Address(RVA = "0xE817A8", Offset = "0xE817A8", VA = "0xE817A8")]
	public static Func<float, float, float, float, float> easeFunctionForType(GoEaseType easeType, [Optional] GoTween tween)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	public static T setterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x6000284")]
	public static T getterForProperty<T>(object targetObject, string propertyName)
	{
		return (T)null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xE81D50", Offset = "0xE81D50", VA = "0xE81D50")]
	public static Color unclampedColorLerp(Color c1, Color diff, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xE81DA4", Offset = "0xE81DA4", VA = "0xE81DA4")]
	public static Vector2 unclampedVector2Lerp(Vector2 v1, Vector2 diff, float value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xE81DB8", Offset = "0xE81DB8", VA = "0xE81DB8")]
	public static Vector3 unclampedVector3Lerp(Vector3 v1, Vector3 diff, float value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xE81DD4", Offset = "0xE81DD4", VA = "0xE81DD4")]
	public static Vector4 unclampedVector4Lerp(Vector4 v1, Vector4 diff, float value)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000081")]
public abstract class AbstractMaterialColorTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Material _target;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Color _originalEndValue;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color _startValue;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Color _endValue;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Color _diffValue;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xCB8310", Offset = "0xCB8310", VA = "0xCB8310")]
	public AbstractMaterialColorTweenProperty(Color endValue, bool isRelative)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xCB8398", Offset = "0xCB8398", VA = "0xCB8398", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xCB84C8", Offset = "0xCB84C8", VA = "0xCB84C8", Slot = "4")]
	public override void init(GoTween owner)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xCB86E0", Offset = "0xCB86E0", VA = "0xCB86E0", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000082")]
public abstract class AbstractMaterialFloatTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Material _target;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _originalEndValue;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _startValue;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float _endValue;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _diffValue;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xCB8744", Offset = "0xCB8744", VA = "0xCB8744")]
	public AbstractMaterialFloatTweenProperty(float endValue, bool isRelative)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xCB8784", Offset = "0xCB8784", VA = "0xCB8784", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xCB88B4", Offset = "0xCB88B4", VA = "0xCB88B4", Slot = "4")]
	public override void init(GoTween owner)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xCB8A50", Offset = "0xCB8A50", VA = "0xCB8A50", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000083")]
public abstract class AbstractMaterialVectorTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Material _target;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector4 _originalEndValue;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector4 _startValue;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector4 _endValue;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Vector4 _diffValue;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xCB8A90", Offset = "0xCB8A90", VA = "0xCB8A90")]
	public AbstractMaterialVectorTweenProperty(Vector4 endValue, bool isRelative)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xCB8AE8", Offset = "0xCB8AE8", VA = "0xCB8AE8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xCB8C18", Offset = "0xCB8C18", VA = "0xCB8C18", Slot = "4")]
	public override void init(GoTween owner)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xCB8DB4", Offset = "0xCB8DB4", VA = "0xCB8DB4", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000084")]
public abstract class AbstractOffsetTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _useMax;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform _target;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _startValue;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _endValue;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 _diffValue;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xCB8E34", Offset = "0xCB8E34", VA = "0xCB8E34")]
	public AbstractOffsetTweenProperty(Vector2 endValue, bool isRelative = false, bool useMax = false)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xCB8E8C", Offset = "0xCB8E8C", VA = "0xCB8E8C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xCB8EEC", Offset = "0xCB8EEC", VA = "0xCB8EEC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xCB9064", Offset = "0xCB9064", VA = "0xCB9064", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xCB9124", Offset = "0xCB9124", VA = "0xCB9124")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x2000085")]
public abstract class AbstractQuaternionTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Quaternion _originalEndValue;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Quaternion _startValue;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Quaternion _endValue;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xCB9134", Offset = "0xCB9134", VA = "0xCB9134")]
	public AbstractQuaternionTweenProperty()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xCB915C", Offset = "0xCB915C", VA = "0xCB915C")]
	public AbstractQuaternionTweenProperty(Quaternion endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xCB91B4", Offset = "0xCB91B4", VA = "0xCB91B4", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xCB9230", Offset = "0xCB9230", VA = "0xCB9230", Slot = "7")]
	public override void prepareForUse()
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class AbstractTweenProperty
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool _isInitialized;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	protected bool _isRelative;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected GoTween _ownerTween;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Func<float, float, float, float, float> _easeFunction;

	[Token(Token = "0x1700002A")]
	public bool isInitialized
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xCB9288", Offset = "0xCB9288", VA = "0xCB9288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xCB8368", Offset = "0xCB8368", VA = "0xCB8368")]
	public AbstractTweenProperty(bool isRelative = false)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xCB9290", Offset = "0xCB9290", VA = "0xCB9290", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xCB9298", Offset = "0xCB9298", VA = "0xCB9298", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xCB8664", Offset = "0xCB8664", VA = "0xCB8664", Slot = "4")]
	public virtual void init(GoTween owner)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xCB9554", Offset = "0xCB9554", VA = "0xCB9554")]
	public AbstractTweenProperty clone()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xCB9518", Offset = "0xCB9518", VA = "0xCB9518")]
	public void setEaseType(GoEaseType easeType)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xCB9604", Offset = "0xCB9604", VA = "0xCB9604", Slot = "5")]
	public virtual bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A6")]
	public abstract void tick(float totalElapsedTime);

	[Token(Token = "0x60002A7")]
	public abstract void prepareForUse();
}
[Token(Token = "0x2000087")]
public abstract class AbstractVector3TweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform _target;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 _originalEndValue;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 _startValue;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector3 _endValue;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector3 _diffValue;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xCB960C", Offset = "0xCB960C", VA = "0xCB960C")]
	public AbstractVector3TweenProperty()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xCB9634", Offset = "0xCB9634", VA = "0xCB9634")]
	public AbstractVector3TweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xCB9688", Offset = "0xCB9688", VA = "0xCB9688", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xCB9704", Offset = "0xCB9704", VA = "0xCB9704", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xCB9760", Offset = "0xCB9760", VA = "0xCB9760")]
	public void resetWithNewEndValue(Vector3 endValue)
	{
	}
}
[Token(Token = "0x2000088")]
public class ActionTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<float> _action;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _startValue;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _endValue;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xCBB2A8", Offset = "0xCBB2A8", VA = "0xCBB2A8")]
	public ActionTweenProperty(float startValue, float endValue, Action<float> action)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xCBB2F4", Offset = "0xCBB2F4", VA = "0xCBB2F4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xCBB2F8", Offset = "0xCBB2F8", VA = "0xCBB2F8", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000089")]
public sealed class ColorTweenProperty : AbstractMaterialColorTweenProperty, IGenericProperty
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79A4", Offset = "0x6D79A4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action<Color> _setter;

	[Token(Token = "0x1700002B")]
	public string propertyName
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD883D4", Offset = "0xD883D4", VA = "0xD883D4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD06C", Offset = "0x6DD06C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD883DC", Offset = "0xD883DC", VA = "0xD883DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD07C", Offset = "0x6DD07C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD883E4", Offset = "0xD883E4", VA = "0xD883E4")]
	public ColorTweenProperty(string propertyName, Color endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD8841C", Offset = "0xD8841C", VA = "0xD8841C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD88498", Offset = "0xD88498", VA = "0xD88498", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD88570", Offset = "0xD88570", VA = "0xD88570", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200008A")]
public sealed class FloatTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79B4", Offset = "0x6D79B4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<float> _setter;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _originalEndValue;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startValue;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _endValue;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _diffValue;

	[Token(Token = "0x1700002C")]
	public string propertyName
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xB52154", Offset = "0xB52154", VA = "0xB52154", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD08C", Offset = "0x6DD08C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xB5215C", Offset = "0xB5215C", VA = "0xB5215C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD09C", Offset = "0x6DD09C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB52164", Offset = "0xB52164", VA = "0xB52164")]
	public FloatTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xB521B0", Offset = "0xB521B0", VA = "0xB521B0", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xB5222C", Offset = "0xB5222C", VA = "0xB5222C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xB52318", Offset = "0xB52318", VA = "0xB52318", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200008B")]
public interface IGenericProperty
{
	[Token(Token = "0x1700002D")]
	string propertyName
	{
		[Token(Token = "0x60002BC")]
		get;
	}
}
[Token(Token = "0x200008C")]
public sealed class IntTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79C4", Offset = "0x6D79C4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<int> _setter;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _originalEndValue;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _startValue;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _endValue;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _diffValue;

	[Token(Token = "0x1700002E")]
	public string propertyName
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xCAAA58", Offset = "0xCAAA58", VA = "0xCAAA58", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0AC", Offset = "0x6DD0AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xCAAA60", Offset = "0xCAAA60", VA = "0xCAAA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0BC", Offset = "0x6DD0BC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCAAA68", Offset = "0xCAAA68", VA = "0xCAAA68")]
	public IntTweenProperty(string propertyName, int endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCAAAB4", Offset = "0xCAAAB4", VA = "0xCAAAB4", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCAAB30", Offset = "0xCAAB30", VA = "0xCAAB30", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xCAAC18", Offset = "0xCAAC18", VA = "0xCAAC18", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200008D")]
public sealed class Vector2TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79D4", Offset = "0x6D79D4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector2> _setter;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _startValue;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _endValue;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 _diffValue;

	[Token(Token = "0x1700002F")]
	public string propertyName
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1B12A98", Offset = "0x1B12A98", VA = "0x1B12A98", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0CC", Offset = "0x6DD0CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1B12AA0", Offset = "0x1B12AA0", VA = "0x1B12AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0DC", Offset = "0x6DD0DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1B12AA8", Offset = "0x1B12AA8", VA = "0x1B12AA8")]
	public Vector2TweenProperty(string propertyName, Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1B12AF8", Offset = "0x1B12AF8", VA = "0x1B12AF8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1B12B74", Offset = "0x1B12B74", VA = "0x1B12B74", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1B12C60", Offset = "0x1B12C60", VA = "0x1B12C60", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200008E")]
public sealed class Vector3PathTweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79E4", Offset = "0x6D79E4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector3> _setter;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GoSpline _path;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startValue;

	[Token(Token = "0x17000030")]
	public string propertyName
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x1B12D18", Offset = "0x1B12D18", VA = "0x1B12D18", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0EC", Offset = "0x6DD0EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1B12D20", Offset = "0x1B12D20", VA = "0x1B12D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD0FC", Offset = "0x6DD0FC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1B12D28", Offset = "0x1B12D28", VA = "0x1B12D28")]
	public Vector3PathTweenProperty(string propertyName, GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1B12D7C", Offset = "0x1B12D7C", VA = "0x1B12D7C", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1B12DF8", Offset = "0x1B12DF8", VA = "0x1B12DF8", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1B12ED8", Offset = "0x1B12ED8", VA = "0x1B12ED8", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200008F")]
public sealed class Vector3TweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D79F4", Offset = "0x6D79F4")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<Vector3> _setter;

	[Token(Token = "0x17000031")]
	public string propertyName
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1B12FA0", Offset = "0x1B12FA0", VA = "0x1B12FA0", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD10C", Offset = "0x6DD10C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1B12FA8", Offset = "0x1B12FA8", VA = "0x1B12FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD11C", Offset = "0x6DD11C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1B12FB0", Offset = "0x1B12FB0", VA = "0x1B12FB0")]
	public Vector3TweenProperty(string propertyName, Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1B12FE8", Offset = "0x1B12FE8", VA = "0x1B12FE8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1B13064", Offset = "0x1B13064", VA = "0x1B13064", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1B1313C", Offset = "0x1B1313C", VA = "0x1B1313C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000090")]
public class Vector3XTweenProperty : AbstractVector3TweenProperty, IGenericProperty
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7A04", Offset = "0x6D7A04")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<Vector3> _setter;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Func<Vector3> _getter;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected new float _originalEndValue;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected new float _startValue;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected new float _endValue;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected new float _diffValue;

	[Token(Token = "0x17000032")]
	public string propertyName
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1B131FC", Offset = "0x1B131FC", VA = "0x1B131FC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD12C", Offset = "0x6DD12C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1B13204", Offset = "0x1B13204", VA = "0x1B13204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD13C", Offset = "0x6DD13C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1B1320C", Offset = "0x1B1320C", VA = "0x1B1320C")]
	public Vector3XTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1B13268", Offset = "0x1B13268", VA = "0x1B13268", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1B132E4", Offset = "0x1B132E4", VA = "0x1B132E4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1B133EC", Offset = "0x1B133EC", VA = "0x1B133EC", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000091")]
public class Vector3YTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1B134C4", Offset = "0x1B134C4", VA = "0x1B134C4")]
	public Vector3YTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1B13520", Offset = "0x1B13520", VA = "0x1B13520", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1B13628", Offset = "0x1B13628", VA = "0x1B13628", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000092")]
public class Vector3ZTweenProperty : Vector3XTweenProperty
{
	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1B13704", Offset = "0x1B13704", VA = "0x1B13704")]
	public Vector3ZTweenProperty(string propertyName, float endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1B13760", Offset = "0x1B13760", VA = "0x1B13760", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1B13868", Offset = "0x1B13868", VA = "0x1B13868", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000093")]
public sealed class Vector4TweenProperty : AbstractTweenProperty, IGenericProperty
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7A14", Offset = "0x6D7A14")]
	private string <propertyName>k__BackingField;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Vector4> _setter;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4 _originalEndValue;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 _startValue;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 _endValue;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector4 _diffValue;

	[Token(Token = "0x17000033")]
	public string propertyName
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1B13944", Offset = "0x1B13944", VA = "0x1B13944", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD14C", Offset = "0x6DD14C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x1B1394C", Offset = "0x1B1394C", VA = "0x1B1394C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD15C", Offset = "0x6DD15C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1B13954", Offset = "0x1B13954", VA = "0x1B13954")]
	public Vector4TweenProperty(string propertyName, Vector4 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1B139B8", Offset = "0x1B139B8", VA = "0x1B139B8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1B13A34", Offset = "0x1B13A34", VA = "0x1B13A34", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1B13B5C", Offset = "0x1B13B5C", VA = "0x1B13B5C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x2000094")]
public struct GoSmoothedQuaternion
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Quaternion _currentValue;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion _target;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion _start;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _startTime;

	[Token(Token = "0x17000034")]
	public Quaternion smoothValue
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xE7C964", Offset = "0xE7C964", VA = "0xE7C964")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xE7CA00", Offset = "0xE7CA00", VA = "0xE7CA00")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float x
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xE7CA5C", Offset = "0xE7CA5C", VA = "0xE7CA5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xE7CA64", Offset = "0xE7CA64", VA = "0xE7CA64")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float y
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xE7CAB0", Offset = "0xE7CAB0", VA = "0xE7CAB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xE7CAB8", Offset = "0xE7CAB8", VA = "0xE7CAB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float z
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xE7CB08", Offset = "0xE7CB08", VA = "0xE7CB08")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xE7CB10", Offset = "0xE7CB10", VA = "0xE7CB10")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float w
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xE7CB60", Offset = "0xE7CB60", VA = "0xE7CB60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xE7CB68", Offset = "0xE7CB68", VA = "0xE7CB68")]
		set
		{
		}
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xE7C918", Offset = "0xE7C918", VA = "0xE7C918")]
	public GoSmoothedQuaternion(Quaternion quat)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xE7CBB8", Offset = "0xE7CBB8", VA = "0xE7CBB8")]
	public static implicit operator GoSmoothedQuaternion(Quaternion q)
	{
		return default(GoSmoothedQuaternion);
	}
}
[Token(Token = "0x2000095")]
public struct GoSmoothedVector3
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GoSmoothingType smoothingType;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Vector3 _currentValue;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _target;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _start;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _startTime;

	[Token(Token = "0x17000039")]
	public Vector3 smoothValue
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xE7CC1C", Offset = "0xE7CC1C", VA = "0xE7CC1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xE7CCDC", Offset = "0xE7CCDC", VA = "0xE7CCDC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float x
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xE7CD34", Offset = "0xE7CD34", VA = "0xE7CD34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xE7CD3C", Offset = "0xE7CD3C", VA = "0xE7CD3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float y
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xE7CD44", Offset = "0xE7CD44", VA = "0xE7CD44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xE7CD4C", Offset = "0xE7CD4C", VA = "0xE7CD4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float z
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xE7CD60", Offset = "0xE7CD60", VA = "0xE7CD60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xE7CD68", Offset = "0xE7CD68", VA = "0xE7CD68")]
		set
		{
		}
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xE7CBD4", Offset = "0xE7CBD4", VA = "0xE7CBD4")]
	public GoSmoothedVector3(Vector3 vector)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xE7CD7C", Offset = "0xE7CD7C", VA = "0xE7CD7C")]
	public static implicit operator GoSmoothedVector3(Vector3 v)
	{
		return default(GoSmoothedVector3);
	}
}
[Token(Token = "0x2000096")]
public enum GoSmoothingType
{
	[Token(Token = "0x4000292")]
	Lerp,
	[Token(Token = "0x4000293")]
	Slerp
}
[Token(Token = "0x2000097")]
public sealed class AnchorMaxTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _startValue;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _endValue;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _diffValue;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xCBC494", Offset = "0xCBC494", VA = "0xCBC494")]
	public AnchorMaxTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xCBC4D8", Offset = "0xCBC4D8", VA = "0xCBC4D8", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xCBC538", Offset = "0xCBC538", VA = "0xCBC538", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xCBC668", Offset = "0xCBC668", VA = "0xCBC668", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xCBC70C", Offset = "0xCBC70C", VA = "0xCBC70C")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x2000098")]
public sealed class AnchorMinTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _startValue;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _endValue;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _diffValue;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xCBC71C", Offset = "0xCBC71C", VA = "0xCBC71C")]
	public AnchorMinTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xCBC760", Offset = "0xCBC760", VA = "0xCBC760", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xCBC7C0", Offset = "0xCBC7C0", VA = "0xCBC7C0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xCBC8F0", Offset = "0xCBC8F0", VA = "0xCBC8F0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xCBC994", Offset = "0xCBC994", VA = "0xCBC994")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x2000099")]
public sealed class AnchoredPosition3DTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _originalEndValue;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _startValue;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _endValue;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _diffValue;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xCBD798", Offset = "0xCBD798", VA = "0xCBD798")]
	public AnchoredPosition3DTweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xCBD7EC", Offset = "0xCBD7EC", VA = "0xCBD7EC", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xCBD84C", Offset = "0xCBD84C", VA = "0xCBD84C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xCBD9B8", Offset = "0xCBD9B8", VA = "0xCBD9B8", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xCBDA64", Offset = "0xCBDA64", VA = "0xCBDA64")]
	public void resetWithNewEndValue(Vector3 endValue)
	{
	}
}
[Token(Token = "0x200009A")]
public sealed class AnchoredPositionTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _startValue;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _endValue;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _diffValue;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xCBDA78", Offset = "0xCBDA78", VA = "0xCBDA78")]
	public AnchoredPositionTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xCBDABC", Offset = "0xCBDABC", VA = "0xCBDABC", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xCBDB1C", Offset = "0xCBDB1C", VA = "0xCBDB1C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xCBDC4C", Offset = "0xCBDC4C", VA = "0xCBDC4C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xCBDCF0", Offset = "0xCBDCF0", VA = "0xCBDCF0")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x200009B")]
public sealed class EulerAnglesTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalEulers;

	[Token(Token = "0x1700003D")]
	public bool useLocalEulers
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xB4B334", Offset = "0xB4B334", VA = "0xB4B334")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB4B33C", Offset = "0xB4B33C", VA = "0xB4B33C")]
	public EulerAnglesTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalEulers = false)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xB4B370", Offset = "0xB4B370", VA = "0xB4B370", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xB4B378", Offset = "0xB4B378", VA = "0xB4B378", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB4B470", Offset = "0xB4B470", VA = "0xB4B470", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB4B598", Offset = "0xB4B598", VA = "0xB4B598", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200009C")]
public class MaterialColorTweenProperty : AbstractMaterialColorTweenProperty
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _materialColorName;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x9C702C", Offset = "0x9C702C", VA = "0x9C702C")]
	public MaterialColorTweenProperty(Color endValue, string colorName = "_Color", bool isRelative = false)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x9C7064", Offset = "0x9C7064", VA = "0x9C7064", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x9C706C", Offset = "0x9C706C", VA = "0x9C706C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x9C712C", Offset = "0x9C712C", VA = "0x9C712C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x9C71B8", Offset = "0x9C71B8", VA = "0x9C71B8", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200009D")]
public sealed class MaterialFloatTweenProperty : AbstractMaterialFloatTweenProperty
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _materialPropertyName;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x9C73E8", Offset = "0x9C73E8", VA = "0x9C73E8")]
	public MaterialFloatTweenProperty(float endValue, string propertyName, bool isRelative = false)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x9C7420", Offset = "0x9C7420", VA = "0x9C7420", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x9C7428", Offset = "0x9C7428", VA = "0x9C7428", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x9C74CC", Offset = "0x9C74CC", VA = "0x9C74CC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x9C7544", Offset = "0x9C7544", VA = "0x9C7544", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200009E")]
public sealed class MaterialVectorTweenProperty : AbstractMaterialVectorTweenProperty
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _materialPropertyName;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x9C75D0", Offset = "0x9C75D0", VA = "0x9C75D0")]
	public MaterialVectorTweenProperty(Vector4 endValue, string propertyName, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x9C7608", Offset = "0x9C7608", VA = "0x9C7608", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x9C7610", Offset = "0x9C7610", VA = "0x9C7610", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x9C76B4", Offset = "0x9C76B4", VA = "0x9C76B4", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x9C7740", Offset = "0x9C7740", VA = "0x9C7740", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x200009F")]
public sealed class OffsetMaxTweenProperty : AbstractOffsetTweenProperty
{
	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC2D318", Offset = "0xC2D318", VA = "0xC2D318")]
	public OffsetMaxTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}
}
[Token(Token = "0x20000A0")]
public sealed class OffsetMinTweenProperty : AbstractOffsetTweenProperty
{
	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC2D328", Offset = "0xC2D328", VA = "0xC2D328")]
	public OffsetMinTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}
}
[Token(Token = "0x20000A1")]
public sealed class PivotTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _startValue;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _endValue;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _diffValue;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1290A04", Offset = "0x1290A04", VA = "0x1290A04")]
	public PivotTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1290A40", Offset = "0x1290A40", VA = "0x1290A40", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1290AA0", Offset = "0x1290AA0", VA = "0x1290AA0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1290BD0", Offset = "0x1290BD0", VA = "0x1290BD0", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1290C74", Offset = "0x1290C74", VA = "0x1290C74")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x20000A2")]
public sealed class PositionPathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _useLocalPosition;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _target;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _startValue;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GoSpline _path;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GoLookAtType _lookAtType;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _lookTarget;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GoSmoothedQuaternion _smoothedRotation;

	[Token(Token = "0x1700003E")]
	public bool useLocalPosition
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xA66934", Offset = "0xA66934", VA = "0xA66934")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA6693C", Offset = "0xA6693C", VA = "0xA6693C")]
	public PositionPathTweenProperty(GoSpline path, bool isRelative = false, bool useLocalPosition = false, GoLookAtType lookAtType = GoLookAtType.None, [Optional] Transform lookTarget)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA669AC", Offset = "0xA669AC", VA = "0xA669AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA669B4", Offset = "0xA669B4", VA = "0xA669B4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA66AAC", Offset = "0xA66AAC", VA = "0xA66AAC", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xA66C84", Offset = "0xA66C84", VA = "0xA66C84", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A3")]
public sealed class PositionTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalPosition;

	[Token(Token = "0x1700003F")]
	public bool useLocalPosition
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xA66E58", Offset = "0xA66E58", VA = "0xA66E58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xA66E60", Offset = "0xA66E60", VA = "0xA66E60")]
	public PositionTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalPosition = false)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xA66E94", Offset = "0xA66E94", VA = "0xA66E94", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xA66E9C", Offset = "0xA66E9C", VA = "0xA66E9C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xA66F94", Offset = "0xA66F94", VA = "0xA66F94", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xA67130", Offset = "0xA67130", VA = "0xA67130", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class RotationQuaternionTweenProperty : AbstractQuaternionTweenProperty
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x17000040")]
	public bool useLocalRotation
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xA6F338", Offset = "0xA6F338", VA = "0xA6F338")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xA6F340", Offset = "0xA6F340", VA = "0xA6F340")]
	public RotationQuaternionTweenProperty(Quaternion endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xA6F374", Offset = "0xA6F374", VA = "0xA6F374", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xA6F37C", Offset = "0xA6F37C", VA = "0xA6F37C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xA6F424", Offset = "0xA6F424", VA = "0xA6F424", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xA6F54C", Offset = "0xA6F54C", VA = "0xA6F54C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A5")]
public sealed class RotationTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _useLocalRotation;

	[Token(Token = "0x17000041")]
	public bool useLocalRotation
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xA6F61C", Offset = "0xA6F61C", VA = "0xA6F61C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xA6F624", Offset = "0xA6F624", VA = "0xA6F624")]
	public RotationTweenProperty(Vector3 endValue, bool isRelative = false, bool useLocalRotation = false)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA6F658", Offset = "0xA6F658", VA = "0xA6F658", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA6F660", Offset = "0xA6F660", VA = "0xA6F660", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA6F758", Offset = "0xA6F758", VA = "0xA6F758", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA6F930", Offset = "0xA6F930", VA = "0xA6F930", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A6")]
public sealed class ScalePathTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _target;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startValue;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GoSpline _path;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA70C50", Offset = "0xA70C50", VA = "0xA70C50")]
	public ScalePathTweenProperty(GoSpline path, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA70C88", Offset = "0xA70C88", VA = "0xA70C88", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA70C90", Offset = "0xA70C90", VA = "0xA70C90", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA70D6C", Offset = "0xA70D6C", VA = "0xA70D6C", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA70E80", Offset = "0xA70E80", VA = "0xA70E80", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class ScaleTweenProperty : AbstractVector3TweenProperty
{
	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA70F34", Offset = "0xA70F34", VA = "0xA70F34")]
	public ScaleTweenProperty(Vector3 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA70F40", Offset = "0xA70F40", VA = "0xA70F40", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xA70F48", Offset = "0xA70F48", VA = "0xA70F48", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xA71024", Offset = "0xA71024", VA = "0xA71024", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xA71124", Offset = "0xA71124", VA = "0xA71124", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A8")]
public sealed class ShakeTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _target;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _shakeMagnitude;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _originalEndValue;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _startPosition;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _startScale;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _startEulers;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GoShakeType _shakeType;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _frameCount;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _frameMod;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _useLocalProperties;

	[Token(Token = "0x17000042")]
	public bool useLocalProperties
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xD48848", Offset = "0xD48848", VA = "0xD48848")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xD48850", Offset = "0xD48850", VA = "0xD48850")]
	public ShakeTweenProperty(Vector3 shakeMagnitude, GoShakeType shakeType, int frameMod = 1, bool useLocalProperties = false)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xD488C0", Offset = "0xD488C0", VA = "0xD488C0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xD488C8", Offset = "0xD488C8", VA = "0xD488C8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xD48964", Offset = "0xD48964", VA = "0xD48964", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xD489E0", Offset = "0xD489E0", VA = "0xD489E0", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xD48AF4", Offset = "0xD48AF4", VA = "0xD48AF4")]
	private Vector3 randomDiminishingTarget(float falloffValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xD48B6C", Offset = "0xD48B6C", VA = "0xD48B6C", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}
}
[Token(Token = "0x20000A9")]
public sealed class SizeDeltaTweenProperty : AbstractTweenProperty
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _target;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _originalEndValue;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _startValue;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _endValue;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _diffValue;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xD03878", Offset = "0xD03878", VA = "0xD03878")]
	public SizeDeltaTweenProperty(Vector2 endValue, bool isRelative = false)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xD038B4", Offset = "0xD038B4", VA = "0xD038B4", Slot = "5")]
	public override bool validateTarget(object target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xD03914", Offset = "0xD03914", VA = "0xD03914", Slot = "7")]
	public override void prepareForUse()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xD03A44", Offset = "0xD03A44", VA = "0xD03A44", Slot = "6")]
	public override void tick(float totalElapsedTime)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xD03AE8", Offset = "0xD03AE8", VA = "0xD03AE8")]
	public void resetWithNewEndValue(Vector2 endValue)
	{
	}
}
[Token(Token = "0x20000AA")]
public abstract class AbstractGoSplineSolver
{
	[Token(Token = "0x20000AB")]
	protected struct Segment
	{
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float distance;

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x9FA08C", Offset = "0x9FA08C", VA = "0x9FA08C")]
		public Segment(float time, float distance)
		{
		}
	}

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<Vector3> _nodes;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float _pathLength;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int totalSubdivisionsPerNodeForLookupTable;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<Segment> segments;

	[Token(Token = "0x17000043")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xCB6510", Offset = "0xCB6510", VA = "0xCB6510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public float pathLength
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xCB6518", Offset = "0xCB6518", VA = "0xCB6518")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xCB6520", Offset = "0xCB6520", VA = "0xCB6520", Slot = "4")]
	public virtual void buildPath()
	{
	}

	[Token(Token = "0x600035F")]
	public abstract void closePath();

	[Token(Token = "0x6000360")]
	public abstract Vector3 getPoint(float t);

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xCB6738", Offset = "0xCB6738", VA = "0xCB6738", Slot = "7")]
	public virtual Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xCB6884", Offset = "0xCB6884", VA = "0xCB6884")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xCB68D8", Offset = "0xCB68D8", VA = "0xCB68D8", Slot = "8")]
	public virtual void drawGizmos()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xCB68DC", Offset = "0xCB68DC", VA = "0xCB68DC")]
	protected AbstractGoSplineSolver()
	{
	}
}
[Token(Token = "0x20000AC")]
public class GoSpline
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7A24", Offset = "0x6D7A24")]
	private int <currentSegment>k__BackingField;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7A34", Offset = "0x6D7A34")]
	private bool <isClosed>k__BackingField;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7A44", Offset = "0x6D7A44")]
	private GoSplineType <splineType>k__BackingField;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isReversed;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AbstractGoSplineSolver _solver;

	[Token(Token = "0x17000045")]
	public int currentSegment
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xE7CDD0", Offset = "0xE7CDD0", VA = "0xE7CDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD16C", Offset = "0x6DD16C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xE7CDD8", Offset = "0xE7CDD8", VA = "0xE7CDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD17C", Offset = "0x6DD17C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public bool isClosed
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xE7CDE0", Offset = "0xE7CDE0", VA = "0xE7CDE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD18C", Offset = "0x6DD18C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xE7CDE8", Offset = "0xE7CDE8", VA = "0xE7CDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD19C", Offset = "0x6DD19C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public GoSplineType splineType
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xE7CDF4", Offset = "0xE7CDF4", VA = "0xE7CDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD1AC", Offset = "0x6DD1AC")]
		get
		{
			return default(GoSplineType);
		}
		[Token(Token = "0x600036B")]
		[Address(RVA = "0xE7CDFC", Offset = "0xE7CDFC", VA = "0xE7CDFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD1BC", Offset = "0x6DD1BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public List<Vector3> nodes
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xE7CE04", Offset = "0xE7CE04", VA = "0xE7CE04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public float pathLength
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xE7CE20", Offset = "0xE7CE20", VA = "0xE7CE20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xE7CE3C", Offset = "0xE7CE3C", VA = "0xE7CE3C")]
	public GoSpline(List<Vector3> nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xE7A7C4", Offset = "0xE7A7C4", VA = "0xE7A7C4")]
	public GoSpline(Vector3[] nodes, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xE7D034", Offset = "0xE7D034", VA = "0xE7D034")]
	public GoSpline(string pathAssetName, bool useStraightLines = false)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xE7D068", Offset = "0xE7D068", VA = "0xE7D068")]
	private static List<Vector3> nodeListFromAsset(string pathAssetName)
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xE7D1A8", Offset = "0xE7D1A8", VA = "0xE7D1A8")]
	public static List<Vector3> bytesToVector3List(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xE7D2F0", Offset = "0xE7D2F0", VA = "0xE7D2F0")]
	public Vector3 getLastNode()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xE7A850", Offset = "0xE7A850", VA = "0xE7A850")]
	public void buildPath()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xE7D370", Offset = "0xE7D370", VA = "0xE7D370")]
	private Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xE7A8E8", Offset = "0xE7A8E8", VA = "0xE7A8E8")]
	public Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xE7D390", Offset = "0xE7D390", VA = "0xE7D390")]
	public void closePath()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xE7D3C8", Offset = "0xE7D3C8", VA = "0xE7D3C8")]
	public void reverseNodes()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xE7D408", Offset = "0xE7D408", VA = "0xE7D408")]
	public void unreverseNodes()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xE7D444", Offset = "0xE7D444", VA = "0xE7D444")]
	public void drawGizmos(float resolution)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xE7D560", Offset = "0xE7D560", VA = "0xE7D560")]
	public static void drawGizmos(Vector3[] path, float resolution = 50f)
	{
	}
}
[Token(Token = "0x20000AD")]
public sealed class GoSplineCatmullRomSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x600037C")]
	[Address(RVA = "0xE7D000", Offset = "0xE7D000", VA = "0xE7D000")]
	public GoSplineCatmullRomSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xE7D5D8", Offset = "0xE7D5D8", VA = "0xE7D5D8", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xE7DAB8", Offset = "0xE7DAB8", VA = "0xE7DAB8", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xE7DD28", Offset = "0xE7DD28", VA = "0xE7DD28", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x20000AE")]
public sealed class GoSplineCubicBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0xE7CFCC", Offset = "0xE7CFCC", VA = "0xE7CFCC")]
	public GoSplineCubicBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xE7DF00", Offset = "0xE7DF00", VA = "0xE7DF00", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xE7DF04", Offset = "0xE7DF04", VA = "0xE7DF04", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xE7E07C", Offset = "0xE7E07C", VA = "0xE7E07C", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x20000AF")]
public sealed class GoSplineQuadraticBezierSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x6000384")]
	[Address(RVA = "0xE7CF98", Offset = "0xE7CF98", VA = "0xE7CF98")]
	public GoSplineQuadraticBezierSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xE7E1EC", Offset = "0xE7E1EC", VA = "0xE7E1EC")]
	private float quadBezierLength(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xE7E490", Offset = "0xE7E490", VA = "0xE7E490", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xE7E5B0", Offset = "0xE7E5B0", VA = "0xE7E5B0", Slot = "8")]
	public override void drawGizmos()
	{
	}
}
[Token(Token = "0x20000B0")]
public sealed class GoSplineStraightLineSolver : AbstractGoSplineSolver
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, float> _segmentStartLocations;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, float> _segmentDistances;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentSegment;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xE7CF64", Offset = "0xE7CF64", VA = "0xE7CF64")]
	public GoSplineStraightLineSolver(List<Vector3> nodes)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xE7E720", Offset = "0xE7E720", VA = "0xE7E720", Slot = "4")]
	public override void buildPath()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xE7E9AC", Offset = "0xE7E9AC", VA = "0xE7E9AC", Slot = "5")]
	public override void closePath()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xE7EAD8", Offset = "0xE7EAD8", VA = "0xE7EAD8", Slot = "6")]
	public override Vector3 getPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xE7EAE4", Offset = "0xE7EAE4", VA = "0xE7EAE4", Slot = "7")]
	public override Vector3 getPointOnPath(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000B1")]
public class HoloshaderController : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xCA41DC", Offset = "0xCA41DC", VA = "0xCA41DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xCA41E0", Offset = "0xCA41E0", VA = "0xCA41E0")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xCA4280", Offset = "0xCA4280", VA = "0xCA4280")]
	public void ZeroPosition()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xCA4284", Offset = "0xCA4284", VA = "0xCA4284")]
	public void TriggerScan()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xCA4288", Offset = "0xCA4288", VA = "0xCA4288")]
	public void TriggerHolo(float scl = 35f)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xCA428C", Offset = "0xCA428C", VA = "0xCA428C")]
	public void EndHolo(float scl = 35f)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xCA4290", Offset = "0xCA4290", VA = "0xCA4290")]
	public void NoHolo()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xCA4294", Offset = "0xCA4294", VA = "0xCA4294")]
	public HoloshaderController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class LightSpeedAnim : MonoBehaviour
{
	[Token(Token = "0x6000396")]
	[Address(RVA = "0xE781E0", Offset = "0xE781E0", VA = "0xE781E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xE781E4", Offset = "0xE781E4", VA = "0xE781E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xE781E8", Offset = "0xE781E8", VA = "0xE781E8")]
	public LightSpeedAnim()
	{
	}
}
[Token(Token = "0x20000B3")]
public class LineScroller : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer r;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x9BC884", Offset = "0x9BC884", VA = "0x9BC884")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9BC8E0", Offset = "0x9BC8E0", VA = "0x9BC8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x9BC938", Offset = "0x9BC938", VA = "0x9BC938")]
	public LineScroller()
	{
	}
}
[Token(Token = "0x20000B4")]
public class LocalizationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B5")]
	public class LocalizationLanguageData
	{
		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public TextAsset translationCsv;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public TMP_FontAsset font1;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public TMP_FontAsset font2;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool isCJKFont;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		public bool moneySymbolComesAfter;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string languageLabel;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool hidden;

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x934488", Offset = "0x934488", VA = "0x934488")]
		public LocalizationLanguageData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B6")]
	public class LocalizationSettingsData
	{
		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int languageChoice;

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x934430", Offset = "0x934430", VA = "0x934430")]
		public LocalizationSettingsData()
		{
		}
	}

	[Token(Token = "0x20000B7")]
	public enum Languages
	{
		[Token(Token = "0x40002F9")]
		English,
		[Token(Token = "0x40002FA")]
		French,
		[Token(Token = "0x40002FB")]
		German,
		[Token(Token = "0x40002FC")]
		LASpanish,
		[Token(Token = "0x40002FD")]
		Korean,
		[Token(Token = "0x40002FE")]
		Japanese,
		[Token(Token = "0x40002FF")]
		Chinese
	}

	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D50DC", Offset = "0x6D50DC")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x933E38", Offset = "0x933E38", VA = "0x933E38")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x933E40", Offset = "0x933E40", VA = "0x933E40")]
		internal bool <AddToMasterFile>b__0(string element)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x933EB4", Offset = "0x933EB4", VA = "0x933EB4")]
		internal bool <AddToMasterFile>b__1(string element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D50EC", Offset = "0x6D50EC")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValuePair<string, string> entry;

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x933F28", Offset = "0x933F28", VA = "0x933F28")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x933F30", Offset = "0x933F30", VA = "0x933F30")]
		internal bool <AddMultipleToMasterFile>b__0(string element)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x933FB0", Offset = "0x933FB0", VA = "0x933FB0")]
		internal bool <AddMultipleToMasterFile>b__1(string element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D50FC", Offset = "0x6D50FC")]
	private sealed class <SaveSettingsCO>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationManager <>4__this;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <jsonString>5__2;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x934438", Offset = "0x934438", VA = "0x934438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x934480", Offset = "0x934480", VA = "0x934480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x934030", Offset = "0x934030", VA = "0x934030")]
		[DebuggerHidden]
		public <SaveSettingsCO>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x93405C", Offset = "0x93405C", VA = "0x93405C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x934060", Offset = "0x934060", VA = "0x934060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x934440", Offset = "0x934440", VA = "0x934440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationManager instance;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> localizedText;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> fallbackLocalizedText;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isReady;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<ILocalizedText> activeLocalizedTextList;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_FontAsset ActiveFont;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TMP_FontAsset ActiveFont2;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextAsset commonChineseSymbols;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string secondsAbbrev;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string colonString;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] supportedLanguages;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LocalizationLanguageData[] translations;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public TMP_FontAsset MainFont;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public TMP_FontAsset MainFont2;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public TMP_FontAsset CJKFont;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public TMP_FontAsset CJKFont2;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Languages currentLanguage;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int MaxKeyLength;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private char[] subkeyDelim;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x9BD09C", Offset = "0x9BD09C", VA = "0x9BD09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x9BDB0C", Offset = "0x9BDB0C", VA = "0x9BDB0C")]
	public static string GetPathForSettings()
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x9BDBEC", Offset = "0x9BDBEC", VA = "0x9BDBEC")]
	public void DeleteSettings()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x9BDC98", Offset = "0x9BDC98", VA = "0x9BDC98")]
	public static void EnsureMasterFileExists()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x9BE040", Offset = "0x9BE040", VA = "0x9BE040")]
	public static string EncodeTranslation(string str)
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x9BE094", Offset = "0x9BE094", VA = "0x9BE094")]
	public static string[] SplitFileToLines(string textFile)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x9BE2B4", Offset = "0x9BE2B4", VA = "0x9BE2B4")]
	public static string[] SplitLineToColumns(string line)
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x9BE474", Offset = "0x9BE474", VA = "0x9BE474")]
	public void AddToMasterFile(string key, string stringToAdd, bool update = false, int columnNum = 1)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x9BEAB4", Offset = "0x9BEAB4", VA = "0x9BEAB4")]
	public static void AddMultipleToMasterFile(Dictionary<string, string> entries, bool update = false, int columnNum = 1)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x9BF318", Offset = "0x9BF318", VA = "0x9BF318")]
	public static string GetKeyFromText(string text)
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x9BF550", Offset = "0x9BF550", VA = "0x9BF550")]
	public string GetLanguageSuffix(Languages language)
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x9BF604", Offset = "0x9BF604", VA = "0x9BF604")]
	public void SplitMasterFile()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x9BD658", Offset = "0x9BD658", VA = "0x9BD658")]
	private void LoadLocalizedTextFromCsv(string csvText, bool fallback = false)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x9BFC90", Offset = "0x9BFC90", VA = "0x9BFC90")]
	public bool CheckKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x9BFD00", Offset = "0x9BFD00", VA = "0x9BFD00")]
	public string GetLocalizedValue(string key, bool checkForMultikey = false)
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x9BFF74", Offset = "0x9BFF74", VA = "0x9BFF74")]
	public TMP_FontAsset GetLocalizedFont()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x9BFF7C", Offset = "0x9BFF7C", VA = "0x9BFF7C")]
	public TMP_FontAsset GetLocalizedFont2()
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x9BFF84", Offset = "0x9BFF84", VA = "0x9BFF84")]
	public bool GetIsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x9BFF8C", Offset = "0x9BFF8C", VA = "0x9BFF8C")]
	public void Register(ILocalizedText visibleLocalizedText)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x9BFFF0", Offset = "0x9BFFF0", VA = "0x9BFFF0")]
	public void Unregister(ILocalizedText visibleLocalizedText)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x9C0054", Offset = "0x9C0054", VA = "0x9C0054")]
	public Languages GetCurrentLanguage()
	{
		return default(Languages);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x9BDB04", Offset = "0x9BDB04", VA = "0x9BDB04")]
	public int SwitchLanguage()
	{
		return default(int);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9C005C", Offset = "0x9C005C", VA = "0x9C005C")]
	public int SwitchLanguage(Languages selectedLanguage)
	{
		return default(int);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x9C03AC", Offset = "0x9C03AC", VA = "0x9C03AC")]
	private void InitSupportedLanguages()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x9C0528", Offset = "0x9C0528", VA = "0x9C0528")]
	public string[] GetSupportedLanguages()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x9C0558", Offset = "0x9C0558", VA = "0x9C0558")]
	public int LoadLanguage(int selectedLanguage)
	{
		return default(int);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x9C0478", Offset = "0x9C0478", VA = "0x9C0478")]
	public int LoadLanguage(Languages selectedLanguage)
	{
		return default(int);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x9C055C", Offset = "0x9C055C", VA = "0x9C055C")]
	private void RefreshVisibleLocalizedText()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x9C09B4", Offset = "0x9C09B4", VA = "0x9C09B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6DD1CC", Offset = "0x6DD1CC")]
	private void GenerateCharList1()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9C1040", Offset = "0x9C1040", VA = "0x9C1040")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6DD204", Offset = "0x6DD204")]
	private void GenerateCharListCJK()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x9C09BC", Offset = "0x9C09BC", VA = "0x9C09BC")]
	private void GenerateCharList(bool forCJKFont = false)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x9C1048", Offset = "0x9C1048", VA = "0x9C1048")]
	public static string _T(string key, bool checkForMultikey = false)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x9C1158", Offset = "0x9C1158", VA = "0x9C1158")]
	public static void _T(TMP_Text textField, string key)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x9C12C8", Offset = "0x9C12C8", VA = "0x9C12C8")]
	public static void _F(TMP_Text textField)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9C15B8", Offset = "0x9C15B8", VA = "0x9C15B8")]
	public static void _Override(TMP_Text textField, string text)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9C16D8", Offset = "0x9C16D8", VA = "0x9C16D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD23C", Offset = "0x6DD23C")]
	public IEnumerator SaveSettingsCO()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x9C1750", Offset = "0x9C1750", VA = "0x9C1750")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x9BD334", Offset = "0x9BD334", VA = "0x9BD334")]
	public bool LoadSettings()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x9C17E0", Offset = "0x9C17E0", VA = "0x9C17E0")]
	public bool IsCurrentLangCJK()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9C1828", Offset = "0x9C1828", VA = "0x9C1828")]
	public static bool IsEnglish()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x9C1910", Offset = "0x9C1910", VA = "0x9C1910")]
	public void NextLanguage()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x9C193C", Offset = "0x9C193C", VA = "0x9C193C")]
	public string _FormatMoney(int amount, char symbol = '$')
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x9C1A68", Offset = "0x9C1A68", VA = "0x9C1A68")]
	public static string FormatMoney(int amount, char symbol = '$')
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x9C1BA4", Offset = "0x9C1BA4", VA = "0x9C1BA4")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x20000BB")]
public class LocalizedObjects : MonoBehaviour, ILocalizedText
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRegistered;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectsForLang;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9C1CE0", Offset = "0x9C1CE0", VA = "0x9C1CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x9C1EBC", Offset = "0x9C1EBC", VA = "0x9C1EBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x9C1CE4", Offset = "0x9C1CE4", VA = "0x9C1CE4")]
	public void RegisterForLocalization()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9C1FB0", Offset = "0x9C1FB0", VA = "0x9C1FB0", Slot = "4")]
	public void RefreshLabel()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x9C2120", Offset = "0x9C2120", VA = "0x9C2120")]
	public LocalizedObjects()
	{
	}
}
[Token(Token = "0x20000BC")]
public class LocalizedText : MonoBehaviour, ILocalizedText
{
	[Token(Token = "0x20000BD")]
	public enum FontStyles
	{
		[Token(Token = "0x4000314")]
		ChathuraStyle,
		[Token(Token = "0x4000315")]
		SarpanchStyle
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text textMesh;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool init;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isRegistered;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool cjkLineHeightFix;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float cjkLineHeight;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cjkCharacterSpacing;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float defaultLineHeight;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float defaultCharacterSpacing;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool stripNewlines;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FontStyles fontStyle;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9C2128", Offset = "0x9C2128", VA = "0x9C2128")]
	public void RegisterForLocalization()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x9C12A0", Offset = "0x9C12A0", VA = "0x9C12A0")]
	public void ChangeTextKey(string newKey)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x9C242C", Offset = "0x9C242C", VA = "0x9C242C")]
	public void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x9C127C", Offset = "0x9C127C", VA = "0x9C127C")]
	public void Restart()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x9C250C", Offset = "0x9C250C", VA = "0x9C250C")]
	public void SetKeyFromCurrentText()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x9C2630", Offset = "0x9C2630", VA = "0x9C2630")]
	public void SetMesh()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x9C2450", Offset = "0x9C2450", VA = "0x9C2450")]
	private void Init()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x9C2690", Offset = "0x9C2690", VA = "0x9C2690")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x9C2260", Offset = "0x9C2260", VA = "0x9C2260", Slot = "4")]
	public void RefreshLabel()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x9C13BC", Offset = "0x9C13BC", VA = "0x9C13BC")]
	public void RefreshFont()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x9C2784", Offset = "0x9C2784", VA = "0x9C2784")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x20000BE")]
public interface ILocalizedText
{
	[Token(Token = "0x60003E7")]
	void RefreshLabel();
}
[Token(Token = "0x20000BF")]
public class LocomotionBounds : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bounds bounds;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x9C2D70", Offset = "0x9C2D70", VA = "0x9C2D70")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x9C2E3C", Offset = "0x9C2E3C", VA = "0x9C2E3C")]
	public LocomotionBounds()
	{
	}
}
[Token(Token = "0x20000C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D510C", Offset = "0x6D510C")]
public abstract class AIBase : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SpaceUnit ship;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xCB63C8", Offset = "0xCB63C8", VA = "0xCB63C8", Slot = "4")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x60003EB")]
	public abstract void AIStart();

	[Token(Token = "0x60003EC")]
	public abstract void ThinkNow();

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xCB6424", Offset = "0xCB6424", VA = "0xCB6424", Slot = "7")]
	public virtual void WakeUp(bool wakeOthers = false)
	{
	}

	[Token(Token = "0x60003EE")]
	public abstract void TookSignificantDamage(SpaceUnit enemy);

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xCB6428", Offset = "0xCB6428", VA = "0xCB6428", Slot = "9")]
	public virtual GameObject FindNearestObjectWithTag(string tagName, Vector3 center, float maxDist = 600f)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xCB6508", Offset = "0xCB6508", VA = "0xCB6508")]
	protected AIBase()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D516C", Offset = "0x6D516C")]
public class CowardAI : ShipAI
{
	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xD895E4", Offset = "0xD895E4", VA = "0xD895E4", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xD895F4", Offset = "0xD895F4", VA = "0xD895F4", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xD895F8", Offset = "0xD895F8", VA = "0xD895F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xD89794", Offset = "0xD89794", VA = "0xD89794")]
	public CowardAI()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D51CC", Offset = "0x6D51CC")]
public class DroneAI : AIBase
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool targetsFriendlies;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float repositionTimer;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastLookedForTargets;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float orbitRadius;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SizePreference targetSizePreference;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool orbitOwner;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool explodeIfNoOwner;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool interceptEnemies;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool spin;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpaceUnit closestEnemy;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool wokenUp;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x921614", Offset = "0x921614", VA = "0x921614", Slot = "7")]
	public override void WakeUp(bool wakeOthers = false)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x92162C", Offset = "0x92162C", VA = "0x92162C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x921638", Offset = "0x921638", VA = "0x921638", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x921640", Offset = "0x921640", VA = "0x921640", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x921644", Offset = "0x921644", VA = "0x921644")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x921694", Offset = "0x921694", VA = "0x921694", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x9216C8", Offset = "0x9216C8", VA = "0x9216C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x921D00", Offset = "0x921D00", VA = "0x921D00")]
	public void TargetChanged()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x921D08", Offset = "0x921D08", VA = "0x921D08")]
	private void CheckPosition()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x921B8C", Offset = "0x921B8C", VA = "0x921B8C")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x921EDC", Offset = "0x921EDC", VA = "0x921EDC")]
	public DroneAI()
	{
	}
}
[Token(Token = "0x20000C3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D522C", Offset = "0x6D522C")]
public class FighterAI : AIBase
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpaceUnit unit;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int fighterIndex;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float minRange;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float thinkDelay;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _thinkTime;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _attackDelay;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpaceUnit defendingTarget;

	[Token(Token = "0x400032A")]
	private const float fighterGuardRadius = 300f;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 oldTargetDest;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool wokenUp;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xB4D848", Offset = "0xB4D848", VA = "0xB4D848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xB4D84C", Offset = "0xB4D84C", VA = "0xB4D84C", Slot = "7")]
	public override void WakeUp(bool wakeOthers = false)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xB4D858", Offset = "0xB4D858", VA = "0xB4D858", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xB4D85C", Offset = "0xB4D85C", VA = "0xB4D85C", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xB4D864", Offset = "0xB4D864", VA = "0xB4D864", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB4D954", Offset = "0xB4D954", VA = "0xB4D954")]
	public void FormUp()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB4DB1C", Offset = "0xB4DB1C", VA = "0xB4DB1C")]
	public void Dodge()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB4DDD4", Offset = "0xB4DDD4", VA = "0xB4DDD4")]
	public void SetDefendingTarget(SpaceUnit targetObject)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB4DDDC", Offset = "0xB4DDDC", VA = "0xB4DDDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB4E298", Offset = "0xB4E298", VA = "0xB4E298")]
	private Vector3 GetDefensivePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB4E45C", Offset = "0xB4E45C", VA = "0xB4E45C")]
	private void DefendTarget()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB4E670", Offset = "0xB4E670", VA = "0xB4E670")]
	private void ChangeLocation()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB4E04C", Offset = "0xB4E04C", VA = "0xB4E04C")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB4E1B4", Offset = "0xB4E1B4", VA = "0xB4E1B4")]
	private float GetWeaponReadyness()
	{
		return default(float);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB4E6D8", Offset = "0xB4E6D8", VA = "0xB4E6D8")]
	public void AttackTarget()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB4E72C", Offset = "0xB4E72C", VA = "0xB4E72C")]
	private void EnteredAreaDamage(Vector3 center, float radius, float dps)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB4E954", Offset = "0xB4E954", VA = "0xB4E954")]
	public FighterAI()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB4E964", Offset = "0xB4E964", VA = "0xB4E964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD2EC", Offset = "0x6DD2EC")]
	private Vector3 <GetDefensivePosition>b__19_0()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D528C", Offset = "0x6D528C")]
public class MissileAI : AIBase
{
	[Token(Token = "0x20000C5")]
	public enum MissileType
	{
		[Token(Token = "0x4000339")]
		Seeking,
		[Token(Token = "0x400033A")]
		AreaTargeting,
		[Token(Token = "0x400033B")]
		Rocket
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissileType missileType;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject missileExplosionPrefab;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lifeTime;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lifeTimeLeft;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float thinkTimeLeft;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float thinkInterval;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float targetLookRange;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool proximityExplode;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float explodeDist;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool exploded;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SizePreference targetSizePreference;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x9CDDC4", Offset = "0x9CDDC4", VA = "0x9CDDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x9CDDC8", Offset = "0x9CDDC8", VA = "0x9CDDC8", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x9CDDCC", Offset = "0x9CDDCC", VA = "0x9CDDCC", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x9CDEA8", Offset = "0x9CDEA8", VA = "0x9CDEA8", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x9CDEB0", Offset = "0x9CDEB0", VA = "0x9CDEB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x9CE458", Offset = "0x9CE458", VA = "0x9CE458")]
	private void MissileExplode()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x9CE61C", Offset = "0x9CE61C", VA = "0x9CE61C")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x9CE6CC", Offset = "0x9CE6CC", VA = "0x9CE6CC")]
	private void AttackTarget()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x9CE7E0", Offset = "0x9CE7E0", VA = "0x9CE7E0")]
	public void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x9CE9A0", Offset = "0x9CE9A0", VA = "0x9CE9A0")]
	public MissileAI()
	{
	}
}
[Token(Token = "0x20000C6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D52EC", Offset = "0x6D52EC")]
public class MothershipAI : AIBase
{
	[Serializable]
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D534C", Offset = "0x6D534C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SpaceUnit> <>9__14_0;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<SpaceUnit> <>9__14_1;

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x937064", Offset = "0x937064", VA = "0x937064")]
		public <>c()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x93706C", Offset = "0x93706C", VA = "0x93706C")]
		internal bool <DelayedStart>b__14_0(SpaceUnit x)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x937084", Offset = "0x937084", VA = "0x937084")]
		internal bool <DelayedStart>b__14_1(SpaceUnit s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] flightPath;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float flightPathRad;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float _thinkTimeLeft;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float thinkDelay;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _targetSwitchTime;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpaceUnit starbase;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpaceUnit saucer;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isMerging;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool saucerIsSeparated;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mergeExplosion;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xC1C840", Offset = "0xC1C840", VA = "0xC1C840")]
	public void GenerateflightPath(Vector3 starbasePos)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xC1CA48", Offset = "0xC1CA48", VA = "0xC1CA48", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xC1CAE0", Offset = "0xC1CAE0", VA = "0xC1CAE0", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xC1CAE8", Offset = "0xC1CAE8", VA = "0xC1CAE8", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xC1CAEC", Offset = "0xC1CAEC", VA = "0xC1CAEC")]
	public void DelayedStart()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xC1D1C0", Offset = "0xC1D1C0", VA = "0xC1D1C0")]
	protected void UseItems()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xC1D268", Offset = "0xC1D268", VA = "0xC1D268")]
	private void DoMergeExplosion()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xC1D5AC", Offset = "0xC1D5AC", VA = "0xC1D5AC")]
	private void DoViewFocus1()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xC1D694", Offset = "0xC1D694", VA = "0xC1D694")]
	private void DoViewFocus2()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xC1D770", Offset = "0xC1D770", VA = "0xC1D770")]
	private void SaucerActivate()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC1D8D0", Offset = "0xC1D8D0", VA = "0xC1D8D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC1E10C", Offset = "0xC1E10C", VA = "0xC1E10C")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC1E1C8", Offset = "0xC1E1C8", VA = "0xC1E1C8")]
	public MothershipAI()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D535C", Offset = "0x6D535C")]
public class PlayerShipAI : AIBase
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minRange;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxRange;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShipItem nextItemToUse;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float thinkDelay;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _thinkTimeLeft;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastTargetLocation;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1291250", Offset = "0x1291250", VA = "0x1291250")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x129125C", Offset = "0x129125C", VA = "0x129125C", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x12912CC", Offset = "0x12912CC", VA = "0x12912CC")]
	public void ThinkDelay(float amt)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x12912D4", Offset = "0x12912D4", VA = "0x12912D4", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x12912DC", Offset = "0x12912DC", VA = "0x12912DC", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x12912E0", Offset = "0x12912E0", VA = "0x12912E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x12914BC", Offset = "0x12914BC", VA = "0x12914BC")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1291580", Offset = "0x1291580", VA = "0x1291580")]
	private void ChangeLocation()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x12915FC", Offset = "0x12915FC", VA = "0x12915FC")]
	public void Flee()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x129192C", Offset = "0x129192C", VA = "0x129192C")]
	public PlayerShipAI()
	{
	}
}
[Token(Token = "0x20000C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D53BC", Offset = "0x6D53BC")]
public class ShipAI : AIBase
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debugAI;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minRange;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxRange;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float forcedAttackRange;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ShipItem nextItemToUse;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int itemUseTries;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float thinkDelay;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _thinkTimeLeft;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float lastTargetSwitch;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pivotDelay;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float _pivotTimeLeft;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float flankChance;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector3 lastTargetLocation;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool usedPositiveBuffs;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float preferredRange;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SizePreference targetSizePref;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool saucerFlankStyle;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool targetFriendlies;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	[HideInInspector]
	public bool wokenUp;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	[HideInInspector]
	public bool hasFleed;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xD4C6A0", Offset = "0xD4C6A0", VA = "0xD4C6A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xD4C744", Offset = "0xD4C744", VA = "0xD4C744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD4C830", Offset = "0xD4C830", VA = "0xD4C830")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD4C920", Offset = "0xD4C920", VA = "0xD4C920", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xD4CA94", Offset = "0xD4CA94", VA = "0xD4CA94", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD4CA9C", Offset = "0xD4CA9C", VA = "0xD4CA9C", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xD4CB8C", Offset = "0xD4CB8C", VA = "0xD4CB8C", Slot = "7")]
	public override void WakeUp(bool wakeOthers = false)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xD4CEC0", Offset = "0xD4CEC0", VA = "0xD4CEC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD4D7E4", Offset = "0xD4D7E4", VA = "0xD4D7E4")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD4D3F8", Offset = "0xD4D3F8", VA = "0xD4D3F8")]
	protected void UseItems()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xD4DF98", Offset = "0xD4DF98", VA = "0xD4DF98")]
	protected void AttackTarget()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xD4DB48", Offset = "0xD4DB48", VA = "0xD4DB48")]
	protected void ChangeLocation()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xD4DF9C", Offset = "0xD4DF9C", VA = "0xD4DF9C")]
	public void Tail()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xD4E17C", Offset = "0xD4E17C", VA = "0xD4E17C")]
	public void Flank()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xD4D5BC", Offset = "0xD4D5BC", VA = "0xD4D5BC")]
	public void Flee()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD4E518", Offset = "0xD4E518", VA = "0xD4E518")]
	private void OnTookSignificantDamage()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xD4E5D4", Offset = "0xD4E5D4", VA = "0xD4E5D4")]
	private void EnteredAreaDamage(Vector3 center, float radius, float dps)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD4E998", Offset = "0xD4E998", VA = "0xD4E998")]
	public ShipAI()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D541C", Offset = "0x6D541C")]
public class SwarmAI : AIBase
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpaceUnit unit;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float repositionTimer;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float checkTargetTimer;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SizePreference targetSizePreference;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool wokenUp;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xBB92C4", Offset = "0xBB92C4", VA = "0xBB92C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xBB92D0", Offset = "0xBB92D0", VA = "0xBB92D0", Slot = "6")]
	public override void ThinkNow()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xBB92D8", Offset = "0xBB92D8", VA = "0xBB92D8", Slot = "8")]
	public override void TookSignificantDamage(SpaceUnit enemy)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xBB92DC", Offset = "0xBB92DC", VA = "0xBB92DC", Slot = "7")]
	public override void WakeUp(bool wakeOthers = false)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xBB92E8", Offset = "0xBB92E8", VA = "0xBB92E8", Slot = "5")]
	public override void AIStart()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xBB9300", Offset = "0xBB9300", VA = "0xBB9300")]
	private Vector3 getCentroid()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xBB95A0", Offset = "0xBB95A0", VA = "0xBB95A0")]
	private Vector3 getRepulsion()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xBB986C", Offset = "0xBB986C", VA = "0xBB986C")]
	private Vector3 getAlignment()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xBB9B5C", Offset = "0xBB9B5C", VA = "0xBB9B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xBB9DB8", Offset = "0xBB9DB8", VA = "0xBB9DB8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xBB9DBC", Offset = "0xBB9DBC", VA = "0xBB9DBC")]
	public void TargetChanged()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xBB9DC4", Offset = "0xBB9DC4", VA = "0xBB9DC4")]
	private void CheckPosition()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xBB9D60", Offset = "0xBB9D60", VA = "0xBB9D60")]
	private void LookForTargets()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xBB9E00", Offset = "0xBB9E00", VA = "0xBB9E00")]
	public SwarmAI()
	{
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D547C", Offset = "0x6D547C")]
public class AchievementInfo : ScriptableObject
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyName;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCounted;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string title;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xCB9774", Offset = "0xCB9774", VA = "0xCB9774")]
	public AchievementInfo()
	{
	}
}
[Token(Token = "0x20000CC")]
public class AchievementManager : MonoBehaviour
{
	[Token(Token = "0x20000CD")]
	private class Unified_LeaderboardEntry
	{
		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Rank;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long Score;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DisplayName;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsCurrentUser;

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x9FA4A4", Offset = "0x9FA4A4", VA = "0x9FA4A4")]
		public Unified_LeaderboardEntry()
		{
		}
	}

	[Token(Token = "0x20000CE")]
	public enum Leaderboard_ShowType
	{
		[Token(Token = "0x4000376")]
		Top,
		[Token(Token = "0x4000377")]
		Mine
	}

	[Serializable]
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D54E8", Offset = "0x6D54E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Message<string>.Handler <>9__5_0;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x9FA28C", Offset = "0x9FA28C", VA = "0x9FA28C")]
		public <>c()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x9FA294", Offset = "0x9FA294", VA = "0x9FA294")]
		internal void <InitPicoPlatform>b__5_0(Message<string> message)
		{
		}
	}

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementInfo[] achievementList;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementManager instance;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string currentLeaderboardName;

	[Token(Token = "0x400036E")]
	private const int TOP_N_COUNT = 10;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text scoreText;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SortedDictionary<int, Unified_LeaderboardEntry> currentLeaderboard;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xCB97E0", Offset = "0xCB97E0", VA = "0xCB97E0")]
	public string[] GetAchievementsArray()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xCB98EC", Offset = "0xCB98EC", VA = "0xCB98EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xCB9940", Offset = "0xCB9940", VA = "0xCB9940")]
	public void Start()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xCB9944", Offset = "0xCB9944", VA = "0xCB9944")]
	public void InitPicoPlatform()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xCB9B1C", Offset = "0xCB9B1C", VA = "0xCB9B1C")]
	private static void Uninitialize()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xCB9B78", Offset = "0xCB9B78", VA = "0xCB9B78")]
	private static void OnGameInitialize(Message<GameInitializeResult> msg)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xCB9DB0", Offset = "0xCB9DB0", VA = "0xCB9DB0")]
	private static void OnAchievementUnlockComplete(Message<AchievementUpdate> msg)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xCB9F0C", Offset = "0xCB9F0C", VA = "0xCB9F0C")]
	private static void PicoUnlockAchievement(string apiName)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xCBA06C", Offset = "0xCBA06C", VA = "0xCBA06C")]
	public AchievementInfo GetAchievement(string apiKey)
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xCBA130", Offset = "0xCBA130", VA = "0xCBA130")]
	public static void UnlockAchievement(string apiKey, int amount = 1)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xCBA384", Offset = "0xCBA384", VA = "0xCBA384")]
	public static void UpdateScore(string leaderboardName, int score = 0)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xCBA6F8", Offset = "0xCBA6F8", VA = "0xCBA6F8")]
	public void DisplayLeaderboard(TMP_Text _scoreText, string leaderboardName, Leaderboard_ShowType showType)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xCBA550", Offset = "0xCBA550", VA = "0xCBA550")]
	private static void PicoUpdateScore(string leaderboardName, int score)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xCBA930", Offset = "0xCBA930", VA = "0xCBA930")]
	private static void Pico_OnLeaderboardWriteEntry(Message<bool> message)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xCBA9F0", Offset = "0xCBA9F0", VA = "0xCBA9F0")]
	private void OnLeaderboardGetEntries(Message<LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xCBAD7C", Offset = "0xCBAD7C", VA = "0xCBAD7C")]
	private void FormatScoresList()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xCBB200", Offset = "0xCBB200", VA = "0xCBB200")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x20000D0")]
public class AreaDamage : MonoBehaviour
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damagePerSecond;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceMultiplier;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float directionalForce;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DamageTypes damageType;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DamageID damageID;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lifeTime;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lifeTimeLeft;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool instant;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float thinkDelay;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float thinkDelayLeft;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool clearsProjectiles;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool clearsPositiveBuffs;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool nonPositional;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool addsDust;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpaceUnit ignore;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int ignoreTeam;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool stickToIgnore;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float areaDamageFalloff;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool notifyAvoid;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isTouched;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DeadTime _deadTime;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool touchDecayMode;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool extraDamageToEnemies;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public SizePreference touchSizePreference;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool spreadInstantEffect;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ShipItem firedFromItem;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xCC8154", Offset = "0xCC8154", VA = "0xCC8154")]
	private void Restart()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xCC8288", Offset = "0xCC8288", VA = "0xCC8288")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xCC82D8", Offset = "0xCC82D8", VA = "0xCC82D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xCC85AC", Offset = "0xCC85AC", VA = "0xCC85AC")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xCC8EDC", Offset = "0xCC8EDC", VA = "0xCC8EDC")]
	public AreaDamage()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AreaHeal : MonoBehaviour
{
	[Token(Token = "0x20000D2")]
	public enum HealingType
	{
		[Token(Token = "0x40003AA")]
		Hull,
		[Token(Token = "0x40003AB")]
		Shields,
		[Token(Token = "0x40003AC")]
		ShieldsAndEnergy
	}

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damagePerSecond;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceMultiplier;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public HealingType healingType;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DamageID damageID;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lifeTime;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lifeTimeLeft;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool instant;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float thinkDelay;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float thinkDelayLeft;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool clearsProjectiles;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpaceUnit ignore;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int affectsTeam;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float areaDamageFalloff;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public ShipItem firedFromItem;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isTouched;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DeadTime _deadTime;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool touchDecayMode;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xCC94F4", Offset = "0xCC94F4", VA = "0xCC94F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xCC94F8", Offset = "0xCC94F8", VA = "0xCC94F8")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xCC9604", Offset = "0xCC9604", VA = "0xCC9604")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xCC9654", Offset = "0xCC9654", VA = "0xCC9654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xCC97D4", Offset = "0xCC97D4", VA = "0xCC97D4")]
	private void ApplyHeals()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xCC9CCC", Offset = "0xCC9CCC", VA = "0xCC9CCC")]
	public AreaHeal()
	{
	}
}
[Token(Token = "0x20000D3")]
public class AsteroidExplode : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D54F8", Offset = "0x6D54F8")]
	private sealed class <>c
	{
		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SpaceUnit, bool> <>9__7_0;

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x9FB164", Offset = "0x9FB164", VA = "0x9FB164")]
		public <>c()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x9FB16C", Offset = "0x9FB16C", VA = "0x9FB16C")]
		internal bool <OnExploded>b__7_0(SpaceUnit unit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject subPiece;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float wavefrontSize;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpaceUnit myUnit;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xCCAF28", Offset = "0xCCAF28", VA = "0xCCAF28")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xCCAFF4", Offset = "0xCCAFF4", VA = "0xCCAFF4")]
	public void onDisable()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xCCB090", Offset = "0xCCB090", VA = "0xCCB090")]
	public void Restart()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xCCB094", Offset = "0xCCB094", VA = "0xCCB094")]
	public void OnExploded()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xCCBA60", Offset = "0xCCBA60", VA = "0xCCBA60")]
	public AsteroidExplode()
	{
	}
}
[Token(Token = "0x20000D5")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xB5A040", Offset = "0xB5A040", VA = "0xB5A040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xB5A0B0", Offset = "0xB5A0B0", VA = "0xB5A0B0")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x20000D6")]
public class AutoRotateUnscaled : MonoBehaviour
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB5A0E4", Offset = "0xB5A0E4", VA = "0xB5A0E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB5A150", Offset = "0xB5A150", VA = "0xB5A150")]
	public AutoRotateUnscaled()
	{
	}
}
[Token(Token = "0x20000D7")]
public class BarrierController : MonoBehaviour
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 barrierSize;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 barrierInitial;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float damageAmt;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpaceUnit owner;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float hitpoints;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float collisionDebounceTime;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GoTweenChain showAnimation;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB5A184", Offset = "0xB5A184", VA = "0xB5A184")]
	public void BeginAnimation()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xB5A3DC", Offset = "0xB5A3DC", VA = "0xB5A3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xB5A3E0", Offset = "0xB5A3E0", VA = "0xB5A3E0")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xB5A414", Offset = "0xB5A414", VA = "0xB5A414")]
	public void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xB5AA88", Offset = "0xB5AA88", VA = "0xB5AA88")]
	public BarrierController()
	{
	}
}
[Token(Token = "0x20000D8")]
public class BattleCamera : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	private enum BattleCameraTypes
	{
		[Token(Token = "0x40003C6")]
		FollowCam,
		[Token(Token = "0x40003C7")]
		TargetCam,
		[Token(Token = "0x40003C8")]
		StationaryTarget,
		[Token(Token = "0x40003C9")]
		Overview,
		[Token(Token = "0x40003CA")]
		ShipCamTarget,
		[Token(Token = "0x40003CB")]
		DeathCam,
		[Token(Token = "0x40003CC")]
		PanToTarget,
		[Token(Token = "0x40003CD")]
		SpecialPullBack
	}

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float switchTimeLeft;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpaceUnit targetObject;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject specificTarget;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera cam;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float dramaticSwitchTime;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BattleCameraTypes currentCam;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xB5B798", Offset = "0xB5B798", VA = "0xB5B798")]
	private void Start()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xB5B850", Offset = "0xB5B850", VA = "0xB5B850")]
	public void DeathCam(SpaceUnit obj)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xB5BC30", Offset = "0xB5BC30", VA = "0xB5BC30")]
	public void FocusShip(SpaceUnit obj, GameObject _targetObj)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xB5C030", Offset = "0xB5C030", VA = "0xB5C030")]
	private void SwitchCamera(BattleCameraTypes n)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xB5CE48", Offset = "0xB5CE48", VA = "0xB5CE48")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xB5E1B4", Offset = "0xB5E1B4", VA = "0xB5E1B4")]
	public BattleCamera()
	{
	}
}
[Token(Token = "0x20000DA")]
public class BlackHolePull : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float mass;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float thinkTime;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeStep;

	[Token(Token = "0x40003D2")]
	private const float gravitationalConstant = 2.4f;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeInAmount;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rangeRingIndicator;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AreaDamage areaDamageObj;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xB68F58", Offset = "0xB68F58", VA = "0xB68F58")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xB69074", Offset = "0xB69074", VA = "0xB69074")]
	public void NotifyAvoid()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB691B0", Offset = "0xB691B0", VA = "0xB691B0")]
	public Vector3 GAcceleration(Rigidbody r)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB692B4", Offset = "0xB692B4", VA = "0xB692B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xB696DC", Offset = "0xB696DC", VA = "0xB696DC")]
	public BlackHolePull()
	{
	}
}
[Token(Token = "0x20000DB")]
public class BubbleController : MonoBehaviour
{
	[Token(Token = "0x6000494")]
	[Address(RVA = "0xB6BEEC", Offset = "0xB6BEEC", VA = "0xB6BEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xB6BEF0", Offset = "0xB6BEF0", VA = "0xB6BEF0")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xB6BF20", Offset = "0xB6BF20", VA = "0xB6BF20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xB6BFD0", Offset = "0xB6BFD0", VA = "0xB6BFD0")]
	public BubbleController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class CameraEffectController : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public struct HUDMessage
	{
		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string title;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string body;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int icon;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color notificationColor;
	}

	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5508", Offset = "0x6D5508")]
	private sealed class <EnterVSpaceSequence>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEffectController <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x9FC30C", Offset = "0x9FC30C", VA = "0x9FC30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x9FC354", Offset = "0x9FC354", VA = "0x9FC354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x9FC098", Offset = "0x9FC098", VA = "0x9FC098")]
		[DebuggerHidden]
		public <EnterVSpaceSequence>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x9FC0C4", Offset = "0x9FC0C4", VA = "0x9FC0C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x9FC0C8", Offset = "0x9FC0C8", VA = "0x9FC0C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x9FC314", Offset = "0x9FC314", VA = "0x9FC314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5518", Offset = "0x6D5518")]
	private sealed class <ExitVSpaceSequence>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEffectController <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0x9FC5F8", Offset = "0x9FC5F8", VA = "0x9FC5F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x9FC640", Offset = "0x9FC640", VA = "0x9FC640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x9FC35C", Offset = "0x9FC35C", VA = "0x9FC35C")]
		[DebuggerHidden]
		public <ExitVSpaceSequence>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x9FC388", Offset = "0x9FC388", VA = "0x9FC388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x9FC38C", Offset = "0x9FC38C", VA = "0x9FC38C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x9FC600", Offset = "0x9FC600", VA = "0x9FC600", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5528", Offset = "0x6D5528")]
	private sealed class <ShowNextHUD>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEffectController <>4__this;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HUDMessage <m>5__2;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x9FD068", Offset = "0x9FD068", VA = "0x9FD068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C5")]
			[Address(RVA = "0x9FD0B0", Offset = "0x9FD0B0", VA = "0x9FD0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x9FC938", Offset = "0x9FC938", VA = "0x9FC938")]
		[DebuggerHidden]
		public <ShowNextHUD>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x9FC964", Offset = "0x9FC964", VA = "0x9FC964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x9FC968", Offset = "0x9FC968", VA = "0x9FC968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x9FD070", Offset = "0x9FD070", VA = "0x9FD070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5538", Offset = "0x6D5538")]
	private sealed class <ShowHUDTextCO>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEffectController <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C9")]
			[Address(RVA = "0x9FC8E8", Offset = "0x9FC8E8", VA = "0x9FC8E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0x9FC930", Offset = "0x9FC930", VA = "0x9FC930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x9FC648", Offset = "0x9FC648", VA = "0x9FC648")]
		[DebuggerHidden]
		public <ShowHUDTextCO>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x9FC674", Offset = "0x9FC674", VA = "0x9FC674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x9FC678", Offset = "0x9FC678", VA = "0x9FC678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x9FC8F0", Offset = "0x9FC8F0", VA = "0x9FC8F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float glitchLevel;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vspaceLevel;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float vspaceTarget;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float transitionOutRate;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float transitionInRate;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float transitionOutTime;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float transitionInTime;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float glitchParticleOffTime;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float transitionAlpha;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GlitchEffect[] glitchEffects;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CameraEffectController instance;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SpaceBattleManager manager;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PostProcessVolume bridgeVolume;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PostProcessVolume spaceVolume;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PostProcessVolume pausedVolume;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PostProcessVolume transitioningVolume;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject glitchParticles;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text HUDText;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HudTextFollower HUDTextMain;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _currentMessageBody;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem vspaceParticles;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HudTextFollower HUDMessageTF;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material HUDBackgroundMat;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text HUDMessageBody;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject HUDStartPos;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<HUDMessage> HUDQueue;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool showingHUDs;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool isQuest;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	[HideInInspector]
	public bool fadeOutRunning;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	[HideInInspector]
	public bool unfading;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public bool effectRunning;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color backgroundColor;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MyOVRFade ovrFade;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Texture whiteTexture;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GoTweenFlow appearAnim;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xB6D93C", Offset = "0xB6D93C", VA = "0xB6D93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xB6DCE4", Offset = "0xB6DCE4", VA = "0xB6DCE4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xB6DD80", Offset = "0xB6DD80", VA = "0xB6DD80")]
	public void FadeCompletedEvent()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xB6DE5C", Offset = "0xB6DE5C", VA = "0xB6DE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xB6DFD0", Offset = "0xB6DFD0", VA = "0xB6DFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xB6E2E8", Offset = "0xB6E2E8", VA = "0xB6E2E8")]
	public void DoGlitchParticles(float t = 3f)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xB6E320", Offset = "0xB6E320", VA = "0xB6E320")]
	public void AddGlitch(float amount)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xB6E338", Offset = "0xB6E338", VA = "0xB6E338")]
	public void AddExplosion()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xB6E33C", Offset = "0xB6E33C", VA = "0xB6E33C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xB6E3A0", Offset = "0xB6E3A0", VA = "0xB6E3A0")]
	public void Unfade()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xB6E418", Offset = "0xB6E418", VA = "0xB6E418")]
	public void PausedEffect()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xB6E41C", Offset = "0xB6E41C", VA = "0xB6E41C")]
	public void UnpausedEffect()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xB6E420", Offset = "0xB6E420", VA = "0xB6E420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD2FC", Offset = "0x6DD2FC")]
	public IEnumerator EnterVSpaceSequence()
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xB6E498", Offset = "0xB6E498", VA = "0xB6E498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD35C", Offset = "0x6DD35C")]
	public IEnumerator ExitVSpaceSequence()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xB6E510", Offset = "0xB6E510", VA = "0xB6E510")]
	public bool CheckHUDMessageExists(string body)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xB6E694", Offset = "0xB6E694", VA = "0xB6E694")]
	private void EnqueueHUD(HUDMessage h)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xB6E7BC", Offset = "0xB6E7BC", VA = "0xB6E7BC")]
	public void ClearHUDs()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xB6E744", Offset = "0xB6E744", VA = "0xB6E744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD3BC", Offset = "0x6DD3BC")]
	private IEnumerator ShowNextHUD()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xB6E85C", Offset = "0xB6E85C", VA = "0xB6E85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD41C", Offset = "0x6DD41C")]
	public IEnumerator ShowHUDTextCO()
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB6E8D4", Offset = "0xB6E8D4", VA = "0xB6E8D4")]
	public void ShowHUDText(string messageKey)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xB6E964", Offset = "0xB6E964", VA = "0xB6E964")]
	public void ShowNotification(string szTitle, string szBody, int colorStyle = 0)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xB6EA3C", Offset = "0xB6EA3C", VA = "0xB6EA3C")]
	public void ShowShipUnlockedHUD(string str)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB6EB00", Offset = "0xB6EB00", VA = "0xB6EB00")]
	public void ShowShipGainedHUD(string str, bool isFighter = false)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB6EBF4", Offset = "0xB6EBF4", VA = "0xB6EBF4")]
	public void ShowFleetIncreasedHUD()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB6ED4C", Offset = "0xB6ED4C", VA = "0xB6ED4C")]
	public void ShowItemReceivedHUD(string str)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB6EE8C", Offset = "0xB6EE8C", VA = "0xB6EE8C")]
	public void ShowWarpHUD()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB6F018", Offset = "0xB6F018", VA = "0xB6F018")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB6F0B4", Offset = "0xB6F0B4", VA = "0xB6F0B4")]
	public CameraEffectController()
	{
	}
}
[Token(Token = "0x20000E2")]
public class CameraFacingBillboard : MonoBehaviour
{
	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xD7EB64", Offset = "0xD7EB64", VA = "0xD7EB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xD7EBF4", Offset = "0xD7EBF4", VA = "0xD7EBF4")]
	public CameraFacingBillboard()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ChannelInfo : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isAffectedByTime;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isPriority;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volume;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource mainSource;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource blendedSource;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xD7F850", Offset = "0xD7F850", VA = "0xD7F850")]
	public ChannelInfo()
	{
	}
}
[Token(Token = "0x20000E4")]
[ExecuteAlways]
public class CloudGen : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient colorFade;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve scaleDistribution;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve posDistribution;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve animCurve;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float spillOut;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DeadTime _deadTime;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minScale;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxScale;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float cloudRadius;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CloudSystemTransformsSO savedTransforms;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rangeRingIndicator;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AreaDamage areaDamageObj;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startTime;

	[NonSerialized]
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int chosenVariant;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float fadeInTime;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Matrix4x4[] matrices;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4[] colors;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material material;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Mesh mesh;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MaterialPropertyBlock matBlock;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int numCloudsToGenerate;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _cloudLevel;

	[Token(Token = "0x17000054")]
	public float cloudLevel
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xD83FF8", Offset = "0xD83FF8", VA = "0xD83FF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xD84000", Offset = "0xD84000", VA = "0xD84000")]
		set
		{
		}
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xD842A4", Offset = "0xD842A4", VA = "0xD842A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xD842A8", Offset = "0xD842A8", VA = "0xD842A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xD84670", Offset = "0xD84670", VA = "0xD84670")]
	private void Restart()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xD84008", Offset = "0xD84008", VA = "0xD84008")]
	public void UpdateCloudLevel(float level)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xD84364", Offset = "0xD84364", VA = "0xD84364")]
	public void SetVariant(int num)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xD84784", Offset = "0xD84784", VA = "0xD84784")]
	public void DeleteVariant(int num)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xD848C0", Offset = "0xD848C0", VA = "0xD848C0")]
	public void RepelClouds(CloudSystemTransforms cst, int iterations = 5, float rate = 0.2f, float gravity = 0f)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xD84CA4", Offset = "0xD84CA4", VA = "0xD84CA4")]
	public void Generate()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xD85080", Offset = "0xD85080", VA = "0xD85080")]
	public void Repel()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xD8510C", Offset = "0xD8510C", VA = "0xD8510C")]
	public void Attract()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xD85198", Offset = "0xD85198", VA = "0xD85198")]
	public void Gravity()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xD85224", Offset = "0xD85224", VA = "0xD85224")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xD85488", Offset = "0xD85488", VA = "0xD85488")]
	public CloudGen()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public struct CloudSystemTransforms
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int numberOfChildren;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3[] positions;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Quaternion[] rotations;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] scales;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4[] colors;
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5558", Offset = "0x6D5558")]
public class CloudSystemTransformsSO : ScriptableObject
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CloudSystemTransforms[] variants;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xD85560", Offset = "0xD85560", VA = "0xD85560")]
	public CloudSystemTransformsSO()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Collectible : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	public enum CollectibleType
	{
		[Token(Token = "0x4000441")]
		Energy,
		[Token(Token = "0x4000442")]
		Res,
		[Token(Token = "0x4000443")]
		Item,
		[Token(Token = "0x4000444")]
		Shield,
		[Token(Token = "0x4000445")]
		Bomb,
		[Token(Token = "0x4000446")]
		Crystal,
		[Token(Token = "0x4000447")]
		Cargo
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D55C4", Offset = "0x6D55C4")]
	private sealed class <UpdateTowLabel>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collectible <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x9FD89C", Offset = "0x9FD89C", VA = "0x9FD89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x9FD8E4", Offset = "0x9FD8E4", VA = "0x9FD8E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x9FD770", Offset = "0x9FD770", VA = "0x9FD770")]
		[DebuggerHidden]
		public <UpdateTowLabel>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x9FD79C", Offset = "0x9FD79C", VA = "0x9FD79C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x9FD7A0", Offset = "0x9FD7A0", VA = "0x9FD7A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x9FD8A4", Offset = "0x9FD8A4", VA = "0x9FD8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpaceUnit target;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float amount;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject poofPrefab;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float vel;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float accel;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float thinkDelayLeft;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 moveDir;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float maxDistance;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpaceUnit ignore;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject item;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isTowable;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string towTargetName;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isTowing;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public CollectibleType collectibleType;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LineRenderer tractorBeamLine;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isGoal;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DeadTime deadTime;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro timeLeftLabel;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource loopingTowNoise;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool despawnOnCollect;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xD8658C", Offset = "0xD8658C", VA = "0xD8658C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xD86D94", Offset = "0xD86D94", VA = "0xD86D94")]
	private void Restart()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD870A8", Offset = "0xD870A8", VA = "0xD870A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD87030", Offset = "0xD87030", VA = "0xD87030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD5BC", Offset = "0x6DD5BC")]
	private IEnumerator UpdateTowLabel()
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD87138", Offset = "0xD87138", VA = "0xD87138", Slot = "4")]
	public virtual void CollidedWith(SpaceUnit other)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD87658", Offset = "0xD87658", VA = "0xD87658")]
	public Collectible()
	{
	}
}
[Token(Token = "0x20000EA")]
public class CopyRotation : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD89224", Offset = "0xD89224", VA = "0xD89224")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD892D4", Offset = "0xD892D4", VA = "0xD892D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6DD66C", Offset = "0x6DD66C")]
	private void LookAtTarget()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD89394", Offset = "0xD89394", VA = "0xD89394")]
	public CopyRotation()
	{
	}
}
[Token(Token = "0x20000EB")]
[ExecuteInEditMode]
public class CopyToScreenRT : MonoBehaviour
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RenderTexture activeRT;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera camera;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xD8939C", Offset = "0xD8939C", VA = "0xD8939C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xD893F8", Offset = "0xD893F8", VA = "0xD893F8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xD89454", Offset = "0xD89454", VA = "0xD89454")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xD895DC", Offset = "0xD895DC", VA = "0xD895DC")]
	public CopyToScreenRT()
	{
	}
}
[Token(Token = "0x20000EC")]
public class CreateCollectibleOnDamaged : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	public enum CollectibleType
	{
		[Token(Token = "0x4000453")]
		Energy,
		[Token(Token = "0x4000454")]
		Res,
		[Token(Token = "0x4000455")]
		Shield
	}

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollectibleType collectibleType;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int amountToCreate;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int amountCreated;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpaceUnit myUnit;

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xD8979C", Offset = "0xD8979C", VA = "0xD8979C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xD89868", Offset = "0xD89868", VA = "0xD89868")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xD89904", Offset = "0xD89904", VA = "0xD89904")]
	public void Restart()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xD8990C", Offset = "0xD8990C", VA = "0xD8990C")]
	public void OnDamaged()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xD89B10", Offset = "0xD89B10", VA = "0xD89B10")]
	public CreateCollectibleOnDamaged()
	{
	}
}
[Token(Token = "0x20000EE")]
public class Curiosity : MonoBehaviour
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string textKey;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numMessages;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D7BD4", Offset = "0x6D7BD4")]
	public string[] scannedMessages;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int resourceReward;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scrapReward;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string scenarioKeyName;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasScanned;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _initialized;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxScans;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Scannable _scannable;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] rewardItems;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool destroyOnDisable;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool limitRotation;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xD89E18", Offset = "0xD89E18", VA = "0xD89E18")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xD89E1C", Offset = "0xD89E1C", VA = "0xD89E1C")]
	public void DelayedInit()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xD8A108", Offset = "0xD8A108", VA = "0xD8A108")]
	public void Restart()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xD8A1B8", Offset = "0xD8A1B8", VA = "0xD8A1B8")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xD8A9C0", Offset = "0xD8A9C0", VA = "0xD8A9C0")]
	public Curiosity()
	{
	}
}
[Token(Token = "0x20000EF")]
[DisallowMultipleComponent]
public class DeadTime : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deadTime;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float deadTimeLeft;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool despawnOnDeath;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool hold;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool fadeOutLights;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool fadeOutParticles;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool restartParticles;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool anyFading;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxParticleLife;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject createOnDeath;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fadeOutTime;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float fadeOutCurPct;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] initialLightLevels;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] initialEmissionRates;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Light[] lights;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool restartAnimations;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animation[] animations;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _particlesOff;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool initialized;

	[Token(Token = "0x17000057")]
	public bool particlesOff
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xD8BF20", Offset = "0xD8BF20", VA = "0xD8BF20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xD8BD70", Offset = "0xD8BD70", VA = "0xD8BD70")]
		set
		{
		}
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD8BF28", Offset = "0xD8BF28", VA = "0xD8BF28")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xD8BF34", Offset = "0xD8BF34", VA = "0xD8BF34")]
	public void SetDeadTime(float t)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xD8BF3C", Offset = "0xD8BF3C", VA = "0xD8BF3C")]
	public void SetDeadTimeLeft(float t)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD8BF44", Offset = "0xD8BF44", VA = "0xD8BF44")]
	public void Reinit()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD8BF4C", Offset = "0xD8BF4C", VA = "0xD8BF4C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD8C510", Offset = "0xD8C510", VA = "0xD8C510")]
	public void DieNow()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD8C64C", Offset = "0xD8C64C", VA = "0xD8C64C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD8C970", Offset = "0xD8C970", VA = "0xD8C970")]
	public DeadTime()
	{
	}
}
[Token(Token = "0x20000F0")]
public class DeathThroes : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float nextBangDelay;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float nextWarnDelay;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpaceUnit ship;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool makesDebrisField;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rewardItem;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int resOnDeath;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xD8C998", Offset = "0xD8C998", VA = "0xD8C998")]
	public void Begin()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xD8CAA4", Offset = "0xD8CAA4", VA = "0xD8CAA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xD8CAE4", Offset = "0xD8CAE4", VA = "0xD8CAE4")]
	public bool IsDying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD8CAF4", Offset = "0xD8CAF4", VA = "0xD8CAF4")]
	public void AdvanceCountdown()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xD8CB10", Offset = "0xD8CB10", VA = "0xD8CB10")]
	public void Explode()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xD8D54C", Offset = "0xD8D54C", VA = "0xD8D54C")]
	private void Update()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xD8D944", Offset = "0xD8D944", VA = "0xD8D944")]
	public DeathThroes()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DelayedExplosion : MonoBehaviour
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject effect;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deadTime;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float deadTimeLeft;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x91B470", Offset = "0x91B470", VA = "0x91B470")]
	private void Restart()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x91B49C", Offset = "0x91B49C", VA = "0x91B49C")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x91B5BC", Offset = "0x91B5BC", VA = "0x91B5BC")]
	public DelayedExplosion()
	{
	}
}
[Token(Token = "0x20000F2")]
public class DialogOptionButton : GrabbableObject
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int choiceNum;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro optionLabel;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject targetObj;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody rb;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 labelStartPos;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 labelDownPos;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ChoiceNode.OptionData currentOptionData;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x91C5BC", Offset = "0x91C5BC", VA = "0x91C5BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x91C618", Offset = "0x91C618", VA = "0x91C618", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x91C620", Offset = "0x91C620", VA = "0x91C620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x91C71C", Offset = "0x91C71C", VA = "0x91C71C", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x91C724", Offset = "0x91C724", VA = "0x91C724", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x91C72C", Offset = "0x91C72C", VA = "0x91C72C", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x91C9B4", Offset = "0x91C9B4", VA = "0x91C9B4", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x91C9BC", Offset = "0x91C9BC", VA = "0x91C9BC", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x91C9C4", Offset = "0x91C9C4", VA = "0x91C9C4")]
	public void SetChoice(ChoiceNode.OptionData option)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x91CD78", Offset = "0x91CD78", VA = "0x91CD78")]
	public void Appear()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x91CD7C", Offset = "0x91CD7C", VA = "0x91CD7C")]
	public DialogOptionButton()
	{
	}
}
[Token(Token = "0x20000F3")]
public class DisableForQuest : MonoBehaviour
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowOnQuest2;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x91D444", Offset = "0x91D444", VA = "0x91D444")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x91D570", Offset = "0x91D570", VA = "0x91D570")]
	public DisableForQuest()
	{
	}
}
[Token(Token = "0x20000F4")]
public class DismissViewButton : StandardButtonObject
{
	[Token(Token = "0x600051D")]
	[Address(RVA = "0x91D954", Offset = "0x91D954", VA = "0x91D954", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x91D9CC", Offset = "0x91D9CC", VA = "0x91D9CC")]
	public DismissViewButton()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ESSun : MonoBehaviour
{
	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9256F8", Offset = "0x9256F8", VA = "0x9256F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9256FC", Offset = "0x9256FC", VA = "0x9256FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x925700", Offset = "0x925700", VA = "0x925700")]
	public ESSun()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ES_OVRHandTrackingConnector : MonoBehaviour
{
	[Token(Token = "0x20000F7")]
	public enum HandGestures
	{
		[Token(Token = "0x40004AE")]
		Gesture_Grip,
		[Token(Token = "0x40004AF")]
		Gesture_Open
	}

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controller;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticInterface haptics;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ESInputInterface targetController;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxHandAngle;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private ESHand whichHand;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform head;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVRHand hand;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform handT;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMeshRenderer controllerMesh;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool handTrackingEnabled;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControllerOffset handOffset;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool aligning;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool hand_isTriggering;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool hand_isGripping;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool hand_middlePinching;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hand_gripGesturing;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool hand_openGesturing;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float hand_lastHandConfidentTime;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float hand_lastIndexConfidentTime;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float hand_lastMiddleConfidentTime;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float hand_lastOpenGestureTime;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject gameHand;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject gameHandMenu;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformActionDescriptionHandTracking platformDescHandTracking;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float noTrackTime;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float pinchReleaseTime;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gripReleaseTime;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform trackingSpace;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ES_OpenXRConnector openXRConnector;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7C1C", Offset = "0x6D7C1C")]
	public bool waitForHighConfidenceData;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7C54", Offset = "0x6D7C54")]
	public GestureSO[] gestures;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<OVRBone> fingerBones;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9269F8", Offset = "0x9269F8", VA = "0x9269F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x926B7C", Offset = "0x926B7C", VA = "0x926B7C")]
	private void UpdateHandTrackingState()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x926F58", Offset = "0x926F58", VA = "0x926F58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x926F88", Offset = "0x926F88", VA = "0x926F88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x92782C", Offset = "0x92782C", VA = "0x92782C")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x927AA0", Offset = "0x927AA0", VA = "0x927AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9278E0", Offset = "0x9278E0", VA = "0x9278E0")]
	private bool CheckGesture(int num, float recognitionThreshold = 0.04f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x927B48", Offset = "0x927B48", VA = "0x927B48")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x927F40", Offset = "0x927F40", VA = "0x927F40")]
	public ES_OVRHandTrackingConnector()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ES_OpenXRHaptics : HapticInterface
{
	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEngine.XR.InputDevice device;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x929384", Offset = "0x929384", VA = "0x929384", Slot = "4")]
	public override void HapticPulse(float duration, float freq, float amp)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x92939C", Offset = "0x92939C", VA = "0x92939C", Slot = "5")]
	public override void StopHaptics()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x929250", Offset = "0x929250", VA = "0x929250")]
	public ES_OpenXRHaptics()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ES_PicoHaptics : HapticInterface
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PXR_Input.Controller myController;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9293A8", Offset = "0x9293A8", VA = "0x9293A8", Slot = "4")]
	public override void HapticPulse(float duration, float freq, float amp)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9293E0", Offset = "0x9293E0", VA = "0x9293E0", Slot = "5")]
	public override void StopHaptics()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x928BE8", Offset = "0x928BE8", VA = "0x928BE8")]
	public ES_PicoHaptics()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ES_OpenXRConnector : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D55F4", Offset = "0x6D55F4")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES_OpenXRConnector <>4__this;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string controllerName;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<string> <>9__1;

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x9FEB8C", Offset = "0x9FEB8C", VA = "0x9FEB8C")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x9FEB94", Offset = "0x9FEB94", VA = "0x9FEB94")]
		internal bool <ConnectionChanged>b__0(ControllerOffset x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x9FECD0", Offset = "0x9FECD0", VA = "0x9FECD0")]
		internal bool <ConnectionChanged>b__1(string y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5604", Offset = "0x6D5604")]
	private sealed class <>c__DisplayClass17_1
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string defaultName;

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x9FECE4", Offset = "0x9FECE4", VA = "0x9FECE4")]
		public <>c__DisplayClass17_1()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x9FECEC", Offset = "0x9FECEC", VA = "0x9FECEC")]
		internal bool <ConnectionChanged>b__2(ControllerOffset x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer controllerMesh;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ES_OpenXRHaptics haptics;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ESInputInterface targetController;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.XR.InputDevice deviceReference;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ControllerOffset[] controllerOffsets;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isOculus;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasFingerSensing;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformActionDescriptionSteam platformDescSteam;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlatformActionDescriptionOculusLeftHand platformDescOculusLeft;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static PlatformActionDescriptionOculusRightHand platformDescOculusRight;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PlatformActionDescriptionHandTracking platformDescHandTracking;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputFeatureUsage<float> gripForceUsage;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputFeatureUsage<float> trackpadForceUsage;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool initialized;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x927FCC", Offset = "0x927FCC", VA = "0x927FCC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x928BE0", Offset = "0x928BE0", VA = "0x928BE0")]
	public void InputDevices_deviceConnected(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x928BE4", Offset = "0x928BE4", VA = "0x928BE4")]
	public void InputDevices_deviceDisconnected(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x92826C", Offset = "0x92826C", VA = "0x92826C")]
	public void ConnectionChanged()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x928BF0", Offset = "0x928BF0", VA = "0x928BF0")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x928D18", Offset = "0x928D18", VA = "0x928D18")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x928D1C", Offset = "0x928D1C", VA = "0x928D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x929014", Offset = "0x929014", VA = "0x929014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x929018", Offset = "0x929018", VA = "0x929018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x9290EC", Offset = "0x9290EC", VA = "0x9290EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x9291E0", Offset = "0x9291E0", VA = "0x9291E0")]
	public ES_OpenXRConnector()
	{
	}
}
[Token(Token = "0x20000FD")]
public enum EnvironmentTypes
{
	[Token(Token = "0x40004C5")]
	Clear_Space = 0,
	[Token(Token = "0x40004C6")]
	Dense_Asteroids = 1,
	[Token(Token = "0x40004C7")]
	Icy_Space = 2,
	[Token(Token = "0x40004C8")]
	Scrap_Field = 3,
	[Token(Token = "0x40004C9")]
	Rift = 4,
	[Token(Token = "0x40004CA")]
	Title = 5,
	[Token(Token = "0x40004CB")]
	Proxima = 6,
	[Token(Token = "0x40004CC")]
	Iron_Asteroids = 7,
	[Token(Token = "0x40004CD")]
	Sun_Storm = 8,
	[Token(Token = "0x40004CE")]
	Ulanni_Space = 9,
	[Token(Token = "0x40004CF")]
	MineField = 10,
	[Token(Token = "0x40004D0")]
	Endless_Procedural = 99
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5614", Offset = "0x6D5614")]
public class EnvironmentType : ScriptableObject
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnvironmentTypes environmentType;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool fogActive;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] sceneryObjects;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] smallObstacle;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] mediumObstacle;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] largeObstacle;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] rareLargeObstacle;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] rareMediumObstacle;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] endlessObjects;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] spaceDecoration;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float cloudChance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] spaceCloud;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float curiosityChance;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] curiosities;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int curiositiesToSpawn;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xB4B318", Offset = "0xB4B318", VA = "0xB4B318")]
	public EnvironmentType()
	{
	}
}
[Token(Token = "0x20000FF")]
public class FacePlayer : MonoBehaviour
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offsetAngles;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lockY;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xB4CA6C", Offset = "0xB4CA6C", VA = "0xB4CA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB4CBE4", Offset = "0xB4CBE4", VA = "0xB4CBE4")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB4CCFC", Offset = "0xB4CCFC", VA = "0xB4CCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB4CE14", Offset = "0xB4CE14", VA = "0xB4CE14")]
	public FacePlayer()
	{
	}
}
[Token(Token = "0x2000100")]
public class FighterAIDebugger : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh display;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterAI ai;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB4EAB4", Offset = "0xB4EAB4", VA = "0xB4EAB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB4EAB8", Offset = "0xB4EAB8", VA = "0xB4EAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xB4EB60", Offset = "0xB4EB60", VA = "0xB4EB60")]
	public FighterAIDebugger()
	{
	}
}
[Token(Token = "0x2000101")]
public static class FileManager
{
	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB4FB04", Offset = "0xB4FB04", VA = "0xB4FB04")]
	public static string GetPathForLocalization(string fileName)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB4FB9C", Offset = "0xB4FB9C", VA = "0xB4FB9C")]
	public static string LoadFileAsText(string path)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xB4FBA4", Offset = "0xB4FBA4", VA = "0xB4FBA4")]
	public static void SaveFileAsText(string path, string[] lines)
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public class Fleet
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ShipData> ships;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FleetData fleetData;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 navPointPosition;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ambushTriggered;

	[NonSerialized]
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int fleetNum;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xB51EDC", Offset = "0xB51EDC", VA = "0xB51EDC")]
	public Fleet()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xB51FBC", Offset = "0xB51FBC", VA = "0xB51FBC")]
	public Fleet(Fleet fleet)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xB520DC", Offset = "0xB520DC", VA = "0xB520DC")]
	public void Clear()
	{
	}
}
[Token(Token = "0x2000103")]
public class GoalMarker : MonoBehaviour
{
	[Token(Token = "0x6000551")]
	[Address(RVA = "0xE81E28", Offset = "0xE81E28", VA = "0xE81E28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xE81E2C", Offset = "0xE81E2C", VA = "0xE81E2C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xE81E30", Offset = "0xE81E30", VA = "0xE81E30")]
	public void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xE81E34", Offset = "0xE81E34", VA = "0xE81E34")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE81F08", Offset = "0xE81F08", VA = "0xE81F08")]
	public GoalMarker()
	{
	}
}
[Token(Token = "0x2000104")]
[DisallowMultipleComponent]
public class GrabbableObject : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	public enum TextColorStyles
	{
		[Token(Token = "0x400050F")]
		Default,
		[Token(Token = "0x4000510")]
		Purple,
		[Token(Token = "0x4000511")]
		Yellow,
		[Token(Token = "0x4000512")]
		Green
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5690", Offset = "0x6D5690")]
	private sealed class <BlinkSequence>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableObject <>4__this;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000579")]
			[Address(RVA = "0xA00540", Offset = "0xA00540", VA = "0xA00540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0xA00588", Offset = "0xA00588", VA = "0xA00588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xA003CC", Offset = "0xA003CC", VA = "0xA003CC")]
		[DebuggerHidden]
		public <BlinkSequence>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xA003F8", Offset = "0xA003F8", VA = "0xA003F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xA003FC", Offset = "0xA003FC", VA = "0xA003FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xA00548", Offset = "0xA00548", VA = "0xA00548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ESColorSettingsSO colorSettings;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Material highlightMaterial;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Material selectedMaterial;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Material selectedEnemyMaterial;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Material inactiveMaterial;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Material ghostedMaterial;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material specialHighlightMaterial;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Dictionary<string, Material[]> originalObjectMaterials;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Renderer[] rendererArray;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected TMP_Text[] textMeshArray;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public int isHighlighted;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool isSelected;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[HideInInspector]
	public bool isInactive;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[HideInInspector]
	public bool isGhosted;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[HideInInspector]
	public bool ignoreHand;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ESHand handToIgnore;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool forceHighlightGlow;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[HideInInspector]
	public bool beingDragged;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	[HideInInspector]
	public bool useEnemyMaterial;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool droppable;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool canDragWithGrip;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string hintText;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string selectedHintText;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string hintKey;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string selectedHintKey;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color textColor;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color textHighlightColor;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextColorStyles textColorStyle;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int hoverSoundNum;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float hoverStartTime;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected UnitGrabberController lastControllerHovered;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected UnitGrabberController controllerInteracting;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string grabbableId;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool _grabbableInitialized;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool useInstancing;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float interactionSizeLimit;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xE82298", Offset = "0xE82298", VA = "0xE82298", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xE824F8", Offset = "0xE824F8", VA = "0xE824F8")]
	public void ObjectsChanged()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xE8229C", Offset = "0xE8229C", VA = "0xE8229C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xE8274C", Offset = "0xE8274C", VA = "0xE8274C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xE82750", Offset = "0xE82750", VA = "0xE82750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xE82A48", Offset = "0xE82A48", VA = "0xE82A48")]
	public bool IsHandOver()
	{
		return default(bool);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xE8284C", Offset = "0xE8284C", VA = "0xE8284C")]
	public void ResetState()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xE82C84", Offset = "0xE82C84", VA = "0xE82C84", Slot = "5")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xE826C4", Offset = "0xE826C4", VA = "0xE826C4")]
	public void ResetTextColor()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xE82CA8", Offset = "0xE82CA8", VA = "0xE82CA8", Slot = "6")]
	public virtual void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xE82DA4", Offset = "0xE82DA4", VA = "0xE82DA4", Slot = "7")]
	public virtual void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xE82E4C", Offset = "0xE82E4C", VA = "0xE82E4C", Slot = "8")]
	public virtual void hoverUpdate(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xE82E50", Offset = "0xE82E50", VA = "0xE82E50", Slot = "9")]
	public virtual bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xE82E8C", Offset = "0xE82E8C", VA = "0xE82E8C", Slot = "10")]
	public virtual void dragMove(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xE82E90", Offset = "0xE82E90", VA = "0xE82E90", Slot = "11")]
	public virtual void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xE82EA0", Offset = "0xE82EA0", VA = "0xE82EA0", Slot = "12")]
	public virtual void dragCancel(UnitGrabberController controller, Transform t)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xE82EB0", Offset = "0xE82EB0", VA = "0xE82EB0", Slot = "13")]
	protected virtual void GetRendererArray()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE82524", Offset = "0xE82524", VA = "0xE82524")]
	protected Dictionary<string, Material[]> StoreOriginalMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xE832D0", Offset = "0xE832D0", VA = "0xE832D0")]
	protected void ChangeMaterial(Material m, Color textColor)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xE8354C", Offset = "0xE8354C", VA = "0xE8354C")]
	protected void SetMaterials(Material m, Color textColor)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xE83A74", Offset = "0xE83A74", VA = "0xE83A74")]
	protected void RevertMaterial()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xE83E48", Offset = "0xE83E48", VA = "0xE83E48", Slot = "14")]
	public virtual void ClearGrabState()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xE83EAC", Offset = "0xE83EAC", VA = "0xE83EAC", Slot = "15")]
	public virtual void DroppedOn(UnitGrabberController controller, Transform t, GrabbableObject activeObject)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xE83EB0", Offset = "0xE83EB0", VA = "0xE83EB0", Slot = "16")]
	public virtual void SetHighlighted(bool b)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xE83F24", Offset = "0xE83F24", VA = "0xE83F24", Slot = "17")]
	public virtual void SetSelected(bool b)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xE83F48", Offset = "0xE83F48", VA = "0xE83F48", Slot = "18")]
	public virtual void SetInactive(bool b)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xE83FA8", Offset = "0xE83FA8", VA = "0xE83FA8", Slot = "19")]
	public virtual void SetGhosted(bool b)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xE83FCC", Offset = "0xE83FCC", VA = "0xE83FCC")]
	public void Blink()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xE84018", Offset = "0xE84018", VA = "0xE84018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD6A4", Offset = "0x6DD6A4")]
	private IEnumerator BlinkSequence()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xE84090", Offset = "0xE84090", VA = "0xE84090")]
	public UnitGrabberController GetControllerInteracting()
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xE8289C", Offset = "0xE8289C", VA = "0xE8289C")]
	public void updateMaterialState()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xE84098", Offset = "0xE84098", VA = "0xE84098")]
	public GrabbableObject()
	{
	}
}
[Token(Token = "0x2000107")]
public class HackPosTo : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fixTo;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider handColl;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gripPos;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 collOffs;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xE843A0", Offset = "0xE843A0", VA = "0xE843A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xE8444C", Offset = "0xE8444C", VA = "0xE8444C")]
	public HackPosTo()
	{
	}
}
[Token(Token = "0x2000108")]
public class HandMenuShower : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject head;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainHolder;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform lid;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip appearSound;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip disappearSound;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion openRot;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion closedRot;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion containerRestRot;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HudTextFollower followerScript;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform container;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ShipHandMenu shipHandMenu;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int state;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float mainScale;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xE85988", Offset = "0xE85988", VA = "0xE85988")]
	private void Start()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xE85A8C", Offset = "0xE85A8C", VA = "0xE85A8C")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xE85A9C", Offset = "0xE85A9C", VA = "0xE85A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xE8633C", Offset = "0xE8633C", VA = "0xE8633C")]
	public HandMenuShower()
	{
	}
}
[Token(Token = "0x2000109")]
public class HapticsManager : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticsManager instance;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip[] hapticsClips;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC9F0B8", Offset = "0xC9F0B8", VA = "0xC9F0B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xC9F238", Offset = "0xC9F238", VA = "0xC9F238")]
	public void Play(int num)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xC9F2D4", Offset = "0xC9F2D4", VA = "0xC9F2D4")]
	public void Play(int num, string identifier)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xC9F334", Offset = "0xC9F334", VA = "0xC9F334")]
	public void Play(int num, float intensity, string identifier = "")
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xC9F390", Offset = "0xC9F390", VA = "0xC9F390")]
	public void Play(int num, float intensity, float duration, string identifier = "")
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xC9F3E8", Offset = "0xC9F3E8", VA = "0xC9F3E8")]
	public void Play(int num, float intensity, float duration, float vestRotationAngleX, string identifier = "")
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xC9F43C", Offset = "0xC9F43C", VA = "0xC9F43C")]
	public void Play(int num, Vector3 contactPos, Collider targetCollider, string identifier = "")
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xC9F594", Offset = "0xC9F594", VA = "0xC9F594")]
	public void Play(int num, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC9F6E0", Offset = "0xC9F6E0", VA = "0xC9F6E0")]
	public void Play(int num, float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC9F838", Offset = "0xC9F838", VA = "0xC9F838")]
	public void Play(int num, float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xC9F888", Offset = "0xC9F888", VA = "0xC9F888")]
	public HapticsManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class HitPointTextController : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float riseRate;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xCA3FEC", Offset = "0xCA3FEC", VA = "0xCA3FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xCA3FF0", Offset = "0xCA3FF0", VA = "0xCA3FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xCA405C", Offset = "0xCA405C", VA = "0xCA405C")]
	public void Refresh(float amt, Color c, bool currency = false)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xCA41CC", Offset = "0xCA41CC", VA = "0xCA41CC")]
	public HitPointTextController()
	{
	}
}
[Token(Token = "0x200010B")]
public class HudTextFollower : MonoBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject followObject;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraOrigin;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 followOffset;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float movementThreshold;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool atRest;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float easeIn;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float heightOffset;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool locked;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool instantMode;

	[NonSerialized]
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool initialized;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AbstractGoTween _tween;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCA429C", Offset = "0xCA429C", VA = "0xCA429C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xCA42A0", Offset = "0xCA42A0", VA = "0xCA42A0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xCA4544", Offset = "0xCA4544", VA = "0xCA4544")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xCA462C", Offset = "0xCA462C", VA = "0xCA462C")]
	public Vector3 GetTargetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xCA47EC", Offset = "0xCA47EC", VA = "0xCA47EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xCA4C40", Offset = "0xCA4C40", VA = "0xCA4C40")]
	public void SetAtRest(bool b)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xCA4C4C", Offset = "0xCA4C4C", VA = "0xCA4C4C")]
	public void Appear(bool instant = false, float scale = 1f)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xCA4E14", Offset = "0xCA4E14", VA = "0xCA4E14")]
	public void Disappear()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xCA5034", Offset = "0xCA5034", VA = "0xCA5034")]
	public HudTextFollower()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xCA5080", Offset = "0xCA5080", VA = "0xCA5080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD754", Offset = "0x6DD754")]
	private void <Disappear>b__19_0(AbstractGoTween t)
	{
	}
}
[Token(Token = "0x200010C")]
public class IceAsteroidExplode : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject areaPrefab;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpaceUnit myUnit;

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xCA7B58", Offset = "0xCA7B58", VA = "0xCA7B58")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xCA7C24", Offset = "0xCA7C24", VA = "0xCA7C24")]
	public void onDisable()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xCA7CC0", Offset = "0xCA7CC0", VA = "0xCA7CC0")]
	public void OnExploded()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xCA7E28", Offset = "0xCA7E28", VA = "0xCA7E28")]
	public IceAsteroidExplode()
	{
	}
}
[Token(Token = "0x200010D")]
public class InfopediaManager : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D56A0", Offset = "0x6D56A0")]
	private sealed class <CreateMenuCO>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfopediaManager <>4__this;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <yOff>5__2;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <xOff>5__3;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__4;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InfopediaPageData[] <>7__wrap4;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap5;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x931FA0", Offset = "0x931FA0", VA = "0x931FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x931FE8", Offset = "0x931FE8", VA = "0x931FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x9317C0", Offset = "0x9317C0", VA = "0x9317C0")]
		[DebuggerHidden]
		public <CreateMenuCO>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x9317EC", Offset = "0x9317EC", VA = "0x9317EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x9317F0", Offset = "0x9317F0", VA = "0x9317F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x931FA8", Offset = "0x931FA8", VA = "0x931FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InfopediaPageData[] infopediaPages;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] categories;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] categoryCounter;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currentPage;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text pageHeadline;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text pageBody;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] bodyTextPages;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int bodyTextSubpage;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject menuButtonPrefab;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> buttons;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image image1;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image image2;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image imageIcon;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image border2;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas mainCanvas;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Canvas lowerCanvas;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip bip;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject nextPageButton;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject prevPageButton;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject cheatButtons;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool inCreate;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xCA8838", Offset = "0xCA8838", VA = "0xCA8838")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xCA887C", Offset = "0xCA887C", VA = "0xCA887C")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xCA8A50", Offset = "0xCA8A50", VA = "0xCA8A50")]
	public void Setup()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xCA94EC", Offset = "0xCA94EC", VA = "0xCA94EC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xCA9528", Offset = "0xCA9528", VA = "0xCA9528")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xCA9590", Offset = "0xCA9590", VA = "0xCA9590")]
	public void SetInfoPediaLevel(int n)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xCA9B54", Offset = "0xCA9B54", VA = "0xCA9B54")]
	public void SetPage(int n)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xCA9BD8", Offset = "0xCA9BD8", VA = "0xCA9BD8")]
	public void NextSubpage()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xCA9CB4", Offset = "0xCA9CB4", VA = "0xCA9CB4")]
	public void PreviousSubpage()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xCA8E24", Offset = "0xCA8E24", VA = "0xCA8E24")]
	public void UpdatePage()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xCA8C30", Offset = "0xCA8C30", VA = "0xCA8C30")]
	public void SetMaxKeyUnlocked()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xCA9D80", Offset = "0xCA9D80", VA = "0xCA9D80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD764", Offset = "0x6DD764")]
	public IEnumerator CreateMenuCO()
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xCA8DDC", Offset = "0xCA8DDC", VA = "0xCA8DDC")]
	public void CreateMenu()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xCA9DF8", Offset = "0xCA9DF8", VA = "0xCA9DF8")]
	public void ClickedOption(int id)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xCA9F64", Offset = "0xCA9F64", VA = "0xCA9F64")]
	public InfopediaManager()
	{
	}
}
[Token(Token = "0x200010F")]
public class AreaHackItem : ShipItem
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject shipStatusPrefab;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float cooldownHackTime;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public SpaceUnit.ShipBuff debuff;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xCC8F88", Offset = "0xCC8F88", VA = "0xCC8F88", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xCC9034", Offset = "0xCC9034", VA = "0xCC9034", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xCC9450", Offset = "0xCC9450", VA = "0xCC9450")]
	public AreaHackItem()
	{
	}
}
[Token(Token = "0x2000110")]
public class ArmorItem : ShipItem
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool frontArmorOnly;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float minDamage;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float multiplier;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioClip blockDamageSound;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xCCA524", Offset = "0xCCA524", VA = "0xCCA524", Slot = "22")]
	public override float MitigateDamage(float amount, DamageTypes t, Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xCCA724", Offset = "0xCCA724", VA = "0xCCA724")]
	public ArmorItem()
	{
	}
}
[Token(Token = "0x2000111")]
public class BeamController : MonoBehaviour
{
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material beamMaterial;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float beamTime;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpaceUnit owner;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color beamColor;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lineWidth;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float minSaberFactor;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light startLight;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light endLight;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject explosion;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VolumetricLineBehavior line;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initialized;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float intensity;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float endLightIntensity;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DeadTime deadTimeComp;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve saberCurve;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve laserCurve;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB5E1BC", Offset = "0xB5E1BC", VA = "0xB5E1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB5E1F0", Offset = "0xB5E1F0", VA = "0xB5E1F0")]
	public void Restart()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB5E3FC", Offset = "0xB5E3FC", VA = "0xB5E3FC")]
	public void BeginAnimation()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB5E438", Offset = "0xB5E438", VA = "0xB5E438")]
	private void TweenSaberIntensity(float val)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB5E49C", Offset = "0xB5E49C", VA = "0xB5E49C")]
	private void TweenLaserIntensity(float val)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xB5E54C", Offset = "0xB5E54C", VA = "0xB5E54C")]
	private void AnimationComplete()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xB5E550", Offset = "0xB5E550", VA = "0xB5E550")]
	public void SetBeamStartEnd(Vector3 start, Vector3 end, bool isHit, float maxRange)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xB5E7BC", Offset = "0xB5E7BC", VA = "0xB5E7BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xB5E8BC", Offset = "0xB5E8BC", VA = "0xB5E8BC")]
	public BeamController()
	{
	}
}
[Token(Token = "0x2000112")]
public class BeamItem : ShipItem
{
	[Token(Token = "0x2000113")]
	public enum BeamEffectType
	{
		[Token(Token = "0x400058A")]
		Standard,
		[Token(Token = "0x400058B")]
		HullRepair,
		[Token(Token = "0x400058C")]
		ShieldBoost,
		[Token(Token = "0x400058D")]
		StealShields
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject beamPrefab;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float initialDamage;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float damagePerSecond;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public DamageTypes damageType;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public DamageID damageID;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private string damageTypeString;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float forceImparted;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public bool isPenetrating;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AudioClip fireSound;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool instantAim;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float damageChunks;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float firingTime;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float firingTimeLeft;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public float firingTrackingMod;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float thinkTime;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float thinkTimeLeft;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public float beamWidth;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private GameObject beam;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private SpaceUnit firingTarget;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public BeamEffectType beamEffectType;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public bool locksHeading;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
	private bool _initialized;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3 lastEndPoint;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 lastDir;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xB5E960", Offset = "0xB5E960", VA = "0xB5E960", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xB5EB70", Offset = "0xB5EB70", VA = "0xB5EB70")]
	public void SetShipLookTarget(SpaceUnit target)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xB5EC28", Offset = "0xB5EC28", VA = "0xB5EC28", Slot = "6")]
	public override void Preload()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xB5ECFC", Offset = "0xB5ECFC", VA = "0xB5ECFC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xB5F408", Offset = "0xB5F408", VA = "0xB5F408")]
	private void ApplyEffect(SpaceUnit otherShip, float amt, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xB5F8E4", Offset = "0xB5F8E4", VA = "0xB5F8E4", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xB5FF44", Offset = "0xB5FF44", VA = "0xB5FF44", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xB60004", Offset = "0xB60004", VA = "0xB60004", Slot = "27")]
	public override float CalculateDPS()
	{
		return default(float);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xB60100", Offset = "0xB60100", VA = "0xB60100")]
	public float CalculatePassDamage()
	{
		return default(float);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xB601C8", Offset = "0xB601C8", VA = "0xB601C8", Slot = "25")]
	public override ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xB5F7A8", Offset = "0xB5F7A8", VA = "0xB5F7A8")]
	public void BeamCleanup()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xB60498", Offset = "0xB60498", VA = "0xB60498", Slot = "17")]
	public override bool ItemSpecificRequirementsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xB60604", Offset = "0xB60604", VA = "0xB60604", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xB60608", Offset = "0xB60608", VA = "0xB60608", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xB6060C", Offset = "0xB6060C", VA = "0xB6060C")]
	public BeamItem()
	{
	}
}
[Token(Token = "0x2000114")]
public class ChargerChargeItem : ShipItem
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject effectGlow;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD827D0", Offset = "0xD827D0", VA = "0xD827D0", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD82890", Offset = "0xD82890", VA = "0xD82890", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xD828B0", Offset = "0xD828B0", VA = "0xD828B0", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xD829F0", Offset = "0xD829F0", VA = "0xD829F0", Slot = "14")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD829F8", Offset = "0xD829F8", VA = "0xD829F8", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xD82ACC", Offset = "0xD82ACC", VA = "0xD82ACC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD82BF4", Offset = "0xD82BF4", VA = "0xD82BF4", Slot = "24")]
	public override string GetStatsText()
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD82DB4", Offset = "0xD82DB4", VA = "0xD82DB4", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xD82DBC", Offset = "0xD82DBC", VA = "0xD82DBC")]
	public ChargerChargeItem()
	{
	}
}
[Token(Token = "0x2000115")]
public class CloakGhost : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material[] originalMaterials;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material[] currentMaterials;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material ghostMaterial;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float animInTime;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float animOutTime;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float cloakTime;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpaceUnit owner;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool completed;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float tweenLevelVal;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD83750", Offset = "0xD83750", VA = "0xD83750")]
	private void Init()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD83920", Offset = "0xD83920", VA = "0xD83920")]
	private void Restart()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD83998", Offset = "0xD83998", VA = "0xD83998")]
	public void FadeInAnim()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD83B64", Offset = "0xD83B64", VA = "0xD83B64")]
	public void UpdateTimeLeft(float _cloakTime)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD83B74", Offset = "0xD83B74", VA = "0xD83B74")]
	public void BeginAnimation(float _cloakTime)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD83CFC", Offset = "0xD83CFC", VA = "0xD83CFC")]
	public void TweenLevel(float level)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD83EF4", Offset = "0xD83EF4", VA = "0xD83EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD83F54", Offset = "0xD83F54", VA = "0xD83F54")]
	public void AnimationEnd()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD83FCC", Offset = "0xD83FCC", VA = "0xD83FCC")]
	public CloakGhost()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD83FE4", Offset = "0xD83FE4", VA = "0xD83FE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD814", Offset = "0x6DD814")]
	private void <FadeInAnim>b__13_0(AbstractGoTween gt)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD83FEC", Offset = "0xD83FEC", VA = "0xD83FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD824", Offset = "0x6DD824")]
	private void <FadeInAnim>b__13_1(AbstractGoTween gt)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD83FF0", Offset = "0xD83FF0", VA = "0xD83FF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD834", Offset = "0x6DD834")]
	private void <BeginAnimation>b__15_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x2000116")]
public class CoolingSystemItem : ShipItem
{
	[Serializable]
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D56B0", Offset = "0x6D56B0")]
	private sealed class <>c
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<ShipItem, bool> <>9__8_0;

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x9FDA74", Offset = "0x9FDA74", VA = "0x9FDA74")]
		public <>c()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x9FDA7C", Offset = "0x9FDA7C", VA = "0x9FDA7C")]
		internal bool <OnDamaged>b__8_0(ShipItem x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject explosionPrefab;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float destructionDamage;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool scanToActivate;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float systemHealth;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float hullFireScale;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD889D8", Offset = "0xD889D8", VA = "0xD889D8", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD88C60", Offset = "0xD88C60", VA = "0xD88C60")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD88DC8", Offset = "0xD88DC8", VA = "0xD88DC8", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD8916C", Offset = "0xD8916C", VA = "0xD8916C", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD89170", Offset = "0xD89170", VA = "0xD89170", Slot = "18")]
	public override void TriggerItem()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD89174", Offset = "0xD89174", VA = "0xD89174")]
	public CoolingSystemItem()
	{
	}
}
[Token(Token = "0x2000118")]
public class EmptySlot : GrabbableObject
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private HardPoint _hardpoint;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool hasIcons;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool isMod;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpaceUnit unit;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool isTrash;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject targetIndicator;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro label;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject iconSpecial;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject iconWeapon;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject iconMod;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject iconBigSpecial;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioSource blinkSound;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshPro costLabel;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool draggingOver;

	[Token(Token = "0x1700005C")]
	public HardPoint hardpoint
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xB445E4", Offset = "0xB445E4", VA = "0xB445E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xB4448C", Offset = "0xB4448C", VA = "0xB4448C")]
		set
		{
		}
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xB445EC", Offset = "0xB445EC", VA = "0xB445EC", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xB445F4", Offset = "0xB445F4", VA = "0xB445F4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xB446AC", Offset = "0xB446AC", VA = "0xB446AC")]
	public void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xB448E4", Offset = "0xB448E4", VA = "0xB448E4")]
	public EmptySlot()
	{
	}
}
[Token(Token = "0x2000119")]
public class EngineItem : ShipItem
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject engineExplode;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xB4B1CC", Offset = "0xB4B1CC", VA = "0xB4B1CC", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB4B2AC", Offset = "0xB4B2AC", VA = "0xB4B2AC")]
	public EngineItem()
	{
	}
}
[Token(Token = "0x200011A")]
public class FighterBay : ProjectileItem
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public int fighterBonus;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB4EB68", Offset = "0xB4EB68", VA = "0xB4EB68")]
	private void Assign()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB4EBD8", Offset = "0xB4EBD8", VA = "0xB4EBD8", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB4EC38", Offset = "0xB4EC38", VA = "0xB4EC38")]
	public FighterBay()
	{
	}
}
[Token(Token = "0x200011B")]
public class FighterDefend : ShipItem
{
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB4EC9C", Offset = "0xB4EC9C", VA = "0xB4EC9C", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB4EE7C", Offset = "0xB4EE7C", VA = "0xB4EE7C")]
	public FighterDefend()
	{
	}
}
[Token(Token = "0x200011C")]
public class FighterSetTarget : ShipItem
{
	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB4EEE0", Offset = "0xB4EEE0", VA = "0xB4EEE0", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB4F378", Offset = "0xB4F378", VA = "0xB4F378", Slot = "17")]
	public override bool ItemSpecificRequirementsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB4F3D4", Offset = "0xB4F3D4", VA = "0xB4F3D4")]
	public FighterSetTarget()
	{
	}
}
[Token(Token = "0x200011D")]
public class FoldItem : ShipItem
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject foldDamagePrefab;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float foldDamage;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool forwardOnly;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB52D14", Offset = "0xB52D14", VA = "0xB52D14", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB52D50", Offset = "0xB52D50", VA = "0xB52D50", Slot = "25")]
	public override ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB52FA8", Offset = "0xB52FA8", VA = "0xB52FA8", Slot = "24")]
	public override string GetStatsText()
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB53034", Offset = "0xB53034", VA = "0xB53034", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB53538", Offset = "0xB53538", VA = "0xB53538", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB5381C", Offset = "0xB5381C", VA = "0xB5381C")]
	public FoldItem()
	{
	}
}
[Token(Token = "0x200011E")]
public class GeneratorItem : ShipItem
{
	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB542DC", Offset = "0xB542DC", VA = "0xB542DC", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xB542E8", Offset = "0xB542E8", VA = "0xB542E8", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xB5432C", Offset = "0xB5432C", VA = "0xB5432C", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xB54330", Offset = "0xB54330", VA = "0xB54330", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xB54350", Offset = "0xB54350", VA = "0xB54350", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xB54370", Offset = "0xB54370", VA = "0xB54370")]
	public GeneratorItem()
	{
	}
}
[Token(Token = "0x200011F")]
public class HardPoint : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Quaternion direction;

	[NonSerialized]
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Quaternion hpBaseDirection;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Quaternion hpTurretArcCenterDirection;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion hpBaseInit;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion rotInit;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion rotTarget;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion hpBaseRotTarget;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float firingArc;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float leadingFactor;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool hardened;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public ShipItem _item;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public ShipItem _modItem;

	[Token(Token = "0x40005C4")]
	private const float thinkTime = 0.07f;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool twoPartTurret;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float twoPartTurretBaseArcAngle;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform hpBase;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 uiButtonOffset;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 uiModButtonOffset;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool atRest;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool hiddenUI;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool hardpointMoves;

	[NonSerialized]
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public SpaceUnit ship;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public GameObject highlightObj;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool overridesGunDirection;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public MainGunDirection ovrGunDir;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ShipItem.ItemType itemType;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool bigGun;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool startsLocked;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	private bool unlocked;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int unlockCost;

	[NonSerialized]
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public float lastThinkTime;

	[NonSerialized]
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	private HardPoint targetObjectHardPoint;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool started;

	[Token(Token = "0x1700005D")]
	public ShipItem item
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0xC9FD58", Offset = "0xC9FD58", VA = "0xC9FD58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060B")]
		[Address(RVA = "0xC9F890", Offset = "0xC9F890", VA = "0xC9F890")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public ShipItem modItem
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xC9FFA0", Offset = "0xC9FFA0", VA = "0xC9FFA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060D")]
		[Address(RVA = "0xC9FD60", Offset = "0xC9FD60", VA = "0xC9FD60")]
		set
		{
		}
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC9FFA8", Offset = "0xC9FFA8", VA = "0xC9FFA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xCA0200", Offset = "0xCA0200", VA = "0xCA0200")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xCA0244", Offset = "0xCA0244", VA = "0xCA0244")]
	public void Unlock()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xCA0250", Offset = "0xCA0250", VA = "0xCA0250")]
	public bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xCA0260", Offset = "0xCA0260", VA = "0xCA0260")]
	public void CombatInit(SpaceUnit _ship)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xCA03A0", Offset = "0xCA03A0", VA = "0xCA03A0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xCA05FC", Offset = "0xCA05FC", VA = "0xCA05FC")]
	public bool CanHitEngines(SpaceUnit targetObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xCA070C", Offset = "0xCA070C", VA = "0xCA070C")]
	public bool CanHitHardPoint(HardPoint targetHardPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xCA0890", Offset = "0xCA0890", VA = "0xCA0890")]
	public Vector3 GetPositionWithLeading(SpaceUnit targetObject, float projectileSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xCA0FA4", Offset = "0xCA0FA4", VA = "0xCA0FA4")]
	public void RotateToTarget(SpaceUnit targetObject, float trackingSpeed = 30f, float projectileSpeed = 2f)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xCA1064", Offset = "0xCA1064", VA = "0xCA1064")]
	public void RotateToPositionTarget(Vector3 targetPosition, float trackingSpeed = 30f, float projectileSpeed = 2f)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xCA13B4", Offset = "0xCA13B4", VA = "0xCA13B4")]
	public void ResetRotation(float trackingSpeed = 30f)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCA13DC", Offset = "0xCA13DC", VA = "0xCA13DC")]
	public void ResetRotationImmediate()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCA1458", Offset = "0xCA1458", VA = "0xCA1458")]
	public bool IsAimedAtTarget(SpaceUnit targetObject, float projectileSpeed = 2f)
	{
		return default(bool);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xCA1520", Offset = "0xCA1520", VA = "0xCA1520")]
	public bool IsAimed(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xCA1688", Offset = "0xCA1688", VA = "0xCA1688")]
	public bool TargetWithinRange(Vector3 position, float sizeAdjust = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xCA174C", Offset = "0xCA174C", VA = "0xCA174C")]
	public bool CouldHit(Transform futureShipPose, Vector3 targetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xCA1A04", Offset = "0xCA1A04", VA = "0xCA1A04")]
	public bool IsTargetPathClear(SpaceUnit targ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xCA1CB8", Offset = "0xCA1CB8", VA = "0xCA1CB8")]
	public bool CanHit(Vector3 position, float sizeAdjust = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xCA1F7C", Offset = "0xCA1F7C", VA = "0xCA1F7C")]
	public GameObject DetachItem()
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCA2074", Offset = "0xCA2074", VA = "0xCA2074")]
	public GameObject DetachModItem()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC9FC54", Offset = "0xC9FC54", VA = "0xC9FC54")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCA216C", Offset = "0xCA216C", VA = "0xCA216C")]
	public SpaceUnit FindBestTarget(float radius = 600f, SizePreference sizePref = SizePreference.None, bool foeItem = true)
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCA248C", Offset = "0xCA248C", VA = "0xCA248C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCA2800", Offset = "0xCA2800", VA = "0xCA2800")]
	public HardPoint()
	{
	}
}
[Token(Token = "0x2000120")]
public class HealBeam : ShipItem
{
	[Token(Token = "0x2000121")]
	public enum HealingType
	{
		[Token(Token = "0x40005E3")]
		Hull,
		[Token(Token = "0x40005E4")]
		Shields,
		[Token(Token = "0x40005E5")]
		Energy,
		[Token(Token = "0x40005E6")]
		StealShields
	}

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject beamPrefab;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float healsPerSec;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float firingTime;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float thinkDelayTime;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float thinkDelayLeft;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[HideInInspector]
	public float firingTimeLeft;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject beam;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private SpaceUnit firingTarget;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public HealingType healingType;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xCA2900", Offset = "0xCA2900", VA = "0xCA2900", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xCA291C", Offset = "0xCA291C", VA = "0xCA291C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xCA2EA8", Offset = "0xCA2EA8", VA = "0xCA2EA8", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xCA3220", Offset = "0xCA3220", VA = "0xCA3220", Slot = "17")]
	public override bool ItemSpecificRequirementsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xCA32BC", Offset = "0xCA32BC", VA = "0xCA32BC")]
	public HealBeam()
	{
	}
}
[Token(Token = "0x2000122")]
public class InflectorItem : InstantAreaItem
{
	[Token(Token = "0x600062D")]
	[Address(RVA = "0xCA8530", Offset = "0xCA8530", VA = "0xCA8530", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCA87A4", Offset = "0xCA87A4", VA = "0xCA87A4")]
	public InflectorItem()
	{
	}
}
[Token(Token = "0x2000123")]
public class InstantAreaItem : ShipItem
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject beamPrefab;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool ignoresSelf;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	public bool ignoresSelfTeam;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	private bool _initialized;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private string damageTypeString;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float dps;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private SpaceUnit.ShipBuff _buff;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xCAA09C", Offset = "0xCAA09C", VA = "0xCAA09C", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xCAA350", Offset = "0xCAA350", VA = "0xCAA350", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xCAA3FC", Offset = "0xCAA3FC", VA = "0xCAA3FC", Slot = "19")]
	public override void BeginFiring()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xCAA400", Offset = "0xCAA400", VA = "0xCAA400", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xCAA760", Offset = "0xCAA760", VA = "0xCAA760", Slot = "25")]
	public override ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xCA87A8", Offset = "0xCA87A8", VA = "0xCA87A8")]
	public InstantAreaItem()
	{
	}
}
[Token(Token = "0x2000124")]
public class InvulnItem : ShipItem
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject shieldObject;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float activeTimeLeft;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float activeTimeTotal;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xCAD9E0", Offset = "0xCAD9E0", VA = "0xCAD9E0", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xCADA28", Offset = "0xCADA28", VA = "0xCADA28", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xCADC70", Offset = "0xCADC70", VA = "0xCADC70", Slot = "22")]
	public override float MitigateDamage(float amount, DamageTypes t, Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xCADC84", Offset = "0xCADC84", VA = "0xCADC84", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xCADD98", Offset = "0xCADD98", VA = "0xCADD98")]
	public InvulnItem()
	{
	}
}
[Token(Token = "0x2000125")]
public class ItemButton : ShipActionButton
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public ShipItem buttonItem;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject tokenIcon;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject backingIcon;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject alertIcon;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject targettedIcon;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject targettableBox;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject wrenchIcon;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject toggledIndicator;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ProgressArc progress;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro progressLabel;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject cancelIcon;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro itemLabel;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float savedZoomScale;

	[NonSerialized]
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[HideInInspector]
	public bool _suppressReset;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ItemDescription descriptionObject;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public LineRenderer hintLine;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject rangeRing;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject lastToken;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool didDragOutOnce;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool withinCancel;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool dragOverIsInvalid;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	private bool targetAreaIsClear;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool _initialized;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool _inventoryMode;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[HideInInspector]
	public int inventoryIndex;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[HideInInspector]
	public bool fromTrash;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ItemButton previouslyHoveredItem;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private EmptySlot previouslyHoveredSlot;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int updateThrottler;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private GameObject arcObj;

	[Token(Token = "0x1700005F")]
	public bool inventoryMode
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0xCADFCC", Offset = "0xCADFCC", VA = "0xCADFCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xCADE04", Offset = "0xCADE04", VA = "0xCADE04")]
		set
		{
		}
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xCADFD4", Offset = "0xCADFD4", VA = "0xCADFD4")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xCAE16C", Offset = "0xCAE16C", VA = "0xCAE16C", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xCAE310", Offset = "0xCAE310", VA = "0xCAE310")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xCAFA90", Offset = "0xCAFA90", VA = "0xCAFA90", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xCB098C", Offset = "0xCB098C", VA = "0xCB098C", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xCB0B24", Offset = "0xCB0B24", VA = "0xCB0B24")]
	private bool InventoryBeginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xCB133C", Offset = "0xCB133C", VA = "0xCB133C")]
	private bool CombatBeginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xCB203C", Offset = "0xCB203C", VA = "0xCB203C", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xCB2064", Offset = "0xCB2064", VA = "0xCB2064")]
	public void ResetHoveredItem()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xCB2190", Offset = "0xCB2190", VA = "0xCB2190", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xCB2648", Offset = "0xCB2648", VA = "0xCB2648")]
	private void InventoryDragEnd(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xCB2EFC", Offset = "0xCB2EFC", VA = "0xCB2EFC")]
	private void CombatDragEnd(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xCB3638", Offset = "0xCB3638", VA = "0xCB3638", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xCB3788", Offset = "0xCB3788", VA = "0xCB3788", Slot = "12")]
	public override void dragCancel(UnitGrabberController controller, Transform t)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xCAFF18", Offset = "0xCAFF18", VA = "0xCAFF18")]
	public void UpdateTargets(UnitGrabberController controller, Transform dragTransform, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xCB38A8", Offset = "0xCB38A8", VA = "0xCB38A8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xCB3A10", Offset = "0xCB3A10", VA = "0xCB3A10")]
	private void CreateFiringArc()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xCB3DC4", Offset = "0xCB3DC4", VA = "0xCB3DC4")]
	public void Setup()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xCB4FCC", Offset = "0xCB4FCC", VA = "0xCB4FCC")]
	public void SetItem(ShipItem i)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xCB511C", Offset = "0xCB511C", VA = "0xCB511C", Slot = "20")]
	public override void Appear()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xCB52E0", Offset = "0xCB52E0", VA = "0xCB52E0")]
	private void AnimationComplete()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xCB0FB0", Offset = "0xCB0FB0", VA = "0xCB0FB0")]
	private GameObject getToken()
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xCB4D14", Offset = "0xCB4D14", VA = "0xCB4D14")]
	private GameObject getIcon()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xCB5340", Offset = "0xCB5340", VA = "0xCB5340")]
	public ItemButton()
	{
	}
}
[Token(Token = "0x2000126")]
public class ItemDescription : MonoBehaviour
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text itemTypeDesc;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text itemDescription;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text triggerTypeIcon;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text triggerTypeHeadline;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text triggerTypeDesc;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text stat1Number;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text stat1Headline;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text stat1Desc;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text stat2Number;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text stat2Headline;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_Text statRange;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text headlineText;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text manufacturerLabel;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rightPanel;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text rightPanelHeader;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text rightPanelBody;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject leftPanel;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text leftPanelHeader;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text leftPanelBody;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text priceLabel;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject priceLabelHolder;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xE608BC", Offset = "0xE608BC", VA = "0xE608BC")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xE60B34", Offset = "0xE60B34", VA = "0xE60B34")]
	public void SetShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xE610E0", Offset = "0xE610E0", VA = "0xE610E0")]
	public void SetItem(ShipItem buttonItem, bool inventoryMode = true, bool costIsRecycle = false)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xE62338", Offset = "0xE62338", VA = "0xE62338")]
	public ItemDescription()
	{
	}
}
[Token(Token = "0x2000127")]
public class ItemModShipItem : ShipItem
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public UpgradeModifiers modifierEffects;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xE63160", Offset = "0xE63160", VA = "0xE63160", Slot = "12")]
	public override void OnCreated()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xE633C8", Offset = "0xE633C8", VA = "0xE633C8", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xE633CC", Offset = "0xE633CC", VA = "0xE633CC", Slot = "14")]
	public override void Start()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xE633D0", Offset = "0xE633D0", VA = "0xE633D0", Slot = "16")]
	public override void CreateItemButton()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xE633D4", Offset = "0xE633D4", VA = "0xE633D4", Slot = "18")]
	public override void TriggerItem()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xE633D8", Offset = "0xE633D8", VA = "0xE633D8", Slot = "19")]
	public override void BeginFiring()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xE633DC", Offset = "0xE633DC", VA = "0xE633DC", Slot = "20")]
	public override bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xE633E4", Offset = "0xE633E4", VA = "0xE633E4", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xE633EC", Offset = "0xE633EC", VA = "0xE633EC", Slot = "26")]
	public override ItemStatSection GetStat2()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xE6348C", Offset = "0xE6348C", VA = "0xE6348C")]
	public ItemModShipItem()
	{
	}
}
[Token(Token = "0x2000128")]
public enum ItemSlotErrors
{
	[Token(Token = "0x4000627")]
	NoError,
	[Token(Token = "0x4000628")]
	InventoryFull,
	[Token(Token = "0x4000629")]
	TrashFull,
	[Token(Token = "0x400062A")]
	LockedSlot,
	[Token(Token = "0x400062B")]
	WrongType,
	[Token(Token = "0x400062C")]
	WrongTypeXL,
	[Token(Token = "0x400062D")]
	NonRemovable,
	[Token(Token = "0x400062E")]
	Other
}
[Token(Token = "0x2000129")]
public class ItemSlotAdaptorStrategy
{
	[Token(Token = "0x6000662")]
	[Address(RVA = "0xE63F74", Offset = "0xE63F74", VA = "0xE63F74")]
	public static ItemSlotErrors CanDrop(ItemSlotAdaptor draggedItem, ItemSlotAdaptor targetSpot)
	{
		return default(ItemSlotErrors);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xE6408C", Offset = "0xE6408C", VA = "0xE6408C")]
	public static void Drop(ItemSlotAdaptor draggedItem, ItemSlotAdaptor targetSpot)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE64240", Offset = "0xE64240", VA = "0xE64240")]
	public ItemSlotAdaptorStrategy()
	{
	}
}
[Token(Token = "0x200012A")]
public abstract class ItemSlotAdaptor
{
	[Token(Token = "0x6000665")]
	public abstract GameObject Detach();

	[Token(Token = "0x6000666")]
	public abstract void Attach(ShipItem itemObject);

	[Token(Token = "0x6000667")]
	public abstract ShipItem.ItemType GetItemType();

	[Token(Token = "0x6000668")]
	public abstract bool GetIsBigGun();

	[Token(Token = "0x6000669")]
	public abstract bool AcceptsAny();

	[Token(Token = "0x600066A")]
	public abstract bool IsFullOrLocked();

	[Token(Token = "0x600066B")]
	public abstract bool IsRemovable();

	[Token(Token = "0x600066C")]
	public abstract ItemSlotErrors GetErrorCode();

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE634F0", Offset = "0xE634F0", VA = "0xE634F0")]
	protected ItemSlotAdaptor()
	{
	}
}
[Token(Token = "0x200012B")]
public class ItemSlotAdaptorInventoryEmptySlot : ItemSlotAdaptor
{
	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE63B48", Offset = "0xE63B48", VA = "0xE63B48", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE63B50", Offset = "0xE63B50", VA = "0xE63B50", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE63BE0", Offset = "0xE63BE0", VA = "0xE63BE0", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE63BE8", Offset = "0xE63BE8", VA = "0xE63BE8", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE63BF0", Offset = "0xE63BF0", VA = "0xE63BF0", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE63BF8", Offset = "0xE63BF8", VA = "0xE63BF8", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE63C90", Offset = "0xE63C90", VA = "0xE63C90", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xE63C98", Offset = "0xE63C98", VA = "0xE63C98", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xE63CA0", Offset = "0xE63CA0", VA = "0xE63CA0")]
	public ItemSlotAdaptorInventoryEmptySlot()
	{
	}
}
[Token(Token = "0x200012C")]
public class ItemSlotAdaptorRecyclingSlot : ItemSlotAdaptor
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject recyclingSlot;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE63E6C", Offset = "0xE63E6C", VA = "0xE63E6C")]
	public ItemSlotAdaptorRecyclingSlot(GameObject uiSlot)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE63EA0", Offset = "0xE63EA0", VA = "0xE63EA0", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE63EA8", Offset = "0xE63EA8", VA = "0xE63EA8", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE63F44", Offset = "0xE63F44", VA = "0xE63F44", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE63F4C", Offset = "0xE63F4C", VA = "0xE63F4C", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE63F54", Offset = "0xE63F54", VA = "0xE63F54", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE63F5C", Offset = "0xE63F5C", VA = "0xE63F5C", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE63F64", Offset = "0xE63F64", VA = "0xE63F64", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xE63F6C", Offset = "0xE63F6C", VA = "0xE63F6C", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x200012D")]
public class ItemSlotAdaptorInventoryItemButton : ItemSlotAdaptor
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ItemButton itemButton;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ShipItem item;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xE63CA8", Offset = "0xE63CA8", VA = "0xE63CA8")]
	public ItemSlotAdaptorInventoryItemButton(ItemButton button)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xE63D04", Offset = "0xE63D04", VA = "0xE63D04", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xE63D84", Offset = "0xE63D84", VA = "0xE63D84", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xE63E14", Offset = "0xE63E14", VA = "0xE63E14", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xE63E30", Offset = "0xE63E30", VA = "0xE63E30", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xE63E4C", Offset = "0xE63E4C", VA = "0xE63E4C", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xE63E54", Offset = "0xE63E54", VA = "0xE63E54", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xE63E5C", Offset = "0xE63E5C", VA = "0xE63E5C", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xE63E64", Offset = "0xE63E64", VA = "0xE63E64", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x200012E")]
public class ItemSlotAdaptorTrashItemButton : ItemSlotAdaptor
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ItemButton itemButton;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xE64434", Offset = "0xE64434", VA = "0xE64434")]
	public ItemSlotAdaptorTrashItemButton(ItemButton button)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xE64468", Offset = "0xE64468", VA = "0xE64468", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xE644E8", Offset = "0xE644E8", VA = "0xE644E8", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xE64574", Offset = "0xE64574", VA = "0xE64574", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xE6459C", Offset = "0xE6459C", VA = "0xE6459C", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xE645C4", Offset = "0xE645C4", VA = "0xE645C4", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xE645CC", Offset = "0xE645CC", VA = "0xE645CC", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xE645D4", Offset = "0xE645D4", VA = "0xE645D4", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xE64668", Offset = "0xE64668", VA = "0xE64668", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x200012F")]
public class ItemSlotAdaptorHardpointEmptySlot : ItemSlotAdaptor
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EmptySlot emptySlot;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit currentShip;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xE635E8", Offset = "0xE635E8", VA = "0xE635E8")]
	public ItemSlotAdaptorHardpointEmptySlot(SpaceUnit _currentShip, EmptySlot _emptySlot)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE63638", Offset = "0xE63638", VA = "0xE63638", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE63640", Offset = "0xE63640", VA = "0xE63640", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE6369C", Offset = "0xE6369C", VA = "0xE6369C", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE636C4", Offset = "0xE636C4", VA = "0xE636C4", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xE636EC", Offset = "0xE636EC", VA = "0xE636EC", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE636F4", Offset = "0xE636F4", VA = "0xE636F4", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE636FC", Offset = "0xE636FC", VA = "0xE636FC", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE63704", Offset = "0xE63704", VA = "0xE63704", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000130")]
public class ItemSlotAdaptorHardpointLockedSlot : ItemSlotAdaptor
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LockedSlot lockedSlot;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit currentShip;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE63910", Offset = "0xE63910", VA = "0xE63910")]
	public ItemSlotAdaptorHardpointLockedSlot(SpaceUnit _currentShip, LockedSlot _lockedSlot)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xE63960", Offset = "0xE63960", VA = "0xE63960", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xE63968", Offset = "0xE63968", VA = "0xE63968", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xE6396C", Offset = "0xE6396C", VA = "0xE6396C", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xE63994", Offset = "0xE63994", VA = "0xE63994", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xE639BC", Offset = "0xE639BC", VA = "0xE639BC", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xE639C4", Offset = "0xE639C4", VA = "0xE639C4", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xE639CC", Offset = "0xE639CC", VA = "0xE639CC", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xE639D4", Offset = "0xE639D4", VA = "0xE639D4", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000131")]
public class ItemSlotAdaptorHardpointItemButton : ItemSlotAdaptor
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ItemButton itemButton;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit currentShip;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HardPoint hardPoint;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShipItem item;

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xE6370C", Offset = "0xE6370C", VA = "0xE6370C")]
	public ItemSlotAdaptorHardpointItemButton(SpaceUnit _currentShip, ItemButton _itemButton)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xE637A0", Offset = "0xE637A0", VA = "0xE637A0", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xE637D0", Offset = "0xE637D0", VA = "0xE637D0", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xE63824", Offset = "0xE63824", VA = "0xE63824", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xE63840", Offset = "0xE63840", VA = "0xE63840", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xE63868", Offset = "0xE63868", VA = "0xE63868", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xE638F8", Offset = "0xE638F8", VA = "0xE638F8", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xE63900", Offset = "0xE63900", VA = "0xE63900", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xE63908", Offset = "0xE63908", VA = "0xE63908", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000132")]
public class ItemSlotAdaptorHardpointEmptyModSlot : ItemSlotAdaptor
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EmptySlot emptySlot;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit currentShip;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xE63504", Offset = "0xE63504", VA = "0xE63504")]
	public ItemSlotAdaptorHardpointEmptyModSlot(SpaceUnit _currentShip, EmptySlot _emptySlot)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xE63554", Offset = "0xE63554", VA = "0xE63554", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xE6355C", Offset = "0xE6355C", VA = "0xE6355C", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xE635B8", Offset = "0xE635B8", VA = "0xE635B8", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xE635C0", Offset = "0xE635C0", VA = "0xE635C0", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xE635C8", Offset = "0xE635C8", VA = "0xE635C8", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xE635D0", Offset = "0xE635D0", VA = "0xE635D0", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xE635D8", Offset = "0xE635D8", VA = "0xE635D8", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xE635E0", Offset = "0xE635E0", VA = "0xE635E0", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000133")]
public class ItemSlotAdaptorHardpointModItemButton : ItemSlotAdaptor
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ItemButton itemButton;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit currentShip;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HardPoint hardPoint;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xE639DC", Offset = "0xE639DC", VA = "0xE639DC")]
	public ItemSlotAdaptorHardpointModItemButton(SpaceUnit _currentShip, ItemButton _itemButton)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xE63A54", Offset = "0xE63A54", VA = "0xE63A54", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xE63A84", Offset = "0xE63A84", VA = "0xE63A84", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xE63AD8", Offset = "0xE63AD8", VA = "0xE63AD8", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xE63B00", Offset = "0xE63B00", VA = "0xE63B00", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xE63B28", Offset = "0xE63B28", VA = "0xE63B28", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE63B30", Offset = "0xE63B30", VA = "0xE63B30", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE63B38", Offset = "0xE63B38", VA = "0xE63B38", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE63B40", Offset = "0xE63B40", VA = "0xE63B40", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000134")]
public class ItemSlotAdaptorTradeSlot : ItemSlotAdaptor
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject uiSlot;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ShipUpgradeUI ui;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xE64314", Offset = "0xE64314", VA = "0xE64314")]
	public ItemSlotAdaptorTradeSlot(GameObject _uiSlot)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xE643A4", Offset = "0xE643A4", VA = "0xE643A4", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xE643C4", Offset = "0xE643C4", VA = "0xE643C4", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xE64404", Offset = "0xE64404", VA = "0xE64404", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xE6440C", Offset = "0xE6440C", VA = "0xE6440C", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xE64414", Offset = "0xE64414", VA = "0xE64414", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xE6441C", Offset = "0xE6441C", VA = "0xE6441C", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE64424", Offset = "0xE64424", VA = "0xE64424", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE6442C", Offset = "0xE6442C", VA = "0xE6442C", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000135")]
public class ItemSlotAdaptorTradeForSlot : ItemSlotAdaptor
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject uiSlot;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ShipUpgradeUI ui;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xE64248", Offset = "0xE64248", VA = "0xE64248")]
	public ItemSlotAdaptorTradeForSlot(GameObject _uiSlot)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xE642D8", Offset = "0xE642D8", VA = "0xE642D8", Slot = "4")]
	public override GameObject Detach()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xE642E0", Offset = "0xE642E0", VA = "0xE642E0", Slot = "5")]
	public override void Attach(ShipItem itemObject)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xE642E4", Offset = "0xE642E4", VA = "0xE642E4", Slot = "6")]
	public override ShipItem.ItemType GetItemType()
	{
		return default(ShipItem.ItemType);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xE642EC", Offset = "0xE642EC", VA = "0xE642EC", Slot = "7")]
	public override bool GetIsBigGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xE642F4", Offset = "0xE642F4", VA = "0xE642F4", Slot = "10")]
	public override bool IsRemovable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xE642FC", Offset = "0xE642FC", VA = "0xE642FC", Slot = "8")]
	public override bool AcceptsAny()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE64304", Offset = "0xE64304", VA = "0xE64304", Slot = "9")]
	public override bool IsFullOrLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xE6430C", Offset = "0xE6430C", VA = "0xE6430C", Slot = "11")]
	public override ItemSlotErrors GetErrorCode()
	{
		return default(ItemSlotErrors);
	}
}
[Token(Token = "0x2000136")]
public class ItemSlotAdaptorComponent : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemSlotAdaptor adaptor;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xE634F8", Offset = "0xE634F8", VA = "0xE634F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xE634FC", Offset = "0xE634FC", VA = "0xE634FC")]
	public ItemSlotAdaptorComponent()
	{
	}
}
[Token(Token = "0x2000137")]
public class ItemTimer
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _timerName;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _elapsedFunctionName;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeLeft;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeTotal;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShipItem item;

	[Token(Token = "0x17000060")]
	public string timerName
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xE64670", Offset = "0xE64670", VA = "0xE64670")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xE63334", Offset = "0xE63334", VA = "0xE63334")]
		set
		{
		}
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xE64678", Offset = "0xE64678", VA = "0xE64678")]
	public void Update()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xE64754", Offset = "0xE64754", VA = "0xE64754")]
	public void BeginTimer()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xE64760", Offset = "0xE64760", VA = "0xE64760")]
	public void BeginTimerAt(float t)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE64768", Offset = "0xE64768", VA = "0xE64768")]
	public void EndTimer()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xE64770", Offset = "0xE64770", VA = "0xE64770")]
	public void InitTimer()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE64778", Offset = "0xE64778", VA = "0xE64778")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xE64788", Offset = "0xE64788", VA = "0xE64788")]
	public float GetFractionComplete()
	{
		return default(float);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xE647B0", Offset = "0xE647B0", VA = "0xE647B0")]
	public float GetFractionLeft()
	{
		return default(float);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xE647D0", Offset = "0xE647D0", VA = "0xE647D0")]
	public ItemTimer()
	{
	}
}
[Token(Token = "0x2000138")]
public class JumpNovaItem : ShipItem
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectDestPrefab;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject areaEffectStartPrefab;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xE743C4", Offset = "0xE743C4", VA = "0xE743C4", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xE74600", Offset = "0xE74600", VA = "0xE74600", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xE7473C", Offset = "0xE7473C", VA = "0xE7473C")]
	public JumpNovaItem()
	{
	}
}
[Token(Token = "0x2000139")]
public class LockedSlot : StandardButtonObject
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject poofPrefab;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro lockIcon;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro label;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro costLabel;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject iconSpecial;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject iconWeapon;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject iconBigSpecial;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private HardPoint _hardpoint;

	[Token(Token = "0x17000061")]
	public HardPoint hardpoint
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x9C29F0", Offset = "0x9C29F0", VA = "0x9C29F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x9C27EC", Offset = "0x9C27EC", VA = "0x9C27EC")]
		set
		{
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x9C29F8", Offset = "0x9C29F8", VA = "0x9C29F8", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x9C2A58", Offset = "0x9C2A58", VA = "0x9C2A58", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x9C2AB8", Offset = "0x9C2AB8", VA = "0x9C2AB8", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x9C2D68", Offset = "0x9C2D68", VA = "0x9C2D68")]
	public LockedSlot()
	{
	}
}
[Token(Token = "0x200013A")]
public class NovaItem : ShipItem
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool useWhenShieldsLow;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC23E54", Offset = "0xC23E54", VA = "0xC23E54", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xC23FB0", Offset = "0xC23FB0", VA = "0xC23FB0", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC24078", Offset = "0xC24078", VA = "0xC24078")]
	public NovaItem()
	{
	}
}
[Token(Token = "0x200013B")]
public class ProjectileItem : ShipItem
{
	[Token(Token = "0x200013C")]
	public enum AITriggerType
	{
		[Token(Token = "0x400066D")]
		None,
		[Token(Token = "0x400066E")]
		Flank,
		[Token(Token = "0x400066F")]
		Flee,
		[Token(Token = "0x4000670")]
		Tail
	}

	[Token(Token = "0x200013D")]
	public enum ForceDirectionType
	{
		[Token(Token = "0x4000672")]
		No,
		[Token(Token = "0x4000673")]
		Forward,
		[Token(Token = "0x4000674")]
		Up
	}

	[Serializable]
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D56C0", Offset = "0x6D56C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SpaceUnit> <>9__32_0;

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x939734", Offset = "0x939734", VA = "0x939734")]
		public <>c()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x93973C", Offset = "0x93973C", VA = "0x93973C")]
		internal bool <checkSpawnedDones>b__32_0(SpaceUnit o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject projectilePrefab;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private string damageTypeString;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float aimSpread;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool instantAim;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7DEC", Offset = "0x6D7DEC")]
	public bool projectilesTargetSelf;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int droneMax;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[HideInInspector]
	public List<SpaceUnit> spawnedDrones;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float initialBurnFactor;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public bool unitTeleportsIn;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
	public bool showDamageAsDPS;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
	public bool spawnedUnitsAreNpcs;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float _dps;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AITriggerType aiTrigger;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public ForceDirectionType forceDirection;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool ADIgnoresSelfTeam;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool _initialized;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private SpaceProjectile _firedProjectile;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private SpaceUnit _firedUnit;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private MissileAI _firedMissileAI;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private SpaceUnit.ShipBuff _buffType;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float _hitDamage;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public int numProjectilesToPrecache;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xA683FC", Offset = "0xA683FC", VA = "0xA683FC", Slot = "12")]
	public override void OnCreated()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xA684AC", Offset = "0xA684AC", VA = "0xA684AC", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xA68BAC", Offset = "0xA68BAC", VA = "0xA68BAC", Slot = "17")]
	public override bool ItemSpecificRequirementsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA68D50", Offset = "0xA68D50", VA = "0xA68D50", Slot = "19")]
	public override void BeginFiring()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA68E5C", Offset = "0xA68E5C", VA = "0xA68E5C", Slot = "10")]
	public override void OnFinishedFiring()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA68F20", Offset = "0xA68F20", VA = "0xA68F20", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA68F48", Offset = "0xA68F48", VA = "0xA68F48", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA68F70", Offset = "0xA68F70", VA = "0xA68F70", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xA68C24", Offset = "0xA68C24", VA = "0xA68C24")]
	private void checkSpawnedDones()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA69B84", Offset = "0xA69B84", VA = "0xA69B84", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA69FC8", Offset = "0xA69FC8", VA = "0xA69FC8", Slot = "27")]
	public override float CalculateDPS()
	{
		return default(float);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA6A0C0", Offset = "0xA6A0C0", VA = "0xA6A0C0", Slot = "25")]
	public override ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA6A59C", Offset = "0xA6A59C", VA = "0xA6A59C", Slot = "24")]
	public override string GetStatsText()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA6ADA8", Offset = "0xA6ADA8", VA = "0xA6ADA8")]
	public ProjectileItem()
	{
	}
}
[Token(Token = "0x200013F")]
public class PushBeam : ShipItem
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject beamPrefab;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float beamDamage;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float forceImparted;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float firingTime;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float firingTimeLeft;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float beamWidth;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject beam;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private BeamController beamController;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private SpaceUnit firingTarget;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Vector3 _lastDirection;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA6B2D4", Offset = "0xA6B2D4", VA = "0xA6B2D4", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA6B2E4", Offset = "0xA6B2E4", VA = "0xA6B2E4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xA6B974", Offset = "0xA6B974", VA = "0xA6B974", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA6C0A4", Offset = "0xA6C0A4", VA = "0xA6C0A4", Slot = "24")]
	public override string GetStatsText()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xA6C188", Offset = "0xA6C188", VA = "0xA6C188", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xA6C234", Offset = "0xA6C234", VA = "0xA6C234", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xA6C2E0", Offset = "0xA6C2E0", VA = "0xA6C2E0")]
	public PushBeam()
	{
	}
}
[Token(Token = "0x2000140")]
public class RandomTeleportItem : ShipItem
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject explosionPrefab;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA6CC70", Offset = "0xA6CC70", VA = "0xA6CC70", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xA6CC90", Offset = "0xA6CC90", VA = "0xA6CC90", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xA6CEF4", Offset = "0xA6CEF4", VA = "0xA6CEF4")]
	public RandomTeleportItem()
	{
	}
}
[Token(Token = "0x2000141")]
public class RelocateTeleportItem : ShipItem
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject beamPrefab;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float teleportRange;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float damage;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xA6EB70", Offset = "0xA6EB70", VA = "0xA6EB70", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xA6F03C", Offset = "0xA6F03C", VA = "0xA6F03C")]
	public RelocateTeleportItem()
	{
	}
}
[Token(Token = "0x2000142")]
public class ShieldItem : ShipItem
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float extendedCooldown;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float effectivenessRampTime;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private ItemTimer effectivenessRamp;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float glowDebounceTime;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject shieldGlow;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject shieldDownGlow;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject shieldUpGlow;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 glowSize;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public bool shieldWasDown;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float lastSiphon;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xD49CB0", Offset = "0xD49CB0", VA = "0xD49CB0", Slot = "12")]
	public override void OnCreated()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xD49D84", Offset = "0xD49D84", VA = "0xD49D84", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xD4A7EC", Offset = "0xD4A7EC", VA = "0xD4A7EC", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xD4AAC0", Offset = "0xD4AAC0", VA = "0xD4AAC0", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD4AB28", Offset = "0xD4AB28", VA = "0xD4AB28", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD4AB48", Offset = "0xD4AB48", VA = "0xD4AB48", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xD4AB4C", Offset = "0xD4AB4C", VA = "0xD4AB4C")]
	public void ChargeShields(float amt, Vector3 origin)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD4AC8C", Offset = "0xD4AC8C", VA = "0xD4AC8C", Slot = "22")]
	public override float MitigateDamage(float amount, DamageTypes t, Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD4B020", Offset = "0xD4B020", VA = "0xD4B020", Slot = "9")]
	public override void OnRepaired()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD4A894", Offset = "0xD4A894", VA = "0xD4A894")]
	public void DoShieldUpGlow()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD4B03C", Offset = "0xD4B03C", VA = "0xD4B03C")]
	public new void TimerCooldownElapsed()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD4B0F0", Offset = "0xD4B0F0", VA = "0xD4B0F0")]
	public void ShieldDown()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD4B374", Offset = "0xD4B374", VA = "0xD4B374")]
	public ShieldItem()
	{
	}
}
[Token(Token = "0x2000143")]
public abstract class ShipItemBase : MonoBehaviour
{
	[Token(Token = "0x6000715")]
	public abstract void CombatInitExtra();

	[Token(Token = "0x6000716")]
	public abstract void Fire();

	[Token(Token = "0x6000717")]
	public abstract void Preload();

	[Token(Token = "0x6000718")]
	public abstract void OnDamaged();

	[Token(Token = "0x6000719")]
	public abstract void OnDisabled();

	[Token(Token = "0x600071A")]
	public abstract void OnRepaired();

	[Token(Token = "0x600071B")]
	public abstract void OnFinishedFiring();

	[Token(Token = "0x600071C")]
	public abstract void OnAppear();

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xCF42FC", Offset = "0xCF42FC", VA = "0xCF42FC")]
	protected ShipItemBase()
	{
	}
}
[Token(Token = "0x2000144")]
[DisallowMultipleComponent]
public class ShipItem : ShipItemBase
{
	[Token(Token = "0x2000145")]
	public enum ItemType
	{
		[Token(Token = "0x40006F3")]
		Weapon,
		[Token(Token = "0x40006F4")]
		Shield,
		[Token(Token = "0x40006F5")]
		Armor,
		[Token(Token = "0x40006F6")]
		Generator,
		[Token(Token = "0x40006F7")]
		Special,
		[Token(Token = "0x40006F8")]
		Engine,
		[Token(Token = "0x40006F9")]
		Any,
		[Token(Token = "0x40006FA")]
		Command,
		[Token(Token = "0x40006FB")]
		Cooling,
		[Token(Token = "0x40006FC")]
		ItemMod
	}

	[Token(Token = "0x2000146")]
	public enum DamageOrder
	{
		[Token(Token = "0x40006FE")]
		PreShield,
		[Token(Token = "0x40006FF")]
		Shield,
		[Token(Token = "0x4000700")]
		Armor,
		[Token(Token = "0x4000701")]
		None
	}

	[Token(Token = "0x2000147")]
	public enum TriggerType
	{
		[Token(Token = "0x4000703")]
		AutomaticWeapon,
		[Token(Token = "0x4000704")]
		TargetShip,
		[Token(Token = "0x4000705")]
		TargetArea,
		[Token(Token = "0x4000706")]
		Instant,
		[Token(Token = "0x4000707")]
		Passive,
		[Token(Token = "0x4000708")]
		TargetShipOrLocation,
		[Token(Token = "0x4000709")]
		Toggle,
		[Token(Token = "0x400070A")]
		Mod
	}

	[Token(Token = "0x2000148")]
	public enum AutoTargetType
	{
		[Token(Token = "0x400070C")]
		Off,
		[Token(Token = "0x400070D")]
		Small,
		[Token(Token = "0x400070E")]
		Big
	}

	[Token(Token = "0x2000149")]
	public enum ItemEffectType
	{
		[Token(Token = "0x4000710")]
		DefensiveBuff,
		[Token(Token = "0x4000711")]
		OffensiveBuff,
		[Token(Token = "0x4000712")]
		MovementBuff,
		[Token(Token = "0x4000713")]
		Damage,
		[Token(Token = "0x4000714")]
		Debuff,
		[Token(Token = "0x4000715")]
		Teleport,
		[Token(Token = "0x4000716")]
		BlockProjectiles
	}

	[Token(Token = "0x200014A")]
	public enum CausesDebuffType
	{
		[Token(Token = "0x4000718")]
		None,
		[Token(Token = "0x4000719")]
		CooldownWeapons,
		[Token(Token = "0x400071A")]
		LowersShields
	}

	[Token(Token = "0x200014B")]
	public enum CanFireCode
	{
		[Token(Token = "0x400071C")]
		Ready,
		[Token(Token = "0x400071D")]
		Cooling,
		[Token(Token = "0x400071E")]
		Disabled,
		[Token(Token = "0x400071F")]
		Repairing,
		[Token(Token = "0x4000720")]
		WarmingUp,
		[Token(Token = "0x4000721")]
		Damaged,
		[Token(Token = "0x4000722")]
		ShipBlind,
		[Token(Token = "0x4000723")]
		NeedsEngines,
		[Token(Token = "0x4000724")]
		OtherRequirement
	}

	[Token(Token = "0x200014C")]
	public struct ItemStatSection
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string statIcon;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string statHeadline;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string statDesc;
	}

	[Serializable]
	[Token(Token = "0x200014D")]
	public class UpgradeModifiers
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float cooldown;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float effectiveness;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float range;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float aim;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int volleyShots;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool armorBonus;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cost;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x93BC24", Offset = "0x93BC24", VA = "0x93BC24")]
		public UpgradeModifiers()
		{
		}
	}

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int REPAIR_COST;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip beginFiringSound;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ItemTimer disabledTimer;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ItemTimer cooldownTimer;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public ItemTimer warmupTimer;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ItemTimer repairTimer;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string itemName;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string itemKey;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpaceBattleManager.FactionsEnum manufacturer;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int itemTier;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int unlocksAtRep;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool unlocksInSecondPlaythru;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D7E74", Offset = "0x6D7E74")]
	public string itemDescription;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float cooldownTime;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float warmupTime;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float randomWarmup;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float heatLevel;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float heatPerFire;

	[Token(Token = "0x40006A6")]
	private const float heatDissipationPerSec = 0.1f;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float startingCooldownOverride;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int shotsInVolley;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int volleyShotsFired;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int multiShotsFired;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float repairTime;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject storeItemModelOverride;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool foundInStore;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float health;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public float maxHealth;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7EBC", Offset = "0x6D7EBC")]
	public int multishots;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7EF4", Offset = "0x6D7EF4")]
	public bool chainFire;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7F2C", Offset = "0x6D7F2C")]
	public bool startsReady;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7F64", Offset = "0x6D7F64")]
	public bool ignoreForAttackRange;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7F9C", Offset = "0x6D7F9C")]
	public bool playHapticsOnFire;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int hapticId;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float energyCost;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int buyCost;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D7FD4", Offset = "0x6D7FD4")]
	public int upgradeCost;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public TriggerType itemTriggerType;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SizePreference itemTargetSize;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public CausesDebuffType causesDebuff;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ItemType itemType;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public ItemEffectType effectType;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D800C", Offset = "0x6D800C")]
	public float itemEffectiveRange;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8044", Offset = "0x6D8044")]
	public float minimumRange;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float aimedMinimumAngle;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float aimInstability;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float calculatedItemEffectiveRange;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D808C", Offset = "0x6D808C")]
	public float targetAreaRadius;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float trackingSpeed;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected float trackingModifier;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public float trackingUpgrade;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public DamageOrder damageOrder;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool forceShipTarget;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected SpaceUnit previousShipTarget;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool noAim;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool needsClearArea;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool canDamage;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	protected bool manualUnsetTarget;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public HardPoint hardPoint;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float lastFiringTime;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool requiresBigGunHardpoint;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool dependsOnEngines;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public SpaceUnit ship;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	private bool _targetSet;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public SpaceUnit itemTargetShip;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public Vector3 itemTargetArea;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[HideInInspector]
	public Quaternion itemTargetRotation;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[HideInInspector]
	public float targetSetExpiration;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool targetRotationMatters;

	[NonSerialized]
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public float projectileSpeed;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool targetsAllNearby;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public uint level;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected UpgradeModifiers currentModifiers;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static UpgradeModifiers _modifiersEmpty;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string specialToken;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected SpaceUnit[] nearbyShips;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool setsShipTarget;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool setsLookTarget;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	public bool lineShowsDirection;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	public bool indicateThingsInPath;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool isRecoverable;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	public bool importantTarget;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected float thinkDelay;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float _thinkDelayTime;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float lastAcquireTargetTime;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected ItemButton _currentButton;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected GameObject _currentSpecialStatusUI;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected GameObject hullFire;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public DamageTypes damageTypeToShow;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public SpaceUnit.BuffTypes buffTypeToShow;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected bool _initializedBase;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _minDotForAim;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public ShipItem upgradePathItem;

	[Token(Token = "0x17000062")]
	[HideInInspector]
	public bool targetSet
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0xD53418", Offset = "0xD53418", VA = "0xD53418")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071E")]
		[Address(RVA = "0xD533D8", Offset = "0xD533D8", VA = "0xD533D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xD53420", Offset = "0xD53420", VA = "0xD53420")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD53424", Offset = "0xD53424", VA = "0xD53424")]
	public void Init()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD49D54", Offset = "0xD49D54", VA = "0xD49D54", Slot = "12")]
	public virtual void OnCreated()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD53B9C", Offset = "0xD53B9C", VA = "0xD53B9C", Slot = "13")]
	public virtual void InitItemSettings()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xD53BA0", Offset = "0xD53BA0", VA = "0xD53BA0")]
	public void OnAttached(HardPoint hp)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xD53CB0", Offset = "0xD53CB0", VA = "0xD53CB0", Slot = "14")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xD53DB8", Offset = "0xD53DB8", VA = "0xD53DB8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xD53DBC", Offset = "0xD53DBC", VA = "0xD53DBC")]
	public void AcquireTarget()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xD540DC", Offset = "0xD540DC", VA = "0xD540DC")]
	public void SetShipTarget(SpaceUnit targ)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xD53F54", Offset = "0xD53F54", VA = "0xD53F54")]
	public bool IsTargetValid(SpaceUnit target)
	{
		return default(bool);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xD49DB4", Offset = "0xD49DB4", VA = "0xD49DB4", Slot = "15")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xD543CC", Offset = "0xD543CC", VA = "0xD543CC")]
	public void TimerCooldownElapsed()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xD545A4", Offset = "0xD545A4", VA = "0xD545A4")]
	public void TimerWarmupElapsed()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xD54984", Offset = "0xD54984", VA = "0xD54984")]
	public void TimerRepairElapsed()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xD549F8", Offset = "0xD549F8", VA = "0xD549F8", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xD549FC", Offset = "0xD549FC", VA = "0xD549FC", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xD54A00", Offset = "0xD54A00", VA = "0xD54A00", Slot = "9")]
	public override void OnRepaired()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xD54A04", Offset = "0xD54A04", VA = "0xD54A04", Slot = "10")]
	public override void OnFinishedFiring()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD54A08", Offset = "0xD54A08", VA = "0xD54A08", Slot = "11")]
	public override void OnAppear()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD54A0C", Offset = "0xD54A0C", VA = "0xD54A0C")]
	public void Disable(float time)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xD54BD4", Offset = "0xD54BD4", VA = "0xD54BD4")]
	public bool IsDamaged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xD54BE4", Offset = "0xD54BE4", VA = "0xD54BE4")]
	public void Damage(float amt)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xD55168", Offset = "0xD55168", VA = "0xD55168")]
	public void UpdateRangeOrientation(Vector3 position)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xD538B8", Offset = "0xD538B8", VA = "0xD538B8")]
	public void UpdateStats()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xD55118", Offset = "0xD55118", VA = "0xD55118")]
	public bool BeginRepair()
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xD5516C", Offset = "0xD5516C", VA = "0xD5516C")]
	public void CombatInit()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD55560", Offset = "0xD55560", VA = "0xD55560", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xD55564", Offset = "0xD55564", VA = "0xD55564", Slot = "6")]
	public override void Preload()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xD555F0", Offset = "0xD555F0", VA = "0xD555F0")]
	private void PreloadAsset()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xD555FC", Offset = "0xD555FC", VA = "0xD555FC")]
	public bool IsMiniButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xD556A4", Offset = "0xD556A4", VA = "0xD556A4", Slot = "16")]
	public virtual void CreateItemButton()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xD55A9C", Offset = "0xD55A9C", VA = "0xD55A9C")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xD55BAC", Offset = "0xD55BAC", VA = "0xD55BAC", Slot = "17")]
	public virtual bool ItemSpecificRequirementsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xD541EC", Offset = "0xD541EC", VA = "0xD541EC")]
	public CanFireCode CanFire()
	{
		return default(CanFireCode);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xD55BB4", Offset = "0xD55BB4", VA = "0xD55BB4")]
	public string CanFireCodeToString(CanFireCode c)
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xD55C74", Offset = "0xD55C74", VA = "0xD55C74", Slot = "18")]
	public virtual void TriggerItem()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xD55E40", Offset = "0xD55E40", VA = "0xD55E40", Slot = "19")]
	public virtual void BeginFiring()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xD54078", Offset = "0xD54078", VA = "0xD54078")]
	public bool IsFoeItem()
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xD56084", Offset = "0xD56084", VA = "0xD56084", Slot = "20")]
	public virtual bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xD562EC", Offset = "0xD562EC", VA = "0xD562EC", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xD545A8", Offset = "0xD545A8", VA = "0xD545A8")]
	private void DoFire()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xD4B9A8", Offset = "0xD4B9A8", VA = "0xD4B9A8", Slot = "21")]
	public virtual bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xD562F0", Offset = "0xD562F0", VA = "0xD562F0", Slot = "22")]
	public virtual float MitigateDamage(float amount, DamageTypes t, Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xD562F4", Offset = "0xD562F4", VA = "0xD562F4")]
	public UpgradeModifiers GetModifiers()
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xD562FC", Offset = "0xD562FC", VA = "0xD562FC")]
	public string RangeToFriendlyText(float r)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xD56484", Offset = "0xD56484", VA = "0xD56484", Slot = "23")]
	public virtual string GetStatsLabels()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xD564C8", Offset = "0xD564C8", VA = "0xD564C8", Slot = "24")]
	public virtual string GetStatsText()
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xD5650C", Offset = "0xD5650C", VA = "0xD5650C", Slot = "25")]
	public virtual ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xD5672C", Offset = "0xD5672C", VA = "0xD5672C", Slot = "26")]
	public virtual ItemStatSection GetStat2()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xD568F0", Offset = "0xD568F0", VA = "0xD568F0")]
	public bool IsItemWithinTier()
	{
		return default(bool);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xD56970", Offset = "0xD56970", VA = "0xD56970")]
	public bool HasAccessToItem()
	{
		return default(bool);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xD56B1C", Offset = "0xD56B1C", VA = "0xD56B1C")]
	public bool IsAchievementLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD56BB0", Offset = "0xD56BB0", VA = "0xD56BB0")]
	public GameObject GetItemButton()
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD56C40", Offset = "0xD56C40", VA = "0xD56C40")]
	public int GetSellPrice()
	{
		return default(int);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD56C54", Offset = "0xD56C54", VA = "0xD56C54", Slot = "27")]
	public virtual float CalculateDPS()
	{
		return default(float);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD56C5C", Offset = "0xD56C5C", VA = "0xD56C5C")]
	public static string GetBackIconPrefabName(ItemType _itemType, bool bigSpecial)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xD4B418", Offset = "0xD4B418", VA = "0xD4B418")]
	public ShipItem()
	{
	}
}
[Token(Token = "0x200014E")]
public class ShipSetTarget : ShipItem
{
	[Token(Token = "0x600075B")]
	[Address(RVA = "0xCF7B0C", Offset = "0xCF7B0C", VA = "0xCF7B0C", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xCF7D14", Offset = "0xCF7D14", VA = "0xCF7D14", Slot = "11")]
	public override void OnAppear()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xCF7E28", Offset = "0xCF7E28", VA = "0xCF7E28")]
	public ShipSetTarget()
	{
	}
}
[Token(Token = "0x200014F")]
public class ShipToggleAI : ShipItem
{
	[Token(Token = "0x600075E")]
	[Address(RVA = "0xCF7E8C", Offset = "0xCF7E8C", VA = "0xCF7E8C", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xCF7F30", Offset = "0xCF7F30", VA = "0xCF7F30", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xCF7E90", Offset = "0xCF7E90", VA = "0xCF7E90")]
	public void UpdateToggleState()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xCF7F54", Offset = "0xCF7F54", VA = "0xCF7F54", Slot = "11")]
	public override void OnAppear()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xCF7F58", Offset = "0xCF7F58", VA = "0xCF7F58")]
	public ShipToggleAI()
	{
	}
}
[Token(Token = "0x2000150")]
public class StatusItem : ShipItem
{
	[Token(Token = "0x2000151")]
	public enum AITriggerType
	{
		[Token(Token = "0x4000734")]
		None,
		[Token(Token = "0x4000735")]
		Flank,
		[Token(Token = "0x4000736")]
		Flee,
		[Token(Token = "0x4000737")]
		Tail
	}

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public DamageID buffDamageID;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SpaceUnit.ShipBuff buff2;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public AITriggerType aiTrigger;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xBB0E44", Offset = "0xBB0E44", VA = "0xBB0E44", Slot = "19")]
	public override void BeginFiring()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xBB0F50", Offset = "0xBB0F50", VA = "0xBB0F50", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xBB0FF0", Offset = "0xBB0FF0", VA = "0xBB0FF0", Slot = "7")]
	public override void OnDamaged()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xBB1058", Offset = "0xBB1058", VA = "0xBB1058", Slot = "8")]
	public override void OnDisabled()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xBB10C0", Offset = "0xBB10C0", VA = "0xBB10C0")]
	public StatusItem()
	{
	}
}
[Token(Token = "0x2000152")]
public class SwapperItem : ShipItem
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject explosionPrefab;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xBB8D94", Offset = "0xBB8D94", VA = "0xBB8D94", Slot = "4")]
	public override void CombatInitExtra()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xBB8DB4", Offset = "0xBB8DB4", VA = "0xBB8DB4", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xBB9150", Offset = "0xBB9150", VA = "0xBB9150", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xBB9260", Offset = "0xBB9260", VA = "0xBB9260")]
	public SwapperItem()
	{
	}
}
[Token(Token = "0x2000153")]
public class TargetButton : GrabbableObject
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject tokenIcon;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpaceUnit ship;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xBBACC4", Offset = "0xBBACC4", VA = "0xBBACC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xBBAD80", Offset = "0xBBAD80", VA = "0xBBAD80", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xBBB03C", Offset = "0xBBB03C", VA = "0xBBB03C", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xBBB040", Offset = "0xBBB040", VA = "0xBBB040", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xBBB1F0", Offset = "0xBBB1F0", VA = "0xBBB1F0")]
	public void SetShip(SpaceUnit s)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xBBAF70", Offset = "0xBBAF70", VA = "0xBBAF70")]
	private GameObject getToken()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xBBB2DC", Offset = "0xBBB2DC", VA = "0xBBB2DC")]
	public TargetButton()
	{
	}
}
[Token(Token = "0x2000154")]
public class ThrustItem : ShipItem
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float firingTimeLeft;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float firingTime;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xC5EAF8", Offset = "0xC5EAF8", VA = "0xC5EAF8", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xC5EB0C", Offset = "0xC5EB0C", VA = "0xC5EB0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xC5EBF4", Offset = "0xC5EBF4", VA = "0xC5EBF4", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xC5EC00", Offset = "0xC5EC00", VA = "0xC5EC00")]
	public ThrustItem()
	{
	}
}
[Token(Token = "0x2000155")]
public class JumpGate : SpaceUnit
{
	[Token(Token = "0x2000156")]
	public enum CaptureState
	{
		[Token(Token = "0x4000747")]
		Neutral,
		[Token(Token = "0x4000748")]
		Capturing,
		[Token(Token = "0x4000749")]
		Captured
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public CaptureState captureState;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68C")]
	public float capturedFraction;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public float summonFraction;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x694")]
	public float captureRadius;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	public GameObject vortex;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public Material vortexMat;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	private float thinkDelay;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6AC")]
	private float thinkDelayLeft;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xE73E18", Offset = "0xE73E18", VA = "0xE73E18", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xE73FBC", Offset = "0xE73FBC", VA = "0xE73FBC")]
	public void DoCapturing()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xE73F00", Offset = "0xE73F00", VA = "0xE73F00")]
	private void UpdateCaptureState()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xE74294", Offset = "0xE74294", VA = "0xE74294")]
	private void ModifyCapture(float amt, int modifierTeam)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xE74330", Offset = "0xE74330", VA = "0xE74330", Slot = "23")]
	public override void Damage(float amt, DamageTypes t, DamageID damageID, Vector3 pos, Vector3 normal, ShipBuff buff, SpaceUnit attacker, Vector3 direction)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xE74350", Offset = "0xE74350", VA = "0xE74350")]
	public JumpGate()
	{
	}
}
[Token(Token = "0x2000157")]
public class LaunchForce : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float launchForce;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool launch;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xE75374", Offset = "0xE75374", VA = "0xE75374")]
	private void Restart()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xE75380", Offset = "0xE75380", VA = "0xE75380")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xE75420", Offset = "0xE75420", VA = "0xE75420")]
	public LaunchForce()
	{
	}
}
[Token(Token = "0x2000158")]
public class LightningBurst : MonoBehaviour
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material lightningMat;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light light1;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lightningQuad;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lifeLeft;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xE781F0", Offset = "0xE781F0", VA = "0xE781F0")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xE783C4", Offset = "0xE783C4", VA = "0xE783C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xE784AC", Offset = "0xE784AC", VA = "0xE784AC")]
	public LightningBurst()
	{
	}
}
[Token(Token = "0x2000159")]
public class LockPosition : MonoBehaviour
{
	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x9C278C", Offset = "0x9C278C", VA = "0x9C278C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x9C27E4", Offset = "0x9C27E4", VA = "0x9C27E4")]
	public LockPosition()
	{
	}
}
[Token(Token = "0x200015A")]
public class LookAtObject : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x9C5CA4", Offset = "0x9C5CA4", VA = "0x9C5CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x9C5CF4", Offset = "0x9C5CF4", VA = "0x9C5CF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6DD844", Offset = "0x6DD844")]
	private void LookAtTarget()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9C5DC0", Offset = "0x9C5DC0", VA = "0x9C5DC0")]
	public LookAtObject()
	{
	}
}
[Token(Token = "0x200015B")]
public class ManagementUI : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	public enum ManagementUIScreen
	{
		[Token(Token = "0x400075B")]
		Hidden,
		[Token(Token = "0x400075C")]
		Equipment,
		[Token(Token = "0x400075D")]
		Repair,
		[Token(Token = "0x400075E")]
		Mission,
		[Token(Token = "0x400075F")]
		Store,
		[Token(Token = "0x4000760")]
		Settings,
		[Token(Token = "0x4000761")]
		Infopedia
	}

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TravelMenu travelMenuUI;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipUpgradeUI upgradeUI;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StoreMenuManager storeUI;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SystemMenuManager systemUI;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InfopediaManager infopediaUI;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StandardButtonObject storeNavButton;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject storeButtonParticles;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ManagementUIScreen currentScreen;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x9C6564", Offset = "0x9C6564", VA = "0x9C6564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x9C6628", Offset = "0x9C6628", VA = "0x9C6628")]
	public void Show()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x9C6840", Offset = "0x9C6840", VA = "0x9C6840")]
	public void SetStoreButtonState()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9C697C", Offset = "0x9C697C", VA = "0x9C697C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x9C69C8", Offset = "0x9C69C8", VA = "0x9C69C8")]
	public void HideUI()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x9C6ABC", Offset = "0x9C6ABC", VA = "0x9C6ABC")]
	public bool AnyPagesBusy()
	{
		return default(bool);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x9C6AD8", Offset = "0x9C6AD8", VA = "0x9C6AD8")]
	public void Int_SetUIUpgrade([Optional] SpaceUnit unit, bool equipMode = true)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9C6C44", Offset = "0x9C6C44", VA = "0x9C6C44")]
	public void SetUIUpgrade()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x9C6C50", Offset = "0x9C6C50", VA = "0x9C6C50")]
	public void SetUITravel()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x9C6D1C", Offset = "0x9C6D1C", VA = "0x9C6D1C")]
	public void SetUISystem()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x9C6DE8", Offset = "0x9C6DE8", VA = "0x9C6DE8")]
	public void SetUIStore()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x9C6F00", Offset = "0x9C6F00", VA = "0x9C6F00")]
	public void SetUIInfopedia()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x9C6FCC", Offset = "0x9C6FCC", VA = "0x9C6FCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x9C7024", Offset = "0x9C7024", VA = "0x9C7024")]
	public ManagementUI()
	{
	}
}
[Token(Token = "0x200015D")]
public class MessageOnScanned : MonoBehaviour
{
	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpaceUnit unit;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string messageTitleKey;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string messageDescKey;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x9CDAA4", Offset = "0x9CDAA4", VA = "0x9CDAA4")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x9CDB0C", Offset = "0x9CDB0C", VA = "0x9CDB0C")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x9CDBD0", Offset = "0x9CDBD0", VA = "0x9CDBD0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x9CDD58", Offset = "0x9CDD58", VA = "0x9CDD58")]
	public MessageOnScanned()
	{
	}
}
[Token(Token = "0x200015E")]
public class MoneyTextController : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float riseRate;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tm;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xC1C57C", Offset = "0xC1C57C", VA = "0xC1C57C")]
	private void Start()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xC1C580", Offset = "0xC1C580", VA = "0xC1C580")]
	private void Update()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xC1C67C", Offset = "0xC1C67C", VA = "0xC1C67C")]
	public void Setup(float amt, Color c, bool currency = false)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xC1C830", Offset = "0xC1C830", VA = "0xC1C830")]
	public MoneyTextController()
	{
	}
}
[Token(Token = "0x200015F")]
public class MyCam : GrabbableObject
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject head;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject controller1;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject controller2;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject focusObject;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector3 offset;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 initialControllerForward;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion initialCameraOrientation;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 grabOffset;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Vector3 cameraHeight;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float orbitDistance;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xC214BC", Offset = "0xC214BC", VA = "0xC214BC", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xC21594", Offset = "0xC21594", VA = "0xC21594", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xC2160C", Offset = "0xC2160C", VA = "0xC2160C", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xC21610", Offset = "0xC21610", VA = "0xC21610")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xC218F0", Offset = "0xC218F0", VA = "0xC218F0")]
	public MyCam()
	{
	}
}
[Token(Token = "0x2000160")]
public class MyCamOld : MonoBehaviour
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject head;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller2;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject focusObject;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 cameraHeight;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float orbitDistance;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xC21940", Offset = "0xC21940", VA = "0xC21940")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xC21944", Offset = "0xC21944", VA = "0xC21944")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xC21DD4", Offset = "0xC21DD4", VA = "0xC21DD4")]
	public MyCamOld()
	{
	}
}
[Token(Token = "0x2000161")]
public class MyOVRFade : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D56E0", Offset = "0x6D56E0")]
	private sealed class <FadeUpdateCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyOVRFade <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x937764", Offset = "0x937764", VA = "0x937764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x9377AC", Offset = "0x9377AC", VA = "0x9377AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x93759C", Offset = "0x93759C", VA = "0x93759C")]
		[DebuggerHidden]
		public <FadeUpdateCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x9375C8", Offset = "0x9375C8", VA = "0x9375C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x9375CC", Offset = "0x9375CC", VA = "0x9375CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x93776C", Offset = "0x93776C", VA = "0x93776C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8154", Offset = "0x6D8154")]
	public float fadeTime;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D818C", Offset = "0x6D818C")]
	public Color currentFadeColor;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color fadeStart;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color fadeEnd;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fadeFactor;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeRate;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool fadeOnStart;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int renderQueue;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material fadeMaterial;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D81C4", Offset = "0x6D81C4")]
	private bool <isFading>k__BackingField;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool startFaded;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float fadeInDelay;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator currentFadeCo;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent fadeCompleteEvent;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool fadeRunning;

	[Token(Token = "0x17000063")]
	public bool isFading
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xC21F04", Offset = "0xC21F04", VA = "0xC21F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD87C", Offset = "0x6DD87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xC21F0C", Offset = "0xC21F0C", VA = "0xC21F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DD88C", Offset = "0x6DD88C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xC21F18", Offset = "0xC21F18", VA = "0xC21F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xC2245C", Offset = "0xC2245C", VA = "0xC2245C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xC22498", Offset = "0xC22498", VA = "0xC22498")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xC224CC", Offset = "0xC224CC", VA = "0xC224CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xC224D0", Offset = "0xC224D0", VA = "0xC224D0")]
	public void FadeOut(float len = 3f)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xC224B8", Offset = "0xC224B8", VA = "0xC224B8")]
	public void FadeIn(float len = 3f)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xC2252C", Offset = "0xC2252C", VA = "0xC2252C")]
	public void SetFadeTarget(float level, Color _fadeColor, float fadeDuration = 3f)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xC22604", Offset = "0xC22604", VA = "0xC22604")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xC22608", Offset = "0xC22608", VA = "0xC22608")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xC2258C", Offset = "0xC2258C", VA = "0xC2258C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD89C", Offset = "0x6DD89C")]
	private IEnumerator FadeUpdateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xC22768", Offset = "0xC22768", VA = "0xC22768")]
	public bool IsFadeUpdating()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xC2234C", Offset = "0xC2234C", VA = "0xC2234C")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xC22770", Offset = "0xC22770", VA = "0xC22770")]
	public MyOVRFade()
	{
	}
}
[Token(Token = "0x2000163")]
public class NavPoint : StandardButtonObject
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject sphere;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro label;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro timerLabel;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _isScanGoal;

	[Token(Token = "0x17000066")]
	public bool isScanGoal
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xC23728", Offset = "0xC23728", VA = "0xC23728")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xC23730", Offset = "0xC23730", VA = "0xC23730")]
		set
		{
		}
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xC237A4", Offset = "0xC237A4", VA = "0xC237A4", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xC238AC", Offset = "0xC238AC", VA = "0xC238AC", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xC238B0", Offset = "0xC238B0", VA = "0xC238B0")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xC23AC8", Offset = "0xC23AC8", VA = "0xC23AC8")]
	public NavPoint()
	{
	}
}
[Token(Token = "0x2000164")]
public class NebulaManager : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PAParticleField[] clouds;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LightningBurst[] lightning;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float nextBurst;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool ionStorm;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color nebulaColor;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xC23AE0", Offset = "0xC23AE0", VA = "0xC23AE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC23B74", Offset = "0xC23B74", VA = "0xC23B74")]
	public void Show(bool _ionStorms = false)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xC23C5C", Offset = "0xC23C5C", VA = "0xC23C5C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC23C84", Offset = "0xC23C84", VA = "0xC23C84")]
	public void Update()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC23E4C", Offset = "0xC23E4C", VA = "0xC23E4C")]
	public NebulaManager()
	{
	}
}
[Token(Token = "0x2000165")]
public class OculusPlatform : MonoBehaviour
{
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC2D310", Offset = "0xC2D310", VA = "0xC2D310")]
	public OculusPlatform()
	{
	}
}
[Token(Token = "0x2000166")]
public class Oscilloscope : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer line;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateDelay;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] scopePositions;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] audioData;

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC2D8E8", Offset = "0xC2D8E8", VA = "0xC2D8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC2D944", Offset = "0xC2D944", VA = "0xC2D944")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC2DA24", Offset = "0xC2DA24", VA = "0xC2DA24")]
	public Oscilloscope()
	{
	}
}
[Token(Token = "0x2000167")]
public class OverviewCamera : MonoBehaviour
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float nextUpdateTime;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float targetExpiresTime;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Bounds shipBounds;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject targetObject;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x12803D0", Offset = "0x12803D0", VA = "0x12803D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x128042C", Offset = "0x128042C", VA = "0x128042C")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1280768", Offset = "0x1280768", VA = "0x1280768")]
	public void SetTargetObject(GameObject go, float t = 6f)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x12807AC", Offset = "0x12807AC", VA = "0x12807AC")]
	public void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1280C44", Offset = "0x1280C44", VA = "0x1280C44")]
	public OverviewCamera()
	{
	}
}
[Token(Token = "0x2000168")]
public class PhoneCamFollower : MonoBehaviour
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject head;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x128F664", Offset = "0x128F664", VA = "0x128F664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x128F81C", Offset = "0x128F81C", VA = "0x128F81C")]
	public PhoneCamFollower()
	{
	}
}
[Token(Token = "0x2000169")]
public class PlayOnStart : MonoBehaviour
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volume;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool priority;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool affectedByTime;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rangeModifier;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip nearClip;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip farClip;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x12910A4", Offset = "0x12910A4", VA = "0x12910A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x12910A8", Offset = "0x12910A8", VA = "0x12910A8")]
	private void Restart()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1291148", Offset = "0x1291148", VA = "0x1291148")]
	public void PreloadAsset()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x129122C", Offset = "0x129122C", VA = "0x129122C")]
	public PlayOnStart()
	{
	}
}
[Token(Token = "0x200016A")]
public class PointerFinger : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitGrabberController controller;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA65AF0", Offset = "0xA65AF0", VA = "0xA65AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA65B7C", Offset = "0xA65B7C", VA = "0xA65B7C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA65C6C", Offset = "0xA65C6C", VA = "0xA65C6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA65DA4", Offset = "0xA65DA4", VA = "0xA65DA4")]
	public PointerFinger()
	{
	}
}
[Token(Token = "0x200016B")]
public class PoseStartBtn : StandardButtonObject
{
	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject main;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA66858", Offset = "0xA66858", VA = "0xA66858", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA668CC", Offset = "0xA668CC", VA = "0xA668CC")]
	public PoseStartBtn()
	{
	}
}
[Token(Token = "0x200016C")]
public class PoseStopBtn : StandardButtonObject
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject main;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xA668D4", Offset = "0xA668D4", VA = "0xA668D4", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xA6692C", Offset = "0xA6692C", VA = "0xA6692C")]
	public PoseStopBtn()
	{
	}
}
[Token(Token = "0x200016D")]
public class Preloader : MonoBehaviour
{
	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xA67200", Offset = "0xA67200", VA = "0xA67200")]
	private void AddToPreloads(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xA67204", Offset = "0xA67204", VA = "0xA67204")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xA67208", Offset = "0xA67208", VA = "0xA67208")]
	public Preloader()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D56F0", Offset = "0x6D56F0")]
public class ProgressArc : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sections;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float value;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA67210", Offset = "0xA67210", VA = "0xA67210")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA67590", Offset = "0xA67590", VA = "0xA67590")]
	public void SetValue(float v)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA675BC", Offset = "0xA675BC", VA = "0xA675BC")]
	public void SetMaterial(Material m)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xA675D8", Offset = "0xA675D8", VA = "0xA675D8")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xA67604", Offset = "0xA67604", VA = "0xA67604")]
	public void SetColors(Color color1, Color color2)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xA6744C", Offset = "0xA6744C", VA = "0xA6744C")]
	public void DrawMe()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xA67620", Offset = "0xA67620", VA = "0xA67620")]
	public ProgressArc()
	{
	}
}
[Token(Token = "0x200016F")]
public class ProgressBar : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform barFilled;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform barChange;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject edge;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer barChangeRenderer;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer barFilledRenderer;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color positiveChange;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color negativeChange;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color dangerCol;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color normalCol;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float value;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float dangerZone;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float oldValue;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float laggedValue;

	[Token(Token = "0x40007BB")]
	private const float edgeHideThresh = 0.95f;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool animating;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool blinkOn;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xA67638", Offset = "0xA67638", VA = "0xA67638")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xA6763C", Offset = "0xA6763C", VA = "0xA6763C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xA6771C", Offset = "0xA6771C", VA = "0xA6771C")]
	private void SetAppearance()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xA677F4", Offset = "0xA677F4", VA = "0xA677F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xA67ACC", Offset = "0xA67ACC", VA = "0xA67ACC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xA67AD8", Offset = "0xA67AD8", VA = "0xA67AD8")]
	public void SetValue(float v)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xA6770C", Offset = "0xA6770C", VA = "0xA6770C")]
	public void FinishAnimation()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xA67CA4", Offset = "0xA67CA4", VA = "0xA67CA4")]
	public ProgressBar()
	{
	}
}
[Token(Token = "0x2000170")]
public class ProgressBar2 : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer bar;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color positiveChange;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color negativeChange;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color dangerCol;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color normalCol;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color backColor;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float value;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float dangerZone;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float oldValue;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float fadeAmount;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float numTicks;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float transitionThickness;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float edgeThickness;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float laggedValue;

	[Token(Token = "0x40007CC")]
	private const float edgeHideThresh = 0.95f;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool animating;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool blinkOn;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool negChange;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xA67CB8", Offset = "0xA67CB8", VA = "0xA67CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xA67CBC", Offset = "0xA67CBC", VA = "0xA67CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xA67FA4", Offset = "0xA67FA4", VA = "0xA67FA4")]
	public void SetAppearance()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xA68140", Offset = "0xA68140", VA = "0xA68140")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xA683BC", Offset = "0xA683BC", VA = "0xA683BC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xA67F1C", Offset = "0xA67F1C", VA = "0xA67F1C")]
	public void SetValue(float v)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xA67F08", Offset = "0xA67F08", VA = "0xA67F08")]
	public void FinishAnimation()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xA683CC", Offset = "0xA683CC", VA = "0xA683CC")]
	public ProgressBar2()
	{
	}
}
[Token(Token = "0x2000171")]
public class Puppet : MonoBehaviour
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 scaler;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xA6B298", Offset = "0xA6B298", VA = "0xA6B298")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xA6B29C", Offset = "0xA6B29C", VA = "0xA6B29C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xA6B2A0", Offset = "0xA6B2A0", VA = "0xA6B2A0")]
	public Puppet()
	{
	}
}
[Token(Token = "0x2000172")]
public class RandomRotation : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 eulerRotation;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xA6CB44", Offset = "0xA6CB44", VA = "0xA6CB44")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xA6CB48", Offset = "0xA6CB48", VA = "0xA6CB48")]
	private void Restart()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xA6CBD4", Offset = "0xA6CBD4", VA = "0xA6CBD4")]
	public RandomRotation()
	{
	}
}
[Token(Token = "0x2000173")]
public class RandomSizeScale : MonoBehaviour
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minScale;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxScale;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xA6CBDC", Offset = "0xA6CBDC", VA = "0xA6CBDC")]
	private void Restart()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xA6CC5C", Offset = "0xA6CC5C", VA = "0xA6CC5C")]
	public RandomSizeScale()
	{
	}
}
[Token(Token = "0x2000174")]
public class RandomlyRotate : MonoBehaviour
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _rot;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xA6CFF4", Offset = "0xA6CFF4", VA = "0xA6CFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xA6CFF8", Offset = "0xA6CFF8", VA = "0xA6CFF8")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xA6D0D8", Offset = "0xA6D0D8", VA = "0xA6D0D8")]
	public RandomlyRotate()
	{
	}
}
[Token(Token = "0x2000175")]
public class RestartParticles : MonoBehaviour
{
	[Token(Token = "0x6000802")]
	[Address(RVA = "0xA6F270", Offset = "0xA6F270", VA = "0xA6F270")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xA6F330", Offset = "0xA6F330", VA = "0xA6F330")]
	public RestartParticles()
	{
	}
}
[Token(Token = "0x2000176")]
public class Scannable : MonoBehaviour
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressArc progressArc;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text scannableLabel;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float thinkTime;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float captureTime;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float captureRadius;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool noEnemies;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool isCaptured;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool isCapturing;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpaceUnit myUnit;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent capturedEvent;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource capturingSource;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xA711D4", Offset = "0xA711D4", VA = "0xA711D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA712B4", Offset = "0xA712B4", VA = "0xA712B4")]
	public SpaceUnit getUnit()
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA712BC", Offset = "0xA712BC", VA = "0xA712BC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA71330", Offset = "0xA71330", VA = "0xA71330")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA71360", Offset = "0xA71360", VA = "0xA71360")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA712C0", Offset = "0xA712C0", VA = "0xA712C0")]
	public void Init()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA71390", Offset = "0xA71390", VA = "0xA71390")]
	private void Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA71860", Offset = "0xA71860", VA = "0xA71860")]
	public Scannable()
	{
	}
}
[Token(Token = "0x2000177")]
public class EndlessModeAssets : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000178")]
	public class FactionMatrixRow
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool[] isEnemy;

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x9FED10", Offset = "0x9FED10", VA = "0x9FED10")]
		public FactionMatrixRow()
		{
		}
	}

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionList missions;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipList shipsSO;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EndlessModeFleet[] fleets;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xB44BD8", Offset = "0xB44BD8", VA = "0xB44BD8")]
	public EndlessModeFleet GetFleet(SpaceBattleManager.FactionsEnum faction)
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB44C40", Offset = "0xB44C40", VA = "0xB44C40")]
	public EndlessModeAssets()
	{
	}
}
[Token(Token = "0x2000179")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5750", Offset = "0x6D5750")]
public class EndlessModeFleet : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5794", Offset = "0x6D5794")]
	private sealed class <>c
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<ShipLoadout, int> <>9__3_0;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x9FEDDC", Offset = "0x9FEDDC", VA = "0x9FEDDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x9FEDE4", Offset = "0x9FEDE4", VA = "0x9FEDE4")]
		internal int <GetLowestScore>b__3_0(ShipLoadout l)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpaceBattleManager.FactionsEnum faction;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FleetNode.FormationType formation;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ShipLoadout> loadouts;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB46D08", Offset = "0xB46D08", VA = "0xB46D08")]
	public int GetLowestScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB46E58", Offset = "0xB46E58", VA = "0xB46E58")]
	public EndlessModeFleet()
	{
	}
}
[Token(Token = "0x200017B")]
public enum EndlessModeMissionTypes
{
	[Token(Token = "0x40007EC")]
	Attack,
	[Token(Token = "0x40007ED")]
	Protect,
	[Token(Token = "0x40007EE")]
	Explore,
	[Token(Token = "0x40007EF")]
	Scan,
	[Token(Token = "0x40007F0")]
	TimedAttack,
	[Token(Token = "0x40007F1")]
	Survive,
	[Token(Token = "0x40007F2")]
	Ambush,
	[Token(Token = "0x40007F3")]
	HardBattle,
	[Token(Token = "0x40007F4")]
	TierBoss,
	[Token(Token = "0x40007F5")]
	FinalBoss,
	[Token(Token = "0x40007F6")]
	Respite,
	[Token(Token = "0x40007F7")]
	RiskReward,
	[Token(Token = "0x40007F8")]
	Reward,
	[Token(Token = "0x40007F9")]
	Store,
	[Token(Token = "0x40007FA")]
	StoreNowBattleLater,
	[Token(Token = "0x40007FB")]
	BattleNowRewardLater,
	[Token(Token = "0x40007FC")]
	GainShip
}
[Token(Token = "0x200017C")]
public enum EndlessModeRewardTypes
{
	[Token(Token = "0x40007FE")]
	Res,
	[Token(Token = "0x40007FF")]
	Scrap,
	[Token(Token = "0x4000800")]
	ChoiceOfItem,
	[Token(Token = "0x4000801")]
	Mercenary,
	[Token(Token = "0x4000802")]
	Item,
	[Token(Token = "0x4000803")]
	RareItem
}
[Token(Token = "0x200017D")]
public enum EndlessModeModifiers
{
	[Token(Token = "0x4000805")]
	ExtraMoney,
	[Token(Token = "0x4000806")]
	EnemyDamage2x,
	[Token(Token = "0x4000807")]
	PlayerDamage2x,
	[Token(Token = "0x4000808")]
	SystemsCanBeDestroyed,
	[Token(Token = "0x4000809")]
	LessScrap,
	[Token(Token = "0x400080A")]
	NoInflightRepairs,
	[Token(Token = "0x400080B")]
	HiddenChoices,
	[Token(Token = "0x400080C")]
	StrongerEnemyFleets,
	[Token(Token = "0x400080D")]
	NoPermadeath,
	[Token(Token = "0x400080E")]
	OneAlly,
	[Token(Token = "0x400080F")]
	NoAlly
}
[Serializable]
[Token(Token = "0x200017E")]
public class EndlessModeSettings
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int runLength;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SpaceBattleManager.FactionsEnum playerFaction;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] modifierFlags;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] friendlyFactionFlags;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpaceBattleManager.FactionsEnum[] friendlyFactions;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpaceBattleManager.FactionsEnum[] enemyFactions;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceBattleManager.FactionsEnum[] neutralFactions;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float calculatedScoreModifier;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xB47E98", Offset = "0xB47E98", VA = "0xB47E98")]
	public bool GetModifier(EndlessModeModifiers m)
	{
		return default(bool);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xB49D84", Offset = "0xB49D84", VA = "0xB49D84")]
	public void SetModifier(EndlessModeModifiers m, bool b)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xB49DCC", Offset = "0xB49DCC", VA = "0xB49DCC")]
	public static float GetScoreModifier(EndlessModeModifiers mod)
	{
		return default(float);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xB4638C", Offset = "0xB4638C", VA = "0xB4638C")]
	public float GetTotalScoreModifier()
	{
		return default(float);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xB49DEC", Offset = "0xB49DEC", VA = "0xB49DEC")]
	public void ResetFactions()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xB44D78", Offset = "0xB44D78", VA = "0xB44D78")]
	public void CreateFactionLists()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xB49CE4", Offset = "0xB49CE4", VA = "0xB49CE4")]
	public EndlessModeSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200017F")]
public class EndlessModeMissionChoices
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MissionNodeData> choices;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xB46E60", Offset = "0xB46E60", VA = "0xB46E60")]
	public EndlessModeMissionChoices()
	{
	}
}
[Serializable]
[Token(Token = "0x2000180")]
public class EndlessModeRunData
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int seed;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentMission;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndlessModeSettings settings;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EndlessModeMissionChoices> runData;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xB47DE0", Offset = "0xB47DE0", VA = "0xB47DE0")]
	public EndlessModeRunData()
	{
	}
}
[Token(Token = "0x2000181")]
public class EndlessModeRun
{
	[Token(Token = "0x2000182")]
	public enum ShipPickStrategy
	{
		[Token(Token = "0x400081E")]
		Random,
		[Token(Token = "0x400081F")]
		HighestPoints
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D57A4", Offset = "0x6D57A4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pointsMin;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pointsMax;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool noSmall;

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x9FEEB0", Offset = "0x9FEEB0", VA = "0x9FEEB0")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x9FEEB8", Offset = "0x9FEEB8", VA = "0x9FEEB8")]
		internal bool <PickShip>b__0(ShipLoadout loadout)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D57B4", Offset = "0x6D57B4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<ShipLoadout, int> <>9__5_1;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<ShipLoadout, int> <>9__5_2;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<ShipLoadout, int> <>9__5_3;

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x9FEE60", Offset = "0x9FEE60", VA = "0x9FEE60")]
		public <>c()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x9FEE68", Offset = "0x9FEE68", VA = "0x9FEE68")]
		internal int <PickShip>b__5_1(ShipLoadout loadout)
		{
			return default(int);
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x9FEE80", Offset = "0x9FEE80", VA = "0x9FEE80")]
		internal int <PickShip>b__5_2(ShipLoadout l)
		{
			return default(int);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x9FEE98", Offset = "0x9FEE98", VA = "0x9FEE98")]
		internal int <PickShip>b__5_3(ShipLoadout l)
		{
			return default(int);
		}
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xB46EE4", Offset = "0xB46EE4", VA = "0xB46EE4")]
	public static EndlessModeRunData CreateRunData(EndlessModeSettings settings, int difficulty = 1, [Optional] EndlessModeAssets endlessModeAssets)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xB47EE8", Offset = "0xB47EE8", VA = "0xB47EE8")]
	public static EndlessModeRunData CreateRunData_Test(EndlessModeSettings settings, int difficulty = 1, [Optional] EndlessModeAssets endlessModeAssets)
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB48250", Offset = "0xB48250", VA = "0xB48250")]
	public static void InsertHardBattle(EndlessModeRunData data, EndlessModeAssets endlessModeAssets, int turnNumber)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB48494", Offset = "0xB48494", VA = "0xB48494")]
	public static void InsertRespite(EndlessModeRunData data, EndlessModeAssets endlessModeAssets, int turnNumber)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB4867C", Offset = "0xB4867C", VA = "0xB4867C")]
	public static ShipLoadout PickShip(EndlessModeFleet fleetList, ShipPickStrategy strat, int pointsMax, int pointsMin, bool noSmall = false)
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB48A84", Offset = "0xB48A84", VA = "0xB48A84")]
	public static List<ShipData> GenerateProceduralFleet(int fleetStrength, SpaceBattleManager.FactionsEnum faction, List<SpaceBattleManager.FactionsEnum> factions, EndlessModeAssets endlessAssets)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB48F80", Offset = "0xB48F80", VA = "0xB48F80")]
	public static List<ShipData> SetupProceduralFleetNode(MissionNodeData missionMapNode, int totalMissionsCompleted, FleetNode node, EndlessModeRunData endlessModeRun, EndlessModeAssets endlessAssets)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB49850", Offset = "0xB49850", VA = "0xB49850")]
	public static void TestGeneration(EndlessModeAssets endlessModeAssets)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB49D7C", Offset = "0xB49D7C", VA = "0xB49D7C")]
	public EndlessModeRun()
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D57C4", Offset = "0x6D57C4")]
public class FactionList : ScriptableObject
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpaceBattleManager.FactionsEnum myFaction;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpaceBattleManager.FactionsEnum[] factions;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xB4CE24", Offset = "0xB4CE24", VA = "0xB4CE24")]
	public FactionList()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5808", Offset = "0x6D5808")]
public class MissionArc : ScriptableObject
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string arcName;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool randomOrder;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ScenarioCanvas> missions;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x9CE9D4", Offset = "0x9CE9D4", VA = "0x9CE9D4")]
	public MissionArc()
	{
	}
}
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D584C", Offset = "0x6D584C")]
public class MissionList : ScriptableObject
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ScenarioCanvas> finales;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MissionArc> missionArcs;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ScenarioCanvas> testMissions;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MissionArc demoArc;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ScenarioCanvas startScenario;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScenarioCanvas tutorialScenario;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScenarioCanvas blankScenario;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScenarioCanvas blankWithStore;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScenarioCanvas storeScenario;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] missionsPerTier;

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x9CEA30", Offset = "0x9CEA30", VA = "0x9CEA30")]
	public MissionList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000188")]
public class MissionNodeData
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string starName;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string scenarioTitle;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string scenarioGuid;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float y;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isUnlocked;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool completed;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool failed;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int timeLeft;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int seed;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int endlessFleetStrength;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasHazard;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public EndlessModeMissionTypes endlessMissionType;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpaceBattleManager.FactionsEnum enemyFaction;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public SpaceBattleManager.FactionsEnum friendlyFaction;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EndlessModeRewardTypes endlessReward;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x9D1408", Offset = "0x9D1408", VA = "0x9D1408")]
	public MissionNodeData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000189")]
public class MissionNode : MissionNodeData
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScenarioCanvas scenario;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x9D0CDC", Offset = "0x9D0CDC", VA = "0x9D0CDC")]
	public MissionNodeData ToData()
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x9CF4F8", Offset = "0x9CF4F8", VA = "0x9CF4F8")]
	public void FromData(MissionNodeData data)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x9CED50", Offset = "0x9CED50", VA = "0x9CED50")]
	public MissionNode()
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public class MissionMapData
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MissionNodeData> nodes;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> usedNames;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> completedMissions;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _tier;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool atStore;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpaceBattleManager.GameModes gameMode;

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x9D0CCC", Offset = "0x9D0CCC", VA = "0x9D0CCC")]
	public MissionMapData()
	{
	}
}
[Serializable]
[Token(Token = "0x200018B")]
public class MissionMap
{
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5890", Offset = "0x6D5890")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceBattleManager manager;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissionMap <>4__this;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<ScenarioCanvas, bool> <>9__0;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x936CD4", Offset = "0x936CD4", VA = "0x936CD4")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x936CDC", Offset = "0x936CDC", VA = "0x936CDC")]
		internal bool <Create>b__0(ScenarioCanvas mission)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58A0", Offset = "0x6D58A0")]
	private sealed class <>c__DisplayClass21_1
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScenarioCanvas mission;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x936F74", Offset = "0x936F74", VA = "0x936F74")]
		public <>c__DisplayClass21_1()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x936F7C", Offset = "0x936F7C", VA = "0x936F7C")]
		internal bool <Create>b__1(MissionNode x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58B0", Offset = "0x6D58B0")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string missionGUID;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<ScenarioCanvas> <>9__1;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x936FB0", Offset = "0x936FB0", VA = "0x936FB0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x936FB8", Offset = "0x936FB8", VA = "0x936FB8")]
		internal bool <FindScenario>b__1(ScenarioCanvas x)
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x936FDC", Offset = "0x936FDC", VA = "0x936FDC")]
		internal bool <FindScenario>b__0(ScenarioCanvas x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SpaceBattleManager.GameModes gameMode;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MissionNode> nodes;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionNode rootNode;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MissionNode currentNode;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<string> completedMissions;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> usedNames;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MissionArc> randomOrderArcs;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lastArcDrawn;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public int _tier;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MissionList missionList;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x9CEA38", Offset = "0x9CEA38", VA = "0x9CEA38")]
	public void SetMissionList(MissionList _missionList)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x9CEB40", Offset = "0x9CEB40", VA = "0x9CEB40")]
	public void InitMap(SpaceBattleManager.GameModes _gameMode, MissionList _missionList)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x9CED54", Offset = "0x9CED54", VA = "0x9CED54")]
	public void InitMapTutorial(MissionList _missionList)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x9CEF44", Offset = "0x9CEF44", VA = "0x9CEF44")]
	public void RemoveCompleted()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x9CF2A0", Offset = "0x9CF2A0", VA = "0x9CF2A0")]
	public void SetTier(int tier)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x9CF38C", Offset = "0x9CF38C", VA = "0x9CF38C")]
	public void EndlessMode_CreateScenario(MissionNodeData data, ScenarioCanvas sc, int cn = 0)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x9CF5B8", Offset = "0x9CF5B8", VA = "0x9CF5B8")]
	public void CreateScenario(ScenarioCanvas sc)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x9CF9F4", Offset = "0x9CF9F4", VA = "0x9CF9F4")]
	public void CreateStoreScenario()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x9CFA10", Offset = "0x9CFA10", VA = "0x9CFA10")]
	public void CreateFinalMission(int tier)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x9CFAB4", Offset = "0x9CFAB4", VA = "0x9CFAB4")]
	public void ProgressTime()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x9CFC9C", Offset = "0x9CFC9C", VA = "0x9CFC9C")]
	public void EndlessMode_Create(EndlessModeRunData endlessModeRunData, int currentMission)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x9D0258", Offset = "0x9D0258", VA = "0x9D0258")]
	public void Create(int num = 5)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x9D05C8", Offset = "0x9D05C8", VA = "0x9D05C8")]
	public ScenarioCanvas FindScenario(string missionGUID)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x9D0988", Offset = "0x9D0988", VA = "0x9D0988")]
	public MissionMapData ToData()
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x9D0EB4", Offset = "0x9D0EB4", VA = "0x9D0EB4")]
	public void MarkCompleted()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x9D0F98", Offset = "0x9D0F98", VA = "0x9D0F98")]
	public void FromData(MissionMapData data)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x9D130C", Offset = "0x9D130C", VA = "0x9D130C")]
	public MissionMap()
	{
	}
}
[Token(Token = "0x200018F")]
public class MissionProximityTrigger : MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useGOCenter;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 center;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScenarioNodeBase node;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToTrigger;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeElapsed;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float thinkDelay;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float thinkInterval;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool didTrigger;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NavPoint navPointRef;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x9D14AC", Offset = "0x9D14AC", VA = "0x9D14AC")]
	public void Update()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x9D18D4", Offset = "0x9D18D4", VA = "0x9D18D4")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x9D1970", Offset = "0x9D1970", VA = "0x9D1970")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x9D19D4", Offset = "0x9D19D4", VA = "0x9D19D4")]
	public MissionProximityTrigger()
	{
	}
}
[Token(Token = "0x2000190")]
public class MissionScannedTrigger : MonoBehaviour
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScenarioNodeBase node;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool didTrigger;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x9D19E8", Offset = "0x9D19E8", VA = "0x9D19E8")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x9D1AC0", Offset = "0x9D1AC0", VA = "0x9D1AC0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x9D1C1C", Offset = "0x9D1C1C", VA = "0x9D1C1C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9D1D40", Offset = "0x9D1D40", VA = "0x9D1D40")]
	public MissionScannedTrigger()
	{
	}
}
[Token(Token = "0x2000191")]
public class MissionTimeTrigger : MonoBehaviour
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 center;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScenarioNodeBase node;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToTrigger;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeElapsed;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float thinkDelay;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float thinkInterval;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool didTrigger;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NavPoint navPointRef;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpaceUnit unitRef;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showTimer;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x9D1EA8", Offset = "0x9D1EA8", VA = "0x9D1EA8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x9D2288", Offset = "0x9D2288", VA = "0x9D2288")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x9D22D0", Offset = "0x9D22D0", VA = "0x9D22D0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x9D23B4", Offset = "0x9D23B4", VA = "0x9D23B4")]
	public MissionTimeTrigger()
	{
	}
}
[Token(Token = "0x2000192")]
public class ScenarioManager : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58C0", Offset = "0x6D58C0")]
	private sealed class <ViewScreenSetupSequence>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScenarioNodeBase screenNode;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpaceBattleManager <manager>5__2;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <speakerName>5__3;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <mainText>5__4;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <animationName>5__5;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <glitchAmt>5__6;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string <speakerTitleCaption>5__7;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <speakerT>5__8;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <lastPos>5__9;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject <firstOption>5__10;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ChoiceNode.OptionData>.Enumerator <>7__wrap10;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x93B6E4", Offset = "0x93B6E4", VA = "0x93B6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x93B72C", Offset = "0x93B72C", VA = "0x93B72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x939BC8", Offset = "0x939BC8", VA = "0x939BC8")]
		[DebuggerHidden]
		public <ViewScreenSetupSequence>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x939BF4", Offset = "0x939BF4", VA = "0x939BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x939C64", Offset = "0x939C64", VA = "0x939C64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x939C10", Offset = "0x939C10", VA = "0x939C10")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x93B6EC", Offset = "0x93B6EC", VA = "0x93B6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58D0", Offset = "0x6D58D0")]
	private sealed class <HideViewScreenSequence>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool returnToTitle;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x939B78", Offset = "0x939B78", VA = "0x939B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x939BC0", Offset = "0x939BC0", VA = "0x939BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x93993C", Offset = "0x93993C", VA = "0x93993C")]
		[DebuggerHidden]
		public <HideViewScreenSequence>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x939968", Offset = "0x939968", VA = "0x939968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x93996C", Offset = "0x93996C", VA = "0x93996C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x939B80", Offset = "0x939B80", VA = "0x939B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58E0", Offset = "0x6D58E0")]
	private sealed class <>c
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__58_0;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<SpaceUnit> <>9__59_0;

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x939858", Offset = "0x939858", VA = "0x939858")]
		public <>c()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x939860", Offset = "0x939860", VA = "0x939860")]
		internal bool <CreateMercenaryChoiceSequence>b__58_0(GameObject ship)
		{
			return default(bool);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x939920", Offset = "0x939920", VA = "0x939920")]
		internal void <EnterNode>b__59_0(SpaceUnit unit)
		{
		}
	}

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScenarioManager instance;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> _globals;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, float> _lastSpeakerSpeechTime;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextSize textSizer;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public EnvironmentData environmentInfo;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MissionFailTrigger failTrigger;

	[NonSerialized]
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public BeginCombat currentCombatNode;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform speakersT;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool combatViewscreenVisible;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator viewscreensetupen;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ScenarioNodeBase _lastNode;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _lastObject;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ItemList rewardItemsSmall;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ItemList rewardItemsMedium;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ItemList rewardItemsLarge;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ItemList rewardItemsStrategic;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ShipList mercenaries;

	[NonSerialized]
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool allEnemiesFled;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public StoreNode.StoreNodeType storeStatus;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public GameObject chosenTradeItem;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float lastSpeakerSpeech;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string lastSpeakerName;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string currentMissionNotes;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string[] speakerNameForFaction;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ScenarioCanvas currentScenario;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ScenarioNodeBase currentNode;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ShipBridge bridge;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform currentSpeaker;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ViewScreenHandler viewScreen;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject screenCamera;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool hasMadeAChoice;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public StringDictionarySO defaultSpeakerNames;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA71874", Offset = "0xA71874", VA = "0xA71874")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085B")]
	public ScenarioNodeBase GetFirstNodeOfType<t>()
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA718DC", Offset = "0xA718DC", VA = "0xA718DC")]
	public void Init(MissionNode missionMapNode, ScenarioCanvas canvas)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xA72BDC", Offset = "0xA72BDC", VA = "0xA72BDC")]
	public void HideSpeakerStuff()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA72EC8", Offset = "0xA72EC8", VA = "0xA72EC8")]
	public void Begin(ScenarioCanvas canvas, ShipBridge bridge)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA76540", Offset = "0xA76540", VA = "0xA76540")]
	public void BattleCompleted(ScenarioCanvas canvas, ShipBridge bridge, bool ranAway, bool failed)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xA76FA8", Offset = "0xA76FA8", VA = "0xA76FA8")]
	public void TransitionTo(ScenarioNodeBase next)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA77114", Offset = "0xA77114", VA = "0xA77114")]
	public void SkipTextAhead()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA77688", Offset = "0xA77688", VA = "0xA77688")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD94C", Offset = "0x6DD94C")]
	private IEnumerator ViewScreenSetupSequence(ScenarioNodeBase screenNode)
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA7771C", Offset = "0xA7771C", VA = "0xA7771C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DD9AC", Offset = "0x6DD9AC")]
	private IEnumerator HideViewScreenSequence(bool returnToTitle = false)
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA777A8", Offset = "0xA777A8", VA = "0xA777A8")]
	private void ChoiceNodeEnter(ChoiceNode node)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA77864", Offset = "0xA77864", VA = "0xA77864")]
	public void TextFinishedAnimating()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA77890", Offset = "0xA77890", VA = "0xA77890")]
	private void ChoiceNodeExit(ChoiceNode node)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA77910", Offset = "0xA77910", VA = "0xA77910")]
	private void CombatNodeExit(BeginCombat node)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA7792C", Offset = "0xA7792C", VA = "0xA7792C")]
	private void CreateFleetNode(MissionNodeData missionMapNode, FleetNode node, NavPoint navPoint)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA72898", Offset = "0xA72898", VA = "0xA72898")]
	private void NavPointNodeInit(MissionNode missionMapNode, NavPointNode node, GameObject navPoint)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA7264C", Offset = "0xA7264C", VA = "0xA7264C")]
	private void EnvironmentNodeInit(MissionNode missionMapNode, EnvironmentNode node)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA78960", Offset = "0xA78960", VA = "0xA78960")]
	public void CreateMissionTriggerOnNav(MissionTriggerNode node, GameObject obj, Vector3 navPosition)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA7822C", Offset = "0xA7822C", VA = "0xA7822C")]
	public void CreateMissionTriggerOnShips(MissionTriggerNode node, NavPoint navPoint, SpaceUnit[] ships)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA78744", Offset = "0xA78744", VA = "0xA78744")]
	public void CreateNavPointEntity(MissionNodeData missionMapNode, ScenarioNodeBase node, GameObject navPoint, Vector3 navPosition)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA79938", Offset = "0xA79938", VA = "0xA79938")]
	public void TriggerFail()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA78C2C", Offset = "0xA78C2C", VA = "0xA78C2C")]
	public void TriggerMissionEffect(ScenarioNodeBase node, GameObject obj)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA799E0", Offset = "0xA799E0", VA = "0xA799E0")]
	public void SanityCheckMissionsLeft()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA79B40", Offset = "0xA79B40", VA = "0xA79B40")]
	public void DoScenarioEndNode_StoryMode(ScenarioEndNode endNode)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xA7A518", Offset = "0xA7A518", VA = "0xA7A518")]
	public void DoScenarioEndNode_EndlessMode(ScenarioEndNode endNode)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xA7A9A0", Offset = "0xA7A9A0", VA = "0xA7A9A0")]
	public ChoiceNode CreateItemChoiceSequence(string speaker, string mainText, ItemList itemSet, ScenarioNodeBase nextNode, bool userMustPay = false)
	{
		return null;
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xA7ADB0", Offset = "0xA7ADB0", VA = "0xA7ADB0")]
	public ScenarioNodeBase CreateMercenaryChoiceSequence(string speaker, string mainText, ShipList mercenariesList, ScenarioNodeBase nextNode, bool userMustPay = false)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xA72FCC", Offset = "0xA72FCC", VA = "0xA72FCC")]
	public void EnterNode(ScenarioNodeBase node)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xA77038", Offset = "0xA77038", VA = "0xA77038")]
	public void ExitNode(ScenarioNodeBase node)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xA7B480", Offset = "0xA7B480", VA = "0xA7B480")]
	public void DismissViewScreenClicked()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xA7B52C", Offset = "0xA7B52C", VA = "0xA7B52C")]
	public bool IsStarbaseScenario()
	{
		return default(bool);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xA771E4", Offset = "0xA771E4", VA = "0xA771E4")]
	public bool ChoiceClicked(int num)
	{
		return default(bool);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xA7B548", Offset = "0xA7B548", VA = "0xA7B548")]
	public ScenarioManager()
	{
	}
}
[Token(Token = "0x2000196")]
public class SceneryCreator
{
	[Token(Token = "0x2000197")]
	public struct TerrainLevels
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int asteroidLevel;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int resources;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int energyRes;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int crates;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int dustClouds;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int shieldClouds;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dangerClouds;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int debrisFields;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int endlessObjects;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int rifts;
	}

	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D58F0", Offset = "0x6D58F0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Random r;

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x93B734", Offset = "0x93B734", VA = "0x93B734")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x93B73C", Offset = "0x93B73C", VA = "0x93B73C")]
		internal int <SearchNear>b__0(Vector3Int x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5900", Offset = "0x6D5900")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Random r;

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x93B75C", Offset = "0x93B75C", VA = "0x93B75C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x93B764", Offset = "0x93B764", VA = "0x93B764")]
		internal int <Search>b__0(Vector3Int x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SimplexNoiseGenerator noiseGen;

	[Token(Token = "0x40008A8")]
	private const int GRID_SIZE_X = 9;

	[Token(Token = "0x40008A9")]
	private const int GRID_SIZE_Y = 3;

	[Token(Token = "0x40008AA")]
	private const int GRID_SIZE_Z = 9;

	[Token(Token = "0x40008AB")]
	private const float NavPointSize = 2400f;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float gridRealSize;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3Int> _posList;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 currentCenter;

	[Token(Token = "0x40008AF")]
	private const int MAX_OBJECTS = 64;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _numObjects;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xD42860", Offset = "0xD42860", VA = "0xD42860")]
	public Vector3Int SearchNear(int[,,] mapGrid, Vector3Int pt, int boxRadius, int searchFor)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xD42E34", Offset = "0xD42E34", VA = "0xD42E34")]
	public Vector3Int Search(int[,,] mapGrid, int searchFor)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xD43388", Offset = "0xD43388", VA = "0xD43388")]
	public Vector3 MapGridToPos(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xD43410", Offset = "0xD43410", VA = "0xD43410")]
	public void CreateObject(GameObject g, float scale, float spacing, int x, int y, int z, bool limitRotation = false)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xD435A4", Offset = "0xD435A4", VA = "0xD435A4")]
	public void DebugMap(int[,,] mapGrid, int y)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xD43708", Offset = "0xD43708", VA = "0xD43708")]
	public void CreateNavPoint(SpaceBattleManager manager, Vector3 center, NavPointData node, TerrainLevels levels)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xD43F7C", Offset = "0xD43F7C", VA = "0xD43F7C")]
	public SceneryCreator()
	{
	}
}
[Token(Token = "0x200019A")]
public class SceneryHolder : MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color32 fogColor;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color32 light1Color;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32 light2Color;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lightDir;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hazeplaneOn;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform camHolder;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sceneryCam;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject origin;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform skybox;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject spectatorCamera;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject screenshotCamera;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform head;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneryHolder lastScenery;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material mrcSkyboxMaterial;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4[] ProbeCoefficients;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D8234", Offset = "0x6D8234")]
	public float Intensity;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Cubemap EnvironmentCubemap;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xD43FB0", Offset = "0xD43FB0", VA = "0xD43FB0")]
	public void ComputeCoefficientFromCube()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xD445D4", Offset = "0xD445D4", VA = "0xD445D4")]
	public void TransitionOut()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xD445D8", Offset = "0xD445D8", VA = "0xD445D8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xD44774", Offset = "0xD44774", VA = "0xD44774")]
	public void Init()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xD44B64", Offset = "0xD44B64", VA = "0xD44B64")]
	public void Generate(int seed, bool transition)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xD44FE0", Offset = "0xD44FE0", VA = "0xD44FE0")]
	public SceneryHolder()
	{
	}
}
[Token(Token = "0x200019B")]
public class SceneryObject : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float probability;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 randomRotation;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scaleMin;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleMax;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radiusMin;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float radiusMax;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float angleMin;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float angleMax;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float inclinationMin;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float inclinationMax;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtCamera;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] alternateMaterials;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xD452EC", Offset = "0xD452EC", VA = "0xD452EC")]
	public SceneryObject()
	{
	}
}
[Token(Token = "0x200019C")]
public class ScreenshotCamBack : MonoBehaviour
{
	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xD4797C", Offset = "0xD4797C", VA = "0xD4797C")]
	private void Start()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xD479D8", Offset = "0xD479D8", VA = "0xD479D8")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xD47AB4", Offset = "0xD47AB4", VA = "0xD47AB4")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xD47AC0", Offset = "0xD47AC0", VA = "0xD47AC0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xD47ACC", Offset = "0xD47ACC", VA = "0xD47ACC")]
	public ScreenshotCamBack()
	{
	}
}
[Token(Token = "0x200019D")]
public class ScreenshotHand : MonoBehaviour
{
	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xD47AD4", Offset = "0xD47AD4", VA = "0xD47AD4")]
	private void DoTriggerPressedEvent()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xD47BA8", Offset = "0xD47BA8", VA = "0xD47BA8")]
	public ScreenshotHand()
	{
	}
}
[Token(Token = "0x200019E")]
public class ShieldFadeOut : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _matInstance;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color shieldColor;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentHitIndex;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastHitTime;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool deactivateAfterTime;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material lowDetailMaterial;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material regularDetailMaterial;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _initialized;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xD4970C", Offset = "0xD4970C", VA = "0xD4970C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xD4983C", Offset = "0xD4983C", VA = "0xD4983C")]
	public void SetupInstance()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xD498F8", Offset = "0xD498F8", VA = "0xD498F8")]
	public void SetupLowDetailInstance()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xD499B4", Offset = "0xD499B4", VA = "0xD499B4")]
	public void Update()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xD49A34", Offset = "0xD49A34", VA = "0xD49A34")]
	public void FadeOut(Color hitColor, Vector3 worldPos)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xD49CA8", Offset = "0xD49CA8", VA = "0xD49CA8")]
	public ShieldFadeOut()
	{
	}
}
[Token(Token = "0x200019F")]
public class ShieldNova : ShipItem
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject areaEffectPrefab;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float shieldHealAmount;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool _initialized;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float healAmt;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xD4B670", Offset = "0xD4B670", VA = "0xD4B670", Slot = "13")]
	public override void InitItemSettings()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xD4B6E8", Offset = "0xD4B6E8", VA = "0xD4B6E8", Slot = "5")]
	public override void Fire()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xD4B8C4", Offset = "0xD4B8C4", VA = "0xD4B8C4", Slot = "21")]
	public override bool AITryUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xD4C314", Offset = "0xD4C314", VA = "0xD4C314", Slot = "25")]
	public override ItemStatSection GetStat1()
	{
		return default(ItemStatSection);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xD4C504", Offset = "0xD4C504", VA = "0xD4C504")]
	public ShieldNova()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ShipActionButton : GrabbableObject
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector3 viewPosition;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public Vector3 viewScale;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject descriptionMain;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected List<SpaceUnit> targets;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xD4E9D0", Offset = "0xD4E9D0", VA = "0xD4E9D0", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xD4EA54", Offset = "0xD4EA54", VA = "0xD4EA54", Slot = "20")]
	public virtual void Appear()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xD4EA58", Offset = "0xD4EA58", VA = "0xD4EA58")]
	public void ClearTargets()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xD4EB98", Offset = "0xD4EB98", VA = "0xD4EB98")]
	protected void AddTargetFor(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xD4EC58", Offset = "0xD4EC58", VA = "0xD4EC58")]
	protected void ClearTargetFor(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xD4ECD0", Offset = "0xD4ECD0", VA = "0xD4ECD0")]
	public ShipActionButton()
	{
	}
}
[Token(Token = "0x20001A1")]
public class ShipBridge : MonoBehaviour
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controlsMain;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controlsIKTarget;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject viewscreenAnchor;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float anglerOffset;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rearSoundPosition;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem lightSpeed1;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StoreMenuManager storeMenu;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ManagementUI managementUI;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image shipImage;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text shipCamLabel;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_Text shipCamTop;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text shipCamInfo;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text resourcesNumber;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TMP_Text scrapNumber;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text scoreNumber;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject factionInfoDisplay;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject scoreDisplay;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform choiceButtonArea;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject skipAheadButton;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text skipAheadHint;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 externalScreenScale;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 closedScale2;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ShipUpgradeUI shipUpgradeUI;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BridgeFleetDisplay fleetDisplay;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public GameObject externalCameraFocus;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool initialized;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool controlsMoving;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool anglerMoving;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public StandardButtonObject controlsHandle;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public StandardButtonObject anglerHandle;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform anglerBasePoint;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 handleGrabPos;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 anglerGrabPos;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Quaternion anglerGrabOrientation;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Text factionValues;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LightsController bridgeLights;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public DotField consoleDots;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject crewMember;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xD4ECD8", Offset = "0xD4ECD8", VA = "0xD4ECD8")]
	private void Restart()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xD4ED78", Offset = "0xD4ED78", VA = "0xD4ED78")]
	private void Init()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xD4F064", Offset = "0xD4F064", VA = "0xD4F064")]
	public string GetBarsString(int v, int max)
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xD4F16C", Offset = "0xD4F16C", VA = "0xD4F16C")]
	public void UpdateFactionsDisplay()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xD4F3CC", Offset = "0xD4F3CC", VA = "0xD4F3CC")]
	public void ClearChoiceButtons()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xD4F484", Offset = "0xD4F484", VA = "0xD4F484")]
	public GameObject GetChoiceButton(int n)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xD4F4EC", Offset = "0xD4F4EC", VA = "0xD4F4EC")]
	public void LeavingBridge()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xD4F550", Offset = "0xD4F550", VA = "0xD4F550")]
	public void EnteringBridge()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xD4F6EC", Offset = "0xD4F6EC", VA = "0xD4F6EC")]
	public void ShowManagementUI()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xD4F708", Offset = "0xD4F708", VA = "0xD4F708")]
	public void HideManagementUI()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xD4F724", Offset = "0xD4F724", VA = "0xD4F724")]
	public void ShowFleetShip(SpaceUnit ship)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xD4F7F0", Offset = "0xD4F7F0", VA = "0xD4F7F0")]
	public void SkipAheadClicked()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xD4F848", Offset = "0xD4F848", VA = "0xD4F848")]
	public void ControlsHandleClicked()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xD4F8C4", Offset = "0xD4F8C4", VA = "0xD4F8C4")]
	public void ControlsHandleUnclicked()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xD4F93C", Offset = "0xD4F93C", VA = "0xD4F93C")]
	public void AnglerHandleClicked()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xD4F9EC", Offset = "0xD4F9EC", VA = "0xD4F9EC")]
	public void AnglerHandleUnclicked()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xD4FA64", Offset = "0xD4FA64", VA = "0xD4FA64")]
	public void CheckHandlePos()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xD4FB64", Offset = "0xD4FB64", VA = "0xD4FB64")]
	public void Update()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xD4FEA8", Offset = "0xD4FEA8", VA = "0xD4FEA8")]
	public void SerializeSettings(ref SpaceBattleManager.GameSettingsData data)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xD50020", Offset = "0xD50020", VA = "0xD50020")]
	public void ResetConsolePosition()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xD50098", Offset = "0xD50098", VA = "0xD50098")]
	public void RestoreFromSettings(SpaceBattleManager.GameSettingsData data)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xD5019C", Offset = "0xD5019C", VA = "0xD5019C")]
	public ShipBridge()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A2")]
public class ShipGroup
{
	[Serializable]
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5910", Offset = "0x6D5910")]
	private sealed class <>c
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SpaceUnit> <>9__2_0;

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x93BB54", Offset = "0x93BB54", VA = "0x93BB54")]
		public <>c()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x93BB5C", Offset = "0x93BB5C", VA = "0x93BB5C")]
		internal bool <Cull>b__2_0(SpaceUnit o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SpaceUnit _currentWingleader;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SpaceUnit> ships;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xD50378", Offset = "0xD50378", VA = "0xD50378")]
	public void Cull()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xD50588", Offset = "0xD50588", VA = "0xD50588")]
	public int GetNumFighters()
	{
		return default(int);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xD50630", Offset = "0xD50630", VA = "0xD50630")]
	public SpaceUnit GetLargest()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xD50750", Offset = "0xD50750", VA = "0xD50750")]
	public SpaceUnit GetWingleader()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xD50894", Offset = "0xD50894", VA = "0xD50894")]
	public Vector3 GetCentroid()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xD50A1C", Offset = "0xD50A1C", VA = "0xD50A1C")]
	public void Add(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xD50A80", Offset = "0xD50A80", VA = "0xD50A80")]
	public void Remove(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xD50AE4", Offset = "0xD50AE4", VA = "0xD50AE4")]
	public ShipGroup()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ShipHandMenu : MonoBehaviour
{
	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shipIconPrefab;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject iconHolder;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonsHolder;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ShipIcon> playerShips;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ShipIcon> otherShips;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnitGrabberController otherHand;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI resourceLabel;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject notesHolder;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI missionNotesLabel;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI missionGoalsLabel;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject alertIcon;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] editorTools;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] cheatButtons;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject pauseButton;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject quitMissionButton;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ES_VoiceHandler voiceHandler;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HudTextFollower hudTextFollower;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public HandMenuShower handMenuShower;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text lockedLabel;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject shipLabels;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool isShown;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isLocked;

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xD50B68", Offset = "0xD50B68", VA = "0xD50B68")]
	public void Start()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xD50E44", Offset = "0xD50E44", VA = "0xD50E44")]
	public void UpdateShips()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xD51184", Offset = "0xD51184", VA = "0xD51184")]
	public void Clear()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xD51484", Offset = "0xD51484", VA = "0xD51484")]
	public void AddShipToMenu(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xD51AE8", Offset = "0xD51AE8", VA = "0xD51AE8")]
	public void RemoveShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xD51E34", Offset = "0xD51E34", VA = "0xD51E34")]
	public void Hide()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xD51F34", Offset = "0xD51F34", VA = "0xD51F34")]
	public void HideEditorButtons()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xD50CE4", Offset = "0xD50CE4", VA = "0xD50CE4")]
	public void ToggleEditorStuff()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xD51FF8", Offset = "0xD51FF8", VA = "0xD51FF8")]
	public void Show()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xD52250", Offset = "0xD52250", VA = "0xD52250")]
	public void UpdateButtons()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xD520EC", Offset = "0xD520EC", VA = "0xD520EC")]
	public void UpdateGoalsLabel()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xD52478", Offset = "0xD52478", VA = "0xD52478")]
	public void PauseClicked()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xD524F4", Offset = "0xD524F4", VA = "0xD524F4")]
	public void QuitClicked()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xD525A4", Offset = "0xD525A4", VA = "0xD525A4")]
	public void LockClicked()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xD50D54", Offset = "0xD50D54", VA = "0xD50D54")]
	public void ArrangeShips()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xD52684", Offset = "0xD52684", VA = "0xD52684")]
	public ShipHandMenu()
	{
	}
}
[Token(Token = "0x20001A5")]
public class ShipIcon : StandardButtonObject
{
	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshProUGUI label;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Image icon;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SpaceUnit _unit;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Slider shieldSlider;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Slider healthSlider;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public LineRenderer dragLine;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float hoverTime;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool reticleShown;

	[Token(Token = "0x1700006B")]
	public SpaceUnit unit
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xD52884", Offset = "0xD52884", VA = "0xD52884")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xD519A0", Offset = "0xD519A0", VA = "0xD519A0")]
		set
		{
		}
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xD51054", Offset = "0xD51054", VA = "0xD51054")]
	public void UpdateName()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xD5288C", Offset = "0xD5288C", VA = "0xD5288C", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xD5268C", Offset = "0xD5268C", VA = "0xD5268C")]
	private void setDefaultColor()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xD52974", Offset = "0xD52974", VA = "0xD52974", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xD529B0", Offset = "0xD529B0", VA = "0xD529B0", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xD52C50", Offset = "0xD52C50", VA = "0xD52C50", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xD52D88", Offset = "0xD52D88", VA = "0xD52D88", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xD5303C", Offset = "0xD5303C", VA = "0xD5303C", Slot = "12")]
	public override void dragCancel(UnitGrabberController controller, Transform t)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xD5309C", Offset = "0xD5309C", VA = "0xD5309C", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xD53140", Offset = "0xD53140", VA = "0xD53140")]
	public void Update()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xD533D0", Offset = "0xD533D0", VA = "0xD533D0")]
	public ShipIcon()
	{
	}
}
[Token(Token = "0x20001A6")]
public class ShipItemDebugger : MonoBehaviour
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ShipItem item;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh display;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HardPoint hardpoint;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xCF4304", Offset = "0xCF4304", VA = "0xCF4304")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xCF4308", Offset = "0xCF4308", VA = "0xCF4308")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xCF4828", Offset = "0xCF4828", VA = "0xCF4828")]
	public ShipItemDebugger()
	{
	}
}
[Token(Token = "0x20001A7")]
public class ShipItemUpgradeButton : StandardButtonObject
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshPro levelLabel;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ShipItem item;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ShipUpgradeUI shipUI;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xCF4830", Offset = "0xCF4830", VA = "0xCF4830")]
	public void Setup(ShipItem _item, ShipUpgradeUI _ui)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xCF491C", Offset = "0xCF491C", VA = "0xCF491C", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xCF4938", Offset = "0xCF4938", VA = "0xCF4938", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xCF4950", Offset = "0xCF4950", VA = "0xCF4950", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xCF4954", Offset = "0xCF4954", VA = "0xCF4954")]
	public ShipItemUpgradeButton()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ShipLifetime : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deadTime;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float deadTimeLeft;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xCF5058", Offset = "0xCF5058", VA = "0xCF5058")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xCF5064", Offset = "0xCF5064", VA = "0xCF5064")]
	public void Restart()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xCF5070", Offset = "0xCF5070", VA = "0xCF5070")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xCF510C", Offset = "0xCF510C", VA = "0xCF510C")]
	public ShipLifetime()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A9")]
public class ShipLoadoutData
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool[] hardPointLockState;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] items;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] modItems;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitpointsUpgradeLevel;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int shieldsUpgradeLevel;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int enginesUpgradeLevel;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int generatorUpgradeLevel;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int fighterUpgradeLevel;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xCF697C", Offset = "0xCF697C", VA = "0xCF697C")]
	public ShipLoadoutData()
	{
	}
}
[Token(Token = "0x20001AA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5920", Offset = "0x6D5920")]
public class ShipLoadout : ScriptableObject
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5964", Offset = "0x6D5964")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardPoint hp;

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x93BC2C", Offset = "0x93BC2C", VA = "0x93BC2C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x93BC34", Offset = "0x93BC34", VA = "0x93BC34")]
		internal bool <DetachHardpoint>b__0(HardPoint h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5974", Offset = "0x6D5974")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardPoint hp;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x93BCAC", Offset = "0x93BCAC", VA = "0x93BCAC")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x93BCB4", Offset = "0x93BCB4", VA = "0x93BCB4")]
		internal bool <DetachHardpointMod>b__0(HardPoint h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5984", Offset = "0x6D5984")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardPoint hp;

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x93BD2C", Offset = "0x93BD2C", VA = "0x93BD2C")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x93BD34", Offset = "0x93BD34", VA = "0x93BD34")]
		internal bool <ChangeHardpoint>b__0(HardPoint h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5994", Offset = "0x6D5994")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardPoint hp;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x93BDAC", Offset = "0x93BDAC", VA = "0x93BDAC")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x93BDB4", Offset = "0x93BDB4", VA = "0x93BDB4")]
		internal bool <ChangeHardpointMod>b__0(HardPoint h)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpaceUnit ship;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitpointsUpgradeLevel;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int shieldsUpgradeLevel;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int enginesUpgradeLevel;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int generatorUpgradeLevel;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int fighterUpgradeLevel;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string loadoutName;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string loadoutNotes;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int loadoutScore;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HardPoint[] hardPoints;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] items;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] modItems;

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xCF5178", Offset = "0xCF5178", VA = "0xCF5178")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xCF53D4", Offset = "0xCF53D4", VA = "0xCF53D4")]
	public void ChangeHardpoint(int n, GameObject item)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xCF5684", Offset = "0xCF5684", VA = "0xCF5684")]
	public GameObject DetachHardpoint(HardPoint hp)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xCF5814", Offset = "0xCF5814", VA = "0xCF5814")]
	public void ChangeHardpointMod(int n, GameObject item)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xCF5AA0", Offset = "0xCF5AA0", VA = "0xCF5AA0")]
	public GameObject DetachHardpointMod(HardPoint hp)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xCF5C30", Offset = "0xCF5C30", VA = "0xCF5C30")]
	public void ChangeHardpoint(HardPoint hp, GameObject item)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xCF5D44", Offset = "0xCF5D44", VA = "0xCF5D44")]
	public void ChangeHardpointMod(HardPoint hp, GameObject item)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xCF5E58", Offset = "0xCF5E58", VA = "0xCF5E58")]
	public ShipLoadout InstantiateFor(SpaceUnit ship)
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xCF654C", Offset = "0xCF654C", VA = "0xCF654C")]
	public ShipLoadoutData ToData()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xCF6984", Offset = "0xCF6984", VA = "0xCF6984")]
	public float GetCombatPower(float scaleFactor = 16f)
	{
		return default(float);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xCF6B4C", Offset = "0xCF6B4C", VA = "0xCF6B4C")]
	public static bool ValidateLoadout(SpaceUnit _ship, ShipLoadoutData data)
	{
		return default(bool);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xCF6D58", Offset = "0xCF6D58", VA = "0xCF6D58")]
	public static ShipLoadoutData FixLoadout(SpaceUnit _ship, ShipLoadoutData data, bool addExtraItemsToInventory = true)
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xCF7194", Offset = "0xCF7194", VA = "0xCF7194")]
	public static ShipLoadout FromData(SpaceUnit _ship, ShipLoadoutData data)
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xCF7AA0", Offset = "0xCF7AA0", VA = "0xCF7AA0")]
	public ShipLoadout()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ShipUIHandler : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text mainLabels;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text shipLabel;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text raceLabel;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text designationLabel;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string defaultLabels;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string noHintLabels;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HealthLabel hullLabel;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HealthLabel shieldLabel;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HealthLabel[] armorLabels;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xCF7FBC", Offset = "0xCF7FBC", VA = "0xCF7FBC")]
	public void HideHint()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xCF803C", Offset = "0xCF803C", VA = "0xCF803C")]
	public void ShowHint()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xCF80BC", Offset = "0xCF80BC", VA = "0xCF80BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xCF80C0", Offset = "0xCF80C0", VA = "0xCF80C0")]
	private void Restart()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xCF80C4", Offset = "0xCF80C4", VA = "0xCF80C4")]
	public bool TookSignificantDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xCF81BC", Offset = "0xCF81BC", VA = "0xCF81BC")]
	public ShipUIHandler()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ShipUpgradeUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B1")]
	public class UpgradeButtonDO
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject main;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject upgradeBtn;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text barText;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text costText;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text valueText;

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x93F1C0", Offset = "0x93F1C0", VA = "0x93F1C0")]
		public UpgradeButtonDO()
		{
		}
	}

	[Token(Token = "0x20001B2")]
	public enum UIEvents
	{
		[Token(Token = "0x400098F")]
		Prev,
		[Token(Token = "0x4000990")]
		Next,
		[Token(Token = "0x4000991")]
		Close,
		[Token(Token = "0x4000992")]
		UpdateStats
	}

	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D59A4", Offset = "0x6D59A4")]
	private sealed class <SetShipCO>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShipUpgradeUI <>4__this;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpaceUnit unit;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <shipObject>5__2;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x93F170", Offset = "0x93F170", VA = "0x93F170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x93F1B8", Offset = "0x93F1B8", VA = "0x93F1B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x93E394", Offset = "0x93E394", VA = "0x93E394")]
		[DebuggerHidden]
		public <SetShipCO>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x93E3C0", Offset = "0x93E3C0", VA = "0x93E3C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x93E3C4", Offset = "0x93E3C4", VA = "0x93E3C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x93F178", Offset = "0x93F178", VA = "0x93F178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D59B4", Offset = "0x6D59B4")]
	private sealed class <CreateSlotsCO>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceUnit unit;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShipUpgradeUI <>4__this;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HardPoint[] <>7__wrap2;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap3;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HardPoint <p>5__5;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject>.Enumerator <>7__wrap5;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject <itemObj>5__7;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x93E344", Offset = "0x93E344", VA = "0x93E344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x93E38C", Offset = "0x93E38C", VA = "0x93E38C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x93BE2C", Offset = "0x93BE2C", VA = "0x93BE2C")]
		[DebuggerHidden]
		public <CreateSlotsCO>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x93BE58", Offset = "0x93BE58", VA = "0x93BE58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x93BF9C", Offset = "0x93BF9C", VA = "0x93BF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x93BEF4", Offset = "0x93BEF4", VA = "0x93BEF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x93BF48", Offset = "0x93BF48", VA = "0x93BF48")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x93E34C", Offset = "0x93E34C", VA = "0x93E34C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject popup;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shipCard;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject shipArea;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject itemsArea;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject repairBtn;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject shipModel;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject equipRoot;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject repairRoot;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject tradeRoot;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ShipItem currentItem;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material wireframeMat;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject shipItemButton;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text shipName;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject trashLabel;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int currentShipIndex;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpaceUnit currentShip;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ArmorDisplay armorDisplay;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro[] armorLabels;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro[] armorChecks;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] armorRepairButtons;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text repairAllText;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text repairCostLabel;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TMP_Text repairStats;

	[Token(Token = "0x4000974")]
	private const float itemButtonScale = 0.018f;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D827C", Offset = "0x6D827C")]
	public string[] armorDesc;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UpgradeButtonDO[] upgradeButtons;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject sellButton;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TMP_Text sellPriceLabel;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Blink wrenchBlinkScript;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject appearEffectPrefab;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _itemsShown;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool _tradeMode;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	private bool isRepairing;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _repairTickTimeLeft;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _repairTimeHeld;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int UpgradeCost;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int maxUpgradeLevel;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float currentShipScaleFactor;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip bip;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject recyclingSlot;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject tradeConfirmButton;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject tradeItem;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject tradeForItem;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _isShowing;

	[Token(Token = "0x1700006C")]
	private bool itemsShown
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xCF826C", Offset = "0xCF826C", VA = "0xCF826C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xCF8274", Offset = "0xCF8274", VA = "0xCF8274")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	private bool tradeMode
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xCF8280", Offset = "0xCF8280", VA = "0xCF8280")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xCF8288", Offset = "0xCF8288", VA = "0xCF8288")]
		set
		{
		}
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xCF8378", Offset = "0xCF8378", VA = "0xCF8378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xCF84C0", Offset = "0xCF84C0", VA = "0xCF84C0")]
	public void Show([Optional] SpaceUnit unit, bool _equipMode = true)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xCF8810", Offset = "0xCF8810", VA = "0xCF8810")]
	private int calculateUpgradeCost(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xCF8888", Offset = "0xCF8888", VA = "0xCF8888")]
	private int calculateFighterUpgradeCost(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xCF8898", Offset = "0xCF8898", VA = "0xCF8898")]
	private void UpdateShipCard()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xCFAB24", Offset = "0xCFAB24", VA = "0xCFAB24")]
	public bool TryUpgrade(int actualCost, int cur, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xCFACD0", Offset = "0xCFACD0", VA = "0xCFACD0")]
	public bool TryFix(int actualCost, int cur, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xCFAE7C", Offset = "0xCFAE7C", VA = "0xCFAE7C")]
	public void UpgradeHull()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xCFB15C", Offset = "0xCFB15C", VA = "0xCFB15C")]
	public void UpgradeShields()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xCFB2A8", Offset = "0xCFB2A8", VA = "0xCFB2A8")]
	public void UpgradeEngines()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xCFB3F4", Offset = "0xCFB3F4", VA = "0xCFB3F4")]
	public void UpgradeNumFighters()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xCFB770", Offset = "0xCFB770", VA = "0xCFB770")]
	public void UIBuildFighter()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xCFB490", Offset = "0xCFB490", VA = "0xCFB490")]
	public void BuildFighter(bool free = false, bool updateUI = true)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xCFB77C", Offset = "0xCFB77C", VA = "0xCFB77C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xCF87A8", Offset = "0xCF87A8", VA = "0xCF87A8")]
	public void SetShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xCFBB44", Offset = "0xCFBB44", VA = "0xCFBB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDAAC", Offset = "0x6DDAAC")]
	public IEnumerator SetShipCO(SpaceUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xCFBBD8", Offset = "0xCFBBD8", VA = "0xCFBBD8")]
	public void NextShip()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xCFBD4C", Offset = "0xCFBD4C", VA = "0xCFBD4C")]
	public void PrevShip()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xCFBEC4", Offset = "0xCFBEC4", VA = "0xCFBEC4")]
	public void SellCurrentShip()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xCFB940", Offset = "0xCFB940", VA = "0xCFB940")]
	public void ClearSlots()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xCFBF80", Offset = "0xCFBF80", VA = "0xCFBF80")]
	private Vector3 invColRowToPosition(int col, int row)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xCFBFC0", Offset = "0xCFBFC0", VA = "0xCFBFC0")]
	private Vector3 invIndexToPosition(int ind)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xCFC024", Offset = "0xCFC024", VA = "0xCFC024")]
	private GameObject CreateSlotObject(HardPoint p, ShipItem item, bool isModSpot)
	{
		return null;
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xCFC8D0", Offset = "0xCFC8D0", VA = "0xCFC8D0")]
	public void CreateSlots(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xCFC8FC", Offset = "0xCFC8FC", VA = "0xCFC8FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDB0C", Offset = "0x6DDB0C")]
	public IEnumerator CreateSlotsCO(SpaceUnit unit)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xCF4934", Offset = "0xCF4934", VA = "0xCF4934")]
	public void SetHoveredSystem(ShipItem item)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xCFC990", Offset = "0xCFC990", VA = "0xCFC990")]
	public void RepairArmorDirection0()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xCFCD2C", Offset = "0xCFCD2C", VA = "0xCFCD2C")]
	public void RepairArmorDirection1()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xCFCD38", Offset = "0xCFCD38", VA = "0xCFCD38")]
	public void RepairArmorDirection2()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xCFCD44", Offset = "0xCFCD44", VA = "0xCFCD44")]
	public void RepairArmorDirection3()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xCF871C", Offset = "0xCF871C", VA = "0xCF871C")]
	public int GetRepairCost()
	{
		return default(int);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xCFA91C", Offset = "0xCFA91C", VA = "0xCFA91C")]
	public int GetFixAllCost()
	{
		return default(int);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xCFCD50", Offset = "0xCFCD50", VA = "0xCFCD50")]
	public void FixAll()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xCFD014", Offset = "0xCFD014", VA = "0xCFD014")]
	public void UpdateAllUI()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xCFD0B8", Offset = "0xCFD0B8", VA = "0xCFD0B8")]
	public void RepairHull(bool silent = false)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xCFC99C", Offset = "0xCFC99C", VA = "0xCFC99C")]
	public bool RepairArmorDirection(int dir, bool silent = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xCFD3C4", Offset = "0xCFD3C4", VA = "0xCFD3C4")]
	public void RepairAllHull()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xCFD5A0", Offset = "0xCFD5A0", VA = "0xCFD5A0")]
	public void RepairAllArmor(int dir)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xCFD7F0", Offset = "0xCFD7F0", VA = "0xCFD7F0")]
	public void ConfirmTradePressed()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xCFDA58", Offset = "0xCFDA58", VA = "0xCFDA58")]
	public GameObject SetTradeItem(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xCFDC5C", Offset = "0xCFDC5C", VA = "0xCFDC5C")]
	public bool GetTradeMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xCFDC64", Offset = "0xCFDC64", VA = "0xCFDC64")]
	public void SetTradeMode()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xCFDEF4", Offset = "0xCFDEF4", VA = "0xCFDEF4")]
	public void ClearTradeMode()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xCFDEFC", Offset = "0xCFDEFC", VA = "0xCFDEFC")]
	public void ToggleItemsShown()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xCFDF30", Offset = "0xCFDF30", VA = "0xCFDF30")]
	public void SetRepairMode()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xCFA670", Offset = "0xCFA670", VA = "0xCFA670")]
	public string GetBarsString(int v, int max)
	{
		return null;
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xCFDF5C", Offset = "0xCFDF5C", VA = "0xCFDF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xCFDF60", Offset = "0xCFDF60", VA = "0xCFDF60")]
	public ShipUpgradeUI()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ShockwaveDistort : MonoBehaviour
{
	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animName;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xCFE094", Offset = "0xCFE094", VA = "0xCFE094")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xCFE27C", Offset = "0xCFE27C", VA = "0xCFE27C")]
	public void ShockwaveComplete()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xCFE2DC", Offset = "0xCFE2DC", VA = "0xCFE2DC")]
	public ShockwaveDistort()
	{
	}
}
[Token(Token = "0x20001B6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D59C4", Offset = "0x6D59C4")]
public class SkirmishChallengeData : ScriptableObject
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string challengeId;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnvironmentData environment;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavPointData navPoint;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Fleet[] fleets;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string lockedWithKey;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string localizationKey;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xD03AF8", Offset = "0xD03AF8", VA = "0xD03AF8")]
	public SkirmishChallengeData()
	{
	}
}
[Token(Token = "0x20001B7")]
public class SkirmishMenu : MonoBehaviour
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int maxShipsPerTeam;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Fleet[] fleets;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StandardDropZone[] dropAreas;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] fleetShipAreas;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Fleet[] shipSets;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8294", Offset = "0x6D8294")]
	public string[] shipSetDescription;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] shipSetLabels;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text shipSetLabel;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text shipSetDescriptionLabel;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject SkirmishShipSelectionPrefab;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject SkirmishShipPlacedPrefab;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform shipHolder;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject challengeLockedIcon;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int currentShipSet;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int pointsMax;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text[] teamPointsLabel;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _started;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SkirmishChallengeData[] challenges;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int currentChallengeNumber;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] challengeButtons;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EndlessModeAssets endlessAssets;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xD03B60", Offset = "0xD03B60", VA = "0xD03B60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xD03B64", Offset = "0xD03B64", VA = "0xD03B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xD04AD8", Offset = "0xD04AD8", VA = "0xD04AD8")]
	public void ClearSelections()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xD04C88", Offset = "0xD04C88", VA = "0xD04C88")]
	public void RandomBattle()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xD056F8", Offset = "0xD056F8", VA = "0xD056F8")]
	public void RandomizeTeam(int team)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xD05B70", Offset = "0xD05B70", VA = "0xD05B70")]
	public void ClearShipSet()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xD03D24", Offset = "0xD03D24", VA = "0xD03D24")]
	public void SetShipSet(int n)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xD05E78", Offset = "0xD05E78", VA = "0xD05E78")]
	public void NextShipSet()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xD05E84", Offset = "0xD05E84", VA = "0xD05E84")]
	public void PrevShipSet()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xD05E90", Offset = "0xD05E90", VA = "0xD05E90")]
	public int CalculateTeamPoints(int n)
	{
		return default(int);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xD0512C", Offset = "0xD0512C", VA = "0xD0512C")]
	public void UpdateFleetDisplay(int n)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xD062A4", Offset = "0xD062A4", VA = "0xD062A4")]
	public void ShipWasDropped(int team)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xD06678", Offset = "0xD06678", VA = "0xD06678")]
	public void BeginSkirmish()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xD06B40", Offset = "0xD06B40", VA = "0xD06B40")]
	public void Teardown()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xD06B64", Offset = "0xD06B64", VA = "0xD06B64")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xD06E2C", Offset = "0xD06E2C", VA = "0xD06E2C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xD04360", Offset = "0xD04360", VA = "0xD04360")]
	public void UpdateChallengeButtons()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xD06C38", Offset = "0xD06C38", VA = "0xD06C38")]
	public void SetChallenge(int n)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xD06E50", Offset = "0xD06E50", VA = "0xD06E50")]
	public SkirmishMenu()
	{
	}
}
[Token(Token = "0x20001B8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D5A08", Offset = "0x6D5A08")]
public class SlowCamera : MonoBehaviour
{
	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FPS;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera renderCam;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xD074DC", Offset = "0xD074DC", VA = "0xD074DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xD07564", Offset = "0xD07564", VA = "0xD07564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xD07568", Offset = "0xD07568", VA = "0xD07568")]
	public void Render()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xD07618", Offset = "0xD07618", VA = "0xD07618")]
	public SlowCamera()
	{
	}
}
[Token(Token = "0x20001B9")]
public class SmoothedHeadCam : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject head;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D82AC", Offset = "0x6D82AC")]
	public bool reverseMode;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool angleDown;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float defaultDist;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotLerpFactor;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float posLerpFactor;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool worldPos;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x8F8098", Offset = "0x8F8098", VA = "0x8F8098")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x8F8468", Offset = "0x8F8468", VA = "0x8F8468")]
	public SmoothedHeadCam()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5A78", Offset = "0x6D5A78")]
	private sealed class <FadeMusicVolume>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundManager <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x9403FC", Offset = "0x9403FC", VA = "0x9403FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x940444", Offset = "0x940444", VA = "0x940444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x940274", Offset = "0x940274", VA = "0x940274")]
		[DebuggerHidden]
		public <FadeMusicVolume>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x9402A0", Offset = "0x9402A0", VA = "0x9402A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x9402A4", Offset = "0x9402A4", VA = "0x9402A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x940404", Offset = "0x940404", VA = "0x940404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C7")]
	private const int numChannels = 16;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool musicOn;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool soundOn;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float musicLevel;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float musicFade;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float targetMusicFade;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isFading;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundManager instance;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource voSource;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource[] channels;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ChannelInfo[] channelObjects;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ChannelPrefab;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] music;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject cameraOrigin;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoiceOverList currentVoiceSet;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VoiceOverList[] voiceSets;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, AudioClip> _voiceOverLookup;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float globalPitch;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x8F848C", Offset = "0x8F848C", VA = "0x8F848C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x8F8890", Offset = "0x8F8890", VA = "0x8F8890")]
	public void IndexVoices()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x8F87EC", Offset = "0x8F87EC", VA = "0x8F87EC")]
	public void SetLanguage(LocalizationManager.Languages choice)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x8F89D4", Offset = "0x8F89D4", VA = "0x8F89D4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x8F8A00", Offset = "0x8F8A00", VA = "0x8F8A00")]
	public void SetGlobalPitch(float p)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x8F8B50", Offset = "0x8F8B50", VA = "0x8F8B50")]
	public void PlayMusic(AudioClip clip, bool fadeIn = false)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x8F8D20", Offset = "0x8F8D20", VA = "0x8F8D20")]
	public void PlayMusic(int num, bool fadeIn = false)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x8F8CA8", Offset = "0x8F8CA8", VA = "0x8F8CA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDC0C", Offset = "0x6DDC0C")]
	private IEnumerator FadeMusicVolume()
	{
		return null;
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x8F8D70", Offset = "0x8F8D70", VA = "0x8F8D70")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x8F8DB4", Offset = "0x8F8DB4", VA = "0x8F8DB4")]
	public void ResumeMusic()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x8F8E14", Offset = "0x8F8E14", VA = "0x8F8E14")]
	public void PlayVO(string vo_key)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x8F8F7C", Offset = "0x8F8F7C", VA = "0x8F8F7C")]
	public void PlayNum(int num, Vector3 position, float volume = 0.8f, bool isAffectedByTime = true, bool priority = false, bool spatialize = true, float rangeModifier = 1f)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x8F9714", Offset = "0x8F9714", VA = "0x8F9714")]
	public void PreloadSound(int ch, AudioClip clip)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x8F907C", Offset = "0x8F907C", VA = "0x8F907C")]
	public void Play(AudioClip clip, Vector3 position, float volume = 0.8f, bool isAffectedByTime = true, bool priority = false, bool spatialize = true, float rangeModifier = 1f, [Optional] AudioClip nearClip, [Optional] AudioClip farClip)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x8F979C", Offset = "0x8F979C", VA = "0x8F979C")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x20001BC")]
public class SoundRandomizer : MonoBehaviour
{
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clips;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x8F9850", Offset = "0x8F9850", VA = "0x8F9850")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x8F990C", Offset = "0x8F990C", VA = "0x8F990C")]
	public SoundRandomizer()
	{
	}
}
[Token(Token = "0x20001BD")]
public static class ESConstants
{
	[Token(Token = "0x40009DE")]
	public const int NumFactions = 12;
}
[Token(Token = "0x20001BE")]
public class CombatSettings
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BeginCombat.GoalTypes goal;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float initialScale;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSkirmishMode;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isResourceIntensive;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string skirmishChallengeId;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xD88634", Offset = "0xD88634", VA = "0xD88634")]
	public CombatSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BF")]
public class EnvironmentData
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int environmentType;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool ionStorms;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool spaceMines;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool fireballs;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool startPlayerClose;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasHazard;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xB4B310", Offset = "0xB4B310", VA = "0xB4B310")]
	public EnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C0")]
public class NavPointData
{
	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int asteroidLevel;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int resources;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int energyRes;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int crates;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int itemCrates;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int dustClouds;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int dangerClouds;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int shieldCloud;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int debrisFields;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int turrets;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int rifts;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool procedural;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xC23AD0", Offset = "0xC23AD0", VA = "0xC23AD0")]
	public NavPointData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class UnlockableLoadoutData
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StandardButtonObject buttonObject;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text headlineTextArea;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text bodyTextArea;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D82E4", Offset = "0x6D82E4")]
	public string unlockInstructions;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string originalText;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string textKey;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1B0BFEC", Offset = "0x1B0BFEC", VA = "0x1B0BFEC")]
	public UnlockableLoadoutData()
	{
	}
}
[Token(Token = "0x20001C2")]
public class SpaceBattleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001C3")]
	public class PlayerSaveData
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int CurrentVersionNumber;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int version;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int resources;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] inventory;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> storeShipsUnlocked;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpaceUnitSaveData[] ships;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int currentMissionTier;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int shipSlotsUnlocked;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int numCompletedMissions;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] scenarioKeyNames;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] scenarioKeyValues;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MissionMapData missionMap;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int totalResourcesEarned;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int totalShipsDestroyed;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalShipsLost;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int totalMissionsCompleted;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int totalMissionsFailed;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int totalShipsRescued;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int difficultyLevel;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int chosenFleet;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] playerReserveShips;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int gameMode;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public EndlessModeRunData endlessModeRun;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int scrap;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int score;

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x1177F04", Offset = "0x1177F04", VA = "0x1177F04")]
		public PlayerSaveData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C4")]
	public class GameSettingsData
	{
		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool snapZoomEnabled;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool switchHandsUI;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool enableJoystickMovement;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool enableGripRotation;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool freezeSkyRotation;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool steppedLocomotion;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool lowEndGraphics;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool combatCamOn;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothCamOn;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool reclineMode;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableHeightAdjustment;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool permadeathOn;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int difficultyLevel;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int chosenFleet;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool musicOn;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float musicLevel;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool bridgeSettingsSet2;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float consoleX;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float consoleY;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float consoleZ;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float consoleRotX;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float consoleRotY;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float consoleRotZ;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float playerHeightAdjustment;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool swapHands;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool victory1;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool victory2;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int lifetimeResourcesEarned;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int lifetimeShipsDestroyed;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int lifetimeShipsLost;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int lifetimeMissionsCompleted;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int lifetimeMissionsFailed;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int lifetimeShipsRescued;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int lifetimeMaxMissionReached;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int lifetimeScrapCollected;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] lifetimeKillsByFaction;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int lifetimeRuns;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int lifetimeWins;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> unlockedKeys;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float brightness;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float contrast;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float futureParam1;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float futureParam2;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float futureParam3;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float futureParam4;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool futureBool;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ShipLoadoutData lastRunItems;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int settingsFileVersion;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string chosenLanguage;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int lifetimeEasyWins;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int lifetimeMediumWins;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int lifetimeHardWins;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int skirmishChallengesCompleted;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool enableOneHandedPlay;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int lifetimeEndlessWinsEasy;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int lifetimeEndlessWinsMedium;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int lifetimeEndlessWinsHard;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int lifetimeEndlessWinsTotal;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int lifetimeEndlessMinibossWins;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int lifetimeMercsHired;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int lifetimeItemsUpgraded;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool voiceDisabled;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1177DC0", Offset = "0x1177DC0", VA = "0x1177DC0")]
		public GameSettingsData()
		{
		}
	}

	[Token(Token = "0x20001C5")]
	public enum GameStates
	{
		[Token(Token = "0x4000B42")]
		Title,
		[Token(Token = "0x4000B43")]
		Battle,
		[Token(Token = "0x4000B44")]
		Scenario,
		[Token(Token = "0x4000B45")]
		Bridge,
		[Token(Token = "0x4000B46")]
		Dead,
		[Token(Token = "0x4000B47")]
		EnteringSkirmish,
		[Token(Token = "0x4000B48")]
		Outro
	}

	[Token(Token = "0x20001C6")]
	public enum GameModes
	{
		[Token(Token = "0x4000B4A")]
		None,
		[Token(Token = "0x4000B4B")]
		Story,
		[Token(Token = "0x4000B4C")]
		Endless,
		[Token(Token = "0x4000B4D")]
		Skirmish,
		[Token(Token = "0x4000B4E")]
		Multiplayer,
		[Token(Token = "0x4000B4F")]
		Tutorial
	}

	[Token(Token = "0x20001C7")]
	public enum BridgeUIStates
	{
		[Token(Token = "0x4000B51")]
		Idle,
		[Token(Token = "0x4000B52")]
		Conversation,
		[Token(Token = "0x4000B53")]
		Starmap,
		[Token(Token = "0x4000B54")]
		Ship,
		[Token(Token = "0x4000B55")]
		Radar
	}

	[Token(Token = "0x20001C8")]
	public enum AnimationState
	{
		[Token(Token = "0x4000B57")]
		None,
		[Token(Token = "0x4000B58")]
		EnteringBattle,
		[Token(Token = "0x4000B59")]
		EnteredBattle,
		[Token(Token = "0x4000B5A")]
		LeavingBattle,
		[Token(Token = "0x4000B5B")]
		LeftBattle,
		[Token(Token = "0x4000B5C")]
		WarpBegin,
		[Token(Token = "0x4000B5D")]
		WarpEnd,
		[Token(Token = "0x4000B5E")]
		BeginningGame,
		[Token(Token = "0x4000B5F")]
		BegunGame,
		[Token(Token = "0x4000B60")]
		ReturningToTitle,
		[Token(Token = "0x4000B61")]
		ReturnedToTitle,
		[Token(Token = "0x4000B62")]
		EnteringSkirmish,
		[Token(Token = "0x4000B63")]
		EnteringOutro,
		[Token(Token = "0x4000B64")]
		EnteredOutro,
		[Token(Token = "0x4000B65")]
		BeginningTutorial
	}

	[Token(Token = "0x20001C9")]
	public enum FactionsEnum
	{
		[Token(Token = "0x4000B67")]
		Vistian,
		[Token(Token = "0x4000B68")]
		Feluusi,
		[Token(Token = "0x4000B69")]
		Kakkoo,
		[Token(Token = "0x4000B6A")]
		Entirrizi,
		[Token(Token = "0x4000B6B")]
		Finchuri,
		[Token(Token = "0x4000B6C")]
		Terran,
		[Token(Token = "0x4000B6D")]
		Kraya,
		[Token(Token = "0x4000B6E")]
		Grethon,
		[Token(Token = "0x4000B6F")]
		Dionoid,
		[Token(Token = "0x4000B70")]
		Boix,
		[Token(Token = "0x4000B71")]
		Akudat_Dow,
		[Token(Token = "0x4000B72")]
		Watcher,
		[Token(Token = "0x4000B73")]
		Any,
		[Token(Token = "0x4000B74")]
		Unknown,
		[Token(Token = "0x4000B75")]
		Ulanni
	}

	[Serializable]
	[Token(Token = "0x20001CA")]
	public class ShipEvent : UnityEvent<SpaceUnit>
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1178018", Offset = "0x1178018", VA = "0x1178018")]
		public ShipEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5A88", Offset = "0x6D5A88")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SpaceUnit> <>9__248_0;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<SpaceUnit, bool> <>9__324_0;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<SpaceUnit, bool> <>9__348_0;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<SpaceUnit> <>9__349_0;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<SpaceUnit> <>9__350_0;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<SpaceUnit, bool> <>9__399_0;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<SpaceUnit, bool> <>9__401_0;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<SpaceUnit, bool> <>9__402_0;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<SpaceUnit, bool> <>9__403_0;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Func<SpaceUnit, bool> <>9__404_0;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<SpaceUnit, bool> <>9__405_0;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Action<SpaceUnit> <>9__492_0;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x9404B0", Offset = "0x9404B0", VA = "0x9404B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x9404B8", Offset = "0x9404B8", VA = "0x9404B8")]
		internal void <set_isPaused>b__248_0(SpaceUnit x)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x9404D4", Offset = "0x9404D4", VA = "0x9404D4")]
		internal bool <ArrangePlayerShips>b__324_0(SpaceUnit ship)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x9404F4", Offset = "0x9404F4", VA = "0x9404F4")]
		internal bool <GetMercenaryCount>b__348_0(SpaceUnit ship)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x94050C", Offset = "0x94050C", VA = "0x94050C")]
		internal bool <SellShip>b__349_0(SpaceUnit o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x9405B8", Offset = "0x9405B8", VA = "0x9405B8")]
		internal bool <ShipDestroyed>b__350_0(SpaceUnit o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x940664", Offset = "0x940664", VA = "0x940664")]
		internal bool <GetPlayerShipsNoNPC>b__399_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x940684", Offset = "0x940684", VA = "0x940684")]
		internal bool <GetPlayerCapShips>b__401_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x9406D0", Offset = "0x9406D0", VA = "0x9406D0")]
		internal bool <GetPlayerFighters>b__402_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x940700", Offset = "0x940700", VA = "0x940700")]
		internal bool <GetEnemyCapShips>b__403_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x940720", Offset = "0x940720", VA = "0x940720")]
		internal bool <GetAllCapShips>b__404_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x94076C", Offset = "0x94076C", VA = "0x94076C")]
		internal bool <GetAllLabelledShips>b__405_0(SpaceUnit item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x9407C4", Offset = "0x9407C4", VA = "0x9407C4")]
		internal void <FreezeBattle>b__492_0(SpaceUnit x)
		{
		}
	}

	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5A98", Offset = "0x6D5A98")]
	private sealed class <OutroSequence>d__305 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x942DCC", Offset = "0x942DCC", VA = "0x942DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x942E14", Offset = "0x942E14", VA = "0x942E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x942B20", Offset = "0x942B20", VA = "0x942B20")]
		[DebuggerHidden]
		public <OutroSequence>d__305(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x942B4C", Offset = "0x942B4C", VA = "0x942B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x942B50", Offset = "0x942B50", VA = "0x942B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x942DD4", Offset = "0x942DD4", VA = "0x942DD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AA8", Offset = "0x6D5AA8")]
	private sealed class <SpawnAfterTime>d__312 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Fleet f;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x943B28", Offset = "0x943B28", VA = "0x943B28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x943B70", Offset = "0x943B70", VA = "0x943B70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x943A0C", Offset = "0x943A0C", VA = "0x943A0C")]
		[DebuggerHidden]
		public <SpawnAfterTime>d__312(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x943A38", Offset = "0x943A38", VA = "0x943A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x943A3C", Offset = "0x943A3C", VA = "0x943A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x943B30", Offset = "0x943B30", VA = "0x943B30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AB8", Offset = "0x6D5AB8")]
	private sealed class <SpawnReserveAfterTime>d__314 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int t;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x943C98", Offset = "0x943C98", VA = "0x943C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x943CE0", Offset = "0x943CE0", VA = "0x943CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x943B78", Offset = "0x943B78", VA = "0x943B78")]
		[DebuggerHidden]
		public <SpawnReserveAfterTime>d__314(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x943BA4", Offset = "0x943BA4", VA = "0x943BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x943BA8", Offset = "0x943BA8", VA = "0x943BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x943CA0", Offset = "0x943CA0", VA = "0x943CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AC8", Offset = "0x6D5AC8")]
	private sealed class <DelayedShipInit>d__317 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceUnit unit;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool emptyLoadout;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x94185C", Offset = "0x94185C", VA = "0x94185C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x9418A4", Offset = "0x9418A4", VA = "0x9418A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x94153C", Offset = "0x94153C", VA = "0x94153C")]
		[DebuggerHidden]
		public <DelayedShipInit>d__317(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x941568", Offset = "0x941568", VA = "0x941568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x94156C", Offset = "0x94156C", VA = "0x94156C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x941864", Offset = "0x941864", VA = "0x941864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AD8", Offset = "0x6D5AD8")]
	private sealed class <EnemiesFleeSequence>d__356 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SpaceUnit>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x941D88", Offset = "0x941D88", VA = "0x941D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x941DD0", Offset = "0x941DD0", VA = "0x941DD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x9419E4", Offset = "0x9419E4", VA = "0x9419E4")]
		[DebuggerHidden]
		public <EnemiesFleeSequence>d__356(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x941A10", Offset = "0x941A10", VA = "0x941A10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x941A80", Offset = "0x941A80", VA = "0x941A80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x941A2C", Offset = "0x941A2C", VA = "0x941A2C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x941D90", Offset = "0x941D90", VA = "0x941D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AE8", Offset = "0x6D5AE8")]
	private sealed class <StartMissionFailedSequence>d__357 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x944B08", Offset = "0x944B08", VA = "0x944B08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x944B50", Offset = "0x944B50", VA = "0x944B50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x9445B4", Offset = "0x9445B4", VA = "0x9445B4")]
		[DebuggerHidden]
		public <StartMissionFailedSequence>d__357(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x9445E0", Offset = "0x9445E0", VA = "0x9445E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x9445E4", Offset = "0x9445E4", VA = "0x9445E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x944B10", Offset = "0x944B10", VA = "0x944B10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5AF8", Offset = "0x6D5AF8")]
	private sealed class <StartMissionCompletedSequence>d__358 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x944564", Offset = "0x944564", VA = "0x944564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x9445AC", Offset = "0x9445AC", VA = "0x9445AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x943CE8", Offset = "0x943CE8", VA = "0x943CE8")]
		[DebuggerHidden]
		public <StartMissionCompletedSequence>d__358(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x943D14", Offset = "0x943D14", VA = "0x943D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x943D18", Offset = "0x943D18", VA = "0x943D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x94456C", Offset = "0x94456C", VA = "0x94456C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B08", Offset = "0x6D5B08")]
	private sealed class <DelayedReticle>d__359 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int reticleType;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject target;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minScale;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float addScale;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x9414EC", Offset = "0x9414EC", VA = "0x9414EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x941534", Offset = "0x941534", VA = "0x941534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x941320", Offset = "0x941320", VA = "0x941320")]
		[DebuggerHidden]
		public <DelayedReticle>d__359(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x94134C", Offset = "0x94134C", VA = "0x94134C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x941350", Offset = "0x941350", VA = "0x941350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x9414F4", Offset = "0x9414F4", VA = "0x9414F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B18", Offset = "0x6D5B18")]
	private sealed class <ExitWarpAnimation>d__390 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float t;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3> <placesToSweep>5__2;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x9423C8", Offset = "0x9423C8", VA = "0x9423C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x942410", Offset = "0x942410", VA = "0x942410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x941DD8", Offset = "0x941DD8", VA = "0x941DD8")]
		[DebuggerHidden]
		public <ExitWarpAnimation>d__390(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x941E04", Offset = "0x941E04", VA = "0x941E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x941E08", Offset = "0x941E08", VA = "0x941E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x9423D0", Offset = "0x9423D0", VA = "0x9423D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B28", Offset = "0x6D5B28")]
	private sealed class <BeginWarpAnimation>d__391 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x9412D0", Offset = "0x9412D0", VA = "0x9412D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x941318", Offset = "0x941318", VA = "0x941318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x940E58", Offset = "0x940E58", VA = "0x940E58")]
		[DebuggerHidden]
		public <BeginWarpAnimation>d__391(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x940E84", Offset = "0x940E84", VA = "0x940E84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x940E88", Offset = "0x940E88", VA = "0x940E88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x9412D8", Offset = "0x9412D8", VA = "0x9412D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B38", Offset = "0x6D5B38")]
	private sealed class <DeleteGameCO>d__433 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x941994", Offset = "0x941994", VA = "0x941994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x9419DC", Offset = "0x9419DC", VA = "0x9419DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x9418AC", Offset = "0x9418AC", VA = "0x9418AC")]
		[DebuggerHidden]
		public <DeleteGameCO>d__433(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x9418D8", Offset = "0x9418D8", VA = "0x9418D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x9418DC", Offset = "0x9418DC", VA = "0x9418DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x94199C", Offset = "0x94199C", VA = "0x94199C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B48", Offset = "0x6D5B48")]
	private sealed class <SaveSettingsCO>d__434 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <jsonString>5__2;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x9439BC", Offset = "0x9439BC", VA = "0x9439BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x943A04", Offset = "0x943A04", VA = "0x943A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x943610", Offset = "0x943610", VA = "0x943610")]
		[DebuggerHidden]
		public <SaveSettingsCO>d__434(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x94363C", Offset = "0x94363C", VA = "0x94363C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x943640", Offset = "0x943640", VA = "0x943640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x9439C4", Offset = "0x9439C4", VA = "0x9439C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B58", Offset = "0x6D5B58")]
	private sealed class <SaveGameCO>d__438 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int gameNum;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerSaveData <data>5__2;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <dataPath>5__3;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <jsonString>5__4;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x9435C0", Offset = "0x9435C0", VA = "0x9435C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x943608", Offset = "0x943608", VA = "0x943608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x942FF0", Offset = "0x942FF0", VA = "0x942FF0")]
		[DebuggerHidden]
		public <SaveGameCO>d__438(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x94301C", Offset = "0x94301C", VA = "0x94301C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x943020", Offset = "0x943020", VA = "0x943020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x9435C8", Offset = "0x9435C8", VA = "0x9435C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B68", Offset = "0x6D5B68")]
	private sealed class <LoadGameAndPenalizeCO>d__442 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int gameNum;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <dataPath>5__2;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerSaveData <gameData>5__3;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <jsonStringOut>5__4;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x942AD0", Offset = "0x942AD0", VA = "0x942AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x942B18", Offset = "0x942B18", VA = "0x942B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x942418", Offset = "0x942418", VA = "0x942418")]
		[DebuggerHidden]
		public <LoadGameAndPenalizeCO>d__442(int <>1__state)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x942444", Offset = "0x942444", VA = "0x942444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x942448", Offset = "0x942448", VA = "0x942448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x942AD8", Offset = "0x942AD8", VA = "0x942AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B78", Offset = "0x6D5B78")]
	private sealed class <BeginSkirmishSequence>d__474 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CombatSettings _combatSettings;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EnvironmentData envInfo;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NavPointData navData;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Fleet playerFleet1;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Fleet enemyFleet1;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <navPointPosition>5__2;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x940E08", Offset = "0x940E08", VA = "0x940E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x940E50", Offset = "0x940E50", VA = "0x940E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x9407E0", Offset = "0x9407E0", VA = "0x9407E0")]
		[DebuggerHidden]
		public <BeginSkirmishSequence>d__474(int <>1__state)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x94080C", Offset = "0x94080C", VA = "0x94080C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x940810", Offset = "0x940810", VA = "0x940810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x940E10", Offset = "0x940E10", VA = "0x940E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5B88", Offset = "0x6D5B88")]
	private sealed class <PreloadSoundsCo>d__482 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceBattleManager <>4__this;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x942FA0", Offset = "0x942FA0", VA = "0x942FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x942FE8", Offset = "0x942FE8", VA = "0x942FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x942E1C", Offset = "0x942E1C", VA = "0x942E1C")]
		[DebuggerHidden]
		public <PreloadSoundsCo>d__482(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x942E48", Offset = "0x942E48", VA = "0x942E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x942E4C", Offset = "0x942E4C", VA = "0x942E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x942FA8", Offset = "0x942FA8", VA = "0x942FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyticsTracker analytics;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRSystemManager VRSystem;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameSettingsData gameSettings;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CombatSettings currentCombatSettings;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentSaveGameSlot;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string saveFolderName;

	[Token(Token = "0x4000A02")]
	private const float mapSize = 1500f;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool switchedToAIPlayer;

	[Token(Token = "0x4000A04")]
	private const int startingResources = 100;

	[Token(Token = "0x4000A05")]
	private const int startingTier = 0;

	[Token(Token = "0x4000A06")]
	private const int startingRep = 0;

	[Token(Token = "0x4000A07")]
	private const int startingMission = 0;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] sessionLengthMilestones;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float navPointSize;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int InventoryMax;

	[NonSerialized]
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isWarpingIn;

	[NonSerialized]
	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool enteredBattleAnim;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] factions;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<string, string> factionShipUnlock;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextAsset[] presavedGames;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject titleScreenArea;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject titleScreenRestartButton;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject titleScreenEndlessModeButton;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro titleScreenStartText;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public EndlessModeFactionPage endlessModeFactionPage;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EndlessModeSettingsPage endlessModeSettingsPage;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text lifetimeStatsText;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject vistianFlagshipButton;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject warpMover;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameStates gameState;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public BridgeUIStates bridgeState;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationState animationState;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public GameModes currentGameMode;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public EndlessModeSettings endlessModeSettings;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public EndlessModeRunData endlessModeRun;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool missionIsOver;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public StoryManager storyManager;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float globalLineScale;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform vrObjectsOrigin;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject cameraOrigin;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject head;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject floorObject;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject spectatorCamObject;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject battleCamObject;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Camera mainCamera;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public NebulaManager nebulaManager;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Light sunLight;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Light underLight;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public ShipHandMenu shipHandMenu;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject endMissionButton;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject ShipFXVolume;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject SpaceFXVolume;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject shipUIPrefab;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject shipStatusUIPrefab;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject armorUIPrefab;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject goalMarkerPrefab;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject scanBeamPrefab;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject foldEffectPrefab;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject shieldHitPrefab;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject engineDamagePrefab;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject shieldDamagePrefab;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject shipTickPrefab;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject hullDamageParticlesPrefab;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject highlightPrefab;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject itemButtonPrefab;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject specialQuickViewPrefab;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject hullFirePrefab;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject systemHitPrefab;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject systemDisabledPrefab;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject wreckagePrefab;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public TrashManRecycleBin itemButtonRecycler;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TrashManRecycleBin shipUIRecycler;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject cloakFlashPrefab;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public MyCam spectatorCam;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject hitpointText;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject moneyText;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color[] underlightColors;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Color redColor;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Color blueColor;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Color greenColor;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Color yellowColor;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Color greyColor;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Color purpleColor;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Color lighterBlueColor;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public ESColorSettingsSO colorSettings;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public AudioClip[] generalSounds;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Material buttonHighlightMaterial;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Material shipHighlightMaterial;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Material selectedMaterial;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Material selectedEnemyMaterial;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Material inactiveMaterial;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Material ghostedMaterial;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Material selectedDamagedMaterial;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Material selection1Material;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Material selection2Material;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Material selection3Material;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Material selection4Material;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public Material selection5Material;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Material selection6Material;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Material normalTextMaterial;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Material yellowTextMaterial;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Material greenTextMaterial;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Material pinkTextMaterial;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Material redTextMaterial;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Material wireframeMaterial;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public Material wireframePurpleMaterial;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Material dottedLineMaterial;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Material titleTextMat;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public ItemList allItems;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public ItemList rewardItemsTier1;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public ItemList rewardItemsTier2;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public ItemList generalItems;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public ItemList standardCommands;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Dictionary<string, GameObject> itemLookup;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Material nebulaSkybox;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Material cloakGhost;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private SpaceUnit _selectedUnit;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public SpaceUnit flagship;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public UnitGrabberController[] controller;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public HintTextBuilder hintTextBuilder;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public string[] damageTypesKey;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public string[] damageTypesString;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public string[] damageTypeDescString;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public string[] buffTypesKey;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public string[] buffTypesString;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public string[] buffTypeDescString;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public LineRenderer[] hintLines;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public bool isOculus;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F9")]
	public bool handTrackingEnabled;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FA")]
	private bool _isPaused;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private Vector3 battleModeDefaultScale;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private bool applicationPaused;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private GameObject _lockToObject;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private bool _lockCamera;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x419")]
	private bool controllersInited;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41A")]
	private bool _rideMode;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public SpaceUnit rideObject;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public GameObject rideButton;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SpaceBattleManager instance;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private Vector3 positionInertia;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	private float scaleInertia;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private float steppedMovementDelay;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	private bool gripGestureStarted;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private Vector3[] gripPos;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private Vector3 lastCenter;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
	private Vector3 lastLocalCenter;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	private Vector3 lastDirection;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
	private Vector2 lastVec2;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
	private Vector3 lastSingleGripPos;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private int lastSingleGripIndex;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
	private bool singleGripStarted;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private float lastScale;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
	private float originalScale;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public Fleet playerFleet;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public Fleet[] startingFleets;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public Fleet[] endlessStartingFleets;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	private bool failureConditionMet;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B1")]
	private bool victoryConditionMet;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B2")]
	private bool escaped;

	[NonSerialized]
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
	public int thingsCompleted;

	[NonSerialized]
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public int thingsToComplete;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
	private int numAssetsToProtect;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	private int assetsSaved;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	private int _playerResources;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	private GoTween playerResourcesTween;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	private int _playerScrap;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	private GoTween playerScrapTween;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	private int _playerScore;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	private GoTween playerScoreTween;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private int _playerResourcesUIValue;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
	private int _playerScrapUIValue;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	private int _playerScoreUIValue;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	[HideInInspector]
	public Dictionary<string, int> scenarioKeys;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public List<string> storeShipsUnlocked;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public int shipSlotsUnlocked;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public ItemList startingInventory;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public ItemList itemInventory;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public ItemList itemInventoryTrash;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public int currentMissionTier;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
	public int numCompletedMissions;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public int resourcesEarned;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
	public int shipsDestroyed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public int shipsLost;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
	public int scrapCollected;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public int totalResourcesEarned;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	public int totalShipsDestroyed;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public int totalShipsLost;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
	public int totalMissionsCompleted;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public int totalMissionsFailed;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
	public int totalShipsRescued;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public List<string> newUnlocks;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public ScenarioCanvas currentScenario;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public GameObject currentScenarioPremade;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	private List<SpaceUnit> allShips;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	private Dictionary<int, List<SpaceUnit>> shipsByTeam;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	private Dictionary<int, List<string>> reserveShipsByTeam;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	private List<string> logItems;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	private List<GameObject> scenery;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	private float _timeScaleTarget;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	[HideInInspector]
	public GameObject currentSceneryObject;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	private int restartGameClicks;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B4")]
	private int _externalCamLastIndex;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	private float timeToSwitchCamera;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	public float battleTime;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	[HideInInspector]
	public float headScale;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C4")]
	[HideInInspector]
	public float glowRange1;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public float glowRange2;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
	[HideInInspector]
	public Vector3 headPosition;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public ShipEvent explodedEvent;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public EnvironmentType[] environments;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public EnvironmentType currentEnvironment;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public GameObject[] titleScreenMenus;

	[NonSerialized]
	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	[HideInInspector]
	public bool preloadingComplete;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5FC")]
	private int secretMenuPressCount;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	public OutroScene outro;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	public UnlockableLoadoutData[] unlockableLoadoutData;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D835C", Offset = "0x6D835C")]
	public string[] titleScreenNewsText;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	private int currentNewsTextItem;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public TextRevealer titleScreenNewsRevealer;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	private Vector3 savedCameraOriginPos;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x634")]
	private Quaternion savedCameraOriginRot;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public GameObject[] reticleList;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public TMP_Text unlocksText;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	public EndlessModeAssets endlessModeAssets;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public Texture scanlineTexture;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public StringListSO validDesignations;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public bool _cheatMode;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	public SpaceUnit bestPlayerShip;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	private bool _isSaving;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x681")]
	public bool timeStopped;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x682")]
	public bool repositionModeOn;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public FancyButton[] statsButtons;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	[HideInInspector]
	public bool scoresTop;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	[HideInInspector]
	public string currentLeaderboard;

	[Token(Token = "0x4000AE6")]
	private const int UNLOCK_MERCS_REQUIRED = 5;

	[Token(Token = "0x4000AE7")]
	private const int UNLOCK_UPGRADES_REQUIRED = 5;

	[Token(Token = "0x4000AE8")]
	private const int UNLOCK_GRETHON_ENDLESS_WINS = 1;

	[Token(Token = "0x4000AE9")]
	private const int UNLOCK_VISTIAN_ENDLESS_WINS = 1;

	[Token(Token = "0x17000074")]
	private bool lockCamera
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x8F9914", Offset = "0x8F9914", VA = "0x8F9914")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x8F991C", Offset = "0x8F991C", VA = "0x8F991C")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool rideMode
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x8F9CE8", Offset = "0x8F9CE8", VA = "0x8F9CE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x8F9CDC", Offset = "0x8F9CDC", VA = "0x8F9CDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int playerResources
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0x8F9CF0", Offset = "0x8F9CF0", VA = "0x8F9CF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600099D")]
		[Address(RVA = "0x8F9CF8", Offset = "0x8F9CF8", VA = "0x8F9CF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int playerScrap
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x8F9E54", Offset = "0x8F9E54", VA = "0x8F9E54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8F9E5C", Offset = "0x8F9E5C", VA = "0x8F9E5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public int playerScore
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x8F9FD4", Offset = "0x8F9FD4", VA = "0x8F9FD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x8F9FDC", Offset = "0x8F9FDC", VA = "0x8F9FDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public int playerResourcesUIValue
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x8FA138", Offset = "0x8FA138", VA = "0x8FA138")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8FA140", Offset = "0x8FA140", VA = "0x8FA140")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public int playerScrapUIValue
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8FA274", Offset = "0x8FA274", VA = "0x8FA274")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x8FA27C", Offset = "0x8FA27C", VA = "0x8FA27C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public int playerScoreUIValue
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8FA3B0", Offset = "0x8FA3B0", VA = "0x8FA3B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x8FA3B8", Offset = "0x8FA3B8", VA = "0x8FA3B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool isPaused
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x8FA4D0", Offset = "0x8FA4D0", VA = "0x8FA4D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8FA4D8", Offset = "0x8FA4D8", VA = "0x8FA4D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public SpaceUnit selectedUnit
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x8FAA48", Offset = "0x8FAA48", VA = "0x8FAA48")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x8FAA50", Offset = "0x8FAA50", VA = "0x8FAA50")]
		set
		{
		}
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x8FACC4", Offset = "0x8FACC4", VA = "0x8FACC4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x8FACC8", Offset = "0x8FACC8", VA = "0x8FACC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x8FACCC", Offset = "0x8FACCC", VA = "0x8FACCC")]
	private void VRInit()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x8FAFE0", Offset = "0x8FAFE0", VA = "0x8FAFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x8FBF18", Offset = "0x8FBF18", VA = "0x8FBF18")]
	public void SaveAndReturnToTitle()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x8FC028", Offset = "0x8FC028", VA = "0x8FC028")]
	public void ReturnToTitle()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x8FC21C", Offset = "0x8FC21C", VA = "0x8FC21C")]
	private void SetHandStyle(int s)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x8FC2FC", Offset = "0x8FC2FC", VA = "0x8FC2FC")]
	private void SetControllersEnabled(bool _enabled)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x8FC0C0", Offset = "0x8FC0C0", VA = "0x8FC0C0")]
	public void ResetControllers()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x8FC398", Offset = "0x8FC398", VA = "0x8FC398")]
	public bool AnyControllersActing()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x8FC41C", Offset = "0x8FC41C", VA = "0x8FC41C")]
	public void TitleScreen_SetMenu(int n)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x8FC504", Offset = "0x8FC504", VA = "0x8FC504")]
	public void TitleScreen_AdvanceNews()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x8FC620", Offset = "0x8FC620", VA = "0x8FC620")]
	private void SetIntroHandMenuMessage()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x8FC6DC", Offset = "0x8FC6DC", VA = "0x8FC6DC")]
	public void DelayedHandsCheck()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x8FC6E0", Offset = "0x8FC6E0", VA = "0x8FC6E0")]
	public void UpdateTitleStats()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x8FD850", Offset = "0x8FD850", VA = "0x8FD850")]
	public void TitleScreen()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x8FE0D0", Offset = "0x8FE0D0", VA = "0x8FE0D0")]
	public void PreloadingCompleted()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x8FE1B4", Offset = "0x8FE1B4", VA = "0x8FE1B4")]
	private string GetProgressText(int count, int goal)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x8FE44C", Offset = "0x8FE44C", VA = "0x8FE44C")]
	private string GetProgressTextShort(int count, int goal)
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x8FE4DC", Offset = "0x8FE4DC", VA = "0x8FE4DC")]
	public void SetupPickFlagshipScreen()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x8FEE58", Offset = "0x8FEE58", VA = "0x8FEE58")]
	public string GetCheckedUncheckedTextBox(bool status)
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x8FEEBC", Offset = "0x8FEEBC", VA = "0x8FEEBC")]
	public bool UnlockedShipStartingUpgrades()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x8FEEE0", Offset = "0x8FEEE0", VA = "0x8FEEE0")]
	public bool UnlockedShipStartingSalvage()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x8FEF04", Offset = "0x8FEF04", VA = "0x8FEF04")]
	public bool UnlockedShipStartingUpgrades2()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x8FEF28", Offset = "0x8FEF28", VA = "0x8FEF28")]
	public void SetupUnlocksPanel()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x8FF988", Offset = "0x8FF988", VA = "0x8FF988")]
	public void DifficultyScreen_NextClicked()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x8FFAE4", Offset = "0x8FFAE4", VA = "0x8FFAE4")]
	public void TitleScreen_SetFlagship(int num)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x8FFC20", Offset = "0x8FFC20", VA = "0x8FFC20")]
	public void TitleScreen_SetFlagshipEndless(int num)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x8FFD00", Offset = "0x8FFD00", VA = "0x8FFD00")]
	public void TitleScreen_EndlessFactionNext()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x8FFD64", Offset = "0x8FFD64", VA = "0x8FFD64")]
	public void TitleScreen_BeginGameEndless()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x8FFE84", Offset = "0x8FFE84", VA = "0x8FFE84")]
	public void TitleScreen_BeginTutorialClicked()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x8FFFFC", Offset = "0x8FFFFC", VA = "0x8FFFFC")]
	public void TitleScreen_SkirmishClicked()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x90010C", Offset = "0x90010C", VA = "0x90010C")]
	public void BeginGameClick()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9003B8", Offset = "0x9003B8", VA = "0x9003B8")]
	public void BeginEndlessModeClick()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x900680", Offset = "0x900680", VA = "0x900680")]
	public void BeginTestGame(int num)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x901698", Offset = "0x901698", VA = "0x901698")]
	public void RestartGameClick()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x900708", Offset = "0x900708", VA = "0x900708")]
	public void BeginGame(int gameNum = 0, bool cheat = false, bool tutorial = false)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x904A70", Offset = "0x904A70", VA = "0x904A70")]
	public void SaveScore()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x904AD8", Offset = "0x904AD8", VA = "0x904AD8")]
	public void BeginEndlessOutro()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x904F00", Offset = "0x904F00", VA = "0x904F00")]
	public void BeginOutro()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x905124", Offset = "0x905124", VA = "0x905124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDCBC", Offset = "0x6DDCBC")]
	private IEnumerator OutroSequence()
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x90519C", Offset = "0x90519C", VA = "0x90519C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x9040CC", Offset = "0x9040CC", VA = "0x9040CC")]
	private void UpdateResourcesDisplay()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x90377C", Offset = "0x90377C", VA = "0x90377C")]
	private void SetCameraPos()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x905588", Offset = "0x905588", VA = "0x905588")]
	public Vector3 GetRandomEmptyLocation(float anyRadius, float shipRadius, Vector3 center, float maxRange = 2000f, float yFactor = 1f, float minRangeFromCenter = 0f, bool firstTryIsCenter = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x905B08", Offset = "0x905B08", VA = "0x905B08")]
	public void PositionFleetShipsLine(List<SpaceUnit> ships, Vector3 fleetPosition, Vector3 fleetDirection, float deltaFactor)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x9062D4", Offset = "0x9062D4", VA = "0x9062D4")]
	public GameObject SpawnNavPoint(int num, Vector3 pos, bool scanGoal)
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x906488", Offset = "0x906488", VA = "0x906488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDD1C", Offset = "0x6DDD1C")]
	public IEnumerator SpawnAfterTime(Fleet f, float delayTime = 10f)
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x90652C", Offset = "0x90652C", VA = "0x90652C")]
	public SpaceUnit SpawnShip(Fleet f)
	{
		return null;
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x9067C0", Offset = "0x9067C0", VA = "0x9067C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDD7C", Offset = "0x6DDD7C")]
	public IEnumerator SpawnReserveAfterTime(int t, float delayTime = 10f)
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x906858", Offset = "0x906858", VA = "0x906858")]
	public void SpawnReserveShip(int t)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x906790", Offset = "0x906790", VA = "0x906790")]
	public void DoDelayedShipInit(SpaceUnit unit, bool emptyLoadout = false)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x906A48", Offset = "0x906A48", VA = "0x906A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDDDC", Offset = "0x6DDDDC")]
	public IEnumerator DelayedShipInit(SpaceUnit unit, bool emptyLoadout = false)
	{
		return null;
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x901D24", Offset = "0x901D24", VA = "0x901D24")]
	public SpaceUnit[] CreateFleet(Fleet f, bool isPlayerFleet, Vector3 fleetPosition, Vector3 fleetFacing)
	{
		return null;
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x906EE8", Offset = "0x906EE8", VA = "0x906EE8")]
	public bool IsReduceDetailModeActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x906EF0", Offset = "0x906EF0", VA = "0x906EF0")]
	public void TurnOffDetails()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x90700C", Offset = "0x90700C", VA = "0x90700C")]
	public void Internal_AddShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x906AE8", Offset = "0x906AE8", VA = "0x906AE8")]
	public void AddNewShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x904088", Offset = "0x904088", VA = "0x904088")]
	public void UpdateShipsDisplay()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x9070AC", Offset = "0x9070AC", VA = "0x9070AC")]
	public void ArrangePlayerShips()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x907504", Offset = "0x907504", VA = "0x907504")]
	public void SwitchShipTeam(SpaceUnit unit, int newteam)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x9079C8", Offset = "0x9079C8", VA = "0x9079C8")]
	public void CleanupScenario(bool destroyAll = false)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x9061A0", Offset = "0x9061A0", VA = "0x9061A0")]
	public void SweepSceneryFromArea(Vector3 pos, float radius)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x9086C4", Offset = "0x9086C4", VA = "0x9086C4")]
	public void createAsteroid(GameObject asteroidType, float scale, Vector3 pos, bool limitRotation = false)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x908850", Offset = "0x908850", VA = "0x908850")]
	public void createAsteroid(string asteroidType, float scale, Vector3 pos, bool limitRotation = false)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9089A8", Offset = "0x9089A8", VA = "0x9089A8")]
	public void TestLighting()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x908BD8", Offset = "0x908BD8", VA = "0x908BD8")]
	public void SetSky(Material skyMat)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x908E78", Offset = "0x908E78", VA = "0x908E78")]
	public void SetScenery(SceneryHolder scenery)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x909064", Offset = "0x909064", VA = "0x909064")]
	public void ClearScenery()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x8FDEC8", Offset = "0x8FDEC8", VA = "0x8FDEC8")]
	public void ChangeScenery(EnvironmentData envInfo, bool transition = true)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x909124", Offset = "0x909124", VA = "0x909124")]
	public void SetEnvironment(int envId)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x903870", Offset = "0x903870", VA = "0x903870")]
	public void BeginScenario(MissionNode missionMapNode, ScenarioCanvas scenario)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x909234", Offset = "0x909234", VA = "0x909234")]
	public void InitCamDelayed()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x9092D4", Offset = "0x9092D4", VA = "0x9092D4")]
	public void ChangeSceneryDelayed()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x90939C", Offset = "0x90939C", VA = "0x90939C")]
	public void CreateNavPoint(Vector3 center, EnvironmentData envInfo, NavPointData node)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x909EBC", Offset = "0x909EBC", VA = "0x909EBC")]
	public void BeginScenario2()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x904104", Offset = "0x904104", VA = "0x904104")]
	public void SetExternalCamShip(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x909F74", Offset = "0x909F74", VA = "0x909F74")]
	public void CombatEnded()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x90645C", Offset = "0x90645C", VA = "0x90645C")]
	public void AddGoal()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x90A5B8", Offset = "0x90A5B8", VA = "0x90A5B8")]
	public int GetThingsCompleted()
	{
		return default(int);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x90A5C0", Offset = "0x90A5C0", VA = "0x90A5C0")]
	public void GoalCompleted()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x907710", Offset = "0x907710", VA = "0x907710")]
	public void CheckVictoryConditions()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x90A7A4", Offset = "0x90A7A4", VA = "0x90A7A4")]
	public void ShipEscaped(SpaceUnit unit)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x90AC9C", Offset = "0x90AC9C", VA = "0x90AC9C")]
	public int GetMercenaryCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x90AE10", Offset = "0x90AE10", VA = "0x90AE10")]
	public bool SellShip(SpaceUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x90B26C", Offset = "0x90B26C", VA = "0x90B26C")]
	public void ShipDestroyed(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x90BDF8", Offset = "0x90BDF8", VA = "0x90BDF8")]
	private void DeathCam(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x90BF4C", Offset = "0x90BF4C", VA = "0x90BF4C")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x90BFF8", Offset = "0x90BFF8", VA = "0x90BFF8")]
	public void TriggerEnemiesFlee()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x90C0B0", Offset = "0x90C0B0", VA = "0x90C0B0")]
	public void TriggerSuccess()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x90A9C0", Offset = "0x90A9C0", VA = "0x90A9C0")]
	public void TriggerFail()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x90A6B4", Offset = "0x90A6B4", VA = "0x90A6B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDE3C", Offset = "0x6DDE3C")]
	private IEnumerator EnemiesFleeSequence()
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x90A72C", Offset = "0x90A72C", VA = "0x90A72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDE9C", Offset = "0x6DDE9C")]
	private IEnumerator StartMissionFailedSequence()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x90A620", Offset = "0x90A620", VA = "0x90A620")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDEFC", Offset = "0x6DDEFC")]
	private IEnumerator StartMissionCompletedSequence(string message = "hostiles_eliminated")
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x90C138", Offset = "0x90C138", VA = "0x90C138")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDF5C", Offset = "0x6DDF5C")]
	public IEnumerator DelayedReticle(float seconds, GameObject target, int reticleType = 0, float minScale = 50f, float addScale = 120f, float duration = 5f)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x90C200", Offset = "0x90C200", VA = "0x90C200")]
	public void ShowReticle(GameObject target, int reticleType = 0, float minScale = 50f, float addScale = 120f, float duration = 5f)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x90C32C", Offset = "0x90C32C", VA = "0x90C32C")]
	public bool didFail()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x90C360", Offset = "0x90C360", VA = "0x90C360")]
	public bool didEscape()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x90C368", Offset = "0x90C368", VA = "0x90C368")]
	public void addToScenery(GameObject o)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x90C3CC", Offset = "0x90C3CC", VA = "0x90C3CC")]
	public Vector3 GetTeamCentroid(int t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x90C5B4", Offset = "0x90C5B4", VA = "0x90C5B4")]
	public void SnapZoomOut(Vector3 centerPos, float targetScale = 1000f)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x90C7C4", Offset = "0x90C7C4", VA = "0x90C7C4")]
	private void MovePlayer(Vector3 offset, bool limitY = false, bool expMovement = false)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x90CBFC", Offset = "0x90CBFC", VA = "0x90CBFC")]
	private void FrameUpdate()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x90E968", Offset = "0x90E968", VA = "0x90E968")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x90E96C", Offset = "0x90E96C", VA = "0x90E96C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x90EF6C", Offset = "0x90EF6C", VA = "0x90EF6C")]
	public SpaceProjectile[] FindProjectilesNear(Vector3 position, float radius = 400f)
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x90F180", Offset = "0x90F180", VA = "0x90F180")]
	public SpaceUnit[] FindShipsInPath(Vector3 start, Vector3 end, float radius, [Optional] SpaceUnit ignore)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x90F49C", Offset = "0x90F49C", VA = "0x90F49C")]
	public ShipCollision FindFirstShipInPath(Vector3 start, Vector3 end, [Optional] SpaceUnit ignore, int ignoreTeam = 0)
	{
		return default(ShipCollision);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x90F8D0", Offset = "0x90F8D0", VA = "0x90F8D0")]
	public List<SpaceUnit> GetShipsOfTeam(int team)
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x90F934", Offset = "0x90F934", VA = "0x90F934")]
	public List<SpaceUnit> GetEnemies(int team)
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x90FB24", Offset = "0x90FB24", VA = "0x90FB24")]
	public SpaceUnit GetStarbase()
	{
		return null;
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x90FC80", Offset = "0x90FC80", VA = "0x90FC80")]
	public bool AnyTargetsNear(Vector3 position, float radius = 600f, SizePreference sizePref = SizePreference.None, [Optional] SpaceUnit myShip, bool foeItem = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x90FF20", Offset = "0x90FF20", VA = "0x90FF20")]
	public bool AnyEnemiesNear(Vector3 position, float radius = 600f, SizePreference sizePref = SizePreference.None, int myTeam = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x910160", Offset = "0x910160", VA = "0x910160")]
	public List<SpaceUnit> FindTargetsNear(Vector3 position, float radius = 600f, SizePreference sizePref = SizePreference.None, [Optional] SpaceUnit myShip, bool foeItem = true)
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x9057AC", Offset = "0x9057AC", VA = "0x9057AC")]
	public SpaceUnit[] FindShipsNear(Vector3 position, float radius = 400f, SizePreference sizePref = SizePreference.None, [Optional] SpaceUnit ignore, bool excludeNeutral = true, bool includeMissiles = false)
	{
		return null;
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x910458", Offset = "0x910458", VA = "0x910458")]
	public SpaceUnit FindClosestShip(Vector3 position, float radius = 600f, SizePreference sizePref = SizePreference.None, bool excludeNPCs = false)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x90347C", Offset = "0x90347C", VA = "0x90347C")]
	public void ReturnToBridge(bool animated)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x9107A8", Offset = "0x9107A8", VA = "0x9107A8")]
	public void EnterBattleModeTransitionToActive()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x910CB0", Offset = "0x910CB0", VA = "0x910CB0")]
	public void CheckDisplayRates()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x910CB4", Offset = "0x910CB4", VA = "0x910CB4")]
	public void EnterBattleMode(bool animated, CombatSettings _combatSettings)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x9111B4", Offset = "0x9111B4", VA = "0x9111B4")]
	public void FadeCompleted()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9122D0", Offset = "0x9122D0", VA = "0x9122D0")]
	public void SkirmishMissionCompleted()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x912528", Offset = "0x912528", VA = "0x912528")]
	public Vector3 GetLookingAtPosition(GameObject g, Vector3 headDir, float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x912634", Offset = "0x912634", VA = "0x912634")]
	public void TeleportToObject(GameObject g, float distance = 0.5f)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9049E8", Offset = "0x9049E8", VA = "0x9049E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DDFBC", Offset = "0x6DDFBC")]
	private IEnumerator ExitWarpAnimation(float t = 6f)
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x9129DC", Offset = "0x9129DC", VA = "0x9129DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE01C", Offset = "0x6DE01C")]
	private IEnumerator BeginWarpAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x912A54", Offset = "0x912A54", VA = "0x912A54")]
	public void DoTravel()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x912B78", Offset = "0x912B78", VA = "0x912B78")]
	public void ScenarioEnded()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x90B1BC", Offset = "0x90B1BC", VA = "0x90B1BC")]
	public void AddResources(int amt)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x912C9C", Offset = "0x912C9C", VA = "0x912C9C")]
	public void AddScrap(int amt)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x912CF8", Offset = "0x912CF8", VA = "0x912CF8")]
	public float GetScoreModForDifficulty()
	{
		return default(float);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x912D30", Offset = "0x912D30", VA = "0x912D30")]
	public void AddScore(int amt)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x912EE4", Offset = "0x912EE4", VA = "0x912EE4")]
	public List<SpaceUnit> GetPlayerShips()
	{
		return null;
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x912F3C", Offset = "0x912F3C", VA = "0x912F3C")]
	public List<SpaceUnit> GetPlayerShipsNoNPC()
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x9130B0", Offset = "0x9130B0", VA = "0x9130B0")]
	public List<SpaceUnit> GetEnemyShips()
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x913108", Offset = "0x913108", VA = "0x913108")]
	public List<SpaceUnit> GetPlayerCapShips()
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x91327C", Offset = "0x91327C", VA = "0x91327C")]
	public List<SpaceUnit> GetPlayerFighters()
	{
		return null;
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x9133F0", Offset = "0x9133F0", VA = "0x9133F0")]
	public List<SpaceUnit> GetEnemyCapShips()
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x913564", Offset = "0x913564", VA = "0x913564")]
	public List<SpaceUnit> GetAllCapShips()
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x9136A4", Offset = "0x9136A4", VA = "0x9136A4")]
	public List<SpaceUnit> GetAllLabelledShips()
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x9137E4", Offset = "0x9137E4", VA = "0x9137E4")]
	public int GetPlayerFleetCombatPower()
	{
		return default(int);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x906D68", Offset = "0x906D68", VA = "0x906D68")]
	public SpaceUnit GetBestPlayerShip()
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x913958", Offset = "0x913958", VA = "0x913958")]
	public void UnlockNextShipSlot()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x9139E0", Offset = "0x9139E0", VA = "0x9139E0")]
	public void UnlockStoreShip(string shipName)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x913AB0", Offset = "0x913AB0", VA = "0x913AB0")]
	public void ShowShipGainedMessage(string shipName, bool isFighter = false)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x901A58", Offset = "0x901A58", VA = "0x901A58")]
	public void InitScenarioKeys()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x901B5C", Offset = "0x901B5C", VA = "0x901B5C")]
	public void SetScenarioKeyValue(string name, int val)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x913B14", Offset = "0x913B14", VA = "0x913B14")]
	public void ModifyScenarioKeyValue(string name, int amount)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x913C84", Offset = "0x913C84", VA = "0x913C84")]
	public int GetScenarioKeyValue(string keyName)
	{
		return default(int);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x913E64", Offset = "0x913E64", VA = "0x913E64")]
	public void UpdateUnlocks()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x913E68", Offset = "0x913E68", VA = "0x913E68")]
	public void AddToInventory(GameObject g, bool silent = false)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x902E0C", Offset = "0x902E0C", VA = "0x902E0C")]
	public void AddToInventory(string itemName, bool silent = false)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x914318", Offset = "0x914318", VA = "0x914318")]
	public void AddToTrash(GameObject g)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x9143D0", Offset = "0x9143D0", VA = "0x9143D0")]
	public GameObject RemoveFromInventory(int index)
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x91449C", Offset = "0x91449C", VA = "0x91449C")]
	public void SwapInventoryItemAndTrashItem(int invIndex, int trashIndex)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x9082AC", Offset = "0x9082AC", VA = "0x9082AC")]
	public void RecycleItem(GameObject g, [Optional] GameObject trashCan)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x9081DC", Offset = "0x9081DC", VA = "0x9081DC")]
	public GameObject RemoveFromTrash(int index)
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x9145B8", Offset = "0x9145B8", VA = "0x9145B8")]
	public int GetDifficulty()
	{
		return default(int);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x9145D4", Offset = "0x9145D4", VA = "0x9145D4")]
	public PlayerSaveData GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x904D6C", Offset = "0x904D6C", VA = "0x904D6C")]
	public void SaveLastRunItems()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x8FF624", Offset = "0x8FF624", VA = "0x8FF624")]
	public List<string> GetLastRunSalvageList(bool getLocalizedName = true)
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x902D48", Offset = "0x902D48", VA = "0x902D48")]
	public string PickLastRunSalvageItem()
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x901C00", Offset = "0x901C00", VA = "0x901C00")]
	public string GetPathForGameNum(int gameNum)
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x914A48", Offset = "0x914A48", VA = "0x914A48")]
	public string GetPathForSettings()
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x914B24", Offset = "0x914B24", VA = "0x914B24")]
	public string GetRootDataPath()
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x8FDEB0", Offset = "0x8FDEB0", VA = "0x8FDEB0")]
	public bool DoesGameExist(int gameNum = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x901938", Offset = "0x901938", VA = "0x901938")]
	public void DeleteGame(int gameNum = 0)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x904E88", Offset = "0x904E88", VA = "0x904E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE07C", Offset = "0x6DE07C")]
	public IEnumerator DeleteGameCO(int gameNum)
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x914BA0", Offset = "0x914BA0", VA = "0x914BA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE0DC", Offset = "0x6DE0DC")]
	public IEnumerator SaveSettingsCO()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x8FFAB8", Offset = "0x8FFAB8", VA = "0x8FFAB8")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x914C18", Offset = "0x914C18", VA = "0x914C18")]
	public void DeleteSettings()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x914C58", Offset = "0x914C58", VA = "0x914C58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE13C", Offset = "0x6DE13C")]
	public IEnumerator SaveGameCO(int gameNum)
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x8FBFD8", Offset = "0x8FBFD8", VA = "0x8FBFD8")]
	public void SaveGame(int gameNum = -1)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x8FB7E4", Offset = "0x8FB7E4", VA = "0x8FB7E4")]
	public bool LoadSettings()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x90308C", Offset = "0x90308C", VA = "0x90308C")]
	public bool LoadGame(int gameNum = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x9153F0", Offset = "0x9153F0", VA = "0x9153F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE19C", Offset = "0x6DE19C")]
	public IEnumerator LoadGameAndPenalizeCO(int gameNum)
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x90BF08", Offset = "0x90BF08", VA = "0x90BF08")]
	public bool LoadGameAndPenalize(int gameNum = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x914DE0", Offset = "0x914DE0", VA = "0x914DE0")]
	public void LoadFromData(PlayerSaveData data)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x915478", Offset = "0x915478", VA = "0x915478")]
	public void ToggleSnapZoom()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x91549C", Offset = "0x91549C", VA = "0x91549C")]
	public void DebugAudioListeners()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x90916C", Offset = "0x90916C", VA = "0x90916C")]
	public void Log(string str)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x9141A8", Offset = "0x9141A8", VA = "0x9141A8")]
	public void LogError(string str)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x915668", Offset = "0x915668", VA = "0x915668")]
	public string GetLogStr()
	{
		return null;
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x9157BC", Offset = "0x9157BC", VA = "0x9157BC")]
	public void ToggleMusic()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x915878", Offset = "0x915878", VA = "0x915878")]
	public void ToggleCombatCam()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x915930", Offset = "0x915930", VA = "0x915930")]
	public void ToggleJoystickMovement()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x915974", Offset = "0x915974", VA = "0x915974")]
	public void ToggleOneHandedPlay()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x9159B8", Offset = "0x9159B8", VA = "0x9159B8")]
	public void ToggleGripRotation()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x9159FC", Offset = "0x9159FC", VA = "0x9159FC")]
	public void ToggleHeightAdjustment()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x915A40", Offset = "0x915A40", VA = "0x915A40")]
	public void ToggleSwapHands()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x915A84", Offset = "0x915A84", VA = "0x915A84")]
	public void ToggleSmoothCam()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x915BAC", Offset = "0x915BAC", VA = "0x915BAC")]
	public void ToggleLowEnd()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x915C30", Offset = "0x915C30", VA = "0x915C30")]
	public void BridgeChanged()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x910768", Offset = "0x910768", VA = "0x910768")]
	public void RestoreBridgeSettings()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x8FAC04", Offset = "0x8FAC04", VA = "0x8FAC04")]
	public void DroneCam_SetLocked(GameObject g)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x915C80", Offset = "0x915C80", VA = "0x915C80")]
	public void DroneCam_ChangePerspective()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x90BD38", Offset = "0x90BD38", VA = "0x90BD38")]
	public void BattleCam_ShipDied(SpaceUnit unit)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x915D2C", Offset = "0x915D2C", VA = "0x915D2C")]
	public void DroneCam_ToggleFreeze()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x915E04", Offset = "0x915E04", VA = "0x915E04")]
	public void BattleCam_FocusShip(SpaceUnit unit, GameObject target)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x915F1C", Offset = "0x915F1C", VA = "0x915F1C")]
	public void BeginRideMode()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x916014", Offset = "0x916014", VA = "0x916014")]
	public void EndRideMode()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x912C80", Offset = "0x912C80", VA = "0x912C80")]
	public ShipBridge GetBridge()
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x9160CC", Offset = "0x9160CC", VA = "0x9160CC")]
	public void SetMusicLevel(float f)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x914CE0", Offset = "0x914CE0", VA = "0x914CE0")]
	public void SetBrightness(float f, bool _saveSettings = true)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x91617C", Offset = "0x91617C", VA = "0x91617C")]
	public void SetUnlockKey(string n, bool state)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x8FBC9C", Offset = "0x8FBC9C", VA = "0x8FBC9C")]
	public bool UnlockKey(string n, bool _saveSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x8FEDEC", Offset = "0x8FEDEC", VA = "0x8FEDEC")]
	public bool HasUnlockedKey(string n)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x916294", Offset = "0x916294", VA = "0x916294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE1FC", Offset = "0x6DE1FC")]
	public IEnumerator BeginSkirmishSequence(Fleet playerFleet1, Fleet enemyFleet1, EnvironmentData envInfo, NavPointData navData, CombatSettings _combatSettings)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x916388", Offset = "0x916388", VA = "0x916388")]
	public void BeginSkirmish(Fleet playerFleet1, Fleet enemyFleet1, EnvironmentData envInfo, NavPointData navData, CombatSettings _combatSettings, int techTier = 2)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x9165CC", Offset = "0x9165CC", VA = "0x9165CC")]
	public void DestroyAllTeam(int n)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x916744", Offset = "0x916744", VA = "0x916744")]
	public void TestAchievement()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x916790", Offset = "0x916790", VA = "0x916790")]
	public void TestScore()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x9167DC", Offset = "0x9167DC", VA = "0x9167DC")]
	public void SetPauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9168A0", Offset = "0x9168A0", VA = "0x9168A0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x90555C", Offset = "0x90555C", VA = "0x90555C")]
	private void PreloadSounds()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x9168A8", Offset = "0x9168A8", VA = "0x9168A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE25C", Offset = "0x6DE25C")]
	private IEnumerator PreloadSoundsCo()
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x916920", Offset = "0x916920", VA = "0x916920")]
	public void ToggleStopTime()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x916A08", Offset = "0x916A08", VA = "0x916A08")]
	public void ToggleRepositionMode()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x916AE0", Offset = "0x916AE0", VA = "0x916AE0")]
	public void AddToReserves(int team, string shipName)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x901978", Offset = "0x901978", VA = "0x901978")]
	public void ClearReserves()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x916B6C", Offset = "0x916B6C", VA = "0x916B6C")]
	public SpaceUnit GetShipforObjectName(string shipObjectName)
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x916BD8", Offset = "0x916BD8", VA = "0x916BD8")]
	public string GetShipNameforObjectName(string shipObjectName)
	{
		return null;
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x916C7C", Offset = "0x916C7C", VA = "0x916C7C")]
	public void HideEndMissionButton()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x916C9C", Offset = "0x916C9C", VA = "0x916C9C")]
	public void FreezeBattle()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x916DC8", Offset = "0x916DC8", VA = "0x916DC8")]
	public void OnMenuPressed()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x916FBC", Offset = "0x916FBC", VA = "0x916FBC")]
	public void LanguageChanged()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x917148", Offset = "0x917148", VA = "0x917148")]
	public void Debug_NextLanguage()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x9171B8", Offset = "0x9171B8", VA = "0x9171B8")]
	public bool IsObjectTooSmall(Vector3 position, float size = 4f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x8FDDA0", Offset = "0x8FDDA0", VA = "0x8FDDA0")]
	public void SetStats_Stats()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x917210", Offset = "0x917210", VA = "0x917210")]
	public void SetStats_LeaderboardWinsMedium()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x9173AC", Offset = "0x9173AC", VA = "0x9173AC")]
	public void SetStats_LeaderboardWinsHard()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x917548", Offset = "0x917548", VA = "0x917548")]
	public void SetStats_LeaderboardEndlessScore()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x9176E4", Offset = "0x9176E4", VA = "0x9176E4")]
	public void SetStats_ToggleSort()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x917828", Offset = "0x917828", VA = "0x917828")]
	public string Endless_GetFactionUnlockStatus(FactionsEnum f)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x917B28", Offset = "0x917B28", VA = "0x917B28")]
	public void Track_UpgradedItem()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x917CBC", Offset = "0x917CBC", VA = "0x917CBC")]
	public void Track_HiredMerc()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x917E50", Offset = "0x917E50", VA = "0x917E50")]
	public SpaceUnit GetShipByDesignation(string designation)
	{
		return null;
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x9180D4", Offset = "0x9180D4", VA = "0x9180D4")]
	public string FindFreeDesignation(string groupColor)
	{
		return null;
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x91801C", Offset = "0x91801C", VA = "0x91801C")]
	public SpaceUnit GetHandTarget()
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x918204", Offset = "0x918204", VA = "0x918204")]
	public Vector3 GetHandTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x918258", Offset = "0x918258", VA = "0x918258")]
	public SpaceBattleManager()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x918A8C", Offset = "0x918A8C", VA = "0x918A8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DE2BC", Offset = "0x6DE2BC")]
	private void <FadeCompleted>b__386_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x20001DC")]
[DisallowMultipleComponent]
public class SpaceProjectile : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5BA8", Offset = "0x6D5BA8")]
	private sealed class <proximityExplodeCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceProjectile <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x11782A4", Offset = "0x11782A4", VA = "0x11782A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x11782EC", Offset = "0x11782EC", VA = "0x11782EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1178064", Offset = "0x1178064", VA = "0x1178064")]
		[DebuggerHidden]
		public <proximityExplodeCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1178090", Offset = "0x1178090", VA = "0x1178090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1178094", Offset = "0x1178094", VA = "0x1178094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x11782AC", Offset = "0x11782AC", VA = "0x11782AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5BB8", Offset = "0x6D5BB8")]
	private sealed class <reEnableCollision>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceProjectile <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x11784E0", Offset = "0x11784E0", VA = "0x11784E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x1178528", Offset = "0x1178528", VA = "0x1178528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x11782F4", Offset = "0x11782F4", VA = "0x11782F4")]
		[DebuggerHidden]
		public <reEnableCollision>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1178320", Offset = "0x1178320", VA = "0x1178320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1178324", Offset = "0x1178324", VA = "0x1178324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x11784E8", Offset = "0x11784E8", VA = "0x11784E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float damage;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceMultiplier;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public DamageID damageID;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpaceUnit.ShipBuff buff;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DamageTypes damageType;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float turnRate;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool penetrating;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool alwaysMakesExplosion;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool drawInstanced;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool collisionsDisabled;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool cullExplosionsWhenSmall;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool proximityExplode;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float proximityExplodeRadius;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool launch;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public SpaceUnit owner;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpaceUnit _collisionIgnoredShip;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int ownerTeam;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public ShipItem firedFromItem;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Vector3 target;

	[NonSerialized]
	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 direction;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _lastPenTimeDebouncer;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool registered;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshGroupInstancer.MeshInfo _meshInfo;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xA07EBC", Offset = "0xA07EBC", VA = "0xA07EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xA07F88", Offset = "0xA07F88", VA = "0xA07F88")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xA08168", Offset = "0xA08168", VA = "0xA08168")]
	public void Fire(SpaceUnit ship, ShipItem item)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xA08598", Offset = "0xA08598", VA = "0xA08598")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xA0872C", Offset = "0xA0872C", VA = "0xA0872C")]
	public void Redirect(Vector3 dir)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xA087E0", Offset = "0xA087E0", VA = "0xA087E0")]
	public void MyTriggerEntered(SpaceUnit collidingUnit)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xA08DCC", Offset = "0xA08DCC", VA = "0xA08DCC")]
	public void MyTriggerExit(SpaceUnit collidingUnit)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xA08DE8", Offset = "0xA08DE8", VA = "0xA08DE8")]
	private void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xA08E04", Offset = "0xA08E04", VA = "0xA08E04")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA08520", Offset = "0xA08520", VA = "0xA08520")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE7CC", Offset = "0x6DE7CC")]
	private IEnumerator proximityExplodeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA08AC8", Offset = "0xA08AC8", VA = "0xA08AC8")]
	public void Explode(bool despawnMe, bool hullHit = true, bool explosionFlip = true)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xA084A8", Offset = "0xA084A8", VA = "0xA084A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE82C", Offset = "0x6DE82C")]
	private IEnumerator reEnableCollision()
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xA09290", Offset = "0xA09290", VA = "0xA09290")]
	public SpaceProjectile()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class ShipData
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject prefab;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startsDamaged;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool needsRescue;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool mediumDifficulty;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool hardDifficulty;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipLoadout overrideLoadout;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xD501E0", Offset = "0xD501E0", VA = "0xD501E0")]
	public static ShipData fromFleetNodeShip(FleetNode.ShipData d)
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xD5030C", Offset = "0xD5030C", VA = "0xD5030C")]
	public ShipData()
	{
	}
}
[Token(Token = "0x20001E0")]
public enum TeamDefs
{
	[Token(Token = "0x4000BFA")]
	Team_None = -1,
	[Token(Token = "0x4000BFB")]
	Team_Player,
	[Token(Token = "0x4000BFC")]
	Team_Enemy
}
[Token(Token = "0x20001E1")]
public enum DamageTypes
{
	[Token(Token = "0x4000BFE")]
	Damage_Standard,
	[Token(Token = "0x4000BFF")]
	Damage_Energy,
	[Token(Token = "0x4000C00")]
	Damage_Missile,
	[Token(Token = "0x4000C01")]
	Damage_Projectile,
	[Token(Token = "0x4000C02")]
	Damage_Disruptor,
	[Token(Token = "0x4000C03")]
	Damage_Acid,
	[Token(Token = "0x4000C04")]
	Damage_Collision,
	[Token(Token = "0x4000C05")]
	Damage_None,
	[Token(Token = "0x4000C06")]
	Damage_EM
}
[Token(Token = "0x20001E2")]
public enum DamageID
{
	[Token(Token = "0x4000C08")]
	Generic,
	[Token(Token = "0x4000C09")]
	Collision,
	[Token(Token = "0x4000C0A")]
	DamageOverTime,
	[Token(Token = "0x4000C0B")]
	SpaceWarp,
	[Token(Token = "0x4000C0C")]
	Bubble,
	[Token(Token = "0x4000C0D")]
	SwarmMissile,
	[Token(Token = "0x4000C0E")]
	AreaBlind,
	[Token(Token = "0x4000C0F")]
	AreaShieldBuff,
	[Token(Token = "0x4000C10")]
	Nuke,
	[Token(Token = "0x4000C11")]
	EmpTorpedo,
	[Token(Token = "0x4000C12")]
	EnergyTorpedo,
	[Token(Token = "0x4000C13")]
	SlowTorpedo,
	[Token(Token = "0x4000C14")]
	Push,
	[Token(Token = "0x4000C15")]
	WaveAttack,
	[Token(Token = "0x4000C16")]
	ShieldDamageOverTime,
	[Token(Token = "0x4000C17")]
	ShieldSteal,
	[Token(Token = "0x4000C18")]
	Barrier,
	[Token(Token = "0x4000C19")]
	SlugSlow,
	[Token(Token = "0x4000C1A")]
	Weaken,
	[Token(Token = "0x4000C1B")]
	Cloak,
	[Token(Token = "0x4000C1C")]
	Nova,
	[Token(Token = "0x4000C1D")]
	DebrisField,
	[Token(Token = "0x4000C1E")]
	NebulaLightning,
	[Token(Token = "0x4000C1F")]
	Thrust,
	[Token(Token = "0x4000C20")]
	ShieldDown,
	[Token(Token = "0x4000C21")]
	EngineDamage,
	[Token(Token = "0x4000C22")]
	FoldDamage,
	[Token(Token = "0x4000C23")]
	DisruptorPulse,
	[Token(Token = "0x4000C24")]
	BlindMissile,
	[Token(Token = "0x4000C25")]
	AsteroidExplode,
	[Token(Token = "0x4000C26")]
	DustCloud,
	[Token(Token = "0x4000C27")]
	ExplosionShockwave,
	[Token(Token = "0x4000C28")]
	Rift,
	[Token(Token = "0x4000C29")]
	InertialNullifier,
	[Token(Token = "0x4000C2A")]
	Singularity,
	[Token(Token = "0x4000C2B")]
	Jammer,
	[Token(Token = "0x4000C2C")]
	ExplosionCore,
	[Token(Token = "0x4000C2D")]
	Hack,
	[Token(Token = "0x4000C2E")]
	AllStatusEffects,
	[Token(Token = "0x4000C2F")]
	Deccelerator,
	[Token(Token = "0x4000C30")]
	SelfDestruct,
	[Token(Token = "0x4000C31")]
	ID_MAX
}
[Token(Token = "0x20001E3")]
public enum FriendOrFoe
{
	[Token(Token = "0x4000C33")]
	Foe,
	[Token(Token = "0x4000C34")]
	Friend,
	[Token(Token = "0x4000C35")]
	Neutral,
	[Token(Token = "0x4000C36")]
	Any
}
[Token(Token = "0x20001E4")]
public enum ArmorDirection
{
	[Token(Token = "0x4000C38")]
	Front,
	[Token(Token = "0x4000C39")]
	Right,
	[Token(Token = "0x4000C3A")]
	Rear,
	[Token(Token = "0x4000C3B")]
	Left,
	[Token(Token = "0x4000C3C")]
	Top,
	[Token(Token = "0x4000C3D")]
	Bottom,
	[Token(Token = "0x4000C3E")]
	Omni
}
[Token(Token = "0x20001E5")]
public enum MainGunDirection
{
	[Token(Token = "0x4000C40")]
	FrontMounted,
	[Token(Token = "0x4000C41")]
	SideMounted,
	[Token(Token = "0x4000C42")]
	TopBottomMounted
}
[Token(Token = "0x20001E6")]
public enum SizePreference
{
	[Token(Token = "0x4000C44")]
	None,
	[Token(Token = "0x4000C45")]
	SmallAndAbove,
	[Token(Token = "0x4000C46")]
	MediumOrLarge,
	[Token(Token = "0x4000C47")]
	MissileOrSmall,
	[Token(Token = "0x4000C48")]
	LargeOnly
}
[Token(Token = "0x20001E7")]
public enum ShipSizes
{
	[Token(Token = "0x4000C4A")]
	Missile,
	[Token(Token = "0x4000C4B")]
	Small,
	[Token(Token = "0x4000C4C")]
	Medium,
	[Token(Token = "0x4000C4D")]
	Large
}
[Serializable]
[Token(Token = "0x20001E8")]
public class SpaceUnitSaveData
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string shipName;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitpoints;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] armorPoints;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShipLoadoutData loadout;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isMercenary;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isEscortTarget;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string designation;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xBA87E8", Offset = "0xBA87E8", VA = "0xBA87E8")]
	public SpaceUnitSaveData()
	{
	}
}
[Token(Token = "0x20001E9")]
public class SpaceUnitClosestComparer : IComparer<SpaceUnit>
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 center;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xBA835C", Offset = "0xBA835C", VA = "0xBA835C")]
	private SpaceUnitClosestComparer(Vector3 _center)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xBA83A4", Offset = "0xBA83A4", VA = "0xBA83A4", Slot = "4")]
	public int Compare(SpaceUnit x, SpaceUnit y)
	{
		return default(int);
	}
}
[Token(Token = "0x20001EA")]
public class SpaceUnitSizeComparer : IComparer<SpaceUnit>
{
	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xBA8844", Offset = "0xBA8844", VA = "0xBA8844", Slot = "4")]
	public int Compare(SpaceUnit x, SpaceUnit y)
	{
		return default(int);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xBA8944", Offset = "0xBA8944", VA = "0xBA8944")]
	public SpaceUnitSizeComparer()
	{
	}
}
[Token(Token = "0x20001EB")]
public class SpaceUnitSizeComparerDesc : IComparer<SpaceUnit>
{
	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xBA894C", Offset = "0xBA894C", VA = "0xBA894C", Slot = "4")]
	public int Compare(SpaceUnit x, SpaceUnit y)
	{
		return default(int);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xBA8A4C", Offset = "0xBA8A4C", VA = "0xBA8A4C")]
	public SpaceUnitSizeComparerDesc()
	{
	}
}
[Token(Token = "0x20001EC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D5BC8", Offset = "0x6D5BC8")]
public class SpaceUnit : GrabbableObject
{
	[Token(Token = "0x20001ED")]
	private struct BuffLabelInfo
	{
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string text;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float time;
	}

	[Token(Token = "0x20001EE")]
	public class ShipModifiers
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float moveRate;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float damageModifier;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damageOverTime;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shieldDamageOverTime;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeModifier;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool blind;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool cloaked;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool disabled;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool shieldsDown;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hacked;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool destabilized;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool weakened;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool accretion;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool pushed;

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x117A084", Offset = "0x117A084", VA = "0x117A084")]
		public void Init()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x117A094", Offset = "0x117A094", VA = "0x117A094")]
		public ShipModifiers()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	public enum BuffTypes
	{
		[Token(Token = "0x4000D66")]
		None,
		[Token(Token = "0x4000D67")]
		Movement,
		[Token(Token = "0x4000D68")]
		Blind,
		[Token(Token = "0x4000D69")]
		Cloak,
		[Token(Token = "0x4000D6A")]
		DamageModifer,
		[Token(Token = "0x4000D6B")]
		HullDamage,
		[Token(Token = "0x4000D6C")]
		PowerLoss,
		[Token(Token = "0x4000D6D")]
		TimeModifier,
		[Token(Token = "0x4000D6E")]
		DisableSystems,
		[Token(Token = "0x4000D6F")]
		ShieldDamage,
		[Token(Token = "0x4000D70")]
		ShieldDown,
		[Token(Token = "0x4000D71")]
		Hacked,
		[Token(Token = "0x4000D72")]
		Destabilize,
		[Token(Token = "0x4000D73")]
		ArmorWeaken,
		[Token(Token = "0x4000D74")]
		Accretion,
		[Token(Token = "0x4000D75")]
		Push,
		[Token(Token = "0x4000D76")]
		SelfDestruct
	}

	[Serializable]
	[Token(Token = "0x20001F0")]
	public class ShipBuff
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuffTypes type;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float amount;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeLeft;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool penetratesShields;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public DamageID damageID;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject statusEffectPrefab;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject statusEffectObject;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public DeadTime deadTimeComp;

		[NonSerialized]
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pushForce;

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1179F60", Offset = "0x1179F60", VA = "0x1179F60")]
		public ShipBuff MakeInstance()
		{
			return null;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x117A048", Offset = "0x117A048", VA = "0x117A048")]
		public ShipBuff()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	public delegate void EnteredAreaDamage(Vector3 center, float radius, float dps);

	[Token(Token = "0x20001F2")]
	public delegate void Debuffed();

	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C38", Offset = "0x6D5C38")]
	private sealed class <>c__DisplayClass313_0
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceUnit thisShip;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpaceUnit shipToAdd;

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x11785BC", Offset = "0x11785BC", VA = "0x11785BC")]
		public <>c__DisplayClass313_0()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x11785C4", Offset = "0x11785C4", VA = "0x11785C4")]
		internal bool <GetNextFormationPosition>b__0(SpaceUnit s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C48", Offset = "0x6D5C48")]
	private sealed class <>c__DisplayClass313_1
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 nextPos;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass313_0 CS$<>8__locals1;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x11786C8", Offset = "0x11786C8", VA = "0x11786C8")]
		public <>c__DisplayClass313_1()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x11786D0", Offset = "0x11786D0", VA = "0x11786D0")]
		internal bool <GetNextFormationPosition>b__1(SpaceUnit s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C58", Offset = "0x6D5C58")]
	private sealed class <>c__DisplayClass320_0
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceUnit <>4__this;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetDir;

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1178740", Offset = "0x1178740", VA = "0x1178740")]
		public <>c__DisplayClass320_0()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1178748", Offset = "0x1178748", VA = "0x1178748")]
		internal bool <GetPathAroundObstacles>b__0(RaycastHit hit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C68", Offset = "0x6D5C68")]
	private sealed class <>c__DisplayClass348_0
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceUnit <>4__this;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform futureShipPose;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x117895C", Offset = "0x117895C", VA = "0x117895C")]
		public <>c__DisplayClass348_0()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1178964", Offset = "0x1178964", VA = "0x1178964")]
		internal bool <UpdateHittableTargets>b__0(SpaceUnit ship)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C78", Offset = "0x6D5C78")]
	private sealed class <>c__DisplayClass348_1
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceUnit ship;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass348_0 CS$<>8__locals1;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1178ABC", Offset = "0x1178ABC", VA = "0x1178ABC")]
		public <>c__DisplayClass348_1()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1178AC4", Offset = "0x1178AC4", VA = "0x1178AC4")]
		internal bool <UpdateHittableTargets>b__1(HardPoint hardpoint)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C88", Offset = "0x6D5C88")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ShipBuff> <>9__399_0;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1178594", Offset = "0x1178594", VA = "0x1178594")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x117859C", Offset = "0x117859C", VA = "0x117859C")]
		internal bool <ProcessBuffs>b__399_0(ShipBuff x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5C98", Offset = "0x6D5C98")]
	private sealed class <CreateLoadoutSlowlyCO>d__426 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceUnit <>4__this;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x1179638", Offset = "0x1179638", VA = "0x1179638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x1179680", Offset = "0x1179680", VA = "0x1179680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1178B98", Offset = "0x1178B98", VA = "0x1178B98")]
		[DebuggerHidden]
		public <CreateLoadoutSlowlyCO>d__426(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1178BC4", Offset = "0x1178BC4", VA = "0x1178BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1178BC8", Offset = "0x1178BC8", VA = "0x1178BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1179640", Offset = "0x1179640", VA = "0x1179640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5CA8", Offset = "0x6D5CA8")]
	private sealed class <reEnableCollision>d__451 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpaceUnit <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x1179860", Offset = "0x1179860", VA = "0x1179860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x11798A8", Offset = "0x11798A8", VA = "0x11798A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1179688", Offset = "0x1179688", VA = "0x1179688")]
		[DebuggerHidden]
		public <reEnableCollision>d__451(int <>1__state)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x11796B4", Offset = "0x11796B4", VA = "0x11796B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x11796B8", Offset = "0x11796B8", VA = "0x11796B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1179868", Offset = "0x1179868", VA = "0x1179868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C57")]
	private const float ArmorAngThresh = 0.70710677f;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public SpaceUnit owner;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public ShipItem firedFromItem;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string shipName;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string shipLocalizationKey;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SpaceBattleManager.FactionsEnum manufacturer;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string descriptionLine;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D83F4", Offset = "0x6D83F4")]
	public string longDescription;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int unlocksAtRep;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool unlocksInSecondPlaythru;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float displaySizeFactor;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Sprite shipIcon;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite shipImage;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PidQuaternionController _pidTurnController;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PidController _pidThrustController;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float initialDrag;

	[NonSerialized]
	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SpaceUnit targetObject;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public bool hasTargetLocation;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool _hasTargetObject;

	[NonSerialized]
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	private bool defendingFriendlyShip;

	[NonSerialized]
	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 lastDefendingTarget;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public bool targetLocationIsPlayerAssigned;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	[HideInInspector]
	public bool stopOnEnemies;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	[HideInInspector]
	public bool lockHeading;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
	[HideInInspector]
	public bool targetIsPlayerAssigned;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public bool allowAI;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	private bool autoUnpause;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
	private bool wasSelected;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float clickStartTime;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[HideInInspector]
	public bool hasTargetLookLocation;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private SpaceUnit draggingTarget;

	[NonSerialized]
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Vector3 targetLocation;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[HideInInspector]
	public Vector3 intermediaryTargetLocation;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Queue<Vector3> waypoints;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Queue<Vector3> savedWaypoints;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 lastWaypoint;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 lastWaypoint2;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 finalWaypoint;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float totalPathLength;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float pathLengthLeft;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Vector3 targetLookLocation;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool isSpawned;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	private bool showUITemporarily;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float temporaryUITime;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int numFlashUI;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ShipSizes shipSize;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float turnRate;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float driveForce;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[HideInInspector]
	public float driveForceModded;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[HideInInspector]
	public float turnRateModded;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[HideInInspector]
	public float movementRamp;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3 lastVelocity;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	[HideInInspector]
	public float Kp;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	public float Ki;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[HideInInspector]
	public float Kd;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject goalMarker;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Scannable gmScannable;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public MissionTimeTrigger timeTrigger;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public ScenarioNodeBase destroyedTrigger;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	public bool isHostileShipToCapture;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private GameObject shipUI;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject shipStatusUI;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject uiTick;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private TMP_Text shipUILabel;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float shipUIScaleLerp;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public GameObject specialStatusUI;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject shieldArmorDisplay;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private ArmorDisplay shieldArmorDisplayComp;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float shieldArmorDisplayScale;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public ShipUIHandler shipUIHandler;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool shipUIShown;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	[SerializeField]
	private float _hitpoints;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool exploded;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private GameObject shipTargetUI;

	[NonSerialized]
	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public SelectionBox shipTargetUIScript;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private GameObject shipHittableUI;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private LineRenderer shipHittableLine;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public List<DamageID> immunities;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool[] immunityLookup;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public bool rideModeOn;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
	public bool rideModeFiring;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public Vector3 rideModeTargetPos;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject ridePosition;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject[] battleCamTargets;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public MainGunDirection mainGunDir;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float gunDirOverrideEndTime;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public MainGunDirection ovrGunDir;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float collisionDebounceTime;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public bool noCollisionDamage;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F1")]
	public bool canTargetOwnTeam;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F2")]
	public bool hasHullFires;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F3")]
	public bool isStarBase;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public bool stationary;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F5")]
	public bool needsRescue;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F6")]
	public bool invulnerable;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F7")]
	public bool startsDamaged;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public bool hullInvulnerable;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F9")]
	public bool unlockableForSkirmish;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FA")]
	[HideInInspector]
	public bool isMercenary;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FB")]
	[HideInInspector]
	public bool isEscortTarget;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	[HideInInspector]
	public bool premadeNoDespawn;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
	private bool _detected;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float _detectionThinkDelay;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public float detectionRangeModifier;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private float generalThinkDelay;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private float lastReticleTime;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private float shipUIOffs;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private Vector3 lastAvoidForce;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private ParticleSystem.EmissionModule dustEmissions;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private float dustLevel;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[HideInInspector]
	public HardPoint targettedHardpoint;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool _targetted;

	[NonSerialized]
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[HideInInspector]
	public SpaceUnit targettedBy;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool _hittable;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private Vector3 hitteePos;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private float hittableLineAnim;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[HideInInspector]
	private List<SpaceUnit> hittableTargets;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private MeshInstancer[] meshInstancers;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[HideInInspector]
	public bool alertPlayed;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public int numFighters;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public GameObject fighterUnit;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[HideInInspector]
	public List<SpaceUnit> fighters;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[HideInInspector]
	public ShipGroup shipGroup;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	[HideInInspector]
	public int formationIndex;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	[HideInInspector]
	public float[] armorPoints;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public float[] maxArmorPoints;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[HideInInspector]
	public float[] maxArmorPointsModded;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public float maxHitpoints;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	[HideInInspector]
	public float maxHitpointsModded;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	[SerializeField]
	private int _team;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public static float BASE_DETECTION_RANGE;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public float shipRadius;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public int cost;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	private float _currentThrottle;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private float _currentTurnRate;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[HideInInspector]
	public SpaceBattleManager manager;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private TMP_Text statusLabel;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private TMP_Text buffLabel;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private TMP_Text buffTimeLabel;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private BuffLabelInfo[] buffLabels;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private int numBuffLabels;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private int buffLabelShowing;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private float buffLabelSwitchTime;

	[NonSerialized]
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	[HideInInspector]
	public HardPoint[] hardPoints;

	[NonSerialized]
	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	[HideInInspector]
	public TurretInstancer[] turretInstancers;

	[NonSerialized]
	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[HideInInspector]
	public ESTrailController[] esTrailControllers;

	[NonSerialized]
	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	[HideInInspector]
	public GameObject itemUI;

	[NonSerialized]
	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	[HideInInspector]
	public GameObject commandItemsHolder;

	[NonSerialized]
	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	[HideInInspector]
	public GameObject targetUI;

	[NonSerialized]
	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	[HideInInspector]
	public GameObject waypointsUI;

	[NonSerialized]
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	[HideInInspector]
	public GameObject pathEndUI;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	[HideInInspector]
	public LineRenderer waypointsLine;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	[HideInInspector]
	public GameObject statusEffectsObjects;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	[HideInInspector]
	public GeneratorItem generator;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	[HideInInspector]
	public ShieldItem shields;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[HideInInspector]
	public ShipItem engines;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	[HideInInspector]
	public GameObject shieldGlowObject;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public List<ShipItem> coolingSystems;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	[HideInInspector]
	public ShipItem armor;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private GameObject draggingToken;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	private bool draggedOut;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x499")]
	public bool detonatable;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49A")]
	public bool useDeathThroes;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49B")]
	public bool wreckageDoesNotDie;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public GameObject hulkObject;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public GameObject lowPoly;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public ShipBridge bridge;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	private Scannable _scanningObject;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	private GameObject scanBeam;

	[NonSerialized]
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	[HideInInspector]
	public SpaceUnit lastAttacker;

	[NonSerialized]
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	[HideInInspector]
	public Vector3 _cachedPosition;

	[NonSerialized]
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
	[HideInInspector]
	public bool isPathingAroundObstacle;

	[NonSerialized]
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	[HideInInspector]
	private Vector3 _cachedObstacleAvoidTarget;

	[NonSerialized]
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
	[HideInInspector]
	private float pathingObstacleSize;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private int pathingWaitCountdown;

	[NonSerialized]
	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	[HideInInspector]
	public Fleet fleetRef;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	[HideInInspector]
	public bool isNPC;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x501")]
	[HideInInspector]
	public bool forceDetected;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x502")]
	public bool isGoal;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x503")]
	public bool isCuriosity;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
	public float goalMarkerSizeAdjust;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	private bool _isHandOver;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	private MeshRenderer renderer;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	private List<ShipBuff> buffs;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	[HideInInspector]
	public ShipModifiers currentShipModifiers;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	private ShipActionButton[] specialButtons;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	private ShipActionButton[] detailButtons;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	[HideInInspector]
	public GameObject detailButtonsUI;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	private float _shieldLevel;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
	private float _energyLevel;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public float maxShields;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	public float maxEnergy;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	[HideInInspector]
	public float maxShieldsModded;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
	[HideInInspector]
	public float maxEnergyModded;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public float shieldChargeRate;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
	public float chargeTime;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public float _savedMinWeaponRange;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
	public float _savedMaxWeaponRange;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public UnityEvent tookSignificantDamageEvent;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public bool avoidsObstacles;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x581")]
	public bool droneMovement;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x582")]
	public bool magneticMissileMovement;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x583")]
	public bool saucerSpecial;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
	public bool noSmoothPath;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x585")]
	public bool isFlagship;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x586")]
	[HideInInspector]
	public bool isMissile;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x587")]
	[HideInInspector]
	public bool isFighter;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	private float minRadius;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
	public bool forceWarning;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58D")]
	public bool droneNoTurn;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58E")]
	public bool isScenery;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58F")]
	private bool wasHovered;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public bool makesDebrisField;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x591")]
	private bool collisionWarning;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x594")]
	private float collisionSpeedMod;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public bool reducedUI;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x599")]
	[HideInInspector]
	public bool initialized;

	[NonSerialized]
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59A")]
	[HideInInspector]
	public bool uiFullyInitialized;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public UnityEvent damagedEvent;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public UnityEvent explodedEvent;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public ShipLoadout defaultLoadout;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public ShipLoadout[] tier1Loadouts;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public ShipLoadout[] tier2Loadouts;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public ShipLoadout[] tier3Loadouts;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public ShipLoadout emptyLoadout;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	private ShipLoadout _loadout;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	[HideInInspector]
	public Transform itemsRoot;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public float scanTime;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	private ShipLoadout _pendingLoadoutChange;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	private DeathThroes deathThroes;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private AudioSource soundSource;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	private TrailRenderer trail;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public GameObject[] wreckagePieces;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	[HideInInspector]
	public Vector3 formationPosition;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
	[HideInInspector]
	public bool settingFormationPosition;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x625")]
	private bool _scannable;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x626")]
	private bool formationPositionValid;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	private int formationProgressTickPos;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62C")]
	public float itemDropChance;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public GameObject[] itemDrops;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	public int resRewardAmountMin;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63C")]
	public int resRewardAmountMax;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public Color defaultColor;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	[HideInInspector]
	public bool renderVisibility;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	private MeshGroupInstancer.MeshInfo _meshInfo;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public bool hasMeshCollider;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public string designation;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public string designationLabelText;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	private bool collisionsDisabled;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	private SpaceUnit _collisionIgnoredShip;

	[Token(Token = "0x170000A2")]
	[HideInInspector]
	public bool hasTargetObject
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xA09324", Offset = "0xA09324", VA = "0xA09324")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xA093F0", Offset = "0xA093F0", VA = "0xA093F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public bool targetted
	{
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xA09798", Offset = "0xA09798", VA = "0xA09798")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xA093FC", Offset = "0xA093FC", VA = "0xA093FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public bool hittable
	{
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xA09BA8", Offset = "0xA09BA8", VA = "0xA09BA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xA097A0", Offset = "0xA097A0", VA = "0xA097A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float hitpoints
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA09BB0", Offset = "0xA09BB0", VA = "0xA09BB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xA09BB8", Offset = "0xA09BB8", VA = "0xA09BB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public int team
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xA0A2B4", Offset = "0xA0A2B4", VA = "0xA0A2B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xA0A2BC", Offset = "0xA0A2BC", VA = "0xA0A2BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public Scannable scanningObject
	{
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xA0A72C", Offset = "0xA0A72C", VA = "0xA0A72C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xA0A468", Offset = "0xA0A468", VA = "0xA0A468")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float shieldLevel
	{
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xA0A9C4", Offset = "0xA0A9C4", VA = "0xA0A9C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xA0A9CC", Offset = "0xA0A9CC", VA = "0xA0A9CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float energyLevel
	{
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xA0AA8C", Offset = "0xA0AA8C", VA = "0xA0AA8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xA0AA94", Offset = "0xA0AA94", VA = "0xA0AA94")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public ShipLoadout loadout
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xA0B790", Offset = "0xA0B790", VA = "0xA0B790")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xA0AAB0", Offset = "0xA0AAB0", VA = "0xA0AAB0")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event EnteredAreaDamage OnEnteredAreaDamage
	{
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xA0A734", Offset = "0xA0A734", VA = "0xA0A734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DE92C", Offset = "0x6DE92C")]
		add
		{
		}
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xA0A7D8", Offset = "0xA0A7D8", VA = "0xA0A7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DE93C", Offset = "0x6DE93C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Debuffed OnDebuffed
	{
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xA0A87C", Offset = "0xA0A87C", VA = "0xA0A87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DE94C", Offset = "0x6DE94C")]
		add
		{
		}
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xA0A920", Offset = "0xA0A920", VA = "0xA0A920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DE95C", Offset = "0x6DE95C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA0B798", Offset = "0xA0B798", VA = "0xA0B798", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xA0B88C", Offset = "0xA0B88C", VA = "0xA0B88C", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xA0D520", Offset = "0xA0D520", VA = "0xA0D520")]
	public void CreateUIElements()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xA0F564", Offset = "0xA0F564", VA = "0xA0F564")]
	public void CreateBridge()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xA0CE04", Offset = "0xA0CE04", VA = "0xA0CE04")]
	public void UpdateHintText()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xA0F838", Offset = "0xA0F838", VA = "0xA0F838")]
	public void CancelAlarms()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xA0F8DC", Offset = "0xA0F8DC", VA = "0xA0F8DC")]
	public void RestoreHull()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xA0C81C", Offset = "0xA0C81C", VA = "0xA0C81C")]
	public void RepairFully()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xA0F904", Offset = "0xA0F904", VA = "0xA0F904")]
	public void OnCreated()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xA0FA90", Offset = "0xA0FA90", VA = "0xA0FA90")]
	public void SetupGoalMarker()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xA0B3EC", Offset = "0xA0B3EC", VA = "0xA0B3EC")]
	public void CalculateUpgrades()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xA0FE44", Offset = "0xA0FE44", VA = "0xA0FE44")]
	public void CombatInitItems()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xA104A8", Offset = "0xA104A8", VA = "0xA104A8")]
	public void ItemWasDestroyed(ShipItem item)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xA105BC", Offset = "0xA105BC", VA = "0xA105BC")]
	public void SetupDesignationLabelText()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xA107DC", Offset = "0xA107DC", VA = "0xA107DC")]
	public void SetupDesignation()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xA10B90", Offset = "0xA10B90", VA = "0xA10B90")]
	public void CombatInit(bool startsDetected = false)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xA0C60C", Offset = "0xA0C60C", VA = "0xA0C60C")]
	public void UpdateImmunityLookup()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xA11E30", Offset = "0xA11E30", VA = "0xA11E30")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xA095D8", Offset = "0xA095D8", VA = "0xA095D8")]
	public void BounceTargettedUI()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xA11E80", Offset = "0xA11E80", VA = "0xA11E80")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xA14AA4", Offset = "0xA14AA4", VA = "0xA14AA4")]
	public void flashUI(float t = 2f)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xA14C50", Offset = "0xA14C50", VA = "0xA14C50")]
	public int GetEnemyTeam()
	{
		return default(int);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xA14C60", Offset = "0xA14C60", VA = "0xA14C60")]
	public Vector3 GetVFormationLocalPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xA14CBC", Offset = "0xA14CBC", VA = "0xA14CBC")]
	public Vector3 GetVFormationPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xA14D44", Offset = "0xA14D44", VA = "0xA14D44")]
	public Vector3 GetNextFormationPosition(SpaceUnit shipToAdd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xA1526C", Offset = "0xA1526C", VA = "0xA1526C")]
	public void SetThrottle(float throttle)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xA15274", Offset = "0xA15274", VA = "0xA15274")]
	public void ManeuverTowards(Vector3 targetPos, float modifiedMoveRate)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xA15480", Offset = "0xA15480", VA = "0xA15480")]
	public void ThrustTowards(Vector3 targetPos, float modifiedMoveRate)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xA1592C", Offset = "0xA1592C", VA = "0xA1592C")]
	private void TurnTowards(Vector3 position, float modifiedMoveRate)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xA15BF4", Offset = "0xA15BF4", VA = "0xA15BF4")]
	private void MaintainDirection(float modifiedMoveRate)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xA15DBC", Offset = "0xA15DBC", VA = "0xA15DBC")]
	private Vector3 GetRelativeAngles(Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xA15DF4", Offset = "0xA15DF4", VA = "0xA15DF4")]
	private Vector3 GetPathAroundObstacles(Vector3 targetPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xA16A24", Offset = "0xA16A24", VA = "0xA16A24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xA1847C", Offset = "0xA1847C", VA = "0xA1847C")]
	private static float GetHealthTicks(float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xA18490", Offset = "0xA18490", VA = "0xA18490")]
	private static float GetArmorTicks(float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xA11B2C", Offset = "0xA11B2C", VA = "0xA11B2C")]
	public void UpdateUIDisplay()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xA0EF9C", Offset = "0xA0EF9C", VA = "0xA0EF9C")]
	public void CreateCommandActions()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xA184A4", Offset = "0xA184A4", VA = "0xA184A4")]
	public void SetTargetLocation(Vector3 pos, bool _stopOnEnemies = false)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xA18908", Offset = "0xA18908", VA = "0xA18908")]
	public int GetNumWaypoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xA18954", Offset = "0xA18954", VA = "0xA18954")]
	public void ClearWaypoints()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xA1802C", Offset = "0xA1802C", VA = "0xA1802C")]
	public void SmoothCurrentPath()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xA18A50", Offset = "0xA18A50", VA = "0xA18A50")]
	public void SmoothWaypoints()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xA18EE4", Offset = "0xA18EE4", VA = "0xA18EE4")]
	public void SetWaypointsForFighter(SpaceUnit fighter)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xA1851C", Offset = "0xA1851C", VA = "0xA1851C")]
	private void UpdateWaypointsLine()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xA19110", Offset = "0xA19110", VA = "0xA19110")]
	public void AddWaypoint(Vector3 position)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xA17BE8", Offset = "0xA17BE8", VA = "0xA17BE8")]
	public float GetWaypointsLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xA1963C", Offset = "0xA1963C", VA = "0xA1963C")]
	public Vector3 GetDestination()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xA193EC", Offset = "0xA193EC", VA = "0xA193EC")]
	public bool IsWaypointSpaceClear(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xA17DD4", Offset = "0xA17DD4", VA = "0xA17DD4")]
	public void NextWaypoint()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xA19714", Offset = "0xA19714", VA = "0xA19714")]
	public void UITargetOtherShip(SpaceUnit other, bool voiceMode = false)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xA1A548", Offset = "0xA1A548", VA = "0xA1A548", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xA1AF90", Offset = "0xA1AF90", VA = "0xA1AF90", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xA1C450", Offset = "0xA1C450", VA = "0xA1C450", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xA1D0D8", Offset = "0xA1D0D8", VA = "0xA1D0D8", Slot = "12")]
	public override void dragCancel(UnitGrabberController controller, Transform t)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xA0C8CC", Offset = "0xA0C8CC", VA = "0xA0C8CC")]
	public void SetTarget(SpaceUnit obj, bool playerAssigned = false)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xA1D078", Offset = "0xA1D078", VA = "0xA1D078")]
	public void SetLookTarget(Vector3 pos)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xA0C8A8", Offset = "0xA0C8A8", VA = "0xA0C8A8")]
	public void ClearLookTarget()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xA0C8B0", Offset = "0xA0C8B0", VA = "0xA0C8B0")]
	public void ClearLocationTarget(bool _clearWaypoints = true)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xA0CCC8", Offset = "0xA0CCC8", VA = "0xA0CCC8")]
	public void ClearHittableTargets()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xA1BD60", Offset = "0xA1BD60", VA = "0xA1BD60")]
	public void UpdateHittableTargets(Transform futureShipPose)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xA1D2E0", Offset = "0xA1D2E0", VA = "0xA1D2E0")]
	public bool IsFullyRepaired()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xA1D368", Offset = "0xA1D368", VA = "0xA1D368", Slot = "20")]
	public virtual void Repair(float amt)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xA0C70C", Offset = "0xA0C70C", VA = "0xA0C70C")]
	public void SetImmunity(DamageID damageID, bool b)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xA1D668", Offset = "0xA1D668", VA = "0xA1D668")]
	public bool GetImmunity(DamageID damageID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xA1D6A4", Offset = "0xA1D6A4", VA = "0xA1D6A4", Slot = "21")]
	public virtual void ChargeShields(float amt, Vector3 origin)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xA1D7EC", Offset = "0xA1D7EC", VA = "0xA1D7EC", Slot = "22")]
	public virtual void ChargeEnergy(float amt)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xA1D840", Offset = "0xA1D840", VA = "0xA1D840", Slot = "23")]
	public virtual void Damage(float amt, DamageTypes t, DamageID damageID, Vector3 pos, Vector3 normal, ShipBuff buff, SpaceUnit attacker, Vector3 direction)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xA1FAE8", Offset = "0xA1FAE8", VA = "0xA1FAE8")]
	public void BeginDying()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xA1FFAC", Offset = "0xA1FFAC", VA = "0xA1FFAC")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xA20D64", Offset = "0xA20D64", VA = "0xA20D64")]
	public void FinalizeDeath()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xA09D30", Offset = "0xA09D30", VA = "0xA09D30")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xA214AC", Offset = "0xA214AC", VA = "0xA214AC")]
	public SpaceUnit[] FindNearby(float radius = 600f, SizePreference sizePref = SizePreference.None, FriendOrFoe fof = FriendOrFoe.Foe)
	{
		return null;
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xA20964", Offset = "0xA20964", VA = "0xA20964")]
	public void UpdateModelVisibility()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xA1150C", Offset = "0xA1150C", VA = "0xA1150C")]
	public void SetDetectedVisibility(bool vis)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xA21808", Offset = "0xA21808", VA = "0xA21808")]
	public bool IsDetected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xA179B8", Offset = "0xA179B8", VA = "0xA179B8")]
	public bool CheckForOthers(float range, bool sameTeam = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xA17BE0", Offset = "0xA17BE0", VA = "0xA17BE0")]
	private bool CheckDetected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xA21810", Offset = "0xA21810", VA = "0xA21810")]
	public SpaceUnit FindClosestEnemy(float radius = 600f, SizePreference sizePref = SizePreference.None, bool ignoreMissiles = false)
	{
		return null;
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xA21BD0", Offset = "0xA21BD0", VA = "0xA21BD0")]
	public SpaceUnit FindClosestFriendly(float radius = 6f, SizePreference sizePref = SizePreference.None)
	{
		return null;
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xA21EF8", Offset = "0xA21EF8", VA = "0xA21EF8")]
	public void SetUIVisibility(bool b)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xA21F04", Offset = "0xA21F04", VA = "0xA21F04")]
	public bool IsUIShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xA14814", Offset = "0xA14814", VA = "0xA14814")]
	private void UpdateUIVisibility()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xA21F0C", Offset = "0xA21F0C", VA = "0xA21F0C", Slot = "16")]
	public override void SetHighlighted(bool b)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xA21F48", Offset = "0xA21F48", VA = "0xA21F48", Slot = "17")]
	public override void SetSelected(bool b)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xA220E4", Offset = "0xA220E4", VA = "0xA220E4")]
	public void InitItemButtonPos()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xA22218", Offset = "0xA22218", VA = "0xA22218")]
	public void ArrangeItemButtons()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xA14874", Offset = "0xA14874", VA = "0xA14874")]
	public void AnimateItemButtons()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xA101CC", Offset = "0xA101CC", VA = "0xA101CC")]
	public float GetMinWeaponRange()
	{
		return default(float);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xA10360", Offset = "0xA10360", VA = "0xA10360")]
	public float GetMaxWeaponRange()
	{
		return default(float);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xA0D018", Offset = "0xA0D018", VA = "0xA0D018")]
	public void FindKeyShipSystems()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xA182C0", Offset = "0xA182C0", VA = "0xA182C0")]
	public ShipItem GetItemOfType(ShipItem.ItemType t)
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xA22948", Offset = "0xA22948", VA = "0xA22948")]
	public ShipItem AttemptMatchItemName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xA22B0C", Offset = "0xA22B0C", VA = "0xA22B0C")]
	public bool UseAllOffensiveSpecials()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xA22C14", Offset = "0xA22C14", VA = "0xA22C14")]
	public bool UseMainWeapon([Optional] SpaceUnit target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xA22D0C", Offset = "0xA22D0C", VA = "0xA22D0C")]
	public ShipItem GetItemWithEffect(ShipItem.ItemEffectType t, bool includePassive = false)
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xA22EFC", Offset = "0xA22EFC", VA = "0xA22EFC")]
	public GameObject GetDropItem()
	{
		return null;
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xA21238", Offset = "0xA21238", VA = "0xA21238")]
	public GameObject DetachSalvageReward()
	{
		return null;
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xA230BC", Offset = "0xA230BC", VA = "0xA230BC")]
	public ShipItem GetRandomItemOfType(ShipItem.ItemType t, bool recoverableOnesOnly = false)
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xA23284", Offset = "0xA23284", VA = "0xA23284")]
	public void SendItemsIntoCooldown(float t = 6f)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xA23384", Offset = "0xA23384", VA = "0xA23384")]
	public void SendItemOfTypeIntoCooldown(float t = 6f, ShipItem.ItemType ty = ShipItem.ItemType.Weapon)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xA23478", Offset = "0xA23478", VA = "0xA23478")]
	public void CollectedCargo()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xA2347C", Offset = "0xA2347C", VA = "0xA2347C")]
	public ShipItem GetNextAIItem()
	{
		return null;
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xA23488", Offset = "0xA23488", VA = "0xA23488")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xA235CC", Offset = "0xA235CC", VA = "0xA235CC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xA2369C", Offset = "0xA2369C", VA = "0xA2369C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xA23E20", Offset = "0xA23E20", VA = "0xA23E20")]
	public void AddToStatusEffects(GameObject g, bool scaleToShip = true)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xA23FE8", Offset = "0xA23FE8", VA = "0xA23FE8")]
	public void ExpireBuffsOfType(DamageID typeToExpire)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xA1F020", Offset = "0xA1F020", VA = "0xA1F020")]
	public void AddBuff(ShipBuff buff)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xA0CA9C", Offset = "0xA0CA9C", VA = "0xA0CA9C")]
	public void ClearBuffs()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xA240D8", Offset = "0xA240D8", VA = "0xA240D8")]
	public void ClearBuffType(BuffTypes type)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xA136F0", Offset = "0xA136F0", VA = "0xA136F0")]
	private void ProcessBuffs()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xA24444", Offset = "0xA24444", VA = "0xA24444")]
	public void SetCollidersEnabled(bool b)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xA0EF30", Offset = "0xA0EF30", VA = "0xA0EF30")]
	public bool CheckSize(SizePreference sizePref)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xA244FC", Offset = "0xA244FC", VA = "0xA244FC")]
	public void Notify_EnteredAreaDamage(Vector3 position, float radius, float dps)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xA17940", Offset = "0xA17940", VA = "0xA17940")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xA14848", Offset = "0xA14848", VA = "0xA14848")]
	public bool IsAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xA20CB8", Offset = "0xA20CB8", VA = "0xA20CB8")]
	public void StopPhysics()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xA0CF34", Offset = "0xA0CF34", VA = "0xA0CF34")]
	public void RestartPhysics()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xA24510", Offset = "0xA24510", VA = "0xA24510")]
	public void InitFlagshipHeading()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xA2454C", Offset = "0xA2454C", VA = "0xA2454C")]
	public void ExitCombat()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xA24964", Offset = "0xA24964", VA = "0xA24964")]
	public void MissionCompleted()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xA24990", Offset = "0xA24990", VA = "0xA24990")]
	public void SetScale(float s)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xA0F9E8", Offset = "0xA0F9E8", VA = "0xA0F9E8")]
	public void StopAI()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xA117E8", Offset = "0xA117E8", VA = "0xA117E8")]
	public void SetupAI()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xA249FC", Offset = "0xA249FC", VA = "0xA249FC")]
	public Vector3 GetFlank(Vector3 pt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xA183A4", Offset = "0xA183A4", VA = "0xA183A4")]
	public Vector3 GetPositionWithLeading(GameObject firingObject, float projectileSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xA24AC0", Offset = "0xA24AC0", VA = "0xA24AC0")]
	public void CoolItems(bool allItems = false)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xA24BE8", Offset = "0xA24BE8", VA = "0xA24BE8")]
	public void JoinEnemyTeam()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xA24C7C", Offset = "0xA24C7C", VA = "0xA24C7C")]
	public void JoinPlayerTeam()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xA24EEC", Offset = "0xA24EEC", VA = "0xA24EEC")]
	public void GamePausedStateChanged()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xA24F38", Offset = "0xA24F38", VA = "0xA24F38")]
	public void AddDust(float amt)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xA19A9C", Offset = "0xA19A9C", VA = "0xA19A9C")]
	public void PlotAttackCourse(float attackRange = 0f)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xA24F7C", Offset = "0xA24F7C", VA = "0xA24F7C")]
	public Vector3 GetLocationNear(SpaceUnit unitFrom, float distance = 300f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xA2505C", Offset = "0xA2505C", VA = "0xA2505C")]
	public void SetTargetLocationNear(SpaceUnit unit, float distance = 300f)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xA25148", Offset = "0xA25148", VA = "0xA25148")]
	public static string GetBuffStats(ShipBuff buff, bool showAmt, bool isPercentage, bool neg = false)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA242EC", Offset = "0xA242EC", VA = "0xA242EC")]
	public static string GetBuffDesc(ShipBuff buff)
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA252FC", Offset = "0xA252FC", VA = "0xA252FC")]
	public void CreateLoadoutSlowly(ShipLoadout l)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xA25434", Offset = "0xA25434", VA = "0xA25434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE96C", Offset = "0x6DE96C")]
	public IEnumerator CreateLoadoutSlowlyCO()
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xA254AC", Offset = "0xA254AC", VA = "0xA254AC")]
	public void SetDefaultLoadout(bool createSlowly = false)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA254BC", Offset = "0xA254BC", VA = "0xA254BC")]
	public void SetEmptyLoadout(bool createSlowly = false)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA0F43C", Offset = "0xA0F43C", VA = "0xA0F43C")]
	public void SetLoadout(ShipLoadout l, bool createSlowly = false)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA25550", Offset = "0xA25550", VA = "0xA25550")]
	public void SetLoadout(int tier, bool createSlowly = false)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xA2570C", Offset = "0xA2570C", VA = "0xA2570C")]
	public void WarpIn()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA25D1C", Offset = "0xA25D1C", VA = "0xA25D1C")]
	public void WarpInWithPos(Vector3 warpInPos, string notificationMsg)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA17888", Offset = "0xA17888", VA = "0xA17888")]
	public bool CanMove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA147D8", Offset = "0xA147D8", VA = "0xA147D8")]
	public bool IsDisabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA25FEC", Offset = "0xA25FEC", VA = "0xA25FEC")]
	public bool IsCaptured()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA26080", Offset = "0xA26080", VA = "0xA26080")]
	public void WarpOut()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xA262D8", Offset = "0xA262D8", VA = "0xA262D8")]
	public void SetScanTime(float t)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xA262F4", Offset = "0xA262F4", VA = "0xA262F4")]
	public UnityEvent GetScannedEvent(bool create = false)
	{
		return null;
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xA263D0", Offset = "0xA263D0", VA = "0xA263D0")]
	public SpaceUnitSaveData ToData()
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xA26500", Offset = "0xA26500", VA = "0xA26500")]
	public void FromData(SpaceUnitSaveData data)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xA26718", Offset = "0xA26718", VA = "0xA26718")]
	public void SetAllWeaponTargets(SpaceUnit t)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xA2681C", Offset = "0xA2681C", VA = "0xA2681C")]
	public bool HasAccessToShip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xA269C4", Offset = "0xA269C4", VA = "0xA269C4")]
	public int GetSellPrice()
	{
		return default(int);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xA17964", Offset = "0xA17964", VA = "0xA17964")]
	public bool CanBeSeenBy(SpaceUnit ship)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xA26B0C", Offset = "0xA26B0C", VA = "0xA26B0C")]
	public bool IsInFormation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xA26B14", Offset = "0xA26B14", VA = "0xA26B14")]
	public bool IsAsset()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xA20960", Offset = "0xA20960", VA = "0xA20960")]
	public void SetDetails(bool activeStatus)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xA26B34", Offset = "0xA26B34", VA = "0xA26B34")]
	public void FireAsProjectile(SpaceUnit ownerShip)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xA26CB0", Offset = "0xA26CB0", VA = "0xA26CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DE9CC", Offset = "0x6DE9CC")]
	public IEnumerator reEnableCollision()
	{
		return null;
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xA0A2C4", Offset = "0xA0A2C4", VA = "0xA0A2C4")]
	public void UpdateTickAndLabelColorForTeam()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xA26D28", Offset = "0xA26D28", VA = "0xA26D28")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xA26D88", Offset = "0xA26D88", VA = "0xA26D88")]
	public ShipActionButton GetSpecialButton(int i)
	{
		return null;
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xA26DC4", Offset = "0xA26DC4", VA = "0xA26DC4")]
	public ShipActionButton GetNamedSpecialButton(string itemName)
	{
		return null;
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xA26EF4", Offset = "0xA26EF4", VA = "0xA26EF4")]
	public float GetCombatPower()
	{
		return default(float);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA26FD0", Offset = "0xA26FD0", VA = "0xA26FD0")]
	public void Internal_SetActive(bool a)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xA2718C", Offset = "0xA2718C", VA = "0xA2718C")]
	public SpaceUnit()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xA276F4", Offset = "0xA276F4", VA = "0xA276F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DEA2C", Offset = "0x6DEA2C")]
	private void <set_hittable>b__122_0(AbstractGoTween qt)
	{
	}
}
[Token(Token = "0x20001FB")]
public class SpaceUnitLookSelector : MonoBehaviour
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpaceUnit lastSelected;

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xBA84FC", Offset = "0xBA84FC", VA = "0xBA84FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xBA8500", Offset = "0xBA8500", VA = "0xBA8500")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xBA87E0", Offset = "0xBA87E0", VA = "0xBA87E0")]
	public SpaceUnitLookSelector()
	{
	}
}
[Token(Token = "0x20001FC")]
public class SpeakerPuppet : MonoBehaviour
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controllerLeft;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerRight;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject head;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftHandTarget;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightHandTarget;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject headTarget;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 speakerScale;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xBA9668", Offset = "0xBA9668", VA = "0xBA9668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xBA966C", Offset = "0xBA966C", VA = "0xBA966C")]
	public void InitControllers()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xBA9670", Offset = "0xBA9670", VA = "0xBA9670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xBA98E8", Offset = "0xBA98E8", VA = "0xBA98E8")]
	public SpeakerPuppet()
	{
	}
}
[Token(Token = "0x20001FD")]
public class SpeakerSounds : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5CB8", Offset = "0x6D5CB8")]
	private sealed class <PreloadSoundsCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeakerSounds <>4__this;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x117A21C", Offset = "0x117A21C", VA = "0x117A21C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x117A264", Offset = "0x117A264", VA = "0x117A264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x117A09C", Offset = "0x117A09C", VA = "0x117A09C")]
		[DebuggerHidden]
		public <PreloadSoundsCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x117A0C8", Offset = "0x117A0C8", VA = "0x117A0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x117A0CC", Offset = "0x117A0CC", VA = "0x117A0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x117A224", Offset = "0x117A224", VA = "0x117A224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] soundList;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] localizedSoundList;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allowRepeat;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minFrequency;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xBA991C", Offset = "0xBA991C", VA = "0xBA991C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xBA9948", Offset = "0xBA9948", VA = "0xBA9948")]
	private void PreloadSounds()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xBA9974", Offset = "0xBA9974", VA = "0xBA9974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEADC", Offset = "0x6DEADC")]
	private IEnumerator PreloadSoundsCo()
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xBA99EC", Offset = "0xBA99EC", VA = "0xBA99EC")]
	public SpeakerSounds()
	{
	}
}
[Token(Token = "0x20001FF")]
public class AudioAnalyzer : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float interval;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int spectrumSamples;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfBands;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float intervalTimeLeft;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] rawSpectrum;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] bandLevels;

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xCCBA68", Offset = "0xCCBA68", VA = "0xCCBA68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xCCBAE0", Offset = "0xCCBAE0", VA = "0xCCBAE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xCCBAE8", Offset = "0xCCBAE8", VA = "0xCCBAE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xCCBB4C", Offset = "0xCCBB4C", VA = "0xCCBB4C")]
	private void ConvertRawSpectrumToBandLevels()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xCCBC74", Offset = "0xCCBC74", VA = "0xCCBC74")]
	public AudioAnalyzer()
	{
	}
}
[Token(Token = "0x2000200")]
public class IndicatorElement : MonoBehaviour
{
	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float meter;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioAnalyzer analyzer;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xCA8254", Offset = "0xCA8254", VA = "0xCA8254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xCA830C", Offset = "0xCA830C", VA = "0xCA830C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xCA83BC", Offset = "0xCA83BC", VA = "0xCA83BC")]
	public IndicatorElement()
	{
	}
}
[Token(Token = "0x2000201")]
public class IndicatorSetup : MonoBehaviour
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject elementPrefab;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xCA83C4", Offset = "0xCA83C4", VA = "0xCA83C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCA8528", Offset = "0xCA8528", VA = "0xCA8528")]
	public IndicatorSetup()
	{
	}
}
[Token(Token = "0x2000202")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 angles;

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xBA9FF4", Offset = "0xBA9FF4", VA = "0xBA9FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xBA9FF8", Offset = "0xBA9FF8", VA = "0xBA9FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xBAA060", Offset = "0xBAA060", VA = "0xBAA060")]
	public Spin()
	{
	}
}
[Token(Token = "0x2000203")]
public class Spinny : MonoBehaviour
{
	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] toruses;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xBAA210", Offset = "0xBAA210", VA = "0xBAA210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xBAA2FC", Offset = "0xBAA2FC", VA = "0xBAA2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xBAA300", Offset = "0xBAA300", VA = "0xBAA300")]
	public Spinny()
	{
	}
}
[Token(Token = "0x2000204")]
public class StandardButtonObject : GrabbableObject
{
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Rigidbody rb;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip btnClickSound;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip btnUnclickSound;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent clickEvent;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent unclickEvent;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent hoverEvent;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public UnityEvent unHoverEvent;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Vector3 initialScale;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool scaleOnHover;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool moveOnHover;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 hoverOffset;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xBAA520", Offset = "0xBAA520", VA = "0xBAA520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xBAA5FC", Offset = "0xBAA5FC", VA = "0xBAA5FC")]
	public void ResetInitialScale()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xBAA63C", Offset = "0xBAA63C", VA = "0xBAA63C", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xBAA670", Offset = "0xBAA670", VA = "0xBAA670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xBAAB0C", Offset = "0xBAAB0C", VA = "0xBAAB0C", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xBAAD30", Offset = "0xBAAD30", VA = "0xBAAD30", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xBAAD94", Offset = "0xBAAD94", VA = "0xBAAD94", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xBAAF34", Offset = "0xBAAF34", VA = "0xBAAF34", Slot = "20")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xBAAF38", Offset = "0xBAAF38", VA = "0xBAAF38", Slot = "21")]
	public virtual void OnHovered()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xBAAF3C", Offset = "0xBAAF3C", VA = "0xBAAF3C", Slot = "22")]
	public virtual void OnUnhovered()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xBAAF40", Offset = "0xBAAF40", VA = "0xBAAF40", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xBAAF48", Offset = "0xBAAF48", VA = "0xBAAF48", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xBAB08C", Offset = "0xBAB08C", VA = "0xBAB08C")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xBAAAD0", Offset = "0xBAAAD0", VA = "0xBAAAD0")]
	public void SetInitialPos()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xBAB090", Offset = "0xBAB090", VA = "0xBAB090")]
	public void Teardown()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xBAB094", Offset = "0xBAB094", VA = "0xBAB094")]
	public StandardButtonObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000205")]
public class OptionClickedEvent : UnityEvent<int>
{
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xC2D338", Offset = "0xC2D338", VA = "0xC2D338")]
	public OptionClickedEvent()
	{
	}
}
[Token(Token = "0x2000206")]
public class StandardOption : StandardButtonObject
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int optionId;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Text optionLabel;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public OptionClickedEvent optionClickedEvent;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xBAB588", Offset = "0xBAB588", VA = "0xBAB588")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xBAB604", Offset = "0xBAB604", VA = "0xBAB604")]
	public void Setup(string label, int id)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xBAB6D8", Offset = "0xBAB6D8", VA = "0xBAB6D8", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xBAB730", Offset = "0xBAB730", VA = "0xBAB730")]
	public StandardOption()
	{
	}
}
[Token(Token = "0x2000207")]
public class StandardToggleObject : StandardButtonObject
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool _active;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent toggleOnEvent;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UnityEvent toggleOffEvent;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject toggleIndicator;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string toggleHelpTextOn;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string toggleHelpTextOff;

	[Token(Token = "0x170000B1")]
	public bool active
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xBAB770", Offset = "0xBAB770", VA = "0xBAB770")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xBAB734", Offset = "0xBAB734", VA = "0xBAB734")]
		set
		{
		}
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xBAB778", Offset = "0xBAB778", VA = "0xBAB778", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xBAB840", Offset = "0xBAB840", VA = "0xBAB840")]
	public StandardToggleObject()
	{
	}
}
[Token(Token = "0x2000208")]
public class StarNames
{
	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] names;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xBABAB8", Offset = "0xBABAB8", VA = "0xBABAB8")]
	public StarNames()
	{
	}
}
[Token(Token = "0x2000209")]
public class SteamworksManager : MonoBehaviour
{
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xBB1190", Offset = "0xBB1190", VA = "0xBB1190")]
	public SteamworksManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200020A")]
public class StoryOptions
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ScenarioCanvas optionA;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScenarioCanvas optionB;

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xBB621C", Offset = "0xBB621C", VA = "0xBB621C")]
	public StoryOptions()
	{
	}
}
[Token(Token = "0x200020B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5CC8", Offset = "0x6D5CC8")]
public class StoryChapter : ScriptableObject
{
	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScenarioCanvas optionA;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StoryOptions> stages;

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xBB5A54", Offset = "0xBB5A54", VA = "0xBB5A54")]
	public StoryChapter()
	{
	}
}
[Token(Token = "0x200020C")]
public class StoryManager : MonoBehaviour
{
	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static StoryManager instance;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ScenarioCanvas currentScenario;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionList missions;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MissionList endlessModeMissions;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public MissionMap currentMap;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] sceneryList;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xBB5A5C", Offset = "0xBB5A5C", VA = "0xBB5A5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xBB5AB8", Offset = "0xBB5AB8", VA = "0xBB5AB8")]
	public void EnsureArcOrder()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xBB5D98", Offset = "0xBB5D98", VA = "0xBB5D98")]
	public void InitStoryMode()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xBB5E8C", Offset = "0xBB5E8C", VA = "0xBB5E8C")]
	public void InitEndlessMode(EndlessModeRunData endlessData)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xBB5F48", Offset = "0xBB5F48", VA = "0xBB5F48")]
	public void LoadEndlessMode(MissionMapData mapData)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xBB6068", Offset = "0xBB6068", VA = "0xBB6068")]
	public void LoadStoryMode(MissionMapData mapData)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xBB6178", Offset = "0xBB6178", VA = "0xBB6178")]
	public void InitTutorial()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xBB6214", Offset = "0xBB6214", VA = "0xBB6214")]
	public StoryManager()
	{
	}
}
[Token(Token = "0x200020D")]
public class TargetReticule : MonoBehaviour
{
	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reticleBig;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject reticleLittle;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject target;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject playerHead;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float reticleAnim;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float lifeTime;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rotates;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool littleRotates;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float reticleScaleMin;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float reticleScaleAdd;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animationDuration;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BezierCurve curve;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xBBB2E4", Offset = "0xBBB2E4", VA = "0xBBB2E4")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xBBB3F8", Offset = "0xBBB3F8", VA = "0xBBB3F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xBBB984", Offset = "0xBBB984", VA = "0xBBB984")]
	public TargetReticule()
	{
	}
}
[Token(Token = "0x200020E")]
public class TeleportProjectile : MonoBehaviour
{
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xBBDF18", Offset = "0xBBDF18", VA = "0xBBDF18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xBBDF1C", Offset = "0xBBDF1C", VA = "0xBBDF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xBBDF20", Offset = "0xBBDF20", VA = "0xBBDF20")]
	public TeleportProjectile()
	{
	}
}
[Token(Token = "0x200020F")]
public class TempScreenshotter : MonoBehaviour
{
	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xC5A0DC", Offset = "0xC5A0DC", VA = "0xC5A0DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xC5A0E0", Offset = "0xC5A0E0", VA = "0xC5A0E0")]
	public TempScreenshotter()
	{
	}
}
[Token(Token = "0x2000210")]
public class TextSize
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Hashtable dict;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh textMesh;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer renderer;

	[Token(Token = "0x170000B2")]
	public float width
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC5DC08", Offset = "0xC5DC08", VA = "0xC5DC08")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B3")]
	public float height
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xC5DFD0", Offset = "0xC5DFD0", VA = "0xC5DFD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xC5D4E8", Offset = "0xC5D4E8", VA = "0xC5D4E8")]
	public TextSize(TextMesh tm)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xC5D5B4", Offset = "0xC5D5B4", VA = "0xC5D5B4")]
	private void getSpace()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xC5D7B8", Offset = "0xC5D7B8", VA = "0xC5D7B8")]
	public float GetTextWidth(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xC5DA44", Offset = "0xC5DA44", VA = "0xC5DA44")]
	public void FitToWidth(float wantedWidth)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xC5DC40", Offset = "0xC5DC40", VA = "0xC5DC40")]
	private string wrapLine(string s, float w)
	{
		return null;
	}
}
[Token(Token = "0x2000211")]
public class ToggleSeatedButton : StandardButtonObject
{
	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xC5ED04", Offset = "0xC5ED04", VA = "0xC5ED04", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xC5ED08", Offset = "0xC5ED08", VA = "0xC5ED08")]
	public ToggleSeatedButton()
	{
	}
}
[Token(Token = "0x2000212")]
public class TrackObject : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToTrack;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xC5FB3C", Offset = "0xC5FB3C", VA = "0xC5FB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xC5FB40", Offset = "0xC5FB40", VA = "0xC5FB40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xC5FC70", Offset = "0xC5FC70", VA = "0xC5FC70")]
	public TrackObject()
	{
	}
}
[Token(Token = "0x2000213")]
public class TrackerPuppet : MonoBehaviour
{
	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D891C", Offset = "0x6D891C")]
	public GameObject controllerLeft;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerRight;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackerLeft;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject trackerRight;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject playerHead;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float myHeight;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8954", Offset = "0x6D8954")]
	public Transform main;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform root;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftUpperArm;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leftForeArm;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rightUpperArm;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightForeArm;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform head;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform neck;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform chest;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform hips;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion startingChestRotation;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion startingHipsRotation;

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xC5FC78", Offset = "0xC5FC78", VA = "0xC5FC78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xC5FCC8", Offset = "0xC5FCC8", VA = "0xC5FCC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xC60140", Offset = "0xC60140", VA = "0xC60140")]
	public TrackerPuppet()
	{
	}
}
[Token(Token = "0x2000214")]
public class TrackerPuppet2 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000215")]
	public struct TrackerLerpTarget
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transformTarget;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 positionA;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotationA;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 positionB;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion rotationB;
	}

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float handLerp;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D898C", Offset = "0x6D898C")]
	public float myHeight;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 heightOffset;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D89C4", Offset = "0x6D89C4")]
	public Transform controllerLeft;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform controllerRight;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform trackerLeft;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform trackerRight;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform playerHead;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion controllerLeftStart;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion controllerRightStart;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D89FC", Offset = "0x6D89FC")]
	public Transform main;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform root;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform leftUpperArm;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform leftForeArm;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform rightUpperArm;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform rightForeArm;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform head;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform neck;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform chest;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform hips;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float padLerpRate;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float triggerLerpRate;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float padValLeft;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float padValRight;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float triggerValLeft;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float triggerValRight;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve LeftXCurve;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TrackerLerpTarget[] LeftXTargets;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve RightXCurve;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TrackerLerpTarget[] RightXTargets;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AnimationCurve LeftTriggerCurve;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TrackerLerpTarget[] LeftTriggerTargets;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AnimationCurve RightTriggerCurve;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TrackerLerpTarget[] RightTriggerTargets;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TrackerLerpTarget[] FingerIndexL;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TrackerLerpTarget[] FingerMiddleL;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TrackerLerpTarget[] FingerThumbL;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TrackerLerpTarget[] FingerIndexR;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TrackerLerpTarget[] FingerMiddleR;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TrackerLerpTarget[] FingerThumbR;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool disableFingers;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool actualPosHands;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UnitGrabberController leftController;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UnitGrabberController rightController;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Quaternion leftForeArmLast;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Quaternion rightForeArmLast;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Quaternion headLast;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Quaternion leftUpperArmLast;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Quaternion rightUpperArmLast;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float lastTilt;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float lastLean;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float lastFacingAng;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Quaternion startingChestRotation;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Quaternion startingHipsRotation;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Quaternion startingHeadRotation;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 leftForeArmForwardLocal;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 leftForeArmUpLocal;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Vector3 rightForeArmForwardLocal;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 rightForeArmUpLocal;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 leftUpperArmForwardLocal;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 leftUpperArmUpLocal;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private Vector3 rightUpperArmForwardLocal;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3 rightUpperArmUpLocal;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Vector3 headForwardLocal;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Vector3 headUpLocal;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private Vector3 playerInitialForward;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Vector3 playerInitialRight;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private bool isPosing;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x285")]
	public bool disableArms;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x286")]
	public bool correctBoneAxis;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private KalmanFilterVector3 trackerLeftPos;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private KalmanFilterVector3 trackerRightPos;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private UnityAnimationRecorder animationRecorder;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xC60154", Offset = "0xC60154", VA = "0xC60154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xC605C8", Offset = "0xC605C8", VA = "0xC605C8")]
	public void DelayedBegin()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xC609FC", Offset = "0xC609FC", VA = "0xC609FC")]
	public void onDisable()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xC60A98", Offset = "0xC60A98", VA = "0xC60A98")]
	public void OnMenuPressed()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xC60B50", Offset = "0xC60B50", VA = "0xC60B50")]
	public void StopPose()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xC60B60", Offset = "0xC60B60", VA = "0xC60B60")]
	public void BeginPose()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xC60C70", Offset = "0xC60C70", VA = "0xC60C70")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xC62064", Offset = "0xC62064", VA = "0xC62064")]
	public TrackerPuppet2()
	{
	}
}
[Token(Token = "0x2000216")]
public class TrackerPuppetPlayer : MonoBehaviour
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8A34", Offset = "0x6D8A34")]
	public float myHeight;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8A6C", Offset = "0x6D8A6C")]
	public Transform controllerLeft;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform controllerRight;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trackerLeft;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform trackerRight;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform playerHead;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion controllerLeftStart;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion controllerRightStart;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8AA4", Offset = "0x6D8AA4")]
	public Transform main;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform root;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leftUpperArm;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform leftForeArm;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform rightUpperArm;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform rightForeArm;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform head;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform neck;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform chest;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform hips;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion leftForeArmLast;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion rightForeArmLast;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion headLast;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lastTilt;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float lastLean;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float lastFacingAng;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion startingChestRotation;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion startingHipsRotation;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Quaternion startingHeadRotation;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 leftForeArmForwardLocal;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 leftForeArmUpLocal;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 rightForeArmForwardLocal;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 rightForeArmUpLocal;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 leftUpperArmForwardLocal;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 leftUpperArmUpLocal;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 rightUpperArmForwardLocal;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 rightUpperArmUpLocal;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 headForwardLocal;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 headUpLocal;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 playerInitialForward;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 playerInitialRight;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool isPosing;

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xC62464", Offset = "0xC62464", VA = "0xC62464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xC62844", Offset = "0xC62844", VA = "0xC62844")]
	public void DelayedBegin()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xC62B58", Offset = "0xC62B58", VA = "0xC62B58")]
	public void StopPose()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xC62B68", Offset = "0xC62B68", VA = "0xC62B68")]
	public void BeginPose()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xC62BD0", Offset = "0xC62BD0", VA = "0xC62BD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xC62D20", Offset = "0xC62D20", VA = "0xC62D20")]
	public TrackerPuppetPlayer()
	{
	}
}
[Token(Token = "0x2000217")]
public class ArmorDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpaceUnit unit;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProgressBar2 healthBar;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProgressBar2 shieldBar;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProgressBar2 frontArmorBar;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ProgressBar2 rightArmorBar;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ProgressBar2 backArmorBar;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ProgressBar2 leftArmorBar;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text zoomHintText;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer displayBack;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material displayBackFriendly;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material displayBackEnemy;

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xCC9D68", Offset = "0xCC9D68", VA = "0xCC9D68")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xCC9D6C", Offset = "0xCC9D6C", VA = "0xCC9D6C")]
	private Color GetArmorColor(float frac)
	{
		return default(Color);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xCC9D90", Offset = "0xCC9D90", VA = "0xCC9D90")]
	public void SetDisplayForTeam()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xCCA164", Offset = "0xCCA164", VA = "0xCCA164")]
	public void UpdateArmorDisplay()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xCCA51C", Offset = "0xCCA51C", VA = "0xCCA51C")]
	public ArmorDisplay()
	{
	}
}
[Token(Token = "0x2000218")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject graphic;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blinkRate;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource blinkSound;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xB696F8", Offset = "0xB696F8", VA = "0xB696F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xB69718", Offset = "0xB69718", VA = "0xB69718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xB697F4", Offset = "0xB697F4", VA = "0xB697F4")]
	public Blink()
	{
	}
}
[Token(Token = "0x2000219")]
public class BridgeFleetDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] shipSpots;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipUpgradeUI upgradeUI;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManagementUI managementUI;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lockedIconPrefab;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buyIconPrefab;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro fightersLabel;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> shipObjects;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xB6A8A8", Offset = "0xB6A8A8", VA = "0xB6A8A8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xB6A9EC", Offset = "0xB6A9EC", VA = "0xB6A9EC")]
	public void ShipClicked(SpaceUnit ship)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xB6AA88", Offset = "0xB6AA88", VA = "0xB6AA88")]
	public void AddClicked()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xB6AAA4", Offset = "0xB6AAA4", VA = "0xB6AAA4")]
	public void UpdateObjects()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xB6B7A0", Offset = "0xB6B7A0", VA = "0xB6B7A0")]
	public BridgeFleetDisplay()
	{
	}
}
[Token(Token = "0x200021A")]
public class BridgeFleetDisplayShip : StandardButtonObject
{
	[Serializable]
	[Token(Token = "0x200021B")]
	public class ShipClickedEvent : UnityEvent<SpaceUnit>
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x9FBCC4", Offset = "0x9FBCC4", VA = "0x9FBCC4")]
		public ShipClickedEvent()
		{
		}
	}

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SpaceUnit ship;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ShipClickedEvent shipClickedEvent;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xB6B854", Offset = "0xB6B854", VA = "0xB6B854", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xB6B8B4", Offset = "0xB6B8B4", VA = "0xB6B8B4", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xB6B8B8", Offset = "0xB6B8B8", VA = "0xB6B8B8", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xB6B228", Offset = "0xB6B228", VA = "0xB6B228")]
	public void SetShip(SpaceUnit s)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xB6B8BC", Offset = "0xB6B8BC", VA = "0xB6B8BC")]
	public BridgeFleetDisplayShip()
	{
	}
}
[Token(Token = "0x200021C")]
public class ClickToEnable : GrabbableObject
{
	[Token(Token = "0x200021D")]
	private enum CTEState
	{
		[Token(Token = "0x4000E91")]
		Closed,
		[Token(Token = "0x4000E92")]
		Opening,
		[Token(Token = "0x4000E93")]
		Open,
		[Token(Token = "0x4000E94")]
		Closing
	}

	[Token(Token = "0x200021E")]
	private enum CTETriggerType
	{
		[Token(Token = "0x4000E96")]
		Click,
		[Token(Token = "0x4000E97")]
		HoldOver
	}

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] quarters;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Rigidbody rb;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip btnClickSound;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip openSound;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip closedSound;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Collider myCollider;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material closedMaterial;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color closedColor;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material openMaterial;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color openColor;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject subObject;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool hoverToOpenAllowed;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private CTEState currentState;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CTETriggerType triggerType;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float openness;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float closingDelay;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float openTime;

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xD82EEC", Offset = "0xD82EEC", VA = "0xD82EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xD82F84", Offset = "0xD82F84", VA = "0xD82F84", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xD82FE4", Offset = "0xD82FE4", VA = "0xD82FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xD83364", Offset = "0xD83364", VA = "0xD83364", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xD83510", Offset = "0xD83510", VA = "0xD83510", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xD83564", Offset = "0xD83564", VA = "0xD83564", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xD83684", Offset = "0xD83684", VA = "0xD83684", Slot = "20")]
	public virtual void OnHovered()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xD836A8", Offset = "0xD836A8", VA = "0xD836A8", Slot = "21")]
	public virtual void OnUnhovered()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xD836AC", Offset = "0xD836AC", VA = "0xD836AC", Slot = "22")]
	public virtual void OnClicked()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xD83720", Offset = "0xD83720", VA = "0xD83720", Slot = "23")]
	public virtual void OnOpened()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xD83724", Offset = "0xD83724", VA = "0xD83724", Slot = "24")]
	public virtual void OnClosed()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xD83728", Offset = "0xD83728", VA = "0xD83728", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xD83730", Offset = "0xD83730", VA = "0xD83730", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xD83738", Offset = "0xD83738", VA = "0xD83738")]
	public ClickToEnable()
	{
	}
}
[Token(Token = "0x200021F")]
public class DifficultyPage : MonoBehaviour
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FancyButton[] difficultyButtons;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FancyButton permadeathButton;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x91CDD0", Offset = "0x91CDD0", VA = "0x91CDD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x91D0F8", Offset = "0x91D0F8", VA = "0x91D0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x91CDD4", Offset = "0x91CDD4", VA = "0x91CDD4")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x91D0FC", Offset = "0x91D0FC", VA = "0x91D0FC")]
	public void TogglePermadeath()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x91D184", Offset = "0x91D184", VA = "0x91D184")]
	public void SetDifficulty(int d)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x91D270", Offset = "0x91D270", VA = "0x91D270")]
	public DifficultyPage()
	{
	}
}
[Token(Token = "0x2000220")]
public class DifficultySelector : MonoBehaviour
{
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] glows;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material offMaterial;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer[] spheres;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro label;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] difficultyDescs;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x91D278", Offset = "0x91D278", VA = "0x91D278")]
	public void SetDisplay(int n)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x91D43C", Offset = "0x91D43C", VA = "0x91D43C")]
	public DifficultySelector()
	{
	}
}
[Token(Token = "0x2000221")]
public class DiscreteBar : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float value;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxValue;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float differenceVal;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material activeMat;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material inactiveMat;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material differenceMat;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] cubes;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 smallSize;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 bigSize;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hideUnfilled;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x91D578", Offset = "0x91D578", VA = "0x91D578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x91D57C", Offset = "0x91D57C", VA = "0x91D57C")]
	public void SetValue(float v, float _differenceVal)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x91D5BC", Offset = "0x91D5BC", VA = "0x91D5BC")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x91D8D4", Offset = "0x91D8D4", VA = "0x91D8D4")]
	public DiscreteBar()
	{
	}
}
[Token(Token = "0x2000222")]
[ExecuteInEditMode]
public class DotField : MonoBehaviour
{
	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material meshMaterial;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int depth;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spacingX;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spacingY;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform focus1;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform focus2;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float effectRadius;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaler;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshFilter mMeshFilter;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fanFactor;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Matrix4x4[] matrices;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector4[] colorArray;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8ADC", Offset = "0x6D8ADC")]
	public Color dotColor;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x91F92C", Offset = "0x91F92C", VA = "0x91F92C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x91F930", Offset = "0x91F930", VA = "0x91F930")]
	private void InitData()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x91F9C4", Offset = "0x91F9C4", VA = "0x91F9C4")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x91FDE4", Offset = "0x91FDE4", VA = "0x91FDE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x91FF58", Offset = "0x91FF58", VA = "0x91FF58")]
	public DotField()
	{
	}
}
[Token(Token = "0x2000223")]
public class DotSpace : MonoBehaviour
{
	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material meshMaterial;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _gridSize;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int dotCount;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sizeX;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int sizeY;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sizeZ;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _effectRadius;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scaler;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshFilter mMeshFilter;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Matrix4x4[] matrices;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector4[] colorArray;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8B10", Offset = "0x6D8B10")]
	public Color dotColor;

	[Token(Token = "0x170000B4")]
	public float gridSize
	{
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x920D14", Offset = "0x920D14", VA = "0x920D14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x920B1C", Offset = "0x920B1C", VA = "0x920B1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public float effectRadius
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x920D24", Offset = "0x920D24", VA = "0x920D24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x920D1C", Offset = "0x920D1C", VA = "0x920D1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x920D2C", Offset = "0x920D2C", VA = "0x920D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x920B24", Offset = "0x920B24", VA = "0x920B24")]
	private void InitData()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x920D30", Offset = "0x920D30", VA = "0x920D30")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x920FF4", Offset = "0x920FF4", VA = "0x920FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x9210E4", Offset = "0x9210E4", VA = "0x9210E4")]
	public DotSpace()
	{
	}
}
[Token(Token = "0x2000224")]
public class EndMissionButton : StandardButtonObject
{
	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xB44B14", Offset = "0xB44B14", VA = "0xB44B14", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xB44BD0", Offset = "0xB44BD0", VA = "0xB44BD0")]
	public EndMissionButton()
	{
	}
}
[Token(Token = "0x2000225")]
public class EndlessModeFactionPage : MonoBehaviour
{
	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text enemiesText;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EndlessModeAssets endlessModeAssets;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EndlessModeSettings currentSettings;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text overviewSubhead;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text overviewMain;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FancyButton[] fleetButtons;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpaceBattleManager.FactionsEnum[] factionForFleet;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FancyButton[] allyButtons;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpaceBattleManager.FactionsEnum[] factionForAllyButton;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite[] factionToSprite;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] factionFlagshipSprite;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject nextButton;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text totalScoreModLabel;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject eternalStar;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image portraitBig;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image flagshipBig;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int chosenFleet;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxAllies;

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xB44C48", Offset = "0xB44C48", VA = "0xB44C48")]
	public void ResetAllies()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xB45344", Offset = "0xB45344", VA = "0xB45344")]
	public void Setup(EndlessModeAssets _assets, EndlessModeSettings _currentSettings)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xB45DF0", Offset = "0xB45DF0", VA = "0xB45DF0")]
	public void PickFaction(int n)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xB454E0", Offset = "0xB454E0", VA = "0xB454E0")]
	public void UpdateUI()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xB46714", Offset = "0xB46714", VA = "0xB46714")]
	public int GetTotalAllies()
	{
		return default(int);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xB45254", Offset = "0xB45254", VA = "0xB45254")]
	public void UpdateModifiers()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xB46ADC", Offset = "0xB46ADC", VA = "0xB46ADC")]
	public void ToggleFactionFriend(int toggleFaction)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xB46CB0", Offset = "0xB46CB0", VA = "0xB46CB0")]
	public EndlessModeFactionPage()
	{
	}
}
[Token(Token = "0x2000226")]
public class EndlessModeSettingsPage : MonoBehaviour
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FancyButton[] runLengthButtons;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FancyButton[] modifierButtons;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EndlessModeSettings currentSettings;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text totalScoreModLabel;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xB49F90", Offset = "0xB49F90", VA = "0xB49F90")]
	public void Setup(EndlessModeSettings _currentSettings)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xB49FB8", Offset = "0xB49FB8", VA = "0xB49FB8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xB4AD88", Offset = "0xB4AD88", VA = "0xB4AD88")]
	public void SetRunLength(int len)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xB4ADA4", Offset = "0xB4ADA4", VA = "0xB4ADA4")]
	public void ToggleModifier(int m)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xB4ADF0", Offset = "0xB4ADF0", VA = "0xB4ADF0")]
	public EndlessModeSettingsPage()
	{
	}
}
[Token(Token = "0x2000227")]
public class FancyButton : StandardButtonObject
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Text label;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Image buttonBack;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Image outline;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Image buttonImageHolder;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AnimationCurve clickAnimation;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _toggled;

	[Token(Token = "0x170000B6")]
	public bool toggled
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB4CE2C", Offset = "0xB4CE2C", VA = "0xB4CE2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB46054", Offset = "0xB46054", VA = "0xB46054")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public float buttonOpacity
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB4CF10", Offset = "0xB4CF10", VA = "0xB4CF10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB4CE34", Offset = "0xB4CE34", VA = "0xB4CE34")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public Sprite buttonImage
	{
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xB46174", Offset = "0xB46174", VA = "0xB46174")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xB45F14", Offset = "0xB45F14", VA = "0xB45F14")]
		set
		{
		}
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB4CF40", Offset = "0xB4CF40", VA = "0xB4CF40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB46190", Offset = "0xB46190", VA = "0xB46190")]
	public void FancyInit()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB4D020", Offset = "0xB4D020", VA = "0xB4D020")]
	public void SetSize(int wd, int ht)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB460AC", Offset = "0xB460AC", VA = "0xB460AC")]
	public void SetText(string labelText)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB4D10C", Offset = "0xB4D10C", VA = "0xB4D10C")]
	private void SetStateLit()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB4D28C", Offset = "0xB4D28C", VA = "0xB4D28C")]
	private void SetStateUnlit()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB4D4D8", Offset = "0xB4D4D8", VA = "0xB4D4D8", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB4D4E8", Offset = "0xB4D4E8", VA = "0xB4D4E8", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB4D4EC", Offset = "0xB4D4EC", VA = "0xB4D4EC", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB4D4F0", Offset = "0xB4D4F0", VA = "0xB4D4F0")]
	public void Flash()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB4D818", Offset = "0xB4D818", VA = "0xB4D818")]
	public FancyButton()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB4D820", Offset = "0xB4D820", VA = "0xB4D820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DEB8C", Offset = "0x6DEB8C")]
	private void <Flash>b__24_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x2000228")]
public class HealthLabel : MonoBehaviour
{
	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressBar2 bar;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text primaryLabel;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text lossLabel;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastFlashTime;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color regularColor;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color damagedColor;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float damageTotal;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxValue;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float tickFactor;

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xCA3330", Offset = "0xCA3330", VA = "0xCA3330")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xCA33A4", Offset = "0xCA33A4", VA = "0xCA33A4")]
	public void SetMaxValue(float v)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xCA3494", Offset = "0xCA3494", VA = "0xCA3494")]
	public void SetValue(float health)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xCA363C", Offset = "0xCA363C", VA = "0xCA363C")]
	public void UpdateForDamage(float health, float additionalDamage)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xCA384C", Offset = "0xCA384C", VA = "0xCA384C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xCA3A18", Offset = "0xCA3A18", VA = "0xCA3A18")]
	public bool TookSignificantDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xCA3A34", Offset = "0xCA3A34", VA = "0xCA3A34")]
	public HealthLabel()
	{
	}
}
[Token(Token = "0x2000229")]
public class HintTextBuilder
{
	[Token(Token = "0x200022A")]
	public abstract class InteractionState
	{
		[Token(Token = "0x6000CEC")]
		public abstract string GetHintText(PlatformActionDescription pad);

		[Token(Token = "0x6000CED")]
		public abstract bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller);

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xA00CE4", Offset = "0xA00CE4", VA = "0xA00CE4")]
		protected InteractionState()
		{
		}
	}

	[Token(Token = "0x200022B")]
	public class InteractionState_DragTokenOrOpposingShip : InteractionState
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xA00DB8", Offset = "0xA00DB8", VA = "0xA00DB8", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xA00DFC", Offset = "0xA00DFC", VA = "0xA00DFC", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xA00F20", Offset = "0xA00F20", VA = "0xA00F20")]
		public InteractionState_DragTokenOrOpposingShip()
		{
		}
	}

	[Token(Token = "0x200022C")]
	public class InteractionState_DraggingOverFriendlyShip : InteractionState
	{
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xA00F28", Offset = "0xA00F28", VA = "0xA00F28", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xA00F6C", Offset = "0xA00F6C", VA = "0xA00F6C", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xA010A8", Offset = "0xA010A8", VA = "0xA010A8")]
		public InteractionState_DraggingOverFriendlyShip()
		{
		}
	}

	[Token(Token = "0x200022D")]
	public class InteractionState_SystemTargetable : InteractionState
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xA01568", Offset = "0xA01568", VA = "0xA01568", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xA015AC", Offset = "0xA015AC", VA = "0xA015AC", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xA015DC", Offset = "0xA015DC", VA = "0xA015DC")]
		public InteractionState_SystemTargetable()
		{
		}
	}

	[Token(Token = "0x200022E")]
	public class InteractionState_SetTarget : InteractionState
	{
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xA0140C", Offset = "0xA0140C", VA = "0xA0140C", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xA01470", Offset = "0xA01470", VA = "0xA01470", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xA01560", Offset = "0xA01560", VA = "0xA01560")]
		public InteractionState_SetTarget()
		{
		}
	}

	[Token(Token = "0x200022F")]
	public class InteractionState_UnsetTarget : InteractionState
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xA01740", Offset = "0xA01740", VA = "0xA01740", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xA017A4", Offset = "0xA017A4", VA = "0xA017A4", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xA01894", Offset = "0xA01894", VA = "0xA01894")]
		public InteractionState_UnsetTarget()
		{
		}
	}

	[Token(Token = "0x2000230")]
	public class InteractionState_SetFormation : InteractionState
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xA012B0", Offset = "0xA012B0", VA = "0xA012B0", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xA01314", Offset = "0xA01314", VA = "0xA01314", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xA01404", Offset = "0xA01404", VA = "0xA01404")]
		public InteractionState_SetFormation()
		{
		}
	}

	[Token(Token = "0x2000231")]
	public class InteractionState_UnsetFormation : InteractionState
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xA015E4", Offset = "0xA015E4", VA = "0xA015E4", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xA01648", Offset = "0xA01648", VA = "0xA01648", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xA01738", Offset = "0xA01738", VA = "0xA01738")]
		public InteractionState_UnsetFormation()
		{
		}
	}

	[Token(Token = "0x2000232")]
	public class InteractionState_Selectable : InteractionState
	{
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xA011E4", Offset = "0xA011E4", VA = "0xA011E4", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xA01248", Offset = "0xA01248", VA = "0xA01248", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xA012A8", Offset = "0xA012A8", VA = "0xA012A8")]
		public InteractionState_Selectable()
		{
		}
	}

	[Token(Token = "0x2000233")]
	public class InteractionState_Deselectable : InteractionState
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xA00CEC", Offset = "0xA00CEC", VA = "0xA00CEC", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xA00D50", Offset = "0xA00D50", VA = "0xA00D50", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xA00DB0", Offset = "0xA00DB0", VA = "0xA00DB0")]
		public InteractionState_Deselectable()
		{
		}
	}

	[Token(Token = "0x2000234")]
	public class InteractionState_Movable : InteractionState
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xA010B0", Offset = "0xA010B0", VA = "0xA010B0", Slot = "4")]
		public override string GetHintText(PlatformActionDescription pad)
		{
			return null;
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xA01114", Offset = "0xA01114", VA = "0xA01114", Slot = "5")]
		public override bool IsStateActive(SpaceBattleManager manager, SpaceUnit ship, UnitGrabberController controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xA011DC", Offset = "0xA011DC", VA = "0xA011DC")]
		public InteractionState_Movable()
		{
		}
	}

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InteractionState[] overrideStates;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractionState[] regularStates;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xCA3A48", Offset = "0xCA3A48", VA = "0xCA3A48")]
	public HintTextBuilder()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xCA3E3C", Offset = "0xCA3E3C", VA = "0xCA3E3C")]
	public string GetHintText(SpaceBattleManager manager, PlatformActionDescription pad, UnitGrabberController controller, SpaceUnit ship)
	{
		return null;
	}
}
[Token(Token = "0x2000235")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5D1C", Offset = "0x6D5D1C")]
public class InfopediaPageData : ScriptableObject
{
	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pageNameShort;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string pageTitle;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int category;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8B34", Offset = "0x6D8B34")]
	public string[] pageText;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string pageKeyName;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite image1;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite image2;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite imageIcon;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool hideIfLocked;

	[NonSerialized]
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string maxKeyUnlocked;

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xCA9FE8", Offset = "0xCA9FE8", VA = "0xCA9FE8")]
	public InfopediaPageData()
	{
	}
}
[Token(Token = "0x2000236")]
public class MenuPickLanguage : MonoBehaviour
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject optionButtonPrefab;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas canvasArea;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] btns;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x9CBEEC", Offset = "0x9CBEEC", VA = "0x9CBEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x9CBEF0", Offset = "0x9CBEF0", VA = "0x9CBEF0")]
	public void CreateMenu()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x9CC3A8", Offset = "0x9CC3A8", VA = "0x9CC3A8")]
	public void ClickedOption(int id)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x9CC568", Offset = "0x9CC568", VA = "0x9CC568")]
	public MenuPickLanguage()
	{
	}
}
[Token(Token = "0x2000237")]
public class MissionStar : StandardButtonObject
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Text storeText;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public MissionNode node;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private TravelMenu menuMain;

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x9D1D48", Offset = "0x9D1D48", VA = "0x9D1D48")]
	public void StarClicked()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x9D1D68", Offset = "0x9D1D68", VA = "0x9D1D68")]
	public void Setup(MissionNode n, TravelMenu tmenu)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x9D1E68", Offset = "0x9D1E68", VA = "0x9D1E68", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x9D1EA0", Offset = "0x9D1EA0", VA = "0x9D1EA0")]
	public MissionStar()
	{
	}
}
[Token(Token = "0x2000238")]
public abstract class PlatformActionDescription
{
	[Token(Token = "0x6000D16")]
	public abstract string GetDescriptionForPinch();

	[Token(Token = "0x6000D17")]
	public abstract string GetDescriptionForSelect();

	[Token(Token = "0x6000D18")]
	public abstract string GetDescriptionForGrip();

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1290C84", Offset = "0x1290C84", VA = "0x1290C84")]
	protected PlatformActionDescription()
	{
	}
}
[Token(Token = "0x2000239")]
public class PlatformActionDescriptionSteam : PlatformActionDescription
{
	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1290F08", Offset = "0x1290F08", VA = "0x1290F08", Slot = "4")]
	public override string GetDescriptionForPinch()
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1290F4C", Offset = "0x1290F4C", VA = "0x1290F4C", Slot = "5")]
	public override string GetDescriptionForSelect()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x1290F90", Offset = "0x1290F90", VA = "0x1290F90", Slot = "6")]
	public override string GetDescriptionForGrip()
	{
		return null;
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x1290FD4", Offset = "0x1290FD4", VA = "0x1290FD4")]
	public PlatformActionDescriptionSteam()
	{
	}
}
[Token(Token = "0x200023A")]
public class PlatformActionDescriptionOculusLeftHand : PlatformActionDescription
{
	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1290D60", Offset = "0x1290D60", VA = "0x1290D60", Slot = "4")]
	public override string GetDescriptionForPinch()
	{
		return null;
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1290DA4", Offset = "0x1290DA4", VA = "0x1290DA4", Slot = "5")]
	public override string GetDescriptionForSelect()
	{
		return null;
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x1290DE8", Offset = "0x1290DE8", VA = "0x1290DE8", Slot = "6")]
	public override string GetDescriptionForGrip()
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1290E2C", Offset = "0x1290E2C", VA = "0x1290E2C")]
	public PlatformActionDescriptionOculusLeftHand()
	{
	}
}
[Token(Token = "0x200023B")]
public class PlatformActionDescriptionOculusRightHand : PlatformActionDescription
{
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1290E34", Offset = "0x1290E34", VA = "0x1290E34", Slot = "4")]
	public override string GetDescriptionForPinch()
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x1290E78", Offset = "0x1290E78", VA = "0x1290E78", Slot = "5")]
	public override string GetDescriptionForSelect()
	{
		return null;
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1290EBC", Offset = "0x1290EBC", VA = "0x1290EBC", Slot = "6")]
	public override string GetDescriptionForGrip()
	{
		return null;
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1290F00", Offset = "0x1290F00", VA = "0x1290F00")]
	public PlatformActionDescriptionOculusRightHand()
	{
	}
}
[Token(Token = "0x200023C")]
public class PlatformActionDescriptionHandTracking : PlatformActionDescription
{
	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1290C8C", Offset = "0x1290C8C", VA = "0x1290C8C", Slot = "4")]
	public override string GetDescriptionForPinch()
	{
		return null;
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1290CD0", Offset = "0x1290CD0", VA = "0x1290CD0", Slot = "5")]
	public override string GetDescriptionForSelect()
	{
		return null;
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1290D14", Offset = "0x1290D14", VA = "0x1290D14", Slot = "6")]
	public override string GetDescriptionForGrip()
	{
		return null;
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1290D58", Offset = "0x1290D58", VA = "0x1290D58")]
	public PlatformActionDescriptionHandTracking()
	{
	}
}
[Token(Token = "0x200023D")]
public class Popup : MonoBehaviour
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro label;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip appearSound;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip disappearSound;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MonoBehaviour callback;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject button;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isDisappearing;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform canvasRect;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xA65DAC", Offset = "0xA65DAC", VA = "0xA65DAC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xA65DB8", Offset = "0xA65DB8", VA = "0xA65DB8")]
	public void Appear(string text, bool hasButton = true, float rightOffset = 0f, bool followHead = true, float width = 1100f, float height = 700f)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xA66294", Offset = "0xA66294", VA = "0xA66294")]
	public void Disappear()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xA664A0", Offset = "0xA664A0", VA = "0xA664A0")]
	public void ClickOk()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xA66548", Offset = "0xA66548", VA = "0xA66548")]
	public Popup()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xA66550", Offset = "0xA66550", VA = "0xA66550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DEB9C", Offset = "0x6DEB9C")]
	private void <Disappear>b__9_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x200023E")]
public class PopupOkBtn : StandardButtonObject
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Text label;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Image icon;

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xA66570", Offset = "0xA66570", VA = "0xA66570")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xA66648", Offset = "0xA66648", VA = "0xA66648", Slot = "21")]
	public override void OnHovered()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xA66720", Offset = "0xA66720", VA = "0xA66720", Slot = "22")]
	public override void OnUnhovered()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xA667F8", Offset = "0xA667F8", VA = "0xA667F8", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xA66850", Offset = "0xA66850", VA = "0xA66850")]
	public PopupOkBtn()
	{
	}
}
[Token(Token = "0x200023F")]
public class SelectionBox : MonoBehaviour
{
	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro label;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8B4C", Offset = "0x6D8B4C")]
	public Color redColor;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8B60", Offset = "0x6D8B60")]
	public Color greenColor;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color redTextColor;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color greenTextColor;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int state;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xD47BB0", Offset = "0xD47BB0", VA = "0xD47BB0")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xD47C3C", Offset = "0xD47C3C", VA = "0xD47C3C")]
	public void MakeRed(string labelText = "Target")
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xD47D50", Offset = "0xD47D50", VA = "0xD47D50")]
	public void MakeGreen(string labelText = "Defend")
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xD47E6C", Offset = "0xD47E6C", VA = "0xD47E6C")]
	public SelectionBox()
	{
	}
}
[Token(Token = "0x2000240")]
public class ShipLabelHandler : MonoBehaviour
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] labels;

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xCF495C", Offset = "0xCF495C", VA = "0xCF495C")]
	private void HideAll()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xCF49D8", Offset = "0xCF49D8", VA = "0xCF49D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xCF4A5C", Offset = "0xCF4A5C", VA = "0xCF4A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xCF5050", Offset = "0xCF5050", VA = "0xCF5050")]
	public ShipLabelHandler()
	{
	}
}
[Token(Token = "0x2000241")]
public class SkirmishShipGrabbable : GrabbableObject
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject shipPrefab;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SpaceUnit ship;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xD06ECC", Offset = "0xD06ECC", VA = "0xD06ECC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xD06ED8", Offset = "0xD06ED8", VA = "0xD06ED8", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xD06F34", Offset = "0xD06F34", VA = "0xD06F34", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xD0739C", Offset = "0xD0739C", VA = "0xD0739C", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xD05BD8", Offset = "0xD05BD8", VA = "0xD05BD8")]
	public void Setup(GameObject _shipPrefab)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xD073A0", Offset = "0xD073A0", VA = "0xD073A0")]
	public SkirmishShipGrabbable()
	{
	}
}
[Token(Token = "0x2000242")]
public class SkirmishShipPlacedGrabbable : GrabbableObject
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject shipPrefab;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SpaceUnit ship;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject explodePrefab;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Fleet parentFleet;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int fleetNum;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ShipData shipData;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SkirmishMenu menuRef;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD073A8", Offset = "0xD073A8", VA = "0xD073A8")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD073AC", Offset = "0xD073AC", VA = "0xD073AC")]
	public new void Restart()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xD0740C", Offset = "0xD0740C", VA = "0xD0740C", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xD074D0", Offset = "0xD074D0", VA = "0xD074D0", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xD05FFC", Offset = "0xD05FFC", VA = "0xD05FFC")]
	public void Setup(GameObject _shipPrefab, Fleet _parentFleet, int _fleetNum, ShipData _shipData, SkirmishMenu _menuRef)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xD074D4", Offset = "0xD074D4", VA = "0xD074D4")]
	public SkirmishShipPlacedGrabbable()
	{
	}
}
[Token(Token = "0x2000243")]
public class SpecialQuickView : MonoBehaviour
{
	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro nameLabel;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro progressLabel;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShipItem buttonItem;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProgressArc progress;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material okMaterial;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material badMaterial;

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xBA9A04", Offset = "0xBA9A04", VA = "0xBA9A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xBA9EF0", Offset = "0xBA9EF0", VA = "0xBA9EF0")]
	public void SetItem(ShipItem b)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xBA9F94", Offset = "0xBA9F94", VA = "0xBA9F94")]
	public SpecialQuickView()
	{
	}
}
[Token(Token = "0x2000244")]
public class StandardDropZone : GrabbableObject
{
	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Rigidbody rb;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip dropSound;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent dropEvent;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string allowedDropType;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GrabbableObject lastObjectDropped;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool scaleOnHover;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xBAB0E4", Offset = "0xBAB0E4", VA = "0xBAB0E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xBAB19C", Offset = "0xBAB19C", VA = "0xBAB19C", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xBAB1A4", Offset = "0xBAB1A4", VA = "0xBAB1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xBAB1C0", Offset = "0xBAB1C0", VA = "0xBAB1C0", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xBAB31C", Offset = "0xBAB31C", VA = "0xBAB31C", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xBAB370", Offset = "0xBAB370", VA = "0xBAB370", Slot = "20")]
	public virtual void OnHovered()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xBAB374", Offset = "0xBAB374", VA = "0xBAB374", Slot = "21")]
	public virtual void OnUnhovered()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xBAB378", Offset = "0xBAB378", VA = "0xBAB378", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xBAB394", Offset = "0xBAB394", VA = "0xBAB394", Slot = "22")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xBAB398", Offset = "0xBAB398", VA = "0xBAB398", Slot = "15")]
	public override void DroppedOn(UnitGrabberController controller, Transform t, [Optional] GrabbableObject activeObject)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xBAB4F0", Offset = "0xBAB4F0", VA = "0xBAB4F0")]
	public GrabbableObject GetObjectDropped()
	{
		return null;
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xBAB4F8", Offset = "0xBAB4F8", VA = "0xBAB4F8", Slot = "23")]
	public virtual bool CanDrop(GrabbableObject g)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xBAB51C", Offset = "0xBAB51C", VA = "0xBAB51C")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xBAB520", Offset = "0xBAB520", VA = "0xBAB520")]
	public void Teardown()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xBAB524", Offset = "0xBAB524", VA = "0xBAB524")]
	public StandardDropZone()
	{
	}
}
[Token(Token = "0x2000245")]
public class StoreExitButton : StandardButtonObject
{
	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xBB1198", Offset = "0xBB1198", VA = "0xBB1198", Slot = "20")]
	public override void OnClick()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xBB119C", Offset = "0xBB119C", VA = "0xBB119C")]
	public StoreExitButton()
	{
	}
}
[Token(Token = "0x2000246")]
public class StoreItemButton : GrabbableObject
{
	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject prefab;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject itemObject;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject genericItemMesh;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject offensiveSpecialMesh;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject movementBuffMesh;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject weaponMesh;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro nameLabel;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro manufacturerLabel;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string manufacturerStr;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshPro descLabel;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshPro costLabel;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private MeshRenderer objectRenderer;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color regularColor;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color lockedColor;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material goodMaterial;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material badMaterial;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int cost;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int requiredRep;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Rigidbody rb;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool isItem;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool isCapShip;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool isFighter;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	private bool isLocked;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ItemDescription descriptionObject;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 restingScale;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private StoreMenuManager _manager;

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xBB11A0", Offset = "0xBB11A0", VA = "0xBB11A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xBB11FC", Offset = "0xBB11FC", VA = "0xBB11FC", Slot = "5")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xBB1348", Offset = "0xBB1348", VA = "0xBB1348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xBB16E8", Offset = "0xBB16E8", VA = "0xBB16E8", Slot = "6")]
	public override void hoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xBB1934", Offset = "0xBB1934", VA = "0xBB1934", Slot = "7")]
	public override void unhoverObject(UnitGrabberController controller)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xBB19FC", Offset = "0xBB19FC", VA = "0xBB19FC", Slot = "9")]
	public override bool beginDrag(UnitGrabberController controller, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xBB23F4", Offset = "0xBB23F4", VA = "0xBB23F4", Slot = "10")]
	public override void dragMove(UnitGrabberController controller, Transform t, GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xBB23FC", Offset = "0xBB23FC", VA = "0xBB23FC", Slot = "11")]
	public override void dragEnd(UnitGrabberController controller, Transform t, [Optional] GrabbableObject dropObject)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xBB2404", Offset = "0xBB2404", VA = "0xBB2404")]
	public void Setup(GameObject objPrefab, StoreMenuManager manager, int offs, Vector3 scale)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBB36F0", Offset = "0xBB36F0", VA = "0xBB36F0")]
	public void TriggerWireframeInFX(float offs = 0f, float rate = 0.5f)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBB1248", Offset = "0xBB1248", VA = "0xBB1248")]
	public void Teardown()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBB3BB4", Offset = "0xBB3BB4", VA = "0xBB3BB4")]
	public StoreItemButton()
	{
	}
}
[Token(Token = "0x2000247")]
public class StoreMenuManager : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5D60", Offset = "0x6D5D60")]
	private sealed class <SetPageSequence>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreMenuManager <>4__this;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int n;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x117B8DC", Offset = "0x117B8DC", VA = "0x117B8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x117B924", Offset = "0x117B924", VA = "0x117B924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x117ADB0", Offset = "0x117ADB0", VA = "0x117ADB0")]
		[DebuggerHidden]
		public <SetPageSequence>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x117ADDC", Offset = "0x117ADDC", VA = "0x117ADDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x117ADE0", Offset = "0x117ADE0", VA = "0x117ADE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x117B8E4", Offset = "0x117B8E4", VA = "0x117B8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5D70", Offset = "0x6D5D70")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceBattleManager.FactionsEnum[] enemies;

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x117AB54", Offset = "0x117AB54", VA = "0x117AB54")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x117AB5C", Offset = "0x117AB5C", VA = "0x117AB5C")]
		internal bool <PickStoreItems>b__0(SpaceUnit unit)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5D80", Offset = "0x6D5D80")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__37_1;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<GameObject> <>9__37_2;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<GameObject> <>9__37_3;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<GameObject> <>9__37_4;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<GameObject> <>9__37_5;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<GameObject> <>9__37_6;

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x117A798", Offset = "0x117A798", VA = "0x117A798")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x117A7A0", Offset = "0x117A7A0", VA = "0x117A7A0")]
		internal bool <PickStoreItems>b__37_1(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x117A828", Offset = "0x117A828", VA = "0x117A828")]
		internal bool <PickStoreItems>b__37_2(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x117A8D0", Offset = "0x117A8D0", VA = "0x117A8D0")]
		internal bool <PickStoreItems>b__37_3(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x117A978", Offset = "0x117A978", VA = "0x117A978")]
		internal bool <PickStoreItems>b__37_4(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x117AA04", Offset = "0x117AA04", VA = "0x117AA04")]
		internal bool <PickStoreItems>b__37_5(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x117AAAC", Offset = "0x117AAAC", VA = "0x117AAAC")]
		internal bool <PickStoreItems>b__37_6(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5D90", Offset = "0x6D5D90")]
	private sealed class <DelayedTeardown>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreMenuManager <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x117AD60", Offset = "0x117AD60", VA = "0x117AD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x117ADA8", Offset = "0x117ADA8", VA = "0x117ADA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x117AC34", Offset = "0x117AC34", VA = "0x117AC34")]
		[DebuggerHidden]
		public <DelayedTeardown>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x117AC60", Offset = "0x117AC60", VA = "0x117AC60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x117AC64", Offset = "0x117AC64", VA = "0x117AC64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x117AD68", Offset = "0x117AD68", VA = "0x117AD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> storeItems;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> _shipList;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> _itemList1;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _itemList2;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> _modList;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> _weaponList;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject>[] itemsForPage;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject storeButtonPrefab;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> buttons;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject appearEffectPrefab;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material wireframeMaterial;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ItemList offensiveSpecials;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ItemList defensiveSpecials;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ItemList modItems;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ItemList weaponItems;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpaceUnit[] buyableShips;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpaceUnit[] endlessMode_BuyableShips;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ItemList endlessModeItems;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] pages;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] pageButtons;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string[] pageButtonNames;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool[] pageIsSetup;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color activeTabColor;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color inactiveTabColor;

	[Token(Token = "0x4000F57")]
	private const int NumPages = 5;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int currentPage;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool isPageChanging;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool isSetup;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int buyScrapPrice;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int sellScrapPrice;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject buyScrapButton;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject sellScrapButton;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int scrapLeftAtStore;

	[Token(Token = "0x4000F60")]
	private const int scrapChunkSize = 5;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xBB3C00", Offset = "0xBB3C00", VA = "0xBB3C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEBAC", Offset = "0x6DEBAC")]
	private IEnumerator SetPageSequence(int n)
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xBB3C88", Offset = "0xBB3C88", VA = "0xBB3C88")]
	public void UpdateScrapButtons()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xBB3D3C", Offset = "0xBB3D3C", VA = "0xBB3D3C")]
	public void SetPage(int n)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xBB4260", Offset = "0xBB4260", VA = "0xBB4260")]
	public void PickStoreItems()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xBB3DF8", Offset = "0xBB3DF8", VA = "0xBB3DF8")]
	public void SetupPage(int pageN, List<GameObject> objectList)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xBB51A4", Offset = "0xBB51A4", VA = "0xBB51A4")]
	public bool IsBusy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xBB51AC", Offset = "0xBB51AC", VA = "0xBB51AC")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xBB55F4", Offset = "0xBB55F4", VA = "0xBB55F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEC0C", Offset = "0x6DEC0C")]
	public IEnumerator DelayedTeardown()
	{
		return null;
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xBB566C", Offset = "0xBB566C", VA = "0xBB566C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xBB5468", Offset = "0xBB5468", VA = "0xBB5468")]
	public void Teardown()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xBB2004", Offset = "0xBB2004", VA = "0xBB2004")]
	public void Purchase(StoreItemButton itemButton)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xBB56C8", Offset = "0xBB56C8", VA = "0xBB56C8")]
	public void BuyScrap()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xBB5860", Offset = "0xBB5860", VA = "0xBB5860")]
	public void SellScrap()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBB59BC", Offset = "0xBB59BC", VA = "0xBB59BC")]
	public StoreMenuManager()
	{
	}
}
[Token(Token = "0x200024C")]
public class SystemMenuManager : MonoBehaviour
{
	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text mainLabel;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro statsLabel;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro consoleTextArea;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text musicLabel;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text brightnessLabel;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject combatCamButton;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject smoothCamButton;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject changePerspectiveButton;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject lowEndButton;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject joysticksOnButton;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject swapHandsButton;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject combatCamTick;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject smoothCamTick;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject lowEndTick;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject musicTick;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ProgressBar2 musicLevelBar;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject joysticksOnTick;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject oneHandedOnTick;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject swapHandsTick;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject freezeSkyTick;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject steppedMovementTick;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject gripRotationTick;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject heightAdjustmentTick;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ProgressBar2 brightnessLevelBar;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject saveAndQuitButton;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject sideStatusPanel;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SpaceBattleManager manager;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xBB9E10", Offset = "0xBB9E10", VA = "0xBB9E10")]
	public void Show()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xBB9E70", Offset = "0xBB9E70", VA = "0xBB9E70")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xBBA850", Offset = "0xBBA850", VA = "0xBBA850")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xBBA390", Offset = "0xBBA390", VA = "0xBBA390")]
	public void updateTicks()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xBBA898", Offset = "0xBBA898", VA = "0xBBA898")]
	public void SaveAndQuitToTitle()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xBBA8B4", Offset = "0xBBA8B4", VA = "0xBBA8B4")]
	public void ToggleCombatCam()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xBBA908", Offset = "0xBBA908", VA = "0xBBA908")]
	public void ToggleSmoothCam()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xBBA95C", Offset = "0xBBA95C", VA = "0xBBA95C")]
	public void ToggleLowEndMode()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xBBA990", Offset = "0xBBA990", VA = "0xBBA990")]
	public void ToggleMusic()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xBBA9C4", Offset = "0xBBA9C4", VA = "0xBBA9C4")]
	public void ToggleJoystickMovement()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xBBA9F8", Offset = "0xBBA9F8", VA = "0xBBA9F8")]
	public void ToggleOneHandedPlay()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xBBAA2C", Offset = "0xBBAA2C", VA = "0xBBAA2C")]
	public void ToggleGripRotation()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xBBAA60", Offset = "0xBBAA60", VA = "0xBBAA60")]
	public void ToggleHeightAdjustment()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xBBAA94", Offset = "0xBBAA94", VA = "0xBBAA94")]
	public void ToggleSwapHands()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xBBAAC8", Offset = "0xBBAAC8", VA = "0xBBAAC8")]
	public void ToggleFreezeSky()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xBBAB18", Offset = "0xBBAB18", VA = "0xBBAB18")]
	public void ToggleSteppedMovement()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xBBAB68", Offset = "0xBBAB68", VA = "0xBBAB68")]
	public void ChangePerspective()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xBBAB84", Offset = "0xBBAB84", VA = "0xBBAB84")]
	public void MusicUp()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xBBABD0", Offset = "0xBBABD0", VA = "0xBBABD0")]
	public void MusicDown()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xBBAC1C", Offset = "0xBBAC1C", VA = "0xBBAC1C")]
	public void brightnessUp()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xBBAC6C", Offset = "0xBBAC6C", VA = "0xBBAC6C")]
	public void brightnessDown()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xBBACBC", Offset = "0xBBACBC", VA = "0xBBACBC")]
	public SystemMenuManager()
	{
	}
}
[Token(Token = "0x200024D")]
public class TextRevealer : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DA0", Offset = "0x6D5DA0")]
	private sealed class <RevealNextParagraph>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextRevealer <>4__this;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <paragraphEnd>5__2;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <keyChar>5__3;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <keyCharEnd>5__4;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <speed>5__5;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <secondsElapsed>5__6;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x117D958", Offset = "0x117D958", VA = "0x117D958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x117D9A0", Offset = "0x117D9A0", VA = "0x117D9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x117D650", Offset = "0x117D650", VA = "0x117D650")]
		[DebuggerHidden]
		public <RevealNextParagraph>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x117D67C", Offset = "0x117D67C", VA = "0x117D67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x117D680", Offset = "0x117D680", VA = "0x117D680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x117D960", Offset = "0x117D960", VA = "0x117D960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DB0", Offset = "0x6D5DB0")]
	private sealed class <FadeInSeqeuence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextRevealer <>4__this;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fade>5__2;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x117D46C", Offset = "0x117D46C", VA = "0x117D46C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x117D4B4", Offset = "0x117D4B4", VA = "0x117D4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x117D330", Offset = "0x117D330", VA = "0x117D330")]
		[DebuggerHidden]
		public <FadeInSeqeuence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x117D35C", Offset = "0x117D35C", VA = "0x117D35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x117D360", Offset = "0x117D360", VA = "0x117D360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x117D474", Offset = "0x117D474", VA = "0x117D474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DC0", Offset = "0x6D5DC0")]
	private sealed class <FadeOutSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextRevealer <>4__this;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fade>5__2;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x117D600", Offset = "0x117D600", VA = "0x117D600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x117D648", Offset = "0x117D648", VA = "0x117D648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x117D4BC", Offset = "0x117D4BC", VA = "0x117D4BC")]
		[DebuggerHidden]
		public <FadeOutSequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x117D4E8", Offset = "0x117D4E8", VA = "0x117D4E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x117D4EC", Offset = "0x117D4EC", VA = "0x117D4EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x117D608", Offset = "0x117D608", VA = "0x117D608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8B74", Offset = "0x6D8B74")]
	public int numCharactersFade;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float charsPerSecond;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothSeconds;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6D8BAC", Offset = "0x6D8BAC")]
	public TMP_Text text;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent allRevealed;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent fadedOut;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string originalString;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int nRevealedCharacters;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isRevealing;

	[Token(Token = "0x170000BD")]
	public bool IsRevealing
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC5CABC", Offset = "0xC5CABC", VA = "0xC5CABC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xC5CAC4", Offset = "0xC5CAC4", VA = "0xC5CAC4")]
	public void RestartWithText(string strText)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xC5CEB8", Offset = "0xC5CEB8", VA = "0xC5CEB8")]
	public void ShowEverythingWithoutAnimation()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xC5CF1C", Offset = "0xC5CF1C", VA = "0xC5CF1C")]
	public void ShowNextParagraphWithoutAnimation()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xC5D04C", Offset = "0xC5D04C", VA = "0xC5D04C")]
	public void RevealNextParagraphAsync(float delay = 0f, bool resetPos = true)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xC5D0D4", Offset = "0xC5D0D4", VA = "0xC5D0D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DED0C", Offset = "0x6DED0C")]
	public IEnumerator RevealNextParagraph(float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xC5D024", Offset = "0xC5D024", VA = "0xC5D024")]
	public bool IsAllRevealed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xC5CBAC", Offset = "0xC5CBAC", VA = "0xC5CBAC")]
	private int GetNextParagraphEnd(int startingFrom)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xC5D15C", Offset = "0xC5D15C", VA = "0xC5D15C")]
	public void FadeInAsync()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xC5D210", Offset = "0xC5D210", VA = "0xC5D210")]
	public void FadeOutAsync()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xC5D198", Offset = "0xC5D198", VA = "0xC5D198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DED6C", Offset = "0x6DED6C")]
	public IEnumerator FadeInSeqeuence()
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xC5D24C", Offset = "0xC5D24C", VA = "0xC5D24C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEDCC", Offset = "0x6DEDCC")]
	public IEnumerator FadeOutSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xC5D2C4", Offset = "0xC5D2C4", VA = "0xC5D2C4")]
	private string BuildFadeRevealString(string original, float fadeAmt)
	{
		return null;
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xC5CC04", Offset = "0xC5CC04", VA = "0xC5CC04")]
	private string BuildPartiallyRevealedString(string original, float keyCharIndex, int minIndex, int maxIndex, int fadeLength)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xC5D414", Offset = "0xC5D414", VA = "0xC5D414")]
	public TextRevealer()
	{
	}
}
[Token(Token = "0x2000251")]
public class TravelChoicePanel : MonoBehaviour
{
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DD0", Offset = "0x6D5DD0")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScenarioCanvas sc;

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x117DD58", Offset = "0x117DD58", VA = "0x117DD58")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x117DD60", Offset = "0x117DD60", VA = "0x117DD60")]
		internal bool <Setup>b__0(string lk)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI factionName;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI desc;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI subhead;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI subTitle;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI rewards;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI timeLeft;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer[] logos;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string[] logoKey;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image border1;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject cancelButton;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MissionNode scenarioNode;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xC650A4", Offset = "0xC650A4", VA = "0xC650A4")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xC5A550", Offset = "0xC5A550", VA = "0xC5A550")]
	public void Setup(MissionNode node, bool hasCancel = true)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xC65190", Offset = "0xC65190", VA = "0xC65190")]
	public void OnClickOk()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xC65270", Offset = "0xC65270", VA = "0xC65270")]
	public void OnClickCancel()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xC65390", Offset = "0xC65390", VA = "0xC65390")]
	public TravelChoicePanel()
	{
	}
}
[Token(Token = "0x2000253")]
public class TravelChoicePanelEndless : MonoBehaviour
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text title;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text difficultyLabel;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text panelLabel;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text enemyFactionLabel;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text combatPowerNumber;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text combatPowerLabel;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text rewards;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text hazardLabel;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cancelButton;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MissionNode scenarioNode;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xC65398", Offset = "0xC65398", VA = "0xC65398")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xC65468", Offset = "0xC65468", VA = "0xC65468")]
	public void Setup(MissionNode node, int panelNumber)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xC6636C", Offset = "0xC6636C", VA = "0xC6636C")]
	public void OnClickOk()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xC6644C", Offset = "0xC6644C", VA = "0xC6644C")]
	public void OnClickCancel()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xC664D8", Offset = "0xC664D8", VA = "0xC664D8")]
	public TravelChoicePanelEndless()
	{
	}
}
[Token(Token = "0x2000254")]
public class TravelMenu : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DE0", Offset = "0x6D5DE0")]
	private sealed class <ShowMissionPopupCO>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelMenu <>4__this;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MissionStar ms;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <obj>5__2;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x117E27C", Offset = "0x117E27C", VA = "0x117E27C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x117E2C4", Offset = "0x117E2C4", VA = "0x117E2C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x117DE24", Offset = "0x117DE24", VA = "0x117DE24")]
		[DebuggerHidden]
		public <ShowMissionPopupCO>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x117DE50", Offset = "0x117DE50", VA = "0x117DE50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x117DE54", Offset = "0x117DE54", VA = "0x117DE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x117E284", Offset = "0x117E284", VA = "0x117E284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5DF0", Offset = "0x6D5DF0")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x117DDFC", Offset = "0x117DDFC", VA = "0x117DDFC")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x117DE04", Offset = "0x117DE04", VA = "0x117DE04")]
		internal void <Show>b__1(AbstractGoTween gt)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E00", Offset = "0x6D5E00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__27_0;

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x117DDE8", Offset = "0x117DDE8", VA = "0x117DDE8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x117DDF0", Offset = "0x117DDF0", VA = "0x117DDF0")]
		internal void <Show>b__27_0(GameObject x)
		{
		}
	}

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject starPrefab;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject popupPrefab;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject popupPrefabEndless;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject missionsArea;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject missionsAreaEndless;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> starObjects;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject currentPopup;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] mapRegions;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro timeLeftLabel;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro timeLeftLabelLabel;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro missionsCompletedLabel;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject krayaFleetIndicator;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LineRenderer krayaFleetLine;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 krayaFleetStart;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform terranRegion;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject storyModeMap;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject endlessModeMap;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform endlessMapStart;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform endlessMapEnd;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform endlessMapShip;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro endlessRightSideText;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isShowing;

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xC664E0", Offset = "0xC664E0", VA = "0xC664E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xC652FC", Offset = "0xC652FC", VA = "0xC652FC")]
	public void HideCurrentPopup()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xC664E4", Offset = "0xC664E4", VA = "0xC664E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xC6654C", Offset = "0xC6654C", VA = "0xC6654C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEF1C", Offset = "0x6DEF1C")]
	public IEnumerator ShowMissionPopupCO(MissionStar ms)
	{
		return null;
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xC665E0", Offset = "0xC665E0", VA = "0xC665E0")]
	public void ShowMissionPopup(MissionStar ms)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xC666CC", Offset = "0xC666CC", VA = "0xC666CC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xC6770C", Offset = "0xC6770C", VA = "0xC6770C")]
	public TravelMenu()
	{
	}
}
[Token(Token = "0x2000258")]
public class TutorialVisualHint : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public enum HintActionType
	{
		[Token(Token = "0x4000FE7")]
		NoHint,
		[Token(Token = "0x4000FE8")]
		DrawPathToPos,
		[Token(Token = "0x4000FE9")]
		DrawPathToObject,
		[Token(Token = "0x4000FEA")]
		Select,
		[Token(Token = "0x4000FEB")]
		ZoomIn,
		[Token(Token = "0x4000FEC")]
		ClickSystem,
		[Token(Token = "0x4000FED")]
		UseSystem,
		[Token(Token = "0x4000FEE")]
		SetTarget,
		[Token(Token = "0x4000FEF")]
		ZoomOut
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	public class VisualHintData
	{
		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool startObjectFlagship;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool endObjectFlagship;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject startObject;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject endObject;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 endPosition;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TutorialMissionHandler.TutorialState tutStep;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HintActionType hintActionType;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8BE4", Offset = "0x6D8BE4")]
		public string notes;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string hintText;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string hintKey;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8BFC", Offset = "0x6D8BFC")]
		public string popupGeneric;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8C14", Offset = "0x6D8C14")]
		public string popupOculus;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8C2C", Offset = "0x6D8C2C")]
		public string popupHands;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8C44", Offset = "0x6D8C44")]
		public string popupSteam;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool popupHasButton;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x117E7D0", Offset = "0x117E7D0", VA = "0x117E7D0")]
		public VisualHintData()
		{
		}
	}

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startObject;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject endObject;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 endPosition;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 startPosition;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer hintLine;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject handObject;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator handAnimator;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text hintText;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float startTime;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject handObject2;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator handAnimator2;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HintActionType currentAction;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xC6B4CC", Offset = "0xC6B4CC", VA = "0xC6B4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xC68F44", Offset = "0xC68F44", VA = "0xC68F44")]
	public void Setup(VisualHintData data)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xC6B508", Offset = "0xC6B508", VA = "0xC6B508")]
	private void ZoomAnimation(float lerpAmount)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xC6B97C", Offset = "0xC6B97C", VA = "0xC6B97C")]
	public void LeftZoomState()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xC6BA94", Offset = "0xC6BA94", VA = "0xC6BA94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xC6CF60", Offset = "0xC6CF60", VA = "0xC6CF60")]
	public TutorialVisualHint()
	{
	}
}
[Token(Token = "0x200025B")]
public enum ESHand
{
	[Token(Token = "0x4001000")]
	Left,
	[Token(Token = "0x4001001")]
	Right,
	[Token(Token = "0x4001002")]
	Other
}
[Token(Token = "0x200025C")]
public struct ESControllerState
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isConfident;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool handTrackingActive;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector2 joystickAxis;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float IndexCurl;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MiddleCurl;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float RingCurl;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PinkyCurl;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ThumbCurl;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isGripping;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isTriggering;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isMenuDown;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isButtonDown;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lastLocalPosition;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 lastWorldPosition;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 velocity;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 acceleration;
}
[Token(Token = "0x200025D")]
public abstract class HapticInterface
{
	[Token(Token = "0x6000DE9")]
	public abstract void HapticPulse(float duration, float freq, float amp);

	[Token(Token = "0x6000DEA")]
	public abstract void StopHaptics();

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xE8DEE8", Offset = "0xE8DEE8", VA = "0xE8DEE8")]
	protected HapticInterface()
	{
	}
}
[Token(Token = "0x200025E")]
public abstract class ESInputInterface : MonoBehaviour
{
	[Token(Token = "0x6000DEC")]
	public abstract void CancelAction();

	[Token(Token = "0x6000DED")]
	public abstract void DoTriggerPressedEvent(bool isPinching = false);

	[Token(Token = "0x6000DEE")]
	public abstract void DoTriggerReleasedEvent();

	[Token(Token = "0x6000DEF")]
	public abstract void OnMenuPressed();

	[Token(Token = "0x6000DF0")]
	public abstract void OnMenuReleased();

	[Token(Token = "0x6000DF1")]
	public abstract void OnGripPressed();

	[Token(Token = "0x6000DF2")]
	public abstract void OnGripReleased();

	[Token(Token = "0x6000DF3")]
	public abstract void ConnectionChanged(string _controllerName, bool _isOculus, bool _hasFingerSensing, bool _isQuest, bool _handTracking);

	[Token(Token = "0x6000DF4")]
	public abstract void OnButtonPressed();

	[Token(Token = "0x6000DF5")]
	public abstract void OnButtonReleased();

	[Token(Token = "0x6000DF6")]
	public abstract void SetState(ESControllerState _state);

	[Token(Token = "0x6000DF7")]
	public abstract ESControllerState GetState();

	[Token(Token = "0x6000DF8")]
	public abstract void SetActionDescriber(PlatformActionDescription _platformDesc);

	[Token(Token = "0x6000DF9")]
	public abstract void SetHaptics(HapticInterface h);

	[Token(Token = "0x6000DFA")]
	public abstract void SetHandRestingOrientation(Vector3 pos, Quaternion rot, Vector3 pos2, Quaternion rot2);

	[Token(Token = "0x6000DFB")]
	public abstract bool GetIsActing();

	[Token(Token = "0x6000DFC")]
	public abstract bool GetIsHovering();

	[Token(Token = "0x6000DFD")]
	public abstract bool GetCalibrationMode();

	[Token(Token = "0x6000DFE")]
	public abstract ESHand GetHand();

	[Token(Token = "0x6000DFF")]
	public abstract void SetControllerVisibility(bool b);

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x9256F0", Offset = "0x9256F0", VA = "0x9256F0")]
	protected ESInputInterface()
	{
	}
}
[Token(Token = "0x200025F")]
public class UnitGrabberController : ESInputInterface
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E10", Offset = "0x6D5E10")]
	private sealed class <HapticPulse>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitGrabberController <>4__this;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dur;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float freq;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float amp;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x117EC64", Offset = "0x117EC64", VA = "0x117EC64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x117ECAC", Offset = "0x117ECAC", VA = "0x117ECAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x117EB80", Offset = "0x117EB80", VA = "0x117EB80")]
		[DebuggerHidden]
		public <HapticPulse>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x117EBAC", Offset = "0x117EBAC", VA = "0x117EBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x117EBB0", Offset = "0x117EBB0", VA = "0x117EBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x117EC6C", Offset = "0x117EC6C", VA = "0x117EC6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E20", Offset = "0x6D5E20")]
	private sealed class <HapticPulses>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitGrabberController <>4__this;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dur;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int num;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float freq;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float amp;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float pitchSweep;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__2;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x117EEAC", Offset = "0x117EEAC", VA = "0x117EEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x117EEF4", Offset = "0x117EEF4", VA = "0x117EEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x117ECB4", Offset = "0x117ECB4", VA = "0x117ECB4")]
		[DebuggerHidden]
		public <HapticPulses>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x117ECE0", Offset = "0x117ECE0", VA = "0x117ECE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x117ECE4", Offset = "0x117ECE4", VA = "0x117ECE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x117EEB4", Offset = "0x117EEB4", VA = "0x117EEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E30", Offset = "0x6D5E30")]
	private sealed class <RandomHapticPulses>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitGrabberController <>4__this;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dur;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayMax;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int num;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float delayMin;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x117F14C", Offset = "0x117F14C", VA = "0x117F14C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x117F194", Offset = "0x117F194", VA = "0x117F194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x117EEFC", Offset = "0x117EEFC", VA = "0x117EEFC")]
		[DebuggerHidden]
		public <RandomHapticPulses>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x117EF28", Offset = "0x117EF28", VA = "0x117EF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x117EF2C", Offset = "0x117EF2C", VA = "0x117EF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x117F154", Offset = "0x117F154", VA = "0x117F154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E40", Offset = "0x6D5E40")]
	private sealed class <>c
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GrabbableObject> <>9__138_0;

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x117EAB0", Offset = "0x117EAB0", VA = "0x117EAB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x117EAB8", Offset = "0x117EAB8", VA = "0x117EAB8")]
		internal bool <CheckObjects>b__138_0(GrabbableObject o)
		{
			return default(bool);
		}
	}

	[NonSerialized]
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ESControllerState state;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gridEffect;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlatformActionDescription actionDescriber;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string controllerName;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform origin;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform vrObjectsOrigin;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject handMesh;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform handAttachments;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ESHand controllerHand;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HapticInterface haptics;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GrabbableObject> collidingObjects;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GrabbableObject activeObject;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GrabbableObject hoveringObject;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Animator handAnimator;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer handRenderer;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Renderer handRenderer_handTracking;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material[] handMaterials;

	[NonSerialized]
	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Vector3 triggerStartPos;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 normalHandPos;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Quaternion normalHandRot;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 handTargetPos;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Quaternion handTargetRot;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private SpaceBattleManager manager;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject holdingToken;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string holdingTokenHint;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public GrabbableObject tokenOwner;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 lastTickPosition;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SphereCollider secondaryCollider;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public CapsuleCollider mainCollider;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject fingerPeckSpot;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject indexBone;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject indexTipBone;

	[NonSerialized]
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public Plane gripPlane;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject handPulse;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject clickParticles;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject iconExplodeParticles;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject gripSpot;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject pickupSpot;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject pickupSpotGraphic;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Material regularMaterial;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Material highlightMaterial;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioSource humSource;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public TextMeshPro handText;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public VolumetricLineBehavior selectLine;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public ProgressArc pointProgress;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool alreadyPointed;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public bool calibrationMode;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject calibrationMarker;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private KalmanFilterVector3 smoothedLocalPos;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool grabbedWithGrip;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 avgVelocity;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 colliderNormalPos;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float speed;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public float lastSpeed;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float shakeLevel;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float shakeMax;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 lastShakePos;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Vector3 lastShakeOffs;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private Vector3 pointerOrigin;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public Vector3 pointerEnd;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private Quaternion pointerRot;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shakeThreshold;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private bool _laserSelectActive;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float pointerDebounceTime;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float pointTime;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool isOculus;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
	private bool isKnuckles;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
	private bool hasFingerSensing;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
	private bool isQuest;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float shakeUpdateTime;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float shakeUpdateLeft;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public Color glowColorOn;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public Color glowColorToken;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public Color glowColorOff;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public Color wireColorHover;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public Color wireColorHolding;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public Color wireColorDefault;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public MotionRecognizer xShake;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public MotionRecognizer yShake;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public MotionRecognizer zShake;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public HandCamScript handCam;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AudioClip[] sounds;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public UnityEvent menuPressedEvent;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private MaterialPropertyBlock propBlock;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private int _handStyle;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private GrabbableObject pointingObject;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private GameObject instructGO;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private float lastHapticsCompletedTime;

	[Token(Token = "0x170000C6")]
	public bool isDragging
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1B047A0", Offset = "0x1B047A0", VA = "0x1B047A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C7")]
	public bool isHovering
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1B04858", Offset = "0x1B04858", VA = "0x1B04858")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C8")]
	public int handStyle
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1B04A9C", Offset = "0x1B04A9C", VA = "0x1B04A9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1B048C4", Offset = "0x1B048C4", VA = "0x1B048C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	[HideInInspector]
	public bool laserSelectActive
	{
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1B04D3C", Offset = "0x1B04D3C", VA = "0x1B04D3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1B04AA4", Offset = "0x1B04AA4", VA = "0x1B04AA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x1B04D44", Offset = "0x1B04D44", VA = "0x1B04D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x1B04FCC", Offset = "0x1B04FCC", VA = "0x1B04FCC", Slot = "18")]
	public override void SetHandRestingOrientation(Vector3 pos, Quaternion rot, Vector3 pos2, Quaternion rot2)
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x1B04FD0", Offset = "0x1B04FD0", VA = "0x1B04FD0", Slot = "16")]
	public override void SetActionDescriber(PlatformActionDescription _platformDesc)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1B04FD8", Offset = "0x1B04FD8", VA = "0x1B04FD8")]
	public void ResetShake()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x1B0510C", Offset = "0x1B0510C", VA = "0x1B0510C")]
	public void ResetState()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1B05584", Offset = "0x1B05584", VA = "0x1B05584", Slot = "4")]
	public override void CancelAction()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1B05E88", Offset = "0x1B05E88", VA = "0x1B05E88", Slot = "11")]
	public override void ConnectionChanged(string _controllerName, bool _isOculus, bool _hasFingerSensing, bool _isQuest = false, bool handTracking = false)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x1B05F60", Offset = "0x1B05F60", VA = "0x1B05F60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1B05F64", Offset = "0x1B05F64", VA = "0x1B05F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1B060F8", Offset = "0x1B060F8", VA = "0x1B060F8")]
	public void StopHaptics()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1B061B0", Offset = "0x1B061B0", VA = "0x1B061B0")]
	public void TriggerHapticPulse(float dur, float freq, float amp)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x1B061DC", Offset = "0x1B061DC", VA = "0x1B061DC")]
	public void TriggerHapticPulses(float dur, float delay, int num, float freq, float amp, float pitchSweep = 0f)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x1B04CA0", Offset = "0x1B04CA0", VA = "0x1B04CA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6DEFCC", Offset = "0x6DEFCC")]
	public IEnumerator HapticPulse(float dur, float freq, float amp)
	{
		return null;
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1B06208", Offset = "0x1B06208", VA = "0x1B06208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E002C", Offset = "0x6E002C")]
	public IEnumerator HapticPulses(float dur, float delay, int num, float freq, float amp, float pitchSweep = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1B05C64", Offset = "0x1B05C64", VA = "0x1B05C64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E008C", Offset = "0x6E008C")]
	public IEnumerator RandomHapticPulses(float dur, float delayMin, float delayMax, int num)
	{
		return null;
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1B062C8", Offset = "0x1B062C8", VA = "0x1B062C8")]
	private void PointAt(GrabbableObject s, Vector3 worldPoint)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1B0662C", Offset = "0x1B0662C", VA = "0x1B0662C")]
	public Vector3 GetGlowPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1B067F4", Offset = "0x1B067F4", VA = "0x1B067F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1B06AF4", Offset = "0x1B06AF4", VA = "0x1B06AF4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1B07CC4", Offset = "0x1B07CC4", VA = "0x1B07CC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1B07DF0", Offset = "0x1B07DF0", VA = "0x1B07DF0")]
	public void AddToCollisions(GrabbableObject grabbable)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1B07EAC", Offset = "0x1B07EAC", VA = "0x1B07EAC")]
	public void ObjectDespawning(GrabbableObject g)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1B07470", Offset = "0x1B07470", VA = "0x1B07470")]
	private void updateHoveredObject()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1B0588C", Offset = "0x1B0588C", VA = "0x1B0588C")]
	public GrabbableObject NearestObject()
	{
		return null;
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1B054B4", Offset = "0x1B054B4", VA = "0x1B054B4")]
	private void SetText(string text)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1B05D10", Offset = "0x1B05D10", VA = "0x1B05D10")]
	public void DropToken()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1B0804C", Offset = "0x1B0804C", VA = "0x1B0804C")]
	public void SetTokenHolding(GameObject g, [Optional] GrabbableObject _tokenOwner, string hint = "")
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1B08400", Offset = "0x1B08400", VA = "0x1B08400")]
	public GameObject GetTokenHolding()
	{
		return null;
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1B08408", Offset = "0x1B08408", VA = "0x1B08408")]
	public void SetTokenHint(string hint)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1B08418", Offset = "0x1B08418", VA = "0x1B08418", Slot = "5")]
	public override void DoTriggerPressedEvent(bool isPinching = false)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1B08AE4", Offset = "0x1B08AE4", VA = "0x1B08AE4", Slot = "6")]
	public override void DoTriggerReleasedEvent()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1B08EFC", Offset = "0x1B08EFC", VA = "0x1B08EFC")]
	public void SetVRControllerVisiblity(bool b)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1B09020", Offset = "0x1B09020", VA = "0x1B09020", Slot = "23")]
	public override void SetControllerVisibility(bool b)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1B090C4", Offset = "0x1B090C4", VA = "0x1B090C4")]
	public void ToggleHandCamera()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1B0918C", Offset = "0x1B0918C", VA = "0x1B0918C", Slot = "7")]
	public override void OnMenuPressed()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1B0944C", Offset = "0x1B0944C", VA = "0x1B0944C", Slot = "8")]
	public override void OnMenuReleased()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1B09ACC", Offset = "0x1B09ACC", VA = "0x1B09ACC")]
	public void MakePulse(Vector3 pos)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1B09C10", Offset = "0x1B09C10", VA = "0x1B09C10", Slot = "12")]
	public override void OnButtonPressed()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1B0A204", Offset = "0x1B0A204", VA = "0x1B0A204", Slot = "13")]
	public override void OnButtonReleased()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1B07FDC", Offset = "0x1B07FDC", VA = "0x1B07FDC")]
	public bool IsHandOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1B06F30", Offset = "0x1B06F30", VA = "0x1B06F30")]
	public void CheckObjects()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1B04C4C", Offset = "0x1B04C4C", VA = "0x1B04C4C")]
	private void UpdateElectricSound()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1B0A208", Offset = "0x1B0A208", VA = "0x1B0A208", Slot = "9")]
	public override void OnGripPressed()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1B0A534", Offset = "0x1B0A534", VA = "0x1B0A534", Slot = "10")]
	public override void OnGripReleased()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1B0A6B4", Offset = "0x1B0A6B4", VA = "0x1B0A6B4", Slot = "14")]
	public override void SetState(ESControllerState _state)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1B0A7B4", Offset = "0x1B0A7B4", VA = "0x1B0A7B4", Slot = "15")]
	public override ESControllerState GetState()
	{
		return default(ESControllerState);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1B0A7C4", Offset = "0x1B0A7C4", VA = "0x1B0A7C4", Slot = "17")]
	public override void SetHaptics(HapticInterface h)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x1B0A7CC", Offset = "0x1B0A7CC", VA = "0x1B0A7CC", Slot = "19")]
	public override bool GetIsActing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1B0A7D0", Offset = "0x1B0A7D0", VA = "0x1B0A7D0", Slot = "20")]
	public override bool GetIsHovering()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1B0A7D4", Offset = "0x1B0A7D4", VA = "0x1B0A7D4")]
	public GrabbableObject GetHoveredObject()
	{
		return null;
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x1B0A7DC", Offset = "0x1B0A7DC", VA = "0x1B0A7DC", Slot = "21")]
	public override bool GetCalibrationMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x1B0A7E4", Offset = "0x1B0A7E4", VA = "0x1B0A7E4")]
	public GrabbableObject GetActiveObject()
	{
		return null;
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x1B0A7EC", Offset = "0x1B0A7EC", VA = "0x1B0A7EC")]
	public void DoHandWireframeAnim()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1B0A8D4", Offset = "0x1B0A8D4", VA = "0x1B0A8D4")]
	public void ShowTokenInstruction(string msg)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x1B0AA8C", Offset = "0x1B0AA8C", VA = "0x1B0AA8C")]
	public void RemoveTokenInstructions()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1B0AB3C", Offset = "0x1B0AB3C", VA = "0x1B0AB3C", Slot = "22")]
	public override ESHand GetHand()
	{
		return default(ESHand);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1B0AB44", Offset = "0x1B0AB44", VA = "0x1B0AB44")]
	public UnitGrabberController()
	{
	}
}
[Token(Token = "0x2000264")]
public class UnscaledTimeParticles : MonoBehaviour
{
	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particle;

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1B0C068", Offset = "0x1B0C068", VA = "0x1B0C068")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1B0C0C4", Offset = "0x1B0C0C4", VA = "0x1B0C0C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1B0C100", Offset = "0x1B0C100", VA = "0x1B0C100")]
	public UnscaledTimeParticles()
	{
	}
}
[Token(Token = "0x2000265")]
public delegate Vector3 positionDelegate();
[Token(Token = "0x2000266")]
public static class Utilities
{
	[Serializable]
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E50", Offset = "0x6D5E50")]
	private sealed class <>c__64<T>
	{
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__64<T> <>9;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T, float> <>9__64_0;

		[Token(Token = "0x6000E7F")]
		public <>c__64()
		{
		}

		[Token(Token = "0x6000E80")]
		internal float <Shuffle>b__64_0(T a)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5E60", Offset = "0x6D5E60")]
	private sealed class <>c
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, char> <>9__85_0;

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x117F200", Offset = "0x117F200", VA = "0x117F200")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x117F208", Offset = "0x117F208", VA = "0x117F208")]
		internal char <RandomString>b__85_0(string s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x4001086")]
	public const char Icon_Wrench = '\ue900';

	[Token(Token = "0x4001087")]
	public const char Icon_Check = '\ue901';

	[Token(Token = "0x4001088")]
	public const char Icon_Close = '\ue902';

	[Token(Token = "0x4001089")]
	public const char Icon_Clock = '\ue903';

	[Token(Token = "0x400108A")]
	public const char Icon_Box = '\ue904';

	[Token(Token = "0x400108B")]
	public const char Icon_Lightning = '\ue905';

	[Token(Token = "0x400108C")]
	public const char Icon_OpenHand = '\ue906';

	[Token(Token = "0x400108D")]
	public const char Icon_Emoji = '\ue907';

	[Token(Token = "0x400108E")]
	public const char Icon_Heart = '\ue908';

	[Token(Token = "0x400108F")]
	public const char Icon_InfoIcon = '\ue909';

	[Token(Token = "0x4001090")]
	public const char Icon_Location = '\ue90a';

	[Token(Token = "0x4001091")]
	public const char Icon_Locked = '\ue90b';

	[Token(Token = "0x4001092")]
	public const char Icon_Unlocked = '\ue90c';

	[Token(Token = "0x4001093")]
	public const char Icon_Ship = '\ue90d';

	[Token(Token = "0x4001094")]
	public const char Icon_Target = '\ue90e';

	[Token(Token = "0x4001095")]
	public const char Icon_Return = '\ue90f';

	[Token(Token = "0x4001096")]
	public const char Icon_Disk = '\ue910';

	[Token(Token = "0x4001097")]
	public const char Icon_Gear = '\ue911';

	[Token(Token = "0x4001098")]
	public const char Icon_Square = '\ue912';

	[Token(Token = "0x4001099")]
	public const char Icon_Star = '\ue913';

	[Token(Token = "0x400109A")]
	public const char Icon_Alert = '\ue914';

	[Token(Token = "0x400109B")]
	public const char Icon_Crown = '\ue915';

	[Token(Token = "0x400109C")]
	public const char Icon_Beaker = '\ue916';

	[Token(Token = "0x400109D")]
	public const char Icon_Diamond = '\ue917';

	[Token(Token = "0x400109E")]
	public const char Icon_ClosedHand = '\ue918';

	[Token(Token = "0x400109F")]
	public const char Icon_ClosedHandL = '\ue919';

	[Token(Token = "0x40010A0")]
	public const char Icon_ClosedHandR = '\ue91a';

	[Token(Token = "0x40010A1")]
	public const char Icon_PointClick = '\ue91b';

	[Token(Token = "0x40010A2")]
	public const char Icon_PickUp = '\ue91c';

	[Token(Token = "0x40010A3")]
	public const char Icon_Select = '\ue91d';

	[Token(Token = "0x40010A4")]
	public const char Icon_Weapon = '\ue920';

	[Token(Token = "0x40010A5")]
	public const char Icon_Special = '\ue921';

	[Token(Token = "0x40010A6")]
	public const char Icon_Large_Special = '\ue922';

	[Token(Token = "0x40010A7")]
	public const char Icon_Shield = '\ue923';

	[Token(Token = "0x40010A8")]
	public const char Icon_Hexagon = '\ue924';

	[Token(Token = "0x40010A9")]
	public const char Icon_SetTarget = '\ue925';

	[Token(Token = "0x40010AA")]
	public const char Icon_Area = '\ue926';

	[Token(Token = "0x40010AB")]
	public const char Icon_Instant = '\ue927';

	[Token(Token = "0x40010AC")]
	public const char Icon_Toggle = '\ue928';

	[Token(Token = "0x40010AD")]
	public const char Icon_Target2 = '\ue929';

	[Token(Token = "0x40010AE")]
	public const char Icon_Directional = '\ue92a';

	[Token(Token = "0x40010AF")]
	public const char Icon_Star2 = '\ue92b';

	[Token(Token = "0x40010B0")]
	public const char Icon_Div = '\ue92c';

	[Token(Token = "0x40010B1")]
	public const char Icon_Cooldown = '\ue92d';

	[Token(Token = "0x40010B2")]
	public const char Icon_Armor = '\ue92e';

	[Token(Token = "0x40010B3")]
	public const char Icon_Record = '\ue930';

	[Token(Token = "0x40010B4")]
	public const char Icon_Mic = '\ue931';

	[Token(Token = "0x40010B5")]
	public const char Icon_NoMic = '\ue932';

	[Token(Token = "0x40010B6")]
	public const char Icon_Triangle = '\ue933';

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Layer_Projectiles;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int Layer_Missile;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Layer_Ship;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Layer_Hidden;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int Layer_UI;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int standardLayerMask;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int shipsAndMissilesMask;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int shipsOnlyMask;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int laserPickerMask;

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1B0EF6C", Offset = "0x1B0EF6C", VA = "0x1B0EF6C")]
	public static Quaternion randomRotationAmount(float x, float y, float z)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1B0EFDC", Offset = "0x1B0EFDC", VA = "0x1B0EFDC")]
	public static string AddSpacesToCamel(string inStr)
	{
		return null;
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1B0F070", Offset = "0x1B0F070", VA = "0x1B0F070")]
	public static void ReplaceAllMaterials(Renderer r, Material m)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1B0F180", Offset = "0x1B0F180", VA = "0x1B0F180")]
	public static void ChangeLayersRecursively(Transform trans, int layer)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x1B0F480", Offset = "0x1B0F480", VA = "0x1B0F480")]
	public static float LinStep(float from, float to, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1B0F4C8", Offset = "0x1B0F4C8", VA = "0x1B0F4C8")]
	public static string GetGameObjectPath(Transform transform, [Optional] Transform stopParent)
	{
		return null;
	}

	[Token(Token = "0x6000E63")]
	public static IOrderedEnumerable<T> Shuffle<T>(IEnumerable<T> list)
	{
		return null;
	}

	[Token(Token = "0x6000E64")]
	public static void Shuffle<T>(IList<T> list)
	{
	}

	[Token(Token = "0x6000E65")]
	public static T PickOneRandom<T>(List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E66")]
	public static T PickOneRandom<T>(T[] list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E67")]
	public static T PickOneRandomWeighted<T>(T[] list, float[] weights)
	{
		return (T)null;
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x1B0F604", Offset = "0x1B0F604", VA = "0x1B0F604")]
	public static float smoothstep(float edge0, float edge1, float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000E69")]
	public static List<T> PickNRandom<T>(List<T> list, int n)
	{
		return null;
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1B0F63C", Offset = "0x1B0F63C", VA = "0x1B0F63C")]
	public static float ModifierToOctave(float m)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1B0F640", Offset = "0x1B0F640", VA = "0x1B0F640")]
	public static float PercentToMultiplier(float m)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1B0F668", Offset = "0x1B0F668", VA = "0x1B0F668")]
	public static string PlusOrMinusString(float v)
	{
		return null;
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1B0F6D4", Offset = "0x1B0F6D4", VA = "0x1B0F6D4")]
	public static Vector3 LerpTo2DPlane(Transform orientation, Vector3 worldPoint, float amount)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1B0F720", Offset = "0x1B0F720", VA = "0x1B0F720")]
	public static object GenericLerp(object current, object objA, object objB, float t)
	{
		return null;
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1B0F8D8", Offset = "0x1B0F8D8", VA = "0x1B0F8D8")]
	public static int FindClosestPoint(Vector3[] pts, Vector3 target)
	{
		return default(int);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1B0F99C", Offset = "0x1B0F99C", VA = "0x1B0F99C")]
	public static void FacePlayer(GameObject g, Vector3 offsetAngles)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x1B0FB14", Offset = "0x1B0FB14", VA = "0x1B0FB14")]
	public static Vector3 RandomUnitSphereEllipse(float flatness = 0.25f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1B0FB60", Offset = "0x1B0FB60", VA = "0x1B0FB60")]
	public static Vector3 getRelativePosition(Transform t, Transform targetSpace)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x1B0FB98", Offset = "0x1B0FB98", VA = "0x1B0FB98")]
	public static SpaceUnit FindSpaceUnitOfCollider(GameObject c)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x1B0FC64", Offset = "0x1B0FC64", VA = "0x1B0FC64")]
	public static void SpaceColliders(GameObject g)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x1B101C0", Offset = "0x1B101C0", VA = "0x1B101C0")]
	public static void SpaceRenderers(GameObject g, int iterations = 3, float rate = 0.6f)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1B10740", Offset = "0x1B10740", VA = "0x1B10740")]
	public static void DespawnChildrenOfTransform(Transform t)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1B10838", Offset = "0x1B10838", VA = "0x1B10838")]
	public static void IgnoreCollisions(GameObject goA, GameObject goB)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x1B1097C", Offset = "0x1B1097C", VA = "0x1B1097C")]
	public static string RandomString(int length)
	{
		return null;
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1B10B0C", Offset = "0x1B10B0C", VA = "0x1B10B0C")]
	public static string RemoveSpecialCharacters(string str)
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1B10C04", Offset = "0x1B10C04", VA = "0x1B10C04")]
	public static float RandomGaussian(float minValue = 0f, float maxValue = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1B10CC8", Offset = "0x1B10CC8", VA = "0x1B10CC8")]
	public static void DebugObject(object o)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1B10D44", Offset = "0x1B10D44", VA = "0x1B10D44")]
	private static string GetCommandLineArg(string name)
	{
		return null;
	}
}
[Token(Token = "0x2000269")]
public struct ShipCollision
{
	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SpaceUnit ship;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 pt;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float distance;
}
[Token(Token = "0x200026A")]
public static class LevenshteinDistance
{
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xE75DF8", Offset = "0xE75DF8", VA = "0xE75DF8")]
	public static int Calculate(string source1, string source2)
	{
		return default(int);
	}
}
[Token(Token = "0x200026B")]
public class ViewScreenHandler : MonoBehaviour
{
	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float viewScreenAnim;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float viewScreenAnimTarget;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool flashFlip;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material viewScreenMat;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isCurrentlyAnimating;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 mainScreenScale;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 closedScale;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro caption;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro fullText;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro speakerInfoText;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mainScreen;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject screenCamera;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject speakersRoot;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform notificationAnchor;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string currentText;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string writtenText;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentStartIndex;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool initialized;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool _screenShown;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GoTweenChain showAnimation;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextRevealer textRevealer;

	[Token(Token = "0x170000D0")]
	public bool isScreenShown
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1B140FC", Offset = "0x1B140FC", VA = "0x1B140FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1B14104", Offset = "0x1B14104", VA = "0x1B14104")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1B141A0", Offset = "0x1B141A0", VA = "0x1B141A0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1B145FC", Offset = "0x1B145FC", VA = "0x1B145FC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1B148D4", Offset = "0x1B148D4", VA = "0x1B148D4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1B14CD4", Offset = "0x1B14CD4", VA = "0x1B14CD4")]
	public void SetGlitchLevel(float v)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1B14D3C", Offset = "0x1B14D3C", VA = "0x1B14D3C")]
	public void SpeakerIn()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x1B1479C", Offset = "0x1B1479C", VA = "0x1B1479C")]
	public void SpeakerOut()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1B14E68", Offset = "0x1B14E68", VA = "0x1B14E68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x1B14F10", Offset = "0x1B14F10", VA = "0x1B14F10")]
	public void AnimateText(string str)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1B14F7C", Offset = "0x1B14F7C", VA = "0x1B14F7C")]
	public void StopText()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x1B14F98", Offset = "0x1B14F98", VA = "0x1B14F98")]
	public bool SkipTextAhead()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1B15004", Offset = "0x1B15004", VA = "0x1B15004")]
	public bool IsTextDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1B15020", Offset = "0x1B15020", VA = "0x1B15020")]
	public ViewScreenHandler()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1B150B4", Offset = "0x1B150B4", VA = "0x1B150B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E01DC", Offset = "0x6E01DC")]
	private void <Init>b__24_0(AbstractGoTween c)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x1B150C0", Offset = "0x1B150C0", VA = "0x1B150C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E01EC", Offset = "0x6E01EC")]
	private void <Init>b__24_1(AbstractGoTween c)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1B150C8", Offset = "0x1B150C8", VA = "0x1B150C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E01FC", Offset = "0x6E01FC")]
	private void <Hide>b__25_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x200026C")]
public class ViveportCreds
{
	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string APP_ID;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string APP_KEY;

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x1B15794", Offset = "0x1B15794", VA = "0x1B15794")]
	public ViveportCreds()
	{
	}
}
[Token(Token = "0x200026D")]
public class ES_VoiceHandler : MonoBehaviour
{
	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text transcription;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text statusLabel;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material eqMaterial;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material shipAIMaterial;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShipHandMenu shipHandMenu;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AppVoiceExperience voiceExperience;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float confidenceThreshold;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float userVoiceLevel;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float shipVoiceLevel;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float shipSpeakingTime;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool lastCommandValid;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color eyeNormalColor;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color eyeInvalidColor;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color eyeValidColor;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color commandLineGreen;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color commandLineRed;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject uiMain;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject reEnableVoiceButton;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool isRecordingActive;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<SpaceUnit> lastCommandSourceShips;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpaceUnit lastCommandTargetShip;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string lastCommandType;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LineRenderer commandLine;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject hintPopup;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8C9C", Offset = "0x6D8C9C")]
	public string voiceBattleHelpText;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8CB4", Offset = "0x6D8CB4")]
	public string voiceBridgeHelpText;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Dictionary<string, string> numberWords;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<string> battleCommandWords;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<string> bridgeCommandWords;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<string> repairTargets;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<string> armorDirectionTargets;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<string> colorWords;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<string> screenNames;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool didEarlyDetect;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string earlyDetectString;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool showingHint;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public StringListSO hints;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int currentHint;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float lastTranscriptionTime;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _voiceToggled;

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9293E4", Offset = "0x9293E4", VA = "0x9293E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9293E8", Offset = "0x9293E8", VA = "0x9293E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x929608", Offset = "0x929608", VA = "0x929608")]
	public void OnTranscription(string text)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9297FC", Offset = "0x9297FC", VA = "0x9297FC")]
	public void OnFullTranscription(string text)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x929824", Offset = "0x929824", VA = "0x929824")]
	public bool IsSpeaking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x92985C", Offset = "0x92985C", VA = "0x92985C")]
	public List<string> GetWhitelistedWords(string[] words, List<string> whitelist)
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x929984", Offset = "0x929984", VA = "0x929984")]
	public string FindDesignation(string[] words, int startIndex, int endIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x929D54", Offset = "0x929D54", VA = "0x929D54")]
	public string FindSystemTarget(string[] words, int startIndex, int endIndex)
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x929E80", Offset = "0x929E80", VA = "0x929E80")]
	public string FindUpgradeType_Bridge(string[] words, int startIndex, int endIndex)
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x92A0B4", Offset = "0x92A0B4", VA = "0x92A0B4")]
	public void ShowHint()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x929714", Offset = "0x929714", VA = "0x929714")]
	public void AttemptParseTranscription(string text)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x92B40C", Offset = "0x92B40C", VA = "0x92B40C")]
	public void CleanUpWordsList(ref string[] words)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x92B5D8", Offset = "0x92B5D8", VA = "0x92B5D8")]
	public ManagementUI GetManagementUI()
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x92A780", Offset = "0x92A780", VA = "0x92A780")]
	public void AttemptParseTranscription_Bridge(string text)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x92A190", Offset = "0x92A190", VA = "0x92A190")]
	public void AttemptParseTranscription_Battle(string text)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x92BF24", Offset = "0x92BF24", VA = "0x92BF24")]
	public void AttackCommand(string ship1Designation, string ship2Designation)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x92CC8C", Offset = "0x92CC8C", VA = "0x92CC8C")]
	public List<SpaceUnit> GetShipList(string shipDesignation)
	{
		return null;
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x92CF0C", Offset = "0x92CF0C", VA = "0x92CF0C")]
	public void MoveCommand(string ship1Designation)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x92C40C", Offset = "0x92C40C", VA = "0x92C40C")]
	public void DefendCommand(string ship1Designation, string ship2Designation)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x92B9D4", Offset = "0x92B9D4", VA = "0x92B9D4")]
	public void TargetSystemCommand(string friendlyShipDesignation, string enemyDesignation, string systemString)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x92CA70", Offset = "0x92CA70", VA = "0x92CA70")]
	public void RetreatCommand(string ship1Designation)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x92D34C", Offset = "0x92D34C", VA = "0x92D34C")]
	public void SelfDestructCommand(string ship1Designation = "flagship")
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x92D568", Offset = "0x92D568", VA = "0x92D568")]
	public void AbortSelfDestructCommand(string ship1Designation = "flagship")
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x92D6D4", Offset = "0x92D6D4", VA = "0x92D6D4")]
	public void DeployItemCommand(string ship1Designation, string itemString, string targetShipDesignation = "")
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x92E320", Offset = "0x92E320", VA = "0x92E320")]
	public void ShowShipCommand_Battle(string ship1Designation)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x92E498", Offset = "0x92E498", VA = "0x92E498")]
	public void ShowShipCommand_Bridge(string ship1Designation, string screenName = "equipment")
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x92E6E4", Offset = "0x92E6E4", VA = "0x92E6E4")]
	public void ShowScreenCommand_Bridge(string screenName)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x92E9D8", Offset = "0x92E9D8", VA = "0x92E9D8")]
	public void OnResponse(WitResponseNode response)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x92B6A4", Offset = "0x92B6A4", VA = "0x92B6A4")]
	public void CommandValid(string commandType = "", string message = "COMMAND ACCEPTED", [Optional] List<SpaceUnit> sourceShips, [Optional] SpaceUnit targetShip)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x92B850", Offset = "0x92B850", VA = "0x92B850")]
	public void CommandInvalid(string reason)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x92FDA4", Offset = "0x92FDA4", VA = "0x92FDA4")]
	public void OnStart()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x92FDB4", Offset = "0x92FDB4", VA = "0x92FDB4")]
	public void OnStop()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x92FDBC", Offset = "0x92FDBC", VA = "0x92FDBC")]
	public void OnError(string error, string message)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x92FDC0", Offset = "0x92FDC0", VA = "0x92FDC0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x93002C", Offset = "0x93002C", VA = "0x93002C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x9293EC", Offset = "0x9293EC", VA = "0x9293EC")]
	private void UpdateVoiceVisibility()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x930590", Offset = "0x930590", VA = "0x930590")]
	public void OnShow()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x930594", Offset = "0x930594", VA = "0x930594")]
	public void OnHide()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x930638", Offset = "0x930638", VA = "0x930638")]
	public void ToggleVoiceActive()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x9306D4", Offset = "0x9306D4", VA = "0x9306D4")]
	public void ShowNextHint()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x92FBD4", Offset = "0x92FBD4", VA = "0x92FBD4")]
	public void ShowHelp()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x9306D8", Offset = "0x9306D8", VA = "0x9306D8")]
	public void OnMicrophoneWake()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x9306E8", Offset = "0x9306E8", VA = "0x9306E8")]
	public ES_VoiceHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x200026E")]
public class VoiceOverClip
{
	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string keyName;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audio;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string captionText;

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x9F3098", Offset = "0x9F3098", VA = "0x9F3098")]
	public VoiceOverClip()
	{
	}
}
[Token(Token = "0x200026F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5E70", Offset = "0x6D5E70")]
public class VoiceOverList : ScriptableObject
{
	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizationManager.Languages lang;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VoiceOverClip[] voiceOvers;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ttsSpeakerName;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ttsLanguage;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool applyFX;

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x9F3118", Offset = "0x9F3118", VA = "0x9F3118")]
	public VoiceOverList()
	{
	}
}
[Token(Token = "0x2000270")]
public class WavefrontDamage : MonoBehaviour
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float finalSize;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float colorRange;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lifeTime;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float t;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AreaDamage areaDamage;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _matInstance;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialized;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool triggeredSound;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip whooshNoise;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform playerHead;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh wavefrontOutsideMesh;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh wavefrontInsideMesh;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshFilter wavefrontMeshFilter;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x9F6A88", Offset = "0x9F6A88", VA = "0x9F6A88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x9F6CB4", Offset = "0x9F6CB4", VA = "0x9F6CB4")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x9F6DD8", Offset = "0x9F6DD8", VA = "0x9F6DD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x9F7220", Offset = "0x9F7220", VA = "0x9F7220")]
	public WavefrontDamage()
	{
	}
}
[Token(Token = "0x2000271")]
public class WavefrontIntro : MonoBehaviour
{
	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float finalSize;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float colorRange;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lifeTime;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float t;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AreaDamage areaDamage;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _matInstance;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialized;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool triggeredSound;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Light expLight;

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x9F723C", Offset = "0x9F723C", VA = "0x9F723C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x9F7314", Offset = "0x9F7314", VA = "0x9F7314")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x9F73C4", Offset = "0x9F73C4", VA = "0x9F73C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x9F7574", Offset = "0x9F7574", VA = "0x9F7574")]
	public WavefrontIntro()
	{
	}
}
[Token(Token = "0x2000272")]
public class WireframeShaderController : MonoBehaviour
{
	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x9F7720", Offset = "0x9F7720", VA = "0x9F7720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x9F77F4", Offset = "0x9F77F4", VA = "0x9F77F4")]
	public void TriggerForward()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x9F7904", Offset = "0x9F7904", VA = "0x9F7904")]
	public void TriggerBackward()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x9F7A14", Offset = "0x9F7A14", VA = "0x9F7A14")]
	public WireframeShaderController()
	{
	}
}
[Token(Token = "0x2000273")]
public class AssignMeshesToParticles : MonoBehaviour
{
	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particles;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xCCACDC", Offset = "0xCCACDC", VA = "0xCCACDC")]
	public void Setup(Mesh m)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xCCAD6C", Offset = "0xCCAD6C", VA = "0xCCAD6C")]
	public AssignMeshesToParticles()
	{
	}
}
[Token(Token = "0x2000274")]
public class AssignTeam : MonoBehaviour
{
	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int team;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string designation;

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xCCAD74", Offset = "0xCCAD74", VA = "0xCCAD74")]
	public void Start()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xCCAEBC", Offset = "0xCCAEBC", VA = "0xCCAEBC")]
	public AssignTeam()
	{
	}
}
[Token(Token = "0x2000275")]
public class AutoBob : MonoBehaviour
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xB59F50", Offset = "0xB59F50", VA = "0xB59F50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xB59F8C", Offset = "0xB59F8C", VA = "0xB59F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xB5A00C", Offset = "0xB5A00C", VA = "0xB5A00C")]
	public AutoBob()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5EB4", Offset = "0x6D5EB4")]
public class BuildinfoSO : ScriptableObject
{
	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSystemManager.VRSDKS currentSDK;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public int versionNum;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int majorVersionNum;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string buildVersion;

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xB6C048", Offset = "0xB6C048", VA = "0xB6C048")]
	public BuildinfoSO()
	{
	}
}
[Token(Token = "0x2000277")]
public class CamAnimController : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] pathPositions;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] pathScales;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float animationTime;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float animationDelay;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startTime;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float pathPower;

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xB6D4DC", Offset = "0xB6D4DC", VA = "0xB6D4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xB6D5AC", Offset = "0xB6D5AC", VA = "0xB6D5AC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xB6D6E0", Offset = "0xB6D6E0", VA = "0xB6D6E0")]
	private float easeInOutQuad(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xB6D718", Offset = "0xB6D718", VA = "0xB6D718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xB6D924", Offset = "0xB6D924", VA = "0xB6D924")]
	public CamAnimController()
	{
	}
}
[Token(Token = "0x2000278")]
public class CollectibleSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D5F14", Offset = "0x6D5F14")]
	private sealed class <>c
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__12_0;

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x9FD950", Offset = "0x9FD950", VA = "0x9FD950")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x9FD958", Offset = "0x9FD958", VA = "0x9FD958")]
		internal bool <CheckChildren>b__12_0(GameObject o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject appearEffect;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string towTargetOverride;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numToSpawn;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int spawnLeft;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float spawnRadius;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool missionGoal;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> children;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float thinkTimeLeft;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD876DC", Offset = "0xD876DC", VA = "0xD876DC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD87758", Offset = "0xD87758", VA = "0xD87758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD8775C", Offset = "0xD8775C", VA = "0xD8775C")]
	private void ClearChildren()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD877D4", Offset = "0xD877D4", VA = "0xD877D4")]
	private void CheckChildren()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD87900", Offset = "0xD87900", VA = "0xD87900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD87C78", Offset = "0xD87C78", VA = "0xD87C78")]
	public CollectibleSpawner()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5F24", Offset = "0x6D5F24")]
public class ControllerOffset : ScriptableObject
{
	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string controllerName;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] aliases;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 positionOffset;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ESHand hand;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD8897C", Offset = "0xD8897C", VA = "0xD8897C")]
	public ControllerOffset()
	{
	}
}
[Token(Token = "0x200027B")]
public class DerelictSpawner : MonoBehaviour
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shipToSpawn;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpaceUnit ship;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string scenarioKeyName;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string textKey;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numMessages;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8CFC", Offset = "0x6D8CFC")]
	public string[] scannedMessages;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x91B708", Offset = "0x91B708", VA = "0x91B708")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x91B70C", Offset = "0x91B70C", VA = "0x91B70C")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x91BB58", Offset = "0x91BB58", VA = "0x91BB58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x91BCC4", Offset = "0x91BCC4", VA = "0x91BCC4")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x91BDF8", Offset = "0x91BDF8", VA = "0x91BDF8")]
	public DerelictSpawner()
	{
	}
}
[Token(Token = "0x200027C")]
public class DroneCam : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200027D")]
	public class DroneCamPerspective
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool showHead;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fov;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool angleDown;

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x9FEAD4", Offset = "0x9FEAD4", VA = "0x9FEAD4")]
		public DroneCamPerspective()
		{
		}
	}

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject head;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject headVisual;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentPerspective;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] hands;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float moveThreshold;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float interactionRange;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotLerpFactor;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float posLerpFactor;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 offset;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3[] perspectives;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DroneCamPerspective[] camPerspectives;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject lockToObject;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool closeupMode;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 targetPos;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lookTarget;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool angleDown;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float camFov;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool frozen;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool isPressingKey;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x921EF4", Offset = "0x921EF4", VA = "0x921EF4")]
	public void ChangePerspective()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x921FA8", Offset = "0x921FA8", VA = "0x921FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x922064", Offset = "0x922064", VA = "0x922064")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x9227A4", Offset = "0x9227A4", VA = "0x9227A4")]
	public DroneCam()
	{
	}
}
[Token(Token = "0x200027E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D5F68", Offset = "0x6D5F68")]
public class ESColorSettingsSO : ScriptableObject
{
	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color redColor;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color blueColor;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color greenColor;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color yellowColor;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color greyColor;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color purpleColor;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color lighterBlueColor;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color lighterYellowColor;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color lighterPurpleColor;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material selection1Material;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material selection2Material;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material selection3Material;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material selection4Material;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material selection5Material;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material selection6Material;

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x9256E8", Offset = "0x9256E8", VA = "0x9256E8")]
	public ESColorSettingsSO()
	{
	}
}
[Token(Token = "0x200027F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D5FC8", Offset = "0x6D5FC8")]
[DisallowMultipleComponent]
public class ESTrailController : MonoBehaviour
{
	[Token(Token = "0x4001173")]
	private const int PointArraySize = 8;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4[] points;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh trailMesh;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material trailMaterial;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pointDelay;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float nextPointTime;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minDistance;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 lastPointPosition;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 lastPosition;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float trailFadePoint;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Queue<Vector3> history;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] historyArr;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Width;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float Hue;

	[NonSerialized]
	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float TotalLength;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float TextureOffset;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isInstanced;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isMoving;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool _isTrailActive;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MeshRenderer myRenderer;

	[NonSerialized]
	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Matrix4x4 pointsMat1;

	[NonSerialized]
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Matrix4x4 pointsMat2;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MaterialPropertyBlock matBlock;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float collapseAmt;

	[Token(Token = "0x170000D1")]
	public bool isInstanced
	{
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x925738", Offset = "0x925738", VA = "0x925738")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x925708", Offset = "0x925708", VA = "0x925708")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public bool isTrailActive
	{
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x9258A4", Offset = "0x9258A4", VA = "0x9258A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x925740", Offset = "0x925740", VA = "0x925740")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x9258AC", Offset = "0x9258AC", VA = "0x9258AC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x925BE0", Offset = "0x925BE0", VA = "0x925BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x925754", Offset = "0x925754", VA = "0x925754")]
	public void ResetTrail()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x9258B0", Offset = "0x9258B0", VA = "0x9258B0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x925BE4", Offset = "0x925BE4", VA = "0x925BE4")]
	private Vector3 CatmullRom(float u, Vector3 x0, Vector3 x1, Vector3 x2, Vector3 x3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x925CDC", Offset = "0x925CDC", VA = "0x925CDC")]
	private Vector3 GetHistoryFrame(int f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x925D70", Offset = "0x925D70", VA = "0x925D70")]
	private Vector3 HistoryInterpolate(float frame)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x925E9C", Offset = "0x925E9C", VA = "0x925E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x926550", Offset = "0x926550", VA = "0x926550")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x926554", Offset = "0x926554", VA = "0x926554")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6E020C", Offset = "0x6E020C")]
	private void SetShaderPoints()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x9267E4", Offset = "0x9267E4", VA = "0x9267E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6E0244", Offset = "0x6E0244")]
	private void InitPoints()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x9268EC", Offset = "0x9268EC", VA = "0x9268EC")]
	public ESTrailController()
	{
	}
}
[Token(Token = "0x2000280")]
public class EnableMeshInstancing : MonoBehaviour
{
	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultColor;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshGroupInstancer.MeshInfo _meshInfo;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isRegistered;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xB448F4", Offset = "0xB448F4", VA = "0xB448F4")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xB44A0C", Offset = "0xB44A0C", VA = "0xB44A0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xB44AA4", Offset = "0xB44AA4", VA = "0xB44AA4")]
	public EnableMeshInstancing()
	{
	}
}
[Token(Token = "0x2000281")]
public class EngineFlareController : MonoBehaviour
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float engineLevel;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerHead;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer exhaustLine;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem glow;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color engineColor;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xB4ADF8", Offset = "0xB4ADF8", VA = "0xB4ADF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xB4AE74", Offset = "0xB4AE74", VA = "0xB4AE74")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xB4AE78", Offset = "0xB4AE78", VA = "0xB4AE78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xB4B1BC", Offset = "0xB4B1BC", VA = "0xB4B1BC")]
	public EngineFlareController()
	{
	}
}
[Token(Token = "0x2000282")]
public class EyeController : MonoBehaviour
{
	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject eyeForward;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] eyes;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mainTarget;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] otherTargets;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxAngle;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float RejectAngle;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float RVal;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _currentTarget;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool eyeDirIsUp;

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xB4BBF8", Offset = "0xB4BBF8", VA = "0xB4BBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xB4C0CC", Offset = "0xB4C0CC", VA = "0xB4C0CC")]
	public EyeController()
	{
	}
}
[Token(Token = "0x2000283")]
public class GenericTextureCapturer : MonoBehaviour
{
	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture rt;

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xB543D4", Offset = "0xB543D4", VA = "0xB543D4")]
	public static string ScreenShotName()
	{
		return null;
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xB5449C", Offset = "0xB5449C", VA = "0xB5449C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xB544A0", Offset = "0xB544A0", VA = "0xB544A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xB546D0", Offset = "0xB546D0", VA = "0xB546D0")]
	public GenericTextureCapturer()
	{
	}
}
[Token(Token = "0x2000284")]
public class GridFollowCam : MonoBehaviour
{
	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mainCamT;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer r;

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xE841C0", Offset = "0xE841C0", VA = "0xE841C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xE84290", Offset = "0xE84290", VA = "0xE84290")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xE84398", Offset = "0xE84398", VA = "0xE84398")]
	public GridFollowCam()
	{
	}
}
[Token(Token = "0x2000285")]
public class HandCamScript : MonoBehaviour
{
	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture rt;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera handCam;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera backCam;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool takeHiResShot;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture backgroundRt;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D backgroundTex;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion initialRotation;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 initialPos;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 initialScale;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform initialParent;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xE85260", Offset = "0xE85260", VA = "0xE85260")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xE85300", Offset = "0xE85300", VA = "0xE85300")]
	public void Detach()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xE853A8", Offset = "0xE853A8", VA = "0xE853A8")]
	public bool IsAttached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xE85438", Offset = "0xE85438", VA = "0xE85438")]
	public void Attach()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xE854D0", Offset = "0xE854D0", VA = "0xE854D0")]
	public void ToggleAttached()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xE85508", Offset = "0xE85508", VA = "0xE85508")]
	public void HeadcamVisMode()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xE856D0", Offset = "0xE856D0", VA = "0xE856D0")]
	public static string ScreenShotName()
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xE85798", Offset = "0xE85798", VA = "0xE85798")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xE857BC", Offset = "0xE857BC", VA = "0xE857BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xE858E0", Offset = "0xE858E0", VA = "0xE858E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xE8597C", Offset = "0xE8597C", VA = "0xE8597C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xE85980", Offset = "0xE85980", VA = "0xE85980")]
	public HandCamScript()
	{
	}
}
[Token(Token = "0x2000286")]
public class IntroExplodeObject : MonoBehaviour
{
	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosion;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float enableParticlesDelay;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] particleSystems;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xCAD0C4", Offset = "0xCAD0C4", VA = "0xCAD0C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xCAD19C", Offset = "0xCAD19C", VA = "0xCAD19C")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xCAD2C0", Offset = "0xCAD2C0", VA = "0xCAD2C0")]
	private void BeginExploding()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xCAD3C0", Offset = "0xCAD3C0", VA = "0xCAD3C0")]
	private void ExplosionOff()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCAD3E0", Offset = "0xCAD3E0", VA = "0xCAD3E0")]
	public IntroExplodeObject()
	{
	}
}
[Token(Token = "0x2000287")]
public class IntroLase : MonoBehaviour
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VolumetricLineBehavior laser;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform originPos;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetPos;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material beamMaterial;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float beamTime;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color beamColor;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lineWidth;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float minSaberFactor;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Light startLight;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light endLight;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject explosion;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VolumetricLineBehavior line;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool initialized;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float intensity;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float endLightIntensity;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float startDelay;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource beamSource;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCAD3F4", Offset = "0xCAD3F4", VA = "0xCAD3F4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCAD638", Offset = "0xCAD638", VA = "0xCAD638")]
	public void StartBeam()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCAD564", Offset = "0xCAD564", VA = "0xCAD564")]
	private void TweenSaberIntensity(float val)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xCAD59C", Offset = "0xCAD59C", VA = "0xCAD59C")]
	private void TweenLaserIntensity(float val)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xCAD660", Offset = "0xCAD660", VA = "0xCAD660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xCAD904", Offset = "0xCAD904", VA = "0xCAD904")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xCAD908", Offset = "0xCAD908", VA = "0xCAD908")]
	public IntroLase()
	{
	}
}
[Token(Token = "0x2000288")]
public class IntroPosRewinder : MonoBehaviour
{
	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPos;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRot;

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xCAD924", Offset = "0xCAD924", VA = "0xCAD924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xCAD980", Offset = "0xCAD980", VA = "0xCAD980")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xCAD9D8", Offset = "0xCAD9D8", VA = "0xCAD9D8")]
	public IntroPosRewinder()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6048", Offset = "0x6D6048")]
public class ItemList : ScriptableObject
{
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D608C", Offset = "0x6D608C")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x9325A4", Offset = "0x9325A4", VA = "0x9325A4")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x9325AC", Offset = "0x9325AC", VA = "0x9325AC")]
		internal bool <GetItemByName>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> items;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isInstantiated;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xE62340", Offset = "0xE62340", VA = "0xE62340")]
	public static ItemList CreateEmpty()
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xE623EC", Offset = "0xE623EC", VA = "0xE623EC")]
	public ItemList Instantiate()
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xE62704", Offset = "0xE62704", VA = "0xE62704")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xE628B0", Offset = "0xE628B0", VA = "0xE628B0")]
	public GameObject GetItemByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xE629AC", Offset = "0xE629AC", VA = "0xE629AC")]
	public GameObject GetRandomItem()
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xE62C34", Offset = "0xE62C34", VA = "0xE62C34")]
	public string[] GetAsStringArray()
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xE62D8C", Offset = "0xE62D8C", VA = "0xE62D8C")]
	public static ItemList FromStringArray(ItemList allItems, string[] stringItems, bool _instantiate = true)
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xE63158", Offset = "0xE63158", VA = "0xE63158")]
	public ItemList()
	{
	}
}
[Token(Token = "0x200028B")]
public class KalmanFilterVector3
{
	[Token(Token = "0x40011C4")]
	public const float DEFAULT_Q = 1E-06f;

	[Token(Token = "0x40011C5")]
	public const float DEFAULT_R = 0.01f;

	[Token(Token = "0x40011C6")]
	public const float DEFAULT_P = 1f;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float q;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float r;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float p;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 x;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float k;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xE747A0", Offset = "0xE747A0", VA = "0xE747A0")]
	public KalmanFilterVector3()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xE747D8", Offset = "0xE747D8", VA = "0xE747D8")]
	public KalmanFilterVector3(float aQ = 1E-06f, float aR = 0.01f)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xE74818", Offset = "0xE74818", VA = "0xE74818")]
	public Vector3 Update(Vector3 measurement, [Optional] float? newQ, [Optional] float? newR)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xE7496C", Offset = "0xE7496C", VA = "0xE7496C")]
	public Vector3 Update(List<Vector3> measurements, bool areMeasurementsNewestFirst = false, [Optional] float? newQ, [Optional] float? newR)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xE74A6C", Offset = "0xE74A6C", VA = "0xE74A6C")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200028C")]
public class LightsController : MonoBehaviour
{
	[Token(Token = "0x200028D")]
	public enum LightPatterns
	{
		[Token(Token = "0x40011D6")]
		Steady,
		[Token(Token = "0x40011D7")]
		SlowPulse,
		[Token(Token = "0x40011D8")]
		Blinking
	}

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light[] lights;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color targetColor;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float changeRate;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] lightColors;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource blinkNoise;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material bridgeMat;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightPatterns currentPattern;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float pulseRate;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float startTime;

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x9BC83C", Offset = "0x9BC83C", VA = "0x9BC83C")]
	public void Setup(int colorIndex, int pattern, float rate)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x9BC840", Offset = "0x9BC840", VA = "0x9BC840")]
	private void PlayAlarm()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x9BC844", Offset = "0x9BC844", VA = "0x9BC844")]
	public LightsController()
	{
	}
}
[Token(Token = "0x200028E")]
public class MaterialFadeIn : MonoBehaviour
{
	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material materialToFade;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fadeStart;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeTime;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string propName;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8D14", Offset = "0x6D8D14")]
	public Color startColor;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6D8D3C", Offset = "0x6D8D3C")]
	public Color endColor;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delay;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x9C726C", Offset = "0x9C726C", VA = "0x9C726C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x9C7270", Offset = "0x9C7270", VA = "0x9C7270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x9C7274", Offset = "0x9C7274", VA = "0x9C7274")]
	private void StartAnim()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x9C72C0", Offset = "0x9C72C0", VA = "0x9C72C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x9C7384", Offset = "0x9C7384", VA = "0x9C7384")]
	public MaterialFadeIn()
	{
	}
}
[Token(Token = "0x200028F")]
public class MenuDebugMissions : MonoBehaviour
{
	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionList missions;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScenarioCanvas correctStartingMission;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool endlessMode;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ScenarioCanvas> allMissions;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject optionButtonPrefab;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas canvasArea;

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x9CA2D8", Offset = "0x9CA2D8", VA = "0x9CA2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x9CA534", Offset = "0x9CA534", VA = "0x9CA534")]
	public void CreateMenu()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x9CA968", Offset = "0x9CA968", VA = "0x9CA968")]
	public void ClickedOption(int id)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x9CAC24", Offset = "0x9CAC24", VA = "0x9CAC24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x9CAC28", Offset = "0x9CAC28", VA = "0x9CAC28")]
	public MenuDebugMissions()
	{
	}
}
[Token(Token = "0x2000290")]
public class MenuDebugThings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D609C", Offset = "0x6D609C")]
	private sealed class <>c
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, string> <>9__8_0;

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x9356CC", Offset = "0x9356CC", VA = "0x9356CC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x9356D4", Offset = "0x9356D4", VA = "0x9356D4")]
		internal string <DebugAllItems>b__8_0(GameObject item)
		{
			return null;
		}
	}

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemList allItemsList;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemList allItemsInstantiated;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShipList allShips;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject itemDebugArea;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool itemsWereCreated;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool shipsWereCreated;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x9CAC30", Offset = "0x9CAC30", VA = "0x9CAC30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x9CAC34", Offset = "0x9CAC34", VA = "0x9CAC34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x9CACC4", Offset = "0x9CACC4", VA = "0x9CACC4")]
	public void DebugAllItems()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x9CAC38", Offset = "0x9CAC38", VA = "0x9CAC38")]
	public void ClearAllItems()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x9CB968", Offset = "0x9CB968", VA = "0x9CB968")]
	public void DebugAllShips()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x9CBEE4", Offset = "0x9CBEE4", VA = "0x9CBEE4")]
	public MenuDebugThings()
	{
	}
}
[Token(Token = "0x2000292")]
public class MeshGroupInstancer : MonoBehaviour
{
	[Token(Token = "0x2000293")]
	public class MeshInfo
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpaceUnit unit;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4 color;

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x936CCC", Offset = "0x936CCC", VA = "0x936CCC")]
		public MeshInfo()
		{
		}
	}

	[Token(Token = "0x2000294")]
	private class MeshGroupInfo
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isSpaceUnit;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool useColor;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4[] highlightColors;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] colors;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MeshInfo> meshObjList;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaterialPropertyBlock matBlock;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock turretMatBlock;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Matrix4x4[] turretMatrices;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Vector4[] turretHighlightColors;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static MaterialPropertyBlock trailMatBlock;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Matrix4x4[] trailTransforms;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Matrix4x4[] trailMat1;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Matrix4x4[] trailMat2;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float[] trailHue;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static float[] trailWidth;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static float[] trailLength;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static float[] trailTextureOffset;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int numActiveMeshes;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9357D4", Offset = "0x9357D4", VA = "0x9357D4")]
		public MeshGroupInfo()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x935954", Offset = "0x935954", VA = "0x935954")]
		public void GenerateData()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x936114", Offset = "0x936114", VA = "0x936114")]
		public void DrawTurrets()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x93641C", Offset = "0x93641C", VA = "0x93641C")]
		public void DrawTrails()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D60AC", Offset = "0x6D60AC")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject meshobj;

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x935734", Offset = "0x935734", VA = "0x935734")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x93573C", Offset = "0x93573C", VA = "0x93573C")]
		internal bool <UnregisterObject>b__0(MeshInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MeshGroupInstancer instance;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector4 highlightColorNone;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector4 highlightColorFriend;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Vector4 highlightColorEnemy;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Vector4 highlightHover;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Vector4 highlightColorGhost;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Vector4 highlightDamaged;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Vector4 highlightTargetted;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static Vector4 highlightTargetFriend;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static Vector4 highlightDisabled;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static Vector4 highlightCooldown;

	[Token(Token = "0x40011F9")]
	private const int InitialMaxObjectsPerGroup = 32;

	[Token(Token = "0x40011FA")]
	private const int MaxObjectsPerGroup = 127;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static Matrix4x4[] matrices;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool performCleanup;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, MeshGroupInfo> instanceGroups;

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9CC570", Offset = "0x9CC570", VA = "0x9CC570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9CC628", Offset = "0x9CC628", VA = "0x9CC628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x9CC62C", Offset = "0x9CC62C", VA = "0x9CC62C")]
	public void RegisterObject(MeshInfo m)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x9CC944", Offset = "0x9CC944", VA = "0x9CC944")]
	public void UnregisterObject(GameObject meshobj)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x9CCAF8", Offset = "0x9CCAF8", VA = "0x9CCAF8")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x9CCE08", Offset = "0x9CCE08", VA = "0x9CCE08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x9CD0B4", Offset = "0x9CD0B4", VA = "0x9CD0B4")]
	public MeshGroupInstancer()
	{
	}
}
[Token(Token = "0x2000296")]
public class MeshInstancer : MonoBehaviour
{
	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter mMeshFilter;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material meshMaterial;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] matrices;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] transforms;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useLODHide;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float meshSize;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isMobileVR;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9CD3E0", Offset = "0x9CD3E0", VA = "0x9CD3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x9CD5B0", Offset = "0x9CD5B0", VA = "0x9CD5B0")]
	private void CreateMatrices()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x9CD6F4", Offset = "0x9CD6F4", VA = "0x9CD6F4")]
	public void UpdateMatrices()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9CD878", Offset = "0x9CD878", VA = "0x9CD878")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x9CDA04", Offset = "0x9CDA04", VA = "0x9CDA04")]
	public MeshInstancer()
	{
	}
}
[Token(Token = "0x2000297")]
public class MotionRecognizer
{
	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float[] history;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentIndex;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentSum;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currentLevel;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _frequencyCutoff;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _f;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _q;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float low;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float high;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float band;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float low2;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float high2;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float band2;

	[Token(Token = "0x170000D3")]
	public float frequencyCutoff
	{
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC1E1E0", Offset = "0xC1E1E0", VA = "0xC1E1E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC1E1E8", Offset = "0xC1E1E8", VA = "0xC1E1E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xC1E220", Offset = "0xC1E220", VA = "0xC1E220")]
	public void init(float freq = 0.25f)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xC1E274", Offset = "0xC1E274", VA = "0xC1E274")]
	public void ClearHistory()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xC1E298", Offset = "0xC1E298", VA = "0xC1E298")]
	public void AddSample(float input)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xC1E3F4", Offset = "0xC1E3F4", VA = "0xC1E3F4")]
	public MotionRecognizer()
	{
	}
}
[Token(Token = "0x2000298")]
public class ObjectSpawner : MonoBehaviour
{
	[Token(Token = "0x2000299")]
	public enum PositionRule
	{
		[Token(Token = "0x4001238")]
		RandomPos,
		[Token(Token = "0x4001239")]
		TopToBottomFireball
	}

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayMin;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayMax;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float nextSpawnTime;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float objectRadius;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PositionRule spawnPositionRule;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpaceBattleManager manager;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool addAsShip;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addAsProjectile;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool mustBeEmpty;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int team;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool randomRot;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool initialized;

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xC2CBAC", Offset = "0xC2CBAC", VA = "0xC2CBAC")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xC2CD28", Offset = "0xC2CD28", VA = "0xC2CD28")]
	private void PickNextSpawnTime()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xC2CD70", Offset = "0xC2CD70", VA = "0xC2CD70")]
	private void AddObject(GameObject spawnedObj)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xC2CF08", Offset = "0xC2CF08", VA = "0xC2CF08")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xC2D2E4", Offset = "0xC2D2E4", VA = "0xC2D2E4")]
	public ObjectSpawner()
	{
	}
}
[Token(Token = "0x200029A")]
public class OutroScene : MonoBehaviour
{
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D60BC", Offset = "0x6D60BC")]
	private sealed class <EndSequence>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutroScene <>4__this;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x938D70", Offset = "0x938D70", VA = "0x938D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x938DB8", Offset = "0x938DB8", VA = "0x938DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x938B9C", Offset = "0x938B9C", VA = "0x938B9C")]
		[DebuggerHidden]
		public <EndSequence>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x938BC8", Offset = "0x938BC8", VA = "0x938BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x938BCC", Offset = "0x938BCC", VA = "0x938BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x938D78", Offset = "0x938D78", VA = "0x938D78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D60CC", Offset = "0x6D60CC")]
	private sealed class <CreditsSequence>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutroScene <>4__this;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x938B4C", Offset = "0x938B4C", VA = "0x938B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x938B94", Offset = "0x938B94", VA = "0x938B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x938604", Offset = "0x938604", VA = "0x938604")]
		[DebuggerHidden]
		public <CreditsSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x938630", Offset = "0x938630", VA = "0x938630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x938634", Offset = "0x938634", VA = "0x938634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x938B54", Offset = "0x938B54", VA = "0x938B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraOrigin;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MyOVRFade fader;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] scenes;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text textArea;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float paragraphDelay;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextRevealer textRevealer;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string[] splitText;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentTextIndex;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentScene;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject creditsObject;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text creditsText;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextRevealer textRevealerCredits;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnitGrabberController[] controllers;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8D74", Offset = "0x6D8D74")]
	public string creditsTextStr;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string[] splitCreditsText;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject skipButton;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool skipRequested;

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xC2DABC", Offset = "0xC2DABC", VA = "0xC2DABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xC2DB58", Offset = "0xC2DB58", VA = "0xC2DB58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xC2DC20", Offset = "0xC2DC20", VA = "0xC2DC20")]
	public void BeginOutro()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xC2E134", Offset = "0xC2E134", VA = "0xC2E134")]
	public void EndClicked()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xC2E1FC", Offset = "0xC2E1FC", VA = "0xC2E1FC")]
	public void SkipPressed()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xC2E250", Offset = "0xC2E250", VA = "0xC2E250")]
	public void RollCredits()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xC2E184", Offset = "0xC2E184", VA = "0xC2E184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E027C", Offset = "0x6E027C")]
	public IEnumerator EndSequence()
	{
		return null;
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xC2E27C", Offset = "0xC2E27C", VA = "0xC2E27C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E02DC", Offset = "0x6E02DC")]
	public IEnumerator CreditsSequence()
	{
		return null;
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xC2E2F4", Offset = "0xC2E2F4", VA = "0xC2E2F4")]
	public void OnTextComplete()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xC2E364", Offset = "0xC2E364", VA = "0xC2E364")]
	public void AdvanceToNextParagraph()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xC2DFC4", Offset = "0xC2DFC4", VA = "0xC2DFC4")]
	private void SetLighting(SceneryHolder myScript)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xC2E400", Offset = "0xC2E400", VA = "0xC2E400")]
	private void NextScene()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xC2E7D4", Offset = "0xC2E7D4", VA = "0xC2E7D4")]
	private void SwitchCameraAngle()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xC2E7D0", Offset = "0xC2E7D0", VA = "0xC2E7D0")]
	private void EndOutro()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xC2E988", Offset = "0xC2E988", VA = "0xC2E988")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xC2E9A4", Offset = "0xC2E9A4", VA = "0xC2E9A4")]
	public OutroScene()
	{
	}
}
[Token(Token = "0x200029D")]
public class PAFadeMeOut : MonoBehaviour
{
	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float fadeFact;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color col;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PAParticleField pfield;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DeadTime _deadTime;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x1284A84", Offset = "0x1284A84", VA = "0x1284A84")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x1284A8C", Offset = "0x1284A8C", VA = "0x1284A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x1284ABC", Offset = "0x1284ABC", VA = "0x1284ABC")]
	public PAFadeMeOut()
	{
	}
}
[Token(Token = "0x200029E")]
public class PlayHapticsRepeatedly : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D60DC", Offset = "0x6D60DC")]
	private sealed class <PlayHapticsLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayHapticsRepeatedly <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x939680", Offset = "0x939680", VA = "0x939680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x9396C8", Offset = "0x9396C8", VA = "0x9396C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x939554", Offset = "0x939554", VA = "0x939554")]
		[DebuggerHidden]
		public <PlayHapticsLoop>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x939580", Offset = "0x939580", VA = "0x939580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x939584", Offset = "0x939584", VA = "0x939584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x939688", Offset = "0x939688", VA = "0x939688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hapticsIndex;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayTime;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPlaying;

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x1290FDC", Offset = "0x1290FDC", VA = "0x1290FDC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x1291014", Offset = "0x1291014", VA = "0x1291014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E03DC", Offset = "0x6E03DC")]
	private IEnumerator PlayHapticsLoop()
	{
		return null;
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x129108C", Offset = "0x129108C", VA = "0x129108C")]
	public PlayHapticsRepeatedly()
	{
	}
}
[Token(Token = "0x20002A0")]
public class RandomizeMesh : MonoBehaviour
{
	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] meshList;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter filter;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xA6CF58", Offset = "0xA6CF58", VA = "0xA6CF58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xA6CFEC", Offset = "0xA6CFEC", VA = "0xA6CFEC")]
	public RandomizeMesh()
	{
	}
}
[Token(Token = "0x20002A1")]
public class RestartAudioSource : MonoBehaviour
{
	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xA6F20C", Offset = "0xA6F20C", VA = "0xA6F20C")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xA6F268", Offset = "0xA6F268", VA = "0xA6F268")]
	public RestartAudioSource()
	{
	}
}
[Token(Token = "0x20002A2")]
public class SaucerDestruction : MonoBehaviour
{
	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xA70A44", Offset = "0xA70A44", VA = "0xA70A44")]
	public void SaucerWasDestroyed()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xA70AF4", Offset = "0xA70AF4", VA = "0xA70AF4")]
	public SaucerDestruction()
	{
	}
}
[Token(Token = "0x20002A3")]
public class ScaleOverTime : MonoBehaviour
{
	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scaleOverTime;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleMax;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lifetime;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startTime;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform objToScale;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xA70AFC", Offset = "0xA70AFC", VA = "0xA70AFC")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xA70BB0", Offset = "0xA70BB0", VA = "0xA70BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xA70C3C", Offset = "0xA70C3C", VA = "0xA70C3C")]
	public ScaleOverTime()
	{
	}
}
[Token(Token = "0x20002A4")]
public class SetColorProp : MonoBehaviour
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colorToSet;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer rend;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xD48324", Offset = "0xD48324", VA = "0xD48324")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xD483C0", Offset = "0xD483C0", VA = "0xD483C0")]
	public SetColorProp()
	{
	}
}
[Token(Token = "0x20002A5")]
public class SetTrackedDevices : MonoBehaviour
{
	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] deviceIds;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnitGrabberController leftController;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnitGrabberController rightController;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xD484AC", Offset = "0xD484AC", VA = "0xD484AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xD484B0", Offset = "0xD484B0", VA = "0xD484B0")]
	public SetTrackedDevices()
	{
	}
}
[Token(Token = "0x20002A6")]
public class ShieldTester : MonoBehaviour
{
	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float nextHit;

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xD4C56C", Offset = "0xD4C56C", VA = "0xD4C56C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xD4C574", Offset = "0xD4C574", VA = "0xD4C574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xD4C698", Offset = "0xD4C698", VA = "0xD4C698")]
	public ShieldTester()
	{
	}
}
[Token(Token = "0x20002A7")]
public class ShipExplodeOnCollision : MonoBehaviour
{
	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xD50314", Offset = "0xD50314", VA = "0xD50314")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xD50370", Offset = "0xD50370", VA = "0xD50370")]
	public ShipExplodeOnCollision()
	{
	}
}
[Token(Token = "0x20002A8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D60EC", Offset = "0x6D60EC")]
public class ShipList : ScriptableObject
{
	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string listName;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ships;

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xCF511C", Offset = "0xCF511C", VA = "0xCF511C")]
	public ShipList()
	{
	}
}
[Token(Token = "0x20002A9")]
public class SilouetteMaker : MonoBehaviour
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfShips;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] sideView;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture rt;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera handCam;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool iconMode;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int iconSize;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool alphaChannel;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material shipMat;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rect;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string folder;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xCFE3F8", Offset = "0xCFE3F8", VA = "0xCFE3F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xCFE3FC", Offset = "0xCFE3FC", VA = "0xCFE3FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xCFE498", Offset = "0xCFE498", VA = "0xCFE498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xCFE528", Offset = "0xCFE528", VA = "0xCFE528")]
	public static string ScreenShotName(string shipName, string folder)
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xCFE598", Offset = "0xCFE598", VA = "0xCFE598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xCFECA8", Offset = "0xCFECA8", VA = "0xCFECA8")]
	public SilouetteMaker()
	{
	}
}
[Token(Token = "0x20002AA")]
public class SimplexNoiseGenerator
{
	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] A;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float s;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float u;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float v;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float w;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int i;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int j;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int k;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float onethird;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float onesixth;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] T;

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD02D14", Offset = "0xD02D14", VA = "0xD02D14")]
	public SimplexNoiseGenerator()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD02E30", Offset = "0xD02E30", VA = "0xD02E30")]
	public SimplexNoiseGenerator(string seed)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xD0306C", Offset = "0xD0306C", VA = "0xD0306C")]
	public SimplexNoiseGenerator(int[] seed)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xD030FC", Offset = "0xD030FC", VA = "0xD030FC")]
	public string GetSeed()
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xD031D8", Offset = "0xD031D8", VA = "0xD031D8")]
	public float coherentNoise(float x, float y, float z, int octaves = 1, int multiplier = 25, float amplitude = 0.5f, float lacunarity = 2f, float persistence = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xD03474", Offset = "0xD03474", VA = "0xD03474")]
	public int getDensity(Vector3 loc)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xD03280", Offset = "0xD03280", VA = "0xD03280")]
	public float noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xD03504", Offset = "0xD03504", VA = "0xD03504")]
	private float kay(int a)
	{
		return default(float);
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xD036D8", Offset = "0xD036D8", VA = "0xD036D8")]
	private int shuffle(int i, int j, int k)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xD03814", Offset = "0xD03814", VA = "0xD03814")]
	private int b(int i, int j, int k, int B)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xD0386C", Offset = "0xD0386C", VA = "0xD0386C")]
	private int b(int N, int B)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xD034D8", Offset = "0xD034D8", VA = "0xD034D8")]
	private int fastfloor(float n)
	{
		return default(int);
	}
}
[Token(Token = "0x20002AB")]
public class SplashController : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6130", Offset = "0x6D6130")]
	private sealed class <StartLoading>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashController <>4__this;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <minimumTimeEnd>5__2;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <o>5__3;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x117A6B8", Offset = "0x117A6B8", VA = "0x117A6B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x117A700", Offset = "0x117A700", VA = "0x117A700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x117A3D8", Offset = "0x117A3D8", VA = "0x117A3D8")]
		[DebuggerHidden]
		public <StartLoading>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x117A404", Offset = "0x117A404", VA = "0x117A404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x117A408", Offset = "0x117A408", VA = "0x117A408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x117A6C0", Offset = "0x117A6C0", VA = "0x117A6C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6140", Offset = "0x6D6140")]
	private sealed class <FadeOut>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x117A388", Offset = "0x117A388", VA = "0x117A388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x117A3D0", Offset = "0x117A3D0", VA = "0x117A3D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x117A26C", Offset = "0x117A26C", VA = "0x117A26C")]
		[DebuggerHidden]
		public <FadeOut>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x117A298", Offset = "0x117A298", VA = "0x117A298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x117A29C", Offset = "0x117A29C", VA = "0x117A29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x117A390", Offset = "0x117A390", VA = "0x117A390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumTimeToShowLogo;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string levelToLoad;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MyOVRFade fader;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool proceedToGame;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loadingIndicator;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject skipIntroButton;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xBAA368", Offset = "0xBAA368", VA = "0xBAA368")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xBAA3BC", Offset = "0xBAA3BC", VA = "0xBAA3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E048C", Offset = "0x6E048C")]
	private IEnumerator StartLoading()
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xBAA434", Offset = "0xBAA434", VA = "0xBAA434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E04EC", Offset = "0x6E04EC")]
	public IEnumerator FadeOut(AudioSource audioSource, float FadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xBAA4BC", Offset = "0xBAA4BC", VA = "0xBAA4BC")]
	public SplashController()
	{
	}
}
[Token(Token = "0x20002AE")]
public class StoryScene : MonoBehaviour
{
	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraAnchor;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float camera2Delay;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraAnchor2;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float frameTime;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color fadeColor;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D8D8C", Offset = "0x6D8D8C")]
	public string sceneText;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string sceneTextKey;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string[] sceneTexts;

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xBB6224", Offset = "0xBB6224", VA = "0xBB6224")]
	public StoryScene()
	{
	}
}
[Token(Token = "0x20002AF")]
public class StorySceneFlipper : MonoBehaviour
{
	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSystemManager VRSystem;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainCamera;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraOrigin;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MyOVRFade fader;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] scenes;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float sceneStartTime;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text textArea;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float paragraphDelay;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextRevealer textRevealer;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] splitText;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentTextIndex;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentScene;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource titleMusic;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource introMusic;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform titleCameraPos;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject titleScene;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SplashController splash;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnitGrabberController[] controllers;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject viewIntroButton;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject menuOptions;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MonoBehaviour[] tramThingsToStop;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool applicationPaused;

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xBB62A0", Offset = "0xBB62A0", VA = "0xBB62A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xBB63D4", Offset = "0xBB63D4", VA = "0xBB63D4")]
	private void InitialSetup()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xBB6814", Offset = "0xBB6814", VA = "0xBB6814")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xBB68F4", Offset = "0xBB68F4", VA = "0xBB68F4")]
	public void BeginIntroClicked()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xBB698C", Offset = "0xBB698C", VA = "0xBB698C")]
	public void SkipIntroClicked()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xBB6A14", Offset = "0xBB6A14", VA = "0xBB6A14")]
	public void BeginIntro()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xBB6FAC", Offset = "0xBB6FAC", VA = "0xBB6FAC")]
	public void OnTextComplete()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xBB7000", Offset = "0xBB7000", VA = "0xBB7000")]
	public void AdvanceToNextParagraph()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xBB7088", Offset = "0xBB7088", VA = "0xBB7088")]
	private void SetControllersEnabled(bool e)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xBB65EC", Offset = "0xBB65EC", VA = "0xBB65EC")]
	private void SetLighting(SceneryHolder myScript)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xBB6A78", Offset = "0xBB6A78", VA = "0xBB6A78")]
	private void NextScene()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xBB7130", Offset = "0xBB7130", VA = "0xBB7130")]
	private void SwitchCameraAngle()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xBB7110", Offset = "0xBB7110", VA = "0xBB7110")]
	private void ProceedToGame()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xBB696C", Offset = "0xBB696C", VA = "0xBB696C")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xBB72E4", Offset = "0xBB72E4", VA = "0xBB72E4")]
	public void StopTram()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xBB7354", Offset = "0xBB7354", VA = "0xBB7354")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xBB7650", Offset = "0xBB7650", VA = "0xBB7650")]
	private void SetPauseGame(bool pause)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xBB76BC", Offset = "0xBB76BC", VA = "0xBB76BC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xBB76C4", Offset = "0xBB76C4", VA = "0xBB76C4")]
	public StorySceneFlipper()
	{
	}
}
[Token(Token = "0x20002B0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6150", Offset = "0x6D6150")]
public class StringDictionarySO : ScriptableObject
{
	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xBB8408", Offset = "0xBB8408", VA = "0xBB8408")]
	public StringDictionarySO()
	{
	}
}
[Token(Token = "0x20002B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D61B0", Offset = "0x6D61B0")]
public class StringListSO : ScriptableObject
{
	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string[] content;

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xBB8410", Offset = "0xBB8410", VA = "0xBB8410")]
	public StringListSO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B2")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xBB8418", Offset = "0xBB8418", VA = "0xBB8418")]
	public StringStringDictionary()
	{
	}
}
[Token(Token = "0x20002B3")]
public class TestViewScreen : MonoBehaviour
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionList missions;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text mainText;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text speakerInfo;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text missionStringKey;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text missionNumberLabel;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text textNumberLabel;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TravelChoicePanel travelChoicePanel;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentNodeIndex;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ScenarioCanvas currentCanvas;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ScenarioCanvas> allMissions;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject optionButtonPrefab;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string[] textBlocks;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentMissionIndex;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentTextBlock;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int nodeNum;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject optionButtonArea;

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xC5A0E8", Offset = "0xC5A0E8", VA = "0xC5A0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xC5A38C", Offset = "0xC5A38C", VA = "0xC5A38C")]
	public void Setup(ScenarioCanvas scenario)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xC5C54C", Offset = "0xC5C54C", VA = "0xC5C54C")]
	public void NextMission()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xC5C5EC", Offset = "0xC5C5EC", VA = "0xC5C5EC")]
	public void PrevMission()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xC5BB98", Offset = "0xC5BB98", VA = "0xC5BB98")]
	public void FindNextNode()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xC5C690", Offset = "0xC5C690", VA = "0xC5C690")]
	private void ClearOptions()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xC5CA54", Offset = "0xC5CA54", VA = "0xC5CA54")]
	public TestViewScreen()
	{
	}
}
[Token(Token = "0x20002B4")]
public class TheCenterBoss : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6210", Offset = "0x6D6210")]
	private sealed class <>c
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SpaceUnit> <>9__9_0;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x117DA0C", Offset = "0x117DA0C", VA = "0x117DA0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x117DA14", Offset = "0x117DA14", VA = "0x117DA14")]
		internal bool <SetupSaucer>b__9_0(SpaceUnit s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject saucerPrefab;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shieldObject;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform saucerPos;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShipLoadout saucerLoadout;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpaceUnit saucerUnit;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject saucerShieldGlow;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SpaceUnit theCenter;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SpaceUnit> platforms;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xC5E028", Offset = "0xC5E028", VA = "0xC5E028")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xC5E0AC", Offset = "0xC5E0AC", VA = "0xC5E0AC")]
	public void SetupSaucer()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xC5E8C8", Offset = "0xC5E8C8", VA = "0xC5E8C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xC5EAF0", Offset = "0xC5EAF0", VA = "0xC5EAF0")]
	public TheCenterBoss()
	{
	}
}
[Token(Token = "0x20002B6")]
public class TurretInstancer : MonoBehaviour
{
	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material meshMaterial;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh mesh;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] transforms;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HardPoint[] hardPoints;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float meshSize;

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xC67714", Offset = "0xC67714", VA = "0xC67714")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xC67910", Offset = "0xC67910", VA = "0xC67910")]
	public void CollectData(ref Matrix4x4[] matrixArr, ref int startIndex, ref Vector4[] highlightColors)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xC67DC0", Offset = "0xC67DC0", VA = "0xC67DC0")]
	public TurretInstancer()
	{
	}
}
[Token(Token = "0x20002B7")]
public class TutorialMissionHandler : MonoBehaviour
{
	[Token(Token = "0x20002B8")]
	public enum TutorialState
	{
		[Token(Token = "0x40012EC")]
		Transitioning,
		[Token(Token = "0x40012ED")]
		TutBegin,
		[Token(Token = "0x40012EE")]
		TutScale,
		[Token(Token = "0x40012EF")]
		TutMove,
		[Token(Token = "0x40012F0")]
		TutMoveShip,
		[Token(Token = "0x40012F1")]
		TutInvestigate,
		[Token(Token = "0x40012F2")]
		TutAttack,
		[Token(Token = "0x40012F3")]
		TutTouchpad,
		[Token(Token = "0x40012F4")]
		TutTouchpad2,
		[Token(Token = "0x40012F5")]
		TutItems,
		[Token(Token = "0x40012F6")]
		TutItems2,
		[Token(Token = "0x40012F7")]
		TutFormation,
		[Token(Token = "0x40012F8")]
		TutFormation2,
		[Token(Token = "0x40012F9")]
		TutTargetSystems,
		[Token(Token = "0x40012FA")]
		TutTargetSystems2,
		[Token(Token = "0x40012FB")]
		TutTargetSystems3,
		[Token(Token = "0x40012FC")]
		TutFinal,
		[Token(Token = "0x40012FD")]
		TutKrayaAttack
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6220", Offset = "0x6D6220")]
	private sealed class <WaitInvoke>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialMissionHandler <>4__this;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string nextState;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x117E574", Offset = "0x117E574", VA = "0x117E574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x117E5BC", Offset = "0x117E5BC", VA = "0x117E5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x117E2CC", Offset = "0x117E2CC", VA = "0x117E2CC")]
		[DebuggerHidden]
		public <WaitInvoke>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x117E2F8", Offset = "0x117E2F8", VA = "0x117E2F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x117E2FC", Offset = "0x117E2FC", VA = "0x117E2FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x117E57C", Offset = "0x117E57C", VA = "0x117E57C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6230", Offset = "0x6D6230")]
	private sealed class <WaitUntilDoneSettingFormation>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialMissionHandler <>4__this;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x117E780", Offset = "0x117E780", VA = "0x117E780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x117E7C8", Offset = "0x117E7C8", VA = "0x117E7C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x117E5C4", Offset = "0x117E5C4", VA = "0x117E5C4")]
		[DebuggerHidden]
		public <WaitUntilDoneSettingFormation>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x117E5F0", Offset = "0x117E5F0", VA = "0x117E5F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x117E5F4", Offset = "0x117E5F4", VA = "0x117E5F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x117E788", Offset = "0x117E788", VA = "0x117E788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialVisualHint.VisualHintData[] hintForStep;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TutorialState currentTutState;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip successSound;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentPopup;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentVoicePopup;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveStartPos;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform cameraTransform;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform headTransform;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject navPoint1;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform cargoShipTarget;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpaceUnit cargoShip;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SpaceUnit asteroid1;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpaceUnit asteroid2;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpaceUnit explorer;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpaceUnit trainingDrone1;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpaceUnit krayaShip1;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SpaceUnit krayaShip2;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SpaceUnit starbase;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<SpaceUnit> playerShips;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Fleet trainingDroneFleet;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Fleet krayaFleet;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TutorialVisualHint visualHint;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool shortTutorial;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject popupPrefab;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool voiceAllowed;

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xC67E60", Offset = "0xC67E60", VA = "0xC67E60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xC680CC", Offset = "0xC680CC", VA = "0xC680CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xC681E4", Offset = "0xC681E4", VA = "0xC681E4")]
	private void ScenarioCombatBegan()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xC68474", Offset = "0xC68474", VA = "0xC68474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E05EC", Offset = "0x6E05EC")]
	private IEnumerator WaitInvoke(string nextState, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xC68518", Offset = "0xC68518", VA = "0xC68518")]
	private void ShowPopupForStep()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xC68A00", Offset = "0xC68A00", VA = "0xC68A00")]
	public void ShowVoicePopupForStep()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xC68C24", Offset = "0xC68C24", VA = "0xC68C24")]
	private void Proceed(string nextState, float delay = 0f)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xC68EFC", Offset = "0xC68EFC", VA = "0xC68EFC")]
	private void SetupVisualHint()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xC69508", Offset = "0xC69508", VA = "0xC69508")]
	private void Update()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xC69E5C", Offset = "0xC69E5C", VA = "0xC69E5C")]
	public void PopupClosed()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xC69FB8", Offset = "0xC69FB8", VA = "0xC69FB8")]
	private void EnterTutBeginState()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xC69FC4", Offset = "0xC69FC4", VA = "0xC69FC4")]
	private void EnterTutScaleState()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xC69FD0", Offset = "0xC69FD0", VA = "0xC69FD0")]
	private void EnterTutMoveState()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xC6A01C", Offset = "0xC6A01C", VA = "0xC6A01C")]
	private void EnterTutMoveShipState()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xC6A1D0", Offset = "0xC6A1D0", VA = "0xC6A1D0")]
	private void EnterTutInvestigateState()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xC6A468", Offset = "0xC6A468", VA = "0xC6A468")]
	private string GetSelectButtonName()
	{
		return null;
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xC6A558", Offset = "0xC6A558", VA = "0xC6A558")]
	private void EnterTutTouchpadState()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xC6A5E8", Offset = "0xC6A5E8", VA = "0xC6A5E8")]
	private void EnterTutTouchpad2State()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xC6A5F4", Offset = "0xC6A5F4", VA = "0xC6A5F4")]
	private void EnterTutAttackState()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xC6A740", Offset = "0xC6A740", VA = "0xC6A740")]
	private void EnterTutItemsState()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xC6A8B0", Offset = "0xC6A8B0", VA = "0xC6A8B0")]
	private void EnterTutItems2State()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xC6A8BC", Offset = "0xC6A8BC", VA = "0xC6A8BC")]
	private void EnterTutFormationState()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xC6AB6C", Offset = "0xC6AB6C", VA = "0xC6AB6C")]
	private void ShowExplorerReticle()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xC6ACB4", Offset = "0xC6ACB4", VA = "0xC6ACB4")]
	private void EnterTutFormation2State()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xC6ACC0", Offset = "0xC6ACC0", VA = "0xC6ACC0")]
	private void EnterTargetSystemsState()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xC6AFB4", Offset = "0xC6AFB4", VA = "0xC6AFB4")]
	private void SetupDroneTargetLocation()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xC6B040", Offset = "0xC6B040", VA = "0xC6B040")]
	private void EnterTargetSystems2State()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xC6B174", Offset = "0xC6B174", VA = "0xC6B174")]
	private void EnterTargetSystems3State()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xC69DE4", Offset = "0xC69DE4", VA = "0xC69DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E064C", Offset = "0x6E064C")]
	private IEnumerator WaitUntilDoneSettingFormation()
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xC6B254", Offset = "0xC6B254", VA = "0xC6B254")]
	private void EnterTutFinalState()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xC6B2E0", Offset = "0xC6B2E0", VA = "0xC6B2E0")]
	private void EnterTutKrayaAttack()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xC6B49C", Offset = "0xC6B49C", VA = "0xC6B49C")]
	public TutorialMissionHandler()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xC6B4AC", Offset = "0xC6B4AC", VA = "0xC6B4AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E06AC", Offset = "0x6E06AC")]
	private void <EnterTutInvestigateState>b__40_0(AbstractGoTween gt)
	{
	}
}
[Token(Token = "0x20002BB")]
public class VRSystemManager : MonoBehaviour
{
	[Token(Token = "0x20002BC")]
	public enum VRSDKS
	{
		[Token(Token = "0x4001323")]
		VRSDK_STEAMVR,
		[Token(Token = "0x4001324")]
		VRSDK_OCULUS,
		[Token(Token = "0x4001325")]
		VRSDK_OCULUS_QUEST,
		[Token(Token = "0x4001326")]
		VRSDK_VIVEPORT,
		[Token(Token = "0x4001327")]
		VRSDK_PICO,
		[Token(Token = "0x4001328")]
		VRSDK_VIVE_WAVE
	}

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRSystemManager instance;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour[] steamVRScripts;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour[] oculusVRScripts;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour[] picoVRScripts;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MonoBehaviour[] highEndFX;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] inactiveTestList;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera[] cams;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject VRObjectsHolder;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject headCam;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject handL;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject handR;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject oculusTrackingArea;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PostProcessLayer postProcFX;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SpaceBattleManager manager;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Camera mainCamera;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OVRManager ovrMan;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro versionText;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BuildinfoSO buildinfo;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string currentHMDName;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string currentControllerName;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Light sunLight;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Light underLight;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isQuest1;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _isQuest2;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool _isQuestPro;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool _isPico4;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _highEndFXActive;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<XRInputSubsystem> s_inputSubsystems;

	[Token(Token = "0x170000E2")]
	public bool highEndFXActive
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1B10ED4", Offset = "0x1B10ED4", VA = "0x1B10ED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x1B10EDC", Offset = "0x1B10EDC", VA = "0x1B10EDC")]
	public void ToggleHighEndFX(bool active)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x1B11334", Offset = "0x1B11334", VA = "0x1B11334")]
	public bool IsQuest()
	{
		return default(bool);
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x1B11358", Offset = "0x1B11358", VA = "0x1B11358")]
	public bool IsPico()
	{
		return default(bool);
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x1B1137C", Offset = "0x1B1137C", VA = "0x1B1137C")]
	public bool IsPico4OrBetter()
	{
		return default(bool);
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x1B11384", Offset = "0x1B11384", VA = "0x1B11384")]
	public bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x1B113B4", Offset = "0x1B113B4", VA = "0x1B113B4")]
	public bool IsQuest1()
	{
		return default(bool);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x1B113BC", Offset = "0x1B113BC", VA = "0x1B113BC")]
	public bool IsQuest2()
	{
		return default(bool);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x1B113C4", Offset = "0x1B113C4", VA = "0x1B113C4")]
	public bool IsQuestPro()
	{
		return default(bool);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x1B113CC", Offset = "0x1B113CC", VA = "0x1B113CC")]
	public bool IsDesktop()
	{
		return default(bool);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x1B113FC", Offset = "0x1B113FC", VA = "0x1B113FC")]
	public bool IsOVR()
	{
		return default(bool);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1B11424", Offset = "0x1B11424", VA = "0x1B11424")]
	public bool IsSteamVR()
	{
		return default(bool);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x1B11448", Offset = "0x1B11448", VA = "0x1B11448")]
	public bool IsViveport()
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1B1146C", Offset = "0x1B1146C", VA = "0x1B1146C")]
	public bool RunTests()
	{
		return default(bool);
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1B11598", Offset = "0x1B11598", VA = "0x1B11598")]
	public void DisableScriptsForPlatform()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1B11AA4", Offset = "0x1B11AA4", VA = "0x1B11AA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1B126F8", Offset = "0x1B126F8", VA = "0x1B126F8")]
	public static XRInputSubsystem GetCurrentInputSubsystem()
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1B1283C", Offset = "0x1B1283C", VA = "0x1B1283C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x1B12978", Offset = "0x1B12978", VA = "0x1B12978")]
	public static bool IsVoiceAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x1B12A2C", Offset = "0x1B12A2C", VA = "0x1B12A2C")]
	public VRSystemManager()
	{
	}
}
[Token(Token = "0x20002BD")]
public class WarpoutOnScanned : MonoBehaviour
{
	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpaceUnit unit;

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x9F6804", Offset = "0x9F6804", VA = "0x9F6804")]
	public void Restart()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x9F686C", Offset = "0x9F686C", VA = "0x9F686C")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x9F68F8", Offset = "0x9F68F8", VA = "0x9F68F8")]
	public void Setup()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x9F6A80", Offset = "0x9F6A80", VA = "0x9F6A80")]
	public WarpoutOnScanned()
	{
	}
}
[Token(Token = "0x20002BE")]
public class WireframeAppear : MonoBehaviour
{
	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material myMatInstance;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayTime;

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x9F7588", Offset = "0x9F7588", VA = "0x9F7588")]
	private void Start()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x9F7610", Offset = "0x9F7610", VA = "0x9F7610")]
	private void StartAnim()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x9F7710", Offset = "0x9F7710", VA = "0x9F7710")]
	public WireframeAppear()
	{
	}
}
[Token(Token = "0x20002BF")]
[DisallowMultipleComponent]
public class XRHeadTracker : MonoBehaviour
{
	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.XR.InputDevice deviceReference;

	[NonSerialized]
	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasDevice;

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x9F7CDC", Offset = "0x9F7CDC", VA = "0x9F7CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x9F7DCC", Offset = "0x9F7DCC", VA = "0x9F7DCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x9F7EF0", Offset = "0x9F7EF0", VA = "0x9F7EF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x9F8014", Offset = "0x9F8014", VA = "0x9F8014")]
	public void InputDevices_deviceConnected(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x9F8018", Offset = "0x9F8018", VA = "0x9F8018")]
	public void InputDevices_deviceDisconnected(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x9F801C", Offset = "0x9F801C", VA = "0x9F801C")]
	public void UpdateTracking()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x9F814C", Offset = "0x9F814C", VA = "0x9F814C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x9F815C", Offset = "0x9F815C", VA = "0x9F815C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x9F816C", Offset = "0x9F816C", VA = "0x9F816C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x9F817C", Offset = "0x9F817C", VA = "0x9F817C")]
	[AttributeAttribute(Name = "BeforeRenderOrderAttribute", RVA = "0x6E075C", Offset = "0x6E075C")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x9F7CE0", Offset = "0x9F7CE0", VA = "0x9F7CE0")]
	public void ConnectionChanged()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x9F818C", Offset = "0x9F818C", VA = "0x9F818C")]
	public XRHeadTracker()
	{
	}
}
[Token(Token = "0x20002C0")]
public struct FaceIndices
{
	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vi;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int vu;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int vn;
}
[Token(Token = "0x20002C1")]
public class GeometryBuffer
{
	[Token(Token = "0x20002C2")]
	private class ObjectData
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GroupData> groups;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FaceIndices> allFaces;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int normalCount;

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x9FF6D0", Offset = "0x9FF6D0", VA = "0x9FF6D0")]
		public ObjectData()
		{
		}
	}

	[Token(Token = "0x20002C3")]
	private class GroupData
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string materialName;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FaceIndices> faces;

		[Token(Token = "0x170000E7")]
		public bool isEmpty
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x9FF67C", Offset = "0x9FF67C", VA = "0x9FF67C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x9FF5F8", Offset = "0x9FF5F8", VA = "0x9FF5F8")]
		public GroupData()
		{
		}
	}

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ObjectData> objects;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> vertices;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector2> uvs;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> normals;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int unnamedGroupIndex;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ObjectData current;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GroupData curgr;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MAX_VERTICES_LIMIT_FOR_A_MESH;

	[Token(Token = "0x170000E3")]
	public int numObjects
	{
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xB55734", Offset = "0xB55734", VA = "0xB55734")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E4")]
	public bool isEmpty
	{
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xB54A98", Offset = "0xB54A98", VA = "0xB54A98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E5")]
	public bool hasUVs
	{
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xB55780", Offset = "0xB55780", VA = "0xB55780")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E6")]
	public bool hasNormals
	{
		[Token(Token = "0x6001058")]
		[Address(RVA = "0xB557D4", Offset = "0xB557D4", VA = "0xB557D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xB546D8", Offset = "0xB546D8", VA = "0xB546D8")]
	public GeometryBuffer()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xB5492C", Offset = "0xB5492C", VA = "0xB5492C")]
	public void PushObject(string name)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xB54AEC", Offset = "0xB54AEC", VA = "0xB54AEC")]
	public void PushGroup(string name)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xB54C34", Offset = "0xB54C34", VA = "0xB54C34")]
	public void PushMaterialName(string name)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xB54CE8", Offset = "0xB54CE8", VA = "0xB54CE8")]
	public void PushVertex(Vector3 v)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xB54D64", Offset = "0xB54D64", VA = "0xB54D64")]
	public void PushUV(Vector2 v)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xB54DD0", Offset = "0xB54DD0", VA = "0xB54DD0")]
	public void PushNormal(Vector3 v)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xB54E4C", Offset = "0xB54E4C", VA = "0xB54E4C")]
	public void PushFace(FaceIndices f)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xB54F08", Offset = "0xB54F08", VA = "0xB54F08")]
	public void Trace()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xB55828", Offset = "0xB55828", VA = "0xB55828")]
	public void PopulateMeshes(GameObject[] gs, Dictionary<string, Material> mats)
	{
	}
}
[Token(Token = "0x20002C4")]
public class OBJ : MonoBehaviour
{
	[Token(Token = "0x20002C5")]
	private class MaterialData
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ambient;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color diffuse;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color specular;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float shininess;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float alpha;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int illumType;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string diffuseTexPath;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string bumpTexPath;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D diffuseTex;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D bumpTex;

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x93805C", Offset = "0x93805C", VA = "0x93805C")]
		public MaterialData()
		{
		}
	}

	[Token(Token = "0x20002C6")]
	private class BumpParamDef
	{
		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string optionName;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string valueType;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int valueNumMin;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int valueNumMax;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x937FF4", Offset = "0x937FF4", VA = "0x937FF4")]
		public BumpParamDef(string name, string type, int numMin, int numMax)
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6250", Offset = "0x6D6250")]
	private sealed class <Load>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OBJ <>4__this;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <loader>5__2;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MaterialData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialData <m>5__4;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WWW <texloader>5__5;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x937FA4", Offset = "0x937FA4", VA = "0x937FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x937FEC", Offset = "0x937FEC", VA = "0x937FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x9377B4", Offset = "0x9377B4", VA = "0x9377B4")]
		[DebuggerHidden]
		public <Load>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x9377E0", Offset = "0x9377E0", VA = "0x9377E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x937860", Offset = "0x937860", VA = "0x937860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x93780C", Offset = "0x93780C", VA = "0x93780C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x937FAC", Offset = "0x937FAC", VA = "0x937FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string objPath;

	[Token(Token = "0x4001342")]
	private const string O = "o";

	[Token(Token = "0x4001343")]
	private const string G = "g";

	[Token(Token = "0x4001344")]
	private const string V = "v";

	[Token(Token = "0x4001345")]
	private const string VT = "vt";

	[Token(Token = "0x4001346")]
	private const string VN = "vn";

	[Token(Token = "0x4001347")]
	private const string F = "f";

	[Token(Token = "0x4001348")]
	private const string MTL = "mtllib";

	[Token(Token = "0x4001349")]
	private const string UML = "usemtl";

	[Token(Token = "0x400134A")]
	private const string NML = "newmtl";

	[Token(Token = "0x400134B")]
	private const string NS = "Ns";

	[Token(Token = "0x400134C")]
	private const string KA = "Ka";

	[Token(Token = "0x400134D")]
	private const string KD = "Kd";

	[Token(Token = "0x400134E")]
	private const string KS = "Ks";

	[Token(Token = "0x400134F")]
	private const string D = "d";

	[Token(Token = "0x4001350")]
	private const string TR = "Tr";

	[Token(Token = "0x4001351")]
	private const string ILLUM = "illum";

	[Token(Token = "0x4001352")]
	private const string MAP_KA = "map_Ka";

	[Token(Token = "0x4001353")]
	private const string MAP_KD = "map_Kd";

	[Token(Token = "0x4001354")]
	private const string MAP_KS = "map_Ks";

	[Token(Token = "0x4001355")]
	private const string MAP_KE = "map_Ke";

	[Token(Token = "0x4001356")]
	private const string MAP_BUMP = "map_bump";

	[Token(Token = "0x4001357")]
	private const string BUMP = "bump";

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string basepath;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string mtllib;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GeometryBuffer buffer;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialData> materialData;

	[Token(Token = "0x170000E8")]
	private bool hasMaterials
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC25360", Offset = "0xC25360", VA = "0xC25360")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xC240DC", Offset = "0xC240DC", VA = "0xC240DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xC2415C", Offset = "0xC2415C", VA = "0xC2415C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0770", Offset = "0x6E0770")]
	public IEnumerator Load(string path)
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xC241F0", Offset = "0xC241F0", VA = "0xC241F0")]
	private WWW GetTextureLoader(MaterialData m, string texpath)
	{
		return null;
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xC245B8", Offset = "0xC245B8", VA = "0xC245B8")]
	private void GetFaceIndicesByOneFaceLine(FaceIndices[] faces, string[] p, bool isFaceIndexPlus)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xC249C4", Offset = "0xC249C4", VA = "0xC249C4")]
	private void SetGeometryData(string data)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xC252B8", Offset = "0xC252B8", VA = "0xC252B8")]
	private float cf(string v)
	{
		return default(float);
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xC2491C", Offset = "0xC2491C", VA = "0xC2491C")]
	private int ci(string v)
	{
		return default(int);
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xC25370", Offset = "0xC25370", VA = "0xC25370")]
	private void SetMaterialData(string data)
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xC264DC", Offset = "0xC264DC", VA = "0xC264DC")]
	private Material GetMaterial(MaterialData md)
	{
		return null;
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xC25AD4", Offset = "0xC25AD4", VA = "0xC25AD4")]
	private void BumpParameter(MaterialData m, string[] p)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xC25A2C", Offset = "0xC25A2C", VA = "0xC25A2C")]
	private Color gc(string[] p)
	{
		return default(Color);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xC267B4", Offset = "0xC267B4", VA = "0xC267B4")]
	private void Build()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xC26D90", Offset = "0xC26D90", VA = "0xC26D90")]
	public OBJ()
	{
	}
}
[Token(Token = "0x20002C8")]
public class MoveForward : MonoBehaviour
{
	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xC1E728", Offset = "0xC1E728", VA = "0xC1E728")]
	private void Update()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xC1E7D8", Offset = "0xC1E7D8", VA = "0xC1E7D8")]
	public MoveForward()
	{
	}
}
[Token(Token = "0x20002C9")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public delegate void OnClick();

	[Token(Token = "0x20002CB")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002CC")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002CD")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6260", Offset = "0x6D6260")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x9FDA98", Offset = "0x9FDA98", VA = "0x9FDA98")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x9FDAA0", Offset = "0x9FDAA0", VA = "0x9FDAA0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6270", Offset = "0x6D6270")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x9FDCC4", Offset = "0x9FDCC4", VA = "0x9FDCC4")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x9FDCCC", Offset = "0x9FDCCC", VA = "0x9FDCCC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6280", Offset = "0x6D6280")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x9FDF18", Offset = "0x9FDF18", VA = "0x9FDF18")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x9FDF20", Offset = "0x9FDF20", VA = "0x9FDF20")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6290", Offset = "0x6D6290")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x9FE2B8", Offset = "0x9FE2B8", VA = "0x9FE2B8")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x9FE2C0", Offset = "0x9FE2C0", VA = "0x9FE2C0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62A0", Offset = "0x6D62A0")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x9FE2E0", Offset = "0x9FE2E0", VA = "0x9FE2E0")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x9FE2E8", Offset = "0x9FE2E8", VA = "0x9FE2E8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4001374")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4001375")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4001376")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xD8D958", Offset = "0xD8D958", VA = "0xD8D958")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xD8DE8C", Offset = "0xD8DE8C", VA = "0xD8DE8C")]
	public void Show()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xD8E254", Offset = "0xD8E254", VA = "0xD8E254")]
	public void Hide()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xD8E410", Offset = "0xD8E410", VA = "0xD8E410")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD8E650", Offset = "0xD8E650", VA = "0xD8E650")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD8E244", Offset = "0xD8E244", VA = "0xD8E244")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD8E980", Offset = "0xD8E980", VA = "0xD8E980")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD8ECA0", Offset = "0xD8ECA0", VA = "0xD8ECA0")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xD8F068", Offset = "0xD8F068", VA = "0xD8F068")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xD8F16C", Offset = "0xD8F16C", VA = "0xD8F16C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xD8F350", Offset = "0xD8F350", VA = "0xD8F350")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD8F3F4", Offset = "0xD8F3F4", VA = "0xD8F3F4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xD8F5E4", Offset = "0xD8F5E4", VA = "0xD8F5E4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xD8F7EC", Offset = "0xD8F7EC", VA = "0xD8F7EC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xD8FAF0", Offset = "0xD8FAF0", VA = "0xD8FAF0")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xD8FBEC", Offset = "0xD8FBEC", VA = "0xD8FBEC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xD8FC98", Offset = "0xD8FC98", VA = "0xD8FC98")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20002D3")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xE8A7B0", Offset = "0xE8A7B0", VA = "0xE8A7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xE8A860", Offset = "0xE8A860", VA = "0xE8A860")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xE8A920", Offset = "0xE8A920", VA = "0xE8A920")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xE8A95C", Offset = "0xE8A95C", VA = "0xE8A95C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20002D4")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20002D5")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40013A6")]
		On,
		[Token(Token = "0x40013A7")]
		Off,
		[Token(Token = "0x40013A8")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000EB")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xE74B80", Offset = "0xE74B80", VA = "0xE74B80")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xE74B3C", Offset = "0xE74B3C", VA = "0xE74B3C")]
		set
		{
		}
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xE74B88", Offset = "0xE74B88", VA = "0xE74B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xE74BE4", Offset = "0xE74BE4", VA = "0xE74BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xE74D28", Offset = "0xE74D28", VA = "0xE74D28", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xE74D44", Offset = "0xE74D44", VA = "0xE74D44", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xE74D98", Offset = "0xE74D98", VA = "0xE74D98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xE74F54", Offset = "0xE74F54", VA = "0xE74F54")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xE75068", Offset = "0xE75068", VA = "0xE75068")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xE750F8", Offset = "0xE750F8", VA = "0xE750F8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xE751C4", Offset = "0xE751C4", VA = "0xE751C4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xE75278", Offset = "0xE75278", VA = "0xE75278")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xE75364", Offset = "0xE75364", VA = "0xE75364")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20002D6")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40013A9")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40013AA")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40013AB")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8E84", Offset = "0x6D8E84")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8EBC", Offset = "0x6D8EBC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8EF4", Offset = "0x6D8EF4")]
	public float HeightOffset;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8F2C", Offset = "0x6D8F2C")]
	public float MinimumHeight;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8F64", Offset = "0x6D8F64")]
	public float MaximumHeight;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xD7F868", Offset = "0xD7F868", VA = "0xD7F868")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xD7F870", Offset = "0xD7F870", VA = "0xD7F870")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xD7F8FC", Offset = "0xD7F8FC", VA = "0xD7F8FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xD7F990", Offset = "0xD7F990", VA = "0xD7F990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xD7FA24", Offset = "0xD7FA24", VA = "0xD7FA24")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD7FD50", Offset = "0xD7FD50", VA = "0xD7FD50")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD7FF80", Offset = "0xD7FF80", VA = "0xD7FF80")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002D7")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x9C2E44", Offset = "0x9C2E44", VA = "0x9C2E44")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x9C2F10", Offset = "0x9C2F10", VA = "0x9C2F10")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20002D8")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	public enum States
	{
		[Token(Token = "0x40013D9")]
		Ready,
		[Token(Token = "0x40013DA")]
		Aim,
		[Token(Token = "0x40013DB")]
		CancelAim,
		[Token(Token = "0x40013DC")]
		PreTeleport,
		[Token(Token = "0x40013DD")]
		CancelTeleport,
		[Token(Token = "0x40013DE")]
		Teleporting,
		[Token(Token = "0x40013DF")]
		PostTeleport
	}

	[Token(Token = "0x20002DA")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40013E1")]
		None,
		[Token(Token = "0x40013E2")]
		Aim,
		[Token(Token = "0x40013E3")]
		PreTeleport,
		[Token(Token = "0x40013E4")]
		Teleport
	}

	[Token(Token = "0x20002DB")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40013E6")]
		Point,
		[Token(Token = "0x40013E7")]
		Sphere,
		[Token(Token = "0x40013E8")]
		Capsule
	}

	[Token(Token = "0x20002DC")]
	public class AimData
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D937C", Offset = "0x6D937C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000EF")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x934F74", Offset = "0x934F74", VA = "0x934F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0C98", Offset = "0x6E0C98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x934F7C", Offset = "0x934F7C", VA = "0x934F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0CA8", Offset = "0x6E0CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x934EF0", Offset = "0x934EF0", VA = "0x934EF0")]
		public AimData()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x934F84", Offset = "0x934F84", VA = "0x934F84")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62B0", Offset = "0x6D62B0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x934D3C", Offset = "0x934D3C", VA = "0x934D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x934D84", Offset = "0x934D84", VA = "0x934D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x934C00", Offset = "0x934C00", VA = "0x934C00")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x934C2C", Offset = "0x934C2C", VA = "0x934C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x934C30", Offset = "0x934C30", VA = "0x934C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x934D44", Offset = "0x934D44", VA = "0x934D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62C0", Offset = "0x6D62C0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x93466C", Offset = "0x93466C", VA = "0x93466C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x9346B4", Offset = "0x9346B4", VA = "0x9346B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x9344E4", Offset = "0x9344E4", VA = "0x9344E4")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x934510", Offset = "0x934510", VA = "0x934510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x934514", Offset = "0x934514", VA = "0x934514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x934674", Offset = "0x934674", VA = "0x934674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62D0", Offset = "0x6D62D0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x934798", Offset = "0x934798", VA = "0x934798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x9347E0", Offset = "0x9347E0", VA = "0x9347E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x9346BC", Offset = "0x9346BC", VA = "0x9346BC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x9346E8", Offset = "0x9346E8", VA = "0x9346E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x9346EC", Offset = "0x9346EC", VA = "0x9346EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x9347A0", Offset = "0x9347A0", VA = "0x9347A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62E0", Offset = "0x6D62E0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x934BB0", Offset = "0x934BB0", VA = "0x934BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x934BF8", Offset = "0x934BF8", VA = "0x934BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x934A94", Offset = "0x934A94", VA = "0x934A94")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x934AC0", Offset = "0x934AC0", VA = "0x934AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x934AC4", Offset = "0x934AC4", VA = "0x934AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x934BB8", Offset = "0x934BB8", VA = "0x934BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D62F0", Offset = "0x6D62F0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x9348C4", Offset = "0x9348C4", VA = "0x9348C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x93490C", Offset = "0x93490C", VA = "0x93490C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x9347E8", Offset = "0x9347E8", VA = "0x9347E8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x934814", Offset = "0x934814", VA = "0x934814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x934818", Offset = "0x934818", VA = "0x934818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x9348CC", Offset = "0x9348CC", VA = "0x9348CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6300", Offset = "0x6D6300")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x934EA0", Offset = "0x934EA0", VA = "0x934EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x934EE8", Offset = "0x934EE8", VA = "0x934EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x934D8C", Offset = "0x934D8C", VA = "0x934D8C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x934DB8", Offset = "0x934DB8", VA = "0x934DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x934DBC", Offset = "0x934DBC", VA = "0x934DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x934EA8", Offset = "0x934EA8", VA = "0x934EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6310", Offset = "0x6D6310")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x934A44", Offset = "0x934A44", VA = "0x934A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x934A8C", Offset = "0x934A8C", VA = "0x934A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x934914", Offset = "0x934914", VA = "0x934914")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x934940", Offset = "0x934940", VA = "0x934940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x934944", Offset = "0x934944", VA = "0x934944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x934A4C", Offset = "0x934A4C", VA = "0x934A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8F9C", Offset = "0x6D8F9C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D8FD4", Offset = "0x6D8FD4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D900C", Offset = "0x6D900C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9044", Offset = "0x6D9044")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D907C", Offset = "0x6D907C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D90B4", Offset = "0x6D90B4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D90EC", Offset = "0x6D90EC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9124", Offset = "0x6D9124")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D915C", Offset = "0x6D915C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D916C", Offset = "0x6D916C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D91A4", Offset = "0x6D91A4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D91EC", Offset = "0x6D91EC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D91FC", Offset = "0x6D91FC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9234", Offset = "0x6D9234")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D926C", Offset = "0x6D926C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D92A4", Offset = "0x6D92A4")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000EC")]
	public States CurrentState
	{
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x9C3A0C", Offset = "0x9C3A0C", VA = "0x9C3A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0820", Offset = "0x6E0820")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x9C3A14", Offset = "0x9C3A14", VA = "0x9C3A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0830", Offset = "0x6E0830")]
		private set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x9C3C38", Offset = "0x9C3C38", VA = "0x9C3C38")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000EE")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x9C3C60", Offset = "0x9C3C60", VA = "0x9C3C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0860", Offset = "0x6E0860")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x9C3C68", Offset = "0x9C3C68", VA = "0x9C3C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0870", Offset = "0x6E0870")]
		private set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x9C3A1C", Offset = "0x9C3A1C", VA = "0x9C3A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0840", Offset = "0x6E0840")]
		add
		{
		}
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x9C3ABC", Offset = "0x9C3ABC", VA = "0x9C3ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0850", Offset = "0x6E0850")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x9C42A8", Offset = "0x9C42A8", VA = "0x9C42A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E08B8", Offset = "0x6E08B8")]
		add
		{
		}
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x9C4348", Offset = "0x9C4348", VA = "0x9C4348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E08C8", Offset = "0x6E08C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x9C43E8", Offset = "0x9C43E8", VA = "0x9C43E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0938", Offset = "0x6E0938")]
		add
		{
		}
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x9C4488", Offset = "0x9C4488", VA = "0x9C4488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0948", Offset = "0x6E0948")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x9C4528", Offset = "0x9C4528", VA = "0x9C4528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0958", Offset = "0x6E0958")]
		add
		{
		}
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x9C45C8", Offset = "0x9C45C8", VA = "0x9C45C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0968", Offset = "0x6E0968")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x9C46D8", Offset = "0x9C46D8", VA = "0x9C46D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0978", Offset = "0x6E0978")]
		add
		{
		}
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x9C4778", Offset = "0x9C4778", VA = "0x9C4778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0988", Offset = "0x6E0988")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x9C4890", Offset = "0x9C4890", VA = "0x9C4890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E09F8", Offset = "0x6E09F8")]
		add
		{
		}
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x9C4930", Offset = "0x9C4930", VA = "0x9C4930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0A08", Offset = "0x6E0A08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x9C4A48", Offset = "0x9C4A48", VA = "0x9C4A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0A78", Offset = "0x6E0A78")]
		add
		{
		}
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x9C4AE8", Offset = "0x9C4AE8", VA = "0x9C4AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0A88", Offset = "0x6E0A88")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x9C4C00", Offset = "0x9C4C00", VA = "0x9C4C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0AF8", Offset = "0x6E0AF8")]
		add
		{
		}
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x9C4CA0", Offset = "0x9C4CA0", VA = "0x9C4CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0B08", Offset = "0x6E0B08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x9C4DB8", Offset = "0x9C4DB8", VA = "0x9C4DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0B78", Offset = "0x6E0B78")]
		add
		{
		}
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x9C4E58", Offset = "0x9C4E58", VA = "0x9C4E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0B88", Offset = "0x6E0B88")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x9C4F70", Offset = "0x9C4F70", VA = "0x9C4F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0BF8", Offset = "0x6E0BF8")]
		add
		{
		}
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x9C5010", Offset = "0x9C5010", VA = "0x9C5010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0C08", Offset = "0x6E0C08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x9C5128", Offset = "0x9C5128", VA = "0x9C5128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0C78", Offset = "0x6E0C78")]
		add
		{
		}
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x9C51C8", Offset = "0x9C51C8", VA = "0x9C51C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0C88", Offset = "0x6E0C88")]
		remove
		{
		}
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x9C36B8", Offset = "0x9C36B8", VA = "0x9C36B8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x9C36DC", Offset = "0x9C36DC", VA = "0x9C36DC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x9C3B5C", Offset = "0x9C3B5C", VA = "0x9C3B5C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x9C3C70", Offset = "0x9C3C70", VA = "0x9C3C70")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x9C3EBC", Offset = "0x9C3EBC", VA = "0x9C3EBC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6E0880", Offset = "0x6E0880")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x9C3F70", Offset = "0x9C3F70", VA = "0x9C3F70")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x9C4070", Offset = "0x9C4070", VA = "0x9C4070")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x9C408C", Offset = "0x9C408C", VA = "0x9C408C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x9C4150", Offset = "0x9C4150", VA = "0x9C4150")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x9C4194", Offset = "0x9C4194", VA = "0x9C4194")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x9C41F8", Offset = "0x9C41F8", VA = "0x9C41F8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x9C42A0", Offset = "0x9C42A0", VA = "0x9C42A0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x9C4228", Offset = "0x9C4228", VA = "0x9C4228")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E08D8", Offset = "0x6E08D8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x9C4668", Offset = "0x9C4668", VA = "0x9C4668")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x9C4818", Offset = "0x9C4818", VA = "0x9C4818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0998", Offset = "0x6E0998")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x9C49D0", Offset = "0x9C49D0", VA = "0x9C49D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0A18", Offset = "0x6E0A18")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x9C4B88", Offset = "0x9C4B88", VA = "0x9C4B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0A98", Offset = "0x6E0A98")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x9C4D40", Offset = "0x9C4D40", VA = "0x9C4D40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0B18", Offset = "0x6E0B18")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x9C4EF8", Offset = "0x9C4EF8", VA = "0x9C4EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0B98", Offset = "0x6E0B98")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x9C50B0", Offset = "0x9C50B0", VA = "0x9C50B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0C18", Offset = "0x6E0C18")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x9C5268", Offset = "0x9C5268", VA = "0x9C5268")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x9C53A8", Offset = "0x9C53A8", VA = "0x9C53A8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x9C53DC", Offset = "0x9C53DC", VA = "0x9C53DC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x9C54A4", Offset = "0x9C54A4", VA = "0x9C54A4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x9C559C", Offset = "0x9C559C", VA = "0x9C559C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20002E4")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000E")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0xCFED18", Offset = "0xCFED18", VA = "0xCFED18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0EE8", Offset = "0x6E0EE8")]
		add
		{
		}
		[Token(Token = "0x600111F")]
		[Address(RVA = "0xCFEDB8", Offset = "0xCFEDB8", VA = "0xCFEDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0EF8", Offset = "0x6E0EF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xCFEE58", Offset = "0xCFEE58", VA = "0xCFEE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F08", Offset = "0x6E0F08")]
		add
		{
		}
		[Token(Token = "0x6001121")]
		[Address(RVA = "0xCFEEF8", Offset = "0xCFEEF8", VA = "0xCFEEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F18", Offset = "0x6E0F18")]
		remove
		{
		}
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xCFEF98", Offset = "0xCFEF98", VA = "0xCFEF98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xCFF084", Offset = "0xCFF084", VA = "0xCFF084")]
	private void Start()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xCFF088", Offset = "0xCFF088", VA = "0xCFF088")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xCFF0FC", Offset = "0xCFF0FC", VA = "0xCFF0FC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xCFF220", Offset = "0xCFF220", VA = "0xCFF220")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xCFF408", Offset = "0xCFF408", VA = "0xCFF408")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xCFF610", Offset = "0xCFF610", VA = "0xCFF610")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20002E5")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6001129")]
	[Address(RVA = "0xBBB9A8", Offset = "0xBBB9A8", VA = "0xBBB9A8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xBBBA48", Offset = "0xBBBA48", VA = "0xBBBA48", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600112B")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xBBBB38", Offset = "0xBBBB38", VA = "0xBBBB38")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20002E6")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D93AC", Offset = "0x6D93AC")]
	public float Range;

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xBBBB48", Offset = "0xBBBB48", VA = "0xBBBB48", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xBBBC44", Offset = "0xBBBC44", VA = "0xBBBC44")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20002E7")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D93E4", Offset = "0x6D93E4")]
	public float Range;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D941C", Offset = "0x6D941C")]
	public float MinimumElevation;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9454", Offset = "0x6D9454")]
	public float Gravity;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D948C", Offset = "0x6D948C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D948C", Offset = "0x6D948C")]
	public float AimVelocity;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D94E8", Offset = "0x6D94E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D94E8", Offset = "0x6D94E8")]
	public float AimStep;

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xBBBC54", Offset = "0xBBBC54", VA = "0xBBBC54", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xBBBDE4", Offset = "0xBBBDE4", VA = "0xBBBDE4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20002E8")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9540", Offset = "0x6D9540")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xBBBDF8", Offset = "0xBBBDF8", VA = "0xBBBDF8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xBBBF34", Offset = "0xBBBF34", VA = "0xBBBF34")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xBBBF64", Offset = "0xBBBF64", VA = "0xBBBF64")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xBBBF94", Offset = "0xBBBF94", VA = "0xBBBF94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xBBC044", Offset = "0xBBC044", VA = "0xBBC044", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xBBC0B0", Offset = "0xBBC0B0", VA = "0xBBC0B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xBBC118", Offset = "0xBBC118", VA = "0xBBC118")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20002E9")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9578", Offset = "0x6D9578")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9588", Offset = "0x6D9588")]
	public Transform PositionIndicator;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D95C0", Offset = "0x6D95C0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D95F8", Offset = "0x6D95F8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000FE")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0xBBC23C", Offset = "0xBBC23C", VA = "0xBBC23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F28", Offset = "0x6E0F28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001139")]
		[Address(RVA = "0xBBC244", Offset = "0xBBC244", VA = "0xBBC244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F38", Offset = "0x6E0F38")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBBC400", Offset = "0xBBC400", VA = "0xBBC400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F48", Offset = "0x6E0F48")]
		add
		{
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBBC4A0", Offset = "0xBBC4A0", VA = "0xBBC4A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E0F58", Offset = "0x6E0F58")]
		remove
		{
		}
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xBBC250", Offset = "0xBBC250", VA = "0xBBC250")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xBBC2E8", Offset = "0xBBC2E8", VA = "0xBBC2E8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xBBC3BC", Offset = "0xBBC3BC", VA = "0xBBC3BC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xBBC3FC", Offset = "0xBBC3FC", VA = "0xBBC3FC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xBBC540", Offset = "0xBBC540", VA = "0xBBC540")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xBBC5A4", Offset = "0xBBC5A4", VA = "0xBBC5A4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xBBC5C4", Offset = "0xBBC5C4", VA = "0xBBC5C4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20002EA")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6320", Offset = "0x6D6320")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x117CB4C", Offset = "0x117CB4C", VA = "0x117CB4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x117CB94", Offset = "0x117CB94", VA = "0x117CB94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x117CA84", Offset = "0x117CA84", VA = "0x117CA84")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x117CAB0", Offset = "0x117CAB0", VA = "0x117CAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x117CAB4", Offset = "0x117CAB4", VA = "0x117CAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x117CB54", Offset = "0x117CB54", VA = "0x117CB54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6330", Offset = "0x6D6330")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x117CA34", Offset = "0x117CA34", VA = "0x117CA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x117CA7C", Offset = "0x117CA7C", VA = "0x117CA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x117C968", Offset = "0x117C968", VA = "0x117C968")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x117C994", Offset = "0x117C994", VA = "0x117C994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x117C998", Offset = "0x117C998", VA = "0x117C998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x117CA3C", Offset = "0x117CA3C", VA = "0x117CA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xBBC7D0", Offset = "0xBBC7D0", VA = "0xBBC7D0")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xBBC8A4", Offset = "0xBBC8A4", VA = "0xBBC8A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xBBC904", Offset = "0xBBC904", VA = "0xBBC904", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xBBC9C4", Offset = "0xBBC9C4", VA = "0xBBC9C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0F68", Offset = "0x6E0F68")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xBBCA3C", Offset = "0xBBCA3C", VA = "0xBBCA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E0FC8", Offset = "0x6E0FC8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001148")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6001149")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xBBCAB4", Offset = "0xBBCAB4", VA = "0xBBCAB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2028", Offset = "0x6E2028")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xBBCAE0", Offset = "0xBBCAE0", VA = "0xBBCAE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2038", Offset = "0x6E2038")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20002ED")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9640", Offset = "0x6D9640")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9650", Offset = "0x6D9650")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9688", Offset = "0x6D9688")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D96C0", Offset = "0x6D96C0")]
	public bool FastTeleport;

	[Token(Token = "0x17000103")]
	public Transform Pointer
	{
		[Token(Token = "0x6001158")]
		[Address(RVA = "0xBBCB0C", Offset = "0xBBCB0C", VA = "0xBBCB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E20E8", Offset = "0x6E20E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBBCB14", Offset = "0xBBCB14", VA = "0xBBCB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E20F8", Offset = "0x6E20F8")]
		private set
		{
		}
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xBBCB1C", Offset = "0xBBCB1C", VA = "0xBBCB1C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xBBCC74", Offset = "0xBBCC74", VA = "0xBBCC74", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xBBCD2C", Offset = "0xBBCD2C", VA = "0xBBCD2C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20002EE")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20002EF")]
	public enum InputModes
	{
		[Token(Token = "0x4001439")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400143A")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400143B")]
		ThumbstickTeleport,
		[Token(Token = "0x400143C")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20002F0")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400143E")]
		A,
		[Token(Token = "0x400143F")]
		B,
		[Token(Token = "0x4001440")]
		LeftTrigger,
		[Token(Token = "0x4001441")]
		LeftThumbstick,
		[Token(Token = "0x4001442")]
		RightTrigger,
		[Token(Token = "0x4001443")]
		RightThumbstick,
		[Token(Token = "0x4001444")]
		X,
		[Token(Token = "0x4001445")]
		Y
	}

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D96F8", Offset = "0x6D96F8")]
	public InputModes InputMode;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9730", Offset = "0x6D9730")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9768", Offset = "0x6D9768")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D97A0", Offset = "0x6D97A0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xBBCD30", Offset = "0xBBCD30", VA = "0xBBCD30")]
	private void Start()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xBBCD34", Offset = "0xBBCD34", VA = "0xBBCD34", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xBBD11C", Offset = "0xBBD11C", VA = "0xBBD11C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xBBD1DC", Offset = "0xBBD1DC", VA = "0xBBD1DC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20002F1")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20002F2")]
	public enum OrientationModes
	{
		[Token(Token = "0x400144A")]
		HeadRelative,
		[Token(Token = "0x400144B")]
		ForwardFacing
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6340", Offset = "0x6D6340")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x117CC7C", Offset = "0x117CC7C", VA = "0x117CC7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x117CCC4", Offset = "0x117CCC4", VA = "0x117CCC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x117CB9C", Offset = "0x117CB9C", VA = "0x117CB9C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x117CBC8", Offset = "0x117CBC8", VA = "0x117CBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x117CBCC", Offset = "0x117CBCC", VA = "0x117CBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x117CC84", Offset = "0x117CC84", VA = "0x117CC84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xBBD2C0", Offset = "0xBBD2C0", VA = "0xBBD2C0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xBBD3B4", Offset = "0xBBD3B4", VA = "0xBBD3B4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xBBD3BC", Offset = "0xBBD3BC", VA = "0xBBD3BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xBBD408", Offset = "0xBBD408", VA = "0xBBD408", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xBBD450", Offset = "0xBBD450", VA = "0xBBD450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2108", Offset = "0x6E2108")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001166")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6001167")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xBBD4C8", Offset = "0xBBD4C8", VA = "0xBBD4C8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xBBD584", Offset = "0xBBD584", VA = "0xBBD584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2168", Offset = "0x6E2168")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20002F4")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6001170")]
	[Address(RVA = "0xBBD5B0", Offset = "0xBBD5B0", VA = "0xBBD5B0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xBBD5B4", Offset = "0xBBD5B4", VA = "0xBBD5B4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xBBD630", Offset = "0xBBD630", VA = "0xBBD630")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20002F5")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D97D8", Offset = "0x6D97D8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9810", Offset = "0x6D9810")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9848", Offset = "0x6D9848")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9880", Offset = "0x6D9880")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xBBD634", Offset = "0xBBD634", VA = "0xBBD634", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xBBD660", Offset = "0xBBD660", VA = "0xBBD660", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xBBDA10", Offset = "0xBBDA10", VA = "0xBBDA10")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20002F6")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D98B8", Offset = "0x6D98B8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D98F0", Offset = "0x6D98F0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9928", Offset = "0x6D9928")]
	public float RotateStickThreshold;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xBBDA14", Offset = "0xBBDA14", VA = "0xBBDA14", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xBBDA58", Offset = "0xBBDA58", VA = "0xBBDA58", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xBBDE00", Offset = "0xBBDE00", VA = "0xBBDE00")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20002F7")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xBBDE10", Offset = "0xBBDE10", VA = "0xBBDE10")]
	private void Start()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xBBDE14", Offset = "0xBBDE14", VA = "0xBBDE14")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xBBDE1C", Offset = "0xBBDE1C", VA = "0xBBDE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xBBDED8", Offset = "0xBBDED8", VA = "0xBBDED8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xBBDF00", Offset = "0xBBDF00", VA = "0xBBDF00")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20002F8")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9960", Offset = "0x6D9960")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000106")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBBDF28", Offset = "0xBBDF28", VA = "0xBBDF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E21C8", Offset = "0x6E21C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xBBDF30", Offset = "0xBBDF30", VA = "0xBBDF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E21D8", Offset = "0x6E21D8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xBBB9DC", Offset = "0xBBB9DC", VA = "0xBBB9DC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xBBBB04", Offset = "0xBBBB04", VA = "0xBBBB04", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xBBDF38", Offset = "0xBBDF38", VA = "0xBBDF38")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6E21E8", Offset = "0x6E21E8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xBBC0A4", Offset = "0xBBC0A4", VA = "0xBBC0A4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xBBC110", Offset = "0xBBC110", VA = "0xBBC110", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xBBBB40", Offset = "0xBBBB40", VA = "0xBBBB40")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20002F9")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6350", Offset = "0x6D6350")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x117CF9C", Offset = "0x117CF9C", VA = "0x117CF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x117CFE4", Offset = "0x117CFE4", VA = "0x117CFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x117CCCC", Offset = "0x117CCCC", VA = "0x117CCCC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x117CCF8", Offset = "0x117CCF8", VA = "0x117CCF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x117CCFC", Offset = "0x117CCFC", VA = "0x117CCFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x117CFA4", Offset = "0x117CFA4", VA = "0x117CFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9970", Offset = "0x6D9970")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4001465")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xC59224", Offset = "0xC59224", VA = "0xC59224")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xC59334", Offset = "0xC59334", VA = "0xC59334", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xC5936C", Offset = "0xC5936C", VA = "0xC5936C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xC593A4", Offset = "0xC593A4", VA = "0xC593A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2220", Offset = "0x6E2220")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xC5941C", Offset = "0xC5941C", VA = "0xC5941C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600118B")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xC59438", Offset = "0xC59438", VA = "0xC59438", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xC59558", Offset = "0xC59558", VA = "0xC59558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2280", Offset = "0x6E2280")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20002FB")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xC59584", Offset = "0xC59584", VA = "0xC59584")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xC595E8", Offset = "0xC595E8", VA = "0xC595E8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xC596E0", Offset = "0xC596E0", VA = "0xC596E0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xC597D8", Offset = "0xC597D8", VA = "0xC597D8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6E22E0", Offset = "0x6E22E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xC597DC", Offset = "0xC597DC", VA = "0xC597DC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20002FC")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D99A8", Offset = "0x6D99A8")]
	public float LOSOffset;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D99E0", Offset = "0x6D99E0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xC597E8", Offset = "0xC597E8", VA = "0xC597E8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xC599F4", Offset = "0xC599F4", VA = "0xC599F4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20002FD")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600119B")]
	[Address(RVA = "0xC59A00", Offset = "0xC59A00", VA = "0xC59A00", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xC59AF8", Offset = "0xC59AF8", VA = "0xC59AF8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20002FE")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600119D")]
	[Address(RVA = "0xC59AFC", Offset = "0xC59AFC", VA = "0xC59AFC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xC59B90", Offset = "0xC59B90", VA = "0xC59B90", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600119F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xC59C24", Offset = "0xC59C24", VA = "0xC59C24")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20002FF")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6360", Offset = "0x6D6360")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x117D124", Offset = "0x117D124", VA = "0x117D124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x117D16C", Offset = "0x117D16C", VA = "0x117D16C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x117CFEC", Offset = "0x117CFEC", VA = "0x117CFEC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x117D018", Offset = "0x117D018", VA = "0x117D018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x117D01C", Offset = "0x117D01C", VA = "0x117D01C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x117D12C", Offset = "0x117D12C", VA = "0x117D12C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9A18", Offset = "0x6D9A18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9A18", Offset = "0x6D9A18")]
	public float TransitionDuration;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9A70", Offset = "0x6D9A70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9A70", Offset = "0x6D9A70")]
	public float TeleportDelay;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9AC4", Offset = "0x6D9AC4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xC59C2C", Offset = "0xC59C2C", VA = "0xC59C2C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xC59C58", Offset = "0xC59C58", VA = "0xC59C58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2318", Offset = "0x6E2318")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xC59CD0", Offset = "0xC59CD0", VA = "0xC59CD0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000301")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xC59E7C", Offset = "0xC59E7C", VA = "0xC59E7C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xC59E98", Offset = "0xC59E98", VA = "0xC59E98")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000302")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6370", Offset = "0x6D6370")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x117D2E0", Offset = "0x117D2E0", VA = "0x117D2E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x117D328", Offset = "0x117D328", VA = "0x117D328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x117D174", Offset = "0x117D174", VA = "0x117D174")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x117D1A0", Offset = "0x117D1A0", VA = "0x117D1A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x117D1A4", Offset = "0x117D1A4", VA = "0x117D1A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x117D2E8", Offset = "0x117D2E8", VA = "0x117D2E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9AFC", Offset = "0x6D9AFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9AFC", Offset = "0x6D9AFC")]
	public float TransitionDuration;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xC59EA0", Offset = "0xC59EA0", VA = "0xC59EA0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xC59ECC", Offset = "0xC59ECC", VA = "0xC59ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E23C8", Offset = "0x6E23C8")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xC59F44", Offset = "0xC59F44", VA = "0xC59F44")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000304")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000305")]
	public enum PlabackState
	{
		[Token(Token = "0x4001495")]
		Idle = 1,
		[Token(Token = "0x4001496")]
		Preparing,
		[Token(Token = "0x4001497")]
		Buffering,
		[Token(Token = "0x4001498")]
		Ready,
		[Token(Token = "0x4001499")]
		Ended
	}

	[Token(Token = "0x2000306")]
	public enum StereoMode
	{
		[Token(Token = "0x400149B")]
		Unknown = -1,
		[Token(Token = "0x400149C")]
		Mono,
		[Token(Token = "0x400149D")]
		TopBottom,
		[Token(Token = "0x400149E")]
		LeftRight,
		[Token(Token = "0x400149F")]
		Mesh
	}

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700010D")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC22BFC", Offset = "0xC22BFC", VA = "0xC22BFC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700010E")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xC22F2C", Offset = "0xC22F2C", VA = "0xC22F2C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700010F")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xC1EAC4", Offset = "0xC1EAC4", VA = "0xC1EAC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000110")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xC202C0", Offset = "0xC202C0", VA = "0xC202C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000111")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xC231FC", Offset = "0xC231FC", VA = "0xC231FC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000112")]
	public static long Duration
	{
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xC204E4", Offset = "0xC204E4", VA = "0xC204E4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000113")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xC1F0EC", Offset = "0xC1F0EC", VA = "0xC1F0EC")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000114")]
	public static int VideoWidth
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC1EEC4", Offset = "0xC1EEC4", VA = "0xC1EEC4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000115")]
	public static int VideoHeight
	{
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC1EFD8", Offset = "0xC1EFD8", VA = "0xC1EFD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000116")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xC203D0", Offset = "0xC203D0", VA = "0xC203D0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xC1F9A4", Offset = "0xC1F9A4", VA = "0xC1F9A4")]
		set
		{
		}
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xC23310", Offset = "0xC23310", VA = "0xC23310")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xC208B4", Offset = "0xC208B4", VA = "0xC208B4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xC1F5F0", Offset = "0xC1F5F0", VA = "0xC1F5F0")]
	public static void Play()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xC1F790", Offset = "0xC1F790", VA = "0xC1F790")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xC206AC", Offset = "0xC206AC", VA = "0xC206AC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xC2353C", Offset = "0xC2353C", VA = "0xC2353C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xC200D0", Offset = "0xC200D0", VA = "0xC200D0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000307")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000011")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB6CC64", Offset = "0xB6CC64", VA = "0xB6CC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2478", Offset = "0x6E2478")]
		add
		{
		}
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB6CD04", Offset = "0xB6CD04", VA = "0xB6CD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2488", Offset = "0x6E2488")]
		remove
		{
		}
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xB6CDA4", Offset = "0xB6CDA4", VA = "0xB6CDA4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xB6CDB8", Offset = "0xB6CDB8", VA = "0xB6CDB8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000308")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000309")]
	public enum ButtonType
	{
		[Token(Token = "0x40014A3")]
		Play,
		[Token(Token = "0x40014A4")]
		Pause,
		[Token(Token = "0x40014A5")]
		FastForward,
		[Token(Token = "0x40014A6")]
		Rewind,
		[Token(Token = "0x40014A7")]
		SkipForward,
		[Token(Token = "0x40014A8")]
		SkipBack,
		[Token(Token = "0x40014A9")]
		Stop
	}

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000117")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x9C8DB0", Offset = "0x9C8DB0", VA = "0x9C8DB0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x9C8DB8", Offset = "0x9C8DB8", VA = "0x9C8DB8")]
		set
		{
		}
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x9C8DDC", Offset = "0x9C8DDC", VA = "0x9C8DDC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x9CA274", Offset = "0x9CA274", VA = "0x9CA274")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200030A")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200030B")]
	public enum VideoShape
	{
		[Token(Token = "0x40014BE")]
		_360,
		[Token(Token = "0x40014BF")]
		_180,
		[Token(Token = "0x40014C0")]
		Quad
	}

	[Token(Token = "0x200030C")]
	public enum VideoStereo
	{
		[Token(Token = "0x40014C2")]
		Mono,
		[Token(Token = "0x40014C3")]
		TopBottom,
		[Token(Token = "0x40014C4")]
		LeftRight,
		[Token(Token = "0x40014C5")]
		BottomTop
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6380", Offset = "0x6D6380")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x9373C8", Offset = "0x9373C8", VA = "0x9373C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x937410", Offset = "0x937410", VA = "0x937410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x9371D4", Offset = "0x9371D4", VA = "0x9371D4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x937200", Offset = "0x937200", VA = "0x937200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x937204", Offset = "0x937204", VA = "0x937204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x9373D0", Offset = "0x9373D0", VA = "0x9373D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6390", Offset = "0x6D6390")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x9370DC", Offset = "0x9370DC", VA = "0x9370DC")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x9370E4", Offset = "0x9370E4", VA = "0x9370E4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9B84", Offset = "0x6D9B84")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9B94", Offset = "0x6D9B94")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9BA4", Offset = "0x6D9BA4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000118")]
	public bool IsPlaying
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xC1E7E8", Offset = "0xC1E7E8", VA = "0xC1E7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2498", Offset = "0x6E2498")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xC1E7F0", Offset = "0xC1E7F0", VA = "0xC1E7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E24A8", Offset = "0x6E24A8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public long Duration
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xC1E7FC", Offset = "0xC1E7FC", VA = "0xC1E7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E24B8", Offset = "0x6E24B8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC1E804", Offset = "0xC1E804", VA = "0xC1E804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E24C8", Offset = "0x6E24C8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC1E80C", Offset = "0xC1E80C", VA = "0xC1E80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E24D8", Offset = "0x6E24D8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC1E814", Offset = "0xC1E814", VA = "0xC1E814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E24E8", Offset = "0x6E24E8")]
		private set
		{
		}
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xC1E81C", Offset = "0xC1E81C", VA = "0xC1E81C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xC1EB34", Offset = "0xC1EB34", VA = "0xC1EB34")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xC1EB98", Offset = "0xC1EB98", VA = "0xC1EB98")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xC1F200", Offset = "0xC1F200", VA = "0xC1F200")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E24F8", Offset = "0x6E24F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xC1F278", Offset = "0xC1F278", VA = "0xC1F278")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xC1F560", Offset = "0xC1F560", VA = "0xC1F560")]
	public void Play()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xC1F704", Offset = "0xC1F704", VA = "0xC1F704")]
	public void Pause()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xC1F8A4", Offset = "0xC1F8A4", VA = "0xC1F8A4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xC1FB18", Offset = "0xC1FB18", VA = "0xC1FB18")]
	private void Update()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xC205F8", Offset = "0xC205F8", VA = "0xC205F8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xC20828", Offset = "0xC20828", VA = "0xC20828")]
	public void Stop()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xC209C8", Offset = "0xC209C8", VA = "0xC209C8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xC20AB4", Offset = "0xC20AB4", VA = "0xC20AB4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200030F")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	private enum PlaybackState
	{
		[Token(Token = "0x40014E2")]
		Playing,
		[Token(Token = "0x40014E3")]
		Paused,
		[Token(Token = "0x40014E4")]
		Rewinding,
		[Token(Token = "0x40014E5")]
		FastForwarding
	}

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xC20AC4", Offset = "0xC20AC4", VA = "0xC20AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xC20DD0", Offset = "0xC20DD0", VA = "0xC20DD0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xC20EFC", Offset = "0xC20EFC", VA = "0xC20EFC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xC21008", Offset = "0xC21008", VA = "0xC21008")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xC210E8", Offset = "0xC210E8", VA = "0xC210E8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xC20FDC", Offset = "0xC20FDC", VA = "0xC20FDC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xC21148", Offset = "0xC21148", VA = "0xC21148")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xC20CBC", Offset = "0xC20CBC", VA = "0xC20CBC")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xC214AC", Offset = "0xC214AC", VA = "0xC214AC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000311")]
public static class VectorUtil
{
	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x1B13C20", Offset = "0x1B13C20", VA = "0x1B13C20")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000312")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40014E6")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40014E7")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xCC7638", Offset = "0xCC7638", VA = "0xCC7638")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xCC7A4C", Offset = "0xCC7A4C", VA = "0xCC7A4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xCC7CD8", Offset = "0xCC7CD8", VA = "0xCC7CD8")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xCC7E40", Offset = "0xCC7E40", VA = "0xCC7E40")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xCC7FAC", Offset = "0xCC7FAC", VA = "0xCC7FAC")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xCC813C", Offset = "0xCC813C", VA = "0xCC813C")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000313")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40014F0")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xD8AAA0", Offset = "0xD8AAA0", VA = "0xD8AAA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xD8AAF4", Offset = "0xD8AAF4", VA = "0xD8AAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xD8AAF8", Offset = "0xD8AAF8", VA = "0xD8AAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xD8AAFC", Offset = "0xD8AAFC", VA = "0xD8AAFC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xD8AD70", Offset = "0xD8AD70", VA = "0xD8AD70")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xD8AFA0", Offset = "0xD8AFA0", VA = "0xD8AFA0")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000314")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x919A94", Offset = "0x919A94", VA = "0x919A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x919FEC", Offset = "0x919FEC", VA = "0x919FEC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x91A0AC", Offset = "0x91A0AC", VA = "0x91A0AC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x91A32C", Offset = "0x91A32C", VA = "0x91A32C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x91A40C", Offset = "0x91A40C", VA = "0x91A40C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x91A4F8", Offset = "0x91A4F8", VA = "0x91A4F8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x91A56C", Offset = "0x91A56C", VA = "0x91A56C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x91A574", Offset = "0x91A574", VA = "0x91A574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E25B8", Offset = "0x6E25B8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x91A5D8", Offset = "0x91A5D8", VA = "0x91A5D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E25C8", Offset = "0x6E25C8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x91A63C", Offset = "0x91A63C", VA = "0x91A63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E25D8", Offset = "0x6E25D8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x91A6A0", Offset = "0x91A6A0", VA = "0x91A6A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E25E8", Offset = "0x6E25E8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000315")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x600120C")]
	[Address(RVA = "0xCBB7E8", Offset = "0xCBB7E8", VA = "0xCBB7E8")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000316")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xA7084C", Offset = "0xA7084C", VA = "0xA7084C")]
	private void Start()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xA708F0", Offset = "0xA708F0", VA = "0xA708F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xA709DC", Offset = "0xA709DC", VA = "0xA709DC")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xA70A3C", Offset = "0xA70A3C", VA = "0xA70A3C")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000317")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6001211")]
	[Address(RVA = "0xBAFE18", Offset = "0xBAFE18", VA = "0xBAFE18")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000318")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9BC4", Offset = "0x6D9BC4")]
	public int SubdivisionsU;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9BE0", Offset = "0x6D9BE0")]
	public int SubdivisionsV;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xD8044C", Offset = "0xD8044C", VA = "0xD8044C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xD80E94", Offset = "0xD80E94", VA = "0xD80E94")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000319")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700011D")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x9C2F18", Offset = "0x9C2F18", VA = "0x9C2F18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x9C2F6C", Offset = "0x9C2F6C", VA = "0x9C2F6C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x9C3394", Offset = "0x9C3394", VA = "0x9C3394")]
	public void Update()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x9C3480", Offset = "0x9C3480", VA = "0x9C3480")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6E25F8", Offset = "0x6E25F8")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6001218")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001219")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600121A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600121B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600121C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600121D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600121E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600121F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x9C34E4", Offset = "0x9C34E4", VA = "0x9C34E4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x9C3520", Offset = "0x9C3520", VA = "0x9C3520")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x9C3590", Offset = "0x9C3590", VA = "0x9C3590")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x9C3700", Offset = "0x9C3700", VA = "0x9C3700")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x9C37DC", Offset = "0x9C37DC", VA = "0x9C37DC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x9C328C", Offset = "0x9C328C", VA = "0x9C328C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x9C38A4", Offset = "0x9C38A4", VA = "0x9C38A4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x9C390C", Offset = "0x9C390C", VA = "0x9C390C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x9C3A04", Offset = "0x9C3A04", VA = "0x9C3A04")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200031A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D63C0", Offset = "0x6D63C0")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200031B")]
	public enum DrawMode
	{
		[Token(Token = "0x4001518")]
		Opaque,
		[Token(Token = "0x4001519")]
		OpaqueWithClip,
		[Token(Token = "0x400151A")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400151B")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700011E")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC2831C", Offset = "0xC2831C", VA = "0xC2831C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC283AC", Offset = "0xC283AC", VA = "0xC283AC")]
		set
		{
		}
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xC26D98", Offset = "0xC26D98", VA = "0xC26D98")]
	private void Start()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xC27988", Offset = "0xC27988", VA = "0xC27988")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xC27A08", Offset = "0xC27A08", VA = "0xC27A08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xC27AF8", Offset = "0xC27AF8", VA = "0xC27AF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xC27BE8", Offset = "0xC27BE8", VA = "0xC27BE8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xC27DF4", Offset = "0xC27DF4", VA = "0xC27DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xC28478", Offset = "0xC28478", VA = "0xC28478")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200031C")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xB59BC8", Offset = "0xB59BC8", VA = "0xB59BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xB59DB0", Offset = "0xB59DB0", VA = "0xB59DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xB59F38", Offset = "0xB59F38", VA = "0xB59F38")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xB59F40", Offset = "0xB59F40", VA = "0xB59F40")]
	public void Release()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xB59F28", Offset = "0xB59F28", VA = "0xB59F28")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xB59F48", Offset = "0xB59F48", VA = "0xB59F48")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200031D")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6420", Offset = "0x6D6420")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x9FBE40", Offset = "0x9FBE40", VA = "0x9FBE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x9FBE88", Offset = "0x9FBE88", VA = "0x9FBE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x9FBD10", Offset = "0x9FBD10", VA = "0x9FBD10")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x9FBD3C", Offset = "0x9FBD3C", VA = "0x9FBD3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x9FBD40", Offset = "0x9FBD40", VA = "0x9FBD40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x9FBE48", Offset = "0x9FBE48", VA = "0x9FBE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6430", Offset = "0x6D6430")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x9FC048", Offset = "0x9FC048", VA = "0x9FC048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x9FC090", Offset = "0x9FC090", VA = "0x9FC090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x9FBE90", Offset = "0x9FBE90", VA = "0x9FBE90")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x9FBEBC", Offset = "0x9FBEBC", VA = "0x9FBEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x9FBEC0", Offset = "0x9FBEC0", VA = "0x9FBEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x9FC050", Offset = "0x9FC050", VA = "0x9FC050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xB6B8C4", Offset = "0xB6B8C4", VA = "0xB6B8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xB6BB98", Offset = "0xB6BB98", VA = "0xB6BB98")]
	private void Update()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xB6BBF4", Offset = "0xB6BBF4", VA = "0xB6BBF4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xB6BD74", Offset = "0xB6BD74", VA = "0xB6BD74")]
	public void Release()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xB6BE48", Offset = "0xB6BE48", VA = "0xB6BE48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2630", Offset = "0x6E2630")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xB6BCB0", Offset = "0xB6BCB0", VA = "0xB6BCB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2690", Offset = "0x6E2690")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xB6BEE4", Offset = "0xB6BEE4", VA = "0xB6BEE4")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000320")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600124C")]
	[Address(RVA = "0xB44AAC", Offset = "0xB44AAC", VA = "0xB44AAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xB44B0C", Offset = "0xB44B0C", VA = "0xB44B0C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000321")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xB50C1C", Offset = "0xB50C1C", VA = "0xB50C1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xB50D50", Offset = "0xB50D50", VA = "0xB50D50")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xB50DE4", Offset = "0xB50DE4", VA = "0xB50DE4")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xB50E4C", Offset = "0xB50E4C", VA = "0xB50E4C")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000322")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6440", Offset = "0x6D6440")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x9FF5A8", Offset = "0x9FF5A8", VA = "0x9FF5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x9FF5F0", Offset = "0x9FF5F0", VA = "0x9FF5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x9FF39C", Offset = "0x9FF39C", VA = "0x9FF39C")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x9FF3C8", Offset = "0x9FF3C8", VA = "0x9FF3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x9FF3CC", Offset = "0x9FF3CC", VA = "0x9FF3CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x9FF5B0", Offset = "0x9FF5B0", VA = "0x9FF5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xB50E54", Offset = "0xB50E54", VA = "0xB50E54")]
	private void Start()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xB51138", Offset = "0xB51138", VA = "0xB51138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xB51488", Offset = "0xB51488", VA = "0xB51488")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xB517E4", Offset = "0xB517E4", VA = "0xB517E4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xB51AE8", Offset = "0xB51AE8", VA = "0xB51AE8")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xB51BDC", Offset = "0xB51BDC", VA = "0xB51BDC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xB51DA8", Offset = "0xB51DA8", VA = "0xB51DA8")]
	public void Release()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xB51CF4", Offset = "0xB51CF4", VA = "0xB51CF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2790", Offset = "0x6E2790")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xB51E90", Offset = "0xB51E90", VA = "0xB51E90")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000324")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	public enum ManipulationType
	{
		[Token(Token = "0x4001550")]
		Default,
		[Token(Token = "0x4001551")]
		ForcedHand,
		[Token(Token = "0x4001552")]
		DollyHand,
		[Token(Token = "0x4001553")]
		DollyAttached,
		[Token(Token = "0x4001554")]
		HorizontalScaled,
		[Token(Token = "0x4001555")]
		VerticalScaled,
		[Token(Token = "0x4001556")]
		Menu
	}

	[Token(Token = "0x2000326")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000327")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000328")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D9C6C", Offset = "0x6D9C6C")]
	public string ObjectName;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6D9C7C", Offset = "0x6D9C7C")]
	public string ObjectInstructions;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xE82088", Offset = "0xE82088", VA = "0xE82088")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xE820E4", Offset = "0xE820E4", VA = "0xE820E4")]
	public void Release()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xE820F8", Offset = "0xE820F8", VA = "0xE820F8")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xE8210C", Offset = "0xE8210C", VA = "0xE8210C")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000329")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9C9C", Offset = "0x6D9C9C")]
	public int radialDivisions;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9CD4", Offset = "0x6D9CD4")]
	public float borderSize;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9D0C", Offset = "0x6D9D0C")]
	public float fingerTaper;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9D44", Offset = "0x6D9D44")]
	public float fingerTipLength;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9D7C", Offset = "0x6D9D7C")]
	public float webOffset;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xE8634C", Offset = "0xE8634C", VA = "0xE8634C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xE8654C", Offset = "0xE8654C", VA = "0xE8654C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xE86758", Offset = "0xE86758", VA = "0xE86758")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xE86DDC", Offset = "0xE86DDC", VA = "0xE86DDC")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xE8740C", Offset = "0xE8740C", VA = "0xE8740C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xE89A88", Offset = "0xE89A88", VA = "0xE89A88")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xE89B44", Offset = "0xE89B44", VA = "0xE89B44")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x200032A")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xE89B68", Offset = "0xE89B68", VA = "0xE89B68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xE89EA0", Offset = "0xE89EA0", VA = "0xE89EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xE89C10", Offset = "0xE89C10", VA = "0xE89C10")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xE8A290", Offset = "0xE8A290", VA = "0xE8A290")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xE8A780", Offset = "0xE8A780", VA = "0xE8A780")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200032B")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6450", Offset = "0x6D6450")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x9385B4", Offset = "0x9385B4", VA = "0x9385B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x9385FC", Offset = "0x9385FC", VA = "0x9385FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x9382E4", Offset = "0x9382E4", VA = "0x9382E4")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x938310", Offset = "0x938310", VA = "0x938310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x938314", Offset = "0x938314", VA = "0x938314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x9385BC", Offset = "0x9385BC", VA = "0x9385BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xC2AAE8", Offset = "0xC2AAE8", VA = "0xC2AAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xC2AD20", Offset = "0xC2AD20", VA = "0xC2AD20")]
	private void Update()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xC2B970", Offset = "0xC2B970", VA = "0xC2B970")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xC2C578", Offset = "0xC2C578", VA = "0xC2C578")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xC2ACA8", Offset = "0xC2ACA8", VA = "0xC2ACA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2840", Offset = "0x6E2840")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xC2AF8C", Offset = "0xC2AF8C", VA = "0xC2AF8C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xC2BC34", Offset = "0xC2BC34", VA = "0xC2BC34")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xC2C83C", Offset = "0xC2C83C", VA = "0xC2C83C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xC2C8C8", Offset = "0xC2C8C8", VA = "0xC2C8C8")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xC2C8F8", Offset = "0xC2C8F8", VA = "0xC2C8F8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xC2C704", Offset = "0xC2C704", VA = "0xC2C704")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xC2CA1C", Offset = "0xC2CA1C", VA = "0xC2CA1C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200032D")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x1280168", Offset = "0x1280168", VA = "0x1280168")]
	private void Start()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x1280300", Offset = "0x1280300", VA = "0x1280300")]
	private void Update()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x12803C8", Offset = "0x12803C8", VA = "0x12803C8")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200032E")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	public enum BrushState
	{
		[Token(Token = "0x4001593")]
		Idle,
		[Token(Token = "0x4001594")]
		Inking
	}

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x128CE80", Offset = "0x128CE80", VA = "0x128CE80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x128CE88", Offset = "0x128CE88", VA = "0x128CE88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x128D170", Offset = "0x128D170", VA = "0x128D170")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x128D368", Offset = "0x128D368", VA = "0x128D368")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x128D510", Offset = "0x128D510", VA = "0x128D510")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x128D07C", Offset = "0x128D07C", VA = "0x128D07C")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x128D5EC", Offset = "0x128D5EC", VA = "0x128D5EC")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000330")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x128D684", Offset = "0x128D684", VA = "0x128D684")]
	private void Start()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x128D81C", Offset = "0x128D81C", VA = "0x128D81C")]
	private void Update()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x128D984", Offset = "0x128D984", VA = "0x128D984")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000331")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x128D998", Offset = "0x128D998", VA = "0x128D998")]
	private void Start()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x128DBAC", Offset = "0x128DBAC", VA = "0x128DBAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x128DD7C", Offset = "0x128DD7C", VA = "0x128DD7C")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000332")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6460", Offset = "0x6D6460")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x9392C0", Offset = "0x9392C0", VA = "0x9392C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x939308", Offset = "0x939308", VA = "0x939308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x93910C", Offset = "0x93910C", VA = "0x93910C")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x939138", Offset = "0x939138", VA = "0x939138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x93913C", Offset = "0x93913C", VA = "0x93913C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x9392C8", Offset = "0x9392C8", VA = "0x9392C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6470", Offset = "0x6D6470")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x939504", Offset = "0x939504", VA = "0x939504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x93954C", Offset = "0x93954C", VA = "0x93954C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x939310", Offset = "0x939310", VA = "0x939310")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x93933C", Offset = "0x93933C", VA = "0x93933C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x939340", Offset = "0x939340", VA = "0x939340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x93950C", Offset = "0x93950C", VA = "0x93950C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x128DD84", Offset = "0x128DD84", VA = "0x128DD84")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x128E0D0", Offset = "0x128E0D0", VA = "0x128E0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x128E328", Offset = "0x128E328", VA = "0x128E328")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x128E4AC", Offset = "0x128E4AC", VA = "0x128E4AC")]
	public void Release()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x128E424", Offset = "0x128E424", VA = "0x128E424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E28F0", Offset = "0x6E28F0")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x128E59C", Offset = "0x128E59C", VA = "0x128E59C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2950", Offset = "0x6E2950")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x128E624", Offset = "0x128E624", VA = "0x128E624")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x128E644", Offset = "0x128E644", VA = "0x128E644")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x128E664", Offset = "0x128E664", VA = "0x128E664")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x128E054", Offset = "0x128E054", VA = "0x128E054")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x128E6C8", Offset = "0x128E6C8", VA = "0x128E6C8")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x128E6D4", Offset = "0x128E6D4", VA = "0x128E6D4")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x128E0E8", Offset = "0x128E0E8", VA = "0x128E0E8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x128E6E0", Offset = "0x128E6E0", VA = "0x128E6E0")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000335")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x128E724", Offset = "0x128E724", VA = "0x128E724")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x128E7E4", Offset = "0x128E7E4", VA = "0x128E7E4")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000336")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xA6FB90", Offset = "0xA6FB90", VA = "0xA6FB90")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xA6FDD4", Offset = "0xA6FDD4", VA = "0xA6FDD4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xA6FE2C", Offset = "0xA6FE2C", VA = "0xA6FE2C")]
	public void Release()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xA6FE78", Offset = "0xA6FE78", VA = "0xA6FE78")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000337")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xD424BC", Offset = "0xD424BC", VA = "0xD424BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xD42534", Offset = "0xD42534", VA = "0xD42534")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xD42858", Offset = "0xD42858", VA = "0xD42858")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000338")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xD47E7C", Offset = "0xD47E7C", VA = "0xD47E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xD48304", Offset = "0xD48304", VA = "0xD48304")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000339")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6480", Offset = "0x6D6480")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x9FBC74", Offset = "0x9FBC74", VA = "0x9FBC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x9FBCBC", Offset = "0x9FBCBC", VA = "0x9FBCBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x9FBB48", Offset = "0x9FBB48", VA = "0x9FBB48")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x9FBB74", Offset = "0x9FBB74", VA = "0x9FBB74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x9FBB78", Offset = "0x9FBB78", VA = "0x9FBB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x9FBC7C", Offset = "0x9FBC7C", VA = "0x9FBC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xB69F70", Offset = "0xB69F70", VA = "0xB69F70")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xB69F94", Offset = "0xB69F94", VA = "0xB69F94")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xB6A0B4", Offset = "0xB6A0B4", VA = "0xB6A0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xB6A168", Offset = "0xB6A168", VA = "0xB6A168")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xB6A394", Offset = "0xB6A394", VA = "0xB6A394")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xB6A44C", Offset = "0xB6A44C", VA = "0xB6A44C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xB6A30C", Offset = "0xB6A30C", VA = "0xB6A30C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2A50", Offset = "0x6E2A50")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xB6A56C", Offset = "0xB6A56C", VA = "0xB6A56C")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x200033B")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xB6A584", Offset = "0xB6A584", VA = "0xB6A584")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xB6A8A0", Offset = "0xB6A8A0", VA = "0xB6A8A0")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x200033C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6490", Offset = "0x6D6490")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x6D6490", Offset = "0x6D6490")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6D9E54", Offset = "0x6D9E54")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xB538C8", Offset = "0xB538C8", VA = "0xB538C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xB53AFC", Offset = "0xB53AFC", VA = "0xB53AFC")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xB53F5C", Offset = "0xB53F5C", VA = "0xB53F5C")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xB53964", Offset = "0xB53964", VA = "0xB53964")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xB5415C", Offset = "0xB5415C", VA = "0xB5415C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xB54250", Offset = "0xB54250", VA = "0xB54250")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x200033D")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6504", Offset = "0x6D6504")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x93754C", Offset = "0x93754C", VA = "0x93754C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x937594", Offset = "0x937594", VA = "0x937594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x937418", Offset = "0x937418", VA = "0x937418")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x937444", Offset = "0x937444", VA = "0x937444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x937448", Offset = "0x937448", VA = "0x937448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x937554", Offset = "0x937554", VA = "0x937554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xC21DE4", Offset = "0xC21DE4", VA = "0xC21DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2B00", Offset = "0x6E2B00")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xC21E5C", Offset = "0xC21E5C", VA = "0xC21E5C", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xC21E88", Offset = "0xC21E88", VA = "0xC21E88", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xC21EFC", Offset = "0xC21EFC", VA = "0xC21EFC")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200033F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6514", Offset = "0x6D6514")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x128D98C", Offset = "0x128D98C", VA = "0x128D98C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x128D990", Offset = "0x128D990", VA = "0x128D990")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000340")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xA6F0E8", Offset = "0xA6F0E8", VA = "0xA6F0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xA6F16C", Offset = "0xA6F16C", VA = "0xA6F16C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xA6F1FC", Offset = "0xA6F1FC", VA = "0xA6F1FC")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000341")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	public enum Method
	{
		[Token(Token = "0x40015F0")]
		Adapt,
		[Token(Token = "0x40015F1")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40015F2")]
		Scale,
		[Token(Token = "0x40015F3")]
		None
	}

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6D9E8C", Offset = "0x6D9E8C")]
	public Method ScalingX;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9EA0", Offset = "0x6D9EA0")]
	public float PaddingX;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9EB8", Offset = "0x6D9EB8")]
	public float PaddingXMax;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6D9ED0", Offset = "0x6D9ED0")]
	public Method ScalingY;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9EE4", Offset = "0x6D9EE4")]
	public float PaddingY;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9EFC", Offset = "0x6D9EFC")]
	public float PaddingYMax;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6D9F14", Offset = "0x6D9F14")]
	public Method ScalingZ;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9F28", Offset = "0x6D9F28")]
	public float PaddingZ;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6D9F40", Offset = "0x6D9F40")]
	public float PaddingZMax;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9F58", Offset = "0x6D9F58")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9F68", Offset = "0x6D9F68")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D9F78", Offset = "0x6D9F78")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700012F")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD023B0", Offset = "0xD023B0", VA = "0xD023B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000130")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD023CC", Offset = "0xD023CC", VA = "0xD023CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BB0", Offset = "0x6E2BB0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD023D8", Offset = "0xD023D8", VA = "0xD023D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BC0", Offset = "0x6E2BC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD023E4", Offset = "0xD023E4", VA = "0xD023E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BD0", Offset = "0x6E2BD0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD023F0", Offset = "0xD023F0", VA = "0xD023F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BE0", Offset = "0x6E2BE0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public Mesh Mesh
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD023FC", Offset = "0xD023FC", VA = "0xD023FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BF0", Offset = "0x6E2BF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD02404", Offset = "0xD02404", VA = "0xD02404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C00", Offset = "0x6E2C00")]
		private set
		{
		}
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xD0240C", Offset = "0xD0240C", VA = "0xD0240C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xD02554", Offset = "0xD02554", VA = "0xD02554")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000343")]
public class SimpleResizer
{
	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xD0255C", Offset = "0xD0255C", VA = "0xD0255C")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xD02868", Offset = "0xD02868", VA = "0xD02868")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xD02B00", Offset = "0xD02B00", VA = "0xD02B00")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xD02BDC", Offset = "0xD02BDC", VA = "0xD02BDC")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000344")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xBA91A4", Offset = "0xBA91A4", VA = "0xBA91A4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xBA91A8", Offset = "0xBA91A8", VA = "0xBA91A8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xBA960C", Offset = "0xBA960C", VA = "0xBA960C")]
	public Spawnable()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xBA9318", Offset = "0xBA9318", VA = "0xBA9318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C10", Offset = "0x6E2C10")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000345")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6584", Offset = "0x6D6584")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000346")]
	public enum GeometryType
	{
		[Token(Token = "0x40015FB")]
		Plane,
		[Token(Token = "0x40015FC")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000347")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x9F3128", Offset = "0x9F3128", VA = "0x9F3128")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x9F3534", Offset = "0x9F3534", VA = "0x9F3534")]
	private void Start()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x9F3DD8", Offset = "0x9F3DD8", VA = "0x9F3DD8")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x9F3CDC", Offset = "0x9F3CDC", VA = "0x9F3CDC")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x9F3E5C", Offset = "0x9F3E5C", VA = "0x9F3E5C")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000348")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D65E4", Offset = "0x6D65E4")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6644", Offset = "0x6D6644")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x9FAB4C", Offset = "0x9FAB4C", VA = "0x9FAB4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x9FAB94", Offset = "0x9FAB94", VA = "0x9FAB94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x9FA988", Offset = "0x9FA988", VA = "0x9FA988")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x9FA9B4", Offset = "0x9FA9B4", VA = "0x9FA9B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x9FA9B8", Offset = "0x9FA9B8", VA = "0x9FA9B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x9FAB54", Offset = "0x9FAB54", VA = "0x9FAB54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015FF")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6D9FA8", Offset = "0x6D9FA8")]
	private Canvas _canvas;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6D9FF4", Offset = "0x6D9FF4")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA040", Offset = "0x6DA040")]
	private GameObject _anchorMenu;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA08C", Offset = "0x6DA08C")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA0D8", Offset = "0x6DA0D8")]
	private GameObject _saveIcon;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA124", Offset = "0x6DA124")]
	private Image _labelImage;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA170", Offset = "0x6DA170")]
	private Color _labelBaseColor;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA1BC", Offset = "0x6DA1BC")]
	private Color _labelHighlightColor;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA208", Offset = "0x6DA208")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA254", Offset = "0x6DA254")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA2A0", Offset = "0x6DA2A0")]
	[SerializeField]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA2EC", Offset = "0x6DA2EC")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000133")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x6001305")]
		[Address(RVA = "0xCBBEC8", Offset = "0xCBBEC8", VA = "0xCBBEC8")]
		set
		{
		}
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xCBB7F0", Offset = "0xCBB7F0", VA = "0xCBB7F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xCBB968", Offset = "0xCBB968", VA = "0xCBB968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2C20", Offset = "0x6E2C20")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xCBB9E0", Offset = "0xCBB9E0", VA = "0xCBB9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xCBBC60", Offset = "0xCBBC60", VA = "0xCBBC60")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xCBBD58", Offset = "0xCBBD58", VA = "0xCBBD58")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xCBBDD0", Offset = "0xCBBDD0", VA = "0xCBBDD0")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xCBBEE8", Offset = "0xCBBEE8", VA = "0xCBBEE8")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xCBBFF0", Offset = "0xCBBFF0", VA = "0xCBBFF0")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xCBC110", Offset = "0xCBC110", VA = "0xCBC110")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xCBBA3C", Offset = "0xCBBA3C", VA = "0xCBBA3C")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xCBBB50", Offset = "0xCBBB50", VA = "0xCBBB50")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xCBC1E4", Offset = "0xCBC1E4", VA = "0xCBC1E4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xCBC33C", Offset = "0xCBC33C", VA = "0xCBC33C")]
	public Anchor()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xCBC344", Offset = "0xCBC344", VA = "0xCBC344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C80", Offset = "0x6E2C80")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xCBC46C", Offset = "0xCBC46C", VA = "0xCBC46C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C90", Offset = "0x6E2C90")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x200034A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6654", Offset = "0x6D6654")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	public enum AnchorMode
	{
		[Token(Token = "0x4001628")]
		Create,
		[Token(Token = "0x4001629")]
		Select
	}

	[Token(Token = "0x200034C")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA338", Offset = "0x6DA338")]
	[SerializeField]
	private GameObject _createModeButton;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA384", Offset = "0x6DA384")]
	[SerializeField]
	private GameObject _selectModeButton;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA3D0", Offset = "0x6DA3D0")]
	[SerializeField]
	private Transform _trackedDevice;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA41C", Offset = "0x6DA41C")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA468", Offset = "0x6DA468")]
	private List<Button> _buttonList;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA4C4", Offset = "0x6DA4C4")]
	private GameObject _placementPreview;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6DA510", Offset = "0x6DA510")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000136")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x6001315")]
		[Address(RVA = "0xCBC9A4", Offset = "0xCBC9A4", VA = "0xCBC9A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xCBC9AC", Offset = "0xCBC9AC", VA = "0xCBC9AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xCBCA84", Offset = "0xCBCA84", VA = "0xCBCA84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xCBCBF0", Offset = "0xCBCBF0", VA = "0xCBCBF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xCBD044", Offset = "0xCBD044", VA = "0xCBD044")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xCBD0B4", Offset = "0xCBD0B4", VA = "0xCBD0B4")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xCBCB78", Offset = "0xCBCB78", VA = "0xCBCB78")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xCBD13C", Offset = "0xCBD13C", VA = "0xCBD13C")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xCBD1C4", Offset = "0xCBD1C4", VA = "0xCBD1C4")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xCBD1F0", Offset = "0xCBD1F0", VA = "0xCBD1F0")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xCBD110", Offset = "0xCBD110", VA = "0xCBD110")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xCBCF34", Offset = "0xCBCF34", VA = "0xCBCF34")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xCBD32C", Offset = "0xCBD32C", VA = "0xCBD32C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xCBD278", Offset = "0xCBD278", VA = "0xCBD278")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xCBD298", Offset = "0xCBD298", VA = "0xCBD298")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xCBD444", Offset = "0xCBD444", VA = "0xCBD444")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xCBD2B8", Offset = "0xCBD2B8", VA = "0xCBD2B8")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xCBD2F4", Offset = "0xCBD2F4", VA = "0xCBD2F4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xCBCCFC", Offset = "0xCBCCFC", VA = "0xCBCCFC")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xCBD53C", Offset = "0xCBD53C", VA = "0xCBD53C")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xCBD570", Offset = "0xCBD570", VA = "0xCBD570")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xCBD60C", Offset = "0xCBD60C", VA = "0xCBD60C")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xCBD788", Offset = "0xCBD788", VA = "0xCBD788")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200034D")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xBA8A54", Offset = "0xBA8A54", VA = "0xBA8A54")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xBA8E04", Offset = "0xBA8E04", VA = "0xBA8E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xBA8D0C", Offset = "0xBA8D0C", VA = "0xBA8D0C")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xBA8E98", Offset = "0xBA8E98", VA = "0xBA8E98")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xBA8C7C", Offset = "0xBA8C7C", VA = "0xBA8C7C")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xBA904C", Offset = "0xBA904C", VA = "0xBA904C")]
	public SpatialAnchorLoader()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xBA9054", Offset = "0xBA9054", VA = "0xBA9054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CF0", Offset = "0x6E2CF0")]
	private void <Load>b__4_0(OVRSpatialAnchor.UnboundAnchor[] anchors)
	{
	}
}
[Token(Token = "0x200034E")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D66B4", Offset = "0x6D66B4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x117A708", Offset = "0x117A708", VA = "0x117A708")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x117A710", Offset = "0x117A710", VA = "0x117A710")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xBAFE20", Offset = "0xBAFE20", VA = "0xBAFE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xBB003C", Offset = "0xBB003C", VA = "0xBB003C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xBB014C", Offset = "0xBB014C", VA = "0xBB014C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000350")]
public class PAFadeMeIn : MonoBehaviour
{
	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float fadeFact;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool randomizeParticles;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int questParticleCount;

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1284A00", Offset = "0x1284A00", VA = "0x1284A00")]
	public void Awake()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1284A04", Offset = "0x1284A04", VA = "0x1284A04")]
	public void Restart()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1284A0C", Offset = "0x1284A0C", VA = "0x1284A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1284A6C", Offset = "0x1284A6C", VA = "0x1284A6C")]
	public PAFadeMeIn()
	{
	}
}
[Token(Token = "0x2000351")]
public class SpinFree : MonoBehaviour
{
	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DA56C", Offset = "0x6DA56C")]
	public bool spin;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DA5A4", Offset = "0x6DA5A4")]
	public bool spinParent;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool clockwise;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float direction;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float directionChangeSpeed;

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xBAA068", Offset = "0xBAA068", VA = "0xBAA068")]
	private void Update()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xBAA1EC", Offset = "0xBAA1EC", VA = "0xBAA1EC")]
	public SpinFree()
	{
	}
}
[Token(Token = "0x2000352")]
public class PACustomBillboardGenerator : PABillboardParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D66C4", Offset = "0x6D66C4")]
	private sealed class <>c
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PACustomParticle> <>9__6_0;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x938E24", Offset = "0x938E24", VA = "0x938E24")]
		public <>c()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x938E2C", Offset = "0x938E2C", VA = "0x938E2C")]
		internal void <OnValidate>b__6_0(PACustomParticle obj)
		{
		}
	}

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<PACustomParticle> particles;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private Mesh particleMesh;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2[] particleUVs;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1282228", Offset = "0x1282228", VA = "0x1282228", Slot = "7")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x128222C", Offset = "0x128222C", VA = "0x128222C", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1282278", Offset = "0x1282278", VA = "0x1282278")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1282354", Offset = "0x1282354", VA = "0x1282354")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1282508", Offset = "0x1282508", VA = "0x1282508", Slot = "15")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6E2D00", Offset = "0x6E2D00")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1282710", Offset = "0x1282710", VA = "0x1282710")]
	private void SetOriginDirection(int particleIndex, Vector3 direction)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x12828E0", Offset = "0x12828E0", VA = "0x12828E0")]
	private void SetSpeed(int particleIndex, float speed)
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1282944", Offset = "0x1282944", VA = "0x1282944")]
	private void SetSpinSpeed(int particleIndex, float spinSpeed)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x128287C", Offset = "0x128287C", VA = "0x128287C")]
	private void SetColor(int particleIndex, Color color)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x12829A8", Offset = "0x12829A8", VA = "0x12829A8")]
	private void SetUV(int particleIndex, Rect uv)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x1282778", Offset = "0x1282778", VA = "0x1282778")]
	private void SetSize(int particleIndex, float size)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x1282B78", Offset = "0x1282B78", VA = "0x1282B78")]
	private void SetIndex(int particleIndex, float normalizedIndex)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x1282C7C", Offset = "0x1282C7C", VA = "0x1282C7C")]
	public PACustomBillboardGenerator()
	{
	}
}
[Token(Token = "0x2000354")]
public interface PAICustomParticleGenerator
{
	[Token(Token = "0x6001352")]
	void ApplyParticles();
}
[Serializable]
[Token(Token = "0x2000355")]
public class PACustomParticle
{
	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 originDirection;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spinSpeed;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect uv;

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x1283ABC", Offset = "0x1283ABC", VA = "0x1283ABC")]
	public void SetDefaultValuesIfUninitialized()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x1282D14", Offset = "0x1282D14", VA = "0x1282D14")]
	public PACustomParticle()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x1283BC0", Offset = "0x1283BC0", VA = "0x1283BC0")]
	public PACustomParticle(Vector3 originDirection, Color color, float size, float speed, float spinSpeed, Rect uv)
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1283CC4", Offset = "0x1283CC4", VA = "0x1283CC4")]
	public PACustomParticle(Vector3 originDirection, Color color, float size = 1f, float speed = 0f, float spinSpeed = 0f)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1283DC8", Offset = "0x1283DC8", VA = "0x1283DC8")]
	public PACustomParticle(Vector3 originDirection)
	{
	}
}
[Token(Token = "0x2000356")]
public class PACustomMeshParticleGenerator : PAMeshParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D66D4", Offset = "0x6D66D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PACustomMeshParticle> <>9__2_0;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x938EAC", Offset = "0x938EAC", VA = "0x938EAC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x938EB4", Offset = "0x938EB4", VA = "0x938EB4")]
		internal void <OnValidate>b__2_0(PACustomMeshParticle obj)
		{
		}
	}

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PACustomMeshParticle> particles;

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x1282DE0", Offset = "0x1282DE0", VA = "0x1282DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1282E9C", Offset = "0x1282E9C", VA = "0x1282E9C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x1283050", Offset = "0x1283050", VA = "0x1283050", Slot = "7")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1283054", Offset = "0x1283054", VA = "0x1283054", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x12830A0", Offset = "0x12830A0", VA = "0x12830A0", Slot = "15")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6E2D38", Offset = "0x6E2D38")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1283AAC", Offset = "0x1283AAC", VA = "0x1283AAC")]
	public PACustomMeshParticleGenerator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000358")]
public class PACustomMeshParticle : PACustomParticle
{
	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 spinAxis;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh mesh;

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x1282D10", Offset = "0x1282D10", VA = "0x1282D10")]
	public PACustomMeshParticle()
	{
	}
}
[Token(Token = "0x2000359")]
public class PABillboardParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x400164A")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Vector2[] quadUVs;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static readonly Vector2[] quadOffsets;

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x1280C4C", Offset = "0x1280C4C", VA = "0x1280C4C", Slot = "4")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x1280C54", Offset = "0x1280C54", VA = "0x1280C54", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x12810C4", Offset = "0x12810C4", VA = "0x12810C4", Slot = "9")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x1281294", Offset = "0x1281294", VA = "0x1281294", Slot = "12")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x1281420", Offset = "0x1281420", VA = "0x1281420", Slot = "11")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x1281548", Offset = "0x1281548", VA = "0x1281548", Slot = "10")]
	protected override void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x12817A8", Offset = "0x12817A8", VA = "0x12817A8", Slot = "14")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x12818DC", Offset = "0x12818DC", VA = "0x12818DC", Slot = "13")]
	protected override void UpdateIndicies()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x12819D8", Offset = "0x12819D8", VA = "0x12819D8")]
	public PABillboardParticle()
	{
	}
}
[Token(Token = "0x200035A")]
public class PAMeshParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x400164D")]
	private const int MAX_VERT_COUNT = 65536;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Mesh inputMesh;

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x1284AC4", Offset = "0x1284AC4", VA = "0x1284AC4", Slot = "4")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x1284B7C", Offset = "0x1284B7C", VA = "0x1284B7C", Slot = "5")]
	public override float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x1284CD0", Offset = "0x1284CD0", VA = "0x1284CD0", Slot = "6")]
	public override void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x1284DD4", Offset = "0x1284DD4", VA = "0x1284DD4", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1284EA4", Offset = "0x1284EA4", VA = "0x1284EA4", Slot = "9")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x1285088", Offset = "0x1285088", VA = "0x1285088", Slot = "12")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x1285270", Offset = "0x1285270", VA = "0x1285270", Slot = "10")]
	protected override void UpdateSurface(PAParticleField settings, int startAt = 0)
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x12855F4", Offset = "0x12855F4", VA = "0x12855F4", Slot = "14")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x128572C", Offset = "0x128572C", VA = "0x128572C", Slot = "11")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x12838C8", Offset = "0x12838C8", VA = "0x12838C8")]
	public static float Vector3ToFloat(Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x1283AB4", Offset = "0x1283AB4", VA = "0x1283AB4")]
	public PAMeshParticle()
	{
	}
}
[Token(Token = "0x200035B")]
public class PAPFHelper
{
	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitialized;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int _IsUnserialized;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int _Editor;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int _UserFacing;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int _EdgeAlpha;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int _EdgeScale;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int _ParticleSize;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int _FieldSize;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int _Speed;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int _SpinSpeed;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int _Force;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int _SpeedScale;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int _UOffset;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int _EdgeThreshold;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int _InverseEdgeThreshold;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int _FaceDirection;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int _UpDirection;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int _ParticleCount;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int _CountMask;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int _TotalTime;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int _DeltaSpeed;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int _DeltaForce;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int _DeltaPosition;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int _NearFadeDistance;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int _NearFadeOffset;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] _ExclusionMatrix;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int[] _ExclusionThreshold;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int[] _InverseExclusionThreshold;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int _TurbulenceOffset;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _TurbulenceFrequency;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int _TurbulenceScale;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int _TurbulenceDeltaOffset;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int _MainTex;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int _Color;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int _CutOff;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int _Softness;

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1285C58", Offset = "0x1285C58", VA = "0x1285C58")]
	public static void GetPropertyIDs()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1286530", Offset = "0x1286530", VA = "0x1286530")]
	public PAPFHelper()
	{
	}
}
[Token(Token = "0x200035C")]
public class PAParticleMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	public static class RandomWrapper
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_Seed;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static UnityEngine.Random.State cachedState;

		[Token(Token = "0x17000137")]
		public static int seed
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x9390B8", Offset = "0x9390B8", VA = "0x9390B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x938FA4", Offset = "0x938FA4", VA = "0x938FA4")]
		public static void CacheState()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x938FFC", Offset = "0x938FFC", VA = "0x938FFC")]
		public static void RestoreState()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x939050", Offset = "0x939050", VA = "0x939050")]
		public static void SetState(int seed)
		{
		}
	}

	[Token(Token = "0x4001673")]
	private const int DATA_STRUCTURE_VERSION = 2;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] verts;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] normals;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	protected Vector4[] tangents;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	protected Vector2[] uv0;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	protected Vector2[] uv1;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	protected Color[] colors;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	protected int[] triangles;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private int dataStructureVersion;

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x128A6E0", Offset = "0x128A6E0", VA = "0x128A6E0")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x128A8E8", Offset = "0x128A8E8", VA = "0x128A8E8")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x128A8EC", Offset = "0x128A8EC", VA = "0x128A8EC")]
	protected void CacheSeed()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x128A8F4", Offset = "0x128A8F4", VA = "0x128A8F4")]
	private void SetSeed(int seed)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x1281224", Offset = "0x1281224", VA = "0x1281224")]
	protected float GetRandomAndIncrement(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x128A900", Offset = "0x128A900", VA = "0x128A900")]
	protected void ResetSeed()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x128A908", Offset = "0x128A908", VA = "0x128A908", Slot = "4")]
	public virtual int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x1284CC8", Offset = "0x1284CC8", VA = "0x1284CC8", Slot = "5")]
	public virtual float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x12811EC", Offset = "0x12811EC", VA = "0x12811EC")]
	protected void SkipRandomCalls(int callsPerParticle, int count)
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x1284D98", Offset = "0x1284D98", VA = "0x1284D98", Slot = "6")]
	public virtual void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x128A910", Offset = "0x128A910", VA = "0x128A910", Slot = "7")]
	protected virtual void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x1282BDC", Offset = "0x1282BDC", VA = "0x1282BDC")]
	protected void FillMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x1280CCC", Offset = "0x1280CCC", VA = "0x1280CCC")]
	public int GetClampedParticleCount(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x128AC4C", Offset = "0x128AC4C", VA = "0x128AC4C", Slot = "8")]
	protected virtual int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x1280D00", Offset = "0x1280D00", VA = "0x1280D00")]
	protected void SetArraySizes(int vertCount, int triCount)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x128AC54", Offset = "0x128AC54", VA = "0x128AC54", Slot = "9")]
	protected virtual void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x128AC58", Offset = "0x128AC58", VA = "0x128AC58", Slot = "10")]
	protected virtual void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x128AC5C", Offset = "0x128AC5C", VA = "0x128AC5C", Slot = "11")]
	protected virtual void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x128AC60", Offset = "0x128AC60", VA = "0x128AC60", Slot = "12")]
	protected virtual void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x128AC64", Offset = "0x128AC64", VA = "0x128AC64", Slot = "13")]
	protected virtual void UpdateIndicies()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x128AC68", Offset = "0x128AC68", VA = "0x128AC68", Slot = "14")]
	protected virtual void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x128A794", Offset = "0x128A794", VA = "0x128A794")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x128AC6C", Offset = "0x128AC6C", VA = "0x128AC6C")]
	public void CheckDataStructureVersion()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x12819E0", Offset = "0x12819E0", VA = "0x12819E0")]
	public PAParticleMeshGenerator()
	{
	}
}
[Token(Token = "0x200035E")]
[ExecuteInEditMode]
public class PAExclusionZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D66F4", Offset = "0x6D66F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<PAExclusionZone> <>9__5_0;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x938F34", Offset = "0x938F34", VA = "0x938F34")]
		public <>c()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x938F3C", Offset = "0x938F3C", VA = "0x938F3C")]
		internal bool <UnregisterZone>b__5_0(PAExclusionZone obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PAExclusionZone> exclusionZones;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask affectsLayers;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 edgeThreshold;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool important;

	[Token(Token = "0x17000138")]
	private Bounds bounds
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1284178", Offset = "0x1284178", VA = "0x1284178")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x1283EA0", Offset = "0x1283EA0", VA = "0x1283EA0")]
	public static void RegisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x1283FC0", Offset = "0x1283FC0", VA = "0x1283FC0")]
	public static void UnregisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x128416C", Offset = "0x128416C", VA = "0x128416C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x1284170", Offset = "0x1284170", VA = "0x1284170")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x1284174", Offset = "0x1284174", VA = "0x1284174")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x12844B8", Offset = "0x12844B8", VA = "0x12844B8")]
	private static Vector3 ClosestPointOnBounds(Bounds bounds, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x12844C0", Offset = "0x12844C0", VA = "0x12844C0")]
	public static bool GetExclusionZones(ref PAExclusionZone[] zones, Vector3 position, Bounds checkBounds, int layer)
	{
		return default(bool);
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x1284938", Offset = "0x1284938", VA = "0x1284938")]
	public static PAExclusionZone Create(string name)
	{
		return null;
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x12849B8", Offset = "0x12849B8", VA = "0x12849B8")]
	public PAExclusionZone()
	{
	}
}
[Token(Token = "0x2000360")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6704", Offset = "0x6D6704")]
[ExecuteInEditMode]
public class PAParticleField : MonoBehaviour
{
	[Token(Token = "0x2000361")]
	public enum ParticleType
	{
		[Token(Token = "0x40016D0")]
		Billboard,
		[Token(Token = "0x40016D1")]
		Mesh,
		[Token(Token = "0x40016D2")]
		Custom
	}

	[Token(Token = "0x2000362")]
	public enum SimulationSpace
	{
		[Token(Token = "0x40016D4")]
		World,
		[Token(Token = "0x40016D5")]
		Local,
		[Token(Token = "0x40016D6")]
		LocalWithDelta
	}

	[Token(Token = "0x2000363")]
	public enum Shape
	{
		[Token(Token = "0x40016D8")]
		Cube,
		[Token(Token = "0x40016D9")]
		Sphere,
		[Token(Token = "0x40016DA")]
		Cylinder
	}

	[Token(Token = "0x2000364")]
	public enum EdgeMode
	{
		[Token(Token = "0x40016DC")]
		Alpha,
		[Token(Token = "0x40016DD")]
		Scale,
		[Token(Token = "0x40016DE")]
		Both
	}

	[Token(Token = "0x2000365")]
	public enum MaterialType
	{
		[Token(Token = "0x40016E0")]
		Transparent,
		[Token(Token = "0x40016E1")]
		TransparentLit,
		[Token(Token = "0x40016E2")]
		Additive,
		[Token(Token = "0x40016E3")]
		AdditiveLit,
		[Token(Token = "0x40016E4")]
		CutOff,
		[Token(Token = "0x40016E5")]
		CutOffLit,
		[Token(Token = "0x40016E6")]
		Custom,
		[Token(Token = "0x40016E7")]
		MeshDefault,
		[Token(Token = "0x40016E8")]
		MeshUnlit
	}

	[Token(Token = "0x2000366")]
	public enum TextureType
	{
		[Token(Token = "0x40016EA")]
		Simple,
		[Token(Token = "0x40016EB")]
		SpriteGrid,
		[Token(Token = "0x40016EC")]
		AnimatedRows
	}

	[Token(Token = "0x2000367")]
	public enum SoftParticleType
	{
		[Token(Token = "0x40016EE")]
		None,
		[Token(Token = "0x40016EF")]
		NearClipOnly,
		[Token(Token = "0x40016F0")]
		NearClipAndCameraDepth
	}

	[Token(Token = "0x2000368")]
	public enum TurbulenceType
	{
		[Token(Token = "0x40016F2")]
		None,
		[Token(Token = "0x40016F3")]
		Simplex2D,
		[Token(Token = "0x40016F4")]
		Simplex
	}

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] builtinShaderNames;

	[Token(Token = "0x4001685")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearCacheInBuilds;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isOpenGL;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int mSeed;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleType mGeneratorType;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Mesh mInputMesh;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int mParticleCount;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float mParticleCountMask;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 mFieldSize;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 mEdgeThreshold;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EdgeMode mEdgeMode;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private SimulationSpace mSimulationSpace;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shape mShape;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool mUseExclusionZones;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform mExclusionAnchorOverride;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Vector2 mParticleSize;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float mSpeed;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 mSpeedMask;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color mColor;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Vector3 mForce;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private bool mCustomFacingDirection;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 mFacingDirection;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool mCustomUpDirection;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Vector3 mUpDirection;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private bool mStretchedBillboard;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float mSpeedScaleMultiplier;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private bool mSpin;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float mSpinSpeed;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float mMinSpinSpeed;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private bool mCustomRotationAxis;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private Vector3 mRotationAxis;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SoftParticleType mSoftParticles;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float mNearFadeDistance;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float mNearFadeOffset;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float mSoftness;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TurbulenceType mTurbulenceType;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float mTurbulenceFrequency;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float mTurbulenceAmplitude;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private Vector3 mTurbulenceScale;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Vector3 mTurbulenceOffsetSpeed;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Gradient mColorVariation;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float mMinimumSize;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float mMinimumSpeed;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private MaterialType mMaterialType;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Shader mShader;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Texture2D mTexture;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Vector2 mPivotOffset;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private TextureType mTextureType;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	private int mSpriteColumns;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private int mSpriteRows;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	private float mFramerate;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private float mCutOff;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	private bool mReceiveShadows;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private ShadowCastingMode mCastShadows;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Mesh particleMesh;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PAParticleMeshGenerator m_MeshGenerator;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	public Material material;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Material renderingMaterial;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float time;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 speedTime;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 forceTime;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float spinTime;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 turbulenceOffsetTime;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float frameTime;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 position;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 deltaPosition;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 scale;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAB64", Offset = "0x6DAB64")]
	private MeshFlags <meshIsDirtyMask>k__BackingField;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAB74", Offset = "0x6DAB74")]
	private bool <shaderIsDirty>k__BackingField;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	private bool foundExclusionZones;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private PAExclusionZone[] zones;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Material temporarySerializableMaterial;

	[Token(Token = "0x17000139")]
	public int seed
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x128653C", Offset = "0x128653C", VA = "0x128653C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1286544", Offset = "0x1286544", VA = "0x1286544")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public ParticleType generatorType
	{
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1286564", Offset = "0x1286564", VA = "0x1286564")]
		get
		{
			return default(ParticleType);
		}
		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1282334", Offset = "0x1282334", VA = "0x1282334")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public int particleCount
	{
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x128656C", Offset = "0x128656C", VA = "0x128656C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1286574", Offset = "0x1286574", VA = "0x1286574")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public float particleCountMask
	{
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x128674C", Offset = "0x128674C", VA = "0x128674C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1286754", Offset = "0x1286754", VA = "0x1286754")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public Vector3 fieldSize
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1286790", Offset = "0x1286790", VA = "0x1286790")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x128679C", Offset = "0x128679C", VA = "0x128679C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public Vector3 edgeThreshold
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x1286808", Offset = "0x1286808", VA = "0x1286808")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1286814", Offset = "0x1286814", VA = "0x1286814")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public SimulationSpace simulationSpace
	{
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x12868A8", Offset = "0x12868A8", VA = "0x12868A8")]
		get
		{
			return default(SimulationSpace);
		}
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x12868B0", Offset = "0x12868B0", VA = "0x12868B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public Shape shape
	{
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x12868CC", Offset = "0x12868CC", VA = "0x12868CC")]
		get
		{
			return default(Shape);
		}
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x12868D4", Offset = "0x12868D4", VA = "0x12868D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public EdgeMode edgeMode
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x12868F0", Offset = "0x12868F0", VA = "0x12868F0")]
		get
		{
			return default(EdgeMode);
		}
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x12868F8", Offset = "0x12868F8", VA = "0x12868F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public bool useExclusionZones
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1286914", Offset = "0x1286914", VA = "0x1286914")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x128691C", Offset = "0x128691C", VA = "0x128691C")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public Transform exclusionAnchorOverride
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1286944", Offset = "0x1286944", VA = "0x1286944")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x128694C", Offset = "0x128694C", VA = "0x128694C")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public Color color
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x12869E8", Offset = "0x12869E8", VA = "0x12869E8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x12821AC", Offset = "0x12821AC", VA = "0x12821AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public float alpha
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x12869F4", Offset = "0x12869F4", VA = "0x12869F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x12869FC", Offset = "0x12869FC", VA = "0x12869FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public float speed
	{
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1286A1C", Offset = "0x1286A1C", VA = "0x1286A1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1286A24", Offset = "0x1286A24", VA = "0x1286A24")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public Vector3 speedMask
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1286A40", Offset = "0x1286A40", VA = "0x1286A40")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1286A4C", Offset = "0x1286A4C", VA = "0x1286A4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public Vector2 particleSize
	{
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1286AB8", Offset = "0x1286AB8", VA = "0x1286AB8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1286AC0", Offset = "0x1286AC0", VA = "0x1286AC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public bool stretchedBillboard
	{
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1286AF8", Offset = "0x1286AF8", VA = "0x1286AF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1286B00", Offset = "0x1286B00", VA = "0x1286B00")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public float speedScaleMultiplier
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1286B34", Offset = "0x1286B34", VA = "0x1286B34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1286B3C", Offset = "0x1286B3C", VA = "0x1286B3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public bool spin
	{
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1286B58", Offset = "0x1286B58", VA = "0x1286B58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1286B60", Offset = "0x1286B60", VA = "0x1286B60")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public float spinSpeed
	{
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1286B94", Offset = "0x1286B94", VA = "0x1286B94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1286B9C", Offset = "0x1286B9C", VA = "0x1286B9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public float minSpinSpeed
	{
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1286BB8", Offset = "0x1286BB8", VA = "0x1286BB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x1286BC0", Offset = "0x1286BC0", VA = "0x1286BC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public bool customRotationAxis
	{
		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1286C08", Offset = "0x1286C08", VA = "0x1286C08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1286C10", Offset = "0x1286C10", VA = "0x1286C10")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public Vector3 rotationAxis
	{
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1286C3C", Offset = "0x1286C3C", VA = "0x1286C3C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1286C48", Offset = "0x1286C48", VA = "0x1286C48")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public bool customFacingDirection
	{
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1286CB8", Offset = "0x1286CB8", VA = "0x1286CB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1285B18", Offset = "0x1285B18", VA = "0x1285B18")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public Vector3 facingDirection
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1286CC0", Offset = "0x1286CC0", VA = "0x1286CC0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1285B40", Offset = "0x1285B40", VA = "0x1285B40")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public bool customUpDirection
	{
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1286CCC", Offset = "0x1286CCC", VA = "0x1286CCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1285BB0", Offset = "0x1285BB0", VA = "0x1285BB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public Vector3 upDirection
	{
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1286CD4", Offset = "0x1286CD4", VA = "0x1286CD4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1285BE4", Offset = "0x1285BE4", VA = "0x1285BE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public SoftParticleType softParticles
	{
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x1286CE0", Offset = "0x1286CE0", VA = "0x1286CE0")]
		get
		{
			return default(SoftParticleType);
		}
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1286CE8", Offset = "0x1286CE8", VA = "0x1286CE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public float nearFadeDistance
	{
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x1286E3C", Offset = "0x1286E3C", VA = "0x1286E3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x1286E44", Offset = "0x1286E44", VA = "0x1286E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float nearFadeOffset
	{
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1286E60", Offset = "0x1286E60", VA = "0x1286E60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1286E68", Offset = "0x1286E68", VA = "0x1286E68")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public float softness
	{
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1286E84", Offset = "0x1286E84", VA = "0x1286E84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x1286E8C", Offset = "0x1286E8C", VA = "0x1286E8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public TurbulenceType turbulenceType
	{
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x1286EA8", Offset = "0x1286EA8", VA = "0x1286EA8")]
		get
		{
			return default(TurbulenceType);
		}
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x1286EB0", Offset = "0x1286EB0", VA = "0x1286EB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public float turbulenceFrequency
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x1286ECC", Offset = "0x1286ECC", VA = "0x1286ECC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1286ED4", Offset = "0x1286ED4", VA = "0x1286ED4")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public float turbulenceAmplitude
	{
		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1286EF0", Offset = "0x1286EF0", VA = "0x1286EF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1286EF8", Offset = "0x1286EF8", VA = "0x1286EF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public Vector3 turbulenceScale
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1286F14", Offset = "0x1286F14", VA = "0x1286F14")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1286F20", Offset = "0x1286F20", VA = "0x1286F20")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public Vector3 turbulenceOffsetSpeed
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1286F8C", Offset = "0x1286F8C", VA = "0x1286F8C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1286F9C", Offset = "0x1286F9C", VA = "0x1286F9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public Gradient colorVariation
	{
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x12813A8", Offset = "0x12813A8", VA = "0x12813A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1287010", Offset = "0x1287010", VA = "0x1287010")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public float minimumSize
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1287050", Offset = "0x1287050", VA = "0x1287050")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1287058", Offset = "0x1287058", VA = "0x1287058")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public float minimumSpeed
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1287098", Offset = "0x1287098", VA = "0x1287098")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x12870A0", Offset = "0x12870A0", VA = "0x12870A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public Vector3 force
	{
		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x12870E0", Offset = "0x12870E0", VA = "0x12870E0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x12870EC", Offset = "0x12870EC", VA = "0x12870EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public MaterialType materialType
	{
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1287158", Offset = "0x1287158", VA = "0x1287158")]
		get
		{
			return default(MaterialType);
		}
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1287160", Offset = "0x1287160", VA = "0x1287160")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public Shader shader
	{
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x12872DC", Offset = "0x12872DC", VA = "0x12872DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1287244", Offset = "0x1287244", VA = "0x1287244")]
		private set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public Texture2D texture
	{
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x12872E4", Offset = "0x12872E4", VA = "0x12872E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x12872EC", Offset = "0x12872EC", VA = "0x12872EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public TextureType textureType
	{
		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1287384", Offset = "0x1287384", VA = "0x1287384")]
		get
		{
			return default(TextureType);
		}
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x128738C", Offset = "0x128738C", VA = "0x128738C")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public int spriteColumns
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x12873B4", Offset = "0x12873B4", VA = "0x12873B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x12873BC", Offset = "0x12873BC", VA = "0x12873BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public int spriteRows
	{
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1287408", Offset = "0x1287408", VA = "0x1287408")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1287410", Offset = "0x1287410", VA = "0x1287410")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public float framerate
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x128745C", Offset = "0x128745C", VA = "0x128745C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1287464", Offset = "0x1287464", VA = "0x1287464")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public float cutOff
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1287478", Offset = "0x1287478", VA = "0x1287478")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1287480", Offset = "0x1287480", VA = "0x1287480")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public Vector2 pivotOffset
	{
		[Token(Token = "0x6001403")]
		[Address(RVA = "0x12874BC", Offset = "0x12874BC", VA = "0x12874BC")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6001404")]
		[Address(RVA = "0x12874C8", Offset = "0x12874C8", VA = "0x12874C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public Mesh inputMesh
	{
		[Token(Token = "0x6001405")]
		[Address(RVA = "0x128750C", Offset = "0x128750C", VA = "0x128750C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1287514", Offset = "0x1287514", VA = "0x1287514")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public bool receiveShadows
	{
		[Token(Token = "0x6001407")]
		[Address(RVA = "0x1287548", Offset = "0x1287548", VA = "0x1287548")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1287550", Offset = "0x1287550", VA = "0x1287550")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public ShadowCastingMode castShadows
	{
		[Token(Token = "0x6001409")]
		[Address(RVA = "0x12875F8", Offset = "0x12875F8", VA = "0x12875F8")]
		get
		{
			return default(ShadowCastingMode);
		}
		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1287600", Offset = "0x1287600", VA = "0x1287600")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	private PAParticleMeshGenerator meshGenerator
	{
		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1286654", Offset = "0x1286654", VA = "0x1286654")]
		get
		{
			return null;
		}
		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1287874", Offset = "0x1287874", VA = "0x1287874")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public MeshFlags meshIsDirtyMask
	{
		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1287884", Offset = "0x1287884", VA = "0x1287884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D70", Offset = "0x6E2D70")]
		get
		{
			return default(MeshFlags);
		}
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x128788C", Offset = "0x128788C", VA = "0x128788C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D80", Offset = "0x6E2D80")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public bool shaderIsDirty
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1287894", Offset = "0x1287894", VA = "0x1287894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D90", Offset = "0x6E2D90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001410")]
		[Address(RVA = "0x128789C", Offset = "0x128789C", VA = "0x128789C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DA0", Offset = "0x6E2DA0")]
		set
		{
		}
	}

	[Token(Token = "0x6001411")]
	private T GetOrAddComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x12878A8", Offset = "0x12878A8", VA = "0x12878A8")]
	private void GetRenderingComponents()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x128798C", Offset = "0x128798C", VA = "0x128798C")]
	private void CreateAssetTypes()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x1287B40", Offset = "0x1287B40", VA = "0x1287B40")]
	private Material CreateInstanceMaterial()
	{
		return null;
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x12876A4", Offset = "0x12876A4", VA = "0x12876A4")]
	private void UpdateGeneratorType(ParticleType newType)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x1287CE4", Offset = "0x1287CE4", VA = "0x1287CE4")]
	private void SetShaderValues()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x12889F0", Offset = "0x12889F0", VA = "0x12889F0")]
	private void SetKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x1288A6C", Offset = "0x1288A6C", VA = "0x1288A6C")]
	private static void SetMaterialKeyword(string keyword, bool enable, Material material)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x1288B20", Offset = "0x1288B20", VA = "0x1288B20")]
	private void SetFloatKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x12889C4", Offset = "0x12889C4", VA = "0x12889C4")]
	private void SetFloatKeyword(int keywordID, bool enable)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x1288B4C", Offset = "0x1288B4C", VA = "0x1288B4C")]
	public void UpdateParticleField()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x1288B78", Offset = "0x1288B78", VA = "0x1288B78")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x1288C34", Offset = "0x1288C34", VA = "0x1288C34")]
	public void UpdateShader()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x1288C58", Offset = "0x1288C58", VA = "0x1288C58")]
	private void UpdateAnimationValues()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x1288C9C", Offset = "0x1288C9C", VA = "0x1288C9C")]
	public void Simulate(float t, bool restart = false)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x1288DF8", Offset = "0x1288DF8", VA = "0x1288DF8")]
	private void UpdateExclusionZoneValues()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x1288F40", Offset = "0x1288F40", VA = "0x1288F40")]
	private void SetShaderAnimationValues()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x128935C", Offset = "0x128935C", VA = "0x128935C")]
	private void SetShaderExclusionZoneValues()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x1289988", Offset = "0x1289988", VA = "0x1289988")]
	private void Start()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x1289A24", Offset = "0x1289A24", VA = "0x1289A24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x1288D94", Offset = "0x1288D94", VA = "0x1288D94")]
	public void ResetTimers()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x1289A28", Offset = "0x1289A28", VA = "0x1289A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x1289BC4", Offset = "0x1289BC4", VA = "0x1289BC4")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x1289D48", Offset = "0x1289D48", VA = "0x1289D48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x1289E48", Offset = "0x1289E48", VA = "0x1289E48")]
	public int GetMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x1281D98", Offset = "0x1281D98", VA = "0x1281D98")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x1289EF0", Offset = "0x1289EF0", VA = "0x1289EF0")]
	public static PAParticleField Create(string name)
	{
		return null;
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x1289F70", Offset = "0x1289F70", VA = "0x1289F70")]
	private void CreateTemporarySerializableMaterial()
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x128A194", Offset = "0x128A194", VA = "0x128A194")]
	public PAParticleField()
	{
	}
}
[Token(Token = "0x2000369")]
[Flags]
public enum MeshFlags
{
	[Token(Token = "0x40016F6")]
	None = 0,
	[Token(Token = "0x40016F7")]
	Generator = 1,
	[Token(Token = "0x40016F8")]
	Count = 2,
	[Token(Token = "0x40016F9")]
	Color = 4,
	[Token(Token = "0x40016FA")]
	Speed = 8,
	[Token(Token = "0x40016FB")]
	Surface = 0x10,
	[Token(Token = "0x40016FC")]
	Seed = 0x1C,
	[Token(Token = "0x40016FD")]
	All = 0x1F
}
[Token(Token = "0x200036A")]
public class CiclularProgress : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6784", Offset = "0x6D6784")]
	private sealed class <RadialProgress>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CiclularProgress <>4__this;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <rate>5__2;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__3;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x9FD720", Offset = "0x9FD720", VA = "0x9FD720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x9FD768", Offset = "0x9FD768", VA = "0x9FD768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x9FD5A4", Offset = "0x9FD5A4", VA = "0x9FD5A4")]
		[DebuggerHidden]
		public <RadialProgress>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x9FD5D0", Offset = "0x9FD5D0", VA = "0x9FD5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x9FD5D4", Offset = "0x9FD5D4", VA = "0x9FD5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x9FD728", Offset = "0x9FD728", VA = "0x9FD728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int timeToComplete;

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xD82E20", Offset = "0xD82E20", VA = "0xD82E20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xD82E54", Offset = "0xD82E54", VA = "0xD82E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2DB0", Offset = "0x6E2DB0")]
	private IEnumerator RadialProgress(float time)
	{
		return null;
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xD82EDC", Offset = "0xD82EDC", VA = "0xD82EDC")]
	public CiclularProgress()
	{
	}
}
[Token(Token = "0x200036C")]
public class GameObjectRotate : MonoBehaviour
{
	[Token(Token = "0x6001438")]
	[Address(RVA = "0xB54258", Offset = "0xB54258", VA = "0xB54258")]
	private void Start()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xB5425C", Offset = "0xB5425C", VA = "0xB5425C")]
	private void Update()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xB542D4", Offset = "0xB542D4", VA = "0xB542D4")]
	public GameObjectRotate()
	{
	}
}
[Token(Token = "0x200036D")]
public class TrashMan : MonoBehaviour
{
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6794", Offset = "0x6D6794")]
	private sealed class <cullExcessObjects>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrashMan <>4__this;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waiter>5__2;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x117DBD4", Offset = "0x117DBD4", VA = "0x117DBD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x117DC1C", Offset = "0x117DC1C", VA = "0x117DC1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x117DA6C", Offset = "0x117DA6C", VA = "0x117DA6C")]
		[DebuggerHidden]
		public <cullExcessObjects>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x117DA98", Offset = "0x117DA98", VA = "0x117DA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x117DA9C", Offset = "0x117DA9C", VA = "0x117DA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x117DBDC", Offset = "0x117DBDC", VA = "0x117DBDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D67A4", Offset = "0x6D67A4")]
	private sealed class <internalDespawnAfterDelay>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayInSeconds;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject go;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x117DD08", Offset = "0x117DD08", VA = "0x117DD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x117DD50", Offset = "0x117DD50", VA = "0x117DD50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x117DC24", Offset = "0x117DC24", VA = "0x117DC24")]
		[DebuggerHidden]
		public <internalDespawnAfterDelay>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x117DC50", Offset = "0x117DC50", VA = "0x117DC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x117DC54", Offset = "0x117DC54", VA = "0x117DC54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x117DD10", Offset = "0x117DD10", VA = "0x117DD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrashMan instance;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<TrashManRecycleBin> recycleBinCollection;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cullExcessObjectsInterval;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool persistBetweenScenes;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TrashManRecycleBin> _instanceIdToRecycleBin;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, int> _poolNameToInstanceId;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public new Transform transform;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int updateIndex;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] loaderObject;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter[] loaderObject_Filter;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer[] loaderObject_Renderer;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool preloading;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool ShouldPreload;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent preloadingComplete;

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xC62D98", Offset = "0xC62D98", VA = "0xC62D98")]
	public static bool IsPreloadingComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xC62E4C", Offset = "0xC62E4C", VA = "0xC62E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xC634E0", Offset = "0xC634E0", VA = "0xC634E0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xC63468", Offset = "0xC63468", VA = "0xC63468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2E60", Offset = "0x6E2E60")]
	private IEnumerator cullExcessObjects()
	{
		return null;
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xC63530", Offset = "0xC63530", VA = "0xC63530")]
	private void Start()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xC636D8", Offset = "0xC636D8", VA = "0xC636D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xC6321C", Offset = "0xC6321C", VA = "0xC6321C")]
	private void initializePrefabPools()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xC63AFC", Offset = "0xC63AFC", VA = "0xC63AFC")]
	private static GameObject spawn(int gameObjectInstanceId, Vector3 position, Quaternion rotation, bool broadcastRestart = true)
	{
		return null;
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xC63E8C", Offset = "0xC63E8C", VA = "0xC63E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E2EC0", Offset = "0x6E2EC0")]
	private IEnumerator internalDespawnAfterDelay(GameObject go, float delayInSeconds)
	{
		return null;
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xC63F14", Offset = "0xC63F14", VA = "0xC63F14")]
	public static void manageRecycleBin(TrashManRecycleBin recycleBin)
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xC64148", Offset = "0xC64148", VA = "0xC64148")]
	public static void removeRecycleBin(TrashManRecycleBin recycleBin, bool shouldDestroyAllManagedObjects = true)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xC5E658", Offset = "0xC5E658", VA = "0xC5E658")]
	public static GameObject spawn(GameObject go, [Optional] Vector3 position, [Optional] Quaternion rotation, bool broadcastRestart = true)
	{
		return null;
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xC5C70C", Offset = "0xC5C70C", VA = "0xC5C70C")]
	public static GameObject spawn(string gameObjectName, [Optional] Vector3 position, [Optional] Quaternion rotation, bool broadcastRestart = true)
	{
		return null;
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xC64390", Offset = "0xC64390", VA = "0xC64390")]
	public static TrashManRecycleBin getRecycleBinForName(string gameObjectName)
	{
		return null;
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xC5C898", Offset = "0xC5C898", VA = "0xC5C898")]
	public static void despawn(GameObject go)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xC645A0", Offset = "0xC645A0", VA = "0xC645A0")]
	public static void despawnAfterDelay(GameObject go, float delayInSeconds)
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xC6466C", Offset = "0xC6466C", VA = "0xC6466C")]
	public static TrashManRecycleBin recycleBinForGameObjectName(string gameObjectName)
	{
		return null;
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xC64768", Offset = "0xC64768", VA = "0xC64768")]
	public static TrashManRecycleBin recycleBinForGameObject(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xC64858", Offset = "0xC64858", VA = "0xC64858")]
	public TrashMan()
	{
	}
}
[Serializable]
[Token(Token = "0x2000370")]
public sealed class TrashManRecycleBin
{
	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int instancesToPreallocate;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int instancesToAllocateIfEmpty;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool imposeHardLimit;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int hardLimit;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool cullExcessPrefabs;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int instancesToMaintainInPool;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cullInterval;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool automaticallyRecycleParticleSystems;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool persistBetweenScenes;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Stack<GameObject> _gameObjectPool;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timeOfLastCull;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _spawnedInstanceCount;

	[Token(Token = "0x14000012")]
	public event Action<GameObject> onSpawnedEvent
	{
		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC64970", Offset = "0xC64970", VA = "0xC64970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FC0", Offset = "0x6E2FC0")]
		add
		{
		}
		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC64A10", Offset = "0xC64A10", VA = "0xC64A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FD0", Offset = "0x6E2FD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<GameObject> onDespawnedEvent
	{
		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC64AB0", Offset = "0xC64AB0", VA = "0xC64AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FE0", Offset = "0x6E2FE0")]
		add
		{
		}
		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC64B50", Offset = "0xC64B50", VA = "0xC64B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FF0", Offset = "0x6E2FF0")]
		remove
		{
		}
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xC64BF0", Offset = "0xC64BF0", VA = "0xC64BF0")]
	private void allocateGameObjects(int count)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0xC64E9C", Offset = "0xC64E9C", VA = "0xC64E9C")]
	private GameObject pop()
	{
		return null;
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xC63A68", Offset = "0xC63A68", VA = "0xC63A68")]
	public void initialize()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xC64F58", Offset = "0xC64F58", VA = "0xC64F58")]
	public void cullExcessObjects()
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xC63CF4", Offset = "0xC63CF4", VA = "0xC63CF4")]
	public GameObject spawn()
	{
		return null;
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xC644E4", Offset = "0xC644E4", VA = "0xC644E4")]
	public void despawn(GameObject go)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xC642C4", Offset = "0xC642C4", VA = "0xC642C4")]
	public void clearBin(bool shouldDestroyAllManagedObjects)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xC65074", Offset = "0xC65074", VA = "0xC65074")]
	public TrashManRecycleBin()
	{
	}
}
[Token(Token = "0x2000371")]
public class SimpleController_UsingActionAsset : MonoBehaviour
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D67B4", Offset = "0x6D67B4")]
	private sealed class <BurstFire>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleController_UsingActionAsset <>4__this;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstAmount;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x93F2CC", Offset = "0x93F2CC", VA = "0x93F2CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x93F314", Offset = "0x93F314", VA = "0x93F314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x93F1C8", Offset = "0x93F1C8", VA = "0x93F1C8")]
		[DebuggerHidden]
		public <BurstFire>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x93F1F4", Offset = "0x93F1F4", VA = "0x93F1F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x93F1F8", Offset = "0x93F1F8", VA = "0x93F1F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x93F2D4", Offset = "0x93F2D4", VA = "0x93F2D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateSpeed;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float burstSpeed;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject projectile;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SimpleControls m_Controls;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_Charging;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_Rotation;

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xCFF630", Offset = "0xCFF630", VA = "0xCFF630")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xCFF9D0", Offset = "0xCFF9D0", VA = "0xCFF9D0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xCFFA14", Offset = "0xCFFA14", VA = "0xCFFA14")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xCFFA58", Offset = "0xCFFA58", VA = "0xCFFA58")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xCFFB14", Offset = "0xCFFB14", VA = "0xCFFB14")]
	public void Update()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xCFFCD4", Offset = "0xCFFCD4", VA = "0xCFFCD4")]
	private void Move(Vector2 direction)
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xCFFC10", Offset = "0xCFFC10", VA = "0xCFFC10")]
	private void Look(Vector2 rotate)
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xCFFDD0", Offset = "0xCFFDD0", VA = "0xCFFDD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3000", Offset = "0x6E3000")]
	private IEnumerator BurstFire(int burstAmount)
	{
		return null;
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xCFFE58", Offset = "0xCFFE58", VA = "0xCFFE58")]
	private void Fire()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xD000C8", Offset = "0xD000C8", VA = "0xD000C8")]
	public SimpleController_UsingActionAsset()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xD000D0", Offset = "0xD000D0", VA = "0xD000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3060", Offset = "0x6E3060")]
	private void <Awake>b__7_0(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xD001B4", Offset = "0xD001B4", VA = "0xD001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3070", Offset = "0x6E3070")]
	private void <Awake>b__7_1(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xD00248", Offset = "0xD00248", VA = "0xD00248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3080", Offset = "0x6E3080")]
	private void <Awake>b__7_2(InputAction.CallbackContext ctx)
	{
	}
}
[Token(Token = "0x2000373")]
public class SimpleController_UsingActions : MonoBehaviour
{
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D67C4", Offset = "0x6D67C4")]
	private sealed class <BurstFire>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleController_UsingActions <>4__this;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstAmount;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x93F420", Offset = "0x93F420", VA = "0x93F420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x93F468", Offset = "0x93F468", VA = "0x93F468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x93F31C", Offset = "0x93F31C", VA = "0x93F31C")]
		[DebuggerHidden]
		public <BurstFire>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x93F348", Offset = "0x93F348", VA = "0x93F348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x93F34C", Offset = "0x93F34C", VA = "0x93F34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x93F428", Offset = "0x93F428", VA = "0x93F428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateSpeed;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float burstSpeed;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject projectile;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputAction moveAction;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputAction lookAction;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputAction fireAction;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_Charging;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 m_Rotation;

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xD00250", Offset = "0xD00250", VA = "0xD00250")]
	public void Awake()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xD00390", Offset = "0xD00390", VA = "0xD00390")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xD003DC", Offset = "0xD003DC", VA = "0xD003DC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xD00428", Offset = "0xD00428", VA = "0xD00428")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xD004E4", Offset = "0xD004E4", VA = "0xD004E4")]
	public void Update()
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0xD0064C", Offset = "0xD0064C", VA = "0xD0064C")]
	private void Move(Vector2 direction)
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xD00588", Offset = "0xD00588", VA = "0xD00588")]
	private void Look(Vector2 rotate)
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0xD00748", Offset = "0xD00748", VA = "0xD00748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E30E0", Offset = "0x6E30E0")]
	private IEnumerator BurstFire(int burstAmount)
	{
		return null;
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xD007D0", Offset = "0xD007D0", VA = "0xD007D0")]
	private void Fire()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xD00A40", Offset = "0xD00A40", VA = "0xD00A40")]
	public SimpleController_UsingActions()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xD00A48", Offset = "0xD00A48", VA = "0xD00A48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3140", Offset = "0x6E3140")]
	private void <Awake>b__9_0(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xD00B2C", Offset = "0xD00B2C", VA = "0xD00B2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3150", Offset = "0x6E3150")]
	private void <Awake>b__9_1(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0xD00BC0", Offset = "0xD00BC0", VA = "0xD00BC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3160", Offset = "0x6E3160")]
	private void <Awake>b__9_2(InputAction.CallbackContext ctx)
	{
	}
}
[Token(Token = "0x2000375")]
public class SimpleController_UsingPlayerInput : MonoBehaviour
{
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D67D4", Offset = "0x6D67D4")]
	private sealed class <BurstFire>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleController_UsingPlayerInput <>4__this;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstAmount;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x93F574", Offset = "0x93F574", VA = "0x93F574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x93F5BC", Offset = "0x93F5BC", VA = "0x93F5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x93F470", Offset = "0x93F470", VA = "0x93F470")]
		[DebuggerHidden]
		public <BurstFire>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x93F49C", Offset = "0x93F49C", VA = "0x93F49C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x93F4A0", Offset = "0x93F4A0", VA = "0x93F4A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x93F57C", Offset = "0x93F57C", VA = "0x93F57C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateSpeed;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float burstSpeed;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject projectile;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_Charging;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 m_Rotation;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_Look;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_Move;

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xD00BC8", Offset = "0xD00BC8", VA = "0xD00BC8")]
	public void OnMove(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xD00C28", Offset = "0xD00C28", VA = "0xD00C28")]
	public void OnLook(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xD00C88", Offset = "0xD00C88", VA = "0xD00C88")]
	public void OnFire(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xD010D8", Offset = "0xD010D8", VA = "0xD010D8")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xD01194", Offset = "0xD01194", VA = "0xD01194")]
	public void Update()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xD01284", Offset = "0xD01284", VA = "0xD01284")]
	private void Move(Vector2 direction)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xD011C0", Offset = "0xD011C0", VA = "0xD011C0")]
	private void Look(Vector2 rotate)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xD00DE0", Offset = "0xD00DE0", VA = "0xD00DE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E31C0", Offset = "0x6E31C0")]
	private IEnumerator BurstFire(int burstAmount)
	{
		return null;
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xD00E68", Offset = "0xD00E68", VA = "0xD00E68")]
	private void Fire()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xD01380", Offset = "0xD01380", VA = "0xD01380")]
	public SimpleController_UsingPlayerInput()
	{
	}
}
[Token(Token = "0x2000377")]
public class SimpleController_UsingState : MonoBehaviour
{
	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateSpeed;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectile;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 m_Rotation;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_Firing;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_FireCooldown;

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xD01388", Offset = "0xD01388", VA = "0xD01388")]
	public void Update()
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0xD01598", Offset = "0xD01598", VA = "0xD01598")]
	private void Move(Vector2 direction)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0xD014D4", Offset = "0xD014D4", VA = "0xD014D4")]
	private void Look(Vector2 rotate)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0xD01694", Offset = "0xD01694", VA = "0xD01694")]
	private void Fire()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xD01904", Offset = "0xD01904", VA = "0xD01904")]
	public SimpleController_UsingState()
	{
	}
}
[Token(Token = "0x2000378")]
public class SimpleControls : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x2000379")]
	public struct GameplayActions
	{
		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SimpleControls m_Wrapper;

		[Token(Token = "0x17000182")]
		public InputAction fire
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x93F5CC", Offset = "0x93F5CC", VA = "0x93F5CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public InputAction move
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x93F5E8", Offset = "0x93F5E8", VA = "0x93F5E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public InputAction look
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x93F604", Offset = "0x93F604", VA = "0x93F604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public bool enabled
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x93F68C", Offset = "0x93F68C", VA = "0x93F68C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x93F5C4", Offset = "0x93F5C4", VA = "0x93F5C4")]
		public GameplayActions(SimpleControls wrapper)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x93F620", Offset = "0x93F620", VA = "0x93F620")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x93F63C", Offset = "0x93F63C", VA = "0x93F63C")]
		public void Enable()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x93F664", Offset = "0x93F664", VA = "0x93F664")]
		public void Disable()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x93F6B4", Offset = "0x93F6B4", VA = "0x93F6B4")]
		public static implicit operator InputActionMap(GameplayActions set)
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x93F6CC", Offset = "0x93F6CC", VA = "0x93F6CC")]
		public void SetCallbacks(IGameplayActions instance)
		{
		}
	}

	[Token(Token = "0x200037A")]
	public interface IGameplayActions
	{
		[Token(Token = "0x60014BC")]
		void OnFire(InputAction.CallbackContext context);

		[Token(Token = "0x60014BD")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x60014BE")]
		void OnLook(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DABD4", Offset = "0x6DABD4")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_gameplay;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IGameplayActions m_GameplayActionsCallbackInterface;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_gameplay_fire;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_gameplay_move;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputAction m_gameplay_look;

	[Token(Token = "0x1700017C")]
	public InputActionAsset asset
	{
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD0190C", Offset = "0xD0190C", VA = "0xD0190C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3270", Offset = "0x6E3270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017D")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD0197C", Offset = "0xD0197C", VA = "0xD0197C", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD019A8", Offset = "0xD019A8", VA = "0xD019A8", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD01A00", Offset = "0xD01A00", VA = "0xD01A00", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD01A4C", Offset = "0xD01A4C", VA = "0xD01A4C", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD01A9C", Offset = "0xD01A9C", VA = "0xD01A9C", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000180")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD01B0C", Offset = "0xD01B0C", VA = "0xD01B0C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000181")]
	public GameplayActions gameplay
	{
		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xCFF9A4", Offset = "0xCFF9A4", VA = "0xCFF9A4")]
		get
		{
			return default(GameplayActions);
		}
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xCFF83C", Offset = "0xCFF83C", VA = "0xCFF83C")]
	public SimpleControls()
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0xD01914", Offset = "0xD01914", VA = "0xD01914", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xD01AB8", Offset = "0xD01AB8", VA = "0xD01AB8", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xD01AD4", Offset = "0xD01AD4", VA = "0xD01AD4", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0xD01AF0", Offset = "0xD01AF0", VA = "0xD01AF0", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xCFF9F8", Offset = "0xCFF9F8", VA = "0xCFF9F8", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xCFFA3C", Offset = "0xCFFA3C", VA = "0xCFFA3C", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xD01B28", Offset = "0xD01B28", VA = "0xD01B28", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xD01B48", Offset = "0xD01B48", VA = "0xD01B48", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x200037B")]
public class ButtonScript : MonoBehaviour
{
	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Button;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text MyButtonText;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string projectileParticleName;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FireProjectile effectScript;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProjectileScript projectileScript;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float buttonsX;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float buttonsY;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float buttonsSizeX;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float buttonsSizeY;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float buttonsDistance;

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xB6CDC0", Offset = "0xB6CDC0", VA = "0xB6CDC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xB6CF8C", Offset = "0xB6CF8C", VA = "0xB6CF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xB6CECC", Offset = "0xB6CECC", VA = "0xB6CECC")]
	public void getProjectileNames()
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xB6CFB8", Offset = "0xB6CFB8", VA = "0xB6CFB8")]
	public bool overButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xB6D09C", Offset = "0xB6D09C", VA = "0xB6D09C")]
	public void LoadStage1()
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xB6D110", Offset = "0xB6D110", VA = "0xB6D110")]
	public void LoadStage2()
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xB6D184", Offset = "0xB6D184", VA = "0xB6D184")]
	public void LoadStage3()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xB6D1F8", Offset = "0xB6D1F8", VA = "0xB6D1F8")]
	public void LoadStage4()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xB6D26C", Offset = "0xB6D26C", VA = "0xB6D26C")]
	public void LoadStage5()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xB6D2E0", Offset = "0xB6D2E0", VA = "0xB6D2E0")]
	public void LoadStage6()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xB6D354", Offset = "0xB6D354", VA = "0xB6D354")]
	public void LoadStage7()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xB6D3C8", Offset = "0xB6D3C8", VA = "0xB6D3C8")]
	public ButtonScript()
	{
	}
}
[Token(Token = "0x200037C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D67E4", Offset = "0x6D67E4")]
public class DragMouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x921190", Offset = "0x921190", VA = "0x921190")]
	private void Start()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x921274", Offset = "0x921274", VA = "0x921274")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x9215C8", Offset = "0x9215C8", VA = "0x9215C8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x9215F8", Offset = "0x9215F8", VA = "0x9215F8")]
	public DragMouseOrbit()
	{
	}
}
[Token(Token = "0x200037D")]
public class FireProjectile : MonoBehaviour
{
	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hit;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] projectiles;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform spawnPosition;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int currentProjectile;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float speed;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ButtonScript selectedProjectileButton;

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xB506D0", Offset = "0xB506D0", VA = "0xB506D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xB50750", Offset = "0xB50750", VA = "0xB50750")]
	private void Update()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xB50BA4", Offset = "0xB50BA4", VA = "0xB50BA4")]
	public void nextEffect()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xB50BD4", Offset = "0xB50BD4", VA = "0xB50BD4")]
	public void previousEffect()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xB50C04", Offset = "0xB50C04", VA = "0xB50C04")]
	public void AdjustSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xB50C0C", Offset = "0xB50C0C", VA = "0xB50C0C")]
	public FireProjectile()
	{
	}
}
[Token(Token = "0x200037E")]
public class LoadSceneOnClick : MonoBehaviour
{
	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x9BC9C8", Offset = "0x9BC9C8", VA = "0x9BC9C8")]
	public void LoadScene1()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x9BCA3C", Offset = "0x9BCA3C", VA = "0x9BCA3C")]
	public void LoadScene2()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x9BCAB0", Offset = "0x9BCAB0", VA = "0x9BCAB0")]
	public void LoadScene3()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x9BCB24", Offset = "0x9BCB24", VA = "0x9BCB24")]
	public void LoadScene4()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x9BCB98", Offset = "0x9BCB98", VA = "0x9BCB98")]
	public void LoadScene5()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x9BCC0C", Offset = "0x9BCC0C", VA = "0x9BCC0C")]
	public void LoadScene6()
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x9BCC80", Offset = "0x9BCC80", VA = "0x9BCC80")]
	public void LoadScene7()
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x9BCCF4", Offset = "0x9BCCF4", VA = "0x9BCCF4")]
	public void LoadScene8()
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x9BCD68", Offset = "0x9BCD68", VA = "0x9BCD68")]
	public void LoadScene9()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x9BCDDC", Offset = "0x9BCDDC", VA = "0x9BCDDC")]
	public void LoadScene10()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x9BCE50", Offset = "0x9BCE50", VA = "0x9BCE50")]
	public void LoadScene11()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x9BCEC4", Offset = "0x9BCEC4", VA = "0x9BCEC4")]
	public void LoadScene12()
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x9BCF38", Offset = "0x9BCF38", VA = "0x9BCF38")]
	public void LoadScene13()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x9BCFAC", Offset = "0x9BCFAC", VA = "0x9BCFAC")]
	public void LoadScene14()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x9BD020", Offset = "0x9BD020", VA = "0x9BD020")]
	public void LoadScene15()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x9BD094", Offset = "0x9BD094", VA = "0x9BD094")]
	public LoadSceneOnClick()
	{
	}
}
[Token(Token = "0x200037F")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xA683EC", Offset = "0xA683EC", VA = "0xA683EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xA683F0", Offset = "0xA683F0", VA = "0xA683F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xA683F4", Offset = "0xA683F4", VA = "0xA683F4")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000380")]
public class ProjectileScript : MonoBehaviour
{
	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] trailParticles;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 impactNormal;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xA6AE28", Offset = "0xA6AE28", VA = "0xA6AE28")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xA6AF80", Offset = "0xA6AF80", VA = "0xA6AF80")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xA6B290", Offset = "0xA6B290", VA = "0xA6B290")]
	public ProjectileScript()
	{
	}
}
[Token(Token = "0x2000381")]
public class loopScript : MonoBehaviour
{
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D681C", Offset = "0x6D681C")]
	private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public loopScript <>4__this;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <effectPlayer>5__2;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x1181ED8", Offset = "0x1181ED8", VA = "0x1181ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1181F20", Offset = "0x1181F20", VA = "0x1181F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1181CCC", Offset = "0x1181CCC", VA = "0x1181CCC")]
		[DebuggerHidden]
		public <EffectLoop>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1181CF8", Offset = "0x1181CF8", VA = "0x1181CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1181CFC", Offset = "0x1181CFC", VA = "0x1181CFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1181EE0", Offset = "0x1181EE0", VA = "0x1181EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject chosenEffect;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float loopTimeLimit;

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x9F9CCC", Offset = "0x9F9CCC", VA = "0x9F9CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x9F9CD0", Offset = "0x9F9CD0", VA = "0x9F9CD0")]
	public void PlayEffect()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x9F9D20", Offset = "0x9F9D20", VA = "0x9F9D20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3280", Offset = "0x6E3280")]
	private IEnumerator EffectLoop()
	{
		return null;
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x9F9D98", Offset = "0x9F9D98", VA = "0x9F9D98")]
	public loopScript()
	{
	}
}
[Token(Token = "0x2000383")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D682C", Offset = "0x6D682C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000384")]
	public enum RotationAxes
	{
		[Token(Token = "0x400178E")]
		MouseXAndY,
		[Token(Token = "0x400178F")]
		MouseX,
		[Token(Token = "0x4001790")]
		MouseY
	}

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xC1E468", Offset = "0xC1E468", VA = "0xC1E468")]
	private void Update()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xC1E640", Offset = "0xC1E640", VA = "0xC1E640")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xC1E708", Offset = "0xC1E708", VA = "0xC1E708")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000385")]
public class KunaiRotation : MonoBehaviour
{
	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xSpeed;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ySpeed;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zSpeed;

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xE74AA4", Offset = "0xE74AA4", VA = "0xE74AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xE74AA8", Offset = "0xE74AA8", VA = "0xE74AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xE74B34", Offset = "0xE74B34", VA = "0xE74B34")]
	public KunaiRotation()
	{
	}
}
[Token(Token = "0x2000386")]
public class lightScript : MonoBehaviour
{
	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool Impact;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Sqr;

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x9F9890", Offset = "0x9F9890", VA = "0x9F9890")]
	private void Start()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x9F99A0", Offset = "0x9F99A0", VA = "0x9F99A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x9F9A64", Offset = "0x9F9A64", VA = "0x9F9A64")]
	public lightScript()
	{
	}
}
[Token(Token = "0x2000387")]
public class lightScriptLong : MonoBehaviour
{
	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool Impact;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Sqr;

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x9F9A6C", Offset = "0x9F9A6C", VA = "0x9F9A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x9F9B7C", Offset = "0x9F9B7C", VA = "0x9F9B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x9F9CC4", Offset = "0x9F9CC4", VA = "0x9F9CC4")]
	public lightScriptLong()
	{
	}
}
[Token(Token = "0x2000388")]
public static class DebugUtils
{
	[Serializable]
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6864", Offset = "0x6D6864")]
	private sealed class <>c
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<object, string> <>9__0_0;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x9FE888", Offset = "0x9FE888", VA = "0x9FE888")]
		public <>c()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x9FE890", Offset = "0x9FE890", VA = "0x9FE890")]
		internal string <ToString>b__0_0(object o)
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6874", Offset = "0x6D6874")]
	private sealed class <>c__1<TKey, TValue>
	{
		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__1<TKey, TValue> <>9;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<KeyValuePair<TKey, TValue>, string> <>9__1_0;

		[Token(Token = "0x6001507")]
		public <>c__1()
		{
		}

		[Token(Token = "0x6001508")]
		internal string <ToString>b__1_0(KeyValuePair<TKey, TValue> kvp)
		{
			return null;
		}
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x91A704", Offset = "0x91A704", VA = "0x91A704")]
	public static string ToString(Array array)
	{
		return null;
	}

	[Token(Token = "0x6001502")]
	public static string ToString<TKey, TValue>(Dictionary<TKey, TValue> dict)
	{
		return null;
	}
}
[Token(Token = "0x200038B")]
public abstract class SerializableDictionaryBase
{
	[Token(Token = "0x200038C")]
	public abstract class Storage
	{
		[Token(Token = "0x600150A")]
		[Address(RVA = "0x93B9E0", Offset = "0x93B9E0", VA = "0x93B9E0")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x200038D")]
	protected class Dictionary<TKey, TValue> : System.Collections.Generic.Dictionary<TKey, TValue>
	{
		[Token(Token = "0x600150B")]
		public Dictionary()
		{
		}

		[Token(Token = "0x600150C")]
		public Dictionary(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x600150D")]
		public Dictionary(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xD4830C", Offset = "0xD4830C", VA = "0xD4830C")]
	protected SerializableDictionaryBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200038E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6D6884", Offset = "0x6D6884")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : SerializableDictionaryBase, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary, ICollection, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<TKey, TValue> m_dict;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x17000188")]
	public ICollection<TKey> Keys
	{
		[Token(Token = "0x6001515")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000189")]
	public ICollection<TValue> Values
	{
		[Token(Token = "0x6001516")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018A")]
	public int Count
	{
		[Token(Token = "0x6001517")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018B")]
	public bool IsReadOnly
	{
		[Token(Token = "0x6001518")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018C")]
	public TValue Item
	{
		[Token(Token = "0x6001519")]
		get
		{
			return (TValue)null;
		}
		[Token(Token = "0x600151A")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public bool IsFixedSize
	{
		[Token(Token = "0x6001526")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018E")]
	private ICollection System.Collections.IDictionary.Keys
	{
		[Token(Token = "0x6001527")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018F")]
	private ICollection System.Collections.IDictionary.Values
	{
		[Token(Token = "0x6001528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public bool IsSynchronized
	{
		[Token(Token = "0x6001529")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public object SyncRoot
	{
		[Token(Token = "0x600152A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public object Item
	{
		[Token(Token = "0x600152B")]
		get
		{
			return null;
		}
		[Token(Token = "0x600152C")]
		set
		{
		}
	}

	[Token(Token = "0x600150E")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x600150F")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001510")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x6001511")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x6001512")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001513")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001514")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600151B")]
	public void Add(TKey key, TValue value)
	{
	}

	[Token(Token = "0x600151C")]
	public bool ContainsKey(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x600151D")]
	public bool Remove(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x600151E")]
	public bool TryGetValue(TKey key, out TValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x600151F")]
	public void Add(KeyValuePair<TKey, TValue> item)
	{
	}

	[Token(Token = "0x6001520")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001521")]
	public bool Contains(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001522")]
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x6001523")]
	public bool Remove(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001524")]
	public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001525")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600152D")]
	public void Add(object key, object value)
	{
	}

	[Token(Token = "0x600152E")]
	public bool Contains(object key)
	{
		return default(bool);
	}

	[Token(Token = "0x600152F")]
	private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001530")]
	public void Remove(object key)
	{
	}

	[Token(Token = "0x6001531")]
	public void CopyTo(Array array, int index)
	{
	}

	[Token(Token = "0x6001532")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x6001533")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6001534")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x200038F")]
public static class SerializableDictionary
{
	[Token(Token = "0x2000390")]
	public class Storage<T> : SerializableDictionaryBase.Storage
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6001535")]
		public Storage()
		{
		}
	}
}
[Token(Token = "0x2000391")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x6001536")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x6001537")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001538")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6001539")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x600153A")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000392")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x600153B")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600153C")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600153D")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600153E")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x600153F")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000393")]
public abstract class SerializableHashSetBase
{
	[Token(Token = "0x2000394")]
	public abstract class Storage
	{
		[Token(Token = "0x6001541")]
		[Address(RVA = "0x93B9E8", Offset = "0x93B9E8", VA = "0x93B9E8")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x2000395")]
	protected class HashSet<TValue> : System.Collections.Generic.HashSet<TValue>
	{
		[Token(Token = "0x6001542")]
		public HashSet()
		{
		}

		[Token(Token = "0x6001543")]
		public HashSet(ISet<TValue> set)
		{
		}

		[Token(Token = "0x6001544")]
		public HashSet(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xD48314", Offset = "0xD48314", VA = "0xD48314")]
	protected SerializableHashSetBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000396")]
public abstract class SerializableHashSet<T> : SerializableHashSetBase, ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> m_hashSet;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T[] m_keys;

	[Token(Token = "0x17000193")]
	public int Count
	{
		[Token(Token = "0x600154A")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000194")]
	public bool IsReadOnly
	{
		[Token(Token = "0x600154B")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001545")]
	public SerializableHashSet()
	{
	}

	[Token(Token = "0x6001546")]
	public SerializableHashSet(ISet<T> set)
	{
	}

	[Token(Token = "0x6001547")]
	public void CopyFrom(ISet<T> set)
	{
	}

	[Token(Token = "0x6001548")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001549")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600154C")]
	public bool Add(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600154D")]
	public void ExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x600154E")]
	public void IntersectWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x600154F")]
	public bool IsProperSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001550")]
	public bool IsProperSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001551")]
	public bool IsSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001552")]
	public bool IsSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001553")]
	public bool Overlaps(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001554")]
	public bool SetEquals(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001555")]
	public void SymmetricExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6001556")]
	public void UnionWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6001557")]
	private void System.Collections.Generic.ICollection<T>.Add(T item)
	{
	}

	[Token(Token = "0x6001558")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001559")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600155A")]
	public void CopyTo(T[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x600155B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600155C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600155D")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600155E")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x600155F")]
	protected SerializableHashSet(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6001560")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x2000397")]
public class ParticleTester : MonoBehaviour
{
	[Token(Token = "0x2000398")]
	private enum SystemType
	{
		[Token(Token = "0x40017AE")]
		None,
		[Token(Token = "0x40017AF")]
		Explosions,
		[Token(Token = "0x40017B0")]
		Flares,
		[Token(Token = "0x40017B1")]
		Flames
	}

	[Token(Token = "0x2000399")]
	private class FlareSystem
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject particleObject;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] particleSystems;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggleFlag;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool savedToggleFlag;

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x939104", Offset = "0x939104", VA = "0x939104")]
		public FlareSystem()
		{
		}
	}

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SystemType systemType;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object[] particleSystems;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Object[] loadFlareSystems;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Object[] loadDirectionalSystems;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<FlareSystem> flareSystems;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<FlareSystem> directionalSystems;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool expBool;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool flrBool;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool flmBool;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 scrollPosition;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private SystemType savedSystemType;

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x128B8D0", Offset = "0x128B8D0", VA = "0x128B8D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x128BE94", Offset = "0x128BE94", VA = "0x128BE94")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x128CBF8", Offset = "0x128CBF8", VA = "0x128CBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x128C9BC", Offset = "0x128C9BC", VA = "0x128C9BC")]
	private bool SetBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x128C9D0", Offset = "0x128C9D0", VA = "0x128C9D0")]
	private bool SetFlareBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x128CAE4", Offset = "0x128CAE4", VA = "0x128CAE4")]
	private bool SetDirBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x128CC30", Offset = "0x128CC30", VA = "0x128CC30")]
	private void SetNoFlares()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0x128CE78", Offset = "0x128CE78", VA = "0x128CE78")]
	public ParticleTester()
	{
	}
}
[Token(Token = "0x200039A")]
public class SphereGizmo : MonoBehaviour
{
	[Token(Token = "0x600156A")]
	[Address(RVA = "0xBA9F9C", Offset = "0xBA9F9C", VA = "0xBA9F9C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xBA9FEC", Offset = "0xBA9FEC", VA = "0xBA9FEC")]
	public SphereGizmo()
	{
	}
}
[Token(Token = "0x200039B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D68BC", Offset = "0x6D68BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D68BC", Offset = "0x6D68BC")]
public class CharacterMotor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200039C")]
	public class CharacterMotorMovement
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxForwardSpeed;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSidewaysSpeed;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxBackwardsSpeed;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve slopeSpeedMultiplier;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxGroundAcceleration;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAirAcceleration;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gravity;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxFallSpeed;

		[NonSerialized]
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CollisionFlags collisionFlags;

		[NonSerialized]
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 frameVelocity;

		[NonSerialized]
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 hitPoint;

		[NonSerialized]
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 lastHitPoint;

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x9FD368", Offset = "0x9FD368", VA = "0x9FD368")]
		public CharacterMotorMovement()
		{
		}
	}

	[Token(Token = "0x200039D")]
	public enum MovementTransferOnJump
	{
		[Token(Token = "0x40017D2")]
		None,
		[Token(Token = "0x40017D3")]
		InitTransfer,
		[Token(Token = "0x40017D4")]
		PermaTransfer,
		[Token(Token = "0x40017D5")]
		PermaLocked
	}

	[Serializable]
	[Token(Token = "0x200039E")]
	public class CharacterMotorJumping
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float baseHeight;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float extraHeight;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float perpAmount;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float steepPerpAmount;

		[NonSerialized]
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool jumping;

		[NonSerialized]
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool holdingJumpButton;

		[NonSerialized]
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastStartTime;

		[NonSerialized]
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lastButtonDownTime;

		[NonSerialized]
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 jumpDir;

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x9FD310", Offset = "0x9FD310", VA = "0x9FD310")]
		public CharacterMotorJumping()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039F")]
	public class CharacterMotorMovingPlatform
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MovementTransferOnJump movementTransfer;

		[NonSerialized]
		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hitPlatform;

		[NonSerialized]
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform activePlatform;

		[NonSerialized]
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 activeLocalPoint;

		[NonSerialized]
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 activeGlobalPoint;

		[NonSerialized]
		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion activeLocalRotation;

		[NonSerialized]
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion activeGlobalRotation;

		[NonSerialized]
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Matrix4x4 lastMatrix;

		[NonSerialized]
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 platformVelocity;

		[NonSerialized]
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool newPlatform;

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x9FD564", Offset = "0x9FD564", VA = "0x9FD564")]
		public CharacterMotorMovingPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A0")]
	public class CharacterMotorSliding
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float slidingSpeed;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidewaysControl;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedControl;

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x9FD57C", Offset = "0x9FD57C", VA = "0x9FD57C")]
		public CharacterMotorSliding()
		{
		}
	}

	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6940", Offset = "0x6D6940")]
	private sealed class <SubtractNewPlatformVelocity>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterMotor <>4__this;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <platform>5__2;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x9FD2C0", Offset = "0x9FD2C0", VA = "0x9FD2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x9FD308", Offset = "0x9FD308", VA = "0x9FD308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x9FD0B8", Offset = "0x9FD0B8", VA = "0x9FD0B8")]
		[DebuggerHidden]
		public <SubtractNewPlatformVelocity>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x9FD0E4", Offset = "0x9FD0E4", VA = "0x9FD0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x9FD0E8", Offset = "0x9FD0E8", VA = "0x9FD0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x9FD2C8", Offset = "0x9FD2C8", VA = "0x9FD2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canControl;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool useFixedUpdate;

	[NonSerialized]
	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 inputMoveDirection;

	[NonSerialized]
	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inputJump;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterMotorMovement movement;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CharacterMotorJumping jumping;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterMotorMovingPlatform movingPlatform;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterMotorSliding sliding;

	[NonSerialized]
	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool grounded;

	[NonSerialized]
	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 groundNormal;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tr;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CharacterController controller;

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xD80E9C", Offset = "0xD80E9C", VA = "0xD80E9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xD80F14", Offset = "0xD80F14", VA = "0xD80F14")]
	private void UpdateFunction()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xD81ECC", Offset = "0xD81ECC", VA = "0xD81ECC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xD82088", Offset = "0xD82088", VA = "0xD82088")]
	private void Update()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xD8173C", Offset = "0xD8173C", VA = "0xD8173C")]
	private Vector3 ApplyInputVelocityChange(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xD819C8", Offset = "0xD819C8", VA = "0xD819C8")]
	private Vector3 ApplyGravityAndJumping(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xD822C8", Offset = "0xD822C8", VA = "0xD822C8")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xD81E54", Offset = "0xD81E54", VA = "0xD81E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3330", Offset = "0x6E3330")]
	private IEnumerator SubtractNewPlatformVelocity()
	{
		return null;
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xD81D94", Offset = "0xD81D94", VA = "0xD81D94")]
	private bool MoveWithPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xD820E4", Offset = "0xD820E4", VA = "0xD820E4")]
	private Vector3 GetDesiredHorizontalVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xD821A8", Offset = "0xD821A8", VA = "0xD821A8")]
	private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xD81E38", Offset = "0xD81E38", VA = "0xD81E38")]
	private bool IsGroundedTest()
	{
		return default(bool);
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xD82264", Offset = "0xD82264", VA = "0xD82264")]
	private float GetMaxAcceleration(bool grounded)
	{
		return default(float);
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xD82290", Offset = "0xD82290", VA = "0xD82290")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xD82550", Offset = "0xD82550", VA = "0xD82550")]
	private bool IsJumping()
	{
		return default(bool);
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xD8256C", Offset = "0xD8256C", VA = "0xD8256C")]
	private bool IsSliding()
	{
		return default(bool);
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xD8259C", Offset = "0xD8259C", VA = "0xD8259C")]
	private bool IsTouchingCeiling()
	{
		return default(bool);
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0xD825BC", Offset = "0xD825BC", VA = "0xD825BC")]
	private bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xD82098", Offset = "0xD82098", VA = "0xD82098")]
	private bool TooSteep()
	{
		return default(bool);
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xD825C4", Offset = "0xD825C4", VA = "0xD825C4")]
	private Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xD825D0", Offset = "0xD825D0", VA = "0xD825D0")]
	private void SetControllable(bool controllable)
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0xD82468", Offset = "0xD82468", VA = "0xD82468")]
	private float MaxSpeedInDirection(Vector3 desiredMovementDirection)
	{
		return default(float);
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xD825DC", Offset = "0xD825DC", VA = "0xD825DC")]
	private void SetVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0xD82678", Offset = "0xD82678", VA = "0xD82678")]
	public CharacterMotor()
	{
	}
}
[Token(Token = "0x20003A2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D6950", Offset = "0x6D6950")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6950", Offset = "0x6D6950")]
public class FPSInputController : MonoBehaviour
{
	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterMotor motor;

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xB4C400", Offset = "0xB4C400", VA = "0xB4C400")]
	private void Awake()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xB4C45C", Offset = "0xB4C45C", VA = "0xB4C45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xB4C5DC", Offset = "0xB4C5DC", VA = "0xB4C5DC")]
	public FPSInputController()
	{
	}
}
[Token(Token = "0x20003A3")]
[ExecuteInEditMode]
public class TempDir : MonoBehaviour
{
	[Token(Token = "0x6001591")]
	[Address(RVA = "0xC59F98", Offset = "0xC59F98", VA = "0xC59F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xC5A0D0", Offset = "0xC5A0D0", VA = "0xC5A0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xC5A0D4", Offset = "0xC5A0D4", VA = "0xC5A0D4")]
	public TempDir()
	{
	}
}
[Token(Token = "0x20003A4")]
public class TimeTest : MonoBehaviour
{
	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float totalTime;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frameCount;

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xC5EC6C", Offset = "0xC5EC6C", VA = "0xC5EC6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xC5EC94", Offset = "0xC5EC94", VA = "0xC5EC94")]
	private void Update()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xC5ECFC", Offset = "0xC5ECFC", VA = "0xC5ECFC")]
	public TimeTest()
	{
	}
}
[Token(Token = "0x20003A5")]
[ExecuteInEditMode]
public class CodeGenerator : MonoBehaviour
{
	[Token(Token = "0x20003A6")]
	private enum types
	{
		[Token(Token = "0x40017FD")]
		Texture,
		[Token(Token = "0x40017FE")]
		Int,
		[Token(Token = "0x40017FF")]
		Float,
		[Token(Token = "0x4001800")]
		Vector,
		[Token(Token = "0x4001801")]
		Color
	}

	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CodeGenerator instance;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private types Types;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string ShaderName;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string Result;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string BaseShader;

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xD855C8", Offset = "0xD855C8", VA = "0xD855C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xD85658", Offset = "0xD85658", VA = "0xD85658")]
	public object Convert(string input)
	{
		return null;
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xD862B8", Offset = "0xD862B8", VA = "0xD862B8")]
	private void Decelaration(string name, types type)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xD86188", Offset = "0xD86188", VA = "0xD86188")]
	private void BaseReplace(string pattern, string replacement)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xD86218", Offset = "0xD86218", VA = "0xD86218")]
	private void BaseReplace(string pattern, string replacement, RegexOptions options)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xD86580", Offset = "0xD86580", VA = "0xD86580")]
	public CodeGenerator()
	{
	}
}
[Token(Token = "0x20003A7")]
public static class AnimationRecorderHelper
{
	[Token(Token = "0x600159E")]
	[Address(RVA = "0xCC6728", Offset = "0xCC6728", VA = "0xCC6728")]
	public static string GetTransformPathName(Transform rootTransform, Transform targetTransform)
	{
		return null;
	}
}
[Token(Token = "0x20003A8")]
public class MayaAnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D69F4", Offset = "0x6D69F4")]
	private sealed class <EndRecord>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MayaAnimationRecorder <>4__this;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x935298", Offset = "0x935298", VA = "0x935298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x9352E0", Offset = "0x9352E0", VA = "0x9352E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x935100", Offset = "0x935100", VA = "0x935100")]
		[DebuggerHidden]
		public <EndRecord>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x93512C", Offset = "0x93512C", VA = "0x93512C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x935130", Offset = "0x935130", VA = "0x935130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9352A0", Offset = "0x9352A0", VA = "0x9352A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A04", Offset = "0x6D6A04")]
	private sealed class <exportToMayaAnimation>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MayaAnimationRecorder <>4__this;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <newFilePath>5__2;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StreamWriter <writer>5__3;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x935618", Offset = "0x935618", VA = "0x935618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x935660", Offset = "0x935660", VA = "0x935660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x9352E8", Offset = "0x9352E8", VA = "0x9352E8")]
		[DebuggerHidden]
		public <exportToMayaAnimation>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x935314", Offset = "0x935314", VA = "0x935314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x935318", Offset = "0x935318", VA = "0x935318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x935620", Offset = "0x935620", VA = "0x935620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] observeObjs;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjAnimationContainer[] objAnims;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string saveFolderPath;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string saveFileName;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string originalMaFilePath;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode startKey;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode endKey;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool changeTimeScale;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startGameWithTimeScale;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float startRecordWithTimeScale;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool showLogGUI;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string logMessage;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool recordLimitFrames;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int recordFrames;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int processPerFrame;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int frameIndexToStartTransform;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isTransformStart;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int objNums;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int frameIndex;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isStart;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isEnd;

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x9C77F4", Offset = "0x9C77F4", VA = "0x9C77F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x9C7828", Offset = "0x9C7828", VA = "0x9C7828")]
	private void SettingRecordItems()
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x9C7AC4", Offset = "0x9C7AC4", VA = "0x9C7AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x9C7BFC", Offset = "0x9C7BFC", VA = "0x9C7BFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x9C7B18", Offset = "0x9C7B18", VA = "0x9C7B18")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x9C7B84", Offset = "0x9C7B84", VA = "0x9C7B84")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x9C7CF0", Offset = "0x9C7CF0", VA = "0x9C7CF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x9C7E00", Offset = "0x9C7E00", VA = "0x9C7E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E33E0", Offset = "0x6E33E0")]
	private IEnumerator EndRecord()
	{
		return null;
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x9C7E78", Offset = "0x9C7E78", VA = "0x9C7E78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3440", Offset = "0x6E3440")]
	private IEnumerator exportToMayaAnimation()
	{
		return null;
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x9C7A30", Offset = "0x9C7A30", VA = "0x9C7A30")]
	private void ShowLog(string logStr)
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x9C7EF0", Offset = "0x9C7EF0", VA = "0x9C7EF0")]
	public MayaAnimationRecorder()
	{
	}
}
[Token(Token = "0x20003AB")]
public class MayaCurveConatiner
{
	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string objName;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string curveName;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string propertyName;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string footPropertyName;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string inputPath;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string tempFilePath;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string finalFilePath;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int animCount;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string storedData;

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x9C7F74", Offset = "0x9C7F74", VA = "0x9C7F74")]
	public MayaCurveConatiner(string inputObjName, string inputCurveName, string inputPropertyName, string inputFootName, string filePath)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x9C8124", Offset = "0x9C8124", VA = "0x9C8124")]
	private string compressFileName()
	{
		return null;
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x9C8178", Offset = "0x9C8178", VA = "0x9C8178")]
	public void AddValue(int frameIndex, float inputValue)
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x9C8230", Offset = "0x9C8230", VA = "0x9C8230")]
	public void WriteIntoFile()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x9C82C0", Offset = "0x9C82C0", VA = "0x9C82C0")]
	private string getHeadContent()
	{
		return null;
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x9C87A4", Offset = "0x9C87A4", VA = "0x9C87A4")]
	private string getFootContent()
	{
		return null;
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x9C8AE0", Offset = "0x9C8AE0", VA = "0x9C8AE0")]
	public void AnimFinish()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x9C8B54", Offset = "0x9C8B54", VA = "0x9C8B54")]
	private void processFinalFile()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x9C8CCC", Offset = "0x9C8CCC", VA = "0x9C8CCC")]
	public string getFinalFilePath()
	{
		return null;
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x9C8D30", Offset = "0x9C8D30", VA = "0x9C8D30")]
	public bool cleanFile()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003AC")]
public class ObjAnimationContainer
{
	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform observeObj;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string objName;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string filePath;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool recordTranslation;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool recordRotation;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool recordScale;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MayaCurveConatiner[] tCurves;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MayaCurveConatiner[] rCurves;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MayaCurveConatiner[] sCurves;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string objFinalFilePath;

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xC299A8", Offset = "0xC299A8", VA = "0xC299A8")]
	public ObjAnimationContainer(Transform inputObj, string namePath, string inputPath, bool recordT, bool recordR, bool recordS)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xC2A0EC", Offset = "0xC2A0EC", VA = "0xC2A0EC")]
	public void recordFrame(int frameIndex)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xC2A35C", Offset = "0xC2A35C", VA = "0xC2A35C")]
	public void WriteIntoFile()
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xC2A4E0", Offset = "0xC2A4E0", VA = "0xC2A4E0")]
	public void EndRecord()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xC2A660", Offset = "0xC2A660", VA = "0xC2A660")]
	public void combineCurveFiles()
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xC2A950", Offset = "0xC2A950", VA = "0xC2A950")]
	public string getFinalFilePath()
	{
		return null;
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xC2A9B4", Offset = "0xC2A9B4", VA = "0xC2A9B4")]
	public bool cleanFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xC2A348", Offset = "0xC2A348", VA = "0xC2A348")]
	private Vector3 Export2MayaTranslation(Vector3 t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xC2A350", Offset = "0xC2A350", VA = "0xC2A350")]
	private Vector3 Export2MayaRotation(Vector3 r)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20003AD")]
public class UnityAnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string savePath;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fileName;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fileIndex;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode startRecordKey;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode stopRecordKey;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool showLogGUI;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string logMessage;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool recordLimitedFrames;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int recordFrames;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameIndex;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool changeTimeScale;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeScaleOnStart;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float timeScaleOnRecord;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform[] recordObjs;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityObjectAnimation[] objRecorders;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isStart;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float nowTime;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float FPS;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTick;

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x1B0AD00", Offset = "0x1B0AD00", VA = "0x1B0AD00")]
	public UnityAnimationRecorder()
	{
	}
}
[Token(Token = "0x20003AE")]
public class UnityCurveContainer
{
	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string propertyName;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string debugPathName;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animCurve;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FPS;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float KeyTolerance;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastRecordedTime;

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x1B0AD84", Offset = "0x1B0AD84", VA = "0x1B0AD84")]
	public UnityCurveContainer(string _propertyName)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x1B0AE5C", Offset = "0x1B0AE5C", VA = "0x1B0AE5C")]
	public void AddValue(float animTime, float previousFrameTime, float animValue)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x1B0B1A8", Offset = "0x1B0B1A8", VA = "0x1B0B1A8")]
	public void AddQuaternionValue(ref UnityCurveContainer animCurveY, ref UnityCurveContainer animCurveZ, ref UnityCurveContainer animCurveW, float animTime, float previousFrameTime, Quaternion animValue)
	{
	}
}
[Token(Token = "0x20003AF")]
public class UnityObjectAnimation
{
	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityCurveContainer[] curves;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform observeGameObject;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string pathName;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float LastAddFrameTime;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float PositionKeyTolerance;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float RotationKeyTolerance;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float ScaleKeyTolerance;

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x1B0B9EC", Offset = "0x1B0B9EC", VA = "0x1B0B9EC")]
	public UnityObjectAnimation(string hierarchyPath, Transform observeObj)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x1B0BE44", Offset = "0x1B0BE44", VA = "0x1B0BE44")]
	public void AddFrame(float time)
	{
	}
}
[Token(Token = "0x20003B0")]
public static class BuildConstants
{
	[Token(Token = "0x20003B1")]
	public enum ReleaseType
	{
		[Token(Token = "0x400185B")]
		None,
		[Token(Token = "0x400185C")]
		Release___Steam,
		[Token(Token = "0x400185D")]
		Release___Oculus
	}

	[Token(Token = "0x20003B2")]
	public enum Platform
	{
		[Token(Token = "0x400185F")]
		None,
		[Token(Token = "0x4001860")]
		PC
	}

	[Token(Token = "0x20003B3")]
	public enum Architecture
	{
		[Token(Token = "0x4001862")]
		None,
		[Token(Token = "0x4001863")]
		Windows_x64
	}

	[Token(Token = "0x20003B4")]
	public enum Distribution
	{
		[Token(Token = "0x4001865")]
		None
	}

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DateTime buildDate;

	[Token(Token = "0x4001855")]
	public const string version = "1.0.1603.5232";

	[Token(Token = "0x4001856")]
	public const ReleaseType releaseType = ReleaseType.Release___Oculus;

	[Token(Token = "0x4001857")]
	public const Platform platform = Platform.PC;

	[Token(Token = "0x4001858")]
	public const Architecture architecture = Architecture.Windows_x64;

	[Token(Token = "0x4001859")]
	public const Distribution distribution = Distribution.None;
}
[Token(Token = "0x20003B5")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x20003B6")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x117F248", Offset = "0x117F248", VA = "0x117F248", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x117F3B4", Offset = "0x117F3B4", VA = "0x117F3B4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x117F490", Offset = "0x117F490", VA = "0x117F490")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x1B15828", Offset = "0x1B15828", VA = "0x1B15828")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x1B15900", Offset = "0x1B15900", VA = "0x1B15900")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x1B159E4", Offset = "0x1B159E4", VA = "0x1B159E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x1B159E8", Offset = "0x1B159E8", VA = "0x1B159E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x1B18830", Offset = "0x1B18830", VA = "0x1B18830")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x1B189A0", Offset = "0x1B189A0", VA = "0x1B189A0")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x1B18B04", Offset = "0x1B18B04", VA = "0x1B18B04")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x1B18C5C", Offset = "0x1B18C5C", VA = "0x1B18C5C")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x1B18D54", Offset = "0x1B18D54", VA = "0x1B18D54")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x1B18EAC", Offset = "0x1B18EAC", VA = "0x1B18EAC")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x1B18FB4", Offset = "0x1B18FB4", VA = "0x1B18FB4")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x1B19118", Offset = "0x1B19118", VA = "0x1B19118")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x1B1925C", Offset = "0x1B1925C", VA = "0x1B1925C")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x1B1935C", Offset = "0x1B1935C", VA = "0x1B1935C")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x1B1945C", Offset = "0x1B1945C", VA = "0x1B1945C")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x1B1955C", Offset = "0x1B1955C", VA = "0x1B1955C")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x1B1965C", Offset = "0x1B1965C", VA = "0x1B1965C")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x20003B7")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x9EFC9C", Offset = "0x9EFC9C", VA = "0x9EFC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x9EFD84", Offset = "0x9EFD84", VA = "0x9EFD84")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x9EFD88", Offset = "0x9EFD88", VA = "0x9EFD88")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x9EFE9C", Offset = "0x9EFE9C", VA = "0x9EFE9C")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x20003B8")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x9EFF14", Offset = "0x9EFF14", VA = "0x9EFF14")]
	private void Start()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x9EFFF8", Offset = "0x9EFFF8", VA = "0x9EFFF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x9F0448", Offset = "0x9F0448", VA = "0x9F0448")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x9F044C", Offset = "0x9F044C", VA = "0x9F044C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x9F0450", Offset = "0x9F0450", VA = "0x9F0450")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x9F0454", Offset = "0x9F0454", VA = "0x9F0454")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x20003B9")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x20003BA")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A14", Offset = "0x6D6A14")]
		private sealed class <>c
		{
			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x1182128", Offset = "0x1182128", VA = "0x1182128")]
			public <>c()
			{
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0x1182130", Offset = "0x1182130", VA = "0x1182130")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A24", Offset = "0x6D6A24")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001601")]
			[Address(RVA = "0x117F940", Offset = "0x117F940", VA = "0x117F940")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0x11821A4", Offset = "0x11821A4", VA = "0x11821A4")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x117F6F4", Offset = "0x117F6F4", VA = "0x117F6F4", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x117F830", Offset = "0x117F830", VA = "0x117F830", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x117F948", Offset = "0x117F948", VA = "0x117F948")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x20003BD")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A34", Offset = "0x6D6A34")]
		private sealed class <>c
		{
			[Token(Token = "0x4001891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6001607")]
			[Address(RVA = "0x11822C4", Offset = "0x11822C4", VA = "0x11822C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0x11822CC", Offset = "0x11822CC", VA = "0x11822CC")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A44", Offset = "0x6D6A44")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x117FB9C", Offset = "0x117FB9C", VA = "0x117FB9C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0x1182340", Offset = "0x1182340", VA = "0x1182340")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x117F950", Offset = "0x117F950", VA = "0x117F950", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x117FA8C", Offset = "0x117FA8C", VA = "0x117FA8C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x117FBA4", Offset = "0x117FBA4", VA = "0x117FBA4")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x20003C0")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A54", Offset = "0x6D6A54")]
		private sealed class <>c
		{
			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600160F")]
			[Address(RVA = "0x1181F8C", Offset = "0x1181F8C", VA = "0x1181F8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1181F94", Offset = "0x1181F94", VA = "0x1181F94")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A64", Offset = "0x6D6A64")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001611")]
			[Address(RVA = "0x117F6E4", Offset = "0x117F6E4", VA = "0x117F6E4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1182008", Offset = "0x1182008", VA = "0x1182008")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x117F498", Offset = "0x117F498", VA = "0x117F498", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x117F5D4", Offset = "0x117F5D4", VA = "0x117F5D4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x117F6EC", Offset = "0x117F6EC", VA = "0x117F6EC")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x400188B")]
	private const int SUCCESS = 0;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x9F04E0", Offset = "0x9F04E0", VA = "0x9F04E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x9F05DC", Offset = "0x9F05DC", VA = "0x9F05DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x9F068C", Offset = "0x9F068C", VA = "0x9F068C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x9F0770", Offset = "0x9F0770", VA = "0x9F0770")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x9F0814", Offset = "0x9F0814", VA = "0x9F0814")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x9F0920", Offset = "0x9F0920", VA = "0x9F0920")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x9F0A1C", Offset = "0x9F0A1C", VA = "0x9F0A1C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x9F0A20", Offset = "0x9F0A20", VA = "0x9F0A20")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x9F0CC8", Offset = "0x9F0CC8", VA = "0x9F0CC8")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x20003C3")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x20003C4")]
	public class Item
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x117FBAC", Offset = "0x117FBAC", VA = "0x117FBAC")]
		public Item()
		{
		}
	}

	[Token(Token = "0x20003C5")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x117FC2C", Offset = "0x117FC2C", VA = "0x117FC2C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x117FCF8", Offset = "0x117FCF8", VA = "0x117FCF8", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x117FDD0", Offset = "0x117FDD0", VA = "0x117FDD0", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x117FED4", Offset = "0x117FED4", VA = "0x117FED4", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x117FF84", Offset = "0x117FF84", VA = "0x117FF84", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x118077C", Offset = "0x118077C", VA = "0x118077C", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x118080C", Offset = "0x118080C", VA = "0x118080C", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x11808E4", Offset = "0x11808E4", VA = "0x11808E4", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x11809BC", Offset = "0x11809BC", VA = "0x11809BC", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1180AC0", Offset = "0x1180AC0", VA = "0x1180AC0", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1180F74", Offset = "0x1180F74", VA = "0x1180F74", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1181428", Offset = "0x1181428", VA = "0x1181428", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x11814D0", Offset = "0x11814D0", VA = "0x11814D0", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x118159C", Offset = "0x118159C", VA = "0x118159C")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x9F0E18", Offset = "0x9F0E18", VA = "0x9F0E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x9F1034", Offset = "0x9F1034", VA = "0x9F1034")]
	private void Update()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x9F1038", Offset = "0x9F1038", VA = "0x9F1038")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x9F1E60", Offset = "0x9F1E60", VA = "0x9F1E60")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x9F1F48", Offset = "0x9F1F48", VA = "0x9F1F48")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x9F2038", Offset = "0x9F2038", VA = "0x9F2038")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x20003C6")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1181608", Offset = "0x1181608", VA = "0x1181608", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x11816B0", Offset = "0x11816B0", VA = "0x11816B0")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A74", Offset = "0x6D6A74")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40018AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x11817AC", Offset = "0x11817AC", VA = "0x11817AC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0x11823FC", Offset = "0x11823FC", VA = "0x11823FC")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x11816B8", Offset = "0x11816B8", VA = "0x11816B8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x11817B4", Offset = "0x11817B4", VA = "0x11817B4")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x20003CA")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6A84", Offset = "0x6D6A84")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001639")]
				[Address(RVA = "0x1182594", Offset = "0x1182594", VA = "0x1182594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600163B")]
				[Address(RVA = "0x11825DC", Offset = "0x11825DC", VA = "0x11825DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0x11818B8", Offset = "0x11818B8", VA = "0x11818B8")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0x11824A4", Offset = "0x11824A4", VA = "0x11824A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0x11824A8", Offset = "0x11824A8", VA = "0x11824A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0x118259C", Offset = "0x118259C", VA = "0x118259C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x11817BC", Offset = "0x11817BC", VA = "0x11817BC", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1181840", Offset = "0x1181840", VA = "0x1181840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3540", Offset = "0x6E3540")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x11818E4", Offset = "0x11818E4", VA = "0x11818E4")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x9F2100", Offset = "0x9F2100", VA = "0x9F2100")]
	private void Start()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x9F2204", Offset = "0x9F2204", VA = "0x9F2204")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x9F22AC", Offset = "0x9F22AC", VA = "0x9F22AC")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x20003CC")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x9F2340", Offset = "0x9F2340", VA = "0x9F2340")]
	private void Start()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x9F2424", Offset = "0x9F2424", VA = "0x9F2424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x9F2D48", Offset = "0x9F2D48", VA = "0x9F2D48")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x9F2EA8", Offset = "0x9F2EA8", VA = "0x9F2EA8")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x9F2EAC", Offset = "0x9F2EAC", VA = "0x9F2EAC")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x9F3000", Offset = "0x9F3000", VA = "0x9F3000")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x20003CD")]
public class VolumeCloud : MonoBehaviour
{
	[Token(Token = "0x6001643")]
	[Address(RVA = "0x9F3E64", Offset = "0x9F3E64", VA = "0x9F3E64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x9F40AC", Offset = "0x9F40AC", VA = "0x9F40AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x9F40B0", Offset = "0x9F40B0", VA = "0x9F40B0")]
	public VolumeCloud()
	{
	}
}
[Token(Token = "0x20003CE")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x6001646")]
	[Address(RVA = "0xD7F55C", Offset = "0xD7F55C", VA = "0xD7F55C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xD7F560", Offset = "0xD7F560", VA = "0xD7F560")]
	private void Update()
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xD7F760", Offset = "0xD7F760", VA = "0xD7F760")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xD7F848", Offset = "0xD7F848", VA = "0xD7F848")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20003CF")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x600164A")]
	[Address(RVA = "0xD89B18", Offset = "0xD89B18", VA = "0xD89B18")]
	private void Start()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0xD89D34", Offset = "0xD89D34", VA = "0xD89D34")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0xD89DFC", Offset = "0xD89DFC", VA = "0xD89DFC")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20003D0")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x600164D")]
	[Address(RVA = "0xCFE338", Offset = "0xCFE338", VA = "0xCFE338")]
	private void Start()
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0xCFE33C", Offset = "0xCFE33C", VA = "0xCFE33C")]
	private void Update()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0xCFE3F0", Offset = "0xCFE3F0", VA = "0xCFE3F0")]
	public ShotBehavior()
	{
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6A94", Offset = "0x6D6A94")]
	public class SetFovGlobalShaderVariable : MonoBehaviour
	{
		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_camera;

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD483C8", Offset = "0xD483C8", VA = "0xD483C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD48444", Offset = "0xD48444", VA = "0xD48444")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD484A4", Offset = "0xD484A4", VA = "0xD484A4")]
		public SetFovGlobalShaderVariable()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6AF4", Offset = "0x6D6AF4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6AF4", Offset = "0x6D6AF4")]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool stretchEnds;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float repeatScale;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_updateLineColor;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_updateLineWidth;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool m_updateSaberFactor;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_setLinePropertiesAtStart;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6DAC74", Offset = "0x6DAC74")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_saberFactor;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material myMaterial;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2[] m_vline_texCoords;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2[] m_vline_vertexOffsets;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector2[] m_vline_vertexOffsetsStretched;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector2[] m_vline_motiontexCoords;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int[] m_vline_indices;

		[Token(Token = "0x1700019D")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x9F40B8", Offset = "0x9F40B8", VA = "0x9F40B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x9F40C4", Offset = "0x9F40C4", VA = "0x9F40C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0x9F43BC", Offset = "0x9F43BC", VA = "0x9F43BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001656")]
			[Address(RVA = "0x9F43C8", Offset = "0x9F43C8", VA = "0x9F43C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public bool SetLinePropertiesAtStart
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x9F43EC", Offset = "0x9F43EC", VA = "0x9F43EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x9F43F4", Offset = "0x9F43F4", VA = "0x9F43F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public Color LineColor
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x9F4400", Offset = "0x9F4400", VA = "0x9F4400")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x9F440C", Offset = "0x9F440C", VA = "0x9F440C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public float LineWidth
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x9F4420", Offset = "0x9F4420", VA = "0x9F4420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x9F4428", Offset = "0x9F4428", VA = "0x9F4428")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public float SaberFactor
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x9F4438", Offset = "0x9F4438", VA = "0x9F4438")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x9F4440", Offset = "0x9F4440", VA = "0x9F4440")]
			set
			{
			}
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x9F40DC", Offset = "0x9F40DC", VA = "0x9F40DC")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint, float endIntensity = 1f)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x9F4450", Offset = "0x9F4450", VA = "0x9F4450")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x9F4980", Offset = "0x9F4980", VA = "0x9F4980")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x9F4A1C", Offset = "0x9F4A1C", VA = "0x9F4A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x9F4BDC", Offset = "0x9F4BDC", VA = "0x9F4BDC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x9F4C9C", Offset = "0x9F4C9C", VA = "0x9F4C9C")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6B88", Offset = "0x6D6B88")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6B88", Offset = "0x6D6B88")]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_updateLineColor;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_updateLineWidth;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		[HideInInspector]
		private bool m_setLineColorAtStart;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private Color m_lineColor;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x170001A3")]
		[ExposeProperty]
		public bool SetLineColorAtStart
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x9F5008", Offset = "0x9F5008", VA = "0x9F5008")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x9F5010", Offset = "0x9F5010", VA = "0x9F5010")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		[ExposeProperty]
		public Color LineColor
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x9F501C", Offset = "0x9F501C", VA = "0x9F501C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x9F5028", Offset = "0x9F5028", VA = "0x9F5028")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		[ExposeProperty]
		public float LineWidth
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x9F503C", Offset = "0x9F503C", VA = "0x9F503C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x9F5044", Offset = "0x9F5044", VA = "0x9F5044")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x9F5054", Offset = "0x9F5054", VA = "0x9F5054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x9F505C", Offset = "0x9F505C", VA = "0x9F505C")]
		private void Start()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x9F5210", Offset = "0x9F5210", VA = "0x9F5210")]
		public void UpdateLineVertices(Vector3[] m_newSetOfVertices)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x9F5EE4", Offset = "0x9F5EE4", VA = "0x9F5EE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x9F6034", Offset = "0x9F6034", VA = "0x9F6034")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x9F6194", Offset = "0x9F6194", VA = "0x9F6194")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_volumetricLinePrefab;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] m_lineVertices;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x170001A7")]
		public Color LineColor
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x9F619C", Offset = "0x9F619C", VA = "0x9F619C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x9F61DC", Offset = "0x9F61DC", VA = "0x9F61DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public float LineWidth
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x9F6248", Offset = "0x9F6248", VA = "0x9F6248")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x9F6284", Offset = "0x9F6284", VA = "0x9F6284")]
			set
			{
			}
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x9F62EC", Offset = "0x9F62EC", VA = "0x9F62EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x9F65B8", Offset = "0x9F65B8", VA = "0x9F65B8")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x9F669C", Offset = "0x9F669C", VA = "0x9F669C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x9F67FC", Offset = "0x9F67FC", VA = "0x9F67FC")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6D6C1C", Offset = "0x6D6C1C")]
	public class ExposePropertyAttribute : Attribute
	{
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB4BBF0", Offset = "0xB4BBF0", VA = "0xB4BBF0")]
		public ExposePropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC62D34", Offset = "0xC62D34", VA = "0xC62D34")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20003D7")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x128AD90", Offset = "0x128AD90", VA = "0x128AD90")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x128AE0C", Offset = "0x128AE0C", VA = "0x128AE0C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x128B3A4", Offset = "0x128B3A4", VA = "0x128B3A4")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x128B4C0", Offset = "0x128B4C0", VA = "0x128B4C0")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x20003D8")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C40", Offset = "0x6D6C40")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6001692")]
			[Address(RVA = "0x934FE4", Offset = "0x934FE4", VA = "0x934FE4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001693")]
			[Address(RVA = "0x934FEC", Offset = "0x934FEC", VA = "0x934FEC")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C50", Offset = "0x6D6C50")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170001A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001697")]
				[Address(RVA = "0x9350B0", Offset = "0x9350B0", VA = "0x9350B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001699")]
				[Address(RVA = "0x9350F8", Offset = "0x9350F8", VA = "0x9350F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001694")]
			[Address(RVA = "0x935010", Offset = "0x935010", VA = "0x935010")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001695")]
			[Address(RVA = "0x93503C", Offset = "0x93503C", VA = "0x93503C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001696")]
			[Address(RVA = "0x935040", Offset = "0x935040", VA = "0x935040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001698")]
			[Address(RVA = "0x9350B8", Offset = "0x9350B8", VA = "0x9350B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C60", Offset = "0x6D6C60")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170001AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600169D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600169F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600169A")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600169B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600169C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600169E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C70", Offset = "0x6D6C70")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A0")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60016A1")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A2")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A4")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C80", Offset = "0x6D6C80")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170001AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016AB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A6")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60016A7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AA")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6C90", Offset = "0x6D6C90")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170001B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016AF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016AC")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60016AD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016AE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x9C5DC8", Offset = "0x9C5DC8", VA = "0x9C5DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x9C5EEC", Offset = "0x9C5EEC", VA = "0x9C5EEC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x9C60AC", Offset = "0x9C60AC", VA = "0x9C60AC")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x9C61C0", Offset = "0x9C61C0", VA = "0x9C61C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x9C6228", Offset = "0x9C6228", VA = "0x9C6228")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x9C641C", Offset = "0x9C641C", VA = "0x9C641C")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001687")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001688")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001689")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x600168A")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x9C6444", Offset = "0x9C6444", VA = "0x9C6444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3600", Offset = "0x6E3600")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3660", Offset = "0x6E3660")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x600168D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E36C0", Offset = "0x6E36C0")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3720", Offset = "0x6E3720")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x600168F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E3780", Offset = "0x6E3780")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x9C64BC", Offset = "0x9C64BC", VA = "0x9C64BC")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public enum Locale
	{
		[Token(Token = "0x40018FB")]
		US,
		[Token(Token = "0x40018FC")]
		DE,
		[Token(Token = "0x40018FD")]
		JP,
		[Token(Token = "0x40018FE")]
		KR,
		[Token(Token = "0x40018FF")]
		RU,
		[Token(Token = "0x4001900")]
		CN,
		[Token(Token = "0x4001901")]
		TW,
		[Token(Token = "0x4001902")]
		FR
	}
	[Token(Token = "0x20003E0")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x20003E1")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20003E2")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20003E3")]
	public class Leaderboard
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAD9C", Offset = "0x6DAD9C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADAC", Offset = "0x6DADAC")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADBC", Offset = "0x6DADBC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x170001B3")]
		public int Rank
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xE75DC0", Offset = "0xE75DC0", VA = "0xE75DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3970", Offset = "0x6E3970")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xE75DC8", Offset = "0xE75DC8", VA = "0xE75DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3980", Offset = "0x6E3980")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public int Score
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xE75DD0", Offset = "0xE75DD0", VA = "0xE75DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3990", Offset = "0x6E3990")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xE75DD8", Offset = "0xE75DD8", VA = "0xE75DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39A0", Offset = "0x6E39A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public string UserName
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xE75DE0", Offset = "0xE75DE0", VA = "0xE75DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39B0", Offset = "0x6E39B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xE75DE8", Offset = "0xE75DE8", VA = "0xE75DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39C0", Offset = "0x6E39C0")]
			set
			{
			}
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xE75DF0", Offset = "0xE75DF0", VA = "0xE75DF0")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x20003E5")]
		public enum Platform
		{
			[Token(Token = "0x4001909")]
			Windows,
			[Token(Token = "0x400190A")]
			Android
		}

		[Token(Token = "0x20003E6")]
		public enum TransactionType
		{
			[Token(Token = "0x400190C")]
			Unknown,
			[Token(Token = "0x400190D")]
			Paid,
			[Token(Token = "0x400190E")]
			Redeem,
			[Token(Token = "0x400190F")]
			FreeTrial
		}

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADCC", Offset = "0x6DADCC")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADDC", Offset = "0x6DADDC")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x170001B6")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xBB8D74", Offset = "0xBB8D74", VA = "0xBB8D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39D0", Offset = "0x6E39D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xBB8D7C", Offset = "0xBB8D7C", VA = "0xBB8D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39E0", Offset = "0x6E39E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public TransactionType Type
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xBB8D84", Offset = "0xBB8D84", VA = "0xBB8D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E39F0", Offset = "0x6E39F0")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xBB8D8C", Offset = "0xBB8D8C", VA = "0xBB8D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3A00", Offset = "0x6E3A00")]
			set
			{
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xBB88C8", Offset = "0xBB88C8", VA = "0xBB88C8")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class Api
	{
		[Token(Token = "0x20003E8")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x60016D2")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x60016D3")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x9FAE5C", Offset = "0x9FAE5C", VA = "0x9FAE5C")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xCC696C", Offset = "0xCC696C", VA = "0xCC696C")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xCC687C", Offset = "0xCC687C", VA = "0xCC687C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3A10", Offset = "0x6E3A10")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xCC6C3C", Offset = "0xCC6C3C", VA = "0xCC6C3C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xCC68F4", Offset = "0xCC68F4", VA = "0xCC68F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3A70", Offset = "0x6E3A70")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xCC6F84", Offset = "0xCC6F84", VA = "0xCC6F84")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xCC7234", Offset = "0xCC7234", VA = "0xCC7234")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xCC73F8", Offset = "0xCC73F8", VA = "0xCC73F8")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class User
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x1B0C108", Offset = "0x1B0C108", VA = "0x1B0C108")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3AD0", Offset = "0x6E3AD0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1B0C168", Offset = "0x1B0C168", VA = "0x1B0C168")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x1B0C470", Offset = "0x1B0C470", VA = "0x1B0C470")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1B0C594", Offset = "0x1B0C594", VA = "0x1B0C594")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1B0C6B8", Offset = "0x1B0C6B8", VA = "0x1B0C6B8")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1B0C7DC", Offset = "0x1B0C7DC", VA = "0x1B0C7DC")]
		public User()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class UserStats
	{
		[Token(Token = "0x20003EB")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001922")]
			GlobalData,
			[Token(Token = "0x4001923")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001924")]
			LocalData,
			[Token(Token = "0x4001925")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20003EC")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001927")]
			AllTime,
			[Token(Token = "0x4001928")]
			Daily,
			[Token(Token = "0x4001929")]
			Weekly,
			[Token(Token = "0x400192A")]
			Monthly
		}

		[Token(Token = "0x20003ED")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x400192C")]
			None,
			[Token(Token = "0x400192D")]
			Ascending,
			[Token(Token = "0x400192E")]
			Descending
		}

		[Token(Token = "0x20003EE")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001930")]
			None,
			[Token(Token = "0x4001931")]
			Numeric,
			[Token(Token = "0x4001932")]
			TimeSeconds,
			[Token(Token = "0x4001933")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20003EF")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001935")]
			None,
			[Token(Token = "0x4001936")]
			KeepBest,
			[Token(Token = "0x4001937")]
			ForceUpdate
		}

		[Token(Token = "0x20003F0")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001939")]
			Name,
			[Token(Token = "0x400193A")]
			Desc,
			[Token(Token = "0x400193B")]
			Hidden
		}

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1B0C7EC", Offset = "0x1B0C7EC", VA = "0x1B0C7EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3B30", Offset = "0x6E3B30")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1B0C9CC", Offset = "0x1B0C9CC", VA = "0x1B0C9CC")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x1B0C84C", Offset = "0x1B0C84C", VA = "0x1B0C84C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3B90", Offset = "0x6E3B90")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x1B0CCD4", Offset = "0x1B0CCD4", VA = "0x1B0CCD4")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1B0CFDC", Offset = "0x1B0CFDC", VA = "0x1B0CFDC")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1B0D144", Offset = "0x1B0D144", VA = "0x1B0D144")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x1B0D2B4", Offset = "0x1B0D2B4", VA = "0x1B0D2B4")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1B0D41C", Offset = "0x1B0D41C", VA = "0x1B0D41C")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1B0C8AC", Offset = "0x1B0C8AC", VA = "0x1B0C8AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3BF0", Offset = "0x6E3BF0")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1B0D58C", Offset = "0x1B0D58C", VA = "0x1B0D58C")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1B0D894", Offset = "0x1B0D894", VA = "0x1B0D894")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1B0D990", Offset = "0x1B0D990", VA = "0x1B0D990")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1B0DA8C", Offset = "0x1B0DA8C", VA = "0x1B0DA8C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1B0DB88", Offset = "0x1B0DB88", VA = "0x1B0DB88")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1B0DCF0", Offset = "0x1B0DCF0", VA = "0x1B0DCF0")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1B0DEA4", Offset = "0x1B0DEA4", VA = "0x1B0DEA4")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1B0DFA0", Offset = "0x1B0DFA0", VA = "0x1B0DFA0")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1B0C90C", Offset = "0x1B0C90C", VA = "0x1B0C90C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3C50", Offset = "0x6E3C50")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1B0E09C", Offset = "0x1B0E09C", VA = "0x1B0E09C")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1B0C96C", Offset = "0x1B0C96C", VA = "0x1B0C96C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3CB0", Offset = "0x6E3CB0")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1B0E584", Offset = "0x1B0E584", VA = "0x1B0E584")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1B0E950", Offset = "0x1B0E950", VA = "0x1B0E950")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1B0EC14", Offset = "0x1B0EC14", VA = "0x1B0EC14")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x1B0ED2C", Offset = "0x1B0ED2C", VA = "0x1B0ED2C")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1B0EE44", Offset = "0x1B0EE44", VA = "0x1B0EE44")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x1B0EF5C", Offset = "0x1B0EF5C", VA = "0x1B0EF5C")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xCC814C", Offset = "0xCC814C", VA = "0xCC814C")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class IAPurchase
	{
		[Token(Token = "0x20003F3")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xA018A4", Offset = "0xA018A4", VA = "0xA018A4")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xA01910", Offset = "0xA01910", VA = "0xA01910")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0xA01980", Offset = "0xA01980", VA = "0xA01980", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xA01E9C", Offset = "0xA01E9C", VA = "0xA01E9C")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6001715")]
			[Address(RVA = "0xA01F0C", Offset = "0xA01F0C", VA = "0xA01F0C", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0xA02428", Offset = "0xA02428", VA = "0xA02428")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6001717")]
			[Address(RVA = "0xA02498", Offset = "0xA02498", VA = "0xA02498", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0xA02A44", Offset = "0xA02A44", VA = "0xA02A44")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0xA02AB4", Offset = "0xA02AB4", VA = "0xA02AB4", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0xA0358C", Offset = "0xA0358C", VA = "0xA0358C")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x600171B")]
			[Address(RVA = "0xA035FC", Offset = "0xA035FC", VA = "0xA035FC", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600171C")]
			[Address(RVA = "0xA045FC", Offset = "0xA045FC", VA = "0xA045FC")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0xA0466C", Offset = "0xA0466C", VA = "0xA0466C", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x600171E")]
			[Address(RVA = "0xA04C24", Offset = "0xA04C24", VA = "0xA04C24")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0xA04C94", Offset = "0xA04C94", VA = "0xA04C94", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0xA051A4", Offset = "0xA051A4", VA = "0xA051A4")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0xA05214", Offset = "0xA05214", VA = "0xA05214", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0xA05724", Offset = "0xA05724", VA = "0xA05724")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xA05794", Offset = "0xA05794", VA = "0xA05794", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0xA05F1C", Offset = "0xA05F1C", VA = "0xA05F1C")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001725")]
			[Address(RVA = "0xA05F8C", Offset = "0xA05F8C", VA = "0xA05F8C", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0xA064BC", Offset = "0xA064BC", VA = "0xA064BC")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6001727")]
			[Address(RVA = "0xA0652C", Offset = "0xA0652C", VA = "0xA0652C", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001728")]
			[Address(RVA = "0xA06A5C", Offset = "0xA06A5C", VA = "0xA06A5C")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001729")]
			[Address(RVA = "0xA06ACC", Offset = "0xA06ACC", VA = "0xA06ACC", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20003F4")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x600172A")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x600172B")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x600172C")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x600172D")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x600172E")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x600172F")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6001730")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6001731")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6001732")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6001733")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6001734")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6001735")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6001736")]
			[Address(RVA = "0xA0189C", Offset = "0xA0189C", VA = "0xA0189C")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20003F5")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x9314C4", Offset = "0x9314C4", VA = "0x9314C4", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0x9314C8", Offset = "0x9314C8", VA = "0x9314C8", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6001739")]
			[Address(RVA = "0x9314CC", Offset = "0x9314CC", VA = "0x9314CC", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600173A")]
			[Address(RVA = "0x9314D0", Offset = "0x9314D0", VA = "0x9314D0", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x600173B")]
			[Address(RVA = "0x9314D4", Offset = "0x9314D4", VA = "0x9314D4", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0x9314D8", Offset = "0x9314D8", VA = "0x9314D8", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x600173D")]
			[Address(RVA = "0x9314DC", Offset = "0x9314DC", VA = "0x9314DC", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x600173E")]
			[Address(RVA = "0x9314E0", Offset = "0x9314E0", VA = "0x9314E0", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x600173F")]
			[Address(RVA = "0x9314E4", Offset = "0x9314E4", VA = "0x9314E4", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001740")]
			[Address(RVA = "0x9314E8", Offset = "0x9314E8", VA = "0x9314E8", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0x9314EC", Offset = "0x9314EC", VA = "0x9314EC", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001742")]
			[Address(RVA = "0x9314F0", Offset = "0x9314F0", VA = "0x9314F0", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001743")]
			[Address(RVA = "0x9314F4", Offset = "0x9314F4", VA = "0x9314F4", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0x9314F8", Offset = "0x9314F8", VA = "0x9314F8")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20003F6")]
		public class QueryResponse
		{
			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADEC", Offset = "0x6DADEC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DADFC", Offset = "0x6DADFC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE0C", Offset = "0x6DAE0C")]
			private string <status>k__BackingField;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE1C", Offset = "0x6DAE1C")]
			private string <price>k__BackingField;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE2C", Offset = "0x6DAE2C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE3C", Offset = "0x6DAE3C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170001B8")]
			public string order_id
			{
				[Token(Token = "0x6001745")]
				[Address(RVA = "0x931538", Offset = "0x931538", VA = "0x931538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E41F0", Offset = "0x6E41F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001746")]
				[Address(RVA = "0x931540", Offset = "0x931540", VA = "0x931540")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4200", Offset = "0x6E4200")]
				set
				{
				}
			}

			[Token(Token = "0x170001B9")]
			public string purchase_id
			{
				[Token(Token = "0x6001747")]
				[Address(RVA = "0x931548", Offset = "0x931548", VA = "0x931548")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4210", Offset = "0x6E4210")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001748")]
				[Address(RVA = "0x931550", Offset = "0x931550", VA = "0x931550")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4220", Offset = "0x6E4220")]
				set
				{
				}
			}

			[Token(Token = "0x170001BA")]
			public string status
			{
				[Token(Token = "0x6001749")]
				[Address(RVA = "0x931558", Offset = "0x931558", VA = "0x931558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4230", Offset = "0x6E4230")]
				get
				{
					return null;
				}
				[Token(Token = "0x600174A")]
				[Address(RVA = "0x931560", Offset = "0x931560", VA = "0x931560")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4240", Offset = "0x6E4240")]
				set
				{
				}
			}

			[Token(Token = "0x170001BB")]
			public string price
			{
				[Token(Token = "0x600174B")]
				[Address(RVA = "0x931568", Offset = "0x931568", VA = "0x931568")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4250", Offset = "0x6E4250")]
				get
				{
					return null;
				}
				[Token(Token = "0x600174C")]
				[Address(RVA = "0x931570", Offset = "0x931570", VA = "0x931570")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4260", Offset = "0x6E4260")]
				set
				{
				}
			}

			[Token(Token = "0x170001BC")]
			public string currency
			{
				[Token(Token = "0x600174D")]
				[Address(RVA = "0x931578", Offset = "0x931578", VA = "0x931578")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4270", Offset = "0x6E4270")]
				get
				{
					return null;
				}
				[Token(Token = "0x600174E")]
				[Address(RVA = "0x931580", Offset = "0x931580", VA = "0x931580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4280", Offset = "0x6E4280")]
				set
				{
				}
			}

			[Token(Token = "0x170001BD")]
			public long paid_timestamp
			{
				[Token(Token = "0x600174F")]
				[Address(RVA = "0x931588", Offset = "0x931588", VA = "0x931588")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4290", Offset = "0x6E4290")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001750")]
				[Address(RVA = "0x931590", Offset = "0x931590", VA = "0x931590")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42A0", Offset = "0x6E42A0")]
				set
				{
				}
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x931598", Offset = "0x931598", VA = "0x931598")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20003F7")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE4C", Offset = "0x6DAE4C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE5C", Offset = "0x6DAE5C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE6C", Offset = "0x6DAE6C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE7C", Offset = "0x6DAE7C")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE8C", Offset = "0x6DAE8C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAE9C", Offset = "0x6DAE9C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAEAC", Offset = "0x6DAEAC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170001BE")]
			public string order_id
			{
				[Token(Token = "0x6001752")]
				[Address(RVA = "0x9315A0", Offset = "0x9315A0", VA = "0x9315A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42B0", Offset = "0x6E42B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001753")]
				[Address(RVA = "0x9315A8", Offset = "0x9315A8", VA = "0x9315A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42C0", Offset = "0x6E42C0")]
				set
				{
				}
			}

			[Token(Token = "0x170001BF")]
			public string app_id
			{
				[Token(Token = "0x6001754")]
				[Address(RVA = "0x9315B0", Offset = "0x9315B0", VA = "0x9315B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42D0", Offset = "0x6E42D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001755")]
				[Address(RVA = "0x9315B8", Offset = "0x9315B8", VA = "0x9315B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42E0", Offset = "0x6E42E0")]
				set
				{
				}
			}

			[Token(Token = "0x170001C0")]
			public string purchase_id
			{
				[Token(Token = "0x6001756")]
				[Address(RVA = "0x9315C0", Offset = "0x9315C0", VA = "0x9315C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E42F0", Offset = "0x6E42F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001757")]
				[Address(RVA = "0x9315C8", Offset = "0x9315C8", VA = "0x9315C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4300", Offset = "0x6E4300")]
				set
				{
				}
			}

			[Token(Token = "0x170001C1")]
			public string user_data
			{
				[Token(Token = "0x6001758")]
				[Address(RVA = "0x9315D0", Offset = "0x9315D0", VA = "0x9315D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4310", Offset = "0x6E4310")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001759")]
				[Address(RVA = "0x9315D8", Offset = "0x9315D8", VA = "0x9315D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4320", Offset = "0x6E4320")]
				set
				{
				}
			}

			[Token(Token = "0x170001C2")]
			public string price
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0x9315E0", Offset = "0x9315E0", VA = "0x9315E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4330", Offset = "0x6E4330")]
				get
				{
					return null;
				}
				[Token(Token = "0x600175B")]
				[Address(RVA = "0x9315E8", Offset = "0x9315E8", VA = "0x9315E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4340", Offset = "0x6E4340")]
				set
				{
				}
			}

			[Token(Token = "0x170001C3")]
			public string currency
			{
				[Token(Token = "0x600175C")]
				[Address(RVA = "0x9315F0", Offset = "0x9315F0", VA = "0x9315F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4350", Offset = "0x6E4350")]
				get
				{
					return null;
				}
				[Token(Token = "0x600175D")]
				[Address(RVA = "0x9315F8", Offset = "0x9315F8", VA = "0x9315F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4360", Offset = "0x6E4360")]
				set
				{
				}
			}

			[Token(Token = "0x170001C4")]
			public long paid_timestamp
			{
				[Token(Token = "0x600175E")]
				[Address(RVA = "0x931600", Offset = "0x931600", VA = "0x931600")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4370", Offset = "0x6E4370")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600175F")]
				[Address(RVA = "0x931608", Offset = "0x931608", VA = "0x931608")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4380", Offset = "0x6E4380")]
				set
				{
				}
			}

			[Token(Token = "0x6001760")]
			[Address(RVA = "0x931610", Offset = "0x931610", VA = "0x931610")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAEBC", Offset = "0x6DAEBC")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAECC", Offset = "0x6DAECC")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAEDC", Offset = "0x6DAEDC")]
			private int <to>k__BackingField;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x170001C5")]
			public int total
			{
				[Token(Token = "0x6001761")]
				[Address(RVA = "0x931500", Offset = "0x931500", VA = "0x931500")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4390", Offset = "0x6E4390")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001762")]
				[Address(RVA = "0x931508", Offset = "0x931508", VA = "0x931508")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43A0", Offset = "0x6E43A0")]
				set
				{
				}
			}

			[Token(Token = "0x170001C6")]
			public int from
			{
				[Token(Token = "0x6001763")]
				[Address(RVA = "0x931510", Offset = "0x931510", VA = "0x931510")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43B0", Offset = "0x6E43B0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001764")]
				[Address(RVA = "0x931518", Offset = "0x931518", VA = "0x931518")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43C0", Offset = "0x6E43C0")]
				set
				{
				}
			}

			[Token(Token = "0x170001C7")]
			public int to
			{
				[Token(Token = "0x6001765")]
				[Address(RVA = "0x931520", Offset = "0x931520", VA = "0x931520")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43D0", Offset = "0x6E43D0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001766")]
				[Address(RVA = "0x931528", Offset = "0x931528", VA = "0x931528")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43E0", Offset = "0x6E43E0")]
				set
				{
				}
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x931530", Offset = "0x931530", VA = "0x931530")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x20003F9")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAEEC", Offset = "0x6DAEEC")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAEFC", Offset = "0x6DAEFC")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF0C", Offset = "0x6DAF0C")]
			private string <status>k__BackingField;

			[Token(Token = "0x170001C8")]
			public long create_time
			{
				[Token(Token = "0x6001768")]
				[Address(RVA = "0x931688", Offset = "0x931688", VA = "0x931688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E43F0", Offset = "0x6E43F0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001769")]
				[Address(RVA = "0x931690", Offset = "0x931690", VA = "0x931690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4400", Offset = "0x6E4400")]
				set
				{
				}
			}

			[Token(Token = "0x170001C9")]
			public string payment_method
			{
				[Token(Token = "0x600176A")]
				[Address(RVA = "0x931698", Offset = "0x931698", VA = "0x931698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4410", Offset = "0x6E4410")]
				get
				{
					return null;
				}
				[Token(Token = "0x600176B")]
				[Address(RVA = "0x9316A0", Offset = "0x9316A0", VA = "0x9316A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4420", Offset = "0x6E4420")]
				set
				{
				}
			}

			[Token(Token = "0x170001CA")]
			public string status
			{
				[Token(Token = "0x600176C")]
				[Address(RVA = "0x9316A8", Offset = "0x9316A8", VA = "0x9316A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4430", Offset = "0x6E4430")]
				get
				{
					return null;
				}
				[Token(Token = "0x600176D")]
				[Address(RVA = "0x9316B0", Offset = "0x9316B0", VA = "0x9316B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4440", Offset = "0x6E4440")]
				set
				{
				}
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x9316B8", Offset = "0x9316B8", VA = "0x9316B8")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x20003FA")]
		public class StatusDetail
		{
			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF1C", Offset = "0x6DAF1C")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF2C", Offset = "0x6DAF2C")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF3C", Offset = "0x6DAF3C")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x170001CB")]
			public long date_next_charge
			{
				[Token(Token = "0x600176F")]
				[Address(RVA = "0x931650", Offset = "0x931650", VA = "0x931650")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4450", Offset = "0x6E4450")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001770")]
				[Address(RVA = "0x931658", Offset = "0x931658", VA = "0x931658")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4460", Offset = "0x6E4460")]
				set
				{
				}
			}

			[Token(Token = "0x170001CC")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6001771")]
				[Address(RVA = "0x931660", Offset = "0x931660", VA = "0x931660")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4470", Offset = "0x6E4470")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001772")]
				[Address(RVA = "0x931668", Offset = "0x931668", VA = "0x931668")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4480", Offset = "0x6E4480")]
				set
				{
				}
			}

			[Token(Token = "0x170001CD")]
			public string cancel_reason
			{
				[Token(Token = "0x6001773")]
				[Address(RVA = "0x931670", Offset = "0x931670", VA = "0x931670")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4490", Offset = "0x6E4490")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001774")]
				[Address(RVA = "0x931678", Offset = "0x931678", VA = "0x931678")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44A0", Offset = "0x6E44A0")]
				set
				{
				}
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0x931680", Offset = "0x931680", VA = "0x931680")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x20003FB")]
		public class TimePeriod
		{
			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF4C", Offset = "0x6DAF4C")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF5C", Offset = "0x6DAF5C")]
			private int <value>k__BackingField;

			[Token(Token = "0x170001CE")]
			public string time_type
			{
				[Token(Token = "0x6001776")]
				[Address(RVA = "0x931798", Offset = "0x931798", VA = "0x931798")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44B0", Offset = "0x6E44B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001777")]
				[Address(RVA = "0x9317A0", Offset = "0x9317A0", VA = "0x9317A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44C0", Offset = "0x6E44C0")]
				set
				{
				}
			}

			[Token(Token = "0x170001CF")]
			public int value
			{
				[Token(Token = "0x6001778")]
				[Address(RVA = "0x9317A8", Offset = "0x9317A8", VA = "0x9317A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44D0", Offset = "0x6E44D0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001779")]
				[Address(RVA = "0x9317B0", Offset = "0x9317B0", VA = "0x9317B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44E0", Offset = "0x6E44E0")]
				set
				{
				}
			}

			[Token(Token = "0x600177A")]
			[Address(RVA = "0x9317B8", Offset = "0x9317B8", VA = "0x9317B8")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		public class Subscription
		{
			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF6C", Offset = "0x6DAF6C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF7C", Offset = "0x6DAF7C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF8C", Offset = "0x6DAF8C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAF9C", Offset = "0x6DAF9C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFAC", Offset = "0x6DAFAC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFBC", Offset = "0x6DAFBC")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFCC", Offset = "0x6DAFCC")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFDC", Offset = "0x6DAFDC")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFEC", Offset = "0x6DAFEC")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DAFFC", Offset = "0x6DAFFC")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB00C", Offset = "0x6DB00C")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB01C", Offset = "0x6DB01C")]
			private string <status>k__BackingField;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB02C", Offset = "0x6DB02C")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x170001D0")]
			public string app_id
			{
				[Token(Token = "0x600177B")]
				[Address(RVA = "0x9316C0", Offset = "0x9316C0", VA = "0x9316C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44F0", Offset = "0x6E44F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600177C")]
				[Address(RVA = "0x9316C8", Offset = "0x9316C8", VA = "0x9316C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4500", Offset = "0x6E4500")]
				set
				{
				}
			}

			[Token(Token = "0x170001D1")]
			public string order_id
			{
				[Token(Token = "0x600177D")]
				[Address(RVA = "0x9316D0", Offset = "0x9316D0", VA = "0x9316D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4510", Offset = "0x6E4510")]
				get
				{
					return null;
				}
				[Token(Token = "0x600177E")]
				[Address(RVA = "0x9316D8", Offset = "0x9316D8", VA = "0x9316D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4520", Offset = "0x6E4520")]
				set
				{
				}
			}

			[Token(Token = "0x170001D2")]
			public string subscription_id
			{
				[Token(Token = "0x600177F")]
				[Address(RVA = "0x9316E0", Offset = "0x9316E0", VA = "0x9316E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4530", Offset = "0x6E4530")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001780")]
				[Address(RVA = "0x9316E8", Offset = "0x9316E8", VA = "0x9316E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4540", Offset = "0x6E4540")]
				set
				{
				}
			}

			[Token(Token = "0x170001D3")]
			public string price
			{
				[Token(Token = "0x6001781")]
				[Address(RVA = "0x9316F0", Offset = "0x9316F0", VA = "0x9316F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4550", Offset = "0x6E4550")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001782")]
				[Address(RVA = "0x9316F8", Offset = "0x9316F8", VA = "0x9316F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4560", Offset = "0x6E4560")]
				set
				{
				}
			}

			[Token(Token = "0x170001D4")]
			public string currency
			{
				[Token(Token = "0x6001783")]
				[Address(RVA = "0x931700", Offset = "0x931700", VA = "0x931700")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4570", Offset = "0x6E4570")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001784")]
				[Address(RVA = "0x931708", Offset = "0x931708", VA = "0x931708")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4580", Offset = "0x6E4580")]
				set
				{
				}
			}

			[Token(Token = "0x170001D5")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6001785")]
				[Address(RVA = "0x931710", Offset = "0x931710", VA = "0x931710")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4590", Offset = "0x6E4590")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001786")]
				[Address(RVA = "0x931718", Offset = "0x931718", VA = "0x931718")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45A0", Offset = "0x6E45A0")]
				set
				{
				}
			}

			[Token(Token = "0x170001D6")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6001787")]
				[Address(RVA = "0x931720", Offset = "0x931720", VA = "0x931720")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45B0", Offset = "0x6E45B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001788")]
				[Address(RVA = "0x931728", Offset = "0x931728", VA = "0x931728")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45C0", Offset = "0x6E45C0")]
				set
				{
				}
			}

			[Token(Token = "0x170001D7")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6001789")]
				[Address(RVA = "0x931730", Offset = "0x931730", VA = "0x931730")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45D0", Offset = "0x6E45D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600178A")]
				[Address(RVA = "0x931738", Offset = "0x931738", VA = "0x931738")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45E0", Offset = "0x6E45E0")]
				set
				{
				}
			}

			[Token(Token = "0x170001D8")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600178B")]
				[Address(RVA = "0x931740", Offset = "0x931740", VA = "0x931740")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E45F0", Offset = "0x6E45F0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600178C")]
				[Address(RVA = "0x931748", Offset = "0x931748", VA = "0x931748")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4600", Offset = "0x6E4600")]
				set
				{
				}
			}

			[Token(Token = "0x170001D9")]
			public string plan_id
			{
				[Token(Token = "0x600178D")]
				[Address(RVA = "0x931750", Offset = "0x931750", VA = "0x931750")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4610", Offset = "0x6E4610")]
				get
				{
					return null;
				}
				[Token(Token = "0x600178E")]
				[Address(RVA = "0x931758", Offset = "0x931758", VA = "0x931758")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4620", Offset = "0x6E4620")]
				set
				{
				}
			}

			[Token(Token = "0x170001DA")]
			public string plan_name
			{
				[Token(Token = "0x600178F")]
				[Address(RVA = "0x931760", Offset = "0x931760", VA = "0x931760")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4630", Offset = "0x6E4630")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001790")]
				[Address(RVA = "0x931768", Offset = "0x931768", VA = "0x931768")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4640", Offset = "0x6E4640")]
				set
				{
				}
			}

			[Token(Token = "0x170001DB")]
			public string status
			{
				[Token(Token = "0x6001791")]
				[Address(RVA = "0x931770", Offset = "0x931770", VA = "0x931770")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4650", Offset = "0x6E4650")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001792")]
				[Address(RVA = "0x931778", Offset = "0x931778", VA = "0x931778")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4660", Offset = "0x6E4660")]
				set
				{
				}
			}

			[Token(Token = "0x170001DC")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6001793")]
				[Address(RVA = "0x931780", Offset = "0x931780", VA = "0x931780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4670", Offset = "0x6E4670")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001794")]
				[Address(RVA = "0x931788", Offset = "0x931788", VA = "0x931788")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4680", Offset = "0x6E4680")]
				set
				{
				}
			}

			[Token(Token = "0x6001795")]
			[Address(RVA = "0x931790", Offset = "0x931790", VA = "0x931790")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20003FD")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB03C", Offset = "0x6DB03C")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB04C", Offset = "0x6DB04C")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB05C", Offset = "0x6DB05C")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170001DD")]
			public int statusCode
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0x931618", Offset = "0x931618", VA = "0x931618")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4690", Offset = "0x6E4690")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001797")]
				[Address(RVA = "0x931620", Offset = "0x931620", VA = "0x931620")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E46A0", Offset = "0x6E46A0")]
				set
				{
				}
			}

			[Token(Token = "0x170001DE")]
			public string message
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0x931628", Offset = "0x931628", VA = "0x931628")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E46B0", Offset = "0x6E46B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001799")]
				[Address(RVA = "0x931630", Offset = "0x931630", VA = "0x931630")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E46C0", Offset = "0x6E46C0")]
				set
				{
				}
			}

			[Token(Token = "0x170001DF")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600179A")]
				[Address(RVA = "0x931638", Offset = "0x931638", VA = "0x931638")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E46D0", Offset = "0x6E46D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179B")]
				[Address(RVA = "0x931640", Offset = "0x931640", VA = "0x931640")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E46E0", Offset = "0x6E46E0")]
				set
				{
				}
			}

			[Token(Token = "0x600179C")]
			[Address(RVA = "0x931648", Offset = "0x931648", VA = "0x931648")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xCA50A8", Offset = "0xCA50A8", VA = "0xCA50A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3D10", Offset = "0x6E3D10")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xCA5864", Offset = "0xCA5864", VA = "0xCA5864")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xCA5114", Offset = "0xCA5114", VA = "0xCA5114")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3D70", Offset = "0x6E3D70")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xCA5B50", Offset = "0xCA5B50", VA = "0xCA5B50")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xCA5180", Offset = "0xCA5180", VA = "0xCA5180")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3DD0", Offset = "0x6E3DD0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xCA5DD0", Offset = "0xCA5DD0", VA = "0xCA5DD0")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xCA51EC", Offset = "0xCA51EC", VA = "0xCA51EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3E30", Offset = "0x6E3E30")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xCA6090", Offset = "0xCA6090", VA = "0xCA6090")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xCA5258", Offset = "0xCA5258", VA = "0xCA5258")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3E90", Offset = "0x6E3E90")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xCA6310", Offset = "0xCA6310", VA = "0xCA6310")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xCA52C4", Offset = "0xCA52C4", VA = "0xCA52C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3EF0", Offset = "0x6E3EF0")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xCA6590", Offset = "0xCA6590", VA = "0xCA6590")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xCA5330", Offset = "0xCA5330", VA = "0xCA5330")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3F50", Offset = "0x6E3F50")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xCA67C0", Offset = "0xCA67C0", VA = "0xCA67C0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xCA539C", Offset = "0xCA539C", VA = "0xCA539C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E3FB0", Offset = "0x6E3FB0")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xCA69F0", Offset = "0xCA69F0", VA = "0xCA69F0")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xCA5408", Offset = "0xCA5408", VA = "0xCA5408")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4010", Offset = "0x6E4010")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xCA6E78", Offset = "0xCA6E78", VA = "0xCA6E78")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xCA5474", Offset = "0xCA5474", VA = "0xCA5474")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4070", Offset = "0x6E4070")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xCA70F8", Offset = "0xCA70F8", VA = "0xCA70F8")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xCA54E0", Offset = "0xCA54E0", VA = "0xCA54E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E40D0", Offset = "0x6E40D0")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xCA7378", Offset = "0xCA7378", VA = "0xCA7378")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xCA554C", Offset = "0xCA554C", VA = "0xCA554C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4130", Offset = "0x6E4130")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xCA75F8", Offset = "0xCA75F8", VA = "0xCA75F8")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xCA55B8", Offset = "0xCA55B8", VA = "0xCA55B8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4190", Offset = "0x6E4190")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xCA7828", Offset = "0xCA7828", VA = "0xCA7828")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xCA7AA8", Offset = "0xCA7AA8", VA = "0xCA7AA8")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class DLC
	{
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD8BD68", Offset = "0xD8BD68", VA = "0xD8BD68")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class Subscription
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xBB8464", Offset = "0xBB8464", VA = "0xBB8464")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E46F0", Offset = "0x6E46F0")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xBB84D0", Offset = "0xBB84D0", VA = "0xBB84D0")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xBB87C0", Offset = "0xBB87C0", VA = "0xBB87C0")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xBB8D64", Offset = "0xBB8D64", VA = "0xBB8D64")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class Deeplink
	{
		[Token(Token = "0x2000401")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60017AA")]
			public abstract void OnSuccess();

			[Token(Token = "0x60017AB")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x9FE8B0", Offset = "0x9FE8B0", VA = "0x9FE8B0")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001974")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x91A90C", Offset = "0x91A90C", VA = "0x91A90C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4750", Offset = "0x6E4750")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x91A96C", Offset = "0x91A96C", VA = "0x91A96C")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x91AC24", Offset = "0x91AC24", VA = "0x91AC24")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x91AE80", Offset = "0x91AE80", VA = "0x91AE80")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x91AF14", Offset = "0x91AF14", VA = "0x91AF14")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x91B100", Offset = "0x91B100", VA = "0x91B100")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x91B35C", Offset = "0x91B35C", VA = "0x91B35C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x91B460", Offset = "0x91B460", VA = "0x91B460")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000402")]
	internal class Token
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xC5ED10", Offset = "0xC5ED10", VA = "0xC5ED10")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E47B0", Offset = "0x6E47B0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xC5EDE0", Offset = "0xC5EDE0", VA = "0xC5EDE0")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xC5ED70", Offset = "0xC5ED70", VA = "0xC5ED70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6E4810", Offset = "0x6E4810")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xC5F0DC", Offset = "0xC5F0DC", VA = "0xC5F0DC")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xC5F3D8", Offset = "0xC5F3D8", VA = "0xC5F3D8")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6D6CA0", Offset = "0x6D6CA0")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6D6CB4", Offset = "0x6D6CB4")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6D6CC8", Offset = "0x6D6CC8")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6D6CDC", Offset = "0x6D6CDC")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000407")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x400197D")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400197E")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400197F")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001980")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000408")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001982")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001983")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001984")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001985")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000409")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001987")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001988")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001989")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x200040A")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x400198B")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x400198C")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x400198D")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x400198E")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200040B")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001990")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001991")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001992")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200040C")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4001994")]
		UNKNOWN,
		[Token(Token = "0x4001995")]
		PAID,
		[Token(Token = "0x4001996")]
		REDEEM,
		[Token(Token = "0x4001997")]
		FREEE_TRIAL
	}
	[Token(Token = "0x200040D")]
	internal enum ELocale
	{
		[Token(Token = "0x4001999")]
		k_ELocaleUS,
		[Token(Token = "0x400199A")]
		k_ELocaleDE,
		[Token(Token = "0x400199B")]
		k_ELocaleJP,
		[Token(Token = "0x400199C")]
		k_ELocaleKR,
		[Token(Token = "0x400199D")]
		k_ELocaleRU,
		[Token(Token = "0x400199E")]
		k_ELocaleCN,
		[Token(Token = "0x400199F")]
		k_ELocaleTW,
		[Token(Token = "0x40019A0")]
		k_ELocaleFR
	}
	[Token(Token = "0x200040E")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x40019A2")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x40019A3")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x40019A4")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x200040F")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6D6CF0", Offset = "0x6D6CF0")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000411")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000412")]
	internal class Api
	{
		[Token(Token = "0x2000413")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x9FAE64", Offset = "0x9FAE64", VA = "0x9FAE64")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x9FAEFC", Offset = "0x9FAEFC", VA = "0x9FAEFC")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x9FB014", Offset = "0x9FB014", VA = "0x9FB014")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xCC6DEC", Offset = "0xCC6DEC", VA = "0xCC6DEC")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xCC7114", Offset = "0xCC7114", VA = "0xCC7114")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xCC72E8", Offset = "0xCC72E8", VA = "0xCC72E8")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xCC6A7C", Offset = "0xCC6A7C", VA = "0xCC6A7C")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xCC7630", Offset = "0xCC7630", VA = "0xCC7630")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000414")]
	internal class User
	{
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1B0C30C", Offset = "0x1B0C30C", VA = "0x1B0C30C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1B0C494", Offset = "0x1B0C494", VA = "0x1B0C494")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1B0C5B8", Offset = "0x1B0C5B8", VA = "0x1B0C5B8")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1B0C6DC", Offset = "0x1B0C6DC", VA = "0x1B0C6DC")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1B0C7E4", Offset = "0x1B0C7E4", VA = "0x1B0C7E4")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000415")]
	internal class UserStats
	{
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1B0CB70", Offset = "0x1B0CB70", VA = "0x1B0CB70")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1B0CE78", Offset = "0x1B0CE78", VA = "0x1B0CE78")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1B0D730", Offset = "0x1B0D730", VA = "0x1B0D730")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1B0D2B8", Offset = "0x1B0D2B8", VA = "0x1B0D2B8")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1B0D420", Offset = "0x1B0D420", VA = "0x1B0D420")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1B0CFE0", Offset = "0x1B0CFE0", VA = "0x1B0CFE0")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1B0D148", Offset = "0x1B0D148", VA = "0x1B0D148")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1B0D898", Offset = "0x1B0D898", VA = "0x1B0D898")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1B0D994", Offset = "0x1B0D994", VA = "0x1B0D994")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1B0DEA8", Offset = "0x1B0DEA8", VA = "0x1B0DEA8")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1B0DFA4", Offset = "0x1B0DFA4", VA = "0x1B0DFA4")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1B0DB8C", Offset = "0x1B0DB8C", VA = "0x1B0DB8C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1B0DCF4", Offset = "0x1B0DCF4", VA = "0x1B0DCF4")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1B0DA90", Offset = "0x1B0DA90", VA = "0x1B0DA90")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1B0E280", Offset = "0x1B0E280", VA = "0x1B0E280")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1B0E740", Offset = "0x1B0E740", VA = "0x1B0E740")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1B0E954", Offset = "0x1B0E954", VA = "0x1B0E954")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1B0EC18", Offset = "0x1B0EC18", VA = "0x1B0EC18")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1B0ED30", Offset = "0x1B0ED30", VA = "0x1B0ED30")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1B0EE48", Offset = "0x1B0EE48", VA = "0x1B0EE48")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1B0EF64", Offset = "0x1B0EF64", VA = "0x1B0EF64")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000416")]
	internal class Deeplink
	{
		[Token(Token = "0x2000417")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x9FE8B8", Offset = "0x9FE8B8", VA = "0x9FE8B8")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x9FE950", Offset = "0x9FE950", VA = "0x9FE950")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x9FE9E8", Offset = "0x9FE9E8", VA = "0x9FE9E8")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x91AB10", Offset = "0x91AB10", VA = "0x91AB10")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x91ACB8", Offset = "0x91ACB8", VA = "0x91ACB8")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x91AF70", Offset = "0x91AF70", VA = "0x91AF70")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x91B194", Offset = "0x91B194", VA = "0x91B194")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x91B360", Offset = "0x91B360", VA = "0x91B360")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x91B468", Offset = "0x91B468", VA = "0x91B468")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000418")]
	internal class IAPurchase
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xCA59C0", Offset = "0xCA59C0", VA = "0xCA59C0")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xCA5C40", Offset = "0xCA5C40", VA = "0xCA5C40")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xCA5EC8", Offset = "0xCA5EC8", VA = "0xCA5EC8")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xCA6180", Offset = "0xCA6180", VA = "0xCA6180")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xCA6400", Offset = "0xCA6400", VA = "0xCA6400")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xCA6670", Offset = "0xCA6670", VA = "0xCA6670")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xCA68A0", Offset = "0xCA68A0", VA = "0xCA68A0")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xCA6B28", Offset = "0xCA6B28", VA = "0xCA6B28")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xCA6F68", Offset = "0xCA6F68", VA = "0xCA6F68")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xCA71E8", Offset = "0xCA71E8", VA = "0xCA71E8")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xCA7468", Offset = "0xCA7468", VA = "0xCA7468")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xCA76D8", Offset = "0xCA76D8", VA = "0xCA76D8")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xCA7918", Offset = "0xCA7918", VA = "0xCA7918")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xCA7AB0", Offset = "0xCA7AB0", VA = "0xCA7AB0")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000419")]
	internal class Subscription
	{
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xBB8668", Offset = "0xBB8668", VA = "0xBB8668")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xBB8954", Offset = "0xBB8954", VA = "0xBB8954")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xBB8A68", Offset = "0xBB8A68", VA = "0xBB8A68")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xBB8B7C", Offset = "0xBB8B7C", VA = "0xBB8B7C")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xBB8D6C", Offset = "0xBB8D6C", VA = "0xBB8D6C")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200041A")]
	internal class Token
	{
		[Token(Token = "0x6001804")]
		[Address(RVA = "0xC5EF84", Offset = "0xC5EF84", VA = "0xC5EF84")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xC5F280", Offset = "0xC5F280", VA = "0xC5F280")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xC5F3E0", Offset = "0xC5F3E0", VA = "0xC5F3E0")]
		public Token()
		{
		}
	}
	[Token(Token = "0x200041B")]
	internal class Android
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x170001E0")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xCBE64C", Offset = "0xCBE64C", VA = "0xCBE64C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xCBE6FC", Offset = "0xCBE6FC", VA = "0xCBE6FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xCBE764", Offset = "0xCBE764", VA = "0xCBE764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xCBDD00", Offset = "0xCBDD00", VA = "0xCBDD00")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xCBDE54", Offset = "0xCBDE54", VA = "0xCBDE54")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xCBDFA8", Offset = "0xCBDFA8", VA = "0xCBDFA8")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xCBE0FC", Offset = "0xCBE0FC", VA = "0xCBE0FC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xCBE250", Offset = "0xCBE250", VA = "0xCBE250")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xCBE3A4", Offset = "0xCBE3A4", VA = "0xCBE3A4")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xCBE4F8", Offset = "0xCBE4F8", VA = "0xCBE4F8")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xCBE768", Offset = "0xCBE768", VA = "0xCBE768")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200041C")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xCC28DC", Offset = "0xCC28DC", VA = "0xCC28DC")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xCC2974", Offset = "0xCC2974", VA = "0xCC2974")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xCC2A0C", Offset = "0xCC2A0C", VA = "0xCC2A0C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xCC2AA4", Offset = "0xCC2AA4", VA = "0xCC2AA4")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200041D")]
	internal class Session
	{
		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD4831C", Offset = "0xD4831C", VA = "0xD4831C")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200041E")]
	public class Logger
	{
		[Token(Token = "0x40019B7")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9C55AC", Offset = "0x9C55AC", VA = "0x9C55AC")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x9C5A40", Offset = "0x9C5A40", VA = "0x9C5A40")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x9C5678", Offset = "0x9C5678", VA = "0x9C5678")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x9C5AE4", Offset = "0x9C5AE4", VA = "0x9C5AE4")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x9C5C4C", Offset = "0x9C5C4C", VA = "0x9C5C4C")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200041F")]
	public enum JsonType
	{
		[Token(Token = "0x40019BC")]
		None,
		[Token(Token = "0x40019BD")]
		Object,
		[Token(Token = "0x40019BE")]
		Array,
		[Token(Token = "0x40019BF")]
		String,
		[Token(Token = "0x40019C0")]
		Int,
		[Token(Token = "0x40019C1")]
		Long,
		[Token(Token = "0x40019C2")]
		Double,
		[Token(Token = "0x40019C3")]
		Boolean
	}
	[Token(Token = "0x2000420")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170001E3")]
		bool IsArray
		{
			[Token(Token = "0x600181D")]
			get;
		}

		[Token(Token = "0x170001E4")]
		bool IsBoolean
		{
			[Token(Token = "0x600181E")]
			get;
		}

		[Token(Token = "0x170001E5")]
		bool IsDouble
		{
			[Token(Token = "0x600181F")]
			get;
		}

		[Token(Token = "0x170001E6")]
		bool IsInt
		{
			[Token(Token = "0x6001820")]
			get;
		}

		[Token(Token = "0x170001E7")]
		bool IsLong
		{
			[Token(Token = "0x6001821")]
			get;
		}

		[Token(Token = "0x170001E8")]
		bool IsObject
		{
			[Token(Token = "0x6001822")]
			get;
		}

		[Token(Token = "0x170001E9")]
		bool IsString
		{
			[Token(Token = "0x6001823")]
			get;
		}

		[Token(Token = "0x6001824")]
		bool GetBoolean();

		[Token(Token = "0x6001825")]
		double GetDouble();

		[Token(Token = "0x6001826")]
		int GetInt();

		[Token(Token = "0x6001827")]
		JsonType GetJsonType();

		[Token(Token = "0x6001828")]
		long GetLong();

		[Token(Token = "0x6001829")]
		string GetString();

		[Token(Token = "0x600182A")]
		void SetBoolean(bool val);

		[Token(Token = "0x600182B")]
		void SetDouble(double val);

		[Token(Token = "0x600182C")]
		void SetInt(int val);

		[Token(Token = "0x600182D")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x600182E")]
		void SetLong(long val);

		[Token(Token = "0x600182F")]
		void SetString(string val);

		[Token(Token = "0x6001830")]
		string ToJson();

		[Token(Token = "0x6001831")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6D6D04", Offset = "0x6D6D04")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170001EA")]
		public int Count
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xE64858", Offset = "0xE64858", VA = "0xE64858")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EB")]
		public bool IsArray
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xE649E4", Offset = "0xE649E4", VA = "0xE649E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EC")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xE649F4", Offset = "0xE649F4", VA = "0xE649F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public bool IsDouble
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xE64A04", Offset = "0xE64A04", VA = "0xE64A04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsInt
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xE64A14", Offset = "0xE64A14", VA = "0xE64A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EF")]
		public bool IsLong
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xE64A24", Offset = "0xE64A24", VA = "0xE64A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool IsObject
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xE64A34", Offset = "0xE64A34", VA = "0xE64A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool IsString
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xE64A44", Offset = "0xE64A44", VA = "0xE64A44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xE64A54", Offset = "0xE64A54", VA = "0xE64A54", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F3")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0xE64A58", Offset = "0xE64A58", VA = "0xE64A58", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xE64B10", Offset = "0xE64B10", VA = "0xE64B10", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xE64BC8", Offset = "0xE64BC8", VA = "0xE64BC8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xE64DE8", Offset = "0xE64DE8", VA = "0xE64DE8", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F7")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xE64EA0", Offset = "0xE64EA0", VA = "0xE64EA0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xE65268", Offset = "0xE65268", VA = "0xE65268", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xE65630", Offset = "0xE65630", VA = "0xE65630", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xE65640", Offset = "0xE65640", VA = "0xE65640", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FB")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xE65650", Offset = "0xE65650", VA = "0xE65650", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xE65660", Offset = "0xE65660", VA = "0xE65660", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xE65670", Offset = "0xE65670", VA = "0xE65670", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xE65680", Offset = "0xE65680", VA = "0xE65680", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xE65690", Offset = "0xE65690", VA = "0xE65690", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xE656A0", Offset = "0xE656A0", VA = "0xE656A0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xE65874", Offset = "0xE65874", VA = "0xE65874", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xE6592C", Offset = "0xE6592C", VA = "0xE6592C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xE659F0", Offset = "0xE659F0", VA = "0xE659F0", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xE65F38", Offset = "0xE65F38", VA = "0xE65F38", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xE66010", Offset = "0xE66010", VA = "0xE66010", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xE66238", Offset = "0xE66238", VA = "0xE66238", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xE662FC", Offset = "0xE662FC", VA = "0xE662FC", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public JsonData Item
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xE6660C", Offset = "0xE6660C", VA = "0xE6660C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xE65B64", Offset = "0xE65B64", VA = "0xE65B64")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public JsonData Item
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xE666D0", Offset = "0xE666D0", VA = "0xE666D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xE66340", Offset = "0xE66340", VA = "0xE66340")]
			set
			{
			}
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xE66840", Offset = "0xE66840", VA = "0xE66840")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xE66848", Offset = "0xE66848", VA = "0xE66848")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xE66880", Offset = "0xE66880", VA = "0xE66880")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xE668BC", Offset = "0xE668BC", VA = "0xE668BC")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xE668F0", Offset = "0xE668F0", VA = "0xE668F0")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xE66924", Offset = "0xE66924", VA = "0xE66924")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xE66B58", Offset = "0xE66B58", VA = "0xE66B58")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xE66B94", Offset = "0xE66B94", VA = "0xE66B94")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xE66C00", Offset = "0xE66C00", VA = "0xE66C00")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xE66C70", Offset = "0xE66C70", VA = "0xE66C70")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xE66CD8", Offset = "0xE66CD8", VA = "0xE66CD8")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xE66D40", Offset = "0xE66D40", VA = "0xE66D40")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xE66DB4", Offset = "0xE66DB4", VA = "0xE66DB4")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xE66E2C", Offset = "0xE66E2C", VA = "0xE66E2C")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xE66EA4", Offset = "0xE66EA4", VA = "0xE66EA4")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xE66F1C", Offset = "0xE66F1C", VA = "0xE66F1C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xE66F94", Offset = "0xE66F94", VA = "0xE66F94")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xE6700C", Offset = "0xE6700C", VA = "0xE6700C", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xE670D8", Offset = "0xE670D8", VA = "0xE670D8", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xE672B8", Offset = "0xE672B8", VA = "0xE672B8", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xE67400", Offset = "0xE67400", VA = "0xE67400", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xE674C8", Offset = "0xE674C8", VA = "0xE674C8", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xE6756C", Offset = "0xE6756C", VA = "0xE6756C", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xE67824", Offset = "0xE67824", VA = "0xE67824", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE678D8", Offset = "0xE678D8", VA = "0xE678D8", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE67940", Offset = "0xE67940", VA = "0xE67940", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE679A8", Offset = "0xE679A8", VA = "0xE679A8", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xE67A10", Offset = "0xE67A10", VA = "0xE67A10", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE67A78", Offset = "0xE67A78", VA = "0xE67A78", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xE67AE0", Offset = "0xE67AE0", VA = "0xE67AE0", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xE67AFC", Offset = "0xE67AFC", VA = "0xE67AFC", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xE67B14", Offset = "0xE67B14", VA = "0xE67B14", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xE67B2C", Offset = "0xE67B2C", VA = "0xE67B2C", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xE67B44", Offset = "0xE67B44", VA = "0xE67B44", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xE67B7C", Offset = "0xE67B7C", VA = "0xE67B7C", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xE67C54", Offset = "0xE67C54", VA = "0xE67C54", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE67C8C", Offset = "0xE67C8C", VA = "0xE67C8C", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xE67D74", Offset = "0xE67D74", VA = "0xE67D74", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xE67E3C", Offset = "0xE67E3C", VA = "0xE67E3C", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xE67F04", Offset = "0xE67F04", VA = "0xE67F04", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xE67FCC", Offset = "0xE67FCC", VA = "0xE67FCC", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xE680AC", Offset = "0xE680AC", VA = "0xE680AC", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xE68184", Offset = "0xE68184", VA = "0xE68184", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xE6825C", Offset = "0xE6825C", VA = "0xE6825C", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xE6834C", Offset = "0xE6834C", VA = "0xE6834C", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE684AC", Offset = "0xE684AC", VA = "0xE684AC", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE64910", Offset = "0xE64910", VA = "0xE64910")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xE64C80", Offset = "0xE64C80", VA = "0xE64C80")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xE65758", Offset = "0xE65758", VA = "0xE65758")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE65ACC", Offset = "0xE65ACC", VA = "0xE65ACC")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xE6867C", Offset = "0xE6867C", VA = "0xE6867C")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xE67C90", Offset = "0xE67C90", VA = "0xE67C90")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xE69B34", Offset = "0xE69B34", VA = "0xE69B34")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xE69C58", Offset = "0xE69C58", VA = "0xE69C58", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xE69D44", Offset = "0xE69D44", VA = "0xE69D44", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xE69D4C", Offset = "0xE69D4C", VA = "0xE69D4C", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xE67B80", Offset = "0xE67B80", VA = "0xE67B80")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xE67C58", Offset = "0xE67C58", VA = "0xE67C58")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xE69F54", Offset = "0xE69F54", VA = "0xE69F54", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000422")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000207")]
		public object Current
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xC2D384", Offset = "0xC2D384", VA = "0xC2D384", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xC2D3EC", Offset = "0xC2D3EC", VA = "0xC2D3EC", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000209")]
		public object Key
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xC2D4E0", Offset = "0xC2D4E0", VA = "0xC2D4E0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public object Value
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xC2D598", Offset = "0xC2D598", VA = "0xC2D598", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC2D658", Offset = "0xC2D658", VA = "0xC2D658")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xC2D68C", Offset = "0xC2D68C", VA = "0xC2D68C", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xC2D738", Offset = "0xC2D738", VA = "0xC2D738", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6001896")]
		[Address(RVA = "0xE6A048", Offset = "0xE6A048", VA = "0xE6A048")]
		public JsonException()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xE6A050", Offset = "0xE6A050", VA = "0xE6A050")]
		internal JsonException(LitJson.ParserToken token)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xE6A0E8", Offset = "0xE6A0E8", VA = "0xE6A0E8")]
		internal JsonException(LitJson.ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xE6A190", Offset = "0xE6A190", VA = "0xE6A190")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xE6A228", Offset = "0xE6A228", VA = "0xE6A228")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xE6A2D0", Offset = "0xE6A2D0", VA = "0xE6A2D0")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xE6A2D8", Offset = "0xE6A2D8", VA = "0xE6A2D8")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000424")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000425")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x1700020B")]
		public Type ElementType
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0xCCABE4", Offset = "0xCCABE4", VA = "0xCCABE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xCCACAC", Offset = "0xCCACAC", VA = "0xCCACAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsArray
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xCCACB4", Offset = "0xCCACB4", VA = "0xCCACB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xCCACBC", Offset = "0xCCACBC", VA = "0xCCACBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool IsList
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xCCACC8", Offset = "0xCCACC8", VA = "0xCCACC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xCCACD0", Offset = "0xCCACD0", VA = "0xCCACD0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000426")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, LitJson.PropertyMetadata> properties;

		[Token(Token = "0x1700020E")]
		public Type ElementType
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xC2CAB8", Offset = "0xC2CAB8", VA = "0xC2CAB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xC2CB80", Offset = "0xC2CB80", VA = "0xC2CB80")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool IsDictionary
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xC2CB88", Offset = "0xC2CB88", VA = "0xC2CB88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xC2CB90", Offset = "0xC2CB90", VA = "0xC2CB90")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public IDictionary<string, LitJson.PropertyMetadata> Properties
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xC2CB9C", Offset = "0xC2CB9C", VA = "0xC2CB9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xC2CBA4", Offset = "0xC2CBA4", VA = "0xC2CBA4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000427")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000428")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000429")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200042A")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200042B")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200042C")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6D3C", Offset = "0x6D6D3C")]
		private sealed class <>c
		{
			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static LitJson.ExporterFunc <>9__23_0;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static LitJson.ExporterFunc <>9__23_1;

			[Token(Token = "0x40019EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static LitJson.ExporterFunc <>9__23_2;

			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static LitJson.ExporterFunc <>9__23_3;

			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static LitJson.ExporterFunc <>9__23_4;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static LitJson.ExporterFunc <>9__23_5;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static LitJson.ExporterFunc <>9__23_6;

			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static LitJson.ExporterFunc <>9__23_7;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static LitJson.ExporterFunc <>9__23_8;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static LitJson.ExporterFunc <>9__23_9;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static LitJson.ImporterFunc <>9__24_0;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static LitJson.ImporterFunc <>9__24_1;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static LitJson.ImporterFunc <>9__24_2;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static LitJson.ImporterFunc <>9__24_3;

			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static LitJson.ImporterFunc <>9__24_4;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static LitJson.ImporterFunc <>9__24_5;

			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static LitJson.ImporterFunc <>9__24_6;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static LitJson.ImporterFunc <>9__24_7;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static LitJson.ImporterFunc <>9__24_8;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static LitJson.ImporterFunc <>9__24_9;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static LitJson.ImporterFunc <>9__24_10;

			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static LitJson.ImporterFunc <>9__24_11;

			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static LitJson.ImporterFunc <>9__24_12;

			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x932684", Offset = "0x932684", VA = "0x932684")]
			public <>c()
			{
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x93268C", Offset = "0x93268C", VA = "0x93268C")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x932750", Offset = "0x932750", VA = "0x932750")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x932814", Offset = "0x932814", VA = "0x932814")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x932918", Offset = "0x932918", VA = "0x932918")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x9329A4", Offset = "0x9329A4", VA = "0x9329A4")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x932A68", Offset = "0x932A68", VA = "0x932A68")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x932B2C", Offset = "0x932B2C", VA = "0x932B2C")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x932BF0", Offset = "0x932BF0", VA = "0x932BF0")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x932CB4", Offset = "0x932CB4", VA = "0x932CB4")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x932D40", Offset = "0x932D40", VA = "0x932D40")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60018E3")]
			[Address(RVA = "0x932DD0", Offset = "0x932DD0", VA = "0x932DD0")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x932EA8", Offset = "0x932EA8", VA = "0x932EA8")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x932F80", Offset = "0x932F80", VA = "0x932F80")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x933058", Offset = "0x933058", VA = "0x933058")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x933130", Offset = "0x933130", VA = "0x933130")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x933208", Offset = "0x933208", VA = "0x933208")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x9332E0", Offset = "0x9332E0", VA = "0x9332E0")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x9333B4", Offset = "0x9333B4", VA = "0x9333B4")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x93348C", Offset = "0x93348C", VA = "0x93348C")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x933560", Offset = "0x933560", VA = "0x933560")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x933638", Offset = "0x933638", VA = "0x933638")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x933710", Offset = "0x933710", VA = "0x933710")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x9337E0", Offset = "0x9337E0", VA = "0x9337E0")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x9338F0", Offset = "0x9338F0", VA = "0x9338F0")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x933948", Offset = "0x933948", VA = "0x933948")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x9339A0", Offset = "0x9339A0", VA = "0x9339A0")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6D4C", Offset = "0x6D6D4C")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x60018F3")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60018F4")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6D5C", Offset = "0x6D6D5C")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x60018F5")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60018F6")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, LitJson.ExporterFunc> base_exporters_table;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, LitJson.ExporterFunc> custom_exporters_table;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> base_importers_table;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> custom_importers_table;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, LitJson.ArrayMetadata> array_metadata;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, LitJson.ObjectMetadata> object_metadata;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<LitJson.PropertyMetadata>> type_properties;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xE6A2E0", Offset = "0xE6A2E0", VA = "0xE6A2E0")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xE6C59C", Offset = "0xE6C59C", VA = "0xE6C59C")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xE6CA7C", Offset = "0xE6CA7C", VA = "0xE6CA7C")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xE6D25C", Offset = "0xE6D25C", VA = "0xE6D25C")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xE6D814", Offset = "0xE6D814", VA = "0xE6D814")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xE6E1A4", Offset = "0xE6E1A4", VA = "0xE6E1A4")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xE6F674", Offset = "0xE6F674", VA = "0xE6F674")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xE6A78C", Offset = "0xE6A78C", VA = "0xE6A78C")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xE6B68C", Offset = "0xE6B68C", VA = "0xE6B68C")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xE6FD64", Offset = "0xE6FD64", VA = "0xE6FD64")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> table, Type json_type, Type value_type, LitJson.ImporterFunc importer)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xE6FFC8", Offset = "0xE6FFC8", VA = "0xE6FFC8")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xE71644", Offset = "0xE71644", VA = "0xE71644")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xE718D0", Offset = "0xE718D0", VA = "0xE718D0")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xE71948", Offset = "0xE71948", VA = "0xE71948")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xE71B24", Offset = "0xE71B24", VA = "0xE71B24")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xE71CC4", Offset = "0xE71CC4", VA = "0xE71CC4")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60018CE")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60018CF")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xE71AB4", Offset = "0xE71AB4", VA = "0xE71AB4")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xE71E30", Offset = "0xE71E30", VA = "0xE71E30")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x60018D2")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x60018D3")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xE71F3C", Offset = "0xE71F3C", VA = "0xE71F3C")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xE7201C", Offset = "0xE7201C", VA = "0xE7201C")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xE720FC", Offset = "0xE720FC", VA = "0xE720FC")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public enum JsonToken
	{
		[Token(Token = "0x4001A06")]
		None,
		[Token(Token = "0x4001A07")]
		ObjectStart,
		[Token(Token = "0x4001A08")]
		PropertyName,
		[Token(Token = "0x4001A09")]
		ObjectEnd,
		[Token(Token = "0x4001A0A")]
		ArrayStart,
		[Token(Token = "0x4001A0B")]
		ArrayEnd,
		[Token(Token = "0x4001A0C")]
		Int,
		[Token(Token = "0x4001A0D")]
		Long,
		[Token(Token = "0x4001A0E")]
		Double,
		[Token(Token = "0x4001A0F")]
		String,
		[Token(Token = "0x4001A10")]
		Boolean,
		[Token(Token = "0x4001A11")]
		Null
	}
	[Token(Token = "0x2000431")]
	public class JsonReader
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LitJson.Lexer lexer;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000211")]
		public bool AllowComments
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xE72104", Offset = "0xE72104", VA = "0xE72104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xE72120", Offset = "0xE72120", VA = "0xE72120")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0xE72140", Offset = "0xE72140", VA = "0xE72140")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xE7215C", Offset = "0xE7215C", VA = "0xE7215C")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool EndOfInput
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xE7217C", Offset = "0xE7217C", VA = "0xE7217C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000214")]
		public bool EndOfJson
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xE72184", Offset = "0xE72184", VA = "0xE72184")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000215")]
		public JsonToken Token
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xE7218C", Offset = "0xE7218C", VA = "0xE7218C")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000216")]
		public object Value
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xE72194", Offset = "0xE72194", VA = "0xE72194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xE7219C", Offset = "0xE7219C", VA = "0xE7219C")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xE71EC8", Offset = "0xE71EC8", VA = "0xE71EC8")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xE71CBC", Offset = "0xE71CBC", VA = "0xE71CBC")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xE72884", Offset = "0xE72884", VA = "0xE72884")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xE721A0", Offset = "0xE721A0", VA = "0xE721A0")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xE72C48", Offset = "0xE72C48", VA = "0xE72C48")]
		private static void TableAddCol(LitJson.ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xE72B18", Offset = "0xE72B18", VA = "0xE72B18")]
		private static void TableAddRow(LitJson.ParserToken rule)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xE72DC4", Offset = "0xE72DC4", VA = "0xE72DC4")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xE72F64", Offset = "0xE72F64", VA = "0xE72F64")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xE73128", Offset = "0xE73128", VA = "0xE73128")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xE73370", Offset = "0xE73370", VA = "0xE73370")]
		public void Close()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xE6F1E0", Offset = "0xE6F1E0", VA = "0xE6F1E0")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000432")]
	internal enum Condition
	{
		[Token(Token = "0x4001A21")]
		InArray,
		[Token(Token = "0x4001A22")]
		InObject,
		[Token(Token = "0x4001A23")]
		NotAProperty,
		[Token(Token = "0x4001A24")]
		Property,
		[Token(Token = "0x4001A25")]
		Value
	}
	[Token(Token = "0x2000433")]
	internal class WriterContext
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x9F7CD4", Offset = "0x9F7CD4", VA = "0x9F7CD4")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class JsonWriter
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LitJson.WriterContext context;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<LitJson.WriterContext> ctx_stack;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000217")]
		public int IndentValue
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xE733D4", Offset = "0xE733D4", VA = "0xE733D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xE733DC", Offset = "0xE733DC", VA = "0xE733DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool PrettyPrint
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xE733F0", Offset = "0xE733F0", VA = "0xE733F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xE733F8", Offset = "0xE733F8", VA = "0xE733F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xE73404", Offset = "0xE73404", VA = "0xE73404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public bool Validate
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xE7340C", Offset = "0xE7340C", VA = "0xE7340C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001912")]
			[Address(RVA = "0xE73414", Offset = "0xE73414", VA = "0xE73414")]
			set
			{
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xE73420", Offset = "0xE73420", VA = "0xE73420")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xE6A6CC", Offset = "0xE6A6CC", VA = "0xE6A6CC")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xE735AC", Offset = "0xE735AC", VA = "0xE735AC")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xE69ECC", Offset = "0xE69ECC", VA = "0xE69ECC")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xE7361C", Offset = "0xE7361C", VA = "0xE7361C")]
		private void DoValidation(LitJson.Condition cond)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xE7347C", Offset = "0xE7347C", VA = "0xE7347C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xE737E0", Offset = "0xE737E0", VA = "0xE737E0")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xE73868", Offset = "0xE73868", VA = "0xE73868")]
		private void Indent()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xE73880", Offset = "0xE73880", VA = "0xE73880")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xE73914", Offset = "0xE73914", VA = "0xE73914")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xE7391C", Offset = "0xE7391C", VA = "0xE7391C")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xE739AC", Offset = "0xE739AC", VA = "0xE739AC")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xE73CA4", Offset = "0xE73CA4", VA = "0xE73CA4")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xE73CBC", Offset = "0xE73CBC", VA = "0xE73CBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xE717D4", Offset = "0xE717D4", VA = "0xE717D4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xE69250", Offset = "0xE69250", VA = "0xE69250")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xE73D28", Offset = "0xE73D28", VA = "0xE73D28")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xE692F4", Offset = "0xE692F4", VA = "0xE692F4")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xE69444", Offset = "0xE69444", VA = "0xE69444")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xE6952C", Offset = "0xE6952C", VA = "0xE6952C")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xE691B8", Offset = "0xE691B8", VA = "0xE691B8")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xE7155C", Offset = "0xE7155C", VA = "0xE7155C")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xE6970C", Offset = "0xE6970C", VA = "0xE6970C")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xE69614", Offset = "0xE69614", VA = "0xE69614")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xE69A30", Offset = "0xE69A30", VA = "0xE69A30")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xE69810", Offset = "0xE69810", VA = "0xE69810")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xE69908", Offset = "0xE69908", VA = "0xE69908")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000435")]
	internal class FsmContext
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LitJson.Lexer L;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xB538C0", Offset = "0xB538C0", VA = "0xB538C0")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000436")]
	internal class Lexer
	{
		[Token(Token = "0x2000437")]
		private delegate bool StateHandler(LitJson.FsmContext ctx);

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LitJson.FsmContext fsm_context;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x1700021B")]
		public bool AllowComments
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xE760C4", Offset = "0xE760C4", VA = "0xE760C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xE760CC", Offset = "0xE760CC", VA = "0xE760CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xE760D8", Offset = "0xE760D8", VA = "0xE760D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xE760E0", Offset = "0xE760E0", VA = "0xE760E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xE760EC", Offset = "0xE760EC", VA = "0xE760EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		public int Token
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xE760F4", Offset = "0xE760F4", VA = "0xE760F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021F")]
		public string StringValue
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xE760FC", Offset = "0xE760FC", VA = "0xE760FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xE76104", Offset = "0xE76104", VA = "0xE76104")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xE72A1C", Offset = "0xE72A1C", VA = "0xE72A1C")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xE76D1C", Offset = "0xE76D1C", VA = "0xE76D1C")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xE76108", Offset = "0xE76108", VA = "0xE76108")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xE76D98", Offset = "0xE76D98", VA = "0xE76D98")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xE76E94", Offset = "0xE76E94", VA = "0xE76E94")]
		private static bool State1(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xE770A4", Offset = "0xE770A4", VA = "0xE770A4")]
		private static bool State2(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xE7714C", Offset = "0xE7714C", VA = "0xE7714C")]
		private static bool State3(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xE7728C", Offset = "0xE7728C", VA = "0xE7728C")]
		private static bool State4(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xE7738C", Offset = "0xE7738C", VA = "0xE7738C")]
		private static bool State5(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xE77410", Offset = "0xE77410", VA = "0xE77410")]
		private static bool State6(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xE7750C", Offset = "0xE7750C", VA = "0xE7750C")]
		private static bool State7(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xE775A4", Offset = "0xE775A4", VA = "0xE775A4")]
		private static bool State8(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xE77664", Offset = "0xE77664", VA = "0xE77664")]
		private static bool State9(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xE776D4", Offset = "0xE776D4", VA = "0xE776D4")]
		private static bool State10(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xE77744", Offset = "0xE77744", VA = "0xE77744")]
		private static bool State11(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xE777B4", Offset = "0xE777B4", VA = "0xE777B4")]
		private static bool State12(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xE77824", Offset = "0xE77824", VA = "0xE77824")]
		private static bool State13(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xE77894", Offset = "0xE77894", VA = "0xE77894")]
		private static bool State14(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xE77904", Offset = "0xE77904", VA = "0xE77904")]
		private static bool State15(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xE77974", Offset = "0xE77974", VA = "0xE77974")]
		private static bool State16(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xE779E4", Offset = "0xE779E4", VA = "0xE779E4")]
		private static bool State17(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xE77A54", Offset = "0xE77A54", VA = "0xE77A54")]
		private static bool State18(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xE77AC4", Offset = "0xE77AC4", VA = "0xE77AC4")]
		private static bool State19(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xE77B70", Offset = "0xE77B70", VA = "0xE77B70")]
		private static bool State20(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xE77BE0", Offset = "0xE77BE0", VA = "0xE77BE0")]
		private static bool State21(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xE77D28", Offset = "0xE77D28", VA = "0xE77D28")]
		private static bool State22(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xE77EB4", Offset = "0xE77EB4", VA = "0xE77EB4")]
		private static bool State23(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xE77F60", Offset = "0xE77F60", VA = "0xE77F60")]
		private static bool State24(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xE77FD8", Offset = "0xE77FD8", VA = "0xE77FD8")]
		private static bool State25(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xE78058", Offset = "0xE78058", VA = "0xE78058")]
		private static bool State26(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xE780C4", Offset = "0xE780C4", VA = "0xE780C4")]
		private static bool State27(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xE78130", Offset = "0xE78130", VA = "0xE78130")]
		private static bool State28(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xE7706C", Offset = "0xE7706C", VA = "0xE7706C")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xE781AC", Offset = "0xE781AC", VA = "0xE781AC")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xE73188", Offset = "0xE73188", VA = "0xE73188")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xE77280", Offset = "0xE77280", VA = "0xE77280")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000438")]
	internal enum ParserToken
	{
		[Token(Token = "0x4001A49")]
		None = 65536,
		[Token(Token = "0x4001A4A")]
		Number,
		[Token(Token = "0x4001A4B")]
		True,
		[Token(Token = "0x4001A4C")]
		False,
		[Token(Token = "0x4001A4D")]
		Null,
		[Token(Token = "0x4001A4E")]
		CharSeq,
		[Token(Token = "0x4001A4F")]
		Char,
		[Token(Token = "0x4001A50")]
		Text,
		[Token(Token = "0x4001A51")]
		Object,
		[Token(Token = "0x4001A52")]
		ObjectPrime,
		[Token(Token = "0x4001A53")]
		Pair,
		[Token(Token = "0x4001A54")]
		PairRest,
		[Token(Token = "0x4001A55")]
		Array,
		[Token(Token = "0x4001A56")]
		ArrayPrime,
		[Token(Token = "0x4001A57")]
		Value,
		[Token(Token = "0x4001A58")]
		ValueRest,
		[Token(Token = "0x4001A59")]
		String,
		[Token(Token = "0x4001A5A")]
		End,
		[Token(Token = "0x4001A5B")]
		Epsilon
	}
}
namespace Spektr
{
	[Token(Token = "0x2000439")]
	public class LightningMesh : ScriptableObject
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _lineCount;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _vertexCount;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Mesh _mesh;

		[Token(Token = "0x17000220")]
		public int lineCount
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xE784B4", Offset = "0xE784B4", VA = "0xE784B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000221")]
		public int vertexCount
		{
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xE784BC", Offset = "0xE784BC", VA = "0xE784BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000222")]
		public Mesh sharedMesh
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xE784C4", Offset = "0xE784C4", VA = "0xE784C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xE784CC", Offset = "0xE784CC", VA = "0xE784CC")]
		public void RebuildMesh()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xE78808", Offset = "0xE78808", VA = "0xE78808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xE788E8", Offset = "0xE788E8", VA = "0xE788E8")]
		public LightningMesh()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[ExecuteInEditMode]
	public class LightningRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _emitterTransform;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 _emitterPosition;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _receiverTransform;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 _receiverPosition;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DB104", Offset = "0x6DB104")]
		[SerializeField]
		private float _throttle;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _pulseInterval;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DB154", Offset = "0x6DB154")]
		[SerializeField]
		private float _boltLength;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DB194", Offset = "0x6DB194")]
		private float _lengthRandomness;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _noiseAmplitude;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _noiseFrequency;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _noiseMotion;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6DB204", Offset = "0x6DB204")]
		private Color _color;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LightningMesh _mesh;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int _randomSeed;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _material;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MaterialPropertyBlock _materialProps;

		[Token(Token = "0x17000223")]
		public Transform emitterTransform
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xE788FC", Offset = "0xE788FC", VA = "0xE788FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xE78904", Offset = "0xE78904", VA = "0xE78904")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public Vector3 emitterPosition
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xE7890C", Offset = "0xE7890C", VA = "0xE7890C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xE7899C", Offset = "0xE7899C", VA = "0xE7899C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public Transform receiverTransform
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xE789A8", Offset = "0xE789A8", VA = "0xE789A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xE789B0", Offset = "0xE789B0", VA = "0xE789B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public Vector3 receiverPosition
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xE789B8", Offset = "0xE789B8", VA = "0xE789B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xE78A48", Offset = "0xE78A48", VA = "0xE78A48")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float throttle
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xE78A54", Offset = "0xE78A54", VA = "0xE78A54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xE78A5C", Offset = "0xE78A5C", VA = "0xE78A5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public float pulseInterval
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xE78A64", Offset = "0xE78A64", VA = "0xE78A64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001970")]
			[Address(RVA = "0xE78A6C", Offset = "0xE78A6C", VA = "0xE78A6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public float boltLength
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xE78A74", Offset = "0xE78A74", VA = "0xE78A74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001972")]
			[Address(RVA = "0xE78A7C", Offset = "0xE78A7C", VA = "0xE78A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float lengthRandomness
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xE78A84", Offset = "0xE78A84", VA = "0xE78A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xE78A8C", Offset = "0xE78A8C", VA = "0xE78A8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public float noiseAmplitude
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xE78A94", Offset = "0xE78A94", VA = "0xE78A94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xE78A9C", Offset = "0xE78A9C", VA = "0xE78A9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public float noiseFrequency
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0xE78AA4", Offset = "0xE78AA4", VA = "0xE78AA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001978")]
			[Address(RVA = "0xE78AAC", Offset = "0xE78AAC", VA = "0xE78AAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public float noiseMotion
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xE78AB4", Offset = "0xE78AB4", VA = "0xE78AB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600197A")]
			[Address(RVA = "0xE78ABC", Offset = "0xE78ABC", VA = "0xE78ABC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public Color color
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xE78AC4", Offset = "0xE78AC4", VA = "0xE78AC4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xE78AD0", Offset = "0xE78AD0", VA = "0xE78AD0")]
			set
			{
			}
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xE78ADC", Offset = "0xE78ADC", VA = "0xE78ADC")]
		private void Start()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xE78B44", Offset = "0xE78B44", VA = "0xE78B44")]
		private void Update()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xE79138", Offset = "0xE79138", VA = "0xE79138")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE791B8", Offset = "0xE791B8", VA = "0xE791B8")]
		public LightningRenderer()
		{
		}
	}
}
namespace Sigtrap.Editors.ShaderStripper
{
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6D7C", Offset = "0x6D6D7C")]
	public class ShaderForceKeywords : ShaderStripperBase
	{
		[Serializable]
		[Token(Token = "0x200043C")]
		private struct ForceBuiltin
		{
			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BuiltinShaderDefine defineToMatch;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BuiltinShaderDefine defineToForce;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB2CC", Offset = "0x6DB2CC")]
			public bool invertMatch;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB304", Offset = "0x6DB304")]
			public bool invertForce;
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		private struct ForceKeyword
		{
			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string keywordToMatch;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string keywordToForce;

			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB33C", Offset = "0x6DB33C")]
			public bool invertMatch;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB374", Offset = "0x6DB374")]
			public bool invertForce;
		}

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ForceBuiltin[] _forceBuiltins;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ForceKeyword[] _forceKeywords;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD484C0", Offset = "0xD484C0", VA = "0xD484C0")]
		public ShaderForceKeywords()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class ShaderLog
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> log;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB3AC", Offset = "0x6DB3AC")]
		private string <logName>k__BackingField;

		[Token(Token = "0x1700022F")]
		public string logName
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xD484F0", Offset = "0xD484F0", VA = "0xD484F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4870", Offset = "0x6E4870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xD484F8", Offset = "0xD484F8", VA = "0xD484F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4880", Offset = "0x6E4880")]
			private set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public int Count
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xD48500", Offset = "0xD48500", VA = "0xD48500")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD4854C", Offset = "0xD4854C", VA = "0xD4854C")]
		public ShaderLog(string logName)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD485EC", Offset = "0xD485EC", VA = "0xD485EC")]
		public void Add(string s)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD48650", Offset = "0xD48650", VA = "0xD48650")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD486A4", Offset = "0xD486A4", VA = "0xD486A4")]
		public void Insert(int index, string s)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD48710", Offset = "0xD48710", VA = "0xD48710")]
		public bool Contains(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD48774", Offset = "0xD48774", VA = "0xD48774")]
		public string[] ToArray()
		{
			return null;
		}
	}
	[Token(Token = "0x200043F")]
	public abstract class ShaderStripperBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		protected class StringMatch
		{
			[Token(Token = "0x2000441")]
			public enum MatchType
			{
				[Token(Token = "0x4001A85")]
				EQUALS,
				[Token(Token = "0x4001A86")]
				CONTAINS,
				[Token(Token = "0x4001A87")]
				STARTSWITH,
				[Token(Token = "0x4001A88")]
				ENDSWITH
			}

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType matchType;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string namePattern;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool caseInsensitive;

			[Token(Token = "0x600198D")]
			[Address(RVA = "0x93B9F0", Offset = "0x93B9F0", VA = "0x93B9F0")]
			public bool Evaluate(string name)
			{
				return default(bool);
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0x93BAE8", Offset = "0x93BAE8", VA = "0x93BAE8")]
			public StringMatch()
			{
			}
		}

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private bool _expanded;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private int _order;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _logOutput;

		[Token(Token = "0x17000231")]
		public bool active
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xD487C8", Offset = "0xD487C8", VA = "0xD487C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD484D8", Offset = "0xD484D8", VA = "0xD484D8")]
		protected ShaderStripperBase()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6DC0", Offset = "0x6D6DC0")]
	public class ShaderStripperPath : ShaderStripperBase
	{
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StringMatch[] _pathBlacklist;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD487D0", Offset = "0xD487D0", VA = "0xD487D0")]
		public ShaderStripperPath()
		{
		}
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6E04", Offset = "0x6D6E04")]
	public class ShaderStripperPlatform : ShaderStripperBase
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB46C", Offset = "0x6DB46C")]
		private bool _whitelist;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD487E8", Offset = "0xD487E8", VA = "0xD487E8")]
		public ShaderStripperPlatform()
		{
		}
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6E48", Offset = "0x6D6E48")]
	public class ShaderStripperSimple : ShaderStripperBase
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB4B8", Offset = "0x6DB4B8")]
		private List<StringMatch> _blacklistedShaderNames;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB504", Offset = "0x6DB504")]
		[SerializeField]
		private List<PassType> _blacklistedPassTypes;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB550", Offset = "0x6DB550")]
		[SerializeField]
		private List<string> _blacklistedKeywords;

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD48800", Offset = "0xD48800", VA = "0xD48800")]
		public ShaderStripperSimple()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D6E8C", Offset = "0x6D6E8C")]
	public class ShaderStripperVariantCollection : ShaderStripperBase, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB59C", Offset = "0x6DB59C")]
		[SerializeField]
		private string _mergeToFile;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB5E8", Offset = "0x6DB5E8")]
		[SerializeField]
		private List<ShaderVariantCollection> _whitelistedCollections;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private List<string> _collectionPaths;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB66C", Offset = "0x6DB66C")]
		private bool _stripHidden;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB6B8", Offset = "0x6DB6B8")]
		[SerializeField]
		private bool _allowVrVariants;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB704", Offset = "0x6DB704")]
		[SerializeField]
		private bool _allowInstancedVariants;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB750", Offset = "0x6DB750")]
		private StringMatch[] _ignoreShadersByName;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6DB79C", Offset = "0x6DB79C")]
		private List<PassType> _ignorePassTypes;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _valid;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _dirty;

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD48818", Offset = "0xD48818", VA = "0xD48818", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD48824", Offset = "0xD48824", VA = "0xD48824", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD48830", Offset = "0xD48830", VA = "0xD48830")]
		public ShaderStripperVariantCollection()
		{
		}
	}
}
namespace VacuumBreather
{
	[Token(Token = "0x2000446")]
	public class ControlledObject : MonoBehaviour
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PidQuaternionController _pidController;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _currentTransform;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody _objectRigidbody;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Kp;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ki;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Kd;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB7E8", Offset = "0x6DB7E8")]
		private Quaternion <DesiredOrientation>k__BackingField;

		[Token(Token = "0x17000232")]
		public Quaternion DesiredOrientation
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0xD886A0", Offset = "0xD886A0", VA = "0xD886A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4890", Offset = "0x6E4890")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001996")]
			[Address(RVA = "0xD886AC", Offset = "0xD886AC", VA = "0xD886AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E48A0", Offset = "0x6E48A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD886B8", Offset = "0xD886B8", VA = "0xD886B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD88730", Offset = "0xD88730", VA = "0xD88730")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD888FC", Offset = "0xD888FC", VA = "0xD888FC")]
		public ControlledObject()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class SampleScript : MonoBehaviour
	{
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetOne;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TargetTwo;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform TargetThree;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlledObject ControlledObject;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _cameraPosition;

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xA6FE80", Offset = "0xA6FE80", VA = "0xA6FE80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xA6FF1C", Offset = "0xA6FF1C", VA = "0xA6FF1C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xA70788", Offset = "0xA70788", VA = "0xA70788")]
		private void Update()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xA70844", Offset = "0xA70844", VA = "0xA70844")]
		public SampleScript()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class PidController
	{
		[Token(Token = "0x4001AA4")]
		private const float MaxOutput = 1000f;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _integralMax;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _integral;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _kp;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _ki;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _kd;

		[Token(Token = "0x17000233")]
		public float Kp
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x128FB0C", Offset = "0x128FB0C", VA = "0x128FB0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x128F970", Offset = "0x128F970", VA = "0x128F970")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float Ki
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x128FB14", Offset = "0x128FB14", VA = "0x128FB14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x128F9E8", Offset = "0x128F9E8", VA = "0x128F9E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public float Kd
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x128FB1C", Offset = "0x128FB1C", VA = "0x128FB1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x128FA94", Offset = "0x128FA94", VA = "0x128FA94")]
			set
			{
			}
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x128F824", Offset = "0x128F824", VA = "0x128F824")]
		public PidController(float kp, float ki, float kd)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x128FB24", Offset = "0x128FB24", VA = "0x128FB24")]
		public float ComputeOutput(float error, float delta, float deltaTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000449")]
	public class PidQuaternionController
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PidController[] _internalController;

		[Token(Token = "0x17000236")]
		public float Kp
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x128FE8C", Offset = "0x128FE8C", VA = "0x128FE8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x128FEC8", Offset = "0x128FEC8", VA = "0x128FEC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float Ki
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x128FFE8", Offset = "0x128FFE8", VA = "0x128FFE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x1290024", Offset = "0x1290024", VA = "0x1290024")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float Kd
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1290144", Offset = "0x1290144", VA = "0x1290144")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x1290180", Offset = "0x1290180", VA = "0x1290180")]
			set
			{
			}
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x128FBB4", Offset = "0x128FBB4", VA = "0x128FBB4")]
		public PidQuaternionController(float kp, float ki, float kd)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x12902A0", Offset = "0x12902A0", VA = "0x12902A0")]
		public static Quaternion MultiplyAsVector(Matrix4x4 matrix, Quaternion quaternion)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1290338", Offset = "0x1290338", VA = "0x1290338")]
		public static Quaternion ToEulerAngleQuaternion(Vector3 eulerAngles)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x129036C", Offset = "0x129036C", VA = "0x129036C")]
		public Vector3 ComputeRequiredAngularAcceleration(Quaternion currentOrientation, Quaternion desiredOrientation, Vector3 currentAngularVelocity, float deltaTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1290578", Offset = "0x1290578", VA = "0x1290578")]
		private Quaternion ComputeOutput(Quaternion error, Quaternion delta, float deltaTime)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200044A")]
	public static class QuaternionExtensions
	{
		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xA6C3A4", Offset = "0xA6C3A4", VA = "0xA6C3A4")]
		public static Quaternion Multiply(this Quaternion quaternion, float scalar)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xA6C3E4", Offset = "0xA6C3E4", VA = "0xA6C3E4")]
		public static Quaternion RequiredRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xA6C45C", Offset = "0xA6C45C", VA = "0xA6C45C")]
		public static Quaternion Subtract(this Quaternion lhs, Quaternion rhs)
		{
			return default(Quaternion);
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x200044B")]
	public class PACloudController : MonoBehaviour
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform followTarget;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField[] cloudFields;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 area;

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1281B1C", Offset = "0x1281B1C", VA = "0x1281B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1281EE8", Offset = "0x1281EE8", VA = "0x1281EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1281EEC", Offset = "0x1281EEC", VA = "0x1281EEC")]
		private void UpdateCloudPositions()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1282220", Offset = "0x1282220", VA = "0x1282220")]
		public PACloudController()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class PAWaterController : MonoBehaviour
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yPosition;

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x128ACE4", Offset = "0x128ACE4", VA = "0x128ACE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x128AD1C", Offset = "0x128AD1C", VA = "0x128AD1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x128AD88", Offset = "0x128AD88", VA = "0x128AD88")]
		public PAWaterController()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class PAMeshParticlesFaceCamera : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		public enum FaceMethod
		{
			[Token(Token = "0x4001AB3")]
			Face,
			[Token(Token = "0x4001AB4")]
			Up
		}

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PAParticleField particleField;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceMethod faceMethod;

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1285914", Offset = "0x1285914", VA = "0x1285914")]
		private void Reset()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1285970", Offset = "0x1285970", VA = "0x1285970")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1285C50", Offset = "0x1285C50", VA = "0x1285C50")]
		public PAMeshParticlesFaceCamera()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4001AB5")]
		private const float RANGE = 0.4f;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody r;

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xA6FA00", Offset = "0xA6FA00", VA = "0xA6FA00")]
		private void Start()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xA6FB40", Offset = "0xA6FB40", VA = "0xA6FB40")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xA6FB88", Offset = "0xA6FB88", VA = "0xA6FB88")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class SmoothCamera : MonoBehaviour
	{
		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float damping;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool smoothRotation;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool followBehind;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationDamping;

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD07628", Offset = "0xD07628", VA = "0xD07628")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD0774C", Offset = "0xD0774C", VA = "0xD0774C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD079A4", Offset = "0xD079A4", VA = "0xD079A4")]
		public SmoothCamera()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class StarFieldSpaceship : MonoBehaviour
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float turnspeed;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rollSpeed;

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xBAB844", Offset = "0xBAB844", VA = "0xBAB844")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xBAB848", Offset = "0xBAB848", VA = "0xBAB848")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xBABA98", Offset = "0xBABA98", VA = "0xBABA98")]
		public StarFieldSpaceship()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class Stardust : MonoBehaviour
	{
		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxMagnitude;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lerpiness;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField field;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastDifference;

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xBAFC3C", Offset = "0xBAFC3C", VA = "0xBAFC3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xBAFCD0", Offset = "0xBAFCD0", VA = "0xBAFCD0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xBAFE04", Offset = "0xBAFE04", VA = "0xBAFE04")]
		public Stardust()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class CameraSwitch : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cameraA;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cameraB;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_Rt;

		[Token(Token = "0x17000239")]
		private RectTransform rt
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xD7F448", Offset = "0xD7F448", VA = "0xD7F448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD7F284", Offset = "0xD7F284", VA = "0xD7F284", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD7F288", Offset = "0xD7F288", VA = "0xD7F288")]
		private void SwitchCameras()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD7F518", Offset = "0xD7F518", VA = "0xD7F518")]
		private void Update()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD7F554", Offset = "0xD7F554", VA = "0xD7F554")]
		public CameraSwitch()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class DemosMenu : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] names;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text headerButton;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color openColor;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color closedColor;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject dropDown;

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x91B5CC", Offset = "0x91B5CC", VA = "0x91B5CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x91B5D4", Offset = "0x91B5D4", VA = "0x91B5D4")]
		private void Show(bool arg = true)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x91B6C4", Offset = "0x91B6C4", VA = "0x91B6C4", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x91B700", Offset = "0x91B700", VA = "0x91B700")]
		public DemosMenu()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string frameString;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB4C0E0", Offset = "0xB4C0E0", VA = "0xB4C0E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB4C0EC", Offset = "0xB4C0EC", VA = "0xB4C0EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB4C210", Offset = "0xB4C210", VA = "0xB4C210")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class LoadLevelButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x9BC940", Offset = "0x9BC940", VA = "0x9BC940", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x9BC9B8", Offset = "0x9BC9B8", VA = "0x9BC9B8")]
		private static List<string> GetSceneNames()
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x9BC9C0", Offset = "0x9BC9C0", VA = "0x9BC9C0")]
		public LoadLevelButton()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[ExecuteInEditMode]
	public class OrthoFollow : MonoBehaviour
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xC2D7E8", Offset = "0xC2D7E8", VA = "0xC2D7E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xC2D8E0", Offset = "0xC2D8E0", VA = "0xC2D8E0")]
		public OrthoFollow()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class ParticleSystemToggler : MonoBehaviour
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject system;

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x128B824", Offset = "0x128B824", VA = "0x128B824")]
		public void SetSystemOff(bool arg)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x128B8C8", Offset = "0x128B8C8", VA = "0x128B8C8")]
		public ParticleSystemToggler()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000459")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700023A")]
		public bool Highlight
		{
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xD87DEC", Offset = "0xD87DEC", VA = "0xD87DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xD87DF4", Offset = "0xD87DF4", VA = "0xD87DF4")]
			set
			{
			}
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD87E00", Offset = "0xD87E00", VA = "0xD87E00")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD87FC8", Offset = "0xD87FC8", VA = "0xD87FC8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD87FF0", Offset = "0xD87FF0", VA = "0xD87FF0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD88018", Offset = "0xD88018", VA = "0xD88018")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD87EC8", Offset = "0xD87EC8", VA = "0xD87EC8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD882EC", Offset = "0xD882EC", VA = "0xD882EC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700023B")]
		public bool InRange
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x91D9D4", Offset = "0x91D9D4", VA = "0x91D9D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x91D9DC", Offset = "0x91D9DC", VA = "0x91D9DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public bool Targeted
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x91DB58", Offset = "0x91DB58", VA = "0x91DB58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x91DB60", Offset = "0x91DB60", VA = "0x91DB60")]
			set
			{
			}
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x91DB6C", Offset = "0x91DB6C", VA = "0x91DB6C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x91D9E8", Offset = "0x91D9E8", VA = "0x91D9E8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x91DCD8", Offset = "0x91DCD8", VA = "0x91DCD8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6EF0", Offset = "0x6D6EF0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700023D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x91DCE0", Offset = "0x91DCE0", VA = "0x91DCE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x91DCE8", Offset = "0x91DCE8", VA = "0x91DCE8")]
			set
			{
			}
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x91DD04", Offset = "0x91DD04", VA = "0x91DD04", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x91DF44", Offset = "0x91DF44", VA = "0x91DF44", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x91E85C", Offset = "0x91E85C", VA = "0x91E85C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x91ECF0", Offset = "0x91ECF0", VA = "0x91ECF0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x91EFB0", Offset = "0x91EFB0", VA = "0x91EFB0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x91E1B8", Offset = "0x91E1B8", VA = "0x91E1B8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x91F0A0", Offset = "0x91F0A0", VA = "0x91F0A0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x91F4FC", Offset = "0x91F4FC", VA = "0x91F4FC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x91F514", Offset = "0x91F514", VA = "0x91F514", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x91F51C", Offset = "0x91F51C", VA = "0x91F51C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xE81F10", Offset = "0xE81F10", VA = "0xE81F10")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xE81FC8", Offset = "0xE81FC8", VA = "0xE81FC8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xE82080", Offset = "0xE82080", VA = "0xE82080")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200045E")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001AF8")]
			Disabled,
			[Token(Token = "0x4001AF9")]
			Enabled,
			[Token(Token = "0x4001AFA")]
			Targeted
		}

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xE82140", Offset = "0xE82140", VA = "0xE82140")]
		private void Start()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xE821AC", Offset = "0xE821AC", VA = "0xE821AC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xE82248", Offset = "0xE82248", VA = "0xE82248")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xE82290", Offset = "0xE82290", VA = "0xE82290")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x128F558", Offset = "0x128F558", VA = "0x128F558")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x128F644", Offset = "0x128F644", VA = "0x128F644")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x128F650", Offset = "0x128F650", VA = "0x128F650")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x128F65C", Offset = "0x128F65C", VA = "0x128F65C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB698D8", Offset = "0xB698D8", VA = "0xB698D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB6992C", Offset = "0xB6992C", VA = "0xB6992C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB69C98", Offset = "0xB69C98", VA = "0xB69C98")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xB69D9C", Offset = "0xB69D9C", VA = "0xB69D9C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xB69930", Offset = "0xB69930", VA = "0xB69930")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xB69EA0", Offset = "0xB69EA0", VA = "0xB69EA0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000462")]
		public enum ContactTest
		{
			[Token(Token = "0x4001B0D")]
			PerpenTest,
			[Token(Token = "0x4001B0E")]
			BackwardsPress
		}

		[Token(Token = "0x4001AFE")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001AFF")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB928", Offset = "0x6DB928")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700023E")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xB6C050", Offset = "0xB6C050", VA = "0xB6C050", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023F")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xB6C058", Offset = "0xB6C058", VA = "0xB6C058")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000240")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xB6C064", Offset = "0xB6C064", VA = "0xB6C064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E48D0", Offset = "0x6E48D0")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xB6C06C", Offset = "0xB6C06C", VA = "0xB6C06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E48E0", Offset = "0x6E48E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB6C074", Offset = "0xB6C074", VA = "0xB6C074", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xB6C188", Offset = "0xB6C188", VA = "0xB6C188")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xB6C2F4", Offset = "0xB6C2F4", VA = "0xB6C2F4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xB6C8AC", Offset = "0xB6C8AC", VA = "0xB6C8AC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xB6C958", Offset = "0xB6C958", VA = "0xB6C958")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xB6C7C4", Offset = "0xB6C7C4", VA = "0xB6C7C4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xB6CA64", Offset = "0xB6CA64", VA = "0xB6CA64")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xB6CAE8", Offset = "0xB6CAE8", VA = "0xB6CAE8")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xB6CB74", Offset = "0xB6CB74", VA = "0xB6CB74")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB948", Offset = "0x6DB948")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB958", Offset = "0x6DB958")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000241")]
		public Collider Collider
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xB6D3D0", Offset = "0xB6D3D0", VA = "0xB6D3D0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E48F0", Offset = "0x6E48F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xB6D3D8", Offset = "0xB6D3D8", VA = "0xB6D3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4900", Offset = "0x6E4900")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xB6D3E0", Offset = "0xB6D3E0", VA = "0xB6D3E0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4910", Offset = "0x6E4910")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xB6D3E8", Offset = "0xB6D3E8", VA = "0xB6D3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4920", Offset = "0x6E4920")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xB6D3F0", Offset = "0xB6D3F0", VA = "0xB6D3F0", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xB6D440", Offset = "0xB6D440", VA = "0xB6D440")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xB6D4D4", Offset = "0xB6D4D4", VA = "0xB6D4D4")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000244")]
		Collider Collider
		{
			[Token(Token = "0x6001A1E")]
			get;
		}

		[Token(Token = "0x17000245")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001A1F")]
			get;
		}

		[Token(Token = "0x17000246")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001A20")]
			get;
		}
	}
	[Token(Token = "0x2000465")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD87D34", Offset = "0xD87D34", VA = "0xD87D34")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public enum InteractionType
	{
		[Token(Token = "0x4001B17")]
		Enter,
		[Token(Token = "0x4001B18")]
		Stay,
		[Token(Token = "0x4001B19")]
		Exit
	}
	[Token(Token = "0x2000467")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000468")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001B2B")]
			Mesh,
			[Token(Token = "0x4001B2C")]
			Skeleton,
			[Token(Token = "0x4001B2D")]
			Both
		}

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6F50", Offset = "0x6D6F50")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A43")]
				[Address(RVA = "0xA008BC", Offset = "0xA008BC", VA = "0xA008BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A45")]
				[Address(RVA = "0xA00904", Offset = "0xA00904", VA = "0xA00904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xA00628", Offset = "0xA00628", VA = "0xA00628")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xA00654", Offset = "0xA00654", VA = "0xA00654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xA00658", Offset = "0xA00658", VA = "0xA00658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xA008C4", Offset = "0xA008C4", VA = "0xA008C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B1A")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DB988", Offset = "0x6DB988")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000247")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xE8A96C", Offset = "0xE8A96C", VA = "0xE8A96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xE8A9A4", Offset = "0xE8A9A4", VA = "0xE8A9A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xE8AA14", Offset = "0xE8AA14", VA = "0xE8AA14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xE8AA4C", Offset = "0xE8AA4C", VA = "0xE8AA4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xE8AABC", Offset = "0xE8AABC", VA = "0xE8AABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xE8AAF4", Offset = "0xE8AAF4", VA = "0xE8AAF4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xE8AB64", Offset = "0xE8AB64", VA = "0xE8AB64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xE8AB9C", Offset = "0xE8AB9C", VA = "0xE8AB9C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xE8AC0C", Offset = "0xE8AC0C", VA = "0xE8AC0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xE8AC44", Offset = "0xE8AC44", VA = "0xE8AC44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xE8ACB4", Offset = "0xE8ACB4", VA = "0xE8ACB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xE8ACE8", Offset = "0xE8ACE8", VA = "0xE8ACE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xE8AD54", Offset = "0xE8AD54", VA = "0xE8AD54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xE8AD88", Offset = "0xE8AD88", VA = "0xE8AD88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xE8ADF4", Offset = "0xE8ADF4", VA = "0xE8ADF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xE8AE28", Offset = "0xE8AE28", VA = "0xE8AE28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xE8AE94", Offset = "0xE8AE94", VA = "0xE8AE94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xE8AEC8", Offset = "0xE8AEC8", VA = "0xE8AEC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xE8AF34", Offset = "0xE8AF34", VA = "0xE8AF34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xE8AF68", Offset = "0xE8AF68", VA = "0xE8AF68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xE8AFD4", Offset = "0xE8AFD4", VA = "0xE8AFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4930", Offset = "0x6E4930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xE8B020", Offset = "0xE8B020", VA = "0xE8B020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4940", Offset = "0x6E4940")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xE8B074", Offset = "0xE8B074", VA = "0xE8B074")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xE8B448", Offset = "0xE8B448", VA = "0xE8B448")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xE8B3D0", Offset = "0xE8B3D0", VA = "0xE8B3D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E4950", Offset = "0x6E4950")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xE8B4D0", Offset = "0xE8B4D0", VA = "0xE8B4D0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xE8B5B4", Offset = "0xE8B5B4", VA = "0xE8B5B4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xE8B794", Offset = "0xE8B794", VA = "0xE8B794")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xE8B9D0", Offset = "0xE8B9D0", VA = "0xE8B9D0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xE8BB5C", Offset = "0xE8BB5C", VA = "0xE8BB5C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046B")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x931FF0", Offset = "0x931FF0", VA = "0x931FF0")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000254")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xCAAD80", Offset = "0xCAAD80", VA = "0xCAAD80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xCAAD88", Offset = "0xCAAD88", VA = "0xCAAD88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xCAAD90", Offset = "0xCAAD90", VA = "0xCAAD90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xCAAD98", Offset = "0xCAAD98", VA = "0xCAAD98", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xCAADA0", Offset = "0xCAADA0", VA = "0xCAADA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A00", Offset = "0x6E4A00")]
			add
			{
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xCAAE40", Offset = "0xCAAE40", VA = "0xCAAE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A10", Offset = "0x6E4A10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xCAAF50", Offset = "0xCAAF50", VA = "0xCAAF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A20", Offset = "0x6E4A20")]
			add
			{
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xCAAFF0", Offset = "0xCAAFF0", VA = "0xCAAFF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A30", Offset = "0x6E4A30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xCAB100", Offset = "0xCAB100", VA = "0xCAB100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A40", Offset = "0x6E4A40")]
			add
			{
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xCAB1A0", Offset = "0xCAB1A0", VA = "0xCAB1A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4A50", Offset = "0x6E4A50")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xCAAEE0", Offset = "0xCAAEE0", VA = "0xCAAEE0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xCAB090", Offset = "0xCAB090", VA = "0xCAB090", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xCAB240", Offset = "0xCAB240", VA = "0xCAB240", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A53")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xCAB2B0", Offset = "0xCAB2B0", VA = "0xCAB2B0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xCAB3DC", Offset = "0xCAB3DC", VA = "0xCAB3DC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xCAB508", Offset = "0xCAB508", VA = "0xCAB508")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001B39")]
		None,
		[Token(Token = "0x4001B3A")]
		Proximity,
		[Token(Token = "0x4001B3B")]
		Contact,
		[Token(Token = "0x4001B3C")]
		Action
	}
	[Token(Token = "0x200046D")]
	public enum InteractableState
	{
		[Token(Token = "0x4001B3E")]
		Default,
		[Token(Token = "0x4001B3F")]
		ProximityState,
		[Token(Token = "0x4001B40")]
		ContactState,
		[Token(Token = "0x4001B41")]
		ActionState
	}
	[Token(Token = "0x200046E")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xCAB660", Offset = "0xCAB660", VA = "0xCAB660")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000258")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xCAB568", Offset = "0xCAB568", VA = "0xCAB568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xCAB310", Offset = "0xCAB310", VA = "0xCAB310")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xCAB43C", Offset = "0xCAB43C", VA = "0xCAB43C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xCAB5CC", Offset = "0xCAB5CC", VA = "0xCAB5CC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6F60", Offset = "0x6D6F60")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A66")]
				[Address(RVA = "0x932554", Offset = "0x932554", VA = "0x932554", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A68")]
				[Address(RVA = "0x93259C", Offset = "0x93259C", VA = "0x93259C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x93203C", Offset = "0x93203C", VA = "0x93203C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x932068", Offset = "0x932068", VA = "0x932068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x9320D8", Offset = "0x9320D8", VA = "0x9320D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x932084", Offset = "0x932084", VA = "0x932084")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x93255C", Offset = "0x93255C", VA = "0x93255C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xCAC3E4", Offset = "0xCAC3E4", VA = "0xCAC3E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xCAC460", Offset = "0xCAC460", VA = "0xCAC460")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E4A60", Offset = "0x6E4A60")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xCAC500", Offset = "0xCAC500", VA = "0xCAC500")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xCAC5E8", Offset = "0xCAC5E8", VA = "0xCAC5E8")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700025B")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xCAC5F0", Offset = "0xCAC5F0", VA = "0xCAC5F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xCAC770", Offset = "0xCAC770", VA = "0xCAC770")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xCAC818", Offset = "0xCAC818", VA = "0xCAC818")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xCAC8C0", Offset = "0xCAC8C0", VA = "0xCAC8C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xCACB88", Offset = "0xCACB88", VA = "0xCACB88")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xCACBD0", Offset = "0xCACBD0", VA = "0xCACBD0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xCACE80", Offset = "0xCACE80", VA = "0xCACE80")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xCACFCC", Offset = "0xCACFCC", VA = "0xCACFCC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6F70", Offset = "0x6D6F70")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A82")]
				[Address(RVA = "0x9FF34C", Offset = "0x9FF34C", VA = "0x9FF34C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A84")]
				[Address(RVA = "0x9FF394", Offset = "0x9FF394", VA = "0x9FF394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x9FEF18", Offset = "0x9FEF18", VA = "0x9FEF18")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x9FEF44", Offset = "0x9FEF44", VA = "0x9FEF44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x9FEF48", Offset = "0x9FEF48", VA = "0x9FEF48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x9FF354", Offset = "0x9FF354", VA = "0x9FF354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B5A")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700025C")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xB4FC20", Offset = "0xB4FC20", VA = "0xB4FC20", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700025D")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xB4FC28", Offset = "0xB4FC28", VA = "0xB4FC28", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700025E")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xB4FC30", Offset = "0xB4FC30", VA = "0xB4FC30", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public override bool EnableState
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0xB4FC38", Offset = "0xB4FC38", VA = "0xB4FC38", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xB4FC64", Offset = "0xB4FC64", VA = "0xB4FC64", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xB4FCA0", Offset = "0xB4FCA0", VA = "0xB4FCA0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xB4FD58", Offset = "0xB4FD58", VA = "0xB4FD58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E4B10", Offset = "0x6E4B10")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xB4FDD0", Offset = "0xB4FDD0", VA = "0xB4FDD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xB50070", Offset = "0xB50070", VA = "0xB50070")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xB501FC", Offset = "0xB501FC", VA = "0xB501FC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xB502F4", Offset = "0xB502F4", VA = "0xB502F4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xB505EC", Offset = "0xB505EC", VA = "0xB505EC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xB505F0", Offset = "0xB505F0", VA = "0xB505F0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xB505F4", Offset = "0xB505F4", VA = "0xB505F4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA18", Offset = "0x6DBA18")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA28", Offset = "0x6DBA28")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA38", Offset = "0x6DBA38")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000262")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xB5060C", Offset = "0xB5060C", VA = "0xB5060C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4BC0", Offset = "0x6E4BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xB50614", Offset = "0xB50614", VA = "0xB50614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4BD0", Offset = "0x6E4BD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool EnableState
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xB5061C", Offset = "0xB5061C", VA = "0xB5061C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xB50638", Offset = "0xB50638", VA = "0xB50638", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xB50658", Offset = "0xB50658", VA = "0xB50658", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4BE0", Offset = "0x6E4BE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xB50660", Offset = "0xB50660", VA = "0xB50660", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4BF0", Offset = "0x6E4BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float SphereRadius
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xB5066C", Offset = "0xB5066C", VA = "0xB5066C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C00", Offset = "0x6E4C00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xB50674", Offset = "0xB50674", VA = "0xB50674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C10", Offset = "0x6E4C10")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xB5067C", Offset = "0xB5067C", VA = "0xB5067C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xB506C4", Offset = "0xB506C4", VA = "0xB506C4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xB506C8", Offset = "0xB506C8", VA = "0xB506C8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001B6D")]
		None = 0,
		[Token(Token = "0x4001B6E")]
		Ray = 1,
		[Token(Token = "0x4001B6F")]
		Poke = 4,
		[Token(Token = "0x4001B70")]
		All = -1
	}
	[Token(Token = "0x2000477")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001B72")]
		Inactive,
		[Token(Token = "0x4001B73")]
		PrimaryInputDown,
		[Token(Token = "0x4001B74")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001B75")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000478")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xCAB510", Offset = "0xCAB510", VA = "0xCAB510")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000479")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA48", Offset = "0x6DBA48")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA58", Offset = "0x6DBA58")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBA68", Offset = "0x6DBA68")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000266")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xCAB724", Offset = "0xCAB724", VA = "0xCAB724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xCAB72C", Offset = "0xCAB72C", VA = "0xCAB72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C20", Offset = "0x6E4C20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xCAB734", Offset = "0xCAB734", VA = "0xCAB734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C30", Offset = "0x6E4C30")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001A94")]
			get;
		}

		[Token(Token = "0x17000269")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001A95")]
			get;
		}

		[Token(Token = "0x1700026A")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001A96")]
			get;
		}

		[Token(Token = "0x1700026B")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xCAB740", Offset = "0xCAB740", VA = "0xCAB740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C40", Offset = "0x6E4C40")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xCAB74C", Offset = "0xCAB74C", VA = "0xCAB74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C50", Offset = "0x6E4C50")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xCAB758", Offset = "0xCAB758", VA = "0xCAB758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C60", Offset = "0x6E4C60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xCAB764", Offset = "0xCAB764", VA = "0xCAB764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C70", Offset = "0x6E4C70")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001A9F")]
			get;
			[Token(Token = "0x6001AA0")]
			set;
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xCAB770", Offset = "0xCAB770", VA = "0xCAB770")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A9C")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001A9D")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001A9E")]
		public abstract void DeFocus();

		[Token(Token = "0x6001AA1")]
		public abstract void Initialize();

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xCAB778", Offset = "0xCAB778", VA = "0xCAB778")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xCAB7C4", Offset = "0xCAB7C4", VA = "0xCAB7C4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xCAB818", Offset = "0xCAB818", VA = "0xCAB818", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xCABAC8", Offset = "0xCABAC8", VA = "0xCABAC8", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xCAC254", Offset = "0xCAC254", VA = "0xCAC254")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700026E")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001AA7")]
			get;
		}

		[Token(Token = "0x1700026F")]
		bool EnableState
		{
			[Token(Token = "0x6001AA9")]
			get;
			[Token(Token = "0x6001AAA")]
			set;
		}

		[Token(Token = "0x17000270")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001AAB")]
			get;
			[Token(Token = "0x6001AAC")]
			set;
		}

		[Token(Token = "0x6001AA8")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200047B")]
	public class PinchStateModule
	{
		[Token(Token = "0x200047C")]
		private enum PinchState
		{
			[Token(Token = "0x4001B86")]
			None,
			[Token(Token = "0x4001B87")]
			PinchDown,
			[Token(Token = "0x4001B88")]
			PinchStay,
			[Token(Token = "0x4001B89")]
			PinchUp
		}

		[Token(Token = "0x4001B82")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000271")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x12906A4", Offset = "0x12906A4", VA = "0x12906A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x129072C", Offset = "0x129072C", VA = "0x129072C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x12907B4", Offset = "0x12907B4", VA = "0x12907B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x129083C", Offset = "0x129083C", VA = "0x129083C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1290870", Offset = "0x1290870", VA = "0x1290870")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001B8A")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001B8B")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001B8C")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001B8D")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001B8E")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DBA88", Offset = "0x6DBA88")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000274")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0xA6D0E8", Offset = "0xA6D0E8", VA = "0xA6D0E8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000275")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xA6D0F0", Offset = "0xA6D0F0", VA = "0xA6D0F0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000276")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xA6D164", Offset = "0xA6D164", VA = "0xA6D164", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public override bool EnableState
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xA6D16C", Offset = "0xA6D16C", VA = "0xA6D16C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xA6D1B0", Offset = "0xA6D1B0", VA = "0xA6D1B0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xA6D224", Offset = "0xA6D224", VA = "0xA6D224", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xA6D28C", Offset = "0xA6D28C", VA = "0xA6D28C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xA6D330", Offset = "0xA6D330", VA = "0xA6D330")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xA6D5F4", Offset = "0xA6D5F4", VA = "0xA6D5F4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xA6D67C", Offset = "0xA6D67C", VA = "0xA6D67C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xA6DA4C", Offset = "0xA6DA4C", VA = "0xA6DA4C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xA6DB5C", Offset = "0xA6DB5C", VA = "0xA6DB5C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xA6DC80", Offset = "0xA6DC80", VA = "0xA6DC80")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xA6DF84", Offset = "0xA6DF84", VA = "0xA6DF84")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xA6E318", Offset = "0xA6E318", VA = "0xA6E318", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xA6E400", Offset = "0xA6E400", VA = "0xA6E400", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xA6E43C", Offset = "0xA6E43C", VA = "0xA6E43C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001B9A")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001B9B")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DBAFC", Offset = "0x6DBAFC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000278")]
		public bool EnableState
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xA6D194", Offset = "0xA6D194", VA = "0xA6D194", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xA6D1CC", Offset = "0xA6D1CC", VA = "0xA6D1CC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xA6E534", Offset = "0xA6E534", VA = "0xA6E534", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xA6D5B8", Offset = "0xA6D5B8", VA = "0xA6D5B8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xA6E794", Offset = "0xA6E794", VA = "0xA6E794", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C80", Offset = "0x6E4C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xA6E79C", Offset = "0xA6E79C", VA = "0xA6E79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C90", Offset = "0x6E4C90")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xA6E53C", Offset = "0xA6E53C", VA = "0xA6E53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xA6E354", Offset = "0xA6E354", VA = "0xA6E354", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xA6E7A4", Offset = "0xA6E7A4", VA = "0xA6E7A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xA6EA18", Offset = "0xA6EA18", VA = "0xA6EA18")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xA6EB08", Offset = "0xA6EB08", VA = "0xA6EB08")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700027B")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x91F53C", Offset = "0x91F53C", VA = "0x91F53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x91F544", Offset = "0x91F544", VA = "0x91F544")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x91F5CC", Offset = "0x91F5CC", VA = "0x91F5CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x91F5D4", Offset = "0x91F5D4", VA = "0x91F5D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x91F640", Offset = "0x91F640", VA = "0x91F640")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x91F904", Offset = "0x91F904", VA = "0x91F904")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x91F914", Offset = "0x91F914", VA = "0x91F914")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x91F924", Offset = "0x91F924", VA = "0x91F924")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001BA8")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001BA9")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001BAA")]
		EUDT_None,
		[Token(Token = "0x4001BAB")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000481")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D6F90", Offset = "0x6D6F90")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AE9")]
				[Address(RVA = "0x938294", Offset = "0x938294", VA = "0x938294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEB")]
				[Address(RVA = "0x9382DC", Offset = "0x9382DC", VA = "0x9382DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x938064", Offset = "0x938064", VA = "0x938064")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x938090", Offset = "0x938090", VA = "0x938090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x938094", Offset = "0x938094", VA = "0x938094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x93829C", Offset = "0x93829C", VA = "0x93829C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001BAD")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001BAE")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001BAF")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBB1C", Offset = "0x6DBB1C")]
		public GameObject mainCamera;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBB54", Offset = "0x6DBB54")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xC28540", Offset = "0xC28540", VA = "0xC28540")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xC28D9C", Offset = "0xC28D9C", VA = "0xC28D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xC28EE4", Offset = "0xC28EE4", VA = "0xC28EE4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC29020", Offset = "0xC29020", VA = "0xC29020")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC2915C", Offset = "0xC2915C", VA = "0xC2915C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xC28EB8", Offset = "0xC28EB8", VA = "0xC28EB8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC2923C", Offset = "0xC2923C", VA = "0xC2923C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E4CA0", Offset = "0x6E4CA0")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC292B4", Offset = "0xC292B4", VA = "0xC292B4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC289A8", Offset = "0xC289A8", VA = "0xC289A8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xC29408", Offset = "0xC29408", VA = "0xC29408")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xC292E8", Offset = "0xC292E8", VA = "0xC292E8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xC29720", Offset = "0xC29720", VA = "0xC29720")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xC29810", Offset = "0xC29810", VA = "0xC29810")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xC298A0", Offset = "0xC298A0", VA = "0xC298A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D00", Offset = "0x6E4D00")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xC298F8", Offset = "0xC298F8", VA = "0xC298F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D10", Offset = "0x6E4D10")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xC29950", Offset = "0xC29950", VA = "0xC29950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D20", Offset = "0x6E4D20")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D6FA0", Offset = "0x6D6FA0")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7000", Offset = "0x6D7000")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xA005F4", Offset = "0xA005F4", VA = "0xA005F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xA005FC", Offset = "0xA005FC", VA = "0xA005FC")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BC7")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001BC8")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001BC9")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001BCA")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001BCB")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001BCC")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001BCD")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001BCE")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001BCF")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001BD0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001BD1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xE8446C", Offset = "0xE8446C", VA = "0xE8446C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xE844C8", Offset = "0xE844C8", VA = "0xE844C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xE8495C", Offset = "0xE8495C", VA = "0xE8495C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xE84A48", Offset = "0xE84A48", VA = "0xE84A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xE84BAC", Offset = "0xE84BAC", VA = "0xE84BAC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xE84EB4", Offset = "0xE84EB4", VA = "0xE84EB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xE84FAC", Offset = "0xE84FAC", VA = "0xE84FAC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xE8510C", Offset = "0xE8510C", VA = "0xE8510C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xE84C44", Offset = "0xE84C44", VA = "0xE84C44")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xE84C98", Offset = "0xE84C98", VA = "0xE84C98")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xE84800", Offset = "0xE84800", VA = "0xE84800")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xE85248", Offset = "0xE85248", VA = "0xE85248")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001BE6")]
		Default,
		[Token(Token = "0x4001BE7")]
		Generic,
		[Token(Token = "0x4001BE8")]
		PingPongBall,
		[Token(Token = "0x4001BE9")]
		Controller
	}
	[Token(Token = "0x2000486")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700027F")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xE8A790", Offset = "0xE8A790", VA = "0xE8A790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xE8A798", Offset = "0xE8A798", VA = "0xE8A798")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xE8A7A0", Offset = "0xE8A7A0", VA = "0xE8A7A0")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xE8A7A8", Offset = "0xE8A7A8", VA = "0xE8A7A8")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xC5F3E8", Offset = "0xC5F3E8", VA = "0xC5F3E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xC5F6D0", Offset = "0xC5F6D0", VA = "0xC5F6D0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xC5F72C", Offset = "0xC5F72C", VA = "0xC5F72C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xC5F770", Offset = "0xC5F770", VA = "0xC5F770")]
		public TouchController()
		{
		}
	}
}
namespace MysticArsenal
{
	[Token(Token = "0x2000488")]
	public class MysticLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBC0C", Offset = "0x6DBC0C")]
		public float life;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC22840", Offset = "0xC22840", VA = "0xC22840")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC22974", Offset = "0xC22974", VA = "0xC22974")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC22AD0", Offset = "0xC22AD0", VA = "0xC22AD0")]
		public MysticLightFade()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class MysticRotation : MonoBehaviour
	{
		[Token(Token = "0x200048A")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001BF7")]
			Local,
			[Token(Token = "0x4001BF8")]
			World
		}

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBC44", Offset = "0x6DBC44")]
		public Vector3 rotateVector;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC22AEC", Offset = "0xC22AEC", VA = "0xC22AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC22AF0", Offset = "0xC22AF0", VA = "0xC22AF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC22BC8", Offset = "0xC22BC8", VA = "0xC22BC8")]
		public MysticRotation()
		{
		}
	}
}
namespace ES
{
	[Token(Token = "0x200048B")]
	public class BezierCurve
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 A;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 B;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 C;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 D;

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xB606DC", Offset = "0xB606DC", VA = "0xB606DC")]
		public Vector3 Calculate(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xB6079C", Offset = "0xB6079C", VA = "0xB6079C")]
		public BezierCurve()
		{
		}
	}
}
namespace EternalStarlight
{
	[Token(Token = "0x200048C")]
	public class AnalyticsTracker : MonoBehaviour
	{
		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7010", Offset = "0x6D7010")]
		private sealed class <TrackEventCo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnalyticsTracker <>4__this;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string context;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string category;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string event_name;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int val;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <download>5__2;

			[Token(Token = "0x17000282")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B13")]
				[Address(RVA = "0x9FA938", Offset = "0x9FA938", VA = "0x9FA938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B15")]
				[Address(RVA = "0x9FA980", Offset = "0x9FA980", VA = "0x9FA980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x9FA4AC", Offset = "0x9FA4AC", VA = "0x9FA4AC")]
			[DebuggerHidden]
			public <TrackEventCo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B11")]
			[Address(RVA = "0x9FA4D8", Offset = "0x9FA4D8", VA = "0x9FA4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B12")]
			[Address(RVA = "0x9FA4DC", Offset = "0x9FA4DC", VA = "0x9FA4DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x9FA940", Offset = "0x9FA940", VA = "0x9FA940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int propertyId;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string serverUrl;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string logEndpoint;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debug;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string sessionId;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastLogTime;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableTracking;

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xCBB4AC", Offset = "0xCBB4AC", VA = "0xCBB4AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xCBB548", Offset = "0xCBB548", VA = "0xCBB548")]
		public void StartSession()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xCBB5BC", Offset = "0xCBB5BC", VA = "0xCBB5BC")]
		public void TrackEvent(string category, string event_name, int val = 0, string context = "")
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xCBB6A0", Offset = "0xCBB6A0", VA = "0xCBB6A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E4D80", Offset = "0x6E4D80")]
		public IEnumerator TrackEventCo(string category, string event_name, int val, string context)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xCBB76C", Offset = "0xCBB76C", VA = "0xCBB76C")]
		public AnalyticsTracker()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x200048E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D7020", Offset = "0x6D7020")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D7020", Offset = "0x6D7020")]
	public class Fog : MonoBehaviour
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _startDistance;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _useRadialDistance;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool _fadeToSkybox;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _material;

		[Token(Token = "0x17000284")]
		public float startDistance
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xB523B4", Offset = "0xB523B4", VA = "0xB523B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xB523BC", Offset = "0xB523BC", VA = "0xB523BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool useRadialDistance
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xB523C4", Offset = "0xB523C4", VA = "0xB523C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xB523CC", Offset = "0xB523CC", VA = "0xB523CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public bool fadeToSkybox
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xB523D8", Offset = "0xB523D8", VA = "0xB523D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xB523E0", Offset = "0xB523E0", VA = "0xB523E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xB523EC", Offset = "0xB523EC", VA = "0xB523EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xB5245C", Offset = "0xB5245C", VA = "0xB5245C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xB52D04", Offset = "0xB52D04", VA = "0xB52D04")]
		public Fog()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6D70B4", Offset = "0x6D70B4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6D70B4", Offset = "0x6D70B4")]
	public class Streak : MonoBehaviour
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DBCBC", Offset = "0x6DBCBC")]
		private float _threshold;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DBCFC", Offset = "0x6DBCFC")]
		private float _stretch;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DBD3C", Offset = "0x6DBD3C")]
		private float _intensity;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6DBD7C", Offset = "0x6DBD7C")]
		[SerializeField]
		private Color _tint;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _material;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stack<RenderTexture> _mipStack;

		[Token(Token = "0x17000287")]
		public float threshold
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0xBB76D4", Offset = "0xBB76D4", VA = "0xBB76D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xBB76DC", Offset = "0xBB76DC", VA = "0xBB76DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public float stretch
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xBB76E4", Offset = "0xBB76E4", VA = "0xBB76E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xBB76EC", Offset = "0xBB76EC", VA = "0xBB76EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public float intensity
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xBB76F4", Offset = "0xBB76F4", VA = "0xBB76F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xBB76FC", Offset = "0xBB76FC", VA = "0xBB76FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public Color tint
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xBB7704", Offset = "0xBB7704", VA = "0xBB7704")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xBB7710", Offset = "0xBB7710", VA = "0xBB7710")]
			set
			{
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xBB771C", Offset = "0xBB771C", VA = "0xBB771C")]
		private RenderTexture GetTempRT(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xBB7734", Offset = "0xBB7734", VA = "0xBB7734")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xBB7820", Offset = "0xBB7820", VA = "0xBB7820")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xBB7CA0", Offset = "0xBB7CA0", VA = "0xBB7CA0")]
		public Streak()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x2000490")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xCBE770", Offset = "0xCBE770", VA = "0xCBE770")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xCBF248", Offset = "0xCBF248", VA = "0xCBF248")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xCBF69C", Offset = "0xCBF69C", VA = "0xCBF69C")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xCBF7B4", Offset = "0xCBF7B4", VA = "0xCBF7B4")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xCBF8FC", Offset = "0xCBF8FC", VA = "0xCBF8FC", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xCBFA4C", Offset = "0xCBFA4C", VA = "0xCBFA4C", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xCBFBF0", Offset = "0xCBFBF0", VA = "0xCBFBF0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xCBFD00", Offset = "0xCBFD00", VA = "0xCBFD00", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xCBFE64", Offset = "0xCBFE64", VA = "0xCBFE64", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xCBFF18", Offset = "0xCBFF18", VA = "0xCBFF18", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xCC0068", Offset = "0xCC0068", VA = "0xCC0068", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xCC01B8", Offset = "0xCC01B8", VA = "0xCC01B8", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xCC0760", Offset = "0xCC0760", VA = "0xCC0760", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xCC0DF0", Offset = "0xCC0DF0", VA = "0xCC0DF0", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xCC0E84", Offset = "0xCC0E84", VA = "0xCC0E84", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xCC1194", Offset = "0xCC1194", VA = "0xCC1194", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xCC11AC", Offset = "0xCC11AC", VA = "0xCC11AC", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xCC12DC", Offset = "0xCC12DC", VA = "0xCC12DC", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xCC1568", Offset = "0xCC1568", VA = "0xCC1568", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xCC180C", Offset = "0xCC180C", VA = "0xCC180C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xCC0EA8", Offset = "0xCC0EA8", VA = "0xCC0EA8")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xCC1980", Offset = "0xCC1980", VA = "0xCC1980", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xCBF0E8", Offset = "0xCBF0E8", VA = "0xCBF0E8")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xCC1DD4", Offset = "0xCC1DD4", VA = "0xCC1DD4")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xCC1F38", Offset = "0xCC1F38", VA = "0xCC1F38")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xCC1FE8", Offset = "0xCC1FE8", VA = "0xCC1FE8")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xCC20F4", Offset = "0xCC20F4", VA = "0xCC20F4")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xCC219C", Offset = "0xCC219C", VA = "0xCC219C")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xCC2308", Offset = "0xCC2308", VA = "0xCC2308")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xCBF864", Offset = "0xCBF864", VA = "0xCBF864")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xCBF718", Offset = "0xCBF718", VA = "0xCBF718")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class HapticDevice
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xE8D28C", Offset = "0xE8D28C", VA = "0xE8D28C")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x2000493")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001B55")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		private class Device
		{
			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x9FAE4C", Offset = "0x9FAE4C", VA = "0x9FAE4C")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000495")]
		public class StreamHost
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x9FAE54", Offset = "0x9FAE54", VA = "0x9FAE54")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xCC2BB8", Offset = "0xCC2BB8", VA = "0xCC2BB8")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xCC2BDC", Offset = "0xCC2BDC", VA = "0xCC2BDC")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xCC2D5C", Offset = "0xCC2D5C", VA = "0xCC2D5C")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xCC2D84", Offset = "0xCC2D84", VA = "0xCC2D84")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B50")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xCC2D94", Offset = "0xCC2D94", VA = "0xCC2D94")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xCC1CC4", Offset = "0xCC1CC4", VA = "0xCC1CC4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xCC23B0", Offset = "0xCC23B0", VA = "0xCC23B0")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xCC25BC", Offset = "0xCC25BC", VA = "0xCC25BC")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000496")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBE00", Offset = "0x6DBE00")]
		private Sprite defaultImage;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xCC2E8C", Offset = "0xCC2E8C", VA = "0xCC2E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xCC2F58", Offset = "0xCC2F58", VA = "0xCC2F58")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xCC3550", Offset = "0xCC3550", VA = "0xCC3550")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xCC35B8", Offset = "0xCC35B8", VA = "0xCC35B8")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xCC3654", Offset = "0xCC3654", VA = "0xCC3654")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xCC365C", Offset = "0xCC365C", VA = "0xCC365C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xCC37FC", Offset = "0xCC37FC", VA = "0xCC37FC")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xCC38DC", Offset = "0xCC38DC", VA = "0xCC38DC")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xCC398C", Offset = "0xCC398C", VA = "0xCC398C")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBEBC", Offset = "0x6DBEBC")]
		private Image deviceImage;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBF38", Offset = "0x6DBF38")]
		private Sprite leftSide;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xCC3994", Offset = "0xCC3994", VA = "0xCC3994")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xCC3A80", Offset = "0xCC3A80", VA = "0xCC3A80")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xCC3C34", Offset = "0xCC3C34", VA = "0xCC3C34")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xCC3CB8", Offset = "0xCC3CB8", VA = "0xCC3CB8")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xCC3D94", Offset = "0xCC3D94", VA = "0xCC3D94")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xCC3D9C", Offset = "0xCC3D9C", VA = "0xCC3D9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xCC3E10", Offset = "0xCC3E10", VA = "0xCC3E10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xCC3E30", Offset = "0xCC3E30", VA = "0xCC3E30")]
		public void Show()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xCC3E50", Offset = "0xCC3E50", VA = "0xCC3E50")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xCC3F74", Offset = "0xCC3F74", VA = "0xCC3F74")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DBFC4", Offset = "0x6DBFC4")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xCC3F7C", Offset = "0xCC3F7C", VA = "0xCC3F7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xCC43C4", Offset = "0xCC43C4", VA = "0xCC43C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xCC415C", Offset = "0xCC415C", VA = "0xCC415C")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xCC464C", Offset = "0xCC464C", VA = "0xCC464C")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xCC46EC", Offset = "0xCC46EC", VA = "0xCC46EC")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xCC470C", Offset = "0xCC470C", VA = "0xCC470C")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xCC472C", Offset = "0xCC472C", VA = "0xCC472C")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xCC4748", Offset = "0xCC4748", VA = "0xCC4748")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xCC452C", Offset = "0xCC452C", VA = "0xCC452C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xCC492C", Offset = "0xCC492C", VA = "0xCC492C")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049B")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xA671F8", Offset = "0xA671F8", VA = "0xA671F8")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class IconSetting
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC010", Offset = "0x6DC010")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xCA7E30", Offset = "0xCA7E30", VA = "0xCA7E30")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC048", Offset = "0x6DC048")]
		private Image icon;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC0C4", Offset = "0x6DC0C4")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC150", Offset = "0x6DC150")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xCC493C", Offset = "0xCC493C", VA = "0xCC493C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xCC4B3C", Offset = "0xCC4B3C", VA = "0xCC4B3C")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xCC4D08", Offset = "0xCC4D08", VA = "0xCC4D08")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xCC4D9C", Offset = "0xCC4D9C", VA = "0xCC4D9C")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xCC4E18", Offset = "0xCC4E18", VA = "0xCC4E18")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xCC4C00", Offset = "0xCC4C00", VA = "0xCC4C00")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xCC5298", Offset = "0xCC5298", VA = "0xCC5298")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xCC52C0", Offset = "0xCC52C0", VA = "0xCC52C0")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xCC5338", Offset = "0xCC5338", VA = "0xCC5338")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xCC5424", Offset = "0xCC5424", VA = "0xCC5424")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xCC5510", Offset = "0xCC5510", VA = "0xCC5510")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xCC5130", Offset = "0xCC5130", VA = "0xCC5130")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xCC50C8", Offset = "0xCC50C8", VA = "0xCC50C8")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xCC50FC", Offset = "0xCC50FC", VA = "0xCC50FC")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xCC555C", Offset = "0xCC555C", VA = "0xCC555C")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC20C", Offset = "0x6DC20C")]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xCC5640", Offset = "0xCC5640", VA = "0xCC5640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xCC5B14", Offset = "0xCC5B14", VA = "0xCC5B14")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xCC6180", Offset = "0xCC6180", VA = "0xCC6180")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xCC6214", Offset = "0xCC6214", VA = "0xCC6214")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xCC62A8", Offset = "0xCC62A8", VA = "0xCC62A8")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xCC62F0", Offset = "0xCC62F0", VA = "0xCC62F0")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xCC6328", Offset = "0xCC6328", VA = "0xCC6328")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xCC6360", Offset = "0xCC6360", VA = "0xCC6360")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xB615E0", Offset = "0xB615E0", VA = "0xB615E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xB61710", Offset = "0xB61710", VA = "0xB61710")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xB617B4", Offset = "0xB617B4", VA = "0xB617B4")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xB61394", Offset = "0xB61394", VA = "0xB61394")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xB612D0", Offset = "0xB612D0", VA = "0xB612D0")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xB620EC", Offset = "0xB620EC", VA = "0xB620EC")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xB622CC", Offset = "0xB622CC", VA = "0xB622CC")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xB60F08", Offset = "0xB60F08", VA = "0xB60F08")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xB60B70", Offset = "0xB60B70", VA = "0xB60B70")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xB60D40", Offset = "0xB60D40", VA = "0xB60D40")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xB60848", Offset = "0xB60848", VA = "0xB60848")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xB62388", Offset = "0xB62388", VA = "0xB62388")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xB6240C", Offset = "0xB6240C", VA = "0xB6240C")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xB624CC", Offset = "0xB624CC", VA = "0xB624CC")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xB62588", Offset = "0xB62588", VA = "0xB62588")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xB62678", Offset = "0xB62678", VA = "0xB62678")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xB62734", Offset = "0xB62734", VA = "0xB62734")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xB62808", Offset = "0xB62808", VA = "0xB62808")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xB628CC", Offset = "0xB628CC", VA = "0xB628CC")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A0")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD484B8", Offset = "0xD484B8", VA = "0xD484B8")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC298", Offset = "0x6DC298")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xB68DE8", Offset = "0xB68DE8", VA = "0xB68DE8")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xB68F50", Offset = "0xB68F50", VA = "0xB68F50")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class HapticApi
	{
		[Token(Token = "0x20004A3")]
		public struct point
		{
			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20004A4")]
		public struct status
		{
			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE8BCB0", Offset = "0xE8BCB0", VA = "0xE8BCB0")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE8BD50", Offset = "0xE8BD50", VA = "0xE8BD50")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xE8BE08", Offset = "0xE8BE08", VA = "0xE8BE08")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE8BE78", Offset = "0xE8BE78", VA = "0xE8BE78")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xE8BF2C", Offset = "0xE8BF2C", VA = "0xE8BF2C")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xE8BFE4", Offset = "0xE8BFE4", VA = "0xE8BFE4")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xE8C09C", Offset = "0xE8C09C", VA = "0xE8C09C")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xE8C12C", Offset = "0xE8C12C", VA = "0xE8C12C")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xE8C1CC", Offset = "0xE8C1CC", VA = "0xE8C1CC")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xE8C2B4", Offset = "0xE8C2B4", VA = "0xE8C2B4")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xE8C37C", Offset = "0xE8C37C", VA = "0xE8C37C")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xE8C444", Offset = "0xE8C444", VA = "0xE8C444")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xE8C4E0", Offset = "0xE8C4E0", VA = "0xE8C4E0")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xE8C55C", Offset = "0xE8C55C", VA = "0xE8C55C")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xE8C5F8", Offset = "0xE8C5F8", VA = "0xE8C5F8")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xE8C668", Offset = "0xE8C668", VA = "0xE8C668")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xE8C6F8", Offset = "0xE8C6F8", VA = "0xE8C6F8")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xE8C764", Offset = "0xE8C764", VA = "0xE8C764")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xE8C7D4", Offset = "0xE8C7D4", VA = "0xE8C7D4")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xE8C840", Offset = "0xE8C840", VA = "0xE8C840")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xE8C8C8", Offset = "0xE8C8C8", VA = "0xE8C8C8")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xE8C9A0", Offset = "0xE8C9A0", VA = "0xE8C9A0")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xCCA790", Offset = "0xCCA790", VA = "0xCCA790", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xCCABB4", Offset = "0xCCABB4", VA = "0xCCABB4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xCCABDC", Offset = "0xCCABDC", VA = "0xCCABDC")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xB6434C", Offset = "0xB6434C", VA = "0xB6434C")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xB6438C", Offset = "0xB6438C", VA = "0xB6438C", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xB64398", Offset = "0xB64398", VA = "0xB64398", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xB64454", Offset = "0xB64454", VA = "0xB64454", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xB64460", Offset = "0xB64460", VA = "0xB64460", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xB6446C", Offset = "0xB6446C", VA = "0xB6446C", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xB64474", Offset = "0xB64474", VA = "0xB64474", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xB64484", Offset = "0xB64484", VA = "0xB64484", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xB64494", Offset = "0xB64494", VA = "0xB64494", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xB645A8", Offset = "0xB645A8", VA = "0xB645A8", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xB64778", Offset = "0xB64778", VA = "0xB64778", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xB647A4", Offset = "0xB647A4", VA = "0xB647A4", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xB647D4", Offset = "0xB647D4", VA = "0xB647D4", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xB647E0", Offset = "0xB647E0", VA = "0xB647E0", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xB647F0", Offset = "0xB647F0", VA = "0xB647F0", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xB647FC", Offset = "0xB647FC", VA = "0xB647FC", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xB64804", Offset = "0xB64804", VA = "0xB64804", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xB6480C", Offset = "0xB6480C", VA = "0xB6480C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A7")]
	public class BhapticsProject
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC2D0", Offset = "0x6DC2D0")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC2E0", Offset = "0x6DC2E0")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x1700028B")]
		public Track[] Tracks
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xB6623C", Offset = "0xB6623C", VA = "0xB6623C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E40", Offset = "0x6E4E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xB66244", Offset = "0xB66244", VA = "0xB66244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E50", Offset = "0x6E4E50")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public Layout Layout
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xB6624C", Offset = "0xB6624C", VA = "0xB6624C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E60", Offset = "0x6E4E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xB66254", Offset = "0xB66254", VA = "0xB66254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E70", Offset = "0x6E4E70")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xB6625C", Offset = "0xB6625C", VA = "0xB6625C")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xB66484", Offset = "0xB66484", VA = "0xB66484")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xB6647C", Offset = "0xB6647C", VA = "0xB6647C")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xE8DE08", Offset = "0xE8DE08", VA = "0xE8DE08")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xE8DEE0", Offset = "0xE8DEE0", VA = "0xE8DEE0")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class Track
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC2F0", Offset = "0x6DC2F0")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x1700028D")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xC5F778", Offset = "0xC5F778", VA = "0xC5F778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E80", Offset = "0x6E4E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xC5F780", Offset = "0xC5F780", VA = "0xC5F780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4E90", Offset = "0x6E4E90")]
			set
			{
			}
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xC5F788", Offset = "0xC5F788", VA = "0xC5F788", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xC5F810", Offset = "0xC5F810", VA = "0xC5F810")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xC5FA14", Offset = "0xC5FA14", VA = "0xC5FA14")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xC5FA0C", Offset = "0xC5FA0C", VA = "0xC5FA0C")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class HapticEffect
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC300", Offset = "0x6DC300")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC310", Offset = "0x6DC310")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC320", Offset = "0x6DC320")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x1700028E")]
		public int StartTime
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xE8D294", Offset = "0xE8D294", VA = "0xE8D294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4EA0", Offset = "0x6E4EA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xE8D29C", Offset = "0xE8D29C", VA = "0xE8D29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4EB0", Offset = "0x6E4EB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public int OffsetTime
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xE8D2A4", Offset = "0xE8D2A4", VA = "0xE8D2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4EC0", Offset = "0x6E4EC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xE8D2AC", Offset = "0xE8D2AC", VA = "0xE8D2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4ED0", Offset = "0x6E4ED0")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xE8D2B4", Offset = "0xE8D2B4", VA = "0xE8D2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4EE0", Offset = "0x6E4EE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xE8D2BC", Offset = "0xE8D2BC", VA = "0xE8D2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4EF0", Offset = "0x6E4EF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xE8D2C4", Offset = "0xE8D2C4", VA = "0xE8D2C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xE8D580", Offset = "0xE8D580", VA = "0xE8D580")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xE8D9BC", Offset = "0xE8D9BC", VA = "0xE8D9BC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xE8D828", Offset = "0xE8D828", VA = "0xE8D828")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class Layout
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC330", Offset = "0x6DC330")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC340", Offset = "0x6DC340")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x17000291")]
		public string Type
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xE75430", Offset = "0xE75430", VA = "0xE75430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F00", Offset = "0x6E4F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xE75438", Offset = "0xE75438", VA = "0xE75438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F10", Offset = "0x6E4F10")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xE75440", Offset = "0xE75440", VA = "0xE75440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F20", Offset = "0x6E4F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xE75448", Offset = "0xE75448", VA = "0xE75448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F30", Offset = "0x6E4F30")]
			set
			{
			}
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xE75450", Offset = "0xE75450", VA = "0xE75450")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xE75950", Offset = "0xE75950", VA = "0xE75950")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xE75804", Offset = "0xE75804", VA = "0xE75804")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class LayoutObject
	{
		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC350", Offset = "0x6DC350")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC360", Offset = "0x6DC360")]
		private float <X>k__BackingField;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC370", Offset = "0x6DC370")]
		private float <Y>k__BackingField;

		[Token(Token = "0x17000293")]
		public int Index
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xE75D88", Offset = "0xE75D88", VA = "0xE75D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F40", Offset = "0x6E4F40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xE75D90", Offset = "0xE75D90", VA = "0xE75D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F50", Offset = "0x6E4F50")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public float X
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xE75D98", Offset = "0xE75D98", VA = "0xE75D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F60", Offset = "0x6E4F60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xE75DA0", Offset = "0xE75DA0", VA = "0xE75DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F70", Offset = "0x6E4F70")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public float Y
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xE75DA8", Offset = "0xE75DA8", VA = "0xE75DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F80", Offset = "0x6E4F80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xE75DB0", Offset = "0xE75DB0", VA = "0xE75DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4F90", Offset = "0x6E4F90")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xE7580C", Offset = "0xE7580C", VA = "0xE7580C")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xE75C44", Offset = "0xE75C44", VA = "0xE75C44")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xE75DB8", Offset = "0xE75DB8", VA = "0xE75DB8")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class HapticEffectMode
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC380", Offset = "0x6DC380")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC390", Offset = "0x6DC390")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3A0", Offset = "0x6DC3A0")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x17000296")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xE8DDD0", Offset = "0xE8DDD0", VA = "0xE8DDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FA0", Offset = "0x6E4FA0")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xE8DDD8", Offset = "0xE8DDD8", VA = "0xE8DDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FB0", Offset = "0x6E4FB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xE8DDE0", Offset = "0xE8DDE0", VA = "0xE8DDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FC0", Offset = "0x6E4FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xE8DDE8", Offset = "0xE8DDE8", VA = "0xE8DDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FD0", Offset = "0x6E4FD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xE8DDF0", Offset = "0xE8DDF0", VA = "0xE8DDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FE0", Offset = "0x6E4FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xE8DDF8", Offset = "0xE8DDF8", VA = "0xE8DDF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4FF0", Offset = "0x6E4FF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xE8D830", Offset = "0xE8D830", VA = "0xE8D830")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xE8DC30", Offset = "0xE8DC30", VA = "0xE8DC30")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xE8DE00", Offset = "0xE8DE00", VA = "0xE8DE00")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class DotMode
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3B0", Offset = "0x6DC3B0")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3C0", Offset = "0x6DC3C0")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000299")]
		public bool DotConnected
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x920008", Offset = "0x920008", VA = "0x920008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5000", Offset = "0x6E5000")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x920010", Offset = "0x920010", VA = "0x920010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5010", Offset = "0x6E5010")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x92001C", Offset = "0x92001C", VA = "0x92001C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5020", Offset = "0x6E5020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x920024", Offset = "0x920024", VA = "0x920024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5030", Offset = "0x6E5030")]
			set
			{
			}
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x92002C", Offset = "0x92002C", VA = "0x92002C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x920520", Offset = "0x920520", VA = "0x920520")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x920268", Offset = "0x920268", VA = "0x920268")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3D0", Offset = "0x6DC3D0")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3E0", Offset = "0x6DC3E0")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC3F0", Offset = "0x6DC3F0")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x1700029B")]
		public int StartTime
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x920AE4", Offset = "0x920AE4", VA = "0x920AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5040", Offset = "0x6E5040")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x920AEC", Offset = "0x920AEC", VA = "0x920AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5050", Offset = "0x6E5050")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public int EndTime
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x920AF4", Offset = "0x920AF4", VA = "0x920AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5060", Offset = "0x6E5060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x920AFC", Offset = "0x920AFC", VA = "0x920AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5070", Offset = "0x6E5070")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x920B04", Offset = "0x920B04", VA = "0x920B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5080", Offset = "0x6E5080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x920B0C", Offset = "0x920B0C", VA = "0x920B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5090", Offset = "0x6E5090")]
			set
			{
			}
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x920270", Offset = "0x920270", VA = "0x920270")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x9206B0", Offset = "0x9206B0", VA = "0x9206B0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x920B14", Offset = "0x920B14", VA = "0x920B14")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class DotModeObject
	{
		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC400", Offset = "0x6DC400")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC410", Offset = "0x6DC410")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x1700029E")]
		public int Index
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x9208F4", Offset = "0x9208F4", VA = "0x9208F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50A0", Offset = "0x6E50A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x9208FC", Offset = "0x9208FC", VA = "0x9208FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50B0", Offset = "0x6E50B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float Intensity
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x920904", Offset = "0x920904", VA = "0x920904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50C0", Offset = "0x6E50C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x92090C", Offset = "0x92090C", VA = "0x92090C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50D0", Offset = "0x6E50D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x920914", Offset = "0x920914", VA = "0x920914")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x9209D8", Offset = "0x9209D8", VA = "0x9209D8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x9209D0", Offset = "0x9209D0", VA = "0x9209D0")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class PathMode
	{
		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC420", Offset = "0x6DC420")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x170002A0")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x128E7EC", Offset = "0x128E7EC", VA = "0x128E7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50E0", Offset = "0x6E50E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x128E7F4", Offset = "0x128E7F4", VA = "0x128E7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E50F0", Offset = "0x6E50F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x128E7FC", Offset = "0x128E7FC", VA = "0x128E7FC")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x128ECAC", Offset = "0x128ECAC", VA = "0x128ECAC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x128E9DC", Offset = "0x128E9DC", VA = "0x128E9DC")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC430", Offset = "0x6DC430")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x170002A1")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x128F300", Offset = "0x128F300", VA = "0x128F300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5100", Offset = "0x6E5100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x128F308", Offset = "0x128F308", VA = "0x128F308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5110", Offset = "0x6E5110")]
			set
			{
			}
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x128E9E4", Offset = "0x128E9E4", VA = "0x128E9E4")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x128EDD0", Offset = "0x128EDD0", VA = "0x128EDD0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x128F310", Offset = "0x128F310", VA = "0x128F310")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class PathModeObject
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC440", Offset = "0x6DC440")]
		private float <X>k__BackingField;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC450", Offset = "0x6DC450")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC460", Offset = "0x6DC460")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6DC470", Offset = "0x6DC470")]
		private int <Time>k__BackingField;

		[Token(Token = "0x170002A2")]
		public float X
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x128F02C", Offset = "0x128F02C", VA = "0x128F02C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5120", Offset = "0x6E5120")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x128F034", Offset = "0x128F034", VA = "0x128F034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5130", Offset = "0x6E5130")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float Y
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x128F03C", Offset = "0x128F03C", VA = "0x128F03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5140", Offset = "0x6E5140")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x128F044", Offset = "0x128F044", VA = "0x128F044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5150", Offset = "0x6E5150")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float Intensity
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x128F04C", Offset = "0x128F04C", VA = "0x128F04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5160", Offset = "0x6E5160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x128F054", Offset = "0x128F054", VA = "0x128F054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5170", Offset = "0x6E5170")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public int Time
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x128F05C", Offset = "0x128F05C", VA = "0x128F05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5180", Offset = "0x6E5180")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x128F064", Offset = "0x128F064", VA = "0x128F064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5190", Offset = "0x6E5190")]
			set
			{
			}
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x128F06C", Offset = "0x128F06C", VA = "0x128F06C")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x128F184", Offset = "0x128F184", VA = "0x128F184")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x128F17C", Offset = "0x128F17C", VA = "0x128F17C")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	internal class ParseUtil
	{
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x128B55C", Offset = "0x128B55C", VA = "0x128B55C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x128B6BC", Offset = "0x128B6BC", VA = "0x128B6BC")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x128B81C", Offset = "0x128B81C", VA = "0x128B81C")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001CC2")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001CC3")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001CC4")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001CC5")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001CC6")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001CC7")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001CC8")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001CC9")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6001C32")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xB67E2C", Offset = "0xB67E2C", VA = "0xB67E2C")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xB67E70", Offset = "0xB67E70", VA = "0xB67E70")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xB67E78", Offset = "0xB67E78", VA = "0xB67E78")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xB67E80", Offset = "0xB67E80", VA = "0xB67E80")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xB67EA0", Offset = "0xB67EA0", VA = "0xB67EA0")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xB67EA4", Offset = "0xB67EA4", VA = "0xB67EA4")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xB67FC4", Offset = "0xB67FC4", VA = "0xB67FC4")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xB63C94", Offset = "0xB63C94", VA = "0xB63C94")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xB60B18", Offset = "0xB60B18", VA = "0xB60B18")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xB6801C", Offset = "0xB6801C", VA = "0xB6801C")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xB4D840", Offset = "0xB4D840", VA = "0xB4D840")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC480", Offset = "0x6DC480")]
		public float Intensity;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC49C", Offset = "0x6DC49C")]
		public float Duration;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x170002A6")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xB4F438", Offset = "0xB4F438", VA = "0xB4F438")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xB4F52C", Offset = "0xB4F52C", VA = "0xB4F52C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB4F58C", Offset = "0xB4F58C", VA = "0xB4F58C", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xB4F5A4", Offset = "0xB4F5A4", VA = "0xB4F5A4", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xB4F5BC", Offset = "0xB4F5BC", VA = "0xB4F5BC", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xB4F5D0", Offset = "0xB4F5D0", VA = "0xB4F5D0", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xB4F5E0", Offset = "0xB4F5E0", VA = "0xB4F5E0", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xB4F710", Offset = "0xB4F710", VA = "0xB4F710", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xB4F828", Offset = "0xB4F828", VA = "0xB4F828", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xB4FAC0", Offset = "0xB4FAC0", VA = "0xB4FAC0", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xB4F474", Offset = "0xB4F474", VA = "0xB4F474")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xB4FAEC", Offset = "0xB4FAEC", VA = "0xB4FAEC")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xE8A964", Offset = "0xE8A964", VA = "0xE8A964")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001CD0")]
		None,
		[Token(Token = "0x4001CD1")]
		Tactal,
		[Token(Token = "0x4001CD2")]
		TactSuit,
		[Token(Token = "0x4001CD3")]
		Tactosy_arms,
		[Token(Token = "0x4001CD4")]
		Tactosy_hands,
		[Token(Token = "0x4001CD5")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x20004BA")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001CD7")]
		VestFront,
		[Token(Token = "0x4001CD8")]
		VestBack,
		[Token(Token = "0x4001CD9")]
		Head,
		[Token(Token = "0x4001CDA")]
		RightForearm,
		[Token(Token = "0x4001CDB")]
		LeftForearm,
		[Token(Token = "0x4001CDC")]
		LeftHand,
		[Token(Token = "0x4001CDD")]
		RightHand,
		[Token(Token = "0x4001CDE")]
		LeftFoot,
		[Token(Token = "0x4001CDF")]
		RightFoot
	}
	[Token(Token = "0x20004BB")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xE8C9A8", Offset = "0xE8C9A8", VA = "0xE8C9A8", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xE8CA0C", Offset = "0xE8CA0C", VA = "0xE8CA0C", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xE8CA28", Offset = "0xE8CA28", VA = "0xE8CA28", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xE8CA40", Offset = "0xE8CA40", VA = "0xE8CA40", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xE8CA54", Offset = "0xE8CA54", VA = "0xE8CA54", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xE8CA64", Offset = "0xE8CA64", VA = "0xE8CA64", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xE8CB94", Offset = "0xE8CB94", VA = "0xE8CB94", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xE8CCA8", Offset = "0xE8CCA8", VA = "0xE8CCA8", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xE8CDB4", Offset = "0xE8CDB4", VA = "0xE8CDB4", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xE8CDB8", Offset = "0xE8CDB8", VA = "0xE8CDB8", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE8CEA0", Offset = "0xE8CEA0", VA = "0xE8CEA0", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xE8CFB4", Offset = "0xE8CFB4", VA = "0xE8CFB4", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xE8D0A8", Offset = "0xE8D0A8", VA = "0xE8D0A8", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xE8D1BC", Offset = "0xE8D1BC", VA = "0xE8D1BC", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xE8D1C0", Offset = "0xE8D1C0", VA = "0xE8D1C0")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xE8D1C8", Offset = "0xE8D1C8", VA = "0xE8D1C8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xE8DEF0", Offset = "0xE8DEF0", VA = "0xE8DEF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xE8E078", Offset = "0xE8E078", VA = "0xE8E078")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xE8E234", Offset = "0xE8E234", VA = "0xE8E234")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xE8E144", Offset = "0xE8E144", VA = "0xE8E144")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xE8E43C", Offset = "0xE8E43C", VA = "0xE8E43C")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xE8E44C", Offset = "0xE8E44C", VA = "0xE8E44C")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xE8E324", Offset = "0xE8E324", VA = "0xE8E324")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xE8E6E4", Offset = "0xE8E6E4", VA = "0xE8E6E4")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xE8E7F4", Offset = "0xE8E7F4", VA = "0xE8E7F4")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xE8E928", Offset = "0xE8E928", VA = "0xE8E928")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xE8EA50", Offset = "0xE8EA50", VA = "0xE8EA50")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xE8E458", Offset = "0xE8E458", VA = "0xE8E458")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xE8EA58", Offset = "0xE8EA58", VA = "0xE8EA58")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public enum PositionTag
	{
		[Token(Token = "0x4001CEB")]
		Body,
		[Token(Token = "0x4001CEC")]
		Head,
		[Token(Token = "0x4001CED")]
		LeftArm,
		[Token(Token = "0x4001CEE")]
		RightArm,
		[Token(Token = "0x4001CEF")]
		Default
	}
	[Token(Token = "0x20004BF")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7148", Offset = "0x6D7148")]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C76")]
				[Address(RVA = "0xA00A24", Offset = "0xA00A24", VA = "0xA00A24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C78")]
				[Address(RVA = "0xA00A6C", Offset = "0xA00A6C", VA = "0xA00A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xA0090C", Offset = "0xA0090C", VA = "0xA0090C")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xA00938", Offset = "0xA00938", VA = "0xA00938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xA0093C", Offset = "0xA0093C", VA = "0xA0093C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xA00A2C", Offset = "0xA00A2C", VA = "0xA00A2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D7158", Offset = "0x6D7158")]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0xA00C94", Offset = "0xA00C94", VA = "0xA00C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7E")]
				[Address(RVA = "0xA00CDC", Offset = "0xA00CDC", VA = "0xA00CDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xA00A74", Offset = "0xA00A74", VA = "0xA00A74")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xA00AA0", Offset = "0xA00AA0", VA = "0xA00AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xA00AA4", Offset = "0xA00AA4", VA = "0xA00AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xA00C9C", Offset = "0xA00C9C", VA = "0xA00C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xC9E634", Offset = "0xC9E634", VA = "0xC9E634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xC9EC88", Offset = "0xC9EC88", VA = "0xC9EC88")]
		public void Play()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xC9E980", Offset = "0xC9E980", VA = "0xC9E980")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xC9ED04", Offset = "0xC9ED04", VA = "0xC9ED04")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xC9EF28", Offset = "0xC9EF28", VA = "0xC9EF28")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xC9F014", Offset = "0xC9F014", VA = "0xC9F014")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xC9EEA0", Offset = "0xC9EEA0", VA = "0xC9EEA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E51A0", Offset = "0x6E51A0")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xC9EB10", Offset = "0xC9EB10", VA = "0xC9EB10")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xC9EC8C", Offset = "0xC9EC8C", VA = "0xC9EC8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E5200", Offset = "0x6E5200")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xC9F0B0", Offset = "0xC9F0B0", VA = "0xC9F0B0")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xCA28F8", Offset = "0xCA28F8", VA = "0xCA28F8")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public interface IHaptic
	{
		[Token(Token = "0x6001C80")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x6001C81")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x6001C82")]
		bool IsPlaying(string key);

		[Token(Token = "0x6001C83")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x6001C84")]
		bool IsPlaying();

		[Token(Token = "0x6001C85")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x6001C86")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x6001C87")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x6001C88")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x6001C89")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x6001C8A")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x6001C8B")]
		void SubmitRegistered(string key);

		[Token(Token = "0x6001C8C")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x6001C8D")]
		void TurnOff(string key);

		[Token(Token = "0x6001C8E")]
		void TurnOff();

		[Token(Token = "0x6001C8F")]
		void Dispose();

		[Token(Token = "0x6001C90")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6D7168", Offset = "0x6D7168")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC508", Offset = "0x6DC508")]
		public int TimeMillis;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xD01BA8", Offset = "0xD01BA8", VA = "0xD01BA8", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xD020CC", Offset = "0xD020CC", VA = "0xD020CC", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xD01E5C", Offset = "0xD01E5C", VA = "0xD01E5C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xD01F8C", Offset = "0xD01F8C", VA = "0xD01F8C")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xD02178", Offset = "0xD02178", VA = "0xD02178")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C5")]
	public class Point
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC524", Offset = "0x6DC524")]
		public float X;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC53C", Offset = "0x6DC53C")]
		public float Y;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC554", Offset = "0x6DC554")]
		public int Intensity;

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xA65AB0", Offset = "0xA65AB0", VA = "0xA65AB0")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C6")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001D09")]
		DotMode = 1,
		[Token(Token = "0x4001D0A")]
		PathMode
	}
	[Token(Token = "0x20004C7")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC570", Offset = "0x6DC570")]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6DC5B4", Offset = "0x6DC5B4")]
		[SerializeField]
		protected float TactFileOffsetY;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1B13CB4", Offset = "0x1B13CB4", VA = "0x1B13CB4", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1B13D10", Offset = "0x1B13D10", VA = "0x1B13D10", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1B13D24", Offset = "0x1B13D24", VA = "0x1B13D24", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1B13D38", Offset = "0x1B13D38", VA = "0x1B13D38", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1B13D48", Offset = "0x1B13D48", VA = "0x1B13D48", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1B13D58", Offset = "0x1B13D58", VA = "0x1B13D58", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1B1401C", Offset = "0x1B1401C", VA = "0x1B1401C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1B14044", Offset = "0x1B14044", VA = "0x1B14044")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1B15154", Offset = "0x1B15154", VA = "0x1B15154")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x1B154E8", Offset = "0x1B154E8", VA = "0x1B154E8")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1B155B4", Offset = "0x1B155B4", VA = "0x1B155B4")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1B1577C", Offset = "0x1B1577C", VA = "0x1B1577C")]
		public VisualFeedback()
		{
		}
	}
}
namespace SciFiArsenal
{
	[Token(Token = "0x20004C9")]
	public class SciFiButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SciFiFireProjectile effectScript;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SciFiProjectileScript projectileScript;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xD45E48", Offset = "0xD45E48", VA = "0xD45E48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xD46014", Offset = "0xD46014", VA = "0xD46014")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xD45F54", Offset = "0xD45F54", VA = "0xD45F54")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xD46018", Offset = "0xD46018", VA = "0xD46018")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xD460FC", Offset = "0xD460FC", VA = "0xD460FC")]
		public SciFiButtonScript()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class SciFiDragMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xD46104", Offset = "0xD46104", VA = "0xD46104")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xD461E8", Offset = "0xD461E8", VA = "0xD461E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD4653C", Offset = "0xD4653C", VA = "0xD4653C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD4656C", Offset = "0xD4656C", VA = "0xD4656C")]
		public SciFiDragMouseOrbit()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class SciFiFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SciFiButtonScript selectedProjectileButton;

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD46588", Offset = "0xD46588", VA = "0xD46588")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD46608", Offset = "0xD46608", VA = "0xD46608")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD46774", Offset = "0xD46774", VA = "0xD46774")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xD467A4", Offset = "0xD467A4", VA = "0xD467A4")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xD467D4", Offset = "0xD467D4", VA = "0xD467D4")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xD467DC", Offset = "0xD467DC", VA = "0xD467DC")]
		public SciFiFireProjectile()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class SciFiLoadSceneOnClick : MonoBehaviour
	{
		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xD46A98", Offset = "0xD46A98", VA = "0xD46A98")]
		public void LoadSceneSciFiProjectiles()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xD46B0C", Offset = "0xD46B0C", VA = "0xD46B0C")]
		public void LoadSceneSciFiBeamup()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xD46B80", Offset = "0xD46B80", VA = "0xD46B80")]
		public void LoadSceneSciFiBuff()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xD46BF4", Offset = "0xD46BF4", VA = "0xD46BF4")]
		public void LoadSceneSciFiFlamethrowers2()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xD46C68", Offset = "0xD46C68", VA = "0xD46C68")]
		public void LoadSceneSciFiQuestZone()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xD46CDC", Offset = "0xD46CDC", VA = "0xD46CDC")]
		public void LoadSceneSciFiLightjump()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xD46D50", Offset = "0xD46D50", VA = "0xD46D50")]
		public void LoadSceneSciFiLoot()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xD46DC4", Offset = "0xD46DC4", VA = "0xD46DC4")]
		public void LoadSceneSciFiBeams()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xD46E38", Offset = "0xD46E38", VA = "0xD46E38")]
		public void LoadSceneSciFiPortals()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xD46EAC", Offset = "0xD46EAC", VA = "0xD46EAC")]
		public void LoadSceneSciFiRegenerate()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD46F20", Offset = "0xD46F20", VA = "0xD46F20")]
		public void LoadSceneSciFiShields()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD46F94", Offset = "0xD46F94", VA = "0xD46F94")]
		public void LoadSceneSciFiSwirlyAura()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD47008", Offset = "0xD47008", VA = "0xD47008")]
		public void LoadSceneSciFiWarpgates()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD4707C", Offset = "0xD4707C", VA = "0xD4707C")]
		public void LoadSceneSciFiJetflame()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD470F0", Offset = "0xD470F0", VA = "0xD470F0")]
		public void LoadSceneSciFiUltimateNova()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD47164", Offset = "0xD47164", VA = "0xD47164")]
		public SciFiLoadSceneOnClick()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class SciFiLoopScript : MonoBehaviour
	{
		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6D71C8", Offset = "0x6D71C8")]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SciFiLoopScript <>4__this;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCA")]
				[Address(RVA = "0x93B990", Offset = "0x93B990", VA = "0x93B990", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCC")]
				[Address(RVA = "0x93B9D8", Offset = "0x93B9D8", VA = "0x93B9D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x93B784", Offset = "0x93B784", VA = "0x93B784")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x93B7B0", Offset = "0x93B7B0", VA = "0x93B7B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x93B7B4", Offset = "0x93B7B4", VA = "0x93B7B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x93B998", Offset = "0x93B998", VA = "0x93B998", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD4716C", Offset = "0xD4716C", VA = "0xD4716C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD47170", Offset = "0xD47170", VA = "0xD47170")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD471C0", Offset = "0xD471C0", VA = "0xD471C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E5300", Offset = "0x6E5300")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xD47238", Offset = "0xD47238", VA = "0xD47238")]
		public SciFiLoopScript()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class SciFiProjectileScript : MonoBehaviour
	{
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject impactParticle;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject projectileParticle;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject muzzleParticle;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] trailParticles;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 impactNormal;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool hasCollided;

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xD47248", Offset = "0xD47248", VA = "0xD47248")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xD4751C", Offset = "0xD4751C", VA = "0xD4751C")]
		private void OnCollisionEnter(Collision hit)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xD47864", Offset = "0xD47864", VA = "0xD47864")]
		public SciFiProjectileScript()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class SciFiLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC614", Offset = "0x6DC614")]
		public float life;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xD467EC", Offset = "0xD467EC", VA = "0xD467EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xD46920", Offset = "0xD46920", VA = "0xD46920")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xD46A7C", Offset = "0xD46A7C", VA = "0xD46A7C")]
		public SciFiLightFade()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class SciFiRotation : MonoBehaviour
	{
		[Token(Token = "0x20004D2")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001D44")]
			Local,
			[Token(Token = "0x4001D45")]
			World
		}

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6DC64C", Offset = "0x6DC64C")]
		public Vector3 rotateVector;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xD4786C", Offset = "0xD4786C", VA = "0xD4786C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xD47870", Offset = "0xD47870", VA = "0xD47870")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xD47948", Offset = "0xD47948", VA = "0xD47948")]
		public SciFiRotation()
		{
		}
	}
}
