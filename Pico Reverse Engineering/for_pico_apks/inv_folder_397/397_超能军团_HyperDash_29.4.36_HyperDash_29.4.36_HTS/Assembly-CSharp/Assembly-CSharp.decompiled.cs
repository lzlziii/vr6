using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using AOT;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using Breachers.Voice;
using Breachers.Voice.Actions;
using CodeStage.AntiCheat.ObscuredTypes;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Dreamteck.Splines;
using FullSerializer;
using FullSerializer.Internal;
using FullSerializer.Internal.DirectConverters;
using HyperDash;
using HyperDash.Audio;
using HyperDash.Backend;
using HyperDash.Backend.JWT;
using HyperDash.Backend.JWT.Algorithms;
using HyperDash.Backend.JWT.Builder;
using HyperDash.Backend.RequestData;
using HyperDash.Backend.Responses;
using HyperDash.Ball;
using HyperDash.CTF;
using HyperDash.ControlPoint;
using HyperDash.Customization;
using HyperDash.Fps;
using HyperDash.GameInput;
using HyperDash.HDBhaptics;
using HyperDash.Hud;
using HyperDash.Loca;
using HyperDash.Networking;
using HyperDash.Player;
using HyperDash.RecyclingListView;
using HyperDash.Shop;
using HyperDash.Spectator;
using HyperDash.Store;
using HyperDash.Store.IAPs;
using HyperDash.UI;
using HyperDash.UI.ArmDisplay;
using HyperDash.UI.Elements;
using HyperDash.UI.MainMenu;
using HyperDash.UI.MainMenu.Statistics;
using HyperDash.UI.OLD;
using HyperDash.UI.Spectator;
using HyperDash.UI.ViewAnimations;
using HyperDash.VRUI;
using HyperDash.Voice;
using HyperDash.Weapon;
using Il2CppDummyDll;
using JoshH.UI;
using Newtonsoft.Json;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Bolt;
using Photon.Bolt.LagCompensation;
using Pico.Platform;
using Pico.Platform.Models;
using RootMotion.FinalIK;
using TMPro;
using TriangleFactory;
using UdpKit;
using UdpKit.Platform.Photon;
using Unity.Profiling;
using Unity.Services.Core;
using Unity.Services.Vivox;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Management;
using VivoxUnity;
using anzu;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class InteractWhenClicked : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	private enum ClickState
	{
		[Token(Token = "0x4000009")]
		CS__IDLE,
		[Token(Token = "0x400000A")]
		CS__WAIT_RELEASE
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float clickDuration;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject clickSpinner;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool spinnerWaitForButtonUp;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ClickState clickState;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image fillObjectImage;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fillStartTime;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimatedTexture animatedTexture;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xF2A08C", Offset = "0xF2A08C", VA = "0xF2A08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xF2A16C", Offset = "0xF2A16C", VA = "0xF2A16C")]
	private void DoInteract()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF2A1F0", Offset = "0xF2A1F0", VA = "0xF2A1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF2A56C", Offset = "0xF2A56C", VA = "0xF2A56C")]
	public InteractWhenClicked()
	{
	}
}
[Token(Token = "0x2000004")]
public class RecommendedAspectRatios : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimatedTexture placement;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button leftButton;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button rightButton;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text hintText;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text aspectRatioText;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int selectedRatioIndex;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Dictionary<float, string> aspectRatios;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF2A574", Offset = "0xF2A574", VA = "0xF2A574")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF2A828", Offset = "0xF2A828", VA = "0xF2A828")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF2A918", Offset = "0xF2A918", VA = "0xF2A918")]
	private void LeftButton()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF2A980", Offset = "0xF2A980", VA = "0xF2A980")]
	private void RightButton()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF2A66C", Offset = "0xF2A66C", VA = "0xF2A66C")]
	private void SetNewAspectRatio()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF2A9FC", Offset = "0xF2A9FC", VA = "0xF2A9FC")]
	public RecommendedAspectRatios()
	{
	}
}
[Token(Token = "0x2000005")]
public class BhapticsAlertManager : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject alertGameObject;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BhapticsAlertManager Instance;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF2AB9C", Offset = "0xF2AB9C", VA = "0xF2AB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF2AD94", Offset = "0xF2AD94", VA = "0xF2AD94")]
	public void OpenLink()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF2ADD8", Offset = "0xF2ADD8", VA = "0xF2ADD8")]
	public void OnConfirmClick()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF2ADDC", Offset = "0xF2ADDC", VA = "0xF2ADDC")]
	public void ShowAlert()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF2AC70", Offset = "0xF2AC70", VA = "0xF2AC70")]
	private void HideAlert()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF2AFD8", Offset = "0xF2AFD8", VA = "0xF2AFD8")]
	public BhapticsAlertManager()
	{
	}
}
[Token(Token = "0x2000006")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF2AFE0", Offset = "0xF2AFE0", VA = "0xF2AFE0")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x2000007")]
public class BhapticsLogger
{
	[Token(Token = "0x2000008")]
	public enum LogLevel
	{
		[Token(Token = "0x4000019")]
		Debug,
		[Token(Token = "0x400001A")]
		Info,
		[Token(Token = "0x400001B")]
		Error
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF2AFF0", Offset = "0xF2AFF0", VA = "0xF2AFF0")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF2AEFC", Offset = "0xF2AEFC", VA = "0xF2AEFC")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF2B0C8", Offset = "0xF2B0C8", VA = "0xF2B0C8")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF2B15C", Offset = "0xF2B15C", VA = "0xF2B15C")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsManager
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF2B1B0", Offset = "0xF2B1B0", VA = "0xF2B1B0")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF2B45C", Offset = "0xF2B45C", VA = "0xF2B45C")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF2B460", Offset = "0xF2B460", VA = "0xF2B460")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF2B65C", Offset = "0xF2B65C", VA = "0xF2B65C")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF2B664", Offset = "0xF2B664", VA = "0xF2B664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF2B6BC", Offset = "0xF2B6BC", VA = "0xF2B6BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF2B7DC", Offset = "0xF2B7DC", VA = "0xF2B7DC")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x200000B")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF2B7E4", Offset = "0xF2B7E4", VA = "0xF2B7E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF2BBB0", Offset = "0xF2BBB0", VA = "0xF2BBB0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF2B8E8", Offset = "0xF2B8E8", VA = "0xF2B8E8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF2BBB4", Offset = "0xF2BBB4", VA = "0xF2BBB4")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x200000C")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000027")]
			[Address(RVA = "0xF2BD64", Offset = "0xF2BD64", VA = "0xF2BD64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000029")]
			[Address(RVA = "0xF2BDAC", Offset = "0xF2BDAC", VA = "0xF2BDAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0xF2BC30", Offset = "0xF2BC30", VA = "0xF2BC30")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0xF2BC68", Offset = "0xF2BC68", VA = "0xF2BC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0xF2BC6C", Offset = "0xF2BC6C", VA = "0xF2BC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xF2BD6C", Offset = "0xF2BD6C", VA = "0xF2BD6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF2BBBC", Offset = "0xF2BBBC", VA = "0xF2BBBC")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF2BC58", Offset = "0xF2BC58", VA = "0xF2BC58")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x200000E")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000032")]
			[Address(RVA = "0xF2C220", Offset = "0xF2C220", VA = "0xF2C220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000034")]
			[Address(RVA = "0xF2C268", Offset = "0xF2C268", VA = "0xF2C268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0xF2BF24", Offset = "0xF2BF24", VA = "0xF2BF24")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0xF2BF7C", Offset = "0xF2BF7C", VA = "0xF2BF7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xF2BF80", Offset = "0xF2BF80", VA = "0xF2BF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xF2C228", Offset = "0xF2C228", VA = "0xF2C228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000010")]
	[CompilerGenerated]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000038")]
			[Address(RVA = "0xF2C428", Offset = "0xF2C428", VA = "0xF2C428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003A")]
			[Address(RVA = "0xF2C470", Offset = "0xF2C470", VA = "0xF2C470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0xF2BF4C", Offset = "0xF2BF4C", VA = "0xF2BF4C")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0xF2C270", Offset = "0xF2C270", VA = "0xF2C270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0xF2C274", Offset = "0xF2C274", VA = "0xF2C274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0xF2C430", Offset = "0xF2C430", VA = "0xF2C430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_isExtinguished;

	[Token(Token = "0x4000028")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF2BDB4", Offset = "0xF2BDB4", VA = "0xF2BDB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF2BE78", Offset = "0xF2BE78", VA = "0xF2BE78")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF2BEB0", Offset = "0xF2BEB0", VA = "0xF2BEB0")]
	[IteratorStateMachine(typeof(<Extinguishing>d__6))]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xF2BE04", Offset = "0xF2BE04", VA = "0xF2BE04")]
	[IteratorStateMachine(typeof(<StartingFire>d__7))]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xF2BF74", Offset = "0xF2BF74", VA = "0xF2BF74")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x2000011")]
public class GunAim : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int borderLeft;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int borderRight;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int borderTop;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int borderBottom;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera parentCamera;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isOutOfBounds;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xF2C478", Offset = "0xF2C478", VA = "0xF2C478")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xF2C4D0", Offset = "0xF2C4D0", VA = "0xF2C4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xF2C5B0", Offset = "0xF2C5B0", VA = "0xF2C5B0")]
	public bool GetIsOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xF2C5B8", Offset = "0xF2C5B8", VA = "0xF2C5B8")]
	public GunAim()
	{
	}
}
[Token(Token = "0x2000012")]
public class GunShoot : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fireRate;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float weaponRange;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gunEnd;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem cartridgeEjection;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject metalHitEffect;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sandHitEffect;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stoneHitEffect;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waterLeakEffect;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject waterLeakExtinguishEffect;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] fleshHitEffects;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject woodHitEffect;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float nextFire;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunAim gunAim;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xF2C5C0", Offset = "0xF2C5C0", VA = "0xF2C5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xF2C650", Offset = "0xF2C650", VA = "0xF2C650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xF2C7BC", Offset = "0xF2C7BC", VA = "0xF2C7BC")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xF2CC00", Offset = "0xF2CC00", VA = "0xF2CC00")]
	private void SpawnDecal(RaycastHit hit, GameObject prefab)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF2CD30", Offset = "0xF2CD30", VA = "0xF2CD30")]
	public GunShoot()
	{
	}
}
[Token(Token = "0x2000013")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF2CD44", Offset = "0xF2CD44", VA = "0xF2CD44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF2CD9C", Offset = "0xF2CD9C", VA = "0xF2CD9C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF2CED8", Offset = "0xF2CED8", VA = "0xF2CED8")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class ParticleExamples
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string description;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeaponEffect;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleSystemGO;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 particlePosition;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 particleRotation;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF2CF60", Offset = "0xF2CF60", VA = "0xF2CF60")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x2000015")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gunGameObject;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGO;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnLocation;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text description;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text navigationDetails;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF2CF68", Offset = "0xF2CF68", VA = "0xF2CF68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xF2CF84", Offset = "0xF2CF84", VA = "0xF2CF84")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xF2D2A0", Offset = "0xF2D2A0", VA = "0xF2D2A0")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x2000016")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF2D2A8", Offset = "0xF2D2A8", VA = "0xF2D2A8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF2D3E8", Offset = "0xF2D3E8", VA = "0xF2D3E8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF2D718", Offset = "0xF2D718", VA = "0xF2D718")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF2D8B0", Offset = "0xF2D8B0", VA = "0xF2D8B0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF2DB24", Offset = "0xF2DB24", VA = "0xF2DB24")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000017")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xF2DBA4", Offset = "0xF2DBA4", VA = "0xF2DBA4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xF2DC20", Offset = "0xF2DC20", VA = "0xF2DC20")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xF2DD90", Offset = "0xF2DD90", VA = "0xF2DD90")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000018")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000007")]
	public bool IsVisible
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xF2DD98", Offset = "0xF2DD98", VA = "0xF2DD98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0xF2DDA0", Offset = "0xF2DDA0", VA = "0xF2DDA0")]
		set
		{
		}
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xF2DEC4", Offset = "0xF2DEC4", VA = "0xF2DEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xF2E0B4", Offset = "0xF2E0B4", VA = "0xF2E0B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xF2E0BC", Offset = "0xF2E0BC", VA = "0xF2E0BC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000019")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200001A")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xF2ECD4", Offset = "0xF2ECD4", VA = "0xF2ECD4")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001B")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xF2ECDC", Offset = "0xF2ECDC", VA = "0xF2ECDC")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0xF2EED0", Offset = "0xF2EED0", VA = "0xF2EED0")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF2E0D0", Offset = "0xF2E0D0", VA = "0xF2E0D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF2E228", Offset = "0xF2E228", VA = "0xF2E228")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF2E624", Offset = "0xF2E624", VA = "0xF2E624")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF2E578", Offset = "0xF2E578", VA = "0xF2E578")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF2E9B8", Offset = "0xF2E9B8", VA = "0xF2E9B8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xF2EE10", Offset = "0xF2EE10", VA = "0xF2EE10")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001C")]
public class P2PManager
{
	[Token(Token = "0x200001D")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400006D")]
		Update = 1
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xF2EF70", Offset = "0xF2EF70", VA = "0xF2EF70")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xF2F03C", Offset = "0xF2F03C", VA = "0xF2F03C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xF2F27C", Offset = "0xF2F27C", VA = "0xF2F27C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xF2F3C4", Offset = "0xF2F3C4", VA = "0xF2F3C4")]
	private void PeerConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xF2F514", Offset = "0xF2F514", VA = "0xF2F514")]
	private void ConnectionStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xF2F700", Offset = "0xF2F700", VA = "0xF2F700")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xF2FAB8", Offset = "0xF2FAB8", VA = "0xF2FAB8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xF2FD40", Offset = "0xF2FD40", VA = "0xF2FD40")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xF2F8C4", Offset = "0xF2F8C4", VA = "0xF2F8C4")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xF2FC8C", Offset = "0xF2FC8C", VA = "0xF2FC8C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF2F990", Offset = "0xF2F990", VA = "0xF2F990")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xF2FF68", Offset = "0xF2FF68", VA = "0xF2FF68")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xF2F900", Offset = "0xF2F900", VA = "0xF2F900")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xF2FCC4", Offset = "0xF2FCC4", VA = "0xF2FCC4")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xF2FA28", Offset = "0xF2FA28", VA = "0xF2FA28")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xF2FFE4", Offset = "0xF2FFE4", VA = "0xF2FFE4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200001E")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xF30060", Offset = "0xF30060", VA = "0xF30060", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xF3044C", Offset = "0xF3044C", VA = "0xF3044C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xF30470", Offset = "0xF30470", VA = "0xF30470", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xF30820", Offset = "0xF30820", VA = "0xF30820")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xF30980", Offset = "0xF30980", VA = "0xF30980")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF309FC", Offset = "0xF309FC", VA = "0xF309FC")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF30AE8", Offset = "0xF30AE8", VA = "0xF30AE8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200001F")]
public class RemotePlayer
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xF30BCC", Offset = "0xF30BCC", VA = "0xF30BCC")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000020")]
public class RoomManager
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xF30BD4", Offset = "0xF30BD4", VA = "0xF30BD4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xF30CB8", Offset = "0xF30CB8", VA = "0xF30CB8")]
	private void AcceptingInviteCallback(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xF30EB8", Offset = "0xF30EB8", VA = "0xF30EB8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xF30FD0", Offset = "0xF30FD0", VA = "0xF30FD0")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xF31088", Offset = "0xF31088", VA = "0xF31088")]
	private void CreateAndJoinPrivateRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xF31474", Offset = "0xF31474", VA = "0xF31474")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xF30EE4", Offset = "0xF30EE4", VA = "0xF30EE4")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xF314EC", Offset = "0xF314EC", VA = "0xF314EC")]
	private void JoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xF31C68", Offset = "0xF31C68", VA = "0xF31C68")]
	private void RoomUpdateCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xF31FA8", Offset = "0xF31FA8", VA = "0xF31FA8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xF31818", Offset = "0xF31818", VA = "0xF31818")]
	private void ProcessRoomData(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000021")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public enum State
	{
		[Token(Token = "0x40000A5")]
		INITIALIZING,
		[Token(Token = "0x40000A6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40000A7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40000A8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40000A9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40000AA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40000AB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40000AC")]
		SHUTDOWN
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000008")]
	public static State CurrentState
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xF33D68", Offset = "0xF33D68", VA = "0xF33D68")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000009")]
	public static ulong MyID
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0xF2F104", Offset = "0xF2F104", VA = "0xF2F104")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000A")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0xF33DCC", Offset = "0xF33DCC", VA = "0xF33DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xF30488", Offset = "0xF30488", VA = "0xF30488", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xF30094", Offset = "0xF30094", VA = "0xF30094", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xF32A50", Offset = "0xF32A50", VA = "0xF32A50")]
	private void InitCallback(Oculus.Platform.Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xF3046C", Offset = "0xF3046C", VA = "0xF3046C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xF32BD8", Offset = "0xF32BD8", VA = "0xF32BD8")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF32CD0", Offset = "0xF32CD0", VA = "0xF32CD0")]
	private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xF334B8", Offset = "0xF334B8", VA = "0xF334B8")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Oculus.Platform.Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xF338D0", Offset = "0xF338D0", VA = "0xF338D0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xF33AF4", Offset = "0xF33AF4", VA = "0xF33AF4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xF33D00", Offset = "0xF33D00", VA = "0xF33D00")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xF328DC", Offset = "0xF328DC", VA = "0xF328DC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xF30E0C", Offset = "0xF30E0C", VA = "0xF30E0C")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF31174", Offset = "0xF31174", VA = "0xF31174")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF33ED0", Offset = "0xF33ED0", VA = "0xF33ED0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF313B4", Offset = "0xF313B4", VA = "0xF313B4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF32010", Offset = "0xF32010", VA = "0xF32010")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF32408", Offset = "0xF32408", VA = "0xF32408")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF324E8", Offset = "0xF324E8", VA = "0xF324E8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF2F1C8", Offset = "0xF2F1C8", VA = "0xF2F1C8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF32194", Offset = "0xF32194", VA = "0xF32194")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF3221C", Offset = "0xF3221C", VA = "0xF3221C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xF34054", Offset = "0xF34054", VA = "0xF34054")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xF34318", Offset = "0xF34318", VA = "0xF34318")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xF32864", Offset = "0xF32864", VA = "0xF32864")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xF2F2EC", Offset = "0xF2F2EC", VA = "0xF2F2EC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xF30B44", Offset = "0xF30B44", VA = "0xF30B44")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000023")]
public class VoipManager
{
	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xF32984", Offset = "0xF32984", VA = "0xF32984")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xF34250", Offset = "0xF34250", VA = "0xF34250")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xF33C90", Offset = "0xF33C90", VA = "0xF33C90")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xF34654", Offset = "0xF34654", VA = "0xF34654")]
	private void VoipConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xF347A4", Offset = "0xF347A4", VA = "0xF347A4")]
	private void VoipStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000024")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF34990", Offset = "0xF34990", VA = "0xF34990")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xF34A14", Offset = "0xF34A14", VA = "0xF34A14")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xF34B58", Offset = "0xF34B58", VA = "0xF34B58")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xF34BAC", Offset = "0xF34BAC", VA = "0xF34BAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xF34A44", Offset = "0xF34A44", VA = "0xF34A44")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xF34C5C", Offset = "0xF34C5C", VA = "0xF34C5C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF34C74", Offset = "0xF34C74", VA = "0xF34C74")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class AvatarLayer
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xF34C7C", Offset = "0xF34C7C", VA = "0xF34C7C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xF34C84", Offset = "0xF34C84", VA = "0xF34C84")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xF3805C", Offset = "0xF3805C", VA = "0xF3805C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000029")]
	public enum HandType
	{
		[Token(Token = "0x400010E")]
		Right,
		[Token(Token = "0x400010F")]
		Left,
		[Token(Token = "0x4000110")]
		Max
	}

	[Token(Token = "0x200002A")]
	public enum HandJoint
	{
		[Token(Token = "0x4000112")]
		HandBase,
		[Token(Token = "0x4000113")]
		IndexBase,
		[Token(Token = "0x4000114")]
		IndexTip,
		[Token(Token = "0x4000115")]
		ThumbBase,
		[Token(Token = "0x4000116")]
		ThumbTip,
		[Token(Token = "0x4000117")]
		Max
	}

	[Token(Token = "0x200002B")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0xF3A2EC", Offset = "0xF3A2EC", VA = "0xF3A2EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EA")]
			[Address(RVA = "0xF3A334", Offset = "0xF3A334", VA = "0xF3A334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xF39DA8", Offset = "0xF39DA8", VA = "0xF39DA8")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xF3A144", Offset = "0xF3A144", VA = "0xF3A144", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xF3A148", Offset = "0xF3A148", VA = "0xF3A148", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xF3A2F4", Offset = "0xF3A2F4", VA = "0xF3A2F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Performance")]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000EE")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000F0")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000F1")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000F2")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000F3")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000F4")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xF34C98", Offset = "0xF34C98", VA = "0xF34C98")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF3512C", Offset = "0xF3512C", VA = "0xF3512C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF351C4", Offset = "0xF351C4", VA = "0xF351C4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF35220", Offset = "0xF35220", VA = "0xF35220")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xF35334", Offset = "0xF35334", VA = "0xF35334")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF35410", Offset = "0xF35410", VA = "0xF35410")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF354E0", Offset = "0xF354E0", VA = "0xF354E0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF356B0", Offset = "0xF356B0", VA = "0xF356B0")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF35778", Offset = "0xF35778", VA = "0xF35778")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF357EC", Offset = "0xF357EC", VA = "0xF357EC")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF358A4", Offset = "0xF358A4", VA = "0xF358A4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF3592C", Offset = "0xF3592C", VA = "0xF3592C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF359D0", Offset = "0xF359D0", VA = "0xF359D0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xF359E8", Offset = "0xF359E8", VA = "0xF359E8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000BE")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF35DF4", Offset = "0xF35DF4", VA = "0xF35DF4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF36120", Offset = "0xF36120", VA = "0xF36120")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF362F8", Offset = "0xF362F8", VA = "0xF362F8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xF36534", Offset = "0xF36534", VA = "0xF36534")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xF36668", Offset = "0xF36668", VA = "0xF36668")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xF369B0", Offset = "0xF369B0", VA = "0xF369B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF36CD0", Offset = "0xF36CD0", VA = "0xF36CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF377A0", Offset = "0xF377A0", VA = "0xF377A0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF377E4", Offset = "0xF377E4", VA = "0xF377E4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF30A40", Offset = "0xF30A40", VA = "0xF30A40")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF36908", Offset = "0xF36908", VA = "0xF36908")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xF37810", Offset = "0xF37810", VA = "0xF37810")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xF370BC", Offset = "0xF370BC", VA = "0xF370BC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xF37A9C", Offset = "0xF37A9C", VA = "0xF37A9C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xF378C0", Offset = "0xF378C0", VA = "0xF378C0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xF380D0", Offset = "0xF380D0", VA = "0xF380D0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xF38554", Offset = "0xF38554", VA = "0xF38554")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xF3896C", Offset = "0xF3896C", VA = "0xF3896C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xF38AA4", Offset = "0xF38AA4", VA = "0xF38AA4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xF38C70", Offset = "0xF38C70", VA = "0xF38C70")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xF37278", Offset = "0xF37278", VA = "0xF37278")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xF38D38", Offset = "0xF38D38", VA = "0xF38D38")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xF370CC", Offset = "0xF370CC", VA = "0xF370CC")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xF38E14", Offset = "0xF38E14", VA = "0xF38E14")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xF39444", Offset = "0xF39444", VA = "0xF39444")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xF398CC", Offset = "0xF398CC", VA = "0xF398CC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xF398F4", Offset = "0xF398F4", VA = "0xF398F4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xF3991C", Offset = "0xF3991C", VA = "0xF3991C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xF37648", Offset = "0xF37648", VA = "0xF37648")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xF38ED0", Offset = "0xF38ED0", VA = "0xF38ED0")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xF39D34", Offset = "0xF39D34", VA = "0xF39D34")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__137))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xF39DD0", Offset = "0xF39DD0", VA = "0xF39DD0")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xF39BC8", Offset = "0xF39BC8", VA = "0xF39BC8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xF34444", Offset = "0xF34444", VA = "0xF34444")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xF39E74", Offset = "0xF39E74", VA = "0xF39E74")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xF39958", Offset = "0xF39958", VA = "0xF39958")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xF39F3C", Offset = "0xF39F3C", VA = "0xF39F3C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF3A33C", Offset = "0xF3A33C", VA = "0xF3A33C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xF3A344", Offset = "0xF3A344", VA = "0xF3A344")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xF3B4D8", Offset = "0xF3B4D8", VA = "0xF3B4D8")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xF3B124", Offset = "0xF3B124", VA = "0xF3B124")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xF3AEA8", Offset = "0xF3AEA8", VA = "0xF3AEA8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xF3AF88", Offset = "0xF3AF88", VA = "0xF3AF88")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xF3B724", Offset = "0xF3B724", VA = "0xF3B724")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000120")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xF3BCB4", Offset = "0xF3BCB4", VA = "0xF3BCB4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xF3BEFC", Offset = "0xF3BEFC", VA = "0xF3BEFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xF3C324", Offset = "0xF3C324", VA = "0xF3C324")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xF38820", Offset = "0xF38820", VA = "0xF38820")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xF3C450", Offset = "0xF3C450", VA = "0xF3C450")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xF3C564", Offset = "0xF3C564", VA = "0xF3C564")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xF3C5B8", Offset = "0xF3C5B8", VA = "0xF3C5B8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xF3C010", Offset = "0xF3C010", VA = "0xF3C010")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xF3C5C0", Offset = "0xF3C5C0", VA = "0xF3C5C0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xF3C614", Offset = "0xF3C614", VA = "0xF3C614")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xF3CD1C", Offset = "0xF3CD1C", VA = "0xF3CD1C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xF3C378", Offset = "0xF3C378", VA = "0xF3C378")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000033")]
	public enum PacketMode
	{
		[Token(Token = "0x4000134")]
		SDK,
		[Token(Token = "0x4000135")]
		Unity
	}

	[Token(Token = "0x2000034")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000105")]
		[Address(RVA = "0xF3EA3C", Offset = "0xF3EA3C", VA = "0xF3EA3C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000035")]
	public struct PoseFrame
	{
		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xF37D64", Offset = "0xF37D64", VA = "0xF37D64")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xF3E9A0", Offset = "0xF3E9A0", VA = "0xF3E9A0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000100")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xF3E9B0", Offset = "0xF3E9B0", VA = "0xF3E9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xF2D8D8", Offset = "0xF2D8D8", VA = "0xF2D8D8")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xF3EA34", Offset = "0xF3EA34", VA = "0xF3EA34")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xF2DB94", Offset = "0xF2DB94", VA = "0xF2DB94")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xF3EAAC", Offset = "0xF3EAAC", VA = "0xF3EAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xF3EBEC", Offset = "0xF3EBEC", VA = "0xF3EBEC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xF3EC48", Offset = "0xF3EC48", VA = "0xF3EC48")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xF3ED88", Offset = "0xF3ED88", VA = "0xF3ED88")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xF3F0B8", Offset = "0xF3F0B8", VA = "0xF3F0B8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xF3F2D4", Offset = "0xF3F2D4", VA = "0xF3F2D4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xF3F2FC", Offset = "0xF3F2FC", VA = "0xF3F2FC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	public enum TextureType
	{
		[Token(Token = "0x400016B")]
		DiffuseTextures,
		[Token(Token = "0x400016C")]
		NormalMaps,
		[Token(Token = "0x400016D")]
		RoughnessMaps,
		[Token(Token = "0x400016E")]
		Count
	}

	[Token(Token = "0x200003A")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200003B")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200003C")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200003D")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xF426EC", Offset = "0xF426EC", VA = "0xF426EC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200003E")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0xF43024", Offset = "0xF43024", VA = "0xF43024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0xF4306C", Offset = "0xF4306C", VA = "0xF4306C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xF426F4", Offset = "0xF426F4", VA = "0xF426F4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xF4271C", Offset = "0xF4271C", VA = "0xF4271C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xF42720", Offset = "0xF42720", VA = "0xF42720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0xF4302C", Offset = "0xF4302C", VA = "0xF4302C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000166")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000167")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000168")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000169")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xF3F39C", Offset = "0xF3F39C", VA = "0xF3F39C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xF3F570", Offset = "0xF3F570", VA = "0xF3F570")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xF3F5AC", Offset = "0xF3F5AC", VA = "0xF3F5AC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF3FCE0", Offset = "0xF3FCE0", VA = "0xF3FCE0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF3FD48", Offset = "0xF3FD48", VA = "0xF3FD48")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xF3F64C", Offset = "0xF3F64C", VA = "0xF3F64C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xF3FD98", Offset = "0xF3FD98", VA = "0xF3FD98")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xF3FA98", Offset = "0xF3FA98", VA = "0xF3FA98")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xF3FE74", Offset = "0xF3FE74", VA = "0xF3FE74")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xF400F8", Offset = "0xF400F8", VA = "0xF400F8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xF4021C", Offset = "0xF4021C", VA = "0xF4021C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xF40254", Offset = "0xF40254", VA = "0xF40254")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xF3FC50", Offset = "0xF3FC50", VA = "0xF3FC50")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xF41080", Offset = "0xF41080", VA = "0xF41080")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000F")]
	public float Duration
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xF43074", Offset = "0xF43074", VA = "0xF43074")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000010")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xF430D8", Offset = "0xF430D8", VA = "0xF430D8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xF43160", Offset = "0xF43160", VA = "0xF43160")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xF432B4", Offset = "0xF432B4", VA = "0xF432B4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xF4354C", Offset = "0xF4354C", VA = "0xF4354C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xF436D8", Offset = "0xF436D8", VA = "0xF436D8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xF4385C", Offset = "0xF4385C", VA = "0xF4385C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xF43A3C", Offset = "0xF43A3C", VA = "0xF43A3C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xF43F88", Offset = "0xF43F88", VA = "0xF43F88")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000040")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600012D")]
	[Address(RVA = "0xF441AC", Offset = "0xF441AC", VA = "0xF441AC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xF442B4", Offset = "0xF442B4", VA = "0xF442B4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xF44440", Offset = "0xF44440", VA = "0xF44440")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xF44318", Offset = "0xF44318", VA = "0xF44318")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xF443A0", Offset = "0xF443A0", VA = "0xF443A0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000041")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000132")]
	[Address(RVA = "0xF43DEC", Offset = "0xF43DEC", VA = "0xF43DEC")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xF44668", Offset = "0xF44668", VA = "0xF44668")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xF44488", Offset = "0xF44488", VA = "0xF44488")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xF444F4", Offset = "0xF444F4", VA = "0xF444F4")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xF44584", Offset = "0xF44584", VA = "0xF44584")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000190")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000191")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xF446B8", Offset = "0xF446B8", VA = "0xF446B8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xF4473C", Offset = "0xF4473C", VA = "0xF4473C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xF44758", Offset = "0xF44758", VA = "0xF44758")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xF44908", Offset = "0xF44908", VA = "0xF44908")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xF44AC8", Offset = "0xF44AC8", VA = "0xF44AC8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000043")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xF44B7C", Offset = "0xF44B7C", VA = "0xF44B7C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xF44C58", Offset = "0xF44C58", VA = "0xF44C58")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xF44EBC", Offset = "0xF44EBC", VA = "0xF44EBC")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xF45204", Offset = "0xF45204", VA = "0xF45204")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xF45308", Offset = "0xF45308", VA = "0xF45308")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400019A")]
	Body = 1,
	[Token(Token = "0x400019B")]
	Hands = 2,
	[Token(Token = "0x400019C")]
	Base = 4,
	[Token(Token = "0x400019D")]
	BodyTilt = 0x10,
	[Token(Token = "0x400019E")]
	Expressive = 0x20,
	[Token(Token = "0x400019F")]
	All = -1
}
[Token(Token = "0x2000045")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001A1")]
	AvatarSpecification,
	[Token(Token = "0x40001A2")]
	AssetLoaded,
	[Token(Token = "0x40001A3")]
	Count
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000048")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001A9")]
	Mesh,
	[Token(Token = "0x40001AA")]
	Texture,
	[Token(Token = "0x40001AB")]
	Pose,
	[Token(Token = "0x40001AC")]
	Material,
	[Token(Token = "0x40001AD")]
	CombinedMesh,
	[Token(Token = "0x40001AE")]
	PBSMaterial,
	[Token(Token = "0x40001AF")]
	FailedLoad,
	[Token(Token = "0x40001B0")]
	Count
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004E")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001E5")]
	RGB24,
	[Token(Token = "0x40001E6")]
	DXT1,
	[Token(Token = "0x40001E7")]
	DXT5,
	[Token(Token = "0x40001E8")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001E9")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001EA")]
	Count
}
[Token(Token = "0x200004F")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001F2")]
	SkinnedMeshRender,
	[Token(Token = "0x40001F3")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001F4")]
	ProjectorRender,
	[Token(Token = "0x40001F5")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001F6")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001F8")]
	Unknown,
	[Token(Token = "0x40001F9")]
	Default,
	[Token(Token = "0x40001FA")]
	Verbose,
	[Token(Token = "0x40001FB")]
	Debug,
	[Token(Token = "0x40001FC")]
	Info,
	[Token(Token = "0x40001FD")]
	Warn,
	[Token(Token = "0x40001FE")]
	Error,
	[Token(Token = "0x40001FF")]
	Fatal,
	[Token(Token = "0x4000200")]
	Silent
}
[Token(Token = "0x2000052")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000053")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000205")]
	One = 1,
	[Token(Token = "0x4000206")]
	Two = 2,
	[Token(Token = "0x4000207")]
	Three = 4,
	[Token(Token = "0x4000208")]
	Joystick = 8
}
[Token(Token = "0x2000054")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400020A")]
	One = 1,
	[Token(Token = "0x400020B")]
	Two = 2,
	[Token(Token = "0x400020C")]
	Joystick = 4,
	[Token(Token = "0x400020D")]
	ThumbRest = 8,
	[Token(Token = "0x400020E")]
	Index = 0x10,
	[Token(Token = "0x400020F")]
	Pointing = 0x40,
	[Token(Token = "0x4000210")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000055")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000057")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005D")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000230")]
	Add,
	[Token(Token = "0x4000231")]
	Multiply,
	[Token(Token = "0x4000232")]
	Count
}
[Token(Token = "0x200005E")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000234")]
	Color,
	[Token(Token = "0x4000235")]
	Texture,
	[Token(Token = "0x4000236")]
	TextureSingleChannel,
	[Token(Token = "0x4000237")]
	Parallax,
	[Token(Token = "0x4000238")]
	Count
}
[Token(Token = "0x200005F")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400023A")]
	None,
	[Token(Token = "0x400023B")]
	Positional,
	[Token(Token = "0x400023C")]
	ViewReflection,
	[Token(Token = "0x400023D")]
	Fresnel,
	[Token(Token = "0x400023E")]
	Pulse,
	[Token(Token = "0x400023F")]
	Count
}
[Token(Token = "0x2000060")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000241")]
	Touch,
	[Token(Token = "0x4000242")]
	Malibu,
	[Token(Token = "0x4000243")]
	Go,
	[Token(Token = "0x4000244")]
	Quest,
	[Token(Token = "0x4000245")]
	Count
}
[Token(Token = "0x2000061")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000247")]
	Lowest = 1,
	[Token(Token = "0x4000248")]
	Medium = 3,
	[Token(Token = "0x4000249")]
	Highest = 5
}
[Token(Token = "0x2000062")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400024B")]
	Unknown = -1,
	[Token(Token = "0x400024C")]
	One,
	[Token(Token = "0x400024D")]
	Two
}
[Token(Token = "0x2000063")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xF456E0", Offset = "0xF456E0", VA = "0xF456E0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xF45710", Offset = "0xF45710", VA = "0xF45710", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xF45920", Offset = "0xF45920", VA = "0xF45920", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000064")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xF45B64", Offset = "0xF45B64", VA = "0xF45B64")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xF45B94", Offset = "0xF45B94", VA = "0xF45B94", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xF45F24", Offset = "0xF45F24", VA = "0xF45F24", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000065")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xF462CC", Offset = "0xF462CC", VA = "0xF462CC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xF462FC", Offset = "0xF462FC", VA = "0xF462FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xF46544", Offset = "0xF46544", VA = "0xF46544", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000066")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xF46818", Offset = "0xF46818", VA = "0xF46818")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xF46848", Offset = "0xF46848", VA = "0xF46848", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xF46A10", Offset = "0xF46A10", VA = "0xF46A10", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000067")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xF46C24", Offset = "0xF46C24", VA = "0xF46C24")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000068")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000069")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000282")]
	FirstPerson = 1,
	[Token(Token = "0x4000283")]
	ThirdPerson = 2,
	[Token(Token = "0x4000284")]
	SelfOccluding = 4
}
[Token(Token = "0x200006A")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006E")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400029A")]
	Default,
	[Token(Token = "0x400029B")]
	GripSphere,
	[Token(Token = "0x400029C")]
	GripCube,
	[Token(Token = "0x400029D")]
	Count
}
[Token(Token = "0x200006F")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400029F")]
	Body,
	[Token(Token = "0x40002A0")]
	Clothing,
	[Token(Token = "0x40002A1")]
	Eyewear,
	[Token(Token = "0x40002A2")]
	Hair,
	[Token(Token = "0x40002A3")]
	Beard,
	[Token(Token = "0x40002A4")]
	Count
}
[Token(Token = "0x2000070")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000071")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000072")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000073")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000074")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002AE")]
	AvatarHead,
	[Token(Token = "0x40002AF")]
	AvatarHand,
	[Token(Token = "0x40002B0")]
	Object,
	[Token(Token = "0x40002B1")]
	ObjectStatic,
	[Token(Token = "0x40002B2")]
	Count
}
[Token(Token = "0x2000075")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000076")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000077")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000078")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000079")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002BE")]
	Point,
	[Token(Token = "0x40002BF")]
	Direction,
	[Token(Token = "0x40002C0")]
	Spot,
	[Token(Token = "0x40002C1")]
	Count
}
[Token(Token = "0x200007A")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200007B")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200007C")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200007D")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200007E")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002D7")]
	None = 0u,
	[Token(Token = "0x40002D8")]
	GazeTarget = 1u,
	[Token(Token = "0x40002D9")]
	Any = uint.MaxValue
}
[Token(Token = "0x200007F")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000080")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000081")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000082")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000083")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000084")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xF48D50", Offset = "0xF48D50", VA = "0xF48D50")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002EE")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000011")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xF42D7C", Offset = "0xF42D7C", VA = "0xF42D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xF47A80", Offset = "0xF47A80", VA = "0xF47A80")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xF47DD0", Offset = "0xF47DD0", VA = "0xF47DD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xF47E34", Offset = "0xF47E34", VA = "0xF47E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xF487D4", Offset = "0xF487D4", VA = "0xF487D4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xF48824", Offset = "0xF48824", VA = "0xF48824")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xF48874", Offset = "0xF48874", VA = "0xF48874")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xF4891C", Offset = "0xF4891C", VA = "0xF4891C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xF48974", Offset = "0xF48974", VA = "0xF48974")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xF485F8", Offset = "0xF485F8", VA = "0xF485F8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xF48A38", Offset = "0xF48A38", VA = "0xF48A38")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xF48B84", Offset = "0xF48B84", VA = "0xF48B84")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xF44E44", Offset = "0xF44E44", VA = "0xF44E44")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xF48C70", Offset = "0xF48C70", VA = "0xF48C70")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xF47D90", Offset = "0xF47D90", VA = "0xF47D90")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xF42F68", Offset = "0xF42F68", VA = "0xF42F68")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xF48D38", Offset = "0xF48D38", VA = "0xF48D38")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000086")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000012")]
	public static string AppID
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xF48D00", Offset = "0xF48D00", VA = "0xF48D00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xF48EFC", Offset = "0xF48EFC", VA = "0xF48EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0xF48D1C", Offset = "0xF48D1C", VA = "0xF48D1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000177")]
		[Address(RVA = "0xF48F20", Offset = "0xF48F20", VA = "0xF48F20")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xF48DB8", Offset = "0xF48DB8", VA = "0xF48DB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xF48F44", Offset = "0xF48F44", VA = "0xF48F44")]
		set
		{
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xF48F9C", Offset = "0xF48F9C", VA = "0xF48F9C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xF49004", Offset = "0xF49004", VA = "0xF49004")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xF492C8", Offset = "0xF492C8", VA = "0xF492C8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xF49180", Offset = "0xF49180", VA = "0xF49180")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xF494D8", Offset = "0xF494D8", VA = "0xF494D8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xF494E8", Offset = "0xF494E8", VA = "0xF494E8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xF49638", Offset = "0xF49638", VA = "0xF49638")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xF497E8", Offset = "0xF497E8", VA = "0xF497E8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000305")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000306")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000307")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xF497F8", Offset = "0xF497F8", VA = "0xF497F8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xF4A7C4", Offset = "0xF4A7C4", VA = "0xF4A7C4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xF4A9D0", Offset = "0xF4A9D0", VA = "0xF4A9D0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xF49F40", Offset = "0xF49F40", VA = "0xF49F40")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xF49C3C", Offset = "0xF49C3C", VA = "0xF49C3C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xF49DB4", Offset = "0xF49DB4", VA = "0xF49DB4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xF4B1F4", Offset = "0xF4B1F4", VA = "0xF4B1F4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200008A")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008B")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200008C")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xF4BB0C", Offset = "0xF4BB0C", VA = "0xF4BB0C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200008D")]
	public struct TextureSet
	{
		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xF4BD5C", Offset = "0xF4BD5C", VA = "0xF4BD5C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200008E")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000198")]
			[Address(RVA = "0xF4C628", Offset = "0xF4C628", VA = "0xF4C628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019A")]
			[Address(RVA = "0xF4C670", Offset = "0xF4C670", VA = "0xF4C670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xF4BEC4", Offset = "0xF4BEC4", VA = "0xF4BEC4")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xF4C050", Offset = "0xF4C050", VA = "0xF4C050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xF4C054", Offset = "0xF4C054", VA = "0xF4C054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xF4C630", Offset = "0xF4C630", VA = "0xF4C630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400030B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400030C")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400030F")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000310")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000311")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000312")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000313")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000314")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000315")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xF4B204", Offset = "0xF4B204", VA = "0xF4B204")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xF4B768", Offset = "0xF4B768", VA = "0xF4B768")]
	public void Update()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xF42FDC", Offset = "0xF42FDC", VA = "0xF42FDC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xF4B94C", Offset = "0xF4B94C", VA = "0xF4B94C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xF4B8CC", Offset = "0xF4B8CC", VA = "0xF4B8CC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xF4BB5C", Offset = "0xF4BB5C", VA = "0xF4BB5C")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xF4BD84", Offset = "0xF4BD84", VA = "0xF4BD84")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xF4BE1C", Offset = "0xF4BE1C", VA = "0xF4BE1C")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xF489F8", Offset = "0xF489F8", VA = "0xF489F8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xF4BEEC", Offset = "0xF4BEEC", VA = "0xF4BEEC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200008F")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xF4C678", Offset = "0xF4C678", VA = "0xF4C678")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xF4C7BC", Offset = "0xF4C7BC", VA = "0xF4C7BC")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000090")]
public class AnimateLine : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 uvAnimationRate;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string textureName;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xF4C81C", Offset = "0xF4C81C", VA = "0xF4C81C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xF4C868", Offset = "0xF4C868", VA = "0xF4C868")]
	public AnimateLine()
	{
	}
}
[Token(Token = "0x2000091")]
public class AnimateTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	[CompilerGenerated]
	private sealed class <InitiateAnimation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTeleportPoint <>4__this;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currScale>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A8")]
			[Address(RVA = "0xF4CCAC", Offset = "0xF4CCAC", VA = "0xF4CCAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AA")]
			[Address(RVA = "0xF4CCF4", Offset = "0xF4CCF4", VA = "0xF4CCF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xF4C9DC", Offset = "0xF4C9DC", VA = "0xF4C9DC")]
		[DebuggerHidden]
		public <InitiateAnimation>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xF4CAB4", Offset = "0xF4CAB4", VA = "0xF4CAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xF4CAB8", Offset = "0xF4CAB8", VA = "0xF4CAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xF4CCB4", Offset = "0xF4CCB4", VA = "0xF4CCB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000093")]
	[CompilerGenerated]
	private sealed class <Oscillate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTeleportPoint <>4__this;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <scaleVec>5__3;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AE")]
			[Address(RVA = "0xF4CE3C", Offset = "0xF4CE3C", VA = "0xF4CE3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0xF4CE84", Offset = "0xF4CE84", VA = "0xF4CE84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xF4CA78", Offset = "0xF4CA78", VA = "0xF4CA78")]
		[DebuggerHidden]
		public <Oscillate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xF4CCFC", Offset = "0xF4CCFC", VA = "0xF4CCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xF4CD00", Offset = "0xF4CD00", VA = "0xF4CD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xF4CE44", Offset = "0xF4CE44", VA = "0xF4CE44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader overlayShader;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float baseScale;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float oscillateFactor;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xF4C904", Offset = "0xF4C904", VA = "0xF4C904")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xF4C9B4", Offset = "0xF4C9B4", VA = "0xF4C9B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xF4C9D4", Offset = "0xF4C9D4", VA = "0xF4C9D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xF4C940", Offset = "0xF4C940", VA = "0xF4C940")]
	[IteratorStateMachine(typeof(<InitiateAnimation>d__7))]
	private IEnumerator InitiateAnimation()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xF4CA04", Offset = "0xF4CA04", VA = "0xF4CA04")]
	[IteratorStateMachine(typeof(<Oscillate>d__8))]
	private IEnumerator Oscillate()
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xF4CAA0", Offset = "0xF4CAA0", VA = "0xF4CAA0")]
	public AnimateTeleportPoint()
	{
	}
}
[Token(Token = "0x2000094")]
[RequireComponent(typeof(LineRenderer))]
public class Bezier : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool endPointDetected;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 endpoint;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float extensionFactor;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] controlPoints;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float extendStep;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int SEGMENT_COUNT;

	[Token(Token = "0x1700001B")]
	public Vector3 EndPoint
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xF4CE8C", Offset = "0xF4CE8C", VA = "0xF4CE8C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001C")]
	public float ExtensionFactor
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xF4CE98", Offset = "0xF4CE98", VA = "0xF4CE98")]
		set
		{
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xF4CEA0", Offset = "0xF4CEA0", VA = "0xF4CEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xF4CF5C", Offset = "0xF4CF5C", VA = "0xF4CF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xF4D474", Offset = "0xF4D474", VA = "0xF4D474")]
	public void ToggleDraw(bool draw)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xF4D14C", Offset = "0xF4D14C", VA = "0xF4D14C")]
	private void HandleExtension()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xF4CF7C", Offset = "0xF4CF7C", VA = "0xF4CF7C")]
	private void UpdateControlPoints()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xF4D1A4", Offset = "0xF4D1A4", VA = "0xF4D1A4")]
	private void DrawCurve()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xF4D4F4", Offset = "0xF4D4F4", VA = "0xF4D4F4")]
	private bool CheckColliderIntersection(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xF4D494", Offset = "0xF4D494", VA = "0xF4D494")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xF4D614", Offset = "0xF4D614", VA = "0xF4D614")]
	public Bezier()
	{
	}
}
[Token(Token = "0x2000095")]
public class Teleport : MonoBehaviour
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bezier bezier;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject teleportSprite;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool teleportEnabled;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool firstClick;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float firstClickTime;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float doubleClickTimeLimit;

	[Token(Token = "0x1700001D")]
	public bool TeleportEnabled
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xF4D624", Offset = "0xF4D624", VA = "0xF4D624")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xF4D62C", Offset = "0xF4D62C", VA = "0xF4D62C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xF4D658", Offset = "0xF4D658", VA = "0xF4D658")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xF4D688", Offset = "0xF4D688", VA = "0xF4D688")]
	private void UpdateTeleportEnabled()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xF4D7D4", Offset = "0xF4D7D4", VA = "0xF4D7D4")]
	private void HandleTeleport()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xF4D920", Offset = "0xF4D920", VA = "0xF4D920")]
	private void TeleportToPosition(Vector3 teleportPos)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xF4D734", Offset = "0xF4D734", VA = "0xF4D734")]
	private void HandleBezier()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xF4D8C0", Offset = "0xF4D8C0", VA = "0xF4D8C0")]
	private void ToggleTeleportMode()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xF4D9CC", Offset = "0xF4D9CC", VA = "0xF4D9CC")]
	public Teleport()
	{
	}
}
[Token(Token = "0x2000096")]
[AddComponentMenu("Rendering/SetRenderQueue")]
public class Render : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int[] m_queues;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xF4D9DC", Offset = "0xF4D9DC", VA = "0xF4D9DC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xF4DAA8", Offset = "0xF4DAA8", VA = "0xF4DAA8")]
	public Render()
	{
	}
}
[Token(Token = "0x2000097")]
[DefaultExecutionOrder(10001)]
public class BoltHitboxSnapshotRecorder : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	public struct BoltHitboxBodySnapshot
	{
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] Positions;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion[] Rotations;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] Sizes;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Frame;

		[Token(Token = "0x1700001E")]
		public int Count
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0xF4E108", Offset = "0xF4E108", VA = "0xF4E108")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60001CD")]
			[Address(RVA = "0xF4E110", Offset = "0xF4E110", VA = "0xF4E110")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xF4DC10", Offset = "0xF4DC10", VA = "0xF4DC10")]
		public BoltHitboxBodySnapshot(int boxCount, int frame)
		{
		}
	}

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoltHitboxBody _boltHitboxBody;

	[Token(Token = "0x4000347")]
	private const int SavedFrameCount = 100;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _currentFrame;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoltHitboxBodySnapshot[] _recordedSnapshots;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Func<BoltHitboxBody, int, Vector3> BoltPositionAtFrame;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int LastSavedFrame;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xF4DB28", Offset = "0xF4DB28", VA = "0xF4DB28")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xF4DCD8", Offset = "0xF4DCD8", VA = "0xF4DCD8")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xF4DDB8", Offset = "0xF4DDB8", VA = "0xF4DDB8")]
	private static void SaveSnapshot(ref BoltHitboxBodySnapshot[] recordedSnapshots, in BoltHitbox[] hitboxes)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xF4DFC8", Offset = "0xF4DFC8", VA = "0xF4DFC8")]
	public BoltHitboxBodySnapshot GetSnapshotAtFrame(int frame)
	{
		return default(BoltHitboxBodySnapshot);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xF4E0F8", Offset = "0xF4E0F8", VA = "0xF4E0F8")]
	public BoltHitboxSnapshotRecorder()
	{
	}
}
[Token(Token = "0x2000099")]
public class BoltPrefabPool1 : MonoBehaviour, IPrefabPool
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RocketPrefab;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> _standbyRockets;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> _activeRockets;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xF4E118", Offset = "0xF4E118", VA = "0xF4E118")]
	public void Start()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xF4E11C", Offset = "0xF4E11C", VA = "0xF4E11C")]
	public void Allocate()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xF4E2D0", Offset = "0xF4E2D0", VA = "0xF4E2D0", Slot = "5")]
	public GameObject Instantiate(PrefabId prefabId, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xF4E5C4", Offset = "0xF4E5C4", VA = "0xF4E5C4", Slot = "6")]
	public void Destroy(GameObject gameObject)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xF4E5B8", Offset = "0xF4E5B8", VA = "0xF4E5B8", Slot = "4")]
	public GameObject LoadPrefab(PrefabId prefabId)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xF4E714", Offset = "0xF4E714", VA = "0xF4E714")]
	public BoltPrefabPool1()
	{
	}
}
[Token(Token = "0x200009A")]
public class SpectatorRuntimeSettings
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerPrefsBool _showSpectatorUI;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PlayerPrefsBool _showHud;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static PlayerPrefsBool _showNameTags;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static PlayerPrefsBool _showHologram;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static PlayerPrefsBool _showHitmarkers;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static PlayerPrefsBool _showKillLine;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static PlayerPrefsBool _showCameraDamage;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static PlayerPrefsBool _showAmmoHud;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static PlayerPrefsBool _followOnKill;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static PlayerPrefsBool _droneMovementControls;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static PlayerPrefsBool _showEmptySlotSolid;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static PlayerPrefsFloat _droneMoveSpeed;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static PlayerPrefsFloat _droneBoostSpeed;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private static PlayerPrefsFloat _droneRotationSpeed;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private static PlayerPrefsFloat _firstPersonSmoothTime;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private static PlayerPrefsFloat _fov;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private static Vector3 _positionOffset;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private static PlayerPrefsBool _lockRoll;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private static PlayerPrefsBool _trailerCam;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static bool ShowSettingsUI;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public static Vector3 TargetOffset;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static Vector3 PositionOffset;

	[Token(Token = "0x1700001F")]
	public static bool ShowSpectatorUI
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xF4E8B4", Offset = "0xF4E8B4", VA = "0xF4E8B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xF4E97C", Offset = "0xF4E97C", VA = "0xF4E97C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public static bool ShowHud
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xF4E9DC", Offset = "0xF4E9DC", VA = "0xF4E9DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xF4EAA8", Offset = "0xF4EAA8", VA = "0xF4EAA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public static bool ShowNameTags
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xF4EB0C", Offset = "0xF4EB0C", VA = "0xF4EB0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xF4EBD8", Offset = "0xF4EBD8", VA = "0xF4EBD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public static bool ShowHologram
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xF4EC3C", Offset = "0xF4EC3C", VA = "0xF4EC3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xF4ED08", Offset = "0xF4ED08", VA = "0xF4ED08")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static bool ShowHitmarkers
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xF4ED6C", Offset = "0xF4ED6C", VA = "0xF4ED6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xF4EE38", Offset = "0xF4EE38", VA = "0xF4EE38")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static bool ShowKillLine
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xF4EE9C", Offset = "0xF4EE9C", VA = "0xF4EE9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xF4EF68", Offset = "0xF4EF68", VA = "0xF4EF68")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public static bool ShowCameraDamage
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xF4EFCC", Offset = "0xF4EFCC", VA = "0xF4EFCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xF4F098", Offset = "0xF4F098", VA = "0xF4F098")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public static bool ShowAmmoHud
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xF4F0FC", Offset = "0xF4F0FC", VA = "0xF4F0FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xF4F1C8", Offset = "0xF4F1C8", VA = "0xF4F1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public static bool ShowEmptySlotSolid
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xF4F22C", Offset = "0xF4F22C", VA = "0xF4F22C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xF4F2F8", Offset = "0xF4F2F8", VA = "0xF4F2F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public static float DroneMoveSpeed
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xF4F35C", Offset = "0xF4F35C", VA = "0xF4F35C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xF4F428", Offset = "0xF4F428", VA = "0xF4F428")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public static float DroneBoostSpeed
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xF4F494", Offset = "0xF4F494", VA = "0xF4F494")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xF4F560", Offset = "0xF4F560", VA = "0xF4F560")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public static float DroneRotationSpeed
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xF4F5CC", Offset = "0xF4F5CC", VA = "0xF4F5CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xF4F698", Offset = "0xF4F698", VA = "0xF4F698")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public static bool DroneMovementControls
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xF4F704", Offset = "0xF4F704", VA = "0xF4F704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xF4F7D0", Offset = "0xF4F7D0", VA = "0xF4F7D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public static float FirstPersonSmoothTime
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xF4F834", Offset = "0xF4F834", VA = "0xF4F834")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xF4F900", Offset = "0xF4F900", VA = "0xF4F900")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public static float Fov
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xF4F96C", Offset = "0xF4F96C", VA = "0xF4F96C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xF4FA38", Offset = "0xF4FA38", VA = "0xF4FA38")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool LockRoll
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xF4FAA4", Offset = "0xF4FAA4", VA = "0xF4FAA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xF4FB70", Offset = "0xF4FB70", VA = "0xF4FB70")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public static bool TrailerCam
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xF4FBD4", Offset = "0xF4FBD4", VA = "0xF4FBD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xF4FCA0", Offset = "0xF4FCA0", VA = "0xF4FCA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public static bool FollowOnKill
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xF4FD04", Offset = "0xF4FD04", VA = "0xF4FD04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xF4FDD0", Offset = "0xF4FDD0", VA = "0xF4FDD0")]
		set
		{
		}
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xF4E71C", Offset = "0xF4E71C", VA = "0xF4E71C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xF4FE34", Offset = "0xF4FE34", VA = "0xF4FE34")]
	public SpectatorRuntimeSettings()
	{
	}
}
[Token(Token = "0x200009B")]
[DefaultExecutionOrder(10004)]
public class HitboxDebugger : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	private class DebugHitBoxes
	{
		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DisplayTimeInFrames;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Matrix4x4> Matrices;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> Frames;

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xF518B4", Offset = "0xF518B4", VA = "0xF518B4")]
		public DebugHitBoxes(int size)
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xF506C8", Offset = "0xF506C8", VA = "0xF506C8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xF511B0", Offset = "0xF511B0", VA = "0xF511B0")]
		public void Add(Vector3 position, Quaternion rotation, Vector3 size, int frame)
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xF50F10", Offset = "0xF50F10", VA = "0xF50F10")]
		public void Update(int currentFrame)
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xF510A4", Offset = "0xF510A4", VA = "0xF510A4")]
		public void Draw(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mesh _boxMesh;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material _clientMaterial;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material _deadMaterial;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material _serverMaterial;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material _serverHitMaterial;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material _clientHitMaterial;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _showHitboxesEveryXFrames;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugHitBoxes _clientSideHitboxes;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DebugHitBoxes _serverSideHitboxes;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static DebugHitBoxes _deadHitboxes;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3 _serverHitPosition;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Vector3 _clientHitPosition;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF504F8", Offset = "0xF504F8", VA = "0xF504F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xF5059C", Offset = "0xF5059C", VA = "0xF5059C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xF50640", Offset = "0xF50640", VA = "0xF50640")]
	private void OnSceneloaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF50738", Offset = "0xF50738", VA = "0xF50738")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xF50C00", Offset = "0xF50C00", VA = "0xF50C00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xF50A98", Offset = "0xF50A98", VA = "0xF50A98")]
	public static void AddClientHitboxes(in BoltHitboxSnapshotRecorder.BoltHitboxBodySnapshot snapshot)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF513A0", Offset = "0xF513A0", VA = "0xF513A0")]
	public static void AddClientHitboxes(Vector3 position, Quaternion rotation, Vector3 size, int frame)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xF5114C", Offset = "0xF5114C", VA = "0xF5114C")]
	private static Quaternion MakeValidQuaternion(Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xF514B8", Offset = "0xF514B8", VA = "0xF514B8")]
	public static void AddHitBoxToken(in HitBoxToken token)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xF516E0", Offset = "0xF516E0", VA = "0xF516E0")]
	public static void AddServerHit(Vector3 position, int frame)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xF51758", Offset = "0xF51758", VA = "0xF51758")]
	public static void AddClientHit(Vector3 position, int frame)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xF517D0", Offset = "0xF517D0", VA = "0xF517D0")]
	public HitboxDebugger()
	{
	}
}
[Token(Token = "0x200009D")]
public class HitboxDebuggerToggle : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle _toggle;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xF51AC0", Offset = "0xF51AC0", VA = "0xF51AC0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xF51B30", Offset = "0xF51B30", VA = "0xF51B30")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xF51B8C", Offset = "0xF51B8C", VA = "0xF51B8C")]
	public HitboxDebuggerToggle()
	{
	}
}
[Token(Token = "0x200009E")]
public static class HyperBoltconfig
{
	[Token(Token = "0x6000212")]
	[Address(RVA = "0xF51B94", Offset = "0xF51B94", VA = "0xF51B94")]
	public static BoltConfig GetConfig()
	{
		return null;
	}
}
[Token(Token = "0x200009F")]
internal enum SpeakingModes
{
	[Token(Token = "0x400037B")]
	NotSet,
	[Token(Token = "0x400037C")]
	None,
	[Token(Token = "0x400037D")]
	TeamRadio,
	[Token(Token = "0x400037E")]
	Proximity
}
[Token(Token = "0x20000A0")]
public class JellyFishAnimation : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Movement")]
	private float _moveSpeed;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _moveDistance;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _rotationSpeed;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Tentacles")]
	private Transform[] _tentacles;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _tentacleRotationMax;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _tentacleRotationMin;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Light")]
	[SerializeField]
	private Light _light;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _lightPulseSpeed;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _minLightIntensity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _maxLightIntensity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _startPosition;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xF51D84", Offset = "0xF51D84", VA = "0xF51D84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xF51DB4", Offset = "0xF51DB4", VA = "0xF51DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xF51FB4", Offset = "0xF51FB4", VA = "0xF51FB4")]
	public JellyFishAnimation()
	{
	}
}
[Token(Token = "0x20000A1")]
public class JitterFixToggle : MonoBehaviour
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle _toggle;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xF5204C", Offset = "0xF5204C", VA = "0xF5204C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xF520BC", Offset = "0xF520BC", VA = "0xF520BC")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xF52118", Offset = "0xF52118", VA = "0xF52118")]
	public JitterFixToggle()
	{
	}
}
[Token(Token = "0x20000A2")]
public class MergeJellyFish : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshFilter _meshFilter;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xF52120", Offset = "0xF52120", VA = "0xF52120")]
	[ContextMenu("Merge")]
	public void Merge()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xF525F4", Offset = "0xF525F4", VA = "0xF525F4")]
	public MergeJellyFish()
	{
	}
}
[Token(Token = "0x20000A3")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000A4")]
	public delegate void OnClick();

	[Token(Token = "0x20000A5")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000A6")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000A7")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x400038C")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400038D")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400038E")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xF525FC", Offset = "0xF525FC", VA = "0xF525FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF52B68", Offset = "0xF52B68", VA = "0xF52B68")]
	public void Show()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF52EE4", Offset = "0xF52EE4", VA = "0xF52EE4")]
	public void Hide()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF53060", Offset = "0xF53060", VA = "0xF53060")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF53278", Offset = "0xF53278", VA = "0xF53278")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF52ED4", Offset = "0xF52ED4", VA = "0xF52ED4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF5356C", Offset = "0xF5356C", VA = "0xF5356C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF538E8", Offset = "0xF538E8", VA = "0xF538E8")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF53C98", Offset = "0xF53C98", VA = "0xF53C98")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF53D90", Offset = "0xF53D90", VA = "0xF53D90")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF53F60", Offset = "0xF53F60", VA = "0xF53F60")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xF53FF8", Offset = "0xF53FF8", VA = "0xF53FF8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF541D4", Offset = "0xF541D4", VA = "0xF541D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF543D0", Offset = "0xF543D0", VA = "0xF543D0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF546C8", Offset = "0xF546C8", VA = "0xF546C8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF547B8", Offset = "0xF547B8", VA = "0xF547B8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xF5484C", Offset = "0xF5484C", VA = "0xF5484C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000AD")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xF54ECC", Offset = "0xF54ECC", VA = "0xF54ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xF54F70", Offset = "0xF54F70", VA = "0xF54F70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xF5500C", Offset = "0xF5500C", VA = "0xF5500C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xF55044", Offset = "0xF55044", VA = "0xF55044")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000AE")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000AF")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40003BE")]
		On,
		[Token(Token = "0x40003BF")]
		Off,
		[Token(Token = "0x40003C0")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000031")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xF5504C", Offset = "0xF5504C", VA = "0xF5504C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xF52B28", Offset = "0xF52B28", VA = "0xF52B28")]
		set
		{
		}
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xF55054", Offset = "0xF55054", VA = "0xF55054")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xF550AC", Offset = "0xF550AC", VA = "0xF550AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xF551E4", Offset = "0xF551E4", VA = "0xF551E4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xF55200", Offset = "0xF55200", VA = "0xF55200", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xF55250", Offset = "0xF55250", VA = "0xF55250")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xF553F0", Offset = "0xF553F0", VA = "0xF553F0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xF55500", Offset = "0xF55500", VA = "0xF55500")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xF55584", Offset = "0xF55584", VA = "0xF55584")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xF55644", Offset = "0xF55644", VA = "0xF55644")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xF556EC", Offset = "0xF556EC", VA = "0xF556EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xF557D8", Offset = "0xF557D8", VA = "0xF557D8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ProfilerFetcher : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	private struct StatInfo
	{
		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProfilerCategory Cat;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ProfilerMarkerDataUnit Unit;
	}

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _stats;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _elapsedTime;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ProfilerRecorder _audioReservedMemory;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ProfilerRecorder _audioUsedMemory;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProfilerRecorder _gcReservedMemory;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ProfilerRecorder _gcUsedMemory;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ProfilerRecorder _profilerReservedMemory;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ProfilerRecorder _profilerUsedMemory;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ProfilerRecorder _systemUsedMemory;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ProfilerRecorder _totalReservedMemory;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ProfilerRecorder _totalUsedMemory;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ProfilerRecorder _videoReservedMemory;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ProfilerRecorder _videoUsedMemory;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ProfilerRecorder _mainThreadTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ProfilerRecorder _playerLoop;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StringBuilder _sb;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xF557E8", Offset = "0xF557E8", VA = "0xF557E8")]
	[RuntimeInitializeOnLoadMethod]
	public static void EnumerateProfilerStats()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xF55D60", Offset = "0xF55D60", VA = "0xF55D60")]
	private static double GetRecorderFrameAverage(ProfilerRecorder recorder)
	{
		return default(double);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xF55E90", Offset = "0xF55E90", VA = "0xF55E90")]
	private static double NanoToMs(double value)
	{
		return default(double);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xF55EA0", Offset = "0xF55EA0", VA = "0xF55EA0")]
	private static double ByteToMb(double value)
	{
		return default(double);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xF55EB0", Offset = "0xF55EB0", VA = "0xF55EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xF55F08", Offset = "0xF55F08", VA = "0xF55F08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xF56240", Offset = "0xF56240", VA = "0xF56240")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xF562E8", Offset = "0xF562E8", VA = "0xF562E8")]
	private void AddBytesRecorder(StringBuilder sb, string type, ProfilerRecorder reservedRecorder, ProfilerRecorder usedRecorder)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xF5650C", Offset = "0xF5650C", VA = "0xF5650C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xF567FC", Offset = "0xF567FC", VA = "0xF567FC")]
	public ProfilerFetcher()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RegisterPrefabPool : GlobalEventListener
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoltPrefabPool1 Pool;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xF56950", Offset = "0xF56950", VA = "0xF56950", Slot = "13")]
	public override void BoltStartDone()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xF569AC", Offset = "0xF569AC", VA = "0xF569AC")]
	public RegisterPrefabPool()
	{
	}
}
[Token(Token = "0x20000B4")]
[Flags]
public enum StoreFeature
{
	[Token(Token = "0x40003D8")]
	None = 0,
	[Token(Token = "0x40003D9")]
	All = -1,
	[Token(Token = "0x40003DA")]
	OfflineMode = 1,
	[Token(Token = "0x40003DB")]
	Friendlist = 2,
	[Token(Token = "0x40003DC")]
	AddFriend = 4,
	[Token(Token = "0x40003DD")]
	ItemStore = 8,
	[Token(Token = "0x40003DE")]
	ActiveRichPresence = 0x10
}
[Token(Token = "0x20000B5")]
public static class StoreFeatureFlagsExtensions
{
	[Token(Token = "0x6000266")]
	[Address(RVA = "0xF569B4", Offset = "0xF569B4", VA = "0xF569B4")]
	public static StoreFeature SetFlag(this StoreFeature value, StoreFeature flag, bool enable)
	{
		return default(StoreFeature);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xF569C8", Offset = "0xF569C8", VA = "0xF569C8")]
	public static StoreFeature AddFlag(this StoreFeature value, StoreFeature flag)
	{
		return default(StoreFeature);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xF569D0", Offset = "0xF569D0", VA = "0xF569D0")]
	public static StoreFeature RemoveFlag(this StoreFeature value, StoreFeature flag)
	{
		return default(StoreFeature);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xF569D8", Offset = "0xF569D8", VA = "0xF569D8")]
	public static bool HasFlagFast(this StoreFeature value, StoreFeature flag)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B6")]
public class BouncingArrow : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _arrow;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isInitialized;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _arrowPositon;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _arrowScale;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xF569E4", Offset = "0xF569E4", VA = "0xF569E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xF56B8C", Offset = "0xF56B8C", VA = "0xF56B8C")]
	private void Init()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xF56BE0", Offset = "0xF56BE0", VA = "0xF56BE0")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xF56BF0", Offset = "0xF56BF0", VA = "0xF56BF0")]
	public BouncingArrow()
	{
	}
}
[Token(Token = "0x20000B7")]
public class BHapticsElement : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button PingButton;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button SwitchButton;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isHidden;

	[Token(Token = "0x17000032")]
	public HapticDevice Device
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xF56BF8", Offset = "0xF56BF8", VA = "0xF56BF8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xF56C00", Offset = "0xF56C00", VA = "0xF56C00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xF56C08", Offset = "0xF56C08", VA = "0xF56C08")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xF56CF8", Offset = "0xF56CF8", VA = "0xF56CF8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xF56D28", Offset = "0xF56D28", VA = "0xF56D28")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF56D5C", Offset = "0xF56D5C", VA = "0xF56D5C")]
	public void UpdateDevice(HapticDevice device)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xF56F64", Offset = "0xF56F64", VA = "0xF56F64")]
	public void PingDevice()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF56FD4", Offset = "0xF56FD4", VA = "0xF56FD4")]
	public void SwitchDevice()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF57044", Offset = "0xF57044", VA = "0xF57044")]
	public BHapticsElement()
	{
	}
}
[Token(Token = "0x20000B8")]
[RequireComponent(typeof(RectTransform))]
[ExecuteAlways]
public class UIFitText : UIBehaviour, ILayoutSelfController, ILayoutController, ILayoutGroup, ILayoutElement
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool width;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool height;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI _text;

	[Token(Token = "0x17000033")]
	public float minWidth
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xF57054", Offset = "0xF57054", VA = "0xF57054", Slot = "21")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000034")]
	public float preferredWidth
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xF5705C", Offset = "0xF5705C", VA = "0xF5705C", Slot = "22")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000035")]
	public float flexibleWidth
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xF5713C", Offset = "0xF5713C", VA = "0xF5713C", Slot = "23")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000036")]
	public float minHeight
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xF57144", Offset = "0xF57144", VA = "0xF57144", Slot = "24")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000037")]
	public float preferredHeight
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xF5714C", Offset = "0xF5714C", VA = "0xF5714C", Slot = "25")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000038")]
	public float flexibleHeight
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xF5722C", Offset = "0xF5722C", VA = "0xF5722C", Slot = "26")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000039")]
	public int layoutPriority
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xF57234", Offset = "0xF57234", VA = "0xF57234", Slot = "27")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xF5723C", Offset = "0xF5723C", VA = "0xF5723C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xF572DC", Offset = "0xF572DC", VA = "0xF572DC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xF572E0", Offset = "0xF572E0", VA = "0xF572E0", Slot = "17")]
	public void SetLayoutHorizontal()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xF57060", Offset = "0xF57060", VA = "0xF57060")]
	private float GetPrefferedWidth()
	{
		return default(float);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xF57150", Offset = "0xF57150", VA = "0xF57150")]
	private float GetPrefferedHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xF57378", Offset = "0xF57378", VA = "0xF57378", Slot = "18")]
	public void SetLayoutVertical()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xF57240", Offset = "0xF57240", VA = "0xF57240")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xF57410", Offset = "0xF57410", VA = "0xF57410", Slot = "19")]
	public void CalculateLayoutInputHorizontal()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xF57414", Offset = "0xF57414", VA = "0xF57414", Slot = "20")]
	public void CalculateLayoutInputVertical()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xF57418", Offset = "0xF57418", VA = "0xF57418")]
	public UIFitText()
	{
	}
}
[Token(Token = "0x20000B9")]
public class UnityAuthentication
{
	[Token(Token = "0x20000BA")]
	public enum AuthEventType
	{
		[Token(Token = "0x40003EE")]
		SignedIn,
		[Token(Token = "0x40003EF")]
		SignInFailed,
		[Token(Token = "0x40003F0")]
		SignedOut,
		[Token(Token = "0x40003F1")]
		Expired
	}

	[StructLayout(3)]
	[Token(Token = "0x20000BB")]
	[CompilerGenerated]
	private struct <SignInAnonymouslyAsync>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializationOptions options;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xF57F00", Offset = "0xF57F00", VA = "0xF57F00", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xF584E0", Offset = "0xF584E0", VA = "0xF584E0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _playerID;

	[Token(Token = "0x1700003A")]
	public static bool UnityInitialized
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xF57420", Offset = "0xF57420", VA = "0xF57420")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public static bool IsUserSignedIn
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xF5743C", Offset = "0xF5743C", VA = "0xF5743C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public static string LocalUnityID
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xF574F8", Offset = "0xF574F8", VA = "0xF574F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action<AuthEventType> AuthEvent
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xF57550", Offset = "0xF57550", VA = "0xF57550")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xF57644", Offset = "0xF57644", VA = "0xF57644")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xF57738", Offset = "0xF57738", VA = "0xF57738")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
	private static void Init()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xF57794", Offset = "0xF57794", VA = "0xF57794")]
	private static void SetupEvents()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xF57A9C", Offset = "0xF57A9C", VA = "0xF57A9C")]
	[AsyncStateMachine(typeof(<SignInAnonymouslyAsync>d__13))]
	public static System.Threading.Tasks.Task SignInAnonymouslyAsync(InitializationOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xF57B88", Offset = "0xF57B88", VA = "0xF57B88")]
	private static void SignedIn()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xF57CAC", Offset = "0xF57CAC", VA = "0xF57CAC")]
	private static void SignInFailed(RequestFailedException err)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xF57D58", Offset = "0xF57D58", VA = "0xF57D58")]
	private static void SignedOut()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xF57E10", Offset = "0xF57E10", VA = "0xF57E10")]
	private static void Expired()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xF57E88", Offset = "0xF57E88", VA = "0xF57E88")]
	public UnityAuthentication()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class MapPrefabData
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MatchTypes GameModeType;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject NetMatchTypePrefab;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Gamemode Objects")]
	public GameObject[] ToEnable;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xF584EC", Offset = "0xF584EC", VA = "0xF584EC")]
	public MapPrefabData()
	{
	}
}
[Token(Token = "0x20000BD")]
public class SpawnMatch : MonoBehaviour
{
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapPrefabData[] MatchTypePrefabData;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] WaitShields;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xF58550", Offset = "0xF58550", VA = "0xF58550")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xF588B8", Offset = "0xF588B8", VA = "0xF588B8")]
	public void SetEnabledGameObjects(MatchTypes matchType)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xF58818", Offset = "0xF58818", VA = "0xF58818")]
	private bool TryGetMatchData(MatchTypes matchType, out MapPrefabData data)
	{
		return default(bool);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xF589C4", Offset = "0xF589C4", VA = "0xF589C4")]
	public SpawnMatch()
	{
	}
}
[Token(Token = "0x20000BE")]
public class SpectatorAdvancedSettings : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GUI;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isActive;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1052758", Offset = "0x1052758", VA = "0x1052758")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1052790", Offset = "0x1052790", VA = "0x1052790")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1052824", Offset = "0x1052824", VA = "0x1052824")]
	public SpectatorAdvancedSettings()
	{
	}
}
[Token(Token = "0x20000BF")]
public class SpectatorAdvancedSettingsGUI : MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _scrollPosition;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x105282C", Offset = "0x105282C", VA = "0x105282C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1052A44", Offset = "0x1052A44", VA = "0x1052A44")]
	private void DrawWindow(int id)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x105340C", Offset = "0x105340C", VA = "0x105340C")]
	private float DrawSlider(string name, float value, float min = 0f, float max = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1053374", Offset = "0x1053374", VA = "0x1053374")]
	private bool Draw(string name, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x105364C", Offset = "0x105364C", VA = "0x105364C")]
	private Vector3 DrawSlider(string name, Vector3 value, float min = -20f, float max = 20f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1053900", Offset = "0x1053900", VA = "0x1053900")]
	public SpectatorAdvancedSettingsGUI()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Sword : FireMode
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Weapon _weapon;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask Mask;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Distance;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProjectileData Data;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Blade;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform BladeSoundTransform;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform BladeSpeedTransform;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _prevSoundPosition;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _prevSpeedPosition;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _prevSpeedTime;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _speedSq;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MinSpeedSq;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float DEBUG_Speed;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float DEBUG_SpeedSq;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float DEBUG_dt;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int DEBUG_GoodCount;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _smoothSpeedSq;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _stayOnTimer;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] _speedSamples;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _speedSampleIndex;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _fxTimer;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1053908", Offset = "0x1053908", VA = "0x1053908")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x10539D8", Offset = "0x10539D8", VA = "0x10539D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x10539DC", Offset = "0x10539DC", VA = "0x10539DC", Slot = "4")]
	public override void OnTriggerDown()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x10539E0", Offset = "0x10539E0", VA = "0x10539E0", Slot = "5")]
	public override void OnTriggerUp()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x10539E4", Offset = "0x10539E4", VA = "0x10539E4", Slot = "6")]
	public override void OnTrigger()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x10539E8", Offset = "0x10539E8", VA = "0x10539E8", Slot = "7")]
	public override void OnDropItem()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x10539EC", Offset = "0x10539EC", VA = "0x10539EC", Slot = "8")]
	public override void ResetValues()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10539F0", Offset = "0x10539F0", VA = "0x10539F0", Slot = "9")]
	public override void OnCommandFrame()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1053F0C", Offset = "0x1053F0C", VA = "0x1053F0C")]
	public Sword()
	{
	}
}
[Token(Token = "0x20000C1")]
public class UISetParent : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Root;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] Elements;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1053F78", Offset = "0x1053F78", VA = "0x1053F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1053FE0", Offset = "0x1053FE0", VA = "0x1053FE0")]
	public UISetParent()
	{
	}
}
namespace VRKeyboard.Utils
{
	[Token(Token = "0x20000C2")]
	public class GazeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x20000C3")]
		[CompilerGenerated]
		private sealed class <FillCircle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400041B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400041C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400041D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeRaycaster <>4__this;

			[Token(Token = "0x400041E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x400041F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x1700003D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60002BA")]
				[Address(RVA = "0x1054648", Offset = "0x1054648", VA = "0x1054648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700003E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60002BC")]
				[Address(RVA = "0x1054690", Offset = "0x1054690", VA = "0x1054690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60002B7")]
			[Address(RVA = "0x10543E4", Offset = "0x10543E4", VA = "0x10543E4")]
			[DebuggerHidden]
			public <FillCircle>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x105446C", Offset = "0x105446C", VA = "0x105446C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60002B9")]
			[Address(RVA = "0x1054470", Offset = "0x1054470", VA = "0x1054470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60002BB")]
			[Address(RVA = "0x1054650", Offset = "0x1054650", VA = "0x1054650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayInSeconds;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float loadingTime;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image circle;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string lastTargetName;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine gazeControl;

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x1053FE8", Offset = "0x1053FE8", VA = "0x1053FE8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x1054268", Offset = "0x1054268", VA = "0x1054268")]
		[IteratorStateMachine(typeof(<FillCircle>d__6))]
		private IEnumerator FillCircle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x10542F8", Offset = "0x10542F8", VA = "0x10542F8")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x105440C", Offset = "0x105440C", VA = "0x105440C")]
		public GazeRaycaster()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If the character is uppercase at the initialization")]
		[Header("User defined")]
		public bool isUppercase;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInputLength;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI Elements")]
		public TMP_InputField inputText;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Essentials")]
		public Transform keys;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool shiftFlag;

		[Token(Token = "0x1700003F")]
		private string Input
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x1054698", Offset = "0x1054698", VA = "0x1054698")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x105472C", Offset = "0x105472C", VA = "0x105472C")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public static KeyboardManager Instance
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x10547C4", Offset = "0x10547C4", VA = "0x10547C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x105480C", Offset = "0x105480C", VA = "0x105480C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x1054864", Offset = "0x1054864", VA = "0x1054864")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x1054924", Offset = "0x1054924", VA = "0x1054924")]
		private void Start()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1054C98", Offset = "0x1054C98", VA = "0x1054C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1054CE4", Offset = "0x1054CE4", VA = "0x1054CE4")]
		public void Backspace()
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x1054D58", Offset = "0x1054D58", VA = "0x1054D58")]
		public void Clear()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x1054BC4", Offset = "0x1054BC4", VA = "0x1054BC4")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x1054DA0", Offset = "0x1054DA0", VA = "0x1054DA0")]
		public void Shift()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1054ECC", Offset = "0x1054ECC", VA = "0x1054ECC")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x1054F48", Offset = "0x1054F48", VA = "0x1054F48")]
		private void ResetShift(string key)
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1054F58", Offset = "0x1054F58", VA = "0x1054F58")]
		public void EnterPressed()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x1054F90", Offset = "0x1054F90", VA = "0x1054F90")]
		public void SelectInputField(TMP_InputField inputField)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x105503C", Offset = "0x105503C", VA = "0x105503C")]
		public void DeselectInputField(TMP_InputField inputField)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x10550F0", Offset = "0x10550F0", VA = "0x10550F0")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class Alphabet : Key
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x10550F8", Offset = "0x10550F8", VA = "0x10550F8", Slot = "6")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x105515C", Offset = "0x105515C", VA = "0x105515C")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class Key : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x20000C7")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x14000002")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x60002D0")]
			[Address(RVA = "0x1054B28", Offset = "0x1054B28", VA = "0x1054B28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x105516C", Offset = "0x105516C", VA = "0x105516C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1055208", Offset = "0x1055208", VA = "0x1055208", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1055294", Offset = "0x1055294", VA = "0x1055294", Slot = "6")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1055298", Offset = "0x1055298", VA = "0x1055298", Slot = "7")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x105529C", Offset = "0x105529C", VA = "0x105529C", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1055164", Offset = "0x1055164", VA = "0x1055164")]
		public Key()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class Number : Key
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x1055320", Offset = "0x1055320", VA = "0x1055320")]
		public Number()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class Shift : Key
	{
		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1055328", Offset = "0x1055328", VA = "0x1055328", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x10553BC", Offset = "0x10553BC", VA = "0x10553BC", Slot = "7")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1055448", Offset = "0x1055448", VA = "0x1055448")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class Symbol : Key
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1055450", Offset = "0x1055450", VA = "0x1055450")]
		public Symbol()
		{
		}
	}
}
namespace JoshH.Extensions
{
	[Token(Token = "0x20000CB")]
	public static class Vector2Extension
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1055458", Offset = "0x1055458", VA = "0x1055458")]
		public static Vector2 Rotate(this Vector2 v, float degrees)
		{
			return default(Vector2);
		}
	}
}
namespace JoshH.UI
{
	[Token(Token = "0x20000CC")]
	[AddComponentMenu("UI/Effects/UI Gradient")]
	[RequireComponent(typeof(RectTransform))]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x20000CD")]
		public enum UIGradientBlendMode
		{
			[Token(Token = "0x4000438")]
			Override,
			[Token(Token = "0x4000439")]
			Multiply
		}

		[Token(Token = "0x20000CE")]
		public enum UIGradientType
		{
			[Token(Token = "0x400043B")]
			Linear,
			[Token(Token = "0x400043C")]
			Corner,
			[Token(Token = "0x400043D")]
			ComplexLinear
		}

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("How the gradient color will be blended with the graphics color.")]
		private UIGradientBlendMode blendMode;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(0f, 1f)]
		private float intensity;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIGradientType gradientType;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color linearColor1;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color linearColor2;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Color cornerColorUpperLeft;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Color cornerColorUpperRight;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color cornerColorLowerRight;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color cornerColorLowerLeft;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Gradient linearGradient;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Range(0f, 360f)]
		private float angle;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RectTransform _rectTransform;

		[Token(Token = "0x17000041")]
		protected RectTransform rectTransform
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x10554A8", Offset = "0x10554A8", VA = "0x10554A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		public UIGradientBlendMode BlendMode
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0x1055578", Offset = "0x1055578", VA = "0x1055578")]
			get
			{
				return default(UIGradientBlendMode);
			}
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x1055580", Offset = "0x1055580", VA = "0x1055580")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public float Intensity
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x105562C", Offset = "0x105562C", VA = "0x105562C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x1055634", Offset = "0x1055634", VA = "0x1055634")]
			set
			{
			}
		}

		[Token(Token = "0x17000044")]
		public UIGradientType GradientType
		{
			[Token(Token = "0x60002E6")]
			[Address(RVA = "0x1055650", Offset = "0x1055650", VA = "0x1055650")]
			get
			{
				return default(UIGradientType);
			}
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x1055658", Offset = "0x1055658", VA = "0x1055658")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public Color LinearColor1
		{
			[Token(Token = "0x60002E8")]
			[Address(RVA = "0x1055660", Offset = "0x1055660", VA = "0x1055660")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0x105566C", Offset = "0x105566C", VA = "0x105566C")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public Color LinearColor2
		{
			[Token(Token = "0x60002EA")]
			[Address(RVA = "0x1055678", Offset = "0x1055678", VA = "0x1055678")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0x1055684", Offset = "0x1055684", VA = "0x1055684")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public Color CornerColorUpperLeft
		{
			[Token(Token = "0x60002EC")]
			[Address(RVA = "0x1055690", Offset = "0x1055690", VA = "0x1055690")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x105569C", Offset = "0x105569C", VA = "0x105569C")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public Color CornerColorUpperRight
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0x10556A8", Offset = "0x10556A8", VA = "0x10556A8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0x10556B4", Offset = "0x10556B4", VA = "0x10556B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public Color CornerColorLowerRight
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0x10556C0", Offset = "0x10556C0", VA = "0x10556C0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x10556CC", Offset = "0x10556CC", VA = "0x10556CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public Color CornerColorLowerLeft
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x10556D8", Offset = "0x10556D8", VA = "0x10556D8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0x10556E4", Offset = "0x10556E4", VA = "0x10556E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public float Angle
		{
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0x10556F0", Offset = "0x10556F0", VA = "0x10556F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002F5")]
			[Address(RVA = "0x10556F8", Offset = "0x10556F8", VA = "0x10556F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Gradient LinearGradient
		{
			[Token(Token = "0x60002F6")]
			[Address(RVA = "0x1055738", Offset = "0x1055738", VA = "0x1055738")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x1055740", Offset = "0x1055740", VA = "0x1055740")]
			set
			{
			}
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x105575C", Offset = "0x105575C", VA = "0x105575C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1055CE8", Offset = "0x1055CE8", VA = "0x1055CE8")]
		protected void CutMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x10583F8", Offset = "0x10583F8", VA = "0x10583F8")]
		private UIVertex UIVertexLerp(UIVertex v1, UIVertex v2, float f)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x10566D8", Offset = "0x10566D8", VA = "0x10566D8")]
		private Vector2 GetCutDirection()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x1056EA8", Offset = "0x1056EA8", VA = "0x1056EA8")]
		private void CutTriangle(List<UIVertex> tris, int idx, List<UIVertex> list, Vector2 cutDirection, Vector2 point)
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x10588B0", Offset = "0x10588B0", VA = "0x10588B0")]
		private bool IsOnLine(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1058870", Offset = "0x1058870", VA = "0x1058870")]
		private float OnLine(Vector2 p1, Vector2 p2, Vector2 o, Vector2 dir)
		{
			return default(float);
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x10588CC", Offset = "0x10588CC", VA = "0x10588CC")]
		private float ProjectedDistance(Vector2 p1, Vector2 p2, Vector2 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1056804", Offset = "0x1056804", VA = "0x1056804")]
		private Vector2 GetCutOrigin(float f)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x10564EC", Offset = "0x10564EC", VA = "0x10564EC")]
		private Color BlendColor(Color c1, Color c2, UIGradientBlendMode mode, float intensity)
		{
			return default(Color);
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x1056340", Offset = "0x1056340", VA = "0x1056340")]
		private Vector2 RotateNormalizedPosition(Vector2 normalizedPosition, float angle)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1055588", Offset = "0x1055588", VA = "0x1055588")]
		public void ForceUpdateGraphic()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1056444", Offset = "0x1056444", VA = "0x1056444")]
		private Color GetColorInGradient(Color ul, Color ur, Color lr, Color ll, Vector2 normalizedPosition)
		{
			return default(Color);
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1058ABC", Offset = "0x1058ABC", VA = "0x1058ABC")]
		public UIGradient()
		{
		}
	}
}
namespace Breachers
{
	[Token(Token = "0x20000D0")]
	public struct ControlSchemeSettings
	{
		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Scheme;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Loader;
	}
	[Token(Token = "0x20000D1")]
	[DefaultExecutionOrder(-100)]
	public class RigLoader : MonoBehaviour
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _xrSimulator;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XRLoader _currentXr;

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1058BA0", Offset = "0x1058BA0", VA = "0x1058BA0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x1058D70", Offset = "0x1058D70", VA = "0x1058D70")]
		public void InitializeRigSetup()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1058E18", Offset = "0x1058E18", VA = "0x1058E18")]
		private static XRLoader GetXRLoader(string loaderName)
		{
			return null;
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1058BC4", Offset = "0x1058BC4", VA = "0x1058BC4")]
		private static XRLoader GetActiveLoader()
		{
			return null;
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1059134", Offset = "0x1059134", VA = "0x1059134")]
		public RigLoader()
		{
		}
	}
}
namespace Breachers.Voice
{
	[Token(Token = "0x20000D2")]
	public enum ActionStates
	{
		[Token(Token = "0x4000446")]
		Waiting,
		[Token(Token = "0x4000447")]
		Executing,
		[Token(Token = "0x4000448")]
		Success,
		[Token(Token = "0x4000449")]
		Failed
	}
	[Token(Token = "0x20000D3")]
	public enum MicrophoneInputModes
	{
		[Token(Token = "0x400044B")]
		VoiceActivity,
		[Token(Token = "0x400044C")]
		PushToTalk
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public struct NetVoiceChannelProperties
	{
		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int AudibleDistance;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ConversationalDistance;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float AudioFadeIntensityByDistance;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AudioFadeModel AudioFadeModel;
	}
	[Token(Token = "0x20000D5")]
	public class SpectatorTeamToggle : Toggle
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x105913C", Offset = "0x105913C", VA = "0x105913C")]
		public SpectatorTeamToggle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D6")]
	public class UserSettings : ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x20000D7")]
		private class Element
		{
			[Token(Token = "0x4000454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ID;

			[Token(Token = "0x4000455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool Muted;

			[Token(Token = "0x4000456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Volume;

			[Token(Token = "0x6000318")]
			[Address(RVA = "0x105953C", Offset = "0x105953C", VA = "0x105953C")]
			public bool HasDefaultSettings()
			{
				return default(bool);
			}

			[Token(Token = "0x6000319")]
			[Address(RVA = "0x105927C", Offset = "0x105927C", VA = "0x105927C")]
			public Element()
			{
			}
		}

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Element> List;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<string> Guids;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Element> _users;

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1059144", Offset = "0x1059144", VA = "0x1059144")]
		private bool TryGetOrCreateUserSettings(string apiID, out Element element)
		{
			return default(bool);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1059284", Offset = "0x1059284", VA = "0x1059284")]
		public void SetMuted(string apiID, bool muted)
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x10592C0", Offset = "0x10592C0", VA = "0x10592C0")]
		public bool IsMuted(string guid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x105935C", Offset = "0x105935C", VA = "0x105935C")]
		public void SetVolume(string apiID, int volume)
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1059394", Offset = "0x1059394", VA = "0x1059394")]
		public int GetVolume(string apiID)
		{
			return default(int);
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1059428", Offset = "0x1059428", VA = "0x1059428", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x105955C", Offset = "0x105955C", VA = "0x105955C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1059740", Offset = "0x1059740", VA = "0x1059740")]
		public UserSettings()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public abstract class VivoxAction
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected VoiceManager VoiceManager;

		[Token(Token = "0x1700004D")]
		public ActionStates State
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0x1059868", Offset = "0x1059868", VA = "0x1059868")]
			[CompilerGenerated]
			get
			{
				return default(ActionStates);
			}
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x1059870", Offset = "0x1059870", VA = "0x1059870")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public VoiceChannelID VoiceChannelID
		{
			[Token(Token = "0x600031C")]
			[Address(RVA = "0x1059878", Offset = "0x1059878", VA = "0x1059878")]
			[CompilerGenerated]
			get
			{
				return default(VoiceChannelID);
			}
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1059880", Offset = "0x1059880", VA = "0x1059880")]
		protected VivoxAction(VoiceChannelID id)
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1059918", Offset = "0x1059918", VA = "0x1059918", Slot = "4")]
		public virtual void Execute()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1059924", Offset = "0x1059924", VA = "0x1059924")]
		public void Abort()
		{
		}

		[Token(Token = "0x6000320")]
		public abstract void Update();

		[Token(Token = "0x6000321")]
		public abstract void OnFinished();

		[Token(Token = "0x6000322")]
		public abstract override string ToString();
	}
	[Token(Token = "0x20000D9")]
	public class VivoxActionQueue
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<VivoxAction> _actions;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VivoxAction _currentAction;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VivoxAction _previousAction;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Breachers.Voice.Actions.Timer _timeOutTimer;

		[Token(Token = "0x1700004F")]
		public List<VivoxAction> Queue
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0x1059938", Offset = "0x1059938", VA = "0x1059938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public Breachers.Voice.Actions.Timer TimeOutTimer
		{
			[Token(Token = "0x6000324")]
			[Address(RVA = "0x1059940", Offset = "0x1059940", VA = "0x1059940")]
			get
			{
				return default(Breachers.Voice.Actions.Timer);
			}
		}

		[Token(Token = "0x17000051")]
		public VivoxAction PreviousAction
		{
			[Token(Token = "0x6000325")]
			[Address(RVA = "0x105994C", Offset = "0x105994C", VA = "0x105994C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1059954", Offset = "0x1059954", VA = "0x1059954")]
		public void Update()
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1059BE8", Offset = "0x1059BE8", VA = "0x1059BE8")]
		private void EndAction()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1059C74", Offset = "0x1059C74", VA = "0x1059C74")]
		public void Add(VivoxAction action)
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1059D24", Offset = "0x1059D24", VA = "0x1059D24")]
		public void Remove(VivoxAction action)
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1059DB0", Offset = "0x1059DB0", VA = "0x1059DB0")]
		public void RemoveActionsByID(VoiceChannelID id)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x1059E7C", Offset = "0x1059E7C", VA = "0x1059E7C")]
		public bool HasActionsByID(VoiceChannelID id)
		{
			return default(bool);
		}

		[Token(Token = "0x600032C")]
		public bool HasActionsOfTypeByID<T>(VoiceChannelID id) where T : VivoxAction
		{
			return default(bool);
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1059F28", Offset = "0x1059F28", VA = "0x1059F28")]
		public void Clear()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1059FD8", Offset = "0x1059FD8", VA = "0x1059FD8")]
		public VivoxActionQueue()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public static class VivoxTokenGenerator
	{
		[Token(Token = "0x400045E")]
		private const string InternationalServer = "https://unity.vivox.com/appconfig/90709-hyper-41994-udash";

		[Token(Token = "0x400045F")]
		private const string InternationalDomain = "mtu1xp.vivox.com";

		[Token(Token = "0x4000460")]
		private const string InternationalIssuer = "90709-hyper-41994-udash";

		[Token(Token = "0x4000461")]
		public const string Server = "https://unity.vivox.com/appconfig/90709-hyper-41994-udash";

		[Token(Token = "0x4000462")]
		public const string Domain = "mtu1xp.vivox.com";

		[Token(Token = "0x4000463")]
		public const string Issuer = "90709-hyper-41994-udash";
	}
	[Token(Token = "0x20000DB")]
	public enum IndicatorStatus
	{
		[Token(Token = "0x4000465")]
		NotConnected,
		[Token(Token = "0x4000466")]
		Talking,
		[Token(Token = "0x4000467")]
		NotTalking,
		[Token(Token = "0x4000468")]
		Muted,
		[Token(Token = "0x4000469")]
		RemotePlayerNoInChannel,
		[Token(Token = "0x400046A")]
		LocalPlayerNotInChannel
	}
	[Token(Token = "0x20000DC")]
	public class VoiceManager : SingletonMonoBehaviour<VoiceManager>
	{
		[Token(Token = "0x20000DD")]
		public enum ConnectionState
		{
			[Token(Token = "0x4000485")]
			NotInChannel,
			[Token(Token = "0x4000486")]
			Connecting,
			[Token(Token = "0x4000487")]
			InChannel,
			[Token(Token = "0x4000488")]
			FailedToConnect,
			[Token(Token = "0x4000489")]
			DisabledByModifier
		}

		[Token(Token = "0x20000DE")]
		public delegate void LocalMuteChangedHandler(bool value);

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<VivoxUnity.LoginState> LoginStateChanged;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<IChannelSession> ChannelChangedEvent;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<IChannelSession> ChannelAudioStateChangedEvent;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<IAudioDevice> MicrophoneChangedEvent;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _enableDebug;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> DeviceNames;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> DeviceKeys;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, VoiceChannel> _channelSessions;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly VivoxActionQueue Actions;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Account _account;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static VoiceChannel _teamChannelFallback;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static VoiceChannel _globalChannelFallback;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VoiceChannel TeamChannel;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VoiceChannel GlobalChannel;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isShuttingDown;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float? _reconnectTimer;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UserSettings _userSettings;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _lastPushToTalkState;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool _isMicrophoneAvailable;

		[Token(Token = "0x17000052")]
		public VoiceChatState VoiceChatState
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x105A218", Offset = "0x105A218", VA = "0x105A218")]
			[CompilerGenerated]
			get
			{
				return default(VoiceChatState);
			}
			[Token(Token = "0x6000332")]
			[Address(RVA = "0x105A220", Offset = "0x105A220", VA = "0x105A220")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public ILoginSession LoginSession
		{
			[Token(Token = "0x6000333")]
			[Address(RVA = "0x105A228", Offset = "0x105A228", VA = "0x105A228")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x105A230", Offset = "0x105A230", VA = "0x105A230")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public VivoxUnity.LoginState LoginState
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0x105A238", Offset = "0x105A238", VA = "0x105A238")]
			[CompilerGenerated]
			get
			{
				return default(VivoxUnity.LoginState);
			}
			[Token(Token = "0x6000336")]
			[Address(RVA = "0x105A240", Offset = "0x105A240", VA = "0x105A240")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public ConnectionRecoveryState RecoveryState
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0x105A248", Offset = "0x105A248", VA = "0x105A248")]
			[CompilerGenerated]
			get
			{
				return default(ConnectionRecoveryState);
			}
			[Token(Token = "0x6000338")]
			[Address(RVA = "0x105A250", Offset = "0x105A250", VA = "0x105A250")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Dictionary<string, VoiceChannel> ChannelSessions
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0x105A258", Offset = "0x105A258", VA = "0x105A258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		public bool IsLoggedIn
		{
			[Token(Token = "0x600033A")]
			[Address(RVA = "0x105A260", Offset = "0x105A260", VA = "0x105A260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public bool IsMuted
		{
			[Token(Token = "0x600033B")]
			[Address(RVA = "0x105A294", Offset = "0x105A294", VA = "0x105A294")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600033C")]
			[Address(RVA = "0x105A29C", Offset = "0x105A29C", VA = "0x105A29C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public string ActiveMicrophone
		{
			[Token(Token = "0x600033D")]
			[Address(RVA = "0x105A2A8", Offset = "0x105A2A8", VA = "0x105A2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public bool IsClientInitialized
		{
			[Token(Token = "0x600033E")]
			[Address(RVA = "0x105A498", Offset = "0x105A498", VA = "0x105A498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005B")]
		public string UnityID
		{
			[Token(Token = "0x600033F")]
			[Address(RVA = "0x105A614", Offset = "0x105A614", VA = "0x105A614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public string EnvironmentID
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0x105A69C", Offset = "0x105A69C", VA = "0x105A69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		public bool IsPushToTalkEnabled
		{
			[Token(Token = "0x6000341")]
			[Address(RVA = "0x105A788", Offset = "0x105A788", VA = "0x105A788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005E")]
		public bool ShowMicrophoneIndicator
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0x105A7D4", Offset = "0x105A7D4", VA = "0x105A7D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005F")]
		public float MicrophoneLevel
		{
			[Token(Token = "0x6000343")]
			[Address(RVA = "0x105A8C4", Offset = "0x105A8C4", VA = "0x105A8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000003")]
		public static event LocalMuteChangedHandler LocalMuteChangedEvent
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0x105A060", Offset = "0x105A060", VA = "0x105A060")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000330")]
			[Address(RVA = "0x105A13C", Offset = "0x105A13C", VA = "0x105A13C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x105A9B8", Offset = "0x105A9B8", VA = "0x105A9B8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void Init()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x105AA58", Offset = "0x105AA58", VA = "0x105AA58")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x105AB9C", Offset = "0x105AB9C", VA = "0x105AB9C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x105B5BC", Offset = "0x105B5BC", VA = "0x105B5BC", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x105B758", Offset = "0x105B758", VA = "0x105B758")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x105B9EC", Offset = "0x105B9EC", VA = "0x105B9EC")]
		public void InitializeSelectedMicrophone()
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x105B1C8", Offset = "0x105B1C8", VA = "0x105B1C8")]
		private void AccountManagerOnUserDataUpdatedEvent(UserResponse userResponse)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x105C78C", Offset = "0x105C78C", VA = "0x105C78C")]
		public void Login(string token)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x105CC84", Offset = "0x105CC84", VA = "0x105CC84")]
		public static void SetMicrophoneAvailable(bool isAvailable)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x105BAE0", Offset = "0x105BAE0", VA = "0x105BAE0")]
		public void SetMicrophone(int index)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x105BEC8", Offset = "0x105BEC8", VA = "0x105BEC8")]
		public void SetMicrophone(IAudioDevice device)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x105CCE8", Offset = "0x105CCE8", VA = "0x105CCE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x105D284", Offset = "0x105D284", VA = "0x105D284", Slot = "6")]
		public virtual void Disconnect()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x105B75C", Offset = "0x105B75C", VA = "0x105B75C")]
		private void Shutdown()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x105D718", Offset = "0x105D718", VA = "0x105D718")]
		public void TryReconnect(float delay = 0f)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x105D7A8", Offset = "0x105D7A8", VA = "0x105D7A8", Slot = "7")]
		protected virtual void ConnectVoiceAfterLogin()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x105D088", Offset = "0x105D088", VA = "0x105D088")]
		private void ReconnectVoice()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x105DB14", Offset = "0x105DB14", VA = "0x105DB14")]
		public void ConnectToChannel(string channelName, string channelToken, VoiceChannelID channelID, [Optional] Channel3DProperties channel3DProperties)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x105DFE4", Offset = "0x105DFE4", VA = "0x105DFE4")]
		public void DisconnectFromAllChannels(VoiceChannelType type = VoiceChannelType.All)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x105E444", Offset = "0x105E444", VA = "0x105E444")]
		public void Update3DPosition(Transform listener, Transform speaker)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x105D49C", Offset = "0x105D49C", VA = "0x105D49C")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x105C2DC", Offset = "0x105C2DC", VA = "0x105C2DC")]
		public void SetVolume(float value)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x105E7AC", Offset = "0x105E7AC", VA = "0x105E7AC", Slot = "8")]
		public virtual void SetJoinMute()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x105C4DC", Offset = "0x105C4DC", VA = "0x105C4DC")]
		public void SetMute(bool isMuted)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x105E824", Offset = "0x105E824", VA = "0x105E824")]
		public bool IsOtherUserMuted(string unityID)
		{
			return default(bool);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x105E8AC", Offset = "0x105E8AC", VA = "0x105E8AC")]
		public void SetOtherUserMute(string unityID, bool isMuted)
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x105EC38", Offset = "0x105EC38", VA = "0x105EC38")]
		public void ToggleUserMute(string unityID)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x105E9A0", Offset = "0x105E9A0", VA = "0x105E9A0")]
		public void SetOtherUserMute(IParticipant participant, bool isMuted)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x105EE14", Offset = "0x105EE14", VA = "0x105EE14")]
		public void SetOtherUserVolume(string unityID, int volume)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x105F020", Offset = "0x105F020", VA = "0x105F020")]
		public float GetOtherUserVolume(string playerUnityID)
		{
			return default(float);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x105EF14", Offset = "0x105EF14", VA = "0x105EF14")]
		public void SetOtherUserVolume(IParticipant participant, int volume)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x105F0A8", Offset = "0x105F0A8", VA = "0x105F0A8")]
		public void SetUserSettings(string unityID)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x105EBDC", Offset = "0x105EBDC", VA = "0x105EBDC")]
		private void SaveUserSettings()
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x105AABC", Offset = "0x105AABC", VA = "0x105AABC")]
		private void LoadUsersSettings()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x105F164", Offset = "0x105F164", VA = "0x105F164")]
		public void OnLoginSessionPropertyChanged(object sender, PropertyChangedEventArgs propertyChangedEventArgs)
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x105F448", Offset = "0x105F448", VA = "0x105F448")]
		public void SetChannel(VoiceChannelID id, VoiceChannel channelSession)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x105CFA8", Offset = "0x105CFA8", VA = "0x105CFA8")]
		private void OnPushToTalkPressed()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x105D018", Offset = "0x105D018", VA = "0x105D018")]
		private void OnPushToTalkReleased()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x105E614", Offset = "0x105E614", VA = "0x105E614")]
		private void TryDeleteChannelSession(ILoginSession session, ChannelId channel)
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x105F580", Offset = "0x105F580", VA = "0x105F580")]
		public static void ValidateArgs(string functionName, object[] arguments)
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x105ADC4", Offset = "0x105ADC4", VA = "0x105ADC4")]
		public void RefreshInputDevices([Optional] Action callback)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x105F660", Offset = "0x105F660", VA = "0x105F660")]
		public IndicatorStatus GetSpeakingStatus(string unityID, out bool inSharedChannel)
		{
			return default(IndicatorStatus);
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x105F7C0", Offset = "0x105F7C0", VA = "0x105F7C0")]
		public IndicatorStatus GetSpeakingStatus(string unityID, NetCharacterBehaviour character, string apiID, out bool inSharedChannel)
		{
			return default(IndicatorStatus);
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x105FB38", Offset = "0x105FB38", VA = "0x105FB38")]
		public VoiceManager()
		{
		}
	}
}
namespace Breachers.Voice.Actions
{
	[Token(Token = "0x20000E1")]
	public class AwaitLoginAction : VivoxAction
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x105CC7C", Offset = "0x105CC7C", VA = "0x105CC7C")]
		public AwaitLoginAction()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x106110C", Offset = "0x106110C", VA = "0x106110C", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x10611F4", Offset = "0x10611F4", VA = "0x10611F4", Slot = "6")]
		public override void OnFinished()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x10611F8", Offset = "0x10611F8", VA = "0x10611F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E2")]
	public class ChannelConnectAction : VivoxAction
	{
		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VoiceChannel _voiceChannel;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _channelToken;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _wasConnecting;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Timer _timeOutTimer;

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x105DD48", Offset = "0x105DD48", VA = "0x105DD48")]
		public ChannelConnectAction(VoiceChannel voiceChannel, string channelToken, VoiceChannelID id)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1061238", Offset = "0x1061238", VA = "0x1061238", Slot = "4")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1061678", Offset = "0x1061678", VA = "0x1061678")]
		private void SessionOnPropertyChanged(object sender, PropertyChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1061890", Offset = "0x1061890", VA = "0x1061890", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1061564", Offset = "0x1061564", VA = "0x1061564")]
		private void TryConnect()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1061930", Offset = "0x1061930", VA = "0x1061930", Slot = "6")]
		public override void OnFinished()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1061A70", Offset = "0x1061A70", VA = "0x1061A70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E3")]
	public struct Timer
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double? _targetTime;

		[Token(Token = "0x17000060")]
		public bool IsRunning
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x1061C70", Offset = "0x1061C70", VA = "0x1061C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000061")]
		public static Timer None
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x1061CEC", Offset = "0x1061CEC", VA = "0x1061CEC")]
			get
			{
				return default(Timer);
			}
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1059AF8", Offset = "0x1059AF8", VA = "0x1059AF8")]
		public static Timer CreateFromSeconds(float duration)
		{
			return default(Timer);
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1059A98", Offset = "0x1059A98", VA = "0x1059A98")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1061CF8", Offset = "0x1061CF8", VA = "0x1061CF8")]
		public double? RemainingTime()
		{
			return null;
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1059B6C", Offset = "0x1059B6C", VA = "0x1059B6C")]
		public bool Expired()
		{
			return default(bool);
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1061DA0", Offset = "0x1061DA0", VA = "0x1061DA0")]
		public bool ExpiredOrNotRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1061DC8", Offset = "0x1061DC8", VA = "0x1061DC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E4")]
	public class ChannelDisconnectAction : VivoxAction
	{
		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VoiceChannel _voiceChannel;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _channelName;

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1061E88", Offset = "0x1061E88", VA = "0x1061E88")]
		public ChannelDisconnectAction(VoiceChannel voiceChannel, VoiceChannelID id)
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1061F6C", Offset = "0x1061F6C", VA = "0x1061F6C", Slot = "4")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1062244", Offset = "0x1062244", VA = "0x1062244")]
		private void SessionOnPropertyChanged(object sender, PropertyChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x106253C", Offset = "0x106253C", VA = "0x106253C", Slot = "6")]
		public override void OnFinished()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1062648", Offset = "0x1062648", VA = "0x1062648", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x10626C4", Offset = "0x10626C4", VA = "0x10626C4", Slot = "5")]
		public override void Update()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class DisconnectAllAction : VivoxAction
	{
		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _clearConnections;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoiceChannel> _channels;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _disconnects;

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x105E14C", Offset = "0x105E14C", VA = "0x105E14C")]
		public DisconnectAllAction(VoiceChannelID id, bool clearConnections = false)
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x10626C8", Offset = "0x10626C8", VA = "0x10626C8", Slot = "4")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x10629E0", Offset = "0x10629E0", VA = "0x10629E0")]
		private void SessionOnPropertyChanged(object sender, PropertyChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1062C98", Offset = "0x1062C98", VA = "0x1062C98", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1062C9C", Offset = "0x1062C9C", VA = "0x1062C9C", Slot = "6")]
		public override void OnFinished()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1062E3C", Offset = "0x1062E3C", VA = "0x1062E3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace Breachers.Networking
{
	[Token(Token = "0x20000E6")]
	public class NetVoiceHandler : EntityBehaviour<IVoiceState>
	{
		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VoiceManager _voiceManager;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Breachers.Voice.Actions.Timer _3dPositionUpdateTimer;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetVoiceHandler Active;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasCharacter;

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x1062F08", Offset = "0x1062F08", VA = "0x1062F08", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x106326C", Offset = "0x106326C", VA = "0x106326C", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1063394", Offset = "0x1063394", VA = "0x1063394")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1063424", Offset = "0x1063424", VA = "0x1063424")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1063490", Offset = "0x1063490", VA = "0x1063490")]
		private void UpdatePlayer3DPosition()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1063530", Offset = "0x1063530", VA = "0x1063530")]
		private bool TryGetSpeakerLocation(out Transform speakerLocation)
		{
			return default(bool);
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x106366C", Offset = "0x106366C", VA = "0x106366C")]
		private void OnControlOfCharacterLost(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x10636F8", Offset = "0x10636F8", VA = "0x10636F8")]
		private void OnControlOfCharacterGained(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x10630F8", Offset = "0x10630F8", VA = "0x10630F8")]
		private void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x105DA58", Offset = "0x105DA58", VA = "0x105DA58")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x10637F4", Offset = "0x10637F4", VA = "0x10637F4")]
		private void InitHost()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x10638BC", Offset = "0x10638BC", VA = "0x10638BC")]
		private void InitClient()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x10639E4", Offset = "0x10639E4", VA = "0x10639E4")]
		private string StateAuth_GetChannelNameForUser(BoltConnection connection, VoiceChannelType preferredChannels, VoiceChannelType channel)
		{
			return null;
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x105D8E0", Offset = "0x105D8E0", VA = "0x105D8E0")]
		public void ConnectToChannels(VoiceChannelType userChannels, string userID, string environmentID)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1064090", Offset = "0x1064090", VA = "0x1064090")]
		private void StateAuth_ConnectHost(VoiceChannelType userChannels, string userID, string environmentID)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x106413C", Offset = "0x106413C", VA = "0x106413C")]
		private Channel3DProperties GetChannel3DProperties(NetVoiceChannelProperties properties)
		{
			return null;
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x10641B8", Offset = "0x10641B8", VA = "0x10641B8")]
		public void RPC_RequestLoginToken(VoiceRequestLoginToken evnt)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x10641BC", Offset = "0x10641BC", VA = "0x10641BC")]
		public void RPC_SendLoginToken(VoiceSendLoginToken evnt)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x10641EC", Offset = "0x10641EC", VA = "0x10641EC")]
		public void RPC_RequestChannelToken(VoiceRequestChannelToken evnt)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x10642D8", Offset = "0x10642D8", VA = "0x10642D8")]
		public void RPC_DisconnectPlayerFromChannel()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x10642F4", Offset = "0x10642F4", VA = "0x10642F4")]
		public void RPC_SendChannelToken(VoiceSendChannelToken evnt)
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1064580", Offset = "0x1064580", VA = "0x1064580")]
		private void ConnectToGlobalChannel(string channelName, string channelToken, int audioDistance, int conversationalDistance, float audioFadeIntensity, AudioFadeModel audioFadeModel)
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x10643E0", Offset = "0x10643E0", VA = "0x10643E0")]
		private void ConnectToTeamChannel(string channelName, string channelToken)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x10636FC", Offset = "0x10636FC", VA = "0x10636FC")]
		private void OnCharacterTeamChanged(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1064874", Offset = "0x1064874", VA = "0x1064874")]
		private void OnMatchTypeChangedInternal()
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x106479C", Offset = "0x106479C", VA = "0x106479C")]
		public void ConnectToChannels(VoiceChannelType channel)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1064920", Offset = "0x1064920", VA = "0x1064920")]
		public NetVoiceHandler()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[BoltGlobalBehaviour]
	public class VoiceClientCallbacks : GlobalEventListener
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x1064968", Offset = "0x1064968", VA = "0x1064968", Slot = "143")]
		public override void OnEvent(VoiceRequestLoginToken evnt)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x10649B8", Offset = "0x10649B8", VA = "0x10649B8", Slot = "145")]
		public override void OnEvent(VoiceRequestChannelToken evnt)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1064A10", Offset = "0x1064A10", VA = "0x1064A10", Slot = "144")]
		public override void OnEvent(VoiceSendLoginToken evnt)
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x1064A68", Offset = "0x1064A68", VA = "0x1064A68", Slot = "146")]
		public override void OnEvent(VoiceDisconnectPlayerFromChannel evnt)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1064AB8", Offset = "0x1064AB8", VA = "0x1064AB8", Slot = "147")]
		public override void OnEvent(VoiceSendChannelToken evnt)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1064B10", Offset = "0x1064B10", VA = "0x1064B10")]
		public VoiceClientCallbacks()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20000E8")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400049D")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400049E")]
		public const string Tab = "    ";

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1064B18", Offset = "0x1064B18", VA = "0x1064B18")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x1064BA4", Offset = "0x1064BA4", VA = "0x1064BA4")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x1064C38", Offset = "0x1064C38", VA = "0x1064C38")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1064CC4", Offset = "0x1064CC4", VA = "0x1064CC4")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1064D50", Offset = "0x1064D50", VA = "0x1064D50")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class CAPI
	{
		[Token(Token = "0x20000EA")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20000EB")]
		public enum Result
		{
			[Token(Token = "0x40004AA")]
			Success = 0,
			[Token(Token = "0x40004AB")]
			Failure = -1000,
			[Token(Token = "0x40004AC")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40004AD")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40004AE")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40004AF")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40004B0")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40004B1")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40004B2")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20000EC")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x106C2D8", Offset = "0x106C2D8", VA = "0x106C2D8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x400049F")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40004A7")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1064E3C", Offset = "0x1064E3C", VA = "0x1064E3C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1064EC8", Offset = "0x1064EC8", VA = "0x1064EC8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x10650E4", Offset = "0x10650E4", VA = "0x10650E4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x10651BC", Offset = "0x10651BC", VA = "0x10651BC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1065220", Offset = "0x1065220", VA = "0x1065220")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1065288", Offset = "0x1065288", VA = "0x1065288")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1065304", Offset = "0x1065304", VA = "0x1065304")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1065434", Offset = "0x1065434", VA = "0x1065434")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x10654B0", Offset = "0x10654B0", VA = "0x10654B0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x10655E0", Offset = "0x10655E0", VA = "0x10655E0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x106565C", Offset = "0x106565C", VA = "0x106565C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x10656D8", Offset = "0x10656D8", VA = "0x10656D8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1065754", Offset = "0x1065754", VA = "0x1065754")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x10657D0", Offset = "0x10657D0", VA = "0x10657D0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1065854", Offset = "0x1065854", VA = "0x1065854")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x10658D8", Offset = "0x10658D8", VA = "0x10658D8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x106595C", Offset = "0x106595C", VA = "0x106595C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x10659D8", Offset = "0x10659D8", VA = "0x10659D8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1065A54", Offset = "0x1065A54", VA = "0x1065A54")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1065AD8", Offset = "0x1065AD8", VA = "0x1065AD8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1065B5C", Offset = "0x1065B5C", VA = "0x1065B5C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1065BE0", Offset = "0x1065BE0", VA = "0x1065BE0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1065C5C", Offset = "0x1065C5C", VA = "0x1065C5C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1065CF0", Offset = "0x1065CF0", VA = "0x1065CF0")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1065D58", Offset = "0x1065D58", VA = "0x1065D58")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1065DF4", Offset = "0x1065DF4", VA = "0x1065DF4")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1065EA8", Offset = "0x1065EA8", VA = "0x1065EA8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1065F6C", Offset = "0x1065F6C", VA = "0x1065F6C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1065FF8", Offset = "0x1065FF8", VA = "0x1065FF8")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x106607C", Offset = "0x106607C", VA = "0x106607C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1066100", Offset = "0x1066100", VA = "0x1066100")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1066184", Offset = "0x1066184", VA = "0x1066184")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1066208", Offset = "0x1066208", VA = "0x1066208")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1066284", Offset = "0x1066284", VA = "0x1066284")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1066388", Offset = "0x1066388", VA = "0x1066388")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1066304", Offset = "0x1066304", VA = "0x1066304")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1066574", Offset = "0x1066574", VA = "0x1066574")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x10666D8", Offset = "0x10666D8", VA = "0x10666D8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60003E6")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1066754", Offset = "0x1066754", VA = "0x1066754")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x10669E8", Offset = "0x10669E8", VA = "0x10669E8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1066A64", Offset = "0x1066A64", VA = "0x1066A64")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1066BC8", Offset = "0x1066BC8", VA = "0x1066BC8")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1066C44", Offset = "0x1066C44", VA = "0x1066C44")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1066DA8", Offset = "0x1066DA8", VA = "0x1066DA8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1066E24", Offset = "0x1066E24", VA = "0x1066E24")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1066F88", Offset = "0x1066F88", VA = "0x1066F88")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1067004", Offset = "0x1067004", VA = "0x1067004")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1067168", Offset = "0x1067168", VA = "0x1067168")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x10671E4", Offset = "0x10671E4", VA = "0x10671E4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1067260", Offset = "0x1067260", VA = "0x1067260")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x10672EC", Offset = "0x10672EC", VA = "0x10672EC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1067368", Offset = "0x1067368", VA = "0x1067368")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1067520", Offset = "0x1067520", VA = "0x1067520")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x106765C", Offset = "0x106765C", VA = "0x106765C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x10674A4", Offset = "0x10674A4", VA = "0x10674A4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x10676D8", Offset = "0x10676D8", VA = "0x10676D8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1067754", Offset = "0x1067754", VA = "0x1067754")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x10677D8", Offset = "0x10677D8", VA = "0x10677D8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1067854", Offset = "0x1067854", VA = "0x1067854")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x10678D8", Offset = "0x10678D8", VA = "0x10678D8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1067954", Offset = "0x1067954", VA = "0x1067954")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x10679D0", Offset = "0x10679D0", VA = "0x10679D0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1067C18", Offset = "0x1067C18", VA = "0x1067C18")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1067C9C", Offset = "0x1067C9C", VA = "0x1067C9C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1067EB0", Offset = "0x1067EB0", VA = "0x1067EB0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1067F44", Offset = "0x1067F44", VA = "0x1067F44")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1068078", Offset = "0x1068078", VA = "0x1068078")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x10680F4", Offset = "0x10680F4", VA = "0x10680F4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1068170", Offset = "0x1068170", VA = "0x1068170")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x10682A8", Offset = "0x10682A8", VA = "0x10682A8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1068324", Offset = "0x1068324", VA = "0x1068324")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x106845C", Offset = "0x106845C", VA = "0x106845C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x10684D8", Offset = "0x10684D8", VA = "0x10684D8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x106855C", Offset = "0x106855C", VA = "0x106855C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x10685E0", Offset = "0x10685E0", VA = "0x10685E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1068664", Offset = "0x1068664", VA = "0x1068664")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x10686E0", Offset = "0x10686E0", VA = "0x10686E0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1068764", Offset = "0x1068764", VA = "0x1068764")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x10687E8", Offset = "0x10687E8", VA = "0x10687E8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x1068864", Offset = "0x1068864", VA = "0x1068864")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x10688E0", Offset = "0x10688E0", VA = "0x10688E0")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1068990", Offset = "0x1068990", VA = "0x1068990")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1068A14", Offset = "0x1068A14", VA = "0x1068A14")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1068A98", Offset = "0x1068A98", VA = "0x1068A98")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1068B14", Offset = "0x1068B14", VA = "0x1068B14")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1068B90", Offset = "0x1068B90", VA = "0x1068B90")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1068C0C", Offset = "0x1068C0C", VA = "0x1068C0C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1068CA0", Offset = "0x1068CA0", VA = "0x1068CA0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1068D2C", Offset = "0x1068D2C", VA = "0x1068D2C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1068DB8", Offset = "0x1068DB8", VA = "0x1068DB8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1068E44", Offset = "0x1068E44", VA = "0x1068E44")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1068ED8", Offset = "0x1068ED8", VA = "0x1068ED8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1068F6C", Offset = "0x1068F6C", VA = "0x1068F6C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1068FE8", Offset = "0x1068FE8", VA = "0x1068FE8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1069064", Offset = "0x1069064", VA = "0x1069064")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x106919C", Offset = "0x106919C", VA = "0x106919C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1069218", Offset = "0x1069218", VA = "0x1069218")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1069350", Offset = "0x1069350", VA = "0x1069350")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x10693CC", Offset = "0x10693CC", VA = "0x10693CC")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x10694EC", Offset = "0x10694EC", VA = "0x10694EC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1069568", Offset = "0x1069568", VA = "0x1069568")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x106971C", Offset = "0x106971C", VA = "0x106971C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x10699C4", Offset = "0x10699C4", VA = "0x10699C4")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x10696A0", Offset = "0x10696A0", VA = "0x10696A0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1069A48", Offset = "0x1069A48", VA = "0x1069A48")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x1069AC4", Offset = "0x1069AC4", VA = "0x1069AC4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1069B48", Offset = "0x1069B48", VA = "0x1069B48")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1069BCC", Offset = "0x1069BCC", VA = "0x1069BCC")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1069C50", Offset = "0x1069C50", VA = "0x1069C50")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1069CEC", Offset = "0x1069CEC", VA = "0x1069CEC")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1069D88", Offset = "0x1069D88", VA = "0x1069D88")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1069E1C", Offset = "0x1069E1C", VA = "0x1069E1C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1069E98", Offset = "0x1069E98", VA = "0x1069E98")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1069F14", Offset = "0x1069F14", VA = "0x1069F14")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1069F90", Offset = "0x1069F90", VA = "0x1069F90")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000434")]
		[Address(RVA = "0x106A00C", Offset = "0x106A00C", VA = "0x106A00C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000435")]
		[Address(RVA = "0x106A088", Offset = "0x106A088", VA = "0x106A088")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x106A1AC", Offset = "0x106A1AC", VA = "0x106A1AC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000437")]
		[Address(RVA = "0x106A238", Offset = "0x106A238", VA = "0x106A238")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x106A2B4", Offset = "0x106A2B4", VA = "0x106A2B4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x106A308", Offset = "0x106A308", VA = "0x106A308")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x106A43C", Offset = "0x106A43C", VA = "0x106A43C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x106A4C0", Offset = "0x106A4C0", VA = "0x106A4C0")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x106A5F4", Offset = "0x106A5F4", VA = "0x106A5F4")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x106A678", Offset = "0x106A678", VA = "0x106A678")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x106A70C", Offset = "0x106A70C", VA = "0x106A70C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600043F")]
		[Address(RVA = "0x106AA44", Offset = "0x106AA44", VA = "0x106AA44")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x106AAC0", Offset = "0x106AAC0", VA = "0x106AAC0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x106AB4C", Offset = "0x106AB4C", VA = "0x106AB4C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x106B2A0", Offset = "0x106B2A0", VA = "0x106B2A0")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x106B31C", Offset = "0x106B31C", VA = "0x106B31C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x1064DE4", Offset = "0x1064DE4", VA = "0x1064DE4")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x106B3A8", Offset = "0x106B3A8", VA = "0x106B3A8")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x106B428", Offset = "0x106B428", VA = "0x106B428")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x106B4A4", Offset = "0x106B4A4", VA = "0x106B4A4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x106B520", Offset = "0x106B520", VA = "0x106B520")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x106B59C", Offset = "0x106B59C", VA = "0x106B59C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x106BEF4", Offset = "0x106BEF4", VA = "0x106BEF4")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x106BF70", Offset = "0x106BF70", VA = "0x106BF70")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x106C3B0", Offset = "0x106C3B0", VA = "0x106C3B0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x106C254", Offset = "0x106C254", VA = "0x106C254")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x106C418", Offset = "0x106C418", VA = "0x106C418")]
		public CAPI()
		{
		}
	}
}
namespace HyperDash
{
	[Token(Token = "0x20000ED")]
	public class LogMap : MonoBehaviour
	{
		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _ref;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder sb;

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x106C6F8", Offset = "0x106C6F8", VA = "0x106C6F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x106CA54", Offset = "0x106CA54", VA = "0x106CA54")]
		private void LogGo(StringBuilder sb, int depth, GameObject go)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x106CDEC", Offset = "0x106CDEC", VA = "0x106CDEC")]
		public LogMap()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class NetworkHud : MonoBehaviour
	{
		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _warningColor;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _severeColor;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpriteRenderer Rewind;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpriteRenderer PacketLoss;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpriteRenderer Connection;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpriteRenderer Server;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int RewindHideDelay;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int PacketLossHideDelay;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int ConnectionHideDelay;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int ServerPerformanceHideDelay;

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x106CE60", Offset = "0x106CE60", VA = "0x106CE60")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x106D064", Offset = "0x106D064", VA = "0x106D064")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x106D150", Offset = "0x106D150", VA = "0x106D150")]
		private void OnGameStateChangedEvent(GameManager gm, GameManager.GameStateChangedArgs arg)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x106D01C", Offset = "0x106D01C", VA = "0x106D01C")]
		private void SetObject(GameState gameState)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x106CFA8", Offset = "0x106CFA8", VA = "0x106CFA8")]
		private void SetAllSprites(bool active)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x106D158", Offset = "0x106D158", VA = "0x106D158")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x106D4DC", Offset = "0x106D4DC", VA = "0x106D4DC")]
		public NetworkHud()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class AccountManager : MonoBehaviour
	{
		[Token(Token = "0x20000F0")]
		public delegate void LoginDelegate(AccountManager sender, Response<LoginResponse> response);

		[Token(Token = "0x20000F1")]
		public delegate void UserCreatedDelegate(AccountManager sender, Response<CreateUserResponse> response);

		[Token(Token = "0x20000F2")]
		public delegate void UserDataChangedDelegate(AccountManager sender, Response<ChangeUserDataResponse> response);

		[Token(Token = "0x20000F3")]
		public delegate void UserDataUpdatedDelegate(UserResponse userResponse);

		[Token(Token = "0x40004C4")]
		public const int MaxNameLength = 14;

		[Token(Token = "0x40004C5")]
		public const int MaxClanTagLength = 4;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastPauseTime;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UserResponse _user;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StatisticsResponse _statisticsResponse;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Appearance _appearance;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InventoryResponse _inventory;

		[Token(Token = "0x40004CB")]
		private const float AfkTime = 900f;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isFetchingStatistics;

		[Token(Token = "0x17000062")]
		public static AccountManager Instance
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x106D88C", Offset = "0x106D88C", VA = "0x106D88C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000469")]
			[Address(RVA = "0x106D8E4", Offset = "0x106D8E4", VA = "0x106D8E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public int PlayerNameLock
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x106D944", Offset = "0x106D944", VA = "0x106D944")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000064")]
		public string PlayerName
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x106D960", Offset = "0x106D960", VA = "0x106D960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public string UserId
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0x106D9B4", Offset = "0x106D9B4", VA = "0x106D9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		public string ClanTag
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x106D9D0", Offset = "0x106D9D0", VA = "0x106D9D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public int Level
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x106D9EC", Offset = "0x106D9EC", VA = "0x106D9EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000068")]
		public string Hash
		{
			[Token(Token = "0x600046F")]
			[Address(RVA = "0x106DA08", Offset = "0x106DA08", VA = "0x106DA08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public string SupportCode
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0x106DA24", Offset = "0x106DA24", VA = "0x106DA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public UserResponse User
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x106DA40", Offset = "0x106DA40", VA = "0x106DA40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000472")]
			[Address(RVA = "0x106DA48", Offset = "0x106DA48", VA = "0x106DA48")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public Appearance Appearance
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x106DBFC", Offset = "0x106DBFC", VA = "0x106DBFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public InventoryResponse Inventory
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0x106DC04", Offset = "0x106DC04", VA = "0x106DC04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000475")]
			[Address(RVA = "0x106DC0C", Offset = "0x106DC0C", VA = "0x106DC0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public LoginState LoginState
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0x106DC14", Offset = "0x106DC14", VA = "0x106DC14")]
			[CompilerGenerated]
			get
			{
				return default(LoginState);
			}
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x106DC1C", Offset = "0x106DC1C", VA = "0x106DC1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public Response<LoginResponse> LoginResponse
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x106DC24", Offset = "0x106DC24", VA = "0x106DC24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000479")]
			[Address(RVA = "0x106DC2C", Offset = "0x106DC2C", VA = "0x106DC2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public bool IsNewAccount
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x106DC34", Offset = "0x106DC34", VA = "0x106DC34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000070")]
		public static IapShop IapShop
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0x106DC54", Offset = "0x106DC54", VA = "0x106DC54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public static ItemShop ItemShop
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x106DCAC", Offset = "0x106DCAC", VA = "0x106DCAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		public event LoginDelegate LoginEvent
		{
			[Token(Token = "0x6000460")]
			[Address(RVA = "0x106D4E4", Offset = "0x106D4E4", VA = "0x106D4E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000461")]
			[Address(RVA = "0x106D580", Offset = "0x106D580", VA = "0x106D580")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event UserCreatedDelegate UserCreatedEvent
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0x106D61C", Offset = "0x106D61C", VA = "0x106D61C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000463")]
			[Address(RVA = "0x106D6B8", Offset = "0x106D6B8", VA = "0x106D6B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event UserDataChangedDelegate UserDataChangedEvent
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0x106D754", Offset = "0x106D754", VA = "0x106D754")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000465")]
			[Address(RVA = "0x106D7F0", Offset = "0x106D7F0", VA = "0x106D7F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public static event UserDataUpdatedDelegate UserDataUpdatedEvent
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0x105B0F0", Offset = "0x105B0F0", VA = "0x105B0F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000467")]
			[Address(RVA = "0x105B680", Offset = "0x105B680", VA = "0x105B680")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		private event Action<StatisticsResponse, string> StatisticsFetch
		{
			[Token(Token = "0x6000493")]
			[Address(RVA = "0x106FC00", Offset = "0x106FC00", VA = "0x106FC00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x106FCB0", Offset = "0x106FCB0", VA = "0x106FCB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x106DD04", Offset = "0x106DD04", VA = "0x106DD04")]
		private void Awake()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x106DE1C", Offset = "0x106DE1C", VA = "0x106DE1C")]
		private void Start()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x106E00C", Offset = "0x106E00C", VA = "0x106E00C")]
		private void StoreApiOnInitializedEvent(IStore sender, bool success)
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x106E360", Offset = "0x106E360", VA = "0x106E360")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x106E45C", Offset = "0x106E45C", VA = "0x106E45C")]
		protected void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x106E554", Offset = "0x106E554", VA = "0x106E554")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x106E220", Offset = "0x106E220", VA = "0x106E220")]
		public void Login()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x106E63C", Offset = "0x106E63C", VA = "0x106E63C")]
		public void MarkDone()
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x106E654", Offset = "0x106E654", VA = "0x106E654")]
		public void SkipLogin()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x106E210", Offset = "0x106E210", VA = "0x106E210")]
		[ContextMenu("MarkLoginRequired")]
		public void MarkLoginRequired()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x106E6D4", Offset = "0x106E6D4", VA = "0x106E6D4")]
		public void MarkForRefreshStats()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x106E6E0", Offset = "0x106E6E0", VA = "0x106E6E0")]
		private void OnLoginCallback(Response<LoginResponse> response)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x106F090", Offset = "0x106F090", VA = "0x106F090")]
		public void CreateUser(string playerName, string clanTag)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x106F178", Offset = "0x106F178", VA = "0x106F178")]
		private void OnCreateUserCallback(Response<CreateUserResponse> response)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x106F5EC", Offset = "0x106F5EC", VA = "0x106F5EC")]
		public void ChangeUserData(string username, string clanTag)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x106F69C", Offset = "0x106F69C", VA = "0x106F69C")]
		private void OnChangeUserDataCallback(Response<ChangeUserDataResponse> response)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x106F704", Offset = "0x106F704", VA = "0x106F704")]
		public void UpdateAppearance(Appearance newAppearance, [Optional] Action<Response<ChangeAppearanceResponse>> callback)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x106F804", Offset = "0x106F804", VA = "0x106F804")]
		private void OnUpdateAppearanceCallback(Response<ChangeAppearanceResponse> response)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x106F8B8", Offset = "0x106F8B8", VA = "0x106F8B8")]
		public static string MakeNameSafe(string username)
		{
			return null;
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x106F99C", Offset = "0x106F99C", VA = "0x106F99C")]
		public static bool CheckIfNameSafe(string username)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x106FABC", Offset = "0x106FABC", VA = "0x106FABC")]
		public static string MakeClanTagSafe(string clanTag)
		{
			return null;
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x106FB94", Offset = "0x106FB94", VA = "0x106FB94")]
		public static bool CheckIfClanTagSafe(string clanTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x106FD60", Offset = "0x106FD60", VA = "0x106FD60")]
		public void GetStatistics(Action<StatisticsResponse, string> callback)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x106EFAC", Offset = "0x106EFAC", VA = "0x106EFAC")]
		public void HandleUnlocks(List<UnlockResponse> unlocks)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x106DAF0", Offset = "0x106DAF0", VA = "0x106DAF0")]
		private void CheckUserResponseAchievements()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x106FEE0", Offset = "0x106FEE0", VA = "0x106FEE0")]
		public AccountManager()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class AdminController : MonoBehaviour
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x10706A8", Offset = "0x10706A8", VA = "0x10706A8")]
		public void Update()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x10706AC", Offset = "0x10706AC", VA = "0x10706AC")]
		private void UpdateServerInput()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x107073C", Offset = "0x107073C", VA = "0x107073C")]
		public AdminController()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class AI_DashTarget : MonoBehaviour
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool HasGroundPositionA;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool HasGroundPositionB;

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1070744", Offset = "0x1070744", VA = "0x1070744")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x107082C", Offset = "0x107082C", VA = "0x107082C")]
		public AI_DashTarget()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class AI_Location : MonoBehaviour
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1070834", Offset = "0x1070834", VA = "0x1070834")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1070884", Offset = "0x1070884", VA = "0x1070884")]
		public AI_Location()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class AI_RailTarget : MonoBehaviour
	{
		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrindRail GrindRail;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 RailPosition;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 RailDirection;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double RailPercent;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool HasGroundPosition;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Distance;

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x107088C", Offset = "0x107088C", VA = "0x107088C")]
		public AI_RailTarget()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class Announcer : MonoBehaviour
	{
		[Token(Token = "0x20000FA")]
		private struct QueuedMessage
		{
			[Token(Token = "0x40004E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsSilence;

			[Token(Token = "0x40004E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float SilenceTime;

			[Token(Token = "0x40004E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Messages Message;
		}

		[Token(Token = "0x20000FB")]
		public enum Messages
		{
			[Token(Token = "0x40004EA")]
			match_1m_remaining,
			[Token(Token = "0x40004EB")]
			match_countdown_1,
			[Token(Token = "0x40004EC")]
			match_countdown_2,
			[Token(Token = "0x40004ED")]
			match_countdown_3,
			[Token(Token = "0x40004EE")]
			match_countdown_4,
			[Token(Token = "0x40004EF")]
			match_countdown_5,
			[Token(Token = "0x40004F0")]
			match_countdown_6,
			[Token(Token = "0x40004F1")]
			match_countdown_7,
			[Token(Token = "0x40004F2")]
			match_countdown_8,
			[Token(Token = "0x40004F3")]
			match_countdown_9,
			[Token(Token = "0x40004F4")]
			match_countdown_10,
			[Token(Token = "0x40004F5")]
			match_start_321_go,
			[Token(Token = "0x40004F6")]
			mlg,
			[Token(Token = "0x40004F7")]
			team_blue_captured,
			[Token(Token = "0x40004F8")]
			team_blue_winning,
			[Token(Token = "0x40004F9")]
			team_blue_won,
			[Token(Token = "0x40004FA")]
			team_red_captured,
			[Token(Token = "0x40004FB")]
			team_red_winning,
			[Token(Token = "0x40004FC")]
			team_red_won,
			[Token(Token = "0x40004FD")]
			take_off_headset,
			[Token(Token = "0x40004FE")]
			match_end,
			[Token(Token = "0x40004FF")]
			match_tie,
			[Token(Token = "0x4000500")]
			firstBlood,
			[Token(Token = "0x4000501")]
			team_blue_scores_in,
			[Token(Token = "0x4000502")]
			team_red_scores_in,
			[Token(Token = "0x4000503")]
			countered,
			[Token(Token = "0x4000504")]
			resetting_game,
			[Token(Token = "0x4000505")]
			team_blue_captured_point_a,
			[Token(Token = "0x4000506")]
			team_blue_captured_point_b,
			[Token(Token = "0x4000507")]
			team_blue_captured_point_c,
			[Token(Token = "0x4000508")]
			team_red_captured_point_a,
			[Token(Token = "0x4000509")]
			team_red_captured_point_b,
			[Token(Token = "0x400050A")]
			team_red_captured_point_c,
			[Token(Token = "0x400050B")]
			matchpoint,
			[Token(Token = "0x400050C")]
			team_blue_wins_in,
			[Token(Token = "0x400050D")]
			team_red_wins_in,
			[Token(Token = "0x400050E")]
			prepare_your_defences,
			[Token(Token = "0x400050F")]
			prepare_to_start,
			[Token(Token = "0x4000510")]
			checkpoint,
			[Token(Token = "0x4000511")]
			switching_sides,
			[Token(Token = "0x4000512")]
			overtime,
			[Token(Token = "0x4000513")]
			team_blue_wins_round,
			[Token(Token = "0x4000514")]
			team_red_wins_round,
			[Token(Token = "0x4000515")]
			go,
			[Token(Token = "0x4000516")]
			time_up,
			[Token(Token = "0x4000517")]
			match_start_321,
			[Token(Token = "0x4000518")]
			team_blue_scores,
			[Token(Token = "0x4000519")]
			team_red_scores,
			[Token(Token = "0x400051A")]
			dm_1_kill_remaining,
			[Token(Token = "0x400051B")]
			dm_2_kills_remaining,
			[Token(Token = "0x400051C")]
			dm_3_kills_remaining,
			[Token(Token = "0x400051D")]
			dm_10_kills_remaining,
			[Token(Token = "0x400051E")]
			dm_red_lead,
			[Token(Token = "0x400051F")]
			dm_blue_lead,
			[Token(Token = "0x4000520")]
			dm_yellow_lead,
			[Token(Token = "0x4000521")]
			dm_green_lead,
			[Token(Token = "0x4000522")]
			dm_purple_lead,
			[Token(Token = "0x4000523")]
			dm_orange_lead,
			[Token(Token = "0x4000524")]
			dm_black_lead,
			[Token(Token = "0x4000525")]
			dm_white_lead,
			[Token(Token = "0x4000526")]
			dm_cyan_lead,
			[Token(Token = "0x4000527")]
			dm_pink_lead,
			[Token(Token = "0x4000528")]
			dm_grey_lead,
			[Token(Token = "0x4000529")]
			dm_red_wins,
			[Token(Token = "0x400052A")]
			dm_blue_wins,
			[Token(Token = "0x400052B")]
			dm_yellow_wins,
			[Token(Token = "0x400052C")]
			dm_green_wins,
			[Token(Token = "0x400052D")]
			dm_purple_wins,
			[Token(Token = "0x400052E")]
			dm_orange_wins,
			[Token(Token = "0x400052F")]
			dm_black_wins,
			[Token(Token = "0x4000530")]
			dm_white_wins,
			[Token(Token = "0x4000531")]
			dm_cyan_wins,
			[Token(Token = "0x4000532")]
			dm_pink_wins,
			[Token(Token = "0x4000533")]
			dm_grey_wins,
			[Token(Token = "0x4000534")]
			suddendeath,
			[Token(Token = "0x4000535")]
			el_2_points_red_win,
			[Token(Token = "0x4000536")]
			el_3_points_red_win,
			[Token(Token = "0x4000537")]
			el_2_points_blue_win,
			[Token(Token = "0x4000538")]
			el_3_points_blue_win,
			[Token(Token = "0x4000539")]
			el_2_points_win,
			[Token(Token = "0x400053A")]
			el_3_points_win,
			[Token(Token = "0x400053B")]
			el_match_point_red,
			[Token(Token = "0x400053C")]
			el_match_point_blue,
			[Token(Token = "0x400053D")]
			el_match_0,
			[Token(Token = "0x400053E")]
			el_match_1,
			[Token(Token = "0x400053F")]
			el_match_2,
			[Token(Token = "0x4000540")]
			el_match_3,
			[Token(Token = "0x4000541")]
			el_match_4,
			[Token(Token = "0x4000542")]
			el_match_5,
			[Token(Token = "0x4000543")]
			el_match_6,
			[Token(Token = "0x4000544")]
			el_match_7,
			[Token(Token = "0x4000545")]
			el_match_8,
			[Token(Token = "0x4000546")]
			el_match_9,
			[Token(Token = "0x4000547")]
			el_match_10,
			[Token(Token = "0x4000548")]
			el_match_11,
			[Token(Token = "0x4000549")]
			el_match_12,
			[Token(Token = "0x400054A")]
			el_match_13,
			[Token(Token = "0x400054B")]
			el_match_14,
			[Token(Token = "0x400054C")]
			el_match_15,
			[Token(Token = "0x400054D")]
			el_match_16,
			[Token(Token = "0x400054E")]
			el_match_17,
			[Token(Token = "0x400054F")]
			el_match_18,
			[Token(Token = "0x4000550")]
			el_match_19,
			[Token(Token = "0x4000551")]
			el_match_20,
			[Token(Token = "0x4000552")]
			el_match_21,
			[Token(Token = "0x4000553")]
			ctf_flag_stolen_red,
			[Token(Token = "0x4000554")]
			ctf_flag_stolen_blue,
			[Token(Token = "0x4000555")]
			ctf_flag_returned_red,
			[Token(Token = "0x4000556")]
			ctf_flag_returned_blue,
			[Token(Token = "0x4000557")]
			ctf_flag_dropped_red,
			[Token(Token = "0x4000558")]
			ctf_flag_dropped_blue,
			[Token(Token = "0x4000559")]
			el_ace
		}

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource Voice;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] Clips;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] ClipPlayCount;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _cooldown;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _currentPriority;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _queueWaitTime;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<QueuedMessage> _messageQueue;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _prevCountdownNumber;

		[Token(Token = "0x17000072")]
		public static Announcer Active
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x1070894", Offset = "0x1070894", VA = "0x1070894")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x10708DC", Offset = "0x10708DC", VA = "0x10708DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x1070934", Offset = "0x1070934", VA = "0x1070934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x1070944", Offset = "0x1070944", VA = "0x1070944")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1070AC0", Offset = "0x1070AC0", VA = "0x1070AC0")]
		private void SceneManagerOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x1070A6C", Offset = "0x1070A6C", VA = "0x1070A6C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x1070ACC", Offset = "0x1070ACC", VA = "0x1070ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x1070AC4", Offset = "0x1070AC4", VA = "0x1070AC4")]
		public void ResetTimer()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1070C64", Offset = "0x1070C64", VA = "0x1070C64")]
		public void TimerMessage(float timer, bool roundUp = true)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1070E78", Offset = "0x1070E78", VA = "0x1070E78")]
		public int GetPlayCount(Messages message)
		{
			return default(int);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1070EA8", Offset = "0x1070EA8", VA = "0x1070EA8")]
		public void QueueMessage(Messages message)
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1070F0C", Offset = "0x1070F0C", VA = "0x1070F0C")]
		public void QueueSilence(float time)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1070B74", Offset = "0x1070B74", VA = "0x1070B74")]
		private void ProcessQueuedMessages()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1070DB8", Offset = "0x1070DB8", VA = "0x1070DB8")]
		public void SendMessage(Messages message, int priority = 10)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1070F80", Offset = "0x1070F80", VA = "0x1070F80")]
		public void ClientPlayMessage(int message)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1070FE0", Offset = "0x1070FE0", VA = "0x1070FE0")]
		public void FadeOutVoiceVolume(float duration = 1f)
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x10710A8", Offset = "0x10710A8", VA = "0x10710A8")]
		public void ResetVoiceVolume()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x10710DC", Offset = "0x10710DC", VA = "0x10710DC")]
		public Announcer()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	[BoltGlobalBehaviour]
	public class AnnouncerCallbacks : GlobalEventListener
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1071180", Offset = "0x1071180", VA = "0x1071180", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x10711D0", Offset = "0x10711D0", VA = "0x10711D0", Slot = "111")]
		public override void OnEvent(AnnouncerEvent evnt)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x10712C4", Offset = "0x10712C4", VA = "0x10712C4", Slot = "104")]
		public override void OnEvent(PlayerKilledEvent evnt)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x107149C", Offset = "0x107149C", VA = "0x107149C")]
		public void SendHudMessagesOnScore(PlayerObject player, int scoreBlue, int scoreRed)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x107166C", Offset = "0x107166C", VA = "0x107166C", Slot = "109")]
		public override void OnEvent(CameraFadeToBlack evnt)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x10716B8", Offset = "0x10716B8", VA = "0x10716B8", Slot = "108")]
		public override void OnEvent(CameraFadeFromBlack evnt)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1071700", Offset = "0x1071700", VA = "0x1071700")]
		public AnnouncerCallbacks()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	[CreateAssetMenu(fileName = "ArmorPickup", menuName = "Pickups/Armor", order = 1)]
	public class ArmorPickup : Pickup
	{
		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _pickupModel;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _armor;

		[Token(Token = "0x17000074")]
		public override GameObject Model
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0x10C671C", Offset = "0x10C671C", VA = "0x10C671C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public override bool ListenForRequestPickup
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0x10C6724", Offset = "0x10C6724", VA = "0x10C6724", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x10C672C", Offset = "0x10C672C", VA = "0x10C672C", Slot = "6")]
		public override bool PickUp(NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x10C6750", Offset = "0x10C6750", VA = "0x10C6750")]
		public ArmorPickup()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class LoadRequests
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Url;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest UnityRequest;

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x10C6760", Offset = "0x10C6760", VA = "0x10C6760")]
		public LoadRequests()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public struct LoadArguments<T>
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Data;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Key;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Delayed;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Success;
	}
	[Token(Token = "0x2000100")]
	public class RequestHandle<T>
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CacheElement<T>.LoadedHandler _cb;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CacheElement<T> _element;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _source;

		[Token(Token = "0x60004D4")]
		public RequestHandle(CacheElement<T> element, CacheElement<T>.LoadedHandler cb, string source)
		{
		}

		[Token(Token = "0x60004D5")]
		public void Remove()
		{
		}

		[Token(Token = "0x60004D6")]
		public void Invoke(LoadArguments<T> arguments)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class CacheElement<T>
	{
		[Token(Token = "0x2000102")]
		public delegate void LoadedHandler(LoadArguments<T> result);

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Url;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Asset;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<RequestHandle<T>> LoadedEvents;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadRequests Request;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action Customloader;

		[Token(Token = "0x60004D7")]
		public CacheElement()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class SpriteAssetCache : AssetLoaderCache<Sprite>
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x10C6768", Offset = "0x10C6768", VA = "0x10C6768")]
		public SpriteAssetCache(AssetLoader assetLoader)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x10C67C0", Offset = "0x10C67C0", VA = "0x10C67C0", Slot = "4")]
		protected override UnityWebRequest CreateRequest(string url)
		{
			return null;
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x10C6848", Offset = "0x10C6848", VA = "0x10C6848", Slot = "5")]
		public override Sprite OnLoad(LoadRequests request)
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public abstract class AssetLoaderCache<T>
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AssetLoader _loader;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, CacheElement<T>> _cachedElements;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<string, Action> _customLoaders;

		[Token(Token = "0x60004DF")]
		protected AssetLoaderCache(AssetLoader assetLoader)
		{
		}

		[Token(Token = "0x60004E0")]
		protected abstract UnityWebRequest CreateRequest(string url);

		[Token(Token = "0x60004E1")]
		public abstract T OnLoad(LoadRequests request);

		[Token(Token = "0x60004E2")]
		public RequestHandle<T> Load(string url, CacheElement<T>.LoadedHandler callback, [Optional] string source)
		{
			return null;
		}

		[Token(Token = "0x60004E3")]
		public bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		public void Failed(string key)
		{
		}

		[Token(Token = "0x60004E5")]
		public void Inject(string key, T data)
		{
		}

		[Token(Token = "0x60004E6")]
		private void InvokeEvents(CacheElement<T> element, LoadArguments<T> arguments)
		{
		}

		[Token(Token = "0x60004E7")]
		public void RegisterCustomLoader(string key, Action action)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class AssetLoader : MonoBehaviour
	{
		[Token(Token = "0x2000106")]
		[CompilerGenerated]
		private sealed class <Download>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetLoader <>4__this;

			[Token(Token = "0x4000576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<LoadRequests> <failedDownloads>5__2;

			[Token(Token = "0x17000078")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004F4")]
				[Address(RVA = "0x10C750C", Offset = "0x10C750C", VA = "0x10C750C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000079")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004F6")]
				[Address(RVA = "0x10C7554", Offset = "0x10C7554", VA = "0x10C7554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x10C6E3C", Offset = "0x10C6E3C", VA = "0x10C6E3C")]
			[DebuggerHidden]
			public <Download>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x10C7070", Offset = "0x10C7070", VA = "0x10C7070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x10C7074", Offset = "0x10C7074", VA = "0x10C7074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x10C7514", Offset = "0x10C7514", VA = "0x10C7514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AssetLoaderCache<Sprite> Sprites;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<LoadRequests> _requests;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<LoadRequests> _currentDownload;

		[Token(Token = "0x4000570")]
		private const int Parrallel = 5;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AssetLoader _current;

		[Token(Token = "0x4000572")]
		private const int MaxDownloadAttempts = 3;

		[Token(Token = "0x17000076")]
		public static bool IsDownloading
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x10C6A14", Offset = "0x10C6A14", VA = "0x10C6A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		public static bool HasAssetLoader
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x10C6A8C", Offset = "0x10C6A8C", VA = "0x10C6A8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x10C6B18", Offset = "0x10C6B18", VA = "0x10C6B18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x10C6C78", Offset = "0x10C6C78", VA = "0x10C6C78")]
		public void AddRequest(LoadRequests elementRequest)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x10C6D50", Offset = "0x10C6D50", VA = "0x10C6D50")]
		public void StartDownload()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x10C6DC8", Offset = "0x10C6DC8", VA = "0x10C6DC8")]
		[IteratorStateMachine(typeof(<Download>d__13))]
		private IEnumerator Download()
		{
			return null;
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x10C6E64", Offset = "0x10C6E64", VA = "0x10C6E64")]
		private void HandleDownloadComplete(LoadRequests loadRequests, bool success)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x10C6F94", Offset = "0x10C6F94", VA = "0x10C6F94")]
		public AssetLoader()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class AtlasedMeshGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private GameObject _result;

		[Token(Token = "0x1700007A")]
		[SerializeField]
		public GameObject Result
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0x10C755C", Offset = "0x10C755C", VA = "0x10C755C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x10C7564", Offset = "0x10C7564", VA = "0x10C7564")]
		public AtlasedMeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class AtlasModifier : MonoBehaviour
	{
		[Token(Token = "0x4000578")]
		public const float DefaultLightmapScale = 1f;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LightmapScale;

		[Token(Token = "0x400057A")]
		public const bool DefaultAddMeshCollider = true;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AddMeshCollider;

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x10C756C", Offset = "0x10C756C", VA = "0x10C756C")]
		public AtlasModifier()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[DefaultExecutionOrder(10000000)]
	public class AttachableEffect : MonoBehaviour
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _target;

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x10C7584", Offset = "0x10C7584", VA = "0x10C7584")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x10C7590", Offset = "0x10C7590", VA = "0x10C7590")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x10C7610", Offset = "0x10C7610", VA = "0x10C7610")]
		public void Attach(Transform target)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x10C7698", Offset = "0x10C7698", VA = "0x10C7698")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x10C774C", Offset = "0x10C774C", VA = "0x10C774C")]
		public AttachableEffect()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class AutomaticProjectileSpawner : MonoBehaviour
	{
		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _framesBetweenShots;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ProjectileData _projectile;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _frameCounter;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x10C7754", Offset = "0x10C7754", VA = "0x10C7754")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x10C7A50", Offset = "0x10C7A50", VA = "0x10C7A50")]
		public AutomaticProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class Dispatcher
	{
		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<Action> _queue;

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x10C7A68", Offset = "0x10C7A68", VA = "0x10C7A68")]
		public void Update()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x10C7B9C", Offset = "0x10C7B9C", VA = "0x10C7B9C")]
		public void Queue(Action action)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x10C7C98", Offset = "0x10C7C98", VA = "0x10C7C98")]
		public Dispatcher()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public enum VoiceChatState
	{
		[Token(Token = "0x4000582")]
		NotSet,
		[Token(Token = "0x4000583")]
		Disabled,
		[Token(Token = "0x4000584")]
		Active,
		[Token(Token = "0x4000585")]
		Inactive,
		[Token(Token = "0x4000586")]
		NoMicFocus
	}
	[Token(Token = "0x200010D")]
	[DefaultExecutionOrder(-199999)]
	public class Boot : MonoBehaviour
	{
		[Token(Token = "0x200010E")]
		[CompilerGenerated]
		private sealed class <StartAndroid>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400058D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400058E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400058F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Boot <>4__this;

			[Token(Token = "0x1700007B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000511")]
				[Address(RVA = "0x10C89C8", Offset = "0x10C89C8", VA = "0x10C89C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000513")]
				[Address(RVA = "0x10C8A10", Offset = "0x10C8A10", VA = "0x10C8A10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600050E")]
			[Address(RVA = "0x10C85B0", Offset = "0x10C85B0", VA = "0x10C85B0")]
			[DebuggerHidden]
			public <StartAndroid>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600050F")]
			[Address(RVA = "0x10C888C", Offset = "0x10C888C", VA = "0x10C888C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000510")]
			[Address(RVA = "0x10C8890", Offset = "0x10C8890", VA = "0x10C8890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000512")]
			[Address(RVA = "0x10C89D0", Offset = "0x10C89D0", VA = "0x10C89D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000587")]
		private const string ErrorScene = "Startup_Error";

		[Token(Token = "0x4000588")]
		private const string ClientScene = "Startup_Client";

		[Token(Token = "0x4000589")]
		private const string HeadlessServerScene = "Startup_HeadlessServer";

		[Token(Token = "0x400058A")]
		private const string SpectatorScene = "Startup_Spectator";

		[Token(Token = "0x400058B")]
		private const string HostScene = "Startup_Host";

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] _commandLineArgs;

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x10C7D20", Offset = "0x10C7D20", VA = "0x10C7D20")]
		public static string GetArg(params string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x10C7E40", Offset = "0x10C7E40", VA = "0x10C7E40")]
		public static bool HasArg(params string[] names)
		{
			return default(bool);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x10C7F40", Offset = "0x10C7F40", VA = "0x10C7F40")]
		public static string GetArgComplex(params string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x10C8094", Offset = "0x10C8094", VA = "0x10C8094")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x10C84BC", Offset = "0x10C84BC", VA = "0x10C84BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x10C837C", Offset = "0x10C837C", VA = "0x10C837C")]
		private void AwakeAndroid()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x10C84DC", Offset = "0x10C84DC", VA = "0x10C84DC")]
		[IteratorStateMachine(typeof(<StartAndroid>d__12))]
		private IEnumerator StartAndroid()
		{
			return null;
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x10C85D8", Offset = "0x10C85D8", VA = "0x10C85D8")]
		public void LogBootClientEvent(bool isSpectator)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x10C8810", Offset = "0x10C8810", VA = "0x10C8810")]
		public Boot()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class BotController : MonoBehaviour
	{
		[Token(Token = "0x2000110")]
		public enum MovementMode
		{
			[Token(Token = "0x40005F3")]
			None,
			[Token(Token = "0x40005F4")]
			Agent,
			[Token(Token = "0x40005F5")]
			AimingOffMeshLink,
			[Token(Token = "0x40005F6")]
			DashingOffMeshLink,
			[Token(Token = "0x40005F7")]
			OnCart,
			[Token(Token = "0x40005F8")]
			DashPath,
			[Token(Token = "0x40005F9")]
			Dead,
			[Token(Token = "0x40005FA")]
			Rail,
			[Token(Token = "0x40005FB")]
			LeaveRailAtEnd,
			[Token(Token = "0x40005FC")]
			AimRail
		}

		[Serializable]
		[Token(Token = "0x2000111")]
		private struct ObjectiveIntel
		{
			[Token(Token = "0x40005FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool FoundObjective;

			[Token(Token = "0x40005FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool ObjectiveNeedsHands;

			[Token(Token = "0x40005FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int ControllingTeam;

			[Token(Token = "0x4000600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ObjectivePosition;

			[Token(Token = "0x4000601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 CtfEnemyBasePosition;

			[Token(Token = "0x4000602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 CtfOwnBasePosition;

			[Token(Token = "0x4000603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 CtfOwnFlagPosition;

			[Token(Token = "0x4000604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int CtfOwnFlagControllerTeam;

			[Token(Token = "0x4000605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int ObjectiveTargetIndex;

			[Token(Token = "0x4000606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool MyTeamControlsTargetObjective;

			[Token(Token = "0x4000607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public MatchTypes MatchType;

			[Token(Token = "0x4000608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool DominationOtherTeamControlsAllObjectives;

			[Token(Token = "0x4000609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int PlayerOnObjective;
		}

		[Token(Token = "0x2000112")]
		private enum DashType
		{
			[Token(Token = "0x400060B")]
			None,
			[Token(Token = "0x400060C")]
			Path,
			[Token(Token = "0x400060D")]
			RailEnterLink,
			[Token(Token = "0x400060E")]
			RailExitLink,
			[Token(Token = "0x400060F")]
			RailQuickExit,
			[Token(Token = "0x4000610")]
			DashLink,
			[Token(Token = "0x4000611")]
			OnCart
		}

		[Token(Token = "0x2000113")]
		public enum Goal
		{
			[Token(Token = "0x4000613")]
			None,
			[Token(Token = "0x4000614")]
			TakeControlPoint,
			[Token(Token = "0x4000615")]
			DefendPoint,
			[Token(Token = "0x4000616")]
			TakePickup,
			[Token(Token = "0x4000617")]
			AttackPlayer,
			[Token(Token = "0x4000618")]
			DualPlayer,
			[Token(Token = "0x4000619")]
			StandOnCart,
			[Token(Token = "0x400061A")]
			FollowPlayer,
			[Token(Token = "0x400061B")]
			HoldingBall,
			[Token(Token = "0x400061C")]
			ShootBall,
			[Token(Token = "0x400061D")]
			PickupBall,
			[Token(Token = "0x400061E")]
			SearchAndDestroy,
			[Token(Token = "0x400061F")]
			ReturnToOwnBaseWithEnemyFlag,
			[Token(Token = "0x4000620")]
			ScoreWithFlag,
			[Token(Token = "0x4000621")]
			StealEnemyFlag,
			[Token(Token = "0x4000622")]
			DefendFlagCarrier,
			[Token(Token = "0x4000623")]
			MoveToEnemyFlagBase,
			[Token(Token = "0x4000624")]
			GrabOwnFlag,
			[Token(Token = "0x4000625")]
			Sidekick
		}

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] StaticCornersBuffer;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MovementMode _activeMovementMode;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BotStats _stats;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent _agent;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LayerMask _seeMask;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private LayerMask _shootMask;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PickupSpawner[] _pickups;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AI_Location[] _locations;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NetCharacterBehaviour _target;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NetCharacterBehaviour _follow;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _stickyTargetDelay;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _targetSwitchDelay;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _shootDelayLeft;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _shootDelayRight;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _shootHoldLeft;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _shootHoldRight;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _waitBeforeGettingObjective;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _fallSpeed;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _dashDelay;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _lastDestination;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _hadDestination;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _wobbleTimer;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion _leftWobble;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion _RightWobble;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _leftDistance;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _rightDistance;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _targetDistance;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 _lastTargetLocation;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _lastTargetLocationTimer;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool _hasHandTarget;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int _handTargetHand;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 _handTargetPosition;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _handTargetRotation;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private PickupSpawner _targetPickup;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _objectiveActiveIndex;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _debugMessageCounter;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float _timer;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float _goalTimer;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _goalTimeTarget;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float _noPathTimer;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _timeSliceIndex;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _lastTimeSliceIndex;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int ActiveTimeSliceIndex;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Vector3 PlatformMovement;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Vector3 PlatformPivot;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool _isGameStared;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		private bool _isLobby;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		private bool _isGameOverRoom;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private WeaponTypes _leftWeaponType;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private WeaponTypes _rightWeaponType;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<AI_Location> _locationsInRange;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float _optimizeTimer;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<int> _tempControlPointTargets;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ObjectiveIntel _intel;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<PickupSpawner> _randomPickups;

		[Token(Token = "0x40005C8")]
		private const float HeadHeight = 1.72f;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 _leftHandPose;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Vector3 _rightHandPose;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Quaternion _leftControllerRotation;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Quaternion _rightControllerRotation;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _randomLookAngle;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float _randomLookAngleTimer;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Vector3 _ballGoalLocation;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3 _ballGoalAimLocation;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool _ballShoot;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float _ballShootDelay;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float _ballMaxHoldingTime;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 _defaultPose;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 _shieldPose;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 _shieldWeaponPose;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector3 _swordPose;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Vector3 _aimOffset;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float _aimOffsetTimer;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private float _idleTimer;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private bool _previousFireLeft;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		private bool _previousFireRight;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private float _sprintTimer;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float _sprintDelay;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private bool _shouldSprint;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int _previousTeamIndex;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int nav_walkable;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int nav_dashLayer;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int nav_railLayer;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int nav_dropAndJumpLayer;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int nav_teamLayerRed;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int nav_teamLayerBlue;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private bool _dashInProgress;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private DashType _dashInProgressType;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 _dashStart;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private Vector3 _dashTarget;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private float _dashAimTimer;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Vector3 _dashLookTarget;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Vector3 _railTargetExitPosition;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Vector3 _railTargetDirection;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private AI_RailTarget _railTarget;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float _viewDistance;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private Goal _activeGoal;

		[Token(Token = "0x1700007D")]
		public bool IsReadyForNewPath
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x10CABE4", Offset = "0x10CABE4", VA = "0x10CABE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		public bool HasNoPathToDestination
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x10CAC80", Offset = "0x10CAC80", VA = "0x10CAC80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x10C8A18", Offset = "0x10C8A18", VA = "0x10C8A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x10C93B0", Offset = "0x10C93B0", VA = "0x10C93B0")]
		private void LogError(string message)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x10C93B4", Offset = "0x10C93B4", VA = "0x10C93B4")]
		private bool LosCheck(Vector3 from, Vector3 to, float angle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10C96DC", Offset = "0x10C96DC", VA = "0x10C96DC")]
		private void UpdateSafeToShoot()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x10C9AB8", Offset = "0x10C9AB8", VA = "0x10C9AB8")]
		private NetCharacterBehaviour GetTarget()
		{
			return null;
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x10C9C94", Offset = "0x10C9C94", VA = "0x10C9C94")]
		private string GetGoalDebugMessage()
		{
			return null;
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x10CA0C0", Offset = "0x10CA0C0", VA = "0x10CA0C0")]
		private void UpdateDebugMessage()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x10CA0C4", Offset = "0x10CA0C4", VA = "0x10CA0C4")]
		private void DebugMessage(string message)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x10CA0C8", Offset = "0x10CA0C8", VA = "0x10CA0C8")]
		private bool StopWhatYouAreDoingCauseOfNewTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10CA23C", Offset = "0x10CA23C", VA = "0x10CA23C")]
		private void UpdateTargetSelection()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x10C90F8", Offset = "0x10C90F8", VA = "0x10C90F8")]
		private void ChangeMovementMode(MovementMode newMode)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x10CAC94", Offset = "0x10CAC94", VA = "0x10CAC94")]
		private Vector3 GetRandomAiLocationInRange(Vector3 destination, float radius = 50f, float minDistance = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x10CAEAC", Offset = "0x10CAEAC", VA = "0x10CAEAC")]
		private void MoveToRandomAiLocationInRange(Vector3 destination, float radius = 50f, float minDistance = 1f)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x10CAF10", Offset = "0x10CAF10", VA = "0x10CAF10")]
		private void MoveTo(Vector3 destination, float minDistance = 1f)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x10CAF6C", Offset = "0x10CAF6C", VA = "0x10CAF6C")]
		private void MoveGroundInterval(Vector3 destination, float minDistance, bool rayCastGround, out bool hasHit, float delaySucces = 1f, float delayFailed = 1f)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x10CAB60", Offset = "0x10CAB60", VA = "0x10CAB60")]
		private void StopPath()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x10CB0D8", Offset = "0x10CB0D8", VA = "0x10CB0D8")]
		private void UpdateIntel()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x10CB670", Offset = "0x10CB670", VA = "0x10CB670")]
		public void OnRailToCart(Vector3 teleportPosition)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x10CB73C", Offset = "0x10CB73C", VA = "0x10CB73C")]
		public PickupSpawner GetRandomPickupInRange()
		{
			return null;
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x10CBA1C", Offset = "0x10CBA1C", VA = "0x10CBA1C")]
		private void AimHead(Transform t, Vector3 target, Quaternion offset)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x10CBD3C", Offset = "0x10CBD3C", VA = "0x10CBD3C")]
		private void AimHand(ref Quaternion rotation, Vector3 position, Vector3 target, Quaternion offset, bool limit)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x10CC1B8", Offset = "0x10CC1B8", VA = "0x10CC1B8")]
		private void UpdatePose()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x10CC270", Offset = "0x10CC270", VA = "0x10CC270")]
		private void UpdateAimOffset()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x10CC31C", Offset = "0x10CC31C", VA = "0x10CC31C")]
		private float GetWeaponAimHeightOffset(WeaponTypes weapon)
		{
			return default(float);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x10CC344", Offset = "0x10CC344", VA = "0x10CC344")]
		private void UpdateAiming()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x10CDA14", Offset = "0x10CDA14", VA = "0x10CDA14")]
		private void UpdateShooting()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x10CE03C", Offset = "0x10CE03C", VA = "0x10CE03C")]
		private bool UpdateGameStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x10CE1DC", Offset = "0x10CE1DC", VA = "0x10CE1DC")]
		private WeaponTypes GetWeaponTypeCached(int index)
		{
			return default(WeaponTypes);
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x10CE1F4", Offset = "0x10CE1F4", VA = "0x10CE1F4")]
		public void Simulate()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x10D110C", Offset = "0x10D110C", VA = "0x10D110C")]
		private void DashToPathCorners()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x10D1500", Offset = "0x10D1500", VA = "0x10D1500")]
		private void DashOverNavMeshLinks()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x10CE8B8", Offset = "0x10CE8B8", VA = "0x10CE8B8")]
		private void UpdateMovementMode()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x10CE7A8", Offset = "0x10CE7A8", VA = "0x10CE7A8")]
		private void UpdateAgentSpeed()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x10CF2E8", Offset = "0x10CF2E8", VA = "0x10CF2E8")]
		private void UpdateSprint()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x10CE69C", Offset = "0x10CE69C", VA = "0x10CE69C")]
		private void UpdateAgentLayerMask()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x10CA8D8", Offset = "0x10CA8D8", VA = "0x10CA8D8")]
		private void Dash(Vector3 target, GrindRail rail, Vector3 railDirection, DashType type)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x10CE580", Offset = "0x10CE580", VA = "0x10CE580")]
		private void UpdateDashAgent()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x10CD9C8", Offset = "0x10CD9C8", VA = "0x10CD9C8")]
		private bool HasDashCharges()
		{
			return default(bool);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x10D142C", Offset = "0x10D142C", VA = "0x10D142C")]
		private bool CanDash()
		{
			return default(bool);
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x10CDB60", Offset = "0x10CDB60", VA = "0x10CDB60")]
		private bool UpdateWeapon(ref float delay, ref float hold, WeaponTypes type, int handIndex, float distanceToObstacle)
		{
			return default(bool);
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x10D17A4", Offset = "0x10D17A4", VA = "0x10D17A4")]
		public void OnRespawn()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x10D0714", Offset = "0x10D0714", VA = "0x10D0714")]
		private void PreventGoalGettingStuckForver()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x10D0848", Offset = "0x10D0848", VA = "0x10D0848")]
		private void PickNewGoal()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x10CA890", Offset = "0x10CA890", VA = "0x10CA890")]
		private void ChangeGoal(Goal newGoal)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x10D1920", Offset = "0x10D1920", VA = "0x10D1920")]
		private void ExitGoal(Goal goal)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x10D1954", Offset = "0x10D1954", VA = "0x10D1954")]
		private void EnterGoal(Goal newGoal)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x10CF4F8", Offset = "0x10CF4F8", VA = "0x10CF4F8")]
		private void UpdateGoal()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x10D1E80", Offset = "0x10D1E80", VA = "0x10D1E80")]
		public BotController()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class BotStats
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BotDifficulty Difficulty;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BotMaxPickupDistance;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BotGoalTimeout;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float BotButtonHoldTimeout;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HeadRotateSpeed;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float AimSpeed;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float HandWaitTimeControlPoint;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float WobblePan;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float WobbleTilt;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float WobbleRoll;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LastTargetLocationMinSticky;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float LastTargetLocationMaxSticky;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float LastTargetDeadKeepAimMinDelay;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float LastTargetDeadKeepAimMaxDelay;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TargetDetectFOV;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float TargetDetectMinSticky;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float TargetDetectMaxSticky;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float TargetDetectMinShootDelay;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float TargetDetectMaxShootDelay;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float TargetDetectAttackChange;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float ReturnFireFOV;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ReturnFireMinShootDelay;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ReturnFireMaxShootDelay;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float ReturnFireMinSticky;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float ReturnFireMaxSticky;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float ReturnFireAttackChange;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float GameStartMinDelay;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float GameStartMaxDelay;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float RespawnMinDelay;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float RespawnMaxDelay;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float RespawnDashMinDelay;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float RespawnDashMaxDelay;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float RespawnSprintMinDelay;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float RespawnSprintMaxDelay;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float SprintMinTime;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float SprintMaxTime;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float SprintMinDelay;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float SprintMaxDelay;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float DashMinDelay;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float DashMaxDelay;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float DashRailAimTime;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float DashRailExitAimTime;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float DashPathAimTime;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float DashDropJumpAimTime;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 AimPositionRange;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float AimPositionMinDelay;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float AimPositionMaxDelay;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float PathLookAheadDistance;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float PistolMinDelay;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float PistolMaxDelay;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BotStats Normal;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BotStats Easy;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BotStats Hard;

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x10D2198", Offset = "0x10D2198", VA = "0x10D2198")]
		public BotStats()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class BoundsComponent : MonoBehaviour
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Bounds _bounds;

		[Token(Token = "0x1700007F")]
		public Bounds Bounds
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0x10D2388", Offset = "0x10D2388", VA = "0x10D2388")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x600054A")]
			[Address(RVA = "0x10D239C", Offset = "0x10D239C", VA = "0x10D239C")]
			set
			{
			}
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x10D23B0", Offset = "0x10D23B0", VA = "0x10D23B0")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x10D2408", Offset = "0x10D2408", VA = "0x10D2408")]
		public BoundsComponent()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class ButtonSlideAnimation : MonoBehaviour
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Animation")]
		[SerializeField]
		private float _minY;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _maxY;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _startPosition;

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x10D2410", Offset = "0x10D2410", VA = "0x10D2410")]
		private void Awake()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x10D2480", Offset = "0x10D2480", VA = "0x10D2480")]
		public void MoveDown(float duration = 0.5f)
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x10D2510", Offset = "0x10D2510", VA = "0x10D2510")]
		public void MoveUp(float duration = 0.5f)
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x10D25A0", Offset = "0x10D25A0", VA = "0x10D25A0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x10D267C", Offset = "0x10D267C", VA = "0x10D267C")]
		public ButtonSlideAnimation()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class ButtonSpeedTest : MonoBehaviour
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro _text;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<float> _triggerUpQueue;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<float> _aButtonUpQueue;

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x10D268C", Offset = "0x10D268C", VA = "0x10D268C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x10D2910", Offset = "0x10D2910", VA = "0x10D2910")]
		public ButtonSpeedTest()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class CameraOverlays : MonoBehaviour
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer FadeQuad;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer DamageLeft;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer DamageRight;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer DeadQuad;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer PumpkinQuad;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color FadeColor;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _fadeTimer;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _fadeDuration;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _damageLeftTimer;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _damageRightTimer;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _deadEffect;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _deadTimer;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _fadeIn;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _fadeBlock;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MaterialPropertyBlock _deadBlock;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int ColorHash;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float DamageSpriteOffset;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float DamageSpriteTime;

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x10D29C8", Offset = "0x10D29C8", VA = "0x10D29C8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x10D2B60", Offset = "0x10D2B60", VA = "0x10D2B60")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x10D2C04", Offset = "0x10D2C04", VA = "0x10D2C04")]
		private void SceneManagerOnSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x10D2C24", Offset = "0x10D2C24", VA = "0x10D2C24")]
		public void ForceBlack()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x10D2C84", Offset = "0x10D2C84", VA = "0x10D2C84")]
		public void FadeToBlack(float duration = 1f)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x10D2CF0", Offset = "0x10D2CF0", VA = "0x10D2CF0")]
		public void FadeFromBlack(float duration = 1f)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x10D2D60", Offset = "0x10D2D60", VA = "0x10D2D60")]
		public void HitLeft()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x10D2DBC", Offset = "0x10D2DBC", VA = "0x10D2DBC")]
		public void HitRight()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x10D2E14", Offset = "0x10D2E14", VA = "0x10D2E14")]
		public void Dead()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x10D2E40", Offset = "0x10D2E40", VA = "0x10D2E40")]
		private void Update()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x10D2F80", Offset = "0x10D2F80", VA = "0x10D2F80")]
		private void UpdateFade()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x10D3034", Offset = "0x10D3034", VA = "0x10D3034")]
		public CameraOverlays()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class CameraRig : MonoBehaviour
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Tracked objects")]
		public Transform TrackingSpace;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Headset;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform LeftController;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightController;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Camera")]
		public CameraOverlays Overlays;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Settings")]
		public bool MustCalibrateHeight;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool Offset;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Movement")]
		public PlayerMovement PlayerMovement;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DashController PlayerDashController;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoltEntity _playerEntity;

		[Token(Token = "0x17000080")]
		public static CameraRig Active
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x10D30A0", Offset = "0x10D30A0", VA = "0x10D30A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x10D30E8", Offset = "0x10D30E8", VA = "0x10D30E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x10D3140", Offset = "0x10D3140", VA = "0x10D3140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x10D3198", Offset = "0x10D3198", VA = "0x10D3198")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x10D3274", Offset = "0x10D3274", VA = "0x10D3274")]
		public void SetTarget(BoltEntity entity)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x10D33CC", Offset = "0x10D33CC", VA = "0x10D33CC")]
		public float MeasureHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x10D3410", Offset = "0x10D3410", VA = "0x10D3410")]
		public CameraRig()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public abstract class CharacterProvider : MonoBehaviour
	{
		[Token(Token = "0x14000009")]
		[method: Token(Token = "0x6000567")]
		public abstract event Action<NetCharacterBehaviour> ProvideCharacterEvent;

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x10D3418", Offset = "0x10D3418", VA = "0x10D3418")]
		protected CharacterProvider()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[BoltGlobalBehaviour(BoltNetworkModes.Client)]
	public class ClientHardwareCallbacks : GlobalEventListener
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x10D3420", Offset = "0x10D3420", VA = "0x10D3420", Slot = "99")]
		public override void OnEvent(HardwareRequestEvent e)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x10D3630", Offset = "0x10D3630", VA = "0x10D3630", Slot = "100")]
		public override void OnEvent(IdentifyRequestEvent e)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x10D37FC", Offset = "0x10D37FC", VA = "0x10D37FC", Slot = "105")]
		public override void OnEvent(HardwareRenameEvent e)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x10D3860", Offset = "0x10D3860", VA = "0x10D3860")]
		public ClientHardwareCallbacks()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public static class CloudDiagnostics
	{
		[Token(Token = "0x400067F")]
		private const string NetworkModeKey = "NetworkMode";

		[Token(Token = "0x4000680")]
		private const string SceneKey = "Scene";

		[Token(Token = "0x4000681")]
		private const string ServerNameKey = "ServerName";

		[Token(Token = "0x4000682")]
		private const string ServerRegionKey = "Region";

		[Token(Token = "0x4000683")]
		private const string ServerIPKey = "ServerIP";

		[Token(Token = "0x4000684")]
		private const string ServerPortKey = "ServerPort";

		[Token(Token = "0x4000685")]
		private const string IsCustomServerKey = "IsCustomServer";

		[Token(Token = "0x4000686")]
		private const string StoreKey = "Store";

		[Token(Token = "0x4000687")]
		private const string VersionMajorMinor = "VersionMajorMinor";

		[Token(Token = "0x4000688")]
		private const string VersionMajor = "VersionMajor";

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x10C81F4", Offset = "0x10C81F4", VA = "0x10C81F4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x10D3868", Offset = "0x10D3868", VA = "0x10D3868")]
		private static void SetUserMetadata(string key, string value)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x10D3870", Offset = "0x10D3870", VA = "0x10D3870")]
		public static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x10D38D0", Offset = "0x10D38D0", VA = "0x10D38D0")]
		public static void SetNetworkMode(NetworkModes mode)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x10D3964", Offset = "0x10D3964", VA = "0x10D3964")]
		public static void SetStore(string storeName)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x10D39B0", Offset = "0x10D39B0", VA = "0x10D39B0")]
		public static void SetServerInfo(string serverName, string region, string port, bool isCustomServer)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x10D3AA4", Offset = "0x10D3AA4", VA = "0x10D3AA4")]
		public static void SetClientInfo(string serverName)
		{
		}
	}
	[Token(Token = "0x200011D")]
	[DefaultExecutionOrder(-1)]
	public class ColorHelpers : MonoBehaviour
	{
		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] TeamColors;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] _teamColorsLookup;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] _teamColorHexLookup;

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x10D3AF0", Offset = "0x10D3AF0", VA = "0x10D3AF0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x10D3C54", Offset = "0x10D3C54", VA = "0x10D3C54")]
		public static Color GetTeamColor(int team)
		{
			return default(Color);
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x10D3CE8", Offset = "0x10D3CE8", VA = "0x10D3CE8")]
		public static int GetTeamColorIndex(int team)
		{
			return default(int);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x10D3D4C", Offset = "0x10D3D4C", VA = "0x10D3D4C")]
		public static string GetTeamColorHex(int team)
		{
			return null;
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x10D3DEC", Offset = "0x10D3DEC", VA = "0x10D3DEC")]
		public static Color GetTeamColor(Teams team)
		{
			return default(Color);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x10D3DF0", Offset = "0x10D3DF0", VA = "0x10D3DF0")]
		public ColorHelpers()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public enum VrSdk
	{
		[Token(Token = "0x400068D")]
		None = -1,
		[Token(Token = "0x400068E")]
		FpsMode,
		[Token(Token = "0x400068F")]
		Oculus,
		[Token(Token = "0x4000690")]
		OpenVR,
		[Token(Token = "0x4000691")]
		WaveVR,
		[Token(Token = "0x4000692")]
		PicoVR
	}
	[Token(Token = "0x200011F")]
	public enum GameRegion
	{
		[Token(Token = "0x4000694")]
		International,
		[Token(Token = "0x4000695")]
		ChinaMainland
	}
	[Token(Token = "0x2000120")]
	public static class Configuration
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NetworkModes _networkMode;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool IsBootedAsSpectator;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int MaxBotFill;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string AutoConnectIp;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string AutoConnectPort;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool UseLocomotionIK;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static VrSdk VrSDK;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool DEBUG_ShowHitboxes;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public static bool Debug_JitterFix;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public static bool DEBUG_EnableDebugHud;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static GameRegion GameRegion;

		[Token(Token = "0x17000081")]
		public static NetworkModes NetworkMode
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0x10D3DF8", Offset = "0x10D3DF8", VA = "0x10D3DF8")]
			get
			{
				return default(NetworkModes);
			}
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x10C8550", Offset = "0x10C8550", VA = "0x10C8550")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public static bool IsDedicatedServer
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0x10C79C0", Offset = "0x10C79C0", VA = "0x10C79C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public static bool IsServerOrHostOrSinglePlayer
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0x10D3E50", Offset = "0x10D3E50", VA = "0x10D3E50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public static bool IsClientOrHostOrSinglePlayer
		{
			[Token(Token = "0x600057F")]
			[Address(RVA = "0x10D3FCC", Offset = "0x10D3FCC", VA = "0x10D3FCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public static bool IsHostOrSinglePlayer
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0x10D40FC", Offset = "0x10D40FC", VA = "0x10D40FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public static bool IsHost
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0x10D41E0", Offset = "0x10D41E0", VA = "0x10D41E0")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000121")]
	public static class HyperConsole
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x10C819C", Offset = "0x10C819C", VA = "0x10C819C")]
		public static void Log(string message)
		{
		}
	}
	[Token(Token = "0x2000122")]
	public static class Constants
	{
		[Token(Token = "0x2000123")]
		public struct ArcadeMapData
		{
			[Token(Token = "0x4000725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string DisplayName;

			[Token(Token = "0x4000726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string SceneName;
		}

		[Token(Token = "0x40006A1")]
		public const float Speed = 3.5f;

		[Token(Token = "0x40006A2")]
		public const float TimeToReachMaxSpeed = 0.0134f;

		[Token(Token = "0x40006A3")]
		public const float SidewaySpeedMultiplier = 0.7f;

		[Token(Token = "0x40006A4")]
		public const float BackwardsSpeedMultiplier = 0.7f;

		[Token(Token = "0x40006A5")]
		public const string SharedMapList = "cp_stadium,ball_stadium,ctf_stadium,dom_quarry,dom_waterway,pay_canyon,pay_launchpad,dm_metropolis,el_thepit,el_rig,ctf_coast,ball_coast,dm_crater,tdm_crater,pay_abyss,ball_arena,dom_volcano";

		[Token(Token = "0x40006A6")]
		public const string TutorialScene = "tutorial_intro";

		[Token(Token = "0x40006A7")]
		public const string HighlightedHalloweenMap = "tdm_halloween";

		[Token(Token = "0x40006A8")]
		public const string TrainingMapList = "tutorial_intro,cp_stadium,ball_stadium,ctf_stadium,dom_quarry,dom_waterway,pay_canyon,pay_launchpad,dm_metropolis,el_thepit,el_rig,ctf_coast,ball_coast,dm_crater,tdm_crater,pay_abyss,ball_arena,dom_volcano";

		[Token(Token = "0x40006A9")]
		public const string MultiplayerMapList = "cp_stadium,ball_stadium,ctf_stadium,dom_quarry,dom_waterway,pay_canyon,pay_launchpad,dm_metropolis,el_thepit,el_rig,ctf_coast,ball_coast,dm_crater,tdm_crater,pay_abyss,ball_arena,dom_volcano";

		[Token(Token = "0x40006AA")]
		public const string MainMenuScene = "MainMenu";

		[Token(Token = "0x40006AB")]
		public const string LobbyScene = "Lobby";

		[Token(Token = "0x40006AC")]
		public const string LobbyArcadeScene = "LobbyArcade";

		[Token(Token = "0x40006AD")]
		public const string GameOverScene = "GameOver";

		[Token(Token = "0x40006AE")]
		public const string ReconnectScene = "ReconnectToServer";

		[Token(Token = "0x40006AF")]
		public const float NearClipPlane = 0.05f;

		[Token(Token = "0x40006B0")]
		public const float FarClipPlane = 200f;

		[Token(Token = "0x40006B1")]
		public const float NameTagMaxDistance = 20f;

		[Token(Token = "0x40006B2")]
		public const float NameTagMinDistance = 0.3f;

		[Token(Token = "0x40006B3")]
		public const float NameTagMinSize = 10f;

		[Token(Token = "0x40006B4")]
		public const float TooLowHeight = 0.8f;

		[Token(Token = "0x40006B5")]
		public const float CrouchHeight = 1.2f;

		[Token(Token = "0x40006B6")]
		public const float MinCrouchToggleTime = 0.5f;

		[Token(Token = "0x40006B7")]
		public const float MinSeatedSetting = -0.5f;

		[Token(Token = "0x40006B8")]
		public const float MaxSeatedSetting = 0.75f;

		[Token(Token = "0x40006B9")]
		public const float SeatedCrouchHeightOffset = -0.5f;

		[Token(Token = "0x40006BA")]
		public const float DisableSeatedHeight = 2f;

		[Token(Token = "0x40006BB")]
		public const float SeatedHeightCalibrateTarget = 1.65f;

		[Token(Token = "0x40006BC")]
		public const int DefaultServerPort = 27015;

		[Token(Token = "0x40006BD")]
		public const int DefaultQueryPort = 27016;

		[Token(Token = "0x40006BE")]
		public const int DefaultClientPortRange = 15;

		[Token(Token = "0x40006BF")]
		public const int DefaultAlivePingInterval = 300;

		[Token(Token = "0x40006C0")]
		public const int ServerTargetFramerate = 72;

		[Token(Token = "0x40006C1")]
		public const float VoteTime = 15f;

		[Token(Token = "0x40006C2")]
		public const float VoteResultTime = 3f;

		[Token(Token = "0x40006C3")]
		public const float MusicAudioSourceVolume = 0.3f;

		[Token(Token = "0x40006C4")]
		public const int MaxPlayerObjects = 32;

		[Token(Token = "0x40006C5")]
		public const int MaxPlayers = 10;

		[Token(Token = "0x40006C6")]
		public const int MaxSpectators = 2;

		[Token(Token = "0x40006C7")]
		public const float AutoKillFallHeight = -20f;

		[Token(Token = "0x40006C8")]
		public const float RespawnTime = 5f;

		[Token(Token = "0x40006C9")]
		public const float RespawnDeathMatch = 3f;

		[Token(Token = "0x40006CA")]
		public const float RespawnElimination = 3f;

		[Token(Token = "0x40006CB")]
		public const float PickupRespawnTime = 10f;

		[Token(Token = "0x40006CC")]
		public const float ArmorPickupRespawnTime = 30f;

		[Token(Token = "0x40006CD")]
		public const float WeaponPickupRespawnTimeDeathMatch = 5f;

		[Token(Token = "0x40006CE")]
		public const float WeaponPickupRespawnLobby = 1f;

		[Token(Token = "0x40006CF")]
		public const int MaxHealth = 100;

		[Token(Token = "0x40006D0")]
		public const int MaxArmor = 100;

		[Token(Token = "0x40006D1")]
		public const float CriticalDamageWarning = 40f;

		[Token(Token = "0x40006D2")]
		public const float GrindSpeed = 8f;

		[Token(Token = "0x40006D3")]
		public const float GrindSpeedSprint = 11f;

		[Token(Token = "0x40006D4")]
		public const float WalkSpeed = 1f;

		[Token(Token = "0x40006D5")]
		public const float SprintSpeed = 2f;

		[Token(Token = "0x40006D6")]
		public const float SprintMoveTowardsSpeed = 3f;

		[Token(Token = "0x40006D7")]
		public const float SprintRequiredCharge = 0.5f;

		[Token(Token = "0x40006D8")]
		public const float SprintStartCharge = 0.2f;

		[Token(Token = "0x40006D9")]
		public const float SprintCostPerSecond = 0.5f;

		[Token(Token = "0x40006DA")]
		public const float RailHoldTimer = 0.15f;

		[Token(Token = "0x40006DB")]
		public const int BotTimeSlices = 10;

		[Token(Token = "0x40006DC")]
		public const int MaxVotableMaps = 23;

		[Token(Token = "0x40006DD")]
		public const float DashFxFadeTime = 2.8f;

		[Token(Token = "0x40006DE")]
		public const float SprintFxFadeTime = 0.8f;

		[Token(Token = "0x40006DF")]
		public const float EffectProjectileMaxDistance = 500f;

		[Token(Token = "0x40006E0")]
		public const int PingSevere = 200;

		[Token(Token = "0x40006E1")]
		public const int PingWarning = 100;

		[Token(Token = "0x40006E2")]
		public const int PacketLossSevere = 6;

		[Token(Token = "0x40006E3")]
		public const int PacketLossWarning = 2;

		[Token(Token = "0x40006E4")]
		public const int PingSortThreshold = 8;

		[Token(Token = "0x40006E5")]
		public const int PingMixingSortThreshold = 30;

		[Token(Token = "0x40006E6")]
		public const int PingMixingSortMaxPing = 50;

		[Token(Token = "0x40006E7")]
		public const float PingWait = 8f;

		[Token(Token = "0x40006E8")]
		public const int MaxProjectiles = 2000;

		[Token(Token = "0x40006E9")]
		public const float HudKillMessageTime = 3f;

		[Token(Token = "0x40006EA")]
		public const float KillStreakResetTime = 3f;

		[Token(Token = "0x40006EB")]
		public const float MicrohponeVolume = 1f;

		[Token(Token = "0x40006EC")]
		public const float MicrohponeAudioDistance = 30f;

		[Token(Token = "0x40006ED")]
		public const float MicrohponePositionCullingDistanceSq = 900f;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color GoodGreen;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color WarnOrange;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color FatalRed;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color GoodGreenText;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color WarnOrangeText;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Color FatalRedText;

		[Token(Token = "0x40006F4")]
		public const float SwitchOnKillDelay = 1.5f;

		[Token(Token = "0x40006F5")]
		public const int ClampHitboxFrames = 25;

		[Token(Token = "0x40006F6")]
		public const int DashBlockFrames = 0;

		[Token(Token = "0x40006F7")]
		public const int ServerLifeTime = 0;

		[Token(Token = "0x40006F8")]
		public const string VoiceLogPrefix = "<color=green>[Voice]</color>";

		[Token(Token = "0x40006F9")]
		public const string VoicErrorPrefix = "<color=red>[Voice]</color>";

		[Token(Token = "0x40006FA")]
		public const float VoiceAutoReconnectDelay = 5f;

		[Token(Token = "0x40006FB")]
		public const float VoiceMaxChannelConnectTime = 30f;

		[Token(Token = "0x40006FC")]
		public const float VoicePositionalUpdateInterval = 0.1f;

		[Token(Token = "0x40006FD")]
		public const float VampireLifeStealRate = 0.5f;

		[Token(Token = "0x40006FE")]
		public const float MistFogDensity = 0.04f;

		[Token(Token = "0x40006FF")]
		public const float MistBotViewDistance = 40f;

		[Token(Token = "0x4000700")]
		public const string StoreDebugPrefix = "<color=teal><b>[STORE]</b></color>";

		[Token(Token = "0x4000701")]
		public const string AnalyticsDebugPrefix = "<color=lightblue><b>[ANALYTICS]</b></color>";

		[Token(Token = "0x4000702")]
		public const int ScoreEliminationSurvive = 100;

		[Token(Token = "0x4000703")]
		public const int ScoreDominationCapture = 200;

		[Token(Token = "0x4000704")]
		public const int ScoreDominationCounterAdditional = 100;

		[Token(Token = "0x4000705")]
		public const int ScorePayloadObjective = 10;

		[Token(Token = "0x4000706")]
		public const int ScorePayloadUpdateTicks = 72;

		[Token(Token = "0x4000707")]
		public const int ScoreBallGoal = 500;

		[Token(Token = "0x4000708")]
		public const int ScoreCtfGoal = 500;

		[Token(Token = "0x4000709")]
		public const int ScoreCtfReturn = 100;

		[Token(Token = "0x400070A")]
		public const float PreRoundDuration = 7f;

		[Token(Token = "0x400070B")]
		public const int MatchControlpointMaxPoint = 300;

		[Token(Token = "0x400070C")]
		public const int MatchDominationDuration = 1500;

		[Token(Token = "0x400070D")]
		public const int MatchDominationTargetScore = 3;

		[Token(Token = "0x400070E")]
		public const int MatchDominationSuddenDeathModTargetScore = 5;

		[Token(Token = "0x400070F")]
		public const float MatchDominationPreparationDuration = 7f;

		[Token(Token = "0x4000710")]
		public const float MatchDominationOvertimeDuration = 5f;

		[Token(Token = "0x4000711")]
		public const float MatchDominationOvertimeDurationCountDown = 3f;

		[Token(Token = "0x4000712")]
		public const int MatchPayloadStartDuration = 360;

		[Token(Token = "0x4000713")]
		public const int MatchPayloadCheckPointDuration = 360;

		[Token(Token = "0x4000714")]
		public const int MatchPayloadPreparationDuration = 30;

		[Token(Token = "0x4000715")]
		public const int MatchDeathmatchDuration = 1500;

		[Token(Token = "0x4000716")]
		public const int MatchDeathmatchKills = 50;

		[Token(Token = "0x4000717")]
		public const int MatchTeamDeathmatchDuration = 1500;

		[Token(Token = "0x4000718")]
		public const int MatchTeamDeathmatchKills = 100;

		[Token(Token = "0x4000719")]
		public const int MatchBallDuration = 600;

		[Token(Token = "0x400071A")]
		public const int MatchBallOvertimeDuration = 300;

		[Token(Token = "0x400071B")]
		public const int MatchCtfDuration = 1500;

		[Token(Token = "0x400071C")]
		public const int MatchCtfOverTimeDuration = 300;

		[Token(Token = "0x400071D")]
		public const int MatchCtfScore = 5;

		[Token(Token = "0x400071E")]
		public const float FlagIdleResetTime = 60f;

		[Token(Token = "0x400071F")]
		public const float FlagScoreDistance = 2f;

		[Token(Token = "0x4000720")]
		public const float FlagScoreDistanceSq = 4f;

		[Token(Token = "0x4000721")]
		public const float TimeAfterMatchHasEnded = 15f;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly char[] ValidNameCharacters;

		[Token(Token = "0x4000723")]
		public const int MaxLevel = 100;

		[Token(Token = "0x4000724")]
		public const float BotMaxDashDistance = 16f;
	}
	[Token(Token = "0x2000124")]
	public class CreateRoomEventReceiver : GlobalEventListener
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NetCreateRoom _netCreateRoom;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x10D4420", Offset = "0x10D4420", VA = "0x10D4420")]
		public CreateRoomEventReceiver()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class CrouchIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Renderer2;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int ColorID;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color _color;

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x10D4428", Offset = "0x10D4428", VA = "0x10D4428")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x10D44A4", Offset = "0x10D44A4", VA = "0x10D44A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x10D48B0", Offset = "0x10D48B0", VA = "0x10D48B0")]
		public CrouchIndicator()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class CullingZone : MonoBehaviour
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x10D4908", Offset = "0x10D4908", VA = "0x10D4908")]
		private void Start()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x10D490C", Offset = "0x10D490C", VA = "0x10D490C")]
		private void Update()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x10D4910", Offset = "0x10D4910", VA = "0x10D4910")]
		public CullingZone()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class CullingZones : MonoBehaviour
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Bounds[] _zones;

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x10D4918", Offset = "0x10D4918", VA = "0x10D4918")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x10D4AF0", Offset = "0x10D4AF0", VA = "0x10D4AF0")]
		public static int SampleMask(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x10D4C1C", Offset = "0x10D4C1C", VA = "0x10D4C1C")]
		public CullingZones()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public enum SeasonalEvent
	{
		[Token(Token = "0x400072E")]
		None,
		[Token(Token = "0x400072F")]
		Halloween,
		[Token(Token = "0x4000730")]
		Winter
	}
	[Serializable]
	[Token(Token = "0x2000129")]
	public struct SeasonalEventEntry : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ContentConstraints Constraints;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private string Type;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SeasonalEvent SeasonalEvent;

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x10D4C98", Offset = "0x10D4C98", VA = "0x10D4C98", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x10D4C9C", Offset = "0x10D4C9C", VA = "0x10D4C9C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class StoreSettingsEntry
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ItemStore;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IapStore;

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x10D4DA0", Offset = "0x10D4DA0", VA = "0x10D4DA0")]
		public StoreSettingsEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public class CustomSettings
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool LevelWeightEnabled;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LevelWeightDiffMin;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int LevelWeightDiffMax;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 LevelWeightRange;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int PacketLossSevere;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int PacketLossWarning;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int PingSevere;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int PingWarning;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowPromoButton;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StoreSettingsEntry[] StoreSettingsOverwrite;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StoreSettingsEntry StoreSettings;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SeasonalEvent SeasonalEvent;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SeasonalEventEntry[] SeasonalEventOverwrite;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RuntimeMapData[] RuntimeMaps;

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x10D4DB0", Offset = "0x10D4DB0", VA = "0x10D4DB0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x10D5074", Offset = "0x10D5074", VA = "0x10D5074")]
		public CustomSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public class SpecialServerEntry
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelRange LevelRange;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxAllowedPing;

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x10D51DC", Offset = "0x10D51DC", VA = "0x10D51DC")]
		public SpecialServerEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class CustomServerSettings
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private RuntimeMapData[] RuntimeMaps;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public SpecialServerEntry[] SpecialServers;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMapData HighlightedMap;

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x10D524C", Offset = "0x10D524C", VA = "0x10D524C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x10D52F8", Offset = "0x10D52F8", VA = "0x10D52F8")]
		public CustomServerSettings()
		{
		}
	}
	[Token(Token = "0x200012E")]
	[CreateAssetMenu(fileName = "CustomSettingsViewer", menuName = "HyperDash/CustomSettingsViewer")]
	public class CustomSettingsViewer : ScriptableObject
	{
		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomSettings CustomClientSettings;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomServerSettings CustomServerSettings;

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x10D53EC", Offset = "0x10D53EC", VA = "0x10D53EC")]
		[ContextMenu("Print serialized")]
		public void Print()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x10D54CC", Offset = "0x10D54CC", VA = "0x10D54CC")]
		public CustomSettingsViewer()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class DashController : MonoBehaviour
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DashTrajectory _dashTrajectory;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastValidTime;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _lastValidPosition;

		[Token(Token = "0x17000087")]
		public bool UsingRightController
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x10D54D4", Offset = "0x10D54D4", VA = "0x10D54D4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x10D54DC", Offset = "0x10D54DC", VA = "0x10D54DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool UsingLeftController
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x10D54E8", Offset = "0x10D54E8", VA = "0x10D54E8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x10D54F0", Offset = "0x10D54F0", VA = "0x10D54F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public DashTrajectory Trajectory
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x10D54FC", Offset = "0x10D54FC", VA = "0x10D54FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public NetCharacterBehaviour Player
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x10D5504", Offset = "0x10D5504", VA = "0x10D5504")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0x10D550C", Offset = "0x10D550C", VA = "0x10D550C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x10D5514", Offset = "0x10D5514", VA = "0x10D5514")]
		public void UpdateInput(NetCharacterBehaviour player, bool leftButton, bool rightButton)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x10D56CC", Offset = "0x10D56CC", VA = "0x10D56CC")]
		public void CalculateDashTrajectory(Transform anchor, Vector3 headPosition, CharacterController characterController)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x10D5964", Offset = "0x10D5964", VA = "0x10D5964")]
		public void OnDash()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x10D5698", Offset = "0x10D5698", VA = "0x10D5698")]
		public void ClearInputAndHideTrajectory()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x10D5988", Offset = "0x10D5988", VA = "0x10D5988")]
		public void OnRespawn()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x10D58FC", Offset = "0x10D58FC", VA = "0x10D58FC")]
		public bool IsHandInWall(Vector3 hand, Vector3 headPosition, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x10D59AC", Offset = "0x10D59AC", VA = "0x10D59AC")]
		public DashController()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[DefaultExecutionOrder(10000)]
	public class DashDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite _dashFullImage;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _dashEmptyImage;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer[] _indicators;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerMovement _playerMovement;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DashTrajectory _dashTrajectory;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _visibilityRoot;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isShowingBoost;

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x10D59B4", Offset = "0x10D59B4", VA = "0x10D59B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x10D5A94", Offset = "0x10D5A94", VA = "0x10D5A94")]
		private void ToggleBoost(bool enable)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x10D5B0C", Offset = "0x10D5B0C", VA = "0x10D5B0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x10D5F58", Offset = "0x10D5F58", VA = "0x10D5F58")]
		public DashDisplay()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[ExecuteInEditMode]
	public class DashLineTester : MonoBehaviour
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterController CharacterController;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashTrajectory DashTrajectory;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask LayerMask;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DashIndicator DashIndicator;

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x10D5F60", Offset = "0x10D5F60", VA = "0x10D5F60")]
		private void Start()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x10D5FA4", Offset = "0x10D5FA4", VA = "0x10D5FA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x10D60A4", Offset = "0x10D60A4", VA = "0x10D60A4")]
		public DashLineTester()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[CreateAssetMenu(fileName = "DashPickup", menuName = "Pickups/Dash", order = 1)]
	public class DashPickup : Pickup
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _pickupModel;

		[Token(Token = "0x1700008B")]
		public override GameObject Model
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x10D60AC", Offset = "0x10D60AC", VA = "0x10D60AC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public override bool ListenForRequestPickup
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x10D60B4", Offset = "0x10D60B4", VA = "0x10D60B4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x10D60BC", Offset = "0x10D60BC", VA = "0x10D60BC", Slot = "6")]
		public override bool PickUp(NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x10D60D4", Offset = "0x10D60D4", VA = "0x10D60D4")]
		public DashPickup()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class DeathMatch : Match
	{
		[Token(Token = "0x2000134")]
		private enum DeathmatchState
		{
			[Token(Token = "0x400076A")]
			None,
			[Token(Token = "0x400076B")]
			Playing,
			[Token(Token = "0x400076C")]
			MatchOver,
			[Token(Token = "0x400076D")]
			NextMap
		}

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DeathmatchState _matchState;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _stateTime;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _stateChangeTime;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMatchState _boltState;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _totalKills;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _sortIsDirty;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<PlayerObject> _sortedPlayers;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _previousLeaderTeam;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _previousLeaderKills;

		[Token(Token = "0x1700008D")]
		public override float Timer
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x10D60DC", Offset = "0x10D60DC", VA = "0x10D60DC", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008E")]
		public override float RespawnTime
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x10D6264", Offset = "0x10D6264", VA = "0x10D6264", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x10D626C", Offset = "0x10D626C", VA = "0x10D626C", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x10D63A4", Offset = "0x10D63A4", VA = "0x10D63A4", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x10D6B18", Offset = "0x10D6B18", VA = "0x10D6B18", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x10D6A84", Offset = "0x10D6A84", VA = "0x10D6A84")]
		private void ServerChangeState(DeathmatchState newState)
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x10D74B8", Offset = "0x10D74B8", VA = "0x10D74B8")]
		private void ServerEnterState(DeathmatchState newState)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x10D6E28", Offset = "0x10D6E28", VA = "0x10D6E28")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x10D76B8", Offset = "0x10D76B8", VA = "0x10D76B8")]
		private void EndOfGameAnnouncerAndMusic()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x10D7A94", Offset = "0x10D7A94", VA = "0x10D7A94", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x10D777C", Offset = "0x10D777C", VA = "0x10D777C")]
		private void SortPlayers()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x10D7AA4", Offset = "0x10D7AA4", VA = "0x10D7AA4")]
		private int SortByKills(PlayerObject player, PlayerObject other)
		{
			return default(int);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x10D7B38", Offset = "0x10D7B38", VA = "0x10D7B38", Slot = "34")]
		protected override void UpdateTeamScores()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x10D7DD0", Offset = "0x10D7DD0", VA = "0x10D7DD0", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x10D7EAC", Offset = "0x10D7EAC", VA = "0x10D7EAC", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x10D7EBC", Offset = "0x10D7EBC", VA = "0x10D7EBC", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x10D7EC4", Offset = "0x10D7EC4", VA = "0x10D7EC4")]
		public DeathMatch()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[DefaultExecutionOrder(1000002)]
	public class DebugHud : MonoBehaviour
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas Canvas;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HudTransform HudTransform;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerCallbacks _hardware;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIDebugVariable Template;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIDebugVariable _ping;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIDebugVariable _aliasedPing;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIDebugVariable _serverFrame;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIDebugVariable _serverTime;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UIDebugVariable _fps;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIDebugVariable _minFps;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UIDebugVariable _deltaServerFrame;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UIDebugVariable _packetLoss;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIDebugVariable _setPassCalls;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UIDebugVariable _vertices;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIDebugVariable _drawcalls;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIDebugVariable _measuredHeight;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIDebugVariable _adjustedHeight;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UIDebugVariable _dejitter;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UIDebugVariable _speed;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UIDebugVariable _thumbstickAxis;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private UIDebugVariable _thumbstickAxisRemapped;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private UIDebugVariable _thumbstickAngle;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _positionOffset;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _min;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _max;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _timer;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float _lastMin;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float _lastMax;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _isEnabled;

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x10D8188", Offset = "0x10D8188", VA = "0x10D8188")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x10D8248", Offset = "0x10D8248", VA = "0x10D8248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x10D84E4", Offset = "0x10D84E4", VA = "0x10D84E4")]
		private UIDebugVariable Add(string label)
		{
			return null;
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x10D8630", Offset = "0x10D8630", VA = "0x10D8630")]
		private void UpdateFps()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x10D86BC", Offset = "0x10D86BC", VA = "0x10D86BC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x10D9050", Offset = "0x10D9050", VA = "0x10D9050")]
		public DebugHud()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class DebugObject : MonoBehaviour
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x10D90B8", Offset = "0x10D90B8", VA = "0x10D90B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x10D90DC", Offset = "0x10D90DC", VA = "0x10D90DC")]
		public DebugObject()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class Decals : MonoBehaviour
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x10D90E4", Offset = "0x10D90E4", VA = "0x10D90E4")]
		public static void Bake()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x10D9194", Offset = "0x10D9194", VA = "0x10D9194")]
		private void BakeDecal()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x10D949C", Offset = "0x10D949C", VA = "0x10D949C")]
		public Decals()
		{
		}
	}
	[Token(Token = "0x2000139")]
	[RequireComponent(typeof(Collider))]
	public class DismountTrigger : MonoBehaviour
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Teams _teamToDismount;

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x10D94A4", Offset = "0x10D94A4", VA = "0x10D94A4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x10D9660", Offset = "0x10D9660", VA = "0x10D9660")]
		public DismountTrigger()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[DefaultExecutionOrder(-9999999)]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x10D9670", Offset = "0x10D9670", VA = "0x10D9670")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x10D96DC", Offset = "0x10D96DC", VA = "0x10D96DC")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class EliminationMatch : Match
	{
		[Token(Token = "0x200013C")]
		private enum States
		{
			[Token(Token = "0x40007A0")]
			None,
			[Token(Token = "0x40007A1")]
			PreMatch,
			[Token(Token = "0x40007A2")]
			Round,
			[Token(Token = "0x40007A3")]
			RoundOverKillBreather,
			[Token(Token = "0x40007A4")]
			RoundOver,
			[Token(Token = "0x40007A5")]
			MatchOver,
			[Token(Token = "0x40007A6")]
			NextMap
		}

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _stateTime;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _timeStateChanged;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private States _matchState;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _round;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _maxScore;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _didBreather;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _redAlive;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _blueAlive;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _redCount;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _blueCount;

		[Token(Token = "0x4000798")]
		private const int DurationPerRound = 30;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _botControllingTeam;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _playerAced;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _playedAceVoiceline;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WeaponTypes[] _weaponList;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _previousRoundTime;

		[Token(Token = "0x17000091")]
		public override bool PlayersAreGhostsOnDeath
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x10D96E4", Offset = "0x10D96E4", VA = "0x10D96E4", Slot = "29")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public override float RespawnTime
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x10D96EC", Offset = "0x10D96EC", VA = "0x10D96EC", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000093")]
		public override float Timer
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x10D96F4", Offset = "0x10D96F4", VA = "0x10D96F4", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x10D987C", Offset = "0x10D987C", VA = "0x10D987C", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x10D98F8", Offset = "0x10D98F8", VA = "0x10D98F8", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x10D9BA8", Offset = "0x10D9BA8", VA = "0x10D9BA8")]
		private void ServerChangeState(States newState)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x10D9C24", Offset = "0x10D9C24", VA = "0x10D9C24")]
		private void ServerEnterState(States newState)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x10DB14C", Offset = "0x10DB14C", VA = "0x10DB14C")]
		private void QueueScoreMessages()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x10DAC8C", Offset = "0x10DAC8C", VA = "0x10DAC8C")]
		private Announcer.Messages GetMessageOffset(Announcer.Messages messages, int index)
		{
			return default(Announcer.Messages);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x10DBCC0", Offset = "0x10DBCC0", VA = "0x10DBCC0", Slot = "31")]
		public override void GetStartingWeapons(int playerID, int teamID, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x10DB7B8", Offset = "0x10DB7B8", VA = "0x10DB7B8")]
		private void GetWinningTeam(out Teams teamWithHighestScore, out int teamHighestScore)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x10DADFC", Offset = "0x10DADFC", VA = "0x10DADFC")]
		private void CountAlivePlayers(out int redAlive, out int blueAlive)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x10DAF40", Offset = "0x10DAF40", VA = "0x10DAF40")]
		private void CountAllPlayers(out int red, out int blue)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x10DC06C", Offset = "0x10DC06C", VA = "0x10DC06C")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x10DC5FC", Offset = "0x10DC5FC", VA = "0x10DC5FC")]
		private void CheckForAce()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x10DAC94", Offset = "0x10DAC94", VA = "0x10DAC94")]
		private void RespawnAllPlayers()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x10DC600", Offset = "0x10DC600", VA = "0x10DC600", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x10DC624", Offset = "0x10DC624", VA = "0x10DC624", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x10DC7C0", Offset = "0x10DC7C0", VA = "0x10DC7C0", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x10DC7C8", Offset = "0x10DC7C8", VA = "0x10DC7C8", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x10DC8D8", Offset = "0x10DC8D8", VA = "0x10DC8D8", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x10DBB88", Offset = "0x10DBB88", VA = "0x10DBB88")]
		public void SendWinningTeamMessage(Teams winner, float duration)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x10DB384", Offset = "0x10DB384", VA = "0x10DB384")]
		public void SendRoundScoreMessage(int scoreBlue, int scoreRed, int winner)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x10DB5D0", Offset = "0x10DB5D0", VA = "0x10DB5D0")]
		public void SendRoundTieMessage(int scoreBlue, int scoreRed)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x10DB6BC", Offset = "0x10DB6BC", VA = "0x10DB6BC")]
		public void SendRoundOverMessage()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x10DC8FC", Offset = "0x10DC8FC", VA = "0x10DC8FC", Slot = "35")]
		protected override void UpdateKillStreak(float dt)
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x10DC900", Offset = "0x10DC900", VA = "0x10DC900")]
		public EliminationMatch()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public static class Encription
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x10DCAA8", Offset = "0x10DCAA8", VA = "0x10DCAA8")]
		public static string CreateSHA256Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public class FlashingLight : MonoBehaviour
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _flare;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _offTime;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _onTime;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _startDelay;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isActive;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _timer;

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x10DCB4C", Offset = "0x10DCB4C", VA = "0x10DCB4C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x10DCBF8", Offset = "0x10DCBF8", VA = "0x10DCBF8")]
		protected void Start()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x10DCC28", Offset = "0x10DCC28", VA = "0x10DCC28")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10DCCA4", Offset = "0x10DCCA4", VA = "0x10DCCA4")]
		public FlashingLight()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public struct ProjectileTrajectory
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _point0;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 _point1;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _point2;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _point3;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _point4;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _point5;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _point6;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _point7;

		[Token(Token = "0x17000094")]
		public int Count
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x10DCCAC", Offset = "0x10DCCAC", VA = "0x10DCCAC")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x10DCCB4", Offset = "0x10DCCB4", VA = "0x10DCCB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public Vector3 First
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x10DCCBC", Offset = "0x10DCCBC", VA = "0x10DCCBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000096")]
		public Vector3 Last
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x10DCDCC", Offset = "0x10DCDCC", VA = "0x10DCDCC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000097")]
		public Vector3 this[int index]
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0x10DCCC8", Offset = "0x10DCCC8", VA = "0x10DCCC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x10DCDFC", Offset = "0x10DCDFC", VA = "0x10DCDFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x10DCDD8", Offset = "0x10DCDD8", VA = "0x10DCDD8")]
		public void Add(Vector3 point)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x10DCF0C", Offset = "0x10DCF0C", VA = "0x10DCF0C")]
		public void AddOrShift(Vector3 point)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x10DCFB8", Offset = "0x10DCFB8", VA = "0x10DCFB8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class FPSBot : MonoBehaviour
	{
		[Token(Token = "0x2000141")]
		public enum Modes
		{
			[Token(Token = "0x40007B9")]
			SetPassCalls,
			[Token(Token = "0x40007BA")]
			Vertices,
			[Token(Token = "0x40007BB")]
			Drawcalls,
			[Token(Token = "0x40007BC")]
			FrameTimeTODO
		}

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Modes Mode;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder _output;

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x10DCFC0", Offset = "0x10DCFC0", VA = "0x10DCFC0")]
		public FPSBot()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class FpsPerformance : MonoBehaviour
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FrameTime;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SmoothFrameTime;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Fps;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SmoothFps;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float WarningFps;

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x10DCFC8", Offset = "0x10DCFC8", VA = "0x10DCFC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x10DD05C", Offset = "0x10DD05C", VA = "0x10DD05C")]
		public FpsPerformance()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class FpsStandaloneInputModule : StandaloneInputModule
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public LayerMask Pointer3dMask;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject _currentObject;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PointerEventData _pointer3DEventData;

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x10DD06C", Offset = "0x10DD06C", VA = "0x10DD06C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x10DD10C", Offset = "0x10DD10C", VA = "0x10DD10C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x10DD2F4", Offset = "0x10DD2F4", VA = "0x10DD2F4")]
		private void ProcessOnPress3D(PointerEventData data)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x10DD5E8", Offset = "0x10DD5E8", VA = "0x10DD5E8")]
		private void ProcessOnReleased3D(PointerEventData data)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x10DD8BC", Offset = "0x10DD8BC", VA = "0x10DD8BC")]
		public FpsStandaloneInputModule()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class FxExplosion : MonoBehaviour
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _nearExplosion;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _farExplosion;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer FlareQuad;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light Light;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color StartColor;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timer;

		[Token(Token = "0x40007CB")]
		private const float ExplosionTime = 1f;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string ColorName;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LayerMask LayerMask;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x10DD8C4", Offset = "0x10DD8C4", VA = "0x10DD8C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x10DD92C", Offset = "0x10DD92C", VA = "0x10DD92C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x10DDA20", Offset = "0x10DDA20", VA = "0x10DDA20")]
		private void Update()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x10DDDD4", Offset = "0x10DDDD4", VA = "0x10DDDD4")]
		public FxExplosion()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class FxFistBump : MonoBehaviour
	{
		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light Light;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x40007D1")]
		private const float ExplosionTime = 0.5f;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x10DDE2C", Offset = "0x10DDE2C", VA = "0x10DDE2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x10DDE38", Offset = "0x10DDE38", VA = "0x10DDE38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x10DDEA4", Offset = "0x10DDEA4", VA = "0x10DDEA4")]
		public FxFistBump()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class FxGlow : MonoBehaviour
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TintColorID;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer FlareQuad;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color StartColor;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinScale;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxScale;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask LayerMask;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _alpha;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _fadeSpeed;

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x10DDEAC", Offset = "0x10DDEAC", VA = "0x10DDEAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x10DDF94", Offset = "0x10DDF94", VA = "0x10DDF94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x10DE354", Offset = "0x10DE354", VA = "0x10DE354")]
		public FxGlow()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[DefaultExecutionOrder(-999999)]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x2000148")]
		public struct GameStateChangedArgs
		{
			[Token(Token = "0x170000A2")]
			public GameState PrevState
			{
				[Token(Token = "0x6000649")]
				[Address(RVA = "0x10E0CD4", Offset = "0x10E0CD4", VA = "0x10E0CD4")]
				[CompilerGenerated]
				readonly get
				{
					return default(GameState);
				}
				[Token(Token = "0x600064A")]
				[Address(RVA = "0x10E0CDC", Offset = "0x10E0CDC", VA = "0x10E0CDC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170000A3")]
			public GameState NextState
			{
				[Token(Token = "0x600064B")]
				[Address(RVA = "0x10E0CE4", Offset = "0x10E0CE4", VA = "0x10E0CE4")]
				[CompilerGenerated]
				readonly get
				{
					return default(GameState);
				}
				[Token(Token = "0x600064C")]
				[Address(RVA = "0x10E0CEC", Offset = "0x10E0CEC", VA = "0x10E0CEC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x600064D")]
			[Address(RVA = "0x10DEEA8", Offset = "0x10DEEA8", VA = "0x10DEEA8")]
			public GameStateChangedArgs(GameState prevState, GameState nextState)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000149")]
		[CompilerGenerated]
		private struct <Awake>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600064E")]
			[Address(RVA = "0x10E0CF4", Offset = "0x10E0CF4", VA = "0x10E0CF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600064F")]
			[Address(RVA = "0x10E1494", Offset = "0x10E1494", VA = "0x10E1494", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200014A")]
		[CompilerGenerated]
		private struct <LoginToUnityServices>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x40007F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <isUser>5__2;

			[Token(Token = "0x40007F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40007F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<string>> <>u__2;

			[Token(Token = "0x6000650")]
			[Address(RVA = "0x10E14A0", Offset = "0x10E14A0", VA = "0x10E14A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000651")]
			[Address(RVA = "0x10E1BC0", Offset = "0x10E1BC0", VA = "0x10E1BC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200014C")]
		[CompilerGenerated]
		private sealed class <QuitMatchRoutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x170000A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000657")]
				[Address(RVA = "0x10E1E2C", Offset = "0x10E1E2C", VA = "0x10E1E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000659")]
				[Address(RVA = "0x10E1E74", Offset = "0x10E1E74", VA = "0x10E1E74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000654")]
			[Address(RVA = "0x10E043C", Offset = "0x10E043C", VA = "0x10E043C")]
			[DebuggerHidden]
			public <QuitMatchRoutine>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6000655")]
			[Address(RVA = "0x10E1C64", Offset = "0x10E1C64", VA = "0x10E1C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000656")]
			[Address(RVA = "0x10E1C68", Offset = "0x10E1C68", VA = "0x10E1C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000658")]
			[Address(RVA = "0x10E1E34", Offset = "0x10E1E34", VA = "0x10E1E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200014D")]
		[CompilerGenerated]
		private sealed class <QuitGameRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600065D")]
				[Address(RVA = "0x10E1FB0", Offset = "0x10E1FB0", VA = "0x10E1FB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600065F")]
				[Address(RVA = "0x10E1FF8", Offset = "0x10E1FF8", VA = "0x10E1FF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600065A")]
			[Address(RVA = "0x10E0C1C", Offset = "0x10E0C1C", VA = "0x10E0C1C")]
			[DebuggerHidden]
			public <QuitGameRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x600065B")]
			[Address(RVA = "0x10E1E7C", Offset = "0x10E1E7C", VA = "0x10E1E7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600065C")]
			[Address(RVA = "0x10E1E80", Offset = "0x10E1E80", VA = "0x10E1E80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600065E")]
			[Address(RVA = "0x10E1FB8", Offset = "0x10E1FB8", VA = "0x10E1FB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager _instance;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string GitCommitSha;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string GitCommitShaShort;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastActiveRichPresenceTime;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _consentHasBeenChecked;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> _consentIdentifiers;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MapDictionary MapDic;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WeaponCollectionPickup RandomWeaponCollection;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool IsOfflineMode;

		[Token(Token = "0x17000098")]
		public static GameManager Instance
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0x10DE53C", Offset = "0x10DE53C", VA = "0x10DE53C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public BoltController BoltController
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x10DE610", Offset = "0x10DE610", VA = "0x10DE610")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x10DE618", Offset = "0x10DE618", VA = "0x10DE618")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public ClientBoltController ClientBoltController
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x10DE620", Offset = "0x10DE620", VA = "0x10DE620")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x10DE628", Offset = "0x10DE628", VA = "0x10DE628")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public SinglePlayerBoltController SinglePlayerBoltController
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x10DE630", Offset = "0x10DE630", VA = "0x10DE630")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600061E")]
			[Address(RVA = "0x10DE638", Offset = "0x10DE638", VA = "0x10DE638")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Dispatcher MainDispatcher
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x10DE640", Offset = "0x10DE640", VA = "0x10DE640")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000620")]
			[Address(RVA = "0x10DE648", Offset = "0x10DE648", VA = "0x10DE648")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public static int MrcHiddenLayer
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0x10DE650", Offset = "0x10DE650", VA = "0x10DE650")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x10DE698", Offset = "0x10DE698", VA = "0x10DE698")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public GameClientAPI GameClientApi
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0x10DE6E4", Offset = "0x10DE6E4", VA = "0x10DE6E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000624")]
			[Address(RVA = "0x10DE6EC", Offset = "0x10DE6EC", VA = "0x10DE6EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public static GameState GameState
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0x10DE6F4", Offset = "0x10DE6F4", VA = "0x10DE6F4")]
			[CompilerGenerated]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6000626")]
			[Address(RVA = "0x10DE73C", Offset = "0x10DE73C", VA = "0x10DE73C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool IsStartingTrainingMap
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0x10DFA94", Offset = "0x10DFA94", VA = "0x10DFA94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public bool IsQuitingToMainMenu
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x10DFAF4", Offset = "0x10DFAF4", VA = "0x10DFAF4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000636")]
			[Address(RVA = "0x10DFAFC", Offset = "0x10DFAFC", VA = "0x10DFAFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<GameManager, GameStateChangedArgs> GameStateChangedEvent
		{
			[Token(Token = "0x6000616")]
			[Address(RVA = "0x10DE3DC", Offset = "0x10DE3DC", VA = "0x10DE3DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000617")]
			[Address(RVA = "0x10DE48C", Offset = "0x10DE48C", VA = "0x10DE48C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x10DE788", Offset = "0x10DE788", VA = "0x10DE788")]
		public void FadeToOfflineMode()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x10DE860", Offset = "0x10DE860", VA = "0x10DE860")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x10DE904", Offset = "0x10DE904", VA = "0x10DE904")]
		[AsyncStateMachine(typeof(<Awake>d__45))]
		protected void Awake()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x10DE9BC", Offset = "0x10DE9BC", VA = "0x10DE9BC")]
		[AsyncStateMachine(typeof(<LoginToUnityServices>d__46))]
		public System.Threading.Tasks.Task LoginToUnityServices()
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x10DEAA8", Offset = "0x10DEAA8", VA = "0x10DEAA8")]
		public void GiveAnalyticsUserConsent()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x10DEDB8", Offset = "0x10DEDB8", VA = "0x10DEDB8")]
		public void ChangeGameState(GameState state)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x10DEEA0", Offset = "0x10DEEA0", VA = "0x10DEEA0")]
		private void ExitGameState(GameState prevState)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x10DEEA4", Offset = "0x10DEEA4", VA = "0x10DEEA4")]
		private void EnterGameState(GameState newState)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x10DEEB0", Offset = "0x10DEEB0", VA = "0x10DEEB0")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x10DF1A0", Offset = "0x10DF1A0", VA = "0x10DF1A0")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x10DF6B0", Offset = "0x10DF6B0", VA = "0x10DF6B0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x10DF898", Offset = "0x10DF898", VA = "0x10DF898")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x10DF9F0", Offset = "0x10DF9F0", VA = "0x10DF9F0")]
		public bool TryGetMapDataByName(string mapName, out RuntimeMapData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x10DFB08", Offset = "0x10DFB08", VA = "0x10DFB08")]
		private void SetBoltController(BoltController controller, [Optional] Action<bool, int> callback)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x10DFC50", Offset = "0x10DFC50", VA = "0x10DFC50")]
		public void SwitchToSinglePlayer()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x10DFE2C", Offset = "0x10DFE2C", VA = "0x10DFE2C")]
		public void StartOffline(Action<bool, int> callback)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x10DFF4C", Offset = "0x10DFF4C", VA = "0x10DFF4C")]
		public void SwitchToClient(Action<bool, int> callback)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x10DFD70", Offset = "0x10DFD70", VA = "0x10DFD70")]
		private SinglePlayerBoltController SpawnSinglePlayerController()
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x10E01C4", Offset = "0x10E01C4", VA = "0x10E01C4")]
		private ClientBoltController SpawnClientController()
		{
			return null;
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x10E0280", Offset = "0x10E0280", VA = "0x10E0280")]
		public void GotoGameOver()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x10E0338", Offset = "0x10E0338", VA = "0x10E0338")]
		public void GotoLobby()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x10E0310", Offset = "0x10E0310", VA = "0x10E0310")]
		public void StartQuitMatchRoutine()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x10E03C8", Offset = "0x10E03C8", VA = "0x10E03C8")]
		[IteratorStateMachine(typeof(<QuitMatchRoutine>d__71))]
		private IEnumerator QuitMatchRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x10E0464", Offset = "0x10E0464", VA = "0x10E0464")]
		public void AutoJoinFromAnywhere(string ipPort)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x10E04B4", Offset = "0x10E04B4", VA = "0x10E04B4")]
		public void AutoJoinFromAnywhere(string ip, string port)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x10E063C", Offset = "0x10E063C", VA = "0x10E063C")]
		public bool IsInMainMenu(out MainMenuView view)
		{
			return default(bool);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x10E0798", Offset = "0x10E0798", VA = "0x10E0798")]
		public void LeaveMatchIfNeeded()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x10E0850", Offset = "0x10E0850", VA = "0x10E0850")]
		public static void QuitGame()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x10E0BBC", Offset = "0x10E0BBC", VA = "0x10E0BBC")]
		[IteratorStateMachine(typeof(<QuitGameRoutine>d__77))]
		private static IEnumerator QuitGameRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x10E0C44", Offset = "0x10E0C44", VA = "0x10E0C44")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class GameOverMatch : Match
	{
		[Token(Token = "0x200014F")]
		private enum ServerStates
		{
			[Token(Token = "0x4000805")]
			Party,
			[Token(Token = "0x4000806")]
			Voting,
			[Token(Token = "0x4000807")]
			NextMap
		}

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _teamScoreboard;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _deathmatchScoreboard;

		[Token(Token = "0x4000802")]
		private const int GameOverDuration = 30;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ServerStates _serverState;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x10E2000", Offset = "0x10E2000", VA = "0x10E2000", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x10E2048", Offset = "0x10E2048", VA = "0x10E2048", Slot = "34")]
		protected override void UpdateTeamScores()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x10E204C", Offset = "0x10E204C", VA = "0x10E204C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x10E2268", Offset = "0x10E2268", VA = "0x10E2268", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x10E2494", Offset = "0x10E2494", VA = "0x10E2494", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x10E24F4", Offset = "0x10E24F4", VA = "0x10E24F4", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x10E24FC", Offset = "0x10E24FC", VA = "0x10E24FC")]
		private void ArcadeEndMatch()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x10E25B4", Offset = "0x10E25B4", VA = "0x10E25B4", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x10E25B8", Offset = "0x10E25B8", VA = "0x10E25B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x10E27D8", Offset = "0x10E27D8", VA = "0x10E27D8", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x10E27E0", Offset = "0x10E27E0", VA = "0x10E27E0", Slot = "31")]
		public override void GetStartingWeapons(int playerID, int teamID, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x10E2998", Offset = "0x10E2998", VA = "0x10E2998")]
		public GameOverMatch()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public enum GameState
	{
		[Token(Token = "0x4000809")]
		None,
		[Token(Token = "0x400080A")]
		MainMenu,
		[Token(Token = "0x400080B")]
		MultiplayerLobby,
		[Token(Token = "0x400080C")]
		MultiplayerMatch,
		[Token(Token = "0x400080D")]
		MultiplayerGameOver,
		[Token(Token = "0x400080E")]
		Singleplayer
	}
	[Token(Token = "0x2000151")]
	public class GrindRail : MonoBehaviour
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int RailID;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SplineComputer SplineComputer;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int InvalidID;

		[Token(Token = "0x4000813")]
		private const float Spacing = 0.25f;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Vector3> _cashedList;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] _path;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] _segmentMidPoints;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<int, GrindRail> Grindrails;

		[Token(Token = "0x170000A8")]
		public bool BotIsCartRail
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0x10E29EC", Offset = "0x10E29EC", VA = "0x10E29EC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x10E29F4", Offset = "0x10E29F4", VA = "0x10E29F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public float RailLength
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x10E2A00", Offset = "0x10E2A00", VA = "0x10E2A00")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x10E2A08", Offset = "0x10E2A08", VA = "0x10E2A08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x10E2A10", Offset = "0x10E2A10", VA = "0x10E2A10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x10E2A90", Offset = "0x10E2A90", VA = "0x10E2A90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x10E2D38", Offset = "0x10E2D38", VA = "0x10E2D38")]
		public void PrecaluclatePathAndSegments()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x10E36A4", Offset = "0x10E36A4", VA = "0x10E36A4")]
		private static Vector3 EvaluateQuadratic(Vector3 a, Vector3 b, Vector3 c, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x10E352C", Offset = "0x10E352C", VA = "0x10E352C")]
		private static Vector3 EvaluateCubic(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x10E3724", Offset = "0x10E3724", VA = "0x10E3724")]
		public float ProjectPercent(Vector3 startPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x10E3758", Offset = "0x10E3758", VA = "0x10E3758")]
		public float ProjectDistance(Vector3 startPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x10E3A60", Offset = "0x10E3A60", VA = "0x10E3A60")]
		public RailResult Project(Vector3 startPosition)
		{
			return default(RailResult);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x10E4044", Offset = "0x10E4044", VA = "0x10E4044")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x10E4098", Offset = "0x10E4098", VA = "0x10E4098")]
		public RailResult EvaluateDistance(float distance)
		{
			return default(RailResult);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x10E4494", Offset = "0x10E4494", VA = "0x10E4494")]
		public RailResult EvaluatePercent(float percent)
		{
			return default(RailResult);
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x10E44DC", Offset = "0x10E44DC", VA = "0x10E44DC")]
		public GrindRail()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public struct RailResult
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Direction;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Percent;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Distance;
	}
	[Token(Token = "0x2000153")]
	public enum HandPoses
	{
		[Token(Token = "0x400081E")]
		Open,
		[Token(Token = "0x400081F")]
		Pistol,
		[Token(Token = "0x4000820")]
		FoamHand,
		[Token(Token = "0x4000821")]
		Ball
	}
	[Token(Token = "0x2000154")]
	public class HapticManager : MonoBehaviour
	{
		[Token(Token = "0x2000155")]
		public enum Haptics
		{
			[Token(Token = "0x4000829")]
			Shot,
			[Token(Token = "0x400082A")]
			Empty,
			[Token(Token = "0x400082B")]
			ReloadReady,
			[Token(Token = "0x400082C")]
			Pickup,
			[Token(Token = "0x400082D")]
			UIHaptic
		}

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _activePriorityLeft;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _activePriorityRight;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _stopTimerLeft;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _stopTimerRight;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HapticManager _instance;

		[Token(Token = "0x170000AA")]
		public static bool HasInstance
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x10E464C", Offset = "0x10E464C", VA = "0x10E464C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067E")]
			[Address(RVA = "0x10E4694", Offset = "0x10E4694", VA = "0x10E4694")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public static HapticManager Instance
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x10E46E0", Offset = "0x10E46E0", VA = "0x10E46E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x10E4728", Offset = "0x10E4728", VA = "0x10E4728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x10E47B4", Offset = "0x10E47B4", VA = "0x10E47B4")]
		public void PlayHaptic(int handIndex, Haptics haptic)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x10E4848", Offset = "0x10E4848", VA = "0x10E4848")]
		private void StartHaptic(int handIndex, int priority, float freq, float amplitude, float duration)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x10E4924", Offset = "0x10E4924", VA = "0x10E4924")]
		private void Update()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x10E0A9C", Offset = "0x10E0A9C", VA = "0x10E0A9C")]
		public void StopAllHaptics()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x10E4A0C", Offset = "0x10E4A0C", VA = "0x10E4A0C")]
		public HapticManager()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[CreateAssetMenu(fileName = "HealthPickup", menuName = "Pickups/Health", order = 1)]
	public class HealthPickup : Pickup
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _pickupModel;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _health;

		[Token(Token = "0x170000AC")]
		public override GameObject Model
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x10E4A1C", Offset = "0x10E4A1C", VA = "0x10E4A1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public override bool ListenForRequestPickup
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x10E4A24", Offset = "0x10E4A24", VA = "0x10E4A24", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x10E4A2C", Offset = "0x10E4A2C", VA = "0x10E4A2C", Slot = "6")]
		public override bool PickUp(NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x10E4A50", Offset = "0x10E4A50", VA = "0x10E4A50")]
		public HealthPickup()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[DefaultExecutionOrder(200)]
	public class HitMarker : MonoBehaviour
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstantScale;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Scale;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _time;

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x10E4A60", Offset = "0x10E4A60", VA = "0x10E4A60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x10E4A68", Offset = "0x10E4A68", VA = "0x10E4A68")]
		private void Update()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x10E4D9C", Offset = "0x10E4D9C", VA = "0x10E4D9C")]
		private float EaseOutElastic(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x10E4E08", Offset = "0x10E4E08", VA = "0x10E4E08")]
		public HitMarker()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class HostLogin : MonoBehaviour
	{
		[Token(Token = "0x2000159")]
		[CompilerGenerated]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HostLogin <>4__this;

			[Token(Token = "0x170000AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000694")]
				[Address(RVA = "0x10E52E0", Offset = "0x10E52E0", VA = "0x10E52E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000696")]
				[Address(RVA = "0x10E5328", Offset = "0x10E5328", VA = "0x10E5328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000691")]
			[Address(RVA = "0x10E4E8C", Offset = "0x10E4E8C", VA = "0x10E4E8C")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000692")]
			[Address(RVA = "0x10E5094", Offset = "0x10E5094", VA = "0x10E5094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000693")]
			[Address(RVA = "0x10E5098", Offset = "0x10E5098", VA = "0x10E5098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000695")]
			[Address(RVA = "0x10E52E8", Offset = "0x10E52E8", VA = "0x10E52E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x10E4E18", Offset = "0x10E4E18", VA = "0x10E4E18")]
		[IteratorStateMachine(typeof(<Start>d__0))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x10E4EB4", Offset = "0x10E4EB4", VA = "0x10E4EB4")]
		private void OnLoginEvent(AccountManager sender, Response<LoginResponse> response)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x10E508C", Offset = "0x10E508C", VA = "0x10E508C")]
		public HostLogin()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class HUDtests : MonoBehaviour
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x10E5330", Offset = "0x10E5330", VA = "0x10E5330")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x10E5E4C", Offset = "0x10E5E4C", VA = "0x10E5E4C")]
		public HUDtests()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class HyperDashCamera : MonoBehaviour
	{
		[Token(Token = "0x200015C")]
		public enum Modes
		{
			[Token(Token = "0x400083F")]
			Player,
			[Token(Token = "0x4000840")]
			Spectator
		}

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Modes Mode;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera _camera;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material MistSkybox;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _sceneFarClipPlane;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _sceneUseOcclusionCulling;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool _sceneIsSocial;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool _sceneIsIngameMenuOpen;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsIngameMenuOpen;

		[Token(Token = "0x170000B0")]
		public Camera Camera
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x10E5E54", Offset = "0x10E5E54", VA = "0x10E5E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x10E5E5C", Offset = "0x10E5E5C", VA = "0x10E5E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x10E5F98", Offset = "0x10E5F98", VA = "0x10E5F98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x10E603C", Offset = "0x10E603C", VA = "0x10E603C")]
		private void SetCpuAndGpu(int cpu, int gpu)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x10E6040", Offset = "0x10E6040", VA = "0x10E6040")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x10E643C", Offset = "0x10E643C", VA = "0x10E643C")]
		private void Update()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x10E6114", Offset = "0x10E6114", VA = "0x10E6114")]
		private void ApplyScenePerformanceSettings(bool sceneIsSocial, bool ingameMenu, float sceneFarClipPlane, bool sceneUseOcclusionCulling)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x10E64BC", Offset = "0x10E64BC", VA = "0x10E64BC")]
		public HyperDashCamera()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class HyperFileLogger : GlobalEventListener
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PhotonSession _currentSession;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _currentFilePath;

		[Token(Token = "0x170000B1")]
		private static string TimeStamp
		{
			[Token(Token = "0x60006A1")]
			[Address(RVA = "0x10E64C4", Offset = "0x10E64C4", VA = "0x10E64C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x10E6544", Offset = "0x10E6544", VA = "0x10E6544")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x10DF2A8", Offset = "0x10DF2A8", VA = "0x10DF2A8")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x10E6C78", Offset = "0x10E6C78", VA = "0x10E6C78", Slot = "12")]
		public override void BoltStartBegin()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x10E6CB8", Offset = "0x10E6CB8", VA = "0x10E6CB8", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x10E6D3C", Offset = "0x10E6D3C", VA = "0x10E6D3C", Slot = "14")]
		public override void BoltStartFailed(UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x10E6DC0", Offset = "0x10E6DC0", VA = "0x10E6DC0", Slot = "36")]
		public override void SessionConnected(UdpSession session, IProtocolToken token)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x10E6F84", Offset = "0x10E6F84", VA = "0x10E6F84", Slot = "27")]
		public override void Disconnected(BoltConnection connection)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x10E7110", Offset = "0x10E7110", VA = "0x10E7110")]
		public HyperFileLogger()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public static class IntFlagExtensions
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x10E71A8", Offset = "0x10E71A8", VA = "0x10E71A8")]
		public static int SetFlag(this int value, int flagValue, bool setOn)
		{
			return default(int);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x10E71BC", Offset = "0x10E71BC", VA = "0x10E71BC")]
		public static int AddFlag(this int value, int flagValue)
		{
			return default(int);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x10E71C4", Offset = "0x10E71C4", VA = "0x10E71C4")]
		public static int RemoveFlag(this int value, int flagValue)
		{
			return default(int);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x10E71CC", Offset = "0x10E71CC", VA = "0x10E71CC")]
		public static bool HasFlag(this int value, int flagValue)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000160")]
	public static class IOHelpers
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x10E71D8", Offset = "0x10E71D8", VA = "0x10E71D8")]
		public static void CopyDirectory(string sourceDirectory, string targetDirectory, bool copyMetaFiles = false)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x10E726C", Offset = "0x10E726C", VA = "0x10E726C")]
		public static void CopyDirectory(DirectoryInfo source, DirectoryInfo target, bool copyMetaFiles = false)
		{
		}
	}
	[Token(Token = "0x2000161")]
	[RequireComponent(typeof(Collider))]
	public class KillCollider : MonoBehaviour
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Effects KillEffect;

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x10E7470", Offset = "0x10E7470", VA = "0x10E7470")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x10E7BDC", Offset = "0x10E7BDC", VA = "0x10E7BDC")]
		public KillCollider()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class LayerUtil : MonoBehaviour
	{
		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask _wallLayers;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask _handInwallLayers;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask _ballInwallLayers;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask _dashMaskRed;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask _dashMaskBlue;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LayerMask _nonDashableSurfaces;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _characterControllerRed;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _characterControllerBlue;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LayerMask _groundMask;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LayerMask HandInWallLayers;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static LayerMask BallInWallLayers;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static LayerMask DashMaskBlue;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LayerMask DashMaskRed;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static LayerMask NonDashableSurfaces;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int CharacterControllerRedLayer;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int CharacterControllerBlueLayer;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int WeaponLayer;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int RagdollLayer;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int RailLayer;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int PlayerSpectator;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int DashCaptureButton;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int GroundMask;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int DisableCollisionLayer;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int FlagLayer;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int PlayerShieldLayer;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int DefaultLayer;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int PlayerLayer;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x10E7BE4", Offset = "0x10E7BE4", VA = "0x10E7BE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x10E7CBC", Offset = "0x10E7CBC", VA = "0x10E7CBC")]
		public LayerUtil()
		{
		}
	}
	[Token(Token = "0x2000163")]
	[BoltGlobalBehaviour(BoltNetworkModes.Server)]
	public class Levels : GlobalEventListener
	{
		[Token(Token = "0x2000164")]
		[CompilerGenerated]
		private sealed class <LoadLevelRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string level;

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fade;

			[Token(Token = "0x170000B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006C1")]
				[Address(RVA = "0x10E8234", Offset = "0x10E8234", VA = "0x10E8234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006C3")]
				[Address(RVA = "0x10E827C", Offset = "0x10E827C", VA = "0x10E827C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x10E7E6C", Offset = "0x10E7E6C", VA = "0x10E7E6C")]
			[DebuggerHidden]
			public <LoadLevelRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x10E7FA0", Offset = "0x10E7FA0", VA = "0x10E7FA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006C0")]
			[Address(RVA = "0x10E7FA4", Offset = "0x10E7FA4", VA = "0x10E7FA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x10E823C", Offset = "0x10E823C", VA = "0x10E823C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool AdminCanReturnToLobby;

		[Token(Token = "0x170000B2")]
		public static bool IsChangingLevel
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x10E7D30", Offset = "0x10E7D30", VA = "0x10E7D30")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x10E7D88", Offset = "0x10E7D88", VA = "0x10E7D88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x10E7DE4", Offset = "0x10E7DE4", VA = "0x10E7DE4")]
		[IteratorStateMachine(typeof(<LoadLevelRoutine>d__5))]
		public static IEnumerator LoadLevelRoutine(string level, bool fade = true)
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x10E7E94", Offset = "0x10E7E94", VA = "0x10E7E94", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x10E7F4C", Offset = "0x10E7F4C", VA = "0x10E7F4C")]
		public Levels()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class LifeOrb : MonoBehaviour
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrailRenderer _trail;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light _light;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _startTime;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startPosition;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _midPosition;

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x10E8284", Offset = "0x10E8284", VA = "0x10E8284")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x10E8448", Offset = "0x10E8448", VA = "0x10E8448")]
		protected void Update()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x10E86E0", Offset = "0x10E86E0", VA = "0x10E86E0")]
		public LifeOrb()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class LightBakeMaterial : MonoBehaviour
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Material StachedMaterial;

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x10E86E8", Offset = "0x10E86E8", VA = "0x10E86E8")]
		public LightBakeMaterial()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class ListExtensions
	{
		[Token(Token = "0x60006C8")]
		public static List<T> Where<T>(this List<T> list, Predicate<T> predicate)
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		public static List<TResult> Select<TSource, TResult>(this List<TSource> list, Func<TSource, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x60006CA")]
		public static T FirstOrDefault<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x60006CB")]
		public static T FirstOrDefault<T>(this List<T> list, Predicate<T> predicate)
		{
			return (T)null;
		}

		[Token(Token = "0x60006CC")]
		public static T Last<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x60006CD")]
		public static int Sum<T>(this List<T> list, Func<T, int> selector)
		{
			return default(int);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x10E86F0", Offset = "0x10E86F0", VA = "0x10E86F0")]
		public static int Sum(this List<int> list)
		{
			return default(int);
		}

		[Token(Token = "0x60006CF")]
		public static int Count<T>(this List<T> list, Func<T, bool> selector)
		{
			return default(int);
		}

		[Token(Token = "0x60006D0")]
		public static bool Any<T>(this List<T> list, Func<T, bool> selector)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		public static int Remove<T>(this List<T> list, Func<T, bool> selector)
		{
			return default(int);
		}

		[Token(Token = "0x60006D2")]
		public static List<T> GetRange<T>(this List<T> list, int startIndex)
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		public static List<T> Except<T>(this List<T> list, List<T> removeList) where T : IComparable
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		public static List<T> ShiftLeft<T>(this List<T> list, int shiftBy)
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		public static List<T> ShiftRight<T>(this List<T> list, int shiftBy)
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		public static string Join<T>(this List<T> list, string separator)
		{
			return null;
		}

		[Token(Token = "0x60006D7")]
		public static void Fill<T>(this List<T> list)
		{
		}

		[Token(Token = "0x60006D8")]
		public static List<T> Limit<T>(this List<T> list, int limit)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	[BoltGlobalBehaviour(BoltNetworkModes.Server)]
	public class LobbyCallbacks : GlobalEventListener
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x10E8790", Offset = "0x10E8790", VA = "0x10E8790")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x10E8808", Offset = "0x10E8808", VA = "0x10E8808", Slot = "22")]
		public override void Connected(BoltConnection connection)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x10E88EC", Offset = "0x10E88EC", VA = "0x10E88EC", Slot = "117")]
		public override void OnEvent(SwitchTeamRequestEvent e)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x10E8950", Offset = "0x10E8950", VA = "0x10E8950", Slot = "121")]
		public override void OnEvent(VoteEvent evnt)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x10E89D0", Offset = "0x10E89D0", VA = "0x10E89D0", Slot = "27")]
		public override void Disconnected(BoltConnection connection)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x10E8A94", Offset = "0x10E8A94", VA = "0x10E8A94", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x10E91A4", Offset = "0x10E91A4", VA = "0x10E91A4", Slot = "21")]
		public override void SceneLoadRemoteDone(BoltConnection connection, IProtocolToken sceneToken)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x10E9348", Offset = "0x10E9348", VA = "0x10E9348")]
		public LobbyCallbacks()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class LobbyMatch : Match
	{
		[Token(Token = "0x200016A")]
		private enum ServerStates
		{
			[Token(Token = "0x4000876")]
			None,
			[Token(Token = "0x4000877")]
			WaitingForPlayers,
			[Token(Token = "0x4000878")]
			Voting,
			[Token(Token = "0x4000879")]
			WaitingForButton,
			[Token(Token = "0x400087A")]
			AdminSetup
		}

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _votingScreen;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _createRoomScreen;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ServerStates _serverState;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NetVoting VotingMachine;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NetCreateRoom AdminMachine;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _startTime;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ILobbyMatchState _boltState;

		[Token(Token = "0x170000B5")]
		public override float Timer
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x10E9350", Offset = "0x10E9350", VA = "0x10E9350", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x10E9388", Offset = "0x10E9388", VA = "0x10E9388", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x10E9460", Offset = "0x10E9460", VA = "0x10E9460", Slot = "34")]
		protected override void UpdateTeamScores()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x10E95A0", Offset = "0x10E95A0", VA = "0x10E95A0", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x10E990C", Offset = "0x10E990C", VA = "0x10E990C")]
		private void OnLobbyTypeChanged()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x10E9A4C", Offset = "0x10E9A4C", VA = "0x10E9A4C", Slot = "31")]
		public override void GetStartingWeapons(int playerID, int teamID, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x10E9A5C", Offset = "0x10E9A5C", VA = "0x10E9A5C", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x10E9B38", Offset = "0x10E9B38", VA = "0x10E9B38", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x10E9B40", Offset = "0x10E9B40", VA = "0x10E9B40", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x10E9B5C", Offset = "0x10E9B5C", VA = "0x10E9B5C", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x10E9B64", Offset = "0x10E9B64", VA = "0x10E9B64")]
		public LobbyMatch()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class LocalCharacterProvider : CharacterProvider
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x1400000B")]
		public override event Action<NetCharacterBehaviour> ProvideCharacterEvent
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x10E9BB8", Offset = "0x10E9BB8", VA = "0x10E9BB8", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x10E9C68", Offset = "0x10E9C68", VA = "0x10E9C68", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x10E9D18", Offset = "0x10E9D18", VA = "0x10E9D18")]
		public void Update()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x10E9E74", Offset = "0x10E9E74", VA = "0x10E9E74")]
		public LocalCharacterProvider()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[DefaultExecutionOrder(9999)]
	public class LocalDashInput : MonoBehaviour
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DashController _dashController;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputModule _currentInputModule;

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x10E9E7C", Offset = "0x10E9E7C", VA = "0x10E9E7C")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x10EA40C", Offset = "0x10EA40C", VA = "0x10EA40C")]
		public LocalDashInput()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public enum LoginState
	{
		[Token(Token = "0x4000880")]
		RequireLogin,
		[Token(Token = "0x4000881")]
		Busy,
		[Token(Token = "0x4000882")]
		Done,
		[Token(Token = "0x4000883")]
		CheckResponse,
		[Token(Token = "0x4000884")]
		Skipped
	}
	[Token(Token = "0x200016E")]
	public class LogoController : MonoBehaviour
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LogoForOtherSDKs;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _currentLogo;

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x10EA414", Offset = "0x10EA414", VA = "0x10EA414")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x10EA538", Offset = "0x10EA538", VA = "0x10EA538")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x10EA5C4", Offset = "0x10EA5C4", VA = "0x10EA5C4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x10EA708", Offset = "0x10EA708", VA = "0x10EA708")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x10EA7AC", Offset = "0x10EA7AC", VA = "0x10EA7AC")]
		public LogoController()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class LookAtYLocked : MonoBehaviour
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x10EA7B4", Offset = "0x10EA7B4", VA = "0x10EA7B4")]
		protected void Update()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x10EA88C", Offset = "0x10EA88C", VA = "0x10EA88C")]
		public LookAtYLocked()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class MainMenuCharacterController : MonoBehaviour
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _mainMenuLocation;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _customizationLocation;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MainMenuCharacterController Active;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputModule _currentInputModule;

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x10EA894", Offset = "0x10EA894", VA = "0x10EA894")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x10EA8EC", Offset = "0x10EA8EC", VA = "0x10EA8EC")]
		protected void Start()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x10EA930", Offset = "0x10EA930", VA = "0x10EA930")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x10EAA14", Offset = "0x10EAA14", VA = "0x10EAA14")]
		private void Update()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x10EAAD4", Offset = "0x10EAAD4", VA = "0x10EAAD4")]
		public MainMenuCharacterController()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class ContentConstraints : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string MinVersion;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string MaxVersion;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string StartDate;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string EndDate;

		[NonSerialized]
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool PassesConstraints;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x10EAADC", Offset = "0x10EAADC", VA = "0x10EAADC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x10EAAE0", Offset = "0x10EAAE0", VA = "0x10EAAE0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x10EAD40", Offset = "0x10EAD40", VA = "0x10EAD40")]
		public ContentConstraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class RuntimeMapData : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MapName;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SceneName;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string BannerName;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Mutators;

		[NonSerialized]
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite Banner;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string MatchTypeName;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MatchTypes MatchType;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ContentConstraints Constraints;

		[NonSerialized]
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool IsPredefined;

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x10EAD48", Offset = "0x10EAD48", VA = "0x10EAD48", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x10EAD4C", Offset = "0x10EAD4C", VA = "0x10EAD4C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x10EB05C", Offset = "0x10EB05C", VA = "0x10EB05C")]
		public string GetGameModeName()
		{
			return null;
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x10EB064", Offset = "0x10EB064", VA = "0x10EB064")]
		public static string GetGameModeName(MatchTypes matchType)
		{
			return null;
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x10EB238", Offset = "0x10EB238", VA = "0x10EB238")]
		public static string GetGameModeNameEnglish(MatchTypes matchType)
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x10EB304", Offset = "0x10EB304", VA = "0x10EB304")]
		public RuntimeMapData()
		{
		}
	}
	[Token(Token = "0x2000173")]
	[CreateAssetMenu(fileName = "map_name", menuName = "HyperDash/MapData", order = 0)]
	public class MapData : ScriptableObject
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("_sceneName")]
		[SerializeField]
		public string SceneName;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FormerlySerializedAs("_mapName")]
		[SerializeField]
		public string MapName;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[FormerlySerializedAs("_banner")]
		public Sprite Banner;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[FormerlySerializedAs("_matchType")]
		public MatchTypes MatchType;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[FormerlySerializedAs("_mutators")]
		public string Mutators;

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x10EB30C", Offset = "0x10EB30C", VA = "0x10EB30C")]
		public RuntimeMapData ToRuntime()
		{
			return null;
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x10EB418", Offset = "0x10EB418", VA = "0x10EB418")]
		public MapData()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[CreateAssetMenu(menuName = "HyperDash/MapDic", order = 0)]
	public class MapDictionary : ScriptableObject
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<MapData> _mapDataList;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _defaultMapImage;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Sprite> Sprites;

		[Token(Token = "0x170000B6")]
		public List<MapData> MapList
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x10EB420", Offset = "0x10EB420", VA = "0x10EB420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public Sprite DefaultMapImage
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x10EB428", Offset = "0x10EB428", VA = "0x10EB428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public Dictionary<string, RuntimeMapData> Maps
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x10EB430", Offset = "0x10EB430", VA = "0x10EB430")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x10E13B0", Offset = "0x10E13B0", VA = "0x10E13B0")]
		public void Init()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x10EB498", Offset = "0x10EB498", VA = "0x10EB498")]
		public void ClearRuntimeMaps()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x10EB438", Offset = "0x10EB438", VA = "0x10EB438")]
		public void AddRuntimeMap(RuntimeMapData runtimeMap)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x10EB5CC", Offset = "0x10EB5CC", VA = "0x10EB5CC")]
		public MapDictionary()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public abstract class Match : EntityBehaviour<IMatchState>
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FormerlySerializedAs("_waitShields")]
		public GameObject[] WaitShields;

		[Token(Token = "0x40008A4")]
		protected const float TimeAfterMatchHasEnded = 15f;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float MatchStartTime;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<RoundData> _roundData;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int RoundCount;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpawnMatch _spawnMatchData;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static bool IsTeamBased;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public static bool CanUpdateStats;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public static bool AllowFire;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public static bool BotMatchStarted;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PickupSpawner[] _pickups;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameState GameState;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _checkIfEmpty;

		[Token(Token = "0x170000B9")]
		public static bool HasInstance
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x10EB6A4", Offset = "0x10EB6A4", VA = "0x10EB6A4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x10EB6FC", Offset = "0x10EB6FC", VA = "0x10EB6FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public static Match Active
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x10EB758", Offset = "0x10EB758", VA = "0x10EB758")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x10EB7B0", Offset = "0x10EB7B0", VA = "0x10EB7B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public virtual float Timer
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x10EB810", Offset = "0x10EB810", VA = "0x10EB810", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BC")]
		public virtual float RespawnTime
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x10EB998", Offset = "0x10EB998", VA = "0x10EB998", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BD")]
		public virtual bool PlayersAreGhostsOnDeath
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x10EB9A0", Offset = "0x10EB9A0", VA = "0x10EB9A0", Slot = "29")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		public bool PlayKillMessages
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x10EB9A8", Offset = "0x10EB9A8", VA = "0x10EB9A8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x10EB9B0", Offset = "0x10EB9B0", VA = "0x10EB9B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public static MatchTypes MatchType
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x10EB9BC", Offset = "0x10EB9BC", VA = "0x10EB9BC")]
			[CompilerGenerated]
			get
			{
				return default(MatchTypes);
			}
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x10EBA14", Offset = "0x10EBA14", VA = "0x10EBA14")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x10D62D0", Offset = "0x10D62D0", VA = "0x10D62D0", Slot = "30")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x10D6770", Offset = "0x10D6770", VA = "0x10D6770", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x10EBC68", Offset = "0x10EBC68", VA = "0x10EBC68")]
		protected void Start()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x10EBD50", Offset = "0x10EBD50", VA = "0x10EBD50", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x10EBE64", Offset = "0x10EBE64", VA = "0x10EBE64", Slot = "31")]
		public virtual void GetStartingWeapons(int playerID, int teamID, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x10EBA70", Offset = "0x10EBA70", VA = "0x10EBA70")]
		private void SetGameState()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x10DAC2C", Offset = "0x10DAC2C", VA = "0x10DAC2C")]
		public void ResetPickups()
		{
		}

		[Token(Token = "0x6000722")]
		public abstract void Skip();

		[Token(Token = "0x6000723")]
		public abstract bool QueryCanUpdateStats();

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x10EBAE0", Offset = "0x10EBAE0", VA = "0x10EBAE0")]
		public void OnWaitShieldsChanged()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x10EBEF0", Offset = "0x10EBEF0", VA = "0x10EBEF0")]
		public int GetTeamScore(Teams team)
		{
			return default(int);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x10EBFE4", Offset = "0x10EBFE4", VA = "0x10EBFE4")]
		public void FillEmptySpotsWithBots()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x10D6DC4", Offset = "0x10D6DC4", VA = "0x10D6DC4")]
		public void AddOrRemoveBots(int botCount)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x10EC06C", Offset = "0x10EC06C", VA = "0x10EC06C", Slot = "34")]
		protected virtual void UpdateTeamScores()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x10EC420", Offset = "0x10EC420", VA = "0x10EC420")]
		protected Teams CalculateWinner()
		{
			return default(Teams);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x10D6B84", Offset = "0x10D6B84", VA = "0x10D6B84", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x10EC748", Offset = "0x10EC748", VA = "0x10EC748", Slot = "35")]
		protected virtual void UpdateKillStreak(float dt)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x10D7A1C", Offset = "0x10D7A1C", VA = "0x10D7A1C")]
		public void GotoGameOver()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x10E9B44", Offset = "0x10E9B44", VA = "0x10E9B44")]
		protected void GotoLobby()
		{
		}

		[Token(Token = "0x600072E")]
		public abstract bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective);

		[Token(Token = "0x600072F")]
		public abstract bool QueryAllowFire();

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x10DB04C", Offset = "0x10DB04C", VA = "0x10DB04C")]
		protected void AddRoundDataEntry(float roundTime, Teams winner)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x10DBC3C", Offset = "0x10DBC3C", VA = "0x10DBC3C")]
		protected void ApiSendGameEnd(Teams winningTeam)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x10D7998", Offset = "0x10D7998", VA = "0x10D7998")]
		protected void ApiSendGameEndDeathmatch(List<PlayerObject> rankedPlayers)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x10D7F84", Offset = "0x10D7F84", VA = "0x10D7F84")]
		protected Match()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class MatchTimer : MonoBehaviour
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _timerText;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cachedTime;

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x10EC8B4", Offset = "0x10EC8B4", VA = "0x10EC8B4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x10ECBB8", Offset = "0x10ECBB8", VA = "0x10ECBB8")]
		public MatchTimer()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public enum MatchTypes
	{
		[Token(Token = "0x40008B8")]
		None,
		[Token(Token = "0x40008B9")]
		ControlPoint,
		[Token(Token = "0x40008BA")]
		Payload,
		[Token(Token = "0x40008BB")]
		Lobby,
		[Token(Token = "0x40008BC")]
		GameOver,
		[Token(Token = "0x40008BD")]
		Domination,
		[Token(Token = "0x40008BE")]
		Sandbox,
		[Token(Token = "0x40008BF")]
		Deathmatch,
		[Token(Token = "0x40008C0")]
		TutorialIntro,
		[Token(Token = "0x40008C1")]
		Ball,
		[Token(Token = "0x40008C2")]
		CaptureTheFlag,
		[Token(Token = "0x40008C3")]
		Elimination,
		[Token(Token = "0x40008C4")]
		TeamDeathmatch,
		[Token(Token = "0x40008C5")]
		Count
	}
	[Token(Token = "0x2000178")]
	public static class MatchTypeExtensions
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x10ECBC8", Offset = "0x10ECBC8", VA = "0x10ECBC8")]
		public static bool IsStatTracked(this MatchTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x10ECBF8", Offset = "0x10ECBF8", VA = "0x10ECBF8")]
		public static bool IsPlayableMatch(this MatchTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x10ECC0C", Offset = "0x10ECC0C", VA = "0x10ECC0C")]
		public static bool IsValidFilter(this MatchTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x10ECC30", Offset = "0x10ECC30", VA = "0x10ECC30")]
		public static int ToBitValue(this MatchTypes type)
		{
			return default(int);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x10ECC3C", Offset = "0x10ECC3C", VA = "0x10ECC3C")]
		public static bool ServerPassesGamemodeFilter(this int value, ServerBrowser.SessionInfo sessionInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000179")]
	public class Merge : MonoBehaviour
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x10ECC8C", Offset = "0x10ECC8C", VA = "0x10ECC8C")]
		public void BakeMerge()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x10ED89C", Offset = "0x10ED89C", VA = "0x10ED89C")]
		public static void Bake()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x10ECCAC", Offset = "0x10ECCAC", VA = "0x10ECCAC")]
		private void Combine(GameObject gameObject)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x10ED960", Offset = "0x10ED960", VA = "0x10ED960")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public enum Mutators
	{
		[Token(Token = "0x40008C7")]
		MaxDash,
		[Token(Token = "0x40008C8")]
		HeadshotOnly,
		[Token(Token = "0x40008C9")]
		LowGravity,
		[Token(Token = "0x40008CA")]
		InstantPickupRespawn,
		[Token(Token = "0x40008CB")]
		Akimbo,
		[Token(Token = "0x40008CC")]
		InstantRespawn,
		[Token(Token = "0x40008CD")]
		UnlimitedSprint,
		[Token(Token = "0x40008CE")]
		HealOnKill,
		[Token(Token = "0x40008CF")]
		HalfDamage,
		[Token(Token = "0x40008D0")]
		Mist,
		[Token(Token = "0x40008D1")]
		SprintSlowmo,
		[Token(Token = "0x40008D2")]
		GodMode,
		[Token(Token = "0x40008D3")]
		InstaGib,
		[Token(Token = "0x40008D4")]
		Scavenger,
		[Token(Token = "0x40008D5")]
		PistolOnly,
		[Token(Token = "0x40008D6")]
		UziOnly,
		[Token(Token = "0x40008D7")]
		RocketOnly,
		[Token(Token = "0x40008D8")]
		ShotgunOnly,
		[Token(Token = "0x40008D9")]
		BurstOnly,
		[Token(Token = "0x40008DA")]
		ShockOnly,
		[Token(Token = "0x40008DB")]
		SniperOnly,
		[Token(Token = "0x40008DC")]
		DoubleDamage,
		[Token(Token = "0x40008DD")]
		SlowRespawn,
		[Token(Token = "0x40008DE")]
		MaxArmor,
		[Token(Token = "0x40008DF")]
		PumpkinHead,
		[Token(Token = "0x40008E0")]
		Vampire,
		[Token(Token = "0x40008E1")]
		GunGifts,
		[Token(Token = "0x40008E2")]
		SuddenDeath,
		[Token(Token = "0x40008E3")]
		LeaguePayload,
		[Token(Token = "0x40008E4")]
		StandardizedHeight,
		[Token(Token = "0x40008E5")]
		Practice,
		[Token(Token = "0x40008E6")]
		ProximityChatOnly,
		[Token(Token = "0x40008E7")]
		TeamChatOnly,
		[Token(Token = "0x40008E8")]
		NoSprint,
		[Token(Token = "0x40008E9")]
		QuickRefill,
		[Token(Token = "0x40008EA")]
		Count
	}
	[Token(Token = "0x200017B")]
	[Flags]
	public enum MutatorTypes
	{
		[Token(Token = "0x40008EC")]
		Misc = 0,
		[Token(Token = "0x40008ED")]
		Weapon = 1,
		[Token(Token = "0x40008EE")]
		Damage = 2,
		[Token(Token = "0x40008EF")]
		Respawn = 4,
		[Token(Token = "0x40008F0")]
		Voice = 8,
		[Token(Token = "0x40008F1")]
		StarterWeapon = 0x10,
		[Token(Token = "0x40008F2")]
		Sprint = 0x20,
		[Token(Token = "0x40008F3")]
		Domination = 0x40,
		[Token(Token = "0x40008F4")]
		Payload = 0x80,
		[Token(Token = "0x40008F5")]
		Gamemode = 0x100
	}
	[Token(Token = "0x200017C")]
	[Flags]
	public enum PracticeMutators
	{
		[Token(Token = "0x40008F7")]
		None = 0,
		[Token(Token = "0x40008F8")]
		DisableShooting = 1,
		[Token(Token = "0x40008F9")]
		BotsIdle = 2,
		[Token(Token = "0x40008FA")]
		AutomaticOvertime = 4
	}
	[Token(Token = "0x200017D")]
	public static class MutatorTypesExtensions
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x10ED968", Offset = "0x10ED968", VA = "0x10ED968")]
		public static bool HasFlagFast(this MutatorTypes value, MutatorTypes flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x10ED974", Offset = "0x10ED974", VA = "0x10ED974")]
		public static bool HasFlagFast(this PracticeMutators value, PracticeMutators flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017E")]
	public enum BotDifficulty
	{
		[Token(Token = "0x40008FC")]
		Easy,
		[Token(Token = "0x40008FD")]
		Normal,
		[Token(Token = "0x40008FE")]
		Hard,
		[Token(Token = "0x40008FF")]
		Random
	}
	[Token(Token = "0x200017F")]
	public static class ModManager
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Map;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float MatchLength;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int BotCount;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BotDifficulty BotDifficulty;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool[] Status;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool[] MenuStatus;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool[] MenuSelectionDisabled;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static BotDifficulty MenuBotDifficulty;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int SyncUI;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Mutators[] RandomMutatorPool;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Mutators[] TrainingMutatorPool;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Mutators[] CreateServerMutatorPool;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static MutatorTypes[] MutatorType;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int[] ShuffleMods;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string LocalizedListHorizontal;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string LocalizedList4Columns;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string LocalizedListVertical;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static PracticeMutators PracticeMutators;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static bool RandomModsPending;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public static bool CopyMenuStatusPending;

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x10ED980", Offset = "0x10ED980", VA = "0x10ED980")]
		static ModManager()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x10EDCD0", Offset = "0x10EDCD0", VA = "0x10EDCD0")]
		private static bool DisableWeaponPickups()
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x10EDE70", Offset = "0x10EDE70", VA = "0x10EDE70")]
		private static bool DisableHealthPickups()
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x10DBE5C", Offset = "0x10DBE5C", VA = "0x10DBE5C")]
		public static bool GetWeapons(int teamID, bool isTeamBased, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x10EDEC0", Offset = "0x10EDEC0", VA = "0x10EDEC0")]
		public static string GetBotDifficultyLocalized()
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x10EDFD8", Offset = "0x10EDFD8", VA = "0x10EDFD8")]
		public static BotStats GetBotStats()
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x10EDDF4", Offset = "0x10EDDF4", VA = "0x10EDDF4")]
		public static bool Has(Mutators mod)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x10EC6C0", Offset = "0x10EC6C0", VA = "0x10EC6C0")]
		public static bool Has(PracticeMutators practiceMutators)
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x10EE0DC", Offset = "0x10EE0DC", VA = "0x10EE0DC")]
		public static MutatorTypes GetType(Mutators mod)
		{
			return default(MutatorTypes);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x10EE158", Offset = "0x10EE158", VA = "0x10EE158")]
		public static bool IsSelectionAllowed(Mutators mod)
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x10EE21C", Offset = "0x10EE21C", VA = "0x10EE21C")]
		public static int ActiveCount()
		{
			return default(int);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x10EE2B0", Offset = "0x10EE2B0", VA = "0x10EE2B0")]
		public static float GetPickupSpawnTime(Pickup.PickupTypes type)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x10EE3F0", Offset = "0x10EE3F0", VA = "0x10EE3F0")]
		public static bool IsPickupAllowed(Pickup.PickupTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x10EE47C", Offset = "0x10EE47C", VA = "0x10EE47C")]
		public static float GetPlayerRespawnTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000750")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x6000751")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x10EE618", Offset = "0x10EE618", VA = "0x10EE618")]
		public static void RandomModsAppend()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x10EE888", Offset = "0x10EE888", VA = "0x10EE888")]
		public static void MenuStatusAppend()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x10EE9A4", Offset = "0x10EE9A4", VA = "0x10EE9A4")]
		public static void ClearMods()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x10EEAB4", Offset = "0x10EEAB4", VA = "0x10EEAB4")]
		public static string SaveStringFrom(bool[] status)
		{
			return null;
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x10EEBB4", Offset = "0x10EEBB4", VA = "0x10EEBB4")]
		public static void FromString(string cmd)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x10EF078", Offset = "0x10EF078", VA = "0x10EF078")]
		public static void FromStringAppend(string cmd)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x10EF1C8", Offset = "0x10EF1C8", VA = "0x10EF1C8")]
		public static void FromStringMenu(string cmd)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x10EF318", Offset = "0x10EF318", VA = "0x10EF318")]
		public static void FromSceneToken(SceneToken token)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x10EF38C", Offset = "0x10EF38C", VA = "0x10EF38C")]
		public static SceneToken CreateTrainingToken()
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x10EF3FC", Offset = "0x10EF3FC", VA = "0x10EF3FC")]
		public static SceneToken CreateTutorialToken()
		{
			return null;
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x10E8188", Offset = "0x10E8188", VA = "0x10E8188")]
		public static SceneToken CreateToken()
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x10E8FC0", Offset = "0x10E8FC0", VA = "0x10E8FC0")]
		public static void ApplySceneModifiers()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x10EED2C", Offset = "0x10EED2C", VA = "0x10EED2C")]
		public static void UpdateLocalizedLists()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x10EF464", Offset = "0x10EF464", VA = "0x10EF464")]
		public static void UpdateMenuSelectionAllowed(MatchTypes matchType)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x10EF6A0", Offset = "0x10EF6A0", VA = "0x10EF6A0")]
		public static void SetPracticeMutators(PracticeMutators value)
		{
		}
	}
	[Token(Token = "0x2000180")]
	[DefaultExecutionOrder(-100000)]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundsComponent _bounds;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<NetCharacterBehaviour> _playersOnPlatform;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _previousPosition;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion _previousRotation;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _previousFixedPosition;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _previousFixedRotation;

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x10EF718", Offset = "0x10EF718", VA = "0x10EF718")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x10EFBE0", Offset = "0x10EFBE0", VA = "0x10EFBE0")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x10EFABC", Offset = "0x10EFABC", VA = "0x10EFABC")]
		private void AddPlayersPlatformMotion(Vector3 displacement, Quaternion rotationDelta, Vector3 pivot)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x10EFDB4", Offset = "0x10EFDB4", VA = "0x10EFDB4")]
		private void UpdatePlayerFixedPlatformMovement(Vector3 displacement, Quaternion rotation, Vector3 pivot)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x10EF904", Offset = "0x10EF904", VA = "0x10EF904")]
		private void FindPlayersOnPlatform(ref List<NetCharacterBehaviour> playersOnPlatform)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x10EFFC8", Offset = "0x10EFFC8", VA = "0x10EFFC8")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[DefaultExecutionOrder(200)]
	public class MuzzleFlash : MonoBehaviour
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x10F0054", Offset = "0x10F0054", VA = "0x10F0054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x10F01D0", Offset = "0x10F01D0", VA = "0x10F01D0")]
		public MuzzleFlash()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class NetCreateRoom : EntityEventListener<ICreateRoomState>
	{
		[Token(Token = "0x2000183")]
		private struct SettingsProfile
		{
			[Token(Token = "0x400091D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int BotCount;

			[Token(Token = "0x400091E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BotDifficulty BotDifficulty;

			[Token(Token = "0x400091F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int NextMap;

			[Token(Token = "0x4000920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] Mods;
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiCreateRoom _ui;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SettingsProfile Settings;

		[Token(Token = "0x170000C0")]
		public bool ServerIsReady
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x10F01D8", Offset = "0x10F01D8", VA = "0x10F01D8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x10F01E0", Offset = "0x10F01E0", VA = "0x10F01E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public UiCreateRoom UI
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x10F01EC", Offset = "0x10F01EC", VA = "0x10F01EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x10F01F4", Offset = "0x10F01F4", VA = "0x10F01F4", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x10F07E4", Offset = "0x10F07E4", VA = "0x10F07E4")]
		private void OnMapsChanged(IState state, string path, ArrayIndices indices)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x10F0960", Offset = "0x10F0960", VA = "0x10F0960")]
		public void AdminHasSetMap(int evntMapIndex)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x10F0A34", Offset = "0x10F0A34", VA = "0x10F0A34")]
		private void OnSelectedMapChanged()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x10F0C80", Offset = "0x10F0C80", VA = "0x10F0C80")]
		private void OnGameNameChanged()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x10F0D5C", Offset = "0x10F0D5C", VA = "0x10F0D5C")]
		private void OnMatchSettingsChanged()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x10F0EC4", Offset = "0x10F0EC4", VA = "0x10F0EC4")]
		private void OnModsChanged(IState state, string path, ArrayIndices indices)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x10F120C", Offset = "0x10F120C", VA = "0x10F120C")]
		public NetCreateRoom()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public enum VictoryClips
	{
		[Token(Token = "0x4000922")]
		RedWinsRound,
		[Token(Token = "0x4000923")]
		RedWinsGame,
		[Token(Token = "0x4000924")]
		BlueWinsRound,
		[Token(Token = "0x4000925")]
		BlueWinsGame
	}
	[Token(Token = "0x2000185")]
	public class NetMusicPlayer : EntityBehaviour<IMusicPlayer>
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource AudioSource;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] LobbyClips;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] MatchClips;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] EndOfMatchClips;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] GameOverClips;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] TutorialClips;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string ActiveScene;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _scene;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _nextClipTime;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip[] _tracks;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _trackIndex;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<AudioClip> _clipLookup;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _clientTrackName;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _clientIsPaused;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _clientMusicStarted;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SoundManager _soundManager;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool MuteMusicDuringBlackScreen;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool _isMutedDuringBlackScreen;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isPlaying;

		[Token(Token = "0x170000C2")]
		public static NetMusicPlayer Active
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0x10F130C", Offset = "0x10F130C", VA = "0x10F130C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000776")]
			[Address(RVA = "0x10F1354", Offset = "0x10F1354", VA = "0x10F1354")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public string ClientTrackName
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x10F151C", Offset = "0x10F151C", VA = "0x10F151C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public bool ClientIsPaused
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x10F1524", Offset = "0x10F1524", VA = "0x10F1524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C5")]
		private bool ShouldPause
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x10F152C", Offset = "0x10F152C", VA = "0x10F152C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x10F13A4", Offset = "0x10F13A4", VA = "0x10F13A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x10F1460", Offset = "0x10F1460", VA = "0x10F1460")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x10F1560", Offset = "0x10F1560", VA = "0x10F1560", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x10F18E0", Offset = "0x10F18E0", VA = "0x10F18E0", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x10F193C", Offset = "0x10F193C", VA = "0x10F193C", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x10F1C20", Offset = "0x10F1C20", VA = "0x10F1C20")]
		public void Update()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x10F1E78", Offset = "0x10F1E78", VA = "0x10F1E78")]
		private void OnMatchMusicToggled(Settings settings)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x10F1F4C", Offset = "0x10F1F4C", VA = "0x10F1F4C")]
		private void OnServerTrackChanged()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x10F2234", Offset = "0x10F2234", VA = "0x10F2234")]
		public void ServerStartTrack(AudioClip clip)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x10F2438", Offset = "0x10F2438", VA = "0x10F2438")]
		public void ServerPlayVictoryTrack(VictoryClips clip)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x10F19F0", Offset = "0x10F19F0", VA = "0x10F19F0")]
		public void ServerOnNewScene(string map)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x10F235C", Offset = "0x10F235C", VA = "0x10F235C")]
		private int GetNetworkIndex(AudioClip clip)
		{
			return default(int);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x10F2468", Offset = "0x10F2468", VA = "0x10F2468")]
		private AudioClip GetClip(int networkIndex)
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x10F2018", Offset = "0x10F2018", VA = "0x10F2018")]
		private void ClientPlayTrack(int networkIndex)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x10F24EC", Offset = "0x10F24EC", VA = "0x10F24EC")]
		private int GetIndexInPlaylist(AudioClip[] playlist, AudioClip clip)
		{
			return default(int);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x10F25AC", Offset = "0x10F25AC", VA = "0x10F25AC")]
		private bool PlayNextTrackInPlaylist(AudioClip[] playlist)
		{
			return default(bool);
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x10F1E2C", Offset = "0x10F1E2C", VA = "0x10F1E2C")]
		public void ClientNextTrack()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x10F2638", Offset = "0x10F2638", VA = "0x10F2638")]
		private bool PlayPreviousTrackInPlaylist(AudioClip[] playlist)
		{
			return default(bool);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x10F26D0", Offset = "0x10F26D0", VA = "0x10F26D0")]
		public void ClientPrevTrack()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x10F271C", Offset = "0x10F271C", VA = "0x10F271C")]
		public void ClientTogglePlayPause()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x10F2768", Offset = "0x10F2768", VA = "0x10F2768")]
		public NetMusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[BoltGlobalBehaviour]
	public class MusicClientCallbacks : GlobalEventListener
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x10F27DC", Offset = "0x10F27DC", VA = "0x10F27DC", Slot = "109")]
		public override void OnEvent(CameraFadeToBlack evnt)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x10F2828", Offset = "0x10F2828", VA = "0x10F2828", Slot = "108")]
		public override void OnEvent(CameraFadeFromBlack evnt)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x10F2870", Offset = "0x10F2870", VA = "0x10F2870")]
		public MusicClientCallbacks()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[BoltGlobalBehaviour(BoltNetworkModes.Server)]
	public class MusicCallbacks : GlobalEventListener
	{
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x10F2878", Offset = "0x10F2878", VA = "0x10F2878", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x10F295C", Offset = "0x10F295C", VA = "0x10F295C")]
		public MusicCallbacks()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class NetNextMapDisplay : EntityBehaviour<INextMapDisplayState>
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite DefaultImage;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image MapImage;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI MapText;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI ModeText;

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x10F2964", Offset = "0x10F2964", VA = "0x10F2964", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x10F2AA8", Offset = "0x10F2AA8", VA = "0x10F2AA8")]
		private void OnMapChanged()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x10F2C78", Offset = "0x10F2C78", VA = "0x10F2C78")]
		public NetNextMapDisplay()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class NetRocketBehaviour : EntityEventListener<IRocketState>, IDamageable
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider _collider;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _renderTransform;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer[] _renderers;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TrailRenderer _trailRenderer;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Movement")]
		public float RotationSpeed;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GuidedForce;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float UnGuidedForce;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Header("Explosion")]
		[SerializeField]
		private float _innerRadius;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _outerRadius;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _innerDamage;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _outerDamage;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float _selfDestructTime;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Effects _explosionEffect;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _time;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isExploded;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _isFirstFrame;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _startPosition;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _prevFramePosition;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private LayerMask _backfaceLayerMask;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ProjectileTrajectory _projectileTrajectory;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Collider> _ignoredColliders;

		[Token(Token = "0x170000C6")]
		public WeaponLaser Laser
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x10F2CC0", Offset = "0x10F2CC0", VA = "0x10F2CC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x10F2CC8", Offset = "0x10F2CC8", VA = "0x10F2CC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public int PlayerID
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x10F2CD8", Offset = "0x10F2CD8", VA = "0x10F2CD8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x10F2CE0", Offset = "0x10F2CE0", VA = "0x10F2CE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public int TeamID
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x10F2CE8", Offset = "0x10F2CE8", VA = "0x10F2CE8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x10F2CF0", Offset = "0x10F2CF0", VA = "0x10F2CF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x10F2CF8", Offset = "0x10F2CF8", VA = "0x10F2CF8", Slot = "130")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x10F2D00", Offset = "0x10F2D00", VA = "0x10F2D00", Slot = "131")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x10F2D0C", Offset = "0x10F2D0C", VA = "0x10F2D0C")]
		private void ResetIgnoredColliders()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x10F2E3C", Offset = "0x10F2E3C", VA = "0x10F2E3C")]
		public void IgnoreColliders(Collider[] colliders)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x10F2F20", Offset = "0x10F2F20", VA = "0x10F2F20", Slot = "127")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x10F31EC", Offset = "0x10F31EC", VA = "0x10F31EC", Slot = "128")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x10F31F0", Offset = "0x10F31F0", VA = "0x10F31F0", Slot = "129")]
		public void LocalExplosion(Vector3 position, float radius, float force)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x10F31F4", Offset = "0x10F31F4", VA = "0x10F31F4", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x10F36CC", Offset = "0x10F36CC", VA = "0x10F36CC", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x10F3464", Offset = "0x10F3464", VA = "0x10F3464")]
		private void ResetPooled()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x10F379C", Offset = "0x10F379C", VA = "0x10F379C")]
		private void OnExploded()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x10F3810", Offset = "0x10F3810", VA = "0x10F3810", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x10F3D40", Offset = "0x10F3D40", VA = "0x10F3D40")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x10F3DF8", Offset = "0x10F3DF8", VA = "0x10F3DF8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x10F2F5C", Offset = "0x10F2F5C", VA = "0x10F2F5C")]
		private void Explode(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x10F3EB0", Offset = "0x10F3EB0", VA = "0x10F3EB0")]
		public NetRocketBehaviour()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class NetTrainingDummy : EntityEventListener<ITrainingDummy>, IDamageable
	{
		[Serializable]
		[Token(Token = "0x200018B")]
		private struct DpsData
		{
			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float StartTime;

			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float LastActivity;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TotalDamage;
		}

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DamageZone[] _damageZones;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _dpsText;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DpsData[] _dpsData;

		[Token(Token = "0x170000CA")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x10F46E8", Offset = "0x10F46E8", VA = "0x10F46E8", Slot = "130")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x10F46F0", Offset = "0x10F46F0", VA = "0x10F46F0", Slot = "131")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x10F3FB4", Offset = "0x10F3FB4", VA = "0x10F3FB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10F401C", Offset = "0x10F401C", VA = "0x10F401C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x10F4188", Offset = "0x10F4188", VA = "0x10F4188")]
		private void InitializeState()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x10F3FB8", Offset = "0x10F3FB8", VA = "0x10F3FB8")]
		public void SetOwner()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x10F4400", Offset = "0x10F4400", VA = "0x10F4400", Slot = "127")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x10F46E0", Offset = "0x10F46E0", VA = "0x10F46E0", Slot = "128")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x10F46E4", Offset = "0x10F46E4", VA = "0x10F46E4", Slot = "129")]
		public void LocalExplosion(Vector3 position, float radius, float force)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x10F46BC", Offset = "0x10F46BC", VA = "0x10F46BC")]
		private float CalculateDps(DpsData data)
		{
			return default(float);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x10F46FC", Offset = "0x10F46FC", VA = "0x10F46FC")]
		private void OnDpsChanged()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x10F4940", Offset = "0x10F4940", VA = "0x10F4940")]
		public NetTrainingDummy()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class NetVoting : EntityEventListener<IVotingState>
	{
		[Token(Token = "0x200018D")]
		public enum States
		{
			[Token(Token = "0x400096D")]
			Hidden,
			[Token(Token = "0x400096E")]
			Voting,
			[Token(Token = "0x400096F")]
			Result
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiVoting UI;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StartMatchButton _startButton;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] _mapVotes;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> _highestVotedMaps;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _timer;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _waitingForVotes;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _timerIsRunning;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _randomIndex;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _highestVotedMapIndex;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _highestVotes;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _hasResults;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool _allPlayersVoted;

		[Token(Token = "0x170000CB")]
		public int ServerNextMapIndex
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x10F4988", Offset = "0x10F4988", VA = "0x10F4988")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		public bool ServerIsOver
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x10F4990", Offset = "0x10F4990", VA = "0x10F4990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x10F4998", Offset = "0x10F4998", VA = "0x10F4998")]
		public void Awake()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x10F4A68", Offset = "0x10F4A68", VA = "0x10F4A68", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x10F513C", Offset = "0x10F513C", VA = "0x10F513C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x10F5140", Offset = "0x10F5140", VA = "0x10F5140")]
		public void StartVote()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x10F5298", Offset = "0x10F5298", VA = "0x10F5298")]
		public void EndVote()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x10F5854", Offset = "0x10F5854", VA = "0x10F5854")]
		private int GetActivePlayersVoteCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x10F5584", Offset = "0x10F5584", VA = "0x10F5584")]
		private void CalculateVotes()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x10F5968", Offset = "0x10F5968", VA = "0x10F5968", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x10F5B10", Offset = "0x10F5B10", VA = "0x10F5B10")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x10F5CB4", Offset = "0x10F5CB4", VA = "0x10F5CB4")]
		private void OnStateChanged()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x10F5E18", Offset = "0x10F5E18", VA = "0x10F5E18")]
		private void OnHighlightChanged()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x10F5EF4", Offset = "0x10F5EF4", VA = "0x10F5EF4")]
		private void OnMapsChanged(IState state, string path, ArrayIndices indices)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x10F6064", Offset = "0x10F6064", VA = "0x10F6064")]
		private void OnVotesChanged(IState state, string path, ArrayIndices indices)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x10F61D8", Offset = "0x10F61D8", VA = "0x10F61D8")]
		private void OnCountdown()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x10F62B4", Offset = "0x10F62B4", VA = "0x10F62B4")]
		private void OnNextMap()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x10F64A0", Offset = "0x10F64A0", VA = "0x10F64A0")]
		public NetVoting()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class CharacterSpawnToken : IProtocolToken
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte PlayerID;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PlayerName;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Clan;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string HelmetSkinID;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PistolSkinID;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SmgSkinID;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string BurstSkinID;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string SniperSkinID;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string ShotgunSkinID;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string RocketLauncherSkinID;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string ShockPistolSkinID;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string BodySkinID;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public byte TeamID;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public byte LeftWeapon;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public byte RightWeapon;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x10F6580", Offset = "0x10F6580", VA = "0x10F6580", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x10F6718", Offset = "0x10F6718", VA = "0x10F6718", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x10F6828", Offset = "0x10F6828", VA = "0x10F6828")]
		public CharacterSpawnToken()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public class ServerSaveFileData
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ServerName;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Password;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelRange LevelLock;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrivateServerTicketResponse Ticket;

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x10F6830", Offset = "0x10F6830", VA = "0x10F6830")]
		public ServerSaveFileData()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public static class ServerRestartFile
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string FilePath;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x10F6898", Offset = "0x10F6898", VA = "0x10F6898")]
		public static void SetupPath()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x10F6A24", Offset = "0x10F6A24", VA = "0x10F6A24")]
		public static ServerSaveFileData LoadAndDelete()
		{
			return null;
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x10F6CD8", Offset = "0x10F6CD8", VA = "0x10F6CD8")]
		public static void Save(ServerSaveFileData data)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public enum NetworkModes
	{
		[Token(Token = "0x4000985")]
		None,
		[Token(Token = "0x4000986")]
		Client,
		[Token(Token = "0x4000987")]
		ArcadeServer,
		[Token(Token = "0x4000988")]
		Host,
		[Token(Token = "0x4000989")]
		Spectator,
		[Token(Token = "0x400098A")]
		DedicatedServer,
		[Token(Token = "0x400098B")]
		SinglePlayer
	}
	[Token(Token = "0x2000192")]
	public class OnConfigurationDisableBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModes[] _blackList;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Behaviour[] _behaviours;

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x10F6F44", Offset = "0x10F6F44", VA = "0x10F6F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x10F7068", Offset = "0x10F7068", VA = "0x10F7068")]
		public OnConfigurationDisableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class OnConfigurationDisableObject : MonoBehaviour
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkModes[] _blackList;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x10F7070", Offset = "0x10F7070", VA = "0x10F7070")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x10F7178", Offset = "0x10F7178", VA = "0x10F7178")]
		public OnConfigurationDisableObject()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class OvrProfiling : MonoBehaviour
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameCounter;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _avgFps;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _minFps;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _avgGPU;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _maxGPU;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _levelChanged;

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x10F7180", Offset = "0x10F7180", VA = "0x10F7180")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x10F71A0", Offset = "0x10F71A0", VA = "0x10F71A0")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x10F7190", Offset = "0x10F7190", VA = "0x10F7190")]
		private void ResetCounters()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x10F71B4", Offset = "0x10F71B4", VA = "0x10F71B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x10F7340", Offset = "0x10F7340", VA = "0x10F7340")]
		private void UpdateStats(float currentFps, float gpuTime)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x10F7418", Offset = "0x10F7418", VA = "0x10F7418")]
		public OvrProfiling()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class PauseManager : MonoBehaviour
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _leftAnchorPosition;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _rightAnchorPosition;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion _leftAnchorRotation;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _rightAnchorRotation;

		[Token(Token = "0x170000CD")]
		public bool IsUnityPaused
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x10F7428", Offset = "0x10F7428", VA = "0x10F7428")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x10F7430", Offset = "0x10F7430", VA = "0x10F7430")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool HasFocus
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x10F743C", Offset = "0x10F743C", VA = "0x10F743C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x10F7444", Offset = "0x10F7444", VA = "0x10F7444")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool CanPause
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x10F7450", Offset = "0x10F7450", VA = "0x10F7450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public bool IsPaused
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x10F74F4", Offset = "0x10F74F4", VA = "0x10F74F4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x10F74FC", Offset = "0x10F74FC", VA = "0x10F74FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x10F7508", Offset = "0x10F7508", VA = "0x10F7508")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x10F7648", Offset = "0x10F7648", VA = "0x10F7648")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x10F76A0", Offset = "0x10F76A0", VA = "0x10F76A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x10F76A4", Offset = "0x10F76A4", VA = "0x10F76A4")]
		private void HideControllers()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x10F78E8", Offset = "0x10F78E8", VA = "0x10F78E8")]
		private void ShowControllers()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x10F7AA8", Offset = "0x10F7AA8", VA = "0x10F7AA8")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x10F7AF0", Offset = "0x10F7AF0", VA = "0x10F7AF0")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x10F7ABC", Offset = "0x10F7ABC", VA = "0x10F7ABC")]
		private void OnPauseChanged(bool pause, bool focus)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x10F7B04", Offset = "0x10F7B04", VA = "0x10F7B04")]
		public PauseManager()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class PedestalButtonSound : MonoBehaviour
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x10F7B14", Offset = "0x10F7B14", VA = "0x10F7B14")]
		public void SendSoundEvent()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x10F7C0C", Offset = "0x10F7C0C", VA = "0x10F7C0C")]
		public PedestalButtonSound()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public enum PerformanceTier
	{
		[Token(Token = "0x400099D")]
		Quest1,
		[Token(Token = "0x400099E")]
		Normal
	}
	[Token(Token = "0x2000198")]
	public static class Performance
	{
		[Token(Token = "0x2000199")]
		public enum FormatType
		{
			[Token(Token = "0x40009A6")]
			From0To99,
			[Token(Token = "0x40009A7")]
			From00To99,
			[Token(Token = "0x40009A8")]
			From000To999,
			[Token(Token = "0x40009A9")]
			From0To999
		}

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PerformanceTier Tier;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] stringsFrom00To99;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] stringsFrom0To99;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string[] stringsFrom000To999;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string[] stringsFrom0To999;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] stringJoysticks;

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x10F7C14", Offset = "0x10F7C14", VA = "0x10F7C14")]
		public static void InitializeDevice()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x10F7FB0", Offset = "0x10F7FB0", VA = "0x10F7FB0")]
		public static string StringFrom00To99(int value)
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x10F803C", Offset = "0x10F803C", VA = "0x10F803C")]
		public static string StringFrom0To99(int value)
		{
			return null;
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x10F80C8", Offset = "0x10F80C8", VA = "0x10F80C8")]
		public static string StringFrom0To999(int value)
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x10F8154", Offset = "0x10F8154", VA = "0x10F8154")]
		public static string StringFrom000To999(int value)
		{
			return null;
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x10F81E0", Offset = "0x10F81E0", VA = "0x10F81E0")]
		public static string StringJoystick(int value)
		{
			return null;
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x10F826C", Offset = "0x10F826C", VA = "0x10F826C")]
		public static string StringFormat(FormatType type, int value)
		{
			return null;
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x10F7414", Offset = "0x10F7414", VA = "0x10F7414")]
		public static void UpdateFpsPolice(float currentFps, float target)
		{
		}
	}
	[Token(Token = "0x200019A")]
	internal static class PhotonSessionExtensions
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x112CBD4", Offset = "0x112CBD4", VA = "0x112CBD4")]
		public static string GetStringProperty(this PhotonSession session, string key, string defaulValue = "")
		{
			return null;
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x112CC64", Offset = "0x112CC64", VA = "0x112CC64")]
		public static bool GetBoolProperty(this PhotonSession session, string key, bool defaulValue = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x112CD24", Offset = "0x112CD24", VA = "0x112CD24")]
		public static int GetIntProperty(this PhotonSession session, string key, int defaulValue = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x112CDDC", Offset = "0x112CDDC", VA = "0x112CDDC")]
		public static byte GetByteProperty(this PhotonSession session, string key, byte defaulValue = 0)
		{
			return default(byte);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x112CE94", Offset = "0x112CE94", VA = "0x112CE94")]
		public static float GetFloatProperty(this PhotonSession session, string key, float defaulValue = 0f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200019B")]
	public abstract class Pickup : ScriptableObject
	{
		[Token(Token = "0x200019C")]
		public enum PickupTypes
		{
			[Token(Token = "0x40009AC")]
			None,
			[Token(Token = "0x40009AD")]
			Health,
			[Token(Token = "0x40009AE")]
			Dash,
			[Token(Token = "0x40009AF")]
			Weapon,
			[Token(Token = "0x40009B0")]
			Armor
		}

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickupTypes PickupType;

		[Token(Token = "0x170000D1")]
		public abstract GameObject Model
		{
			[Token(Token = "0x60007FD")]
			get;
		}

		[Token(Token = "0x170000D2")]
		public abstract bool ListenForRequestPickup
		{
			[Token(Token = "0x60007FE")]
			get;
		}

		[Token(Token = "0x60007FF")]
		public abstract bool PickUp(NetCharacterBehaviour character, int handIndex);

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x112CF4C", Offset = "0x112CF4C", VA = "0x112CF4C")]
		protected Pickup()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class PickupSpawner : EntityBehaviour<IPickupSpawnerState>
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Pickup[] _pickups;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _holder;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _spawnInterval;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _pickupRadius;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _effect;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _canPickupWithBody;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject[] _models;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _respawnTimer;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _serverCurrentPickup;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _clientVisibilePickup;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _isDisabled;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool BotSkip;

		[Token(Token = "0x170000D3")]
		public bool BotIsPickupAvailable
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x112CF54", Offset = "0x112CF54", VA = "0x112CF54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public Vector3 BotHandPosition
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x112CF64", Offset = "0x112CF64", VA = "0x112CF64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000D5")]
		public Pickup.PickupTypes BotPickupType
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x112CF80", Offset = "0x112CF80", VA = "0x112CF80")]
			get
			{
				return default(Pickup.PickupTypes);
			}
		}

		[Token(Token = "0x170000D6")]
		public WeaponTypes BotWeaponType
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x112CFCC", Offset = "0x112CFCC", VA = "0x112CFCC")]
			get
			{
				return default(WeaponTypes);
			}
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x112D084", Offset = "0x112D084", VA = "0x112D084")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x112D2B0", Offset = "0x112D2B0", VA = "0x112D2B0", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x112D7AC", Offset = "0x112D7AC", VA = "0x112D7AC")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x112D7D0", Offset = "0x112D7D0", VA = "0x112D7D0")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x112D63C", Offset = "0x112D63C", VA = "0x112D63C")]
		private void OnPickupIndexChanged()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x112D8D0", Offset = "0x112D8D0", VA = "0x112D8D0", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x112D53C", Offset = "0x112D53C", VA = "0x112D53C")]
		private void SpawnPickup()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x112DD74", Offset = "0x112DD74", VA = "0x112DD74")]
		public void ResetRound()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x112DA5C", Offset = "0x112DA5C", VA = "0x112DA5C")]
		private bool CheckIfPickupIsPickedUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x112DE3C", Offset = "0x112DE3C", VA = "0x112DE3C")]
		public PickupSpawner()
		{
		}
	}
	[Token(Token = "0x200019E")]
	[BoltGlobalBehaviour]
	public class PlayerCallbacks : GlobalEventListener
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int DebugDeltaServerFrame;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int DebugPacketsLost;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int DebugPingAliased;

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x112DED0", Offset = "0x112DED0", VA = "0x112DED0", Slot = "120")]
		public override void OnEvent(DebugEvent evnt)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x112DF24", Offset = "0x112DF24", VA = "0x112DF24", Slot = "19")]
		public override void SceneLoadLocalBegin(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x112E0B0", Offset = "0x112E0B0", VA = "0x112E0B0", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x112E24C", Offset = "0x112E24C", VA = "0x112E24C", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x112E254", Offset = "0x112E254", VA = "0x112E254", Slot = "110")]
		public override void OnEvent(RespawnEvent evnt)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x112E3DC", Offset = "0x112E3DC", VA = "0x112E3DC", Slot = "126")]
		public override void OnEvent(DeadEvent evnt)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x112E4DC", Offset = "0x112E4DC", VA = "0x112E4DC", Slot = "123")]
		public override void OnEvent(GiveMaxDashChargesEvent evnt)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x112E58C", Offset = "0x112E58C", VA = "0x112E58C", Slot = "136")]
		public override void OnEvent(GiveDashChargeEvent evnt)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x112E63C", Offset = "0x112E63C", VA = "0x112E63C")]
		public static void SendGiveDashChargeEvent(PlayerObject player)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x112E690", Offset = "0x112E690", VA = "0x112E690", Slot = "149")]
		public override void OnEvent(InstantReloadEvent instantReload)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x112E76C", Offset = "0x112E76C", VA = "0x112E76C", Slot = "104")]
		public override void OnEvent(PlayerKilledEvent evnt)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x112E8D8", Offset = "0x112E8D8", VA = "0x112E8D8", Slot = "127")]
		public override void OnEvent(BHapticsSetEnabled evnt)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x112EA3C", Offset = "0x112EA3C", VA = "0x112EA3C", Slot = "125")]
		public override void OnEvent(DebugHitboxEvent evnt)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x112EB00", Offset = "0x112EB00", VA = "0x112EB00", Slot = "139")]
		public override void OnEvent(DebugHitEvent evnt)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x112EBCC", Offset = "0x112EBCC", VA = "0x112EBCC")]
		public PlayerCallbacks()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[DefaultExecutionOrder(200)]
	public class PlayerNameTag : MonoBehaviour
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Transform _followTarget;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _clanTagText;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[FormerlySerializedAs("Text")]
		[SerializeField]
		private TextMeshPro _nameText;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _visibilityRoot;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public MeshRenderer _speakerIcon;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshFilter _backgroundMeshFilter;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro _debugText;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LayerMask _losLayerMask;

		[Token(Token = "0x40009C8")]
		private const float MaxDistanceSq = 400f;

		[Token(Token = "0x40009C9")]
		private const float MinDistanceSq = 0.09f;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isVisible;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> _vertices;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Color> _colors;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh _backgroundMesh;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] _indices;

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x112EBD4", Offset = "0x112EBD4", VA = "0x112EBD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x112EC34", Offset = "0x112EC34", VA = "0x112EC34")]
		private void InitBackgroundMesh()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x112F0A4", Offset = "0x112F0A4", VA = "0x112F0A4")]
		[ContextMenu("Setup layout")]
		public void SetupLayout()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x112F4B4", Offset = "0x112F4B4", VA = "0x112F4B4")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x112FA4C", Offset = "0x112FA4C", VA = "0x112FA4C")]
		public void ToggleSpeakerIcon(bool isTalking)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x112F7B0", Offset = "0x112F7B0", VA = "0x112F7B0")]
		private void UpdateVisibility(Vector3 position, Vector3 cameraPosition)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x112FA6C", Offset = "0x112FA6C", VA = "0x112FA6C")]
		public void SetName(string nickname)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x112FA9C", Offset = "0x112FA9C", VA = "0x112FA9C")]
		public void SetClanTag(string clanTag)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x112F178", Offset = "0x112F178", VA = "0x112F178")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x112FACC", Offset = "0x112FACC", VA = "0x112FACC")]
		private void GenerateBackgroundMesh(float clanTagWidth, float nameWidth, float height, float skew)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x112FD34", Offset = "0x112FD34", VA = "0x112FD34")]
		public void SetTeamColor(int team)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x112F308", Offset = "0x112F308", VA = "0x112F308")]
		public void SetTeamColor(Color color)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x112FD54", Offset = "0x112FD54", VA = "0x112FD54")]
		public PlayerNameTag()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class PlayerObject
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string GUID;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string UnityID;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DeviceName;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int PlayerID;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 CullingPosition;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int CullingMask;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string NickName;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int Level;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Appearance Appearance;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int MapVote;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BotStats BotStats;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string ClanTag;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string ClanAndNickname;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _team;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float BatteryHeadset;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float BatteryLeftController;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float BatteryRightController;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float PingNetwork;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float PingAliased;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float PingManual;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float MinFps;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float MaxFps;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool IsParticipating;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool IsPresentInHMD;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool IsBot;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string StatusMessage;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool IsDisconnected;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float TimeSinceDiconnect;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BoltEntity CharacterEntity;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public NetCharacterBehaviour CharacterBehaviour;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BoltConnection Connection;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public VoiceChannelType JoinedVoiceChannels;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _matchJoinTime;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameEndPlayerData _statsData;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int _objectiveTicksScoreCounter;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool IsAFK;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerObject DummyPlayer;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public StoreApi Store;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string StoreId;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _hasBoughtTheGame;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int _kills;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _eliminationSurvived;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int _roundsPlayed;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int _pointCaptures;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int _dominationCounters;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int _ballGoals;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _ctfGoals;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _ctfReturns;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int _damage;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int _hitShots;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int _totalShots;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _headShots;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int _objectiveTicks;

		[Token(Token = "0x170000D7")]
		public int Team
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x112FF64", Offset = "0x112FF64", VA = "0x112FF64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x112FF6C", Offset = "0x112FF6C", VA = "0x112FF6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool IsConnected
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x113005C", Offset = "0x113005C", VA = "0x113005C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D9")]
		public bool BHapticsEnabled
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x113006C", Offset = "0x113006C", VA = "0x113006C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x1130074", Offset = "0x1130074", VA = "0x1130074")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool IsHost
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x1130080", Offset = "0x1130080", VA = "0x1130080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DB")]
		public bool IsClient
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x1130090", Offset = "0x1130090", VA = "0x1130090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		public int Score
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x11300A0", Offset = "0x11300A0", VA = "0x11300A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x11300BC", Offset = "0x11300BC", VA = "0x11300BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public string ApiPlayerId
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x11300D8", Offset = "0x11300D8", VA = "0x11300D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x11300F4", Offset = "0x11300F4", VA = "0x11300F4")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool HasBoughtTheGame
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x1130110", Offset = "0x1130110", VA = "0x1130110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x1130118", Offset = "0x1130118", VA = "0x1130118")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public int Kills
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x1130124", Offset = "0x1130124", VA = "0x1130124")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E0")]
		public int CountedKills
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x113012C", Offset = "0x113012C", VA = "0x113012C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x1130134", Offset = "0x1130134", VA = "0x1130134")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public int Deaths
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x11301FC", Offset = "0x11301FC", VA = "0x11301FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x1130218", Offset = "0x1130218", VA = "0x1130218")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public int EliminationSurvived
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x1130294", Offset = "0x1130294", VA = "0x1130294")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x113029C", Offset = "0x113029C", VA = "0x113029C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public int RoundsPlayed
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x1130330", Offset = "0x1130330", VA = "0x1130330")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x1130338", Offset = "0x1130338", VA = "0x1130338")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public int PointCaptures
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x11303A8", Offset = "0x11303A8", VA = "0x11303A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x11303B0", Offset = "0x11303B0", VA = "0x11303B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public int DominationCounters
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x1130444", Offset = "0x1130444", VA = "0x1130444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x113044C", Offset = "0x113044C", VA = "0x113044C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public int BallGoals
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x11304E0", Offset = "0x11304E0", VA = "0x11304E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x11304E8", Offset = "0x11304E8", VA = "0x11304E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public int CtfGoals
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x113057C", Offset = "0x113057C", VA = "0x113057C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x1130584", Offset = "0x1130584", VA = "0x1130584")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public int CtfReturn
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x1130618", Offset = "0x1130618", VA = "0x1130618")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x1130620", Offset = "0x1130620", VA = "0x1130620")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public int Damage
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x11306B4", Offset = "0x11306B4", VA = "0x11306B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EA")]
		public int HitShots
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x1130788", Offset = "0x1130788", VA = "0x1130788")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EB")]
		public int TotalShots
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x1130850", Offset = "0x1130850", VA = "0x1130850")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EC")]
		public int HeadShots
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x1130918", Offset = "0x1130918", VA = "0x1130918")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000ED")]
		public float Accuracy
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x11309E0", Offset = "0x11309E0", VA = "0x11309E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EE")]
		public int ObjectiveTicks
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x1130A10", Offset = "0x1130A10", VA = "0x1130A10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x1130A18", Offset = "0x1130A18", VA = "0x1130A18")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public int CurrentKillStreak
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x1130AC0", Offset = "0x1130AC0", VA = "0x1130AC0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x1130AC8", Offset = "0x1130AC8", VA = "0x1130AC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public float KillStreakTimer
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x1130AD0", Offset = "0x1130AD0", VA = "0x1130AD0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x1130AD8", Offset = "0x1130AD8", VA = "0x1130AD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public int HightestKillStreak
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x1130AE0", Offset = "0x1130AE0", VA = "0x1130AE0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x1130AE8", Offset = "0x1130AE8", VA = "0x1130AE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public bool HasCharacter
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x1130AF0", Offset = "0x1130AF0", VA = "0x1130AF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public int packetslost
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x1130B50", Offset = "0x1130B50", VA = "0x1130B50")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x1130B58", Offset = "0x1130B58", VA = "0x1130B58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public int FrameOfLastDroppedPacket
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x1130B60", Offset = "0x1130B60", VA = "0x1130B60")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x1130B68", Offset = "0x1130B68", VA = "0x1130B68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x112FED4", Offset = "0x112FED4", VA = "0x112FED4")]
		public void UpdateNameCache()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x113013C", Offset = "0x113013C", VA = "0x113013C")]
		public void UpdateKills(WeaponTypes weapon, int delta = 1)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x11306BC", Offset = "0x11306BC", VA = "0x11306BC")]
		public void UpdateDamage(WeaponTypes weapon, int delta)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1130790", Offset = "0x1130790", VA = "0x1130790")]
		public void UpdateHitShots(WeaponTypes weapon, int delta = 1)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1130858", Offset = "0x1130858", VA = "0x1130858")]
		public void UpdateTotalShots(WeaponTypes weapon, int delta = 1)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1130920", Offset = "0x1130920", VA = "0x1130920")]
		public void UpdateHeadShots(WeaponTypes weapon, int delta = 1)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1130B70", Offset = "0x1130B70", VA = "0x1130B70")]
		public void ResetName()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1130BF0", Offset = "0x1130BF0", VA = "0x1130BF0")]
		public void ResetScore()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1130D14", Offset = "0x1130D14", VA = "0x1130D14")]
		public void ResetOnDisconnect()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1130E10", Offset = "0x1130E10", VA = "0x1130E10")]
		public void AssignTeam()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1130F3C", Offset = "0x1130F3C", VA = "0x1130F3C")]
		public void Spawn(Vector3 position, float pan)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1131498", Offset = "0x1131498", VA = "0x1131498")]
		public void RemoveCharacter()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1131584", Offset = "0x1131584", VA = "0x1131584")]
		public void SwapTeam(bool requestByPlayer)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1131780", Offset = "0x1131780", VA = "0x1131780")]
		public void ChangeDeviceName(string name)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1131788", Offset = "0x1131788", VA = "0x1131788")]
		public void SendDeviceName()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x11317D0", Offset = "0x11317D0", VA = "0x11317D0")]
		public void ChangeConnection(BoltConnection newConnection)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x11318B0", Offset = "0x11318B0", VA = "0x11318B0")]
		public GameEndPlayerData GetGameEndPlayerData(MatchTypes matchType)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1130CB8", Offset = "0x1130CB8", VA = "0x1130CB8")]
		public void MarkMatchJoinTime()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1130D24", Offset = "0x1130D24", VA = "0x1130D24")]
		public void CalculatePlaytime()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1131AE8", Offset = "0x1131AE8", VA = "0x1131AE8")]
		public void UpdatePacketLoss()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1131B6C", Offset = "0x1131B6C", VA = "0x1131B6C")]
		public PlayerObject()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public static class PlayerObjectRegistry
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ServerIsPlayer;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PlayerObject[] _syncedPlayers;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _errorNextPlayerID;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int MaxPlayerConnections;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string AdminApiPlayerId;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static bool IsClanVsClan;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string[] _botNames;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static bool[] _botNameUsedLookup;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int _botNameStartingIndex;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int CurrentBotCount;

		[Token(Token = "0x170000F5")]
		public static IEnumerable<PlayerObject> AllPlayers
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x1131D78", Offset = "0x1131D78", VA = "0x1131D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public static List<PlayerObject> AllPlayersList
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x1131E00", Offset = "0x1131E00", VA = "0x1131E00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public static PlayerObject HostPlayer
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x1131E58", Offset = "0x1131E58", VA = "0x1131E58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x1131EB0", Offset = "0x1131EB0", VA = "0x1131EB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public static bool ReachedMaxPlayerCount
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x1131F10", Offset = "0x1131F10", VA = "0x1131F10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F9")]
		public static int CurrentPlayerConnections
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x1131FA4", Offset = "0x1131FA4", VA = "0x1131FA4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x1131FFC", Offset = "0x1131FFC", VA = "0x1131FFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public static event Action<int> PlayerCountChangedEvent
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x1132058", Offset = "0x1132058", VA = "0x1132058")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x113214C", Offset = "0x113214C", VA = "0x113214C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public static event Action<PlayerObject> PlayerChangedTeamEvent
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x11322FC", Offset = "0x11322FC", VA = "0x11322FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x11323F0", Offset = "0x11323F0", VA = "0x11323F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1132240", Offset = "0x1132240", VA = "0x1132240")]
		private static void InvokePlayerCountChanged()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x112FFE0", Offset = "0x112FFE0", VA = "0x112FFE0")]
		public static void InvokePlayerChangedTeamEvent(PlayerObject player)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x11324E4", Offset = "0x11324E4", VA = "0x11324E4")]
		public static string GetMyUniqueID(string apiPlayerId)
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x11324EC", Offset = "0x11324EC", VA = "0x11324EC")]
		public static void UpdateBotCount(int botCount)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1132AFC", Offset = "0x1132AFC", VA = "0x1132AFC")]
		public static void UpdateRadioAndAFK(float deltaTime)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1132DE8", Offset = "0x1132DE8", VA = "0x1132DE8")]
		public static void UpdatePacketloss()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1132F08", Offset = "0x1132F08", VA = "0x1132F08")]
		public static void ResetNames()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1133028", Offset = "0x1133028", VA = "0x1133028")]
		public static void ResetScores()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1133148", Offset = "0x1133148", VA = "0x1133148")]
		public static void RemoveInactivePlayers()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x11332F0", Offset = "0x11332F0", VA = "0x11332F0")]
		private static PlayerObject CreatePlayer(BoltConnection connection)
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1133484", Offset = "0x1133484", VA = "0x1133484")]
		public static PlayerObject CreateHostPlayer()
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1134250", Offset = "0x1134250", VA = "0x1134250")]
		public static void OnPlayerConnected(BoltConnection connection)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1133F18", Offset = "0x1133F18", VA = "0x1133F18")]
		public static void RemoveBotsIfNeeded(int count)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1134920", Offset = "0x1134920", VA = "0x1134920")]
		public static PlayerObject CreateExistingPlayer(BoltConnection connection, PlayerObject player, UserToken userToken)
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1134C20", Offset = "0x1134C20", VA = "0x1134C20")]
		public static PlayerObject CreateClientPlayer(BoltConnection connection, UserToken userToken)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x11350B0", Offset = "0x11350B0", VA = "0x11350B0")]
		public static void OnClientPlayerDisconnected(BoltConnection connection)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1133D70", Offset = "0x1133D70", VA = "0x1133D70")]
		private static void AllocatePlayerID(PlayerObject player)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1134714", Offset = "0x1134714", VA = "0x1134714")]
		private static void FreePlayerID(PlayerObject player)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1134A18", Offset = "0x1134A18", VA = "0x1134A18")]
		private static int GetTeamPlayerCount(int team, bool ignoreBots = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x11325F4", Offset = "0x11325F4", VA = "0x11325F4")]
		public static int GetActivePlayerCount(bool ignoreBots = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1130EC4", Offset = "0x1130EC4", VA = "0x1130EC4")]
		public static int GetTeamWithLowestPlayerCount(bool ignoreBots = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1135270", Offset = "0x1135270", VA = "0x1135270")]
		public static int GetTeamWithHighestPlayerCount(bool ignoreBots = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x112E958", Offset = "0x112E958", VA = "0x112E958")]
		public static PlayerObject GetPlayerByConnection(BoltConnection connection)
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x11352E8", Offset = "0x11352E8", VA = "0x11352E8")]
		public static bool IsCulled(BoltConnection receiverConnection, int characterMask, Vector3 characterPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x11353B4", Offset = "0x11353B4", VA = "0x11353B4")]
		public static bool IsCulled(BoltConnection receiverConnection, Vector3 effectPosition, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x11354B8", Offset = "0x11354B8", VA = "0x11354B8")]
		public static int SetCullingPosition(int playerID, Vector3 position)
		{
			return default(int);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x113456C", Offset = "0x113456C", VA = "0x113456C")]
		public static PlayerObject GetPlayerByDevice(string deviceUID)
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1135578", Offset = "0x1135578", VA = "0x1135578")]
		public static PlayerObject GetPlayerByID(int playerID)
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1135628", Offset = "0x1135628", VA = "0x1135628")]
		public static PlayerObject GetPlayerByApiID(string userId)
		{
			return null;
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1135708", Offset = "0x1135708", VA = "0x1135708")]
		public static void GetPlayersByApiID(string userId, ref List<PlayerObject> listOutput)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x11358A0", Offset = "0x11358A0", VA = "0x11358A0")]
		public static PlayerObject GetFirstPlayerInLine(int offset = 0)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1135A18", Offset = "0x1135A18", VA = "0x1135A18")]
		private static void AllocateBotName(PlayerObject player)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1135C2C", Offset = "0x1135C2C", VA = "0x1135C2C")]
		private static void FreeBotName(PlayerObject player)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1135D24", Offset = "0x1135D24", VA = "0x1135D24")]
		public static PlayerObject CreateBot()
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1134F64", Offset = "0x1134F64", VA = "0x1134F64")]
		public static void DeleteBot(PlayerObject player)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1132928", Offset = "0x1132928", VA = "0x1132928")]
		public static void FillBots(int maxPlayerCount, bool spawnCharacter)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x11368B8", Offset = "0x11368B8", VA = "0x11368B8")]
		public static void DebugSpawnBots(int team)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1135F4C", Offset = "0x1135F4C", VA = "0x1135F4C")]
		private static PlayerObject GetFirstActiveBotFromTeam(int team)
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1135030", Offset = "0x1135030", VA = "0x1135030")]
		public static void RemoveBotFromTeam(int team)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1132794", Offset = "0x1132794", VA = "0x1132794")]
		public static void RemoveAllBots()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1136A14", Offset = "0x1136A14", VA = "0x1136A14")]
		public static void SwitchTeam(BoltConnection connection)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1136B10", Offset = "0x1136B10", VA = "0x1136B10")]
		public static void UpdateBhapticsEnabled()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public struct PlayerPrefsBool
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool _default;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string _key;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _current;

		[Token(Token = "0x170000FA")]
		public bool Default
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x113790C", Offset = "0x113790C", VA = "0x113790C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FB")]
		public bool Value
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x1137914", Offset = "0x1137914", VA = "0x1137914")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x113791C", Offset = "0x113791C", VA = "0x113791C")]
			set
			{
			}
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1137958", Offset = "0x1137958", VA = "0x1137958")]
		public PlayerPrefsBool(string key, bool defaults)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x11379A4", Offset = "0x11379A4", VA = "0x11379A4")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public struct PlayerPrefsFloat
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float _default;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string _key;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _current;

		[Token(Token = "0x170000FC")]
		public float Default
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x11379E0", Offset = "0x11379E0", VA = "0x11379E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FD")]
		public float Value
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x11379E8", Offset = "0x11379E8", VA = "0x11379E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x11379F0", Offset = "0x11379F0", VA = "0x11379F0")]
			set
			{
			}
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1137A2C", Offset = "0x1137A2C", VA = "0x1137A2C")]
		public PlayerPrefsFloat(string key, float defaults)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1137A78", Offset = "0x1137A78", VA = "0x1137A78")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public enum PlayModes
	{
		[Token(Token = "0x4000A21")]
		Client,
		[Token(Token = "0x4000A22")]
		Server,
		[Token(Token = "0x4000A23")]
		Spectator,
		[Token(Token = "0x4000A24")]
		Host,
		[Token(Token = "0x4000A25")]
		SinglePlayer
	}
	[Token(Token = "0x20001A5")]
	public class PlayRandomSound : MonoBehaviour
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _sounds;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1137AB4", Offset = "0x1137AB4", VA = "0x1137AB4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1137B20", Offset = "0x1137B20", VA = "0x1137B20")]
		public void Preload()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1137B84", Offset = "0x1137B84", VA = "0x1137B84")]
		public PlayRandomSound()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[DefaultExecutionOrder(1000)]
	public class Preloader : MonoBehaviour
	{
		[Token(Token = "0x20001A7")]
		[CompilerGenerated]
		private sealed class <PreloadRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Preloader <>4__this;

			[Token(Token = "0x170000FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008C1")]
				[Address(RVA = "0x11386DC", Offset = "0x11386DC", VA = "0x11386DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008C3")]
				[Address(RVA = "0x1138724", Offset = "0x1138724", VA = "0x1138724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x11382EC", Offset = "0x11382EC", VA = "0x11382EC")]
			[DebuggerHidden]
			public <PreloadRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x11383CC", Offset = "0x11383CC", VA = "0x11383CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x11383D0", Offset = "0x11383D0", VA = "0x11383D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x11386E4", Offset = "0x11386E4", VA = "0x11386E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _prefabs;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Shader variants")]
		[SerializeField]
		private ShaderVariantCollection _shaderVariantsNoVR;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ShaderVariantCollection _shaderVariantsSinglePass;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShaderVariantCollection _shaderVariantsSinglePassInstanced;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ShaderVariantCollection _shaderVariantsMultiView;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> _assetsToLoad;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1137B8C", Offset = "0x1137B8C", VA = "0x1137B8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1137C30", Offset = "0x1137C30", VA = "0x1137C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1137DE0", Offset = "0x1137DE0", VA = "0x1137DE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1137C34", Offset = "0x1137C34", VA = "0x1137C34")]
		private void LoadShaderVariants()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1138174", Offset = "0x1138174", VA = "0x1138174")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode LoadMode)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1138278", Offset = "0x1138278", VA = "0x1138278")]
		[IteratorStateMachine(typeof(<PreloadRoutine>d__11))]
		private IEnumerator PreloadRoutine()
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1138314", Offset = "0x1138314", VA = "0x1138314")]
		public Preloader()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class QACamera : MonoBehaviour
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x113872C", Offset = "0x113872C", VA = "0x113872C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x113874C", Offset = "0x113874C", VA = "0x113874C")]
		public QACamera()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public static class QuaternionUtil
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1138754", Offset = "0x1138754", VA = "0x1138754")]
		public static Quaternion SmoothDamp(Quaternion rot, Quaternion target, ref Quaternion deriv, float time)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20001AA")]
	public class RailFollower : MonoBehaviour
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _direction;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrindRail _rail;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _autoFollow;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _percent;

		[Token(Token = "0x17000100")]
		public float Percent
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x11389C8", Offset = "0x11389C8", VA = "0x11389C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000101")]
		public bool AutoFollow
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x11389D0", Offset = "0x11389D0", VA = "0x11389D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x11389D8", Offset = "0x11389D8", VA = "0x11389D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public float Speed
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x11389E4", Offset = "0x11389E4", VA = "0x11389E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x11389EC", Offset = "0x11389EC", VA = "0x11389EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public int Direction
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x11389F4", Offset = "0x11389F4", VA = "0x11389F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x11389FC", Offset = "0x11389FC", VA = "0x11389FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public GrindRail Rail
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x1138A04", Offset = "0x1138A04", VA = "0x1138A04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x1138A0C", Offset = "0x1138A0C", VA = "0x1138A0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float Distance
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x1138A14", Offset = "0x1138A14", VA = "0x1138A14")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x1138A1C", Offset = "0x1138A1C", VA = "0x1138A1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1138A24", Offset = "0x1138A24", VA = "0x1138A24")]
		public void SetPercent(float percent)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1138B60", Offset = "0x1138B60", VA = "0x1138B60")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1138B70", Offset = "0x1138B70", VA = "0x1138B70")]
		private void Follow()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1138CD0", Offset = "0x1138CD0", VA = "0x1138CD0")]
		public RailFollower()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class RandomRotateOnEnable : MonoBehaviour
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _rotateX;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _rotateY;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _rotateZ;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1138CD8", Offset = "0x1138CD8", VA = "0x1138CD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1138E88", Offset = "0x1138E88", VA = "0x1138E88")]
		public RandomRotateOnEnable()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public enum ReportOption
	{
		[Token(Token = "0x4000A3B")]
		VerbalAbuse,
		[Token(Token = "0x4000A3C")]
		BadBehaviour,
		[Token(Token = "0x4000A3D")]
		InappropriateName,
		[Token(Token = "0x4000A3E")]
		Cheating,
		[Token(Token = "0x4000A3F")]
		BugAbuse,
		[Token(Token = "0x4000A40")]
		All
	}
	[Token(Token = "0x20001AD")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _axis;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1138E90", Offset = "0x1138E90", VA = "0x1138E90")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1138EEC", Offset = "0x1138EEC", VA = "0x1138EEC")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class SandboxMatch : Match
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool TeamBased;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1138F50", Offset = "0x1138F50", VA = "0x1138F50", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1138FF4", Offset = "0x1138FF4", VA = "0x1138FF4", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1138FFC", Offset = "0x1138FFC", VA = "0x1138FFC", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x11390D8", Offset = "0x11390D8", VA = "0x11390D8", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x11390E0", Offset = "0x11390E0", VA = "0x11390E0", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1139100", Offset = "0x1139100", VA = "0x1139100", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1139108", Offset = "0x1139108", VA = "0x1139108")]
		public SandboxMatch()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[DefaultExecutionOrder(-99999999)]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ColorUsage(false, true)]
		[Header("Environment")]
		public Color FogColor;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FogDensity;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[ColorUsage(false, true)]
		public Color MistFogColor;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float FarClipPlane;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform SunOrigin;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform Sun;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Performance")]
		public bool IsSocialScene;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool UseOcclusionCulling;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneSettings Active;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _updateSun;

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1139160", Offset = "0x1139160", VA = "0x1139160")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x11391B8", Offset = "0x11391B8", VA = "0x11391B8")]
		public static Color Convert(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x11391E8", Offset = "0x11391E8", VA = "0x11391E8")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x11392E4", Offset = "0x11392E4", VA = "0x11392E4")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x113933C", Offset = "0x113933C", VA = "0x113933C")]
		public void Start()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1139458", Offset = "0x1139458", VA = "0x1139458")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1139520", Offset = "0x1139520", VA = "0x1139520")]
		public void SetMistActive()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1139600", Offset = "0x1139600", VA = "0x1139600")]
		public SceneSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class SessionSaveFileData
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SessionSaveFileDataEntry> Entries;

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1139630", Offset = "0x1139630", VA = "0x1139630")]
		public SessionSaveFileData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B1")]
	public class SessionSaveFileDataEntry
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SessionId;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Date;

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x11396B8", Offset = "0x11396B8", VA = "0x11396B8")]
		public SessionSaveFileDataEntry()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public static class SessionIdsFile
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string FilePath;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1139720", Offset = "0x1139720", VA = "0x1139720")]
		private static void SetupPath()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x11398B4", Offset = "0x11398B4", VA = "0x11398B4")]
		public static void Save(string sessionId)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public static class ScoreExporter
	{
		[Token(Token = "0x4000A53")]
		private const string _htmlTemplateFile = "Hyperdash.html";

		[Token(Token = "0x4000A54")]
		private const string _logoImage = "LogoTransparant.png";

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1139E88", Offset = "0x1139E88", VA = "0x1139E88")]
		public static void ExportScoreSheet()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class SeasonalMaterialOverride : MonoBehaviour
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x113C03C", Offset = "0x113C03C", VA = "0x113C03C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x113C128", Offset = "0x113C128", VA = "0x113C128")]
		public SeasonalMaterialOverride()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[Flags]
	public enum SessionInfoFlags
	{
		[Token(Token = "0x4000A5F")]
		None = 0,
		[Token(Token = "0x4000A60")]
		All = -1,
		[Token(Token = "0x4000A61")]
		Public = 1,
		[Token(Token = "0x4000A62")]
		Special = 2,
		[Token(Token = "0x4000A63")]
		Custom = 4,
		[Token(Token = "0x4000A64")]
		InProgress = 8,
		[Token(Token = "0x4000A65")]
		HasPassword = 0x10,
		[Token(Token = "0x4000A66")]
		LevelLocked = 0x20,
		[Token(Token = "0x4000A67")]
		PingRestricted = 0x40
	}
	[Token(Token = "0x20001B9")]
	public static class SessionInfoFlagsExtensions
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x113C130", Offset = "0x113C130", VA = "0x113C130")]
		public static SessionInfoFlags GetDefaultFilterFlags()
		{
			return default(SessionInfoFlags);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x113C138", Offset = "0x113C138", VA = "0x113C138")]
		public static SessionInfoFlags SetFlag(this SessionInfoFlags value, SessionInfoFlags flag, bool enable)
		{
			return default(SessionInfoFlags);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x113C14C", Offset = "0x113C14C", VA = "0x113C14C")]
		public static SessionInfoFlags AddFlag(this SessionInfoFlags value, SessionInfoFlags flag)
		{
			return default(SessionInfoFlags);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x113C154", Offset = "0x113C154", VA = "0x113C154")]
		public static SessionInfoFlags RemoveFlag(this SessionInfoFlags value, SessionInfoFlags flag)
		{
			return default(SessionInfoFlags);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x113C15C", Offset = "0x113C15C", VA = "0x113C15C")]
		public static bool HasFlagFast(this SessionInfoFlags value, SessionInfoFlags flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x113C168", Offset = "0x113C168", VA = "0x113C168")]
		public static bool ServerPassesFilter(this SessionInfoFlags value, ServerBrowser.SessionInfo sessionInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001BA")]
	public class SetCorrectCameraHeight : MonoBehaviour
	{
		[Token(Token = "0x20001BB")]
		private enum TrackingSpace
		{
			[Token(Token = "0x4000A6C")]
			Stationary,
			[Token(Token = "0x4000A6D")]
			RoomScale
		}

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Camera Settings")]
		[Tooltip("Decide if experience is Room Scale or Stationary. Note this option does nothing for mobile VR experiences, these experience will default to Stationary")]
		private TrackingSpace m_TrackingSpace;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Camera Height - overwritten by device settings when using Room Scale ")]
		[SerializeField]
		private float m_StationaryCameraYOffset;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("GameObject to move to desired height off the floor (defaults to this object if none provided)")]
		[SerializeField]
		private GameObject m_CameraFloorOffsetObject;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x113C188", Offset = "0x113C188", VA = "0x113C188")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x113C264", Offset = "0x113C264", VA = "0x113C264")]
		private void Start()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x113C268", Offset = "0x113C268", VA = "0x113C268")]
		private void SetCameraHeight()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x113C394", Offset = "0x113C394", VA = "0x113C394")]
		public SetCorrectCameraHeight()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class Settings
	{
		[Token(Token = "0x4000A77")]
		public const string MasterVolumeKey = "Volume";

		[Token(Token = "0x4000A78")]
		public const string MasterPitchKey = "Pitch";

		[Token(Token = "0x4000A79")]
		public const string MuteListKey = "MuteList";

		[Token(Token = "0x4000A7A")]
		public const string MusicVolumeKey = "MusicVolume";

		[Token(Token = "0x4000A7B")]
		public const string VoiceVolumeKey = "VoiceVolume";

		[Token(Token = "0x4000A7C")]
		public const string GameVolumeKey = "GameVolume";

		[Token(Token = "0x4000A7D")]
		public const string AnnouncerVolumeKey = "AnnouncerVolume";

		[Token(Token = "0x4000A7E")]
		public const string MatchMusicKey = "MusicDuringMatch";

		[Token(Token = "0x4000A7F")]
		private const string VoiceIsMicrophoneMutedKey = "VoiceIsMuted";

		[Token(Token = "0x4000A80")]
		private const string UseSmoothTurningKey = "UseSmoothTurning";

		[Token(Token = "0x4000A81")]
		private const string RotationSpeedKey = "RotationSpeed";

		[Token(Token = "0x4000A82")]
		private const string SnapAngleKey = "SnapAngle";

		[Token(Token = "0x4000A83")]
		private const string LeftHandedModeKey = "LeftHandedMode";

		[Token(Token = "0x4000A84")]
		private const string SeatedModeKey = "SeatedMode";

		[Token(Token = "0x4000A85")]
		private const string SeatedModeOffsetKey = "SeatedModeOffset";

		[Token(Token = "0x4000A86")]
		private const string StandardizedHeightOffsetKey = "StandardizedHeightOffset";

		[Token(Token = "0x4000A87")]
		private const string VerticalGunAngleKey = "GunAngle";

		[Token(Token = "0x4000A88")]
		private const string HorizontalGunAngleKey = "HorizontalGunAngle";

		[Token(Token = "0x4000A89")]
		private const string HideDronesKey = "HideDrones";

		[Token(Token = "0x4000A8A")]
		private const string DashChevronsKey = "DashChevrons";

		[Token(Token = "0x4000A8B")]
		private const string StickyDashKey = "StickyDash";

		[Token(Token = "0x4000A8C")]
		private const string ShowPingKey = "ShowPing";

		[Token(Token = "0x4000A8D")]
		private const string ShowNetworkStatusKey = "ShowNetworkStatus";

		[Token(Token = "0x4000A8E")]
		private const string UsePickupOnButtonKey = "PickupOnButton";

		[Token(Token = "0x4000A8F")]
		private const string VoiceChannelKey = "VoiceChannel";

		[Token(Token = "0x4000A90")]
		private const string VoicePushToTalkKey = "VoicePPT";

		[Token(Token = "0x4000A91")]
		private const string VoiceDeviceKey = "VoiceDevice";

		[Token(Token = "0x4000A92")]
		private const string DisplayFrequencyKey = "DisplayFrequency";

		[Token(Token = "0x4000A93")]
		private const string ShowAdsKey = "ShowAds";

		[Token(Token = "0x4000A94")]
		private const string AllowPersonalizedAdsKey = "AllowPersonalizedAds";

		[Token(Token = "0x4000A95")]
		private const string BhapticsKey = "Bhaptics";

		[Token(Token = "0x4000A96")]
		public const int MinRotationSpeed = 30;

		[Token(Token = "0x4000A97")]
		public const int MaxRotationSpeed = 360;

		[Token(Token = "0x4000A98")]
		public const int DefaultRotationSpeed = 180;

		[Token(Token = "0x4000A99")]
		public const int MinSnapAngle = 15;

		[Token(Token = "0x4000A9A")]
		public const int MaxSnapAngle = 90;

		[Token(Token = "0x4000A9B")]
		public const int DefaultSnapAngle = 45;

		[Token(Token = "0x4000A9C")]
		public const int MinVerticalGunAngle = -60;

		[Token(Token = "0x4000A9D")]
		public const int MinHorizontalGunAngle = -60;

		[Token(Token = "0x4000A9E")]
		public const int MaxVerticalGunAngle = 90;

		[Token(Token = "0x4000A9F")]
		public const int MaxHorizontalGunAngle = 60;

		[Token(Token = "0x4000AA0")]
		public const int DefaultVerticalGunAngle = 31;

		[Token(Token = "0x4000AA1")]
		public const float DefaultSeatedModeOffset = 0.5f;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _masterVolume;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _musicVolume;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _voiceVolume;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _gameVolume;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _announcerVolume;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _matchMusicEnabled;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool _voiceIsMirophoneMuted;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool _useSmoothTurning;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _rotationSpeed;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _snapAngle;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _verticalGunAngle;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _horizontalGunAngle;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _lefthandedMode;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _seatedMode;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _seatedModeOffset;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _standardizedHeightOffset;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _voicePushToTalk;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string _voiceDevice;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _displayFrequency;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _dashChevrons;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool _showAds;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		private bool _allowPersonalizedAds;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		private bool _hideDrones;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _stickyDash;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool _showPing;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool _showNetworkStatus;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool _usePickupOnButton;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private VoiceChannelType _voiceChannel;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _bHapticsEnabled;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public CustomSettings BackendSettings;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _hudDampHorizontalEnabled;

		[Token(Token = "0x4000AC2")]
		private const string HudSmoothDampKey = "HudHorizontalSmoothDamp";

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool _armHudEnabled;

		[Token(Token = "0x4000AC4")]
		private const string ArmHudKey = "ArmHudKey";

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool _statusHudEnabled;

		[Token(Token = "0x4000AC6")]
		private const string StatusHudKey = "StatusHudKey";

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _statusHudScale;

		[Token(Token = "0x4000AC8")]
		private const string StatusHudScaleKey = "StatusHudScaleKey";

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _resolutionScale;

		[Token(Token = "0x4000ACA")]
		private const string ResolutionScaleKey = "ResolutionScaleKey";

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _autoRefresh;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string AutoRefreshKey;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Sorting _sort;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string SortKey;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SessionInfoFlags _sessionFilters;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string SessionFilterKey;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SessionSpaceFilters _spaceFilters;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private string SpaceFilterKey;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private SessionStatusFilters _statusFilters;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string StatusFilterKey;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int _gamemodeFilters;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private string GamemodeFilterKey;

		[Token(Token = "0x17000106")]
		public static Settings Instance
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x113D008", Offset = "0x113D008", VA = "0x113D008")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x113D050", Offset = "0x113D050", VA = "0x113D050")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public float MasterVolume
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x113D0A8", Offset = "0x113D0A8", VA = "0x113D0A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x113D0B0", Offset = "0x113D0B0", VA = "0x113D0B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public float MusicVolume
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x113D138", Offset = "0x113D138", VA = "0x113D138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x113D140", Offset = "0x113D140", VA = "0x113D140")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float VoiceVolume
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x113D1C8", Offset = "0x113D1C8", VA = "0x113D1C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x113D1D0", Offset = "0x113D1D0", VA = "0x113D1D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public float GameVolume
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x113D258", Offset = "0x113D258", VA = "0x113D258")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x113D260", Offset = "0x113D260", VA = "0x113D260")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public float AnnouncerVolume
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x113D2E8", Offset = "0x113D2E8", VA = "0x113D2E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x113D2F0", Offset = "0x113D2F0", VA = "0x113D2F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool MatchMusicEnabled
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x113D378", Offset = "0x113D378", VA = "0x113D378")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x113D380", Offset = "0x113D380", VA = "0x113D380")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public bool IsVoiceMuted
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x113D408", Offset = "0x113D408", VA = "0x113D408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x113D410", Offset = "0x113D410", VA = "0x113D410")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public bool UseSmoothTurning
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x113D46C", Offset = "0x113D46C", VA = "0x113D46C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x113D474", Offset = "0x113D474", VA = "0x113D474")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public float RotationSpeed
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x113D4D0", Offset = "0x113D4D0", VA = "0x113D4D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x113D4F0", Offset = "0x113D4F0", VA = "0x113D4F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public float SnapAngle
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x113D560", Offset = "0x113D560", VA = "0x113D560")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x113D580", Offset = "0x113D580", VA = "0x113D580")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool LeftHandedMode
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x113D5F0", Offset = "0x113D5F0", VA = "0x113D5F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x113D5F8", Offset = "0x113D5F8", VA = "0x113D5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public bool SeatedMode
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x113D654", Offset = "0x113D654", VA = "0x113D654")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x113D65C", Offset = "0x113D65C", VA = "0x113D65C")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public float SeatedModeOffset
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x113D6B8", Offset = "0x113D6B8", VA = "0x113D6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x113D728", Offset = "0x113D728", VA = "0x113D728")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public int VerticalGunAngle
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x113D7D4", Offset = "0x113D7D4", VA = "0x113D7D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x113D7DC", Offset = "0x113D7DC", VA = "0x113D7DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public int HorizontalGunAngle
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x113D838", Offset = "0x113D838", VA = "0x113D838")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x113D840", Offset = "0x113D840", VA = "0x113D840")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public bool DashChevrons
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x113D89C", Offset = "0x113D89C", VA = "0x113D89C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x113D8A4", Offset = "0x113D8A4", VA = "0x113D8A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool HideDrones
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x113D900", Offset = "0x113D900", VA = "0x113D900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x113D908", Offset = "0x113D908", VA = "0x113D908")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public bool StickyDash
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x113D990", Offset = "0x113D990", VA = "0x113D990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x113D998", Offset = "0x113D998", VA = "0x113D998")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool ShowPing
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x113D9F4", Offset = "0x113D9F4", VA = "0x113D9F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x113D9FC", Offset = "0x113D9FC", VA = "0x113D9FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool ShowNetworkStatus
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x113DA84", Offset = "0x113DA84", VA = "0x113DA84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x113DA8C", Offset = "0x113DA8C", VA = "0x113DA8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool UsePickupOnButton
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x113DAE8", Offset = "0x113DAE8", VA = "0x113DAE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x113DAF0", Offset = "0x113DAF0", VA = "0x113DAF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public VoiceChannelType VoiceChannel
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x113DB4C", Offset = "0x113DB4C", VA = "0x113DB4C")]
			get
			{
				return default(VoiceChannelType);
			}
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x113DB54", Offset = "0x113DB54", VA = "0x113DB54")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool VoicePushToTalk
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x113DBBC", Offset = "0x113DBBC", VA = "0x113DBBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x113DBC4", Offset = "0x113DBC4", VA = "0x113DBC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public string VoiceDevice
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x113DC20", Offset = "0x113DC20", VA = "0x113DC20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x113DC28", Offset = "0x113DC28", VA = "0x113DC28")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public float DisplayFrequency
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x113DC90", Offset = "0x113DC90", VA = "0x113DC90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x113DC98", Offset = "0x113DC98", VA = "0x113DC98")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool ShowAds
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x113DCF4", Offset = "0x113DCF4", VA = "0x113DCF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x113DCFC", Offset = "0x113DCFC", VA = "0x113DCFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public bool AllowPersonalizedAds
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x113DD58", Offset = "0x113DD58", VA = "0x113DD58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x113DD60", Offset = "0x113DD60", VA = "0x113DD60")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public bool BHapticsEnabled
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x113DDEC", Offset = "0x113DDEC", VA = "0x113DDEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x113DDF4", Offset = "0x113DDF4", VA = "0x113DDF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public bool HudDampHorizontalEnabled
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x113DE7C", Offset = "0x113DE7C", VA = "0x113DE7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x113DE84", Offset = "0x113DE84", VA = "0x113DE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public bool ArmHudEnabled
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x113DEE0", Offset = "0x113DEE0", VA = "0x113DEE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x113DEE8", Offset = "0x113DEE8", VA = "0x113DEE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public bool StatusHudEnabled
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x113DF44", Offset = "0x113DF44", VA = "0x113DF44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x113DF4C", Offset = "0x113DF4C", VA = "0x113DF4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public float StatusHudScale
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x113DFA8", Offset = "0x113DFA8", VA = "0x113DFA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x113DFB0", Offset = "0x113DFB0", VA = "0x113DFB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public int ResolutionScale
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x113E00C", Offset = "0x113E00C", VA = "0x113E00C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x113E014", Offset = "0x113E014", VA = "0x113E014")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public bool AutoRefresh
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x113E08C", Offset = "0x113E08C", VA = "0x113E08C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x113E094", Offset = "0x113E094", VA = "0x113E094")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public Sorting Sort
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x113E0AC", Offset = "0x113E0AC", VA = "0x113E0AC")]
			get
			{
				return default(Sorting);
			}
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x113E0B4", Offset = "0x113E0B4", VA = "0x113E0B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public SessionInfoFlags SessionFilters
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x113E0C8", Offset = "0x113E0C8", VA = "0x113E0C8")]
			get
			{
				return default(SessionInfoFlags);
			}
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x113E0D0", Offset = "0x113E0D0", VA = "0x113E0D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public SessionSpaceFilters SpaceFilters
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x113E0E4", Offset = "0x113E0E4", VA = "0x113E0E4")]
			get
			{
				return default(SessionSpaceFilters);
			}
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x113E0EC", Offset = "0x113E0EC", VA = "0x113E0EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public SessionStatusFilters StatusFilters
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x113E100", Offset = "0x113E100", VA = "0x113E100")]
			get
			{
				return default(SessionStatusFilters);
			}
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x113E108", Offset = "0x113E108", VA = "0x113E108")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public int GameModeFilters
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x113E11C", Offset = "0x113E11C", VA = "0x113E11C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x113E124", Offset = "0x113E124", VA = "0x113E124")]
			set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<Settings> MasterVolumeChangedEvent
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x113C3A8", Offset = "0x113C3A8", VA = "0x113C3A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x113C458", Offset = "0x113C458", VA = "0x113C458")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event Action<Settings> MusicVolumeChangedEvent
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x113C508", Offset = "0x113C508", VA = "0x113C508")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x113C5B8", Offset = "0x113C5B8", VA = "0x113C5B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<Settings> VoiceVolumeChangedEvent
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x113C668", Offset = "0x113C668", VA = "0x113C668")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x113C718", Offset = "0x113C718", VA = "0x113C718")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<Settings> GameVolumeChangedEvent
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x113C7C8", Offset = "0x113C7C8", VA = "0x113C7C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x113C878", Offset = "0x113C878", VA = "0x113C878")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<Settings> AnnouncerVolumeChangedEvent
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x113C928", Offset = "0x113C928", VA = "0x113C928")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x113C9D8", Offset = "0x113C9D8", VA = "0x113C9D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<Settings> MatchMusicToggledEvent
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x113CA88", Offset = "0x113CA88", VA = "0x113CA88")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x113CB38", Offset = "0x113CB38", VA = "0x113CB38")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<bool> HideDroneChangedEvent
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x113CBE8", Offset = "0x113CBE8", VA = "0x113CBE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x113CC98", Offset = "0x113CC98", VA = "0x113CC98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<bool> ShowPingChangedEvent
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x113CD48", Offset = "0x113CD48", VA = "0x113CD48")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x113CDF8", Offset = "0x113CDF8", VA = "0x113CDF8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<bool> BhapticsEnabledChangedEvent
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x113CEA8", Offset = "0x113CEA8", VA = "0x113CEA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x113CF58", Offset = "0x113CF58", VA = "0x113CF58")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x113E138", Offset = "0x113E138", VA = "0x113E138")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x113E1C4", Offset = "0x113E1C4", VA = "0x113E1C4")]
		private Settings()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class SetupMainMenu : MonoBehaviour
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpectatorTarget _spectatorTarget;

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x113EA58", Offset = "0x113EA58", VA = "0x113EA58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x113ED40", Offset = "0x113ED40", VA = "0x113ED40")]
		private void Start()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x113EE1C", Offset = "0x113EE1C", VA = "0x113EE1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x113EEF8", Offset = "0x113EEF8", VA = "0x113EEF8")]
		public SetupMainMenu()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class SetupReconnectScene : MonoBehaviour
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpectatorTarget _spectatorTarget;

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x113EF00", Offset = "0x113EF00", VA = "0x113EF00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x113F28C", Offset = "0x113F28C", VA = "0x113F28C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x113F0DC", Offset = "0x113F0DC", VA = "0x113F0DC")]
		private void SetupTrackingSpace()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x113F360", Offset = "0x113F360", VA = "0x113F360")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x113F43C", Offset = "0x113F43C", VA = "0x113F43C")]
		public SetupReconnectScene()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class SetWeaponTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponTypes _weapon;

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x113F444", Offset = "0x113F444", VA = "0x113F444")]
		public SetWeaponTrigger()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class SigHandler : MonoBehaviour
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x113F44C", Offset = "0x113F44C", VA = "0x113F44C")]
		public SigHandler()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class SniperProjectile : MonoBehaviour
	{
		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ColorUsage(false, true)]
		public Color StartColor;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer Renderer;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ColorName;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _timer;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FadeTime;

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x113F454", Offset = "0x113F454", VA = "0x113F454")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x113F4BC", Offset = "0x113F4BC", VA = "0x113F4BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x113F4C8", Offset = "0x113F4C8", VA = "0x113F4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x113F554", Offset = "0x113F554", VA = "0x113F554")]
		public SniperProjectile()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class SpawnLocation : MonoBehaviour
	{
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int Team;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, List<SpawnLocation>> _spawnPointLookUp;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<float> _spawnPointScore;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x113F5B4", Offset = "0x113F5B4", VA = "0x113F5B4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x113F7F4", Offset = "0x113F7F4", VA = "0x113F7F4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x113F8EC", Offset = "0x113F8EC", VA = "0x113F8EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x113F8F0", Offset = "0x113F8F0", VA = "0x113F8F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x113F5B8", Offset = "0x113F5B8", VA = "0x113F5B8")]
		private void AddSpawnPointToDictionary()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x113F7F8", Offset = "0x113F7F8", VA = "0x113F7F8")]
		private void RemoveSpawnPointFromDictionary()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x113F8F4", Offset = "0x113F8F4", VA = "0x113F8F4")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x11361A8", Offset = "0x11361A8", VA = "0x11361A8")]
		public static SpawnLocation GetSpawn(int team)
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x113FA48", Offset = "0x113FA48", VA = "0x113FA48")]
		public SpawnLocation()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class SpectatedCharacterProvider : CharacterProvider
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x14000017")]
		public override event Action<NetCharacterBehaviour> ProvideCharacterEvent
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x113FB40", Offset = "0x113FB40", VA = "0x113FB40", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x113FBF0", Offset = "0x113FBF0", VA = "0x113FBF0", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x113FCA0", Offset = "0x113FCA0", VA = "0x113FCA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x113FEAC", Offset = "0x113FEAC", VA = "0x113FEAC")]
		public SpectatedCharacterProvider()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[DefaultExecutionOrder(100)]
	public class SpectatorDashInput : MonoBehaviour
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DashController _dashController;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpectatorController _spectatorController;

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x113FEB4", Offset = "0x113FEB4", VA = "0x113FEB4")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x11400C8", Offset = "0x11400C8", VA = "0x11400C8")]
		public SpectatorDashInput()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public static class SpectatorObjectRegistry
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MaxSpectatorConnections;
	}
	[Token(Token = "0x20001C6")]
	public class StartMatchButton : MonoBehaviour
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ButtonSlideAnimation _slideAnimation;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LobbyMatch _lobbyMatch;

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x114011C", Offset = "0x114011C", VA = "0x114011C")]
		public void SetNextMap(int index)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1140150", Offset = "0x1140150", VA = "0x1140150")]
		public void StartMatch()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x1140154", Offset = "0x1140154", VA = "0x1140154")]
		public StartMatchButton()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[DefaultExecutionOrder(-1000)]
	public class StartupHost : MonoBehaviour
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x114015C", Offset = "0x114015C", VA = "0x114015C")]
		public StartupHost()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class TeamDeathMatch : Match
	{
		[Token(Token = "0x20001C9")]
		private enum DeathmatchState
		{
			[Token(Token = "0x4000AF3")]
			None,
			[Token(Token = "0x4000AF4")]
			Playing,
			[Token(Token = "0x4000AF5")]
			MatchOver,
			[Token(Token = "0x4000AF6")]
			NextMap
		}

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DeathmatchState _matchState;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _stateTime;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _stateChangeTime;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IMatchState _boltState;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _previousLeaderTeam;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _previousLeaderKills;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _botPosition;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] _botControllingTeam;

		[Token(Token = "0x1700012E")]
		public override float Timer
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x1140164", Offset = "0x1140164", VA = "0x1140164", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700012F")]
		public override float RespawnTime
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x11402EC", Offset = "0x11402EC", VA = "0x11402EC", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x11402F4", Offset = "0x11402F4", VA = "0x11402F4", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1140360", Offset = "0x1140360", VA = "0x1140360", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x11407C4", Offset = "0x11407C4", VA = "0x11407C4", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1140730", Offset = "0x1140730", VA = "0x1140730")]
		private void ServerChangeState(DeathmatchState newState)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1140F24", Offset = "0x1140F24", VA = "0x1140F24")]
		private void ServerEnterState(DeathmatchState newState)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x1140FDC", Offset = "0x1140FDC", VA = "0x1140FDC")]
		private void GetBestTeam(out Teams teamWithHighestScore, out int teamHighestScore)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x114083C", Offset = "0x114083C", VA = "0x114083C")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x11415A4", Offset = "0x11415A4", VA = "0x11415A4")]
		private void AnnouncerOnKill(int lastKillTeam)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x11413AC", Offset = "0x11413AC", VA = "0x11413AC")]
		private void HandleEndOfGameEvents(Teams winningTeam)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1141AE0", Offset = "0x1141AE0", VA = "0x1141AE0", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1141AF0", Offset = "0x1141AF0", VA = "0x1141AF0", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1141BD8", Offset = "0x1141BD8", VA = "0x1141BD8", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x1141BE8", Offset = "0x1141BE8", VA = "0x1141BE8", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1141BF0", Offset = "0x1141BF0", VA = "0x1141BF0")]
		public TeamDeathMatch()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class TeamGlowObject : MonoBehaviour
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<TeamGlowObject> TeamGlowObjects;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1141E80", Offset = "0x1141E80", VA = "0x1141E80")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1141F58", Offset = "0x1141F58", VA = "0x1141F58")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1141FD8", Offset = "0x1141FD8", VA = "0x1141FD8")]
		public static void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x11420C0", Offset = "0x11420C0", VA = "0x11420C0")]
		public TeamGlowObject()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public enum Teams
	{
		[Token(Token = "0x4000AFF")]
		None = -1,
		[Token(Token = "0x4000B00")]
		Red,
		[Token(Token = "0x4000B01")]
		Blue
	}
	[Token(Token = "0x20001CE")]
	public static class TeamsExtensions
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1142160", Offset = "0x1142160", VA = "0x1142160")]
		public static Teams Other(this Teams team)
		{
			return default(Teams);
		}
	}
	[Token(Token = "0x20001CF")]
	public class TeamScoreDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _winningIndicator0;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _scoreText0;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _winningIndicator1;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _scoreText1;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Performance.FormatType _format;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _cachedScore0;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _cachedScore1;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1142178", Offset = "0x1142178", VA = "0x1142178")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x11421E0", Offset = "0x11421E0", VA = "0x11421E0")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x11425BC", Offset = "0x11425BC", VA = "0x11425BC")]
		public TeamScoreDisplay()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class TestFramerate : MonoBehaviour
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _min;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _max;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _timer;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lastMin;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastMax;

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x11425D8", Offset = "0x11425D8", VA = "0x11425D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x11429D8", Offset = "0x11429D8", VA = "0x11429D8")]
		public TestFramerate()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class TestPostFx : MonoBehaviour
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector4 Offset;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4 Scale;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x11429E8", Offset = "0x11429E8", VA = "0x11429E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1142A90", Offset = "0x1142A90", VA = "0x1142A90")]
		public TestPostFx()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TestSDK : MonoBehaviour
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1142AA0", Offset = "0x1142AA0", VA = "0x1142AA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1142B4C", Offset = "0x1142B4C", VA = "0x1142B4C")]
		private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1142C38", Offset = "0x1142C38", VA = "0x1142C38")]
		public TestSDK()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class TestSpheres : MonoBehaviour
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer[] _spheres;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1142C40", Offset = "0x1142C40", VA = "0x1142C40")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1142CB0", Offset = "0x1142CB0", VA = "0x1142CB0")]
		public void SetMaterials(Material material)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1142D18", Offset = "0x1142D18", VA = "0x1142D18")]
		public void ToggleSpheres()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1142DBC", Offset = "0x1142DBC", VA = "0x1142DBC")]
		public TestSpheres()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class TestStutter : MonoBehaviour
	{
		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxDistance;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _distance;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _start;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1142DC4", Offset = "0x1142DC4", VA = "0x1142DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1142DF4", Offset = "0x1142DF4", VA = "0x1142DF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1142EB8", Offset = "0x1142EB8", VA = "0x1142EB8")]
		public TestStutter()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[ExecuteInEditMode]
	public class TextureAtlasGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D[] _textures;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer[] _meshRenderers;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2DArray _array;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _material;

		[Token(Token = "0x17000132")]
		public Shader Shader
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x1142EC0", Offset = "0x1142EC0", VA = "0x1142EC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x1142EC8", Offset = "0x1142EC8", VA = "0x1142EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public Texture2D[] Textures
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x1142ED0", Offset = "0x1142ED0", VA = "0x1142ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1142ED8", Offset = "0x1142ED8", VA = "0x1142ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x11430B0", Offset = "0x11430B0", VA = "0x11430B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x11430B4", Offset = "0x11430B4", VA = "0x11430B4")]
		public void SetTextureArray(Texture2D[] textures)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x11431B0", Offset = "0x11431B0", VA = "0x11431B0")]
		[ContextMenu("Get mesh renderers from childeren")]
		public void InitializeMeshRenderersFromChilderen()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1142F94", Offset = "0x1142F94", VA = "0x1142F94")]
		public void SetupSceneMaterial()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x114320C", Offset = "0x114320C", VA = "0x114320C")]
		public Texture2DArray GenerateAtlasArray()
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x11435BC", Offset = "0x11435BC", VA = "0x11435BC")]
		public void SetShader(Shader shader)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x11435C4", Offset = "0x11435C4", VA = "0x11435C4")]
		public TextureAtlasGenerator()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class TimeSettings : MonoBehaviour
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1143628", Offset = "0x1143628", VA = "0x1143628")]
		public TimeSettings()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class OvrKeybindsMenu : MonoBehaviour
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeybindElement _keybindElementPrefab;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _container;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _content;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<KeybindElement> _elements;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isWaitingForKeypress;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeybindElement _currentElement;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OvrKeybinds _keybinds;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableInput;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1143630", Offset = "0x1143630", VA = "0x1143630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1143790", Offset = "0x1143790", VA = "0x1143790")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1143794", Offset = "0x1143794", VA = "0x1143794")]
		public void OnRebindKeyPressed(KeybindElement element)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x11437D4", Offset = "0x11437D4", VA = "0x11437D4")]
		private void OnClearPressed(KeybindElement element)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1143954", Offset = "0x1143954", VA = "0x1143954")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x11437B0", Offset = "0x11437B0", VA = "0x11437B0")]
		private void DisableRaycasters()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1143B78", Offset = "0x1143B78", VA = "0x1143B78")]
		private void EnableRaycasters()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x1143B9C", Offset = "0x1143B9C", VA = "0x1143B9C")]
		private void RefreshAllElements()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x1143D10", Offset = "0x1143D10", VA = "0x1143D10")]
		public void OnDefaultKeybindsPressed()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1143D48", Offset = "0x1143D48", VA = "0x1143D48")]
		public void OnDefaultLeftHandedKeybindsPressed()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1143D80", Offset = "0x1143D80", VA = "0x1143D80")]
		public OvrKeybindsMenu()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class SpectatorKeybindMenu : MonoBehaviour
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeybindAltElement _keybindElementPrefab;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _container;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _content;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<KeybindAltElement> _elements;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isWaitingForKeypress;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _actAsAltButton;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeybindAltElement _currentElement;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpectatorKeybinds _keybinds;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableInput;

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1143E08", Offset = "0x1143E08", VA = "0x1143E08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1143F68", Offset = "0x1143F68", VA = "0x1143F68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x11442CC", Offset = "0x11442CC", VA = "0x11442CC")]
		public void OnRebindKeyPressed(KeybindAltElement element, bool alt)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1144324", Offset = "0x1144324", VA = "0x1144324")]
		private void OnClearPressed(KeybindAltElement element, bool alt)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x11444CC", Offset = "0x11444CC", VA = "0x11444CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1144300", Offset = "0x1144300", VA = "0x1144300")]
		private void DisableRaycasters()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x114464C", Offset = "0x114464C", VA = "0x114464C")]
		private void EnableRaycasters()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1144670", Offset = "0x1144670", VA = "0x1144670")]
		private void RefreshAllElements()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x11447C0", Offset = "0x11447C0", VA = "0x11447C0")]
		public void OnDefaultKeybindsPressed()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x11447F8", Offset = "0x11447F8", VA = "0x11447F8")]
		public SpectatorKeybindMenu()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class ResolutionSlider : MonoBehaviour, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _resolutionPercentageText;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider _slider;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _percentageFormat;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1144880", Offset = "0x1144880", VA = "0x1144880")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x114495C", Offset = "0x114495C", VA = "0x114495C", Slot = "4")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1144938", Offset = "0x1144938", VA = "0x1144938")]
		public void OnResolutionScaleChanged(float value)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1144A9C", Offset = "0x1144A9C", VA = "0x1144A9C")]
		public ResolutionSlider()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class UserData
	{
		[Token(Token = "0x4000B2F")]
		private const string NewItemDataKey = "NewItemData";

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NewItemData _newItemData;

		[Token(Token = "0x17000134")]
		public static UserData Instance
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x1144AF4", Offset = "0x1144AF4", VA = "0x1144AF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x1144B3C", Offset = "0x1144B3C", VA = "0x1144B3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public NewItemData NewItemData
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x1144B94", Offset = "0x1144B94", VA = "0x1144B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1144B9C", Offset = "0x1144B9C", VA = "0x1144B9C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1144C28", Offset = "0x1144C28", VA = "0x1144C28")]
		private UserData()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1144CC8", Offset = "0x1144CC8", VA = "0x1144CC8")]
		public static void Save()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1144D14", Offset = "0x1144D14", VA = "0x1144D14")]
		private void SaveInternal()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1144DA0", Offset = "0x1144DA0", VA = "0x1144DA0")]
		public static void ResetUserData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class NewItemData : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] _newList;

		[Token(Token = "0x17000136")]
		public HashSet<string> NewListSet
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x1144F48", Offset = "0x1144F48", VA = "0x1144F48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x1144F50", Offset = "0x1144F50", VA = "0x1144F50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<NewItemData> ListUpdatedEvent
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x1144DE8", Offset = "0x1144DE8", VA = "0x1144DE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1144E98", Offset = "0x1144E98", VA = "0x1144E98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1144F58", Offset = "0x1144F58", VA = "0x1144F58", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1144FB0", Offset = "0x1144FB0", VA = "0x1144FB0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1145064", Offset = "0x1145064", VA = "0x1145064")]
		public void Add(ref List<string> value)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1145150", Offset = "0x1145150", VA = "0x1145150")]
		public void Add(string value)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x11451D0", Offset = "0x11451D0", VA = "0x11451D0")]
		public void Remove(string value)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1145250", Offset = "0x1145250", VA = "0x1145250")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1145298", Offset = "0x1145298", VA = "0x1145298")]
		public bool WatchId(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x11452F0", Offset = "0x11452F0", VA = "0x11452F0")]
		public NewItemData()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public static class Utils
	{
		[Token(Token = "0x20001DD")]
		[CompilerGenerated]
		private sealed class <DoAfterTime>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A01")]
				[Address(RVA = "0x1145838", Offset = "0x1145838", VA = "0x1145838", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A03")]
				[Address(RVA = "0x1145880", Offset = "0x1145880", VA = "0x1145880", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1145434", Offset = "0x1145434", VA = "0x1145434")]
			[DebuggerHidden]
			public <DoAfterTime>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x1145770", Offset = "0x1145770", VA = "0x1145770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x1145774", Offset = "0x1145774", VA = "0x1145774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x1145840", Offset = "0x1145840", VA = "0x1145840", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _numericVersion;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SemanticVersion VersionString;

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x11453B0", Offset = "0x11453B0", VA = "0x11453B0")]
		[IteratorStateMachine(typeof(<DoAfterTime>d__0))]
		public static IEnumerator DoAfterTime(Action action, float time)
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x114545C", Offset = "0x114545C", VA = "0x114545C")]
		public static string AddOrdinal(int num)
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1145598", Offset = "0x1145598", VA = "0x1145598")]
		public static int GetNumericVersionCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1145650", Offset = "0x1145650", VA = "0x1145650")]
		public static int GetNumericVersionCodeFromString(string versionStr, out SemanticVersion semVersion)
		{
			return default(int);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x11456D8", Offset = "0x11456D8", VA = "0x11456D8")]
		public static bool CompareNumericVersionMajorMinor(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x114570C", Offset = "0x114570C", VA = "0x114570C")]
		public static string GetUniqueDeviceID()
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	[Flags]
	public enum VoiceChannelType
	{
		[Token(Token = "0x4000B3C")]
		None = 0,
		[Token(Token = "0x4000B3D")]
		Team = 1,
		[Token(Token = "0x4000B3E")]
		Global = 2,
		[Token(Token = "0x4000B3F")]
		All = 3
	}
	[Token(Token = "0x20001DF")]
	public static class VoiceChannelExtensions
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1145888", Offset = "0x1145888", VA = "0x1145888")]
		public static VoiceChannelType SetFlag(this VoiceChannelType value, VoiceChannelType flag, bool enable)
		{
			return default(VoiceChannelType);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x114589C", Offset = "0x114589C", VA = "0x114589C")]
		public static VoiceChannelType ToggleFlag(this VoiceChannelType value, VoiceChannelType flag)
		{
			return default(VoiceChannelType);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x11458A4", Offset = "0x11458A4", VA = "0x11458A4")]
		public static VoiceChannelType AddFlag(this VoiceChannelType value, VoiceChannelType flag)
		{
			return default(VoiceChannelType);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x11458AC", Offset = "0x11458AC", VA = "0x11458AC")]
		public static VoiceChannelType RemoveFlag(this VoiceChannelType value, VoiceChannelType flag)
		{
			return default(VoiceChannelType);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x11458B4", Offset = "0x11458B4", VA = "0x11458B4")]
		public static bool HasFlagFast(this VoiceChannelType value, VoiceChannelType flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x11458C0", Offset = "0x11458C0", VA = "0x11458C0")]
		public static bool HasAnyFlagFast(this VoiceChannelType value, VoiceChannelType flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E0")]
	public class WeaponChargeAudio : MonoBehaviour
	{
		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HyperDash.Weapon.Weapon _weapon;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isPlaying;

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x11458CC", Offset = "0x11458CC", VA = "0x11458CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x11459A8", Offset = "0x11459A8", VA = "0x11459A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x11459F4", Offset = "0x11459F4", VA = "0x11459F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1145A68", Offset = "0x1145A68", VA = "0x1145A68")]
		private void StopChargeAudio()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1145B40", Offset = "0x1145B40", VA = "0x1145B40")]
		private void StartChargeAudio()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1145BA4", Offset = "0x1145BA4", VA = "0x1145BA4")]
		public WeaponChargeAudio()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class WeaponChargeEffect : MonoBehaviour
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HyperDash.Weapon.Weapon _weapon;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _flare;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool HideIfNotCharging;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHidden;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1145BAC", Offset = "0x1145BAC", VA = "0x1145BAC")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1145D98", Offset = "0x1145D98", VA = "0x1145D98")]
		public WeaponChargeEffect()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[CreateAssetMenu(fileName = "WeaponPickup", menuName = "Pickups/WeaponCollection", order = 1)]
	public class WeaponCollectionPickup : WeaponPickup
	{
		[Serializable]
		[Token(Token = "0x20001E3")]
		private struct WeaponData
		{
			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WeaponTypes Type;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Score;
		}

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WeaponData[] _weaponTypes;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _totalScore;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1145DA0", Offset = "0x1145DA0", VA = "0x1145DA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1145E00", Offset = "0x1145E00", VA = "0x1145E00", Slot = "6")]
		public override bool PickUp(NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1145E34", Offset = "0x1145E34", VA = "0x1145E34")]
		public WeaponTypes GetRandomWeaponType()
		{
			return default(WeaponTypes);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1146018", Offset = "0x1146018", VA = "0x1146018")]
		public WeaponCollectionPickup()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class WeaponLaser : MonoBehaviour
	{
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HyperDash.Weapon.Weapon _weapon;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _beam;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _dot;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask Mask;

		[Token(Token = "0x17000139")]
		public Vector3 Target
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0x1146028", Offset = "0x1146028", VA = "0x1146028")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x1146034", Offset = "0x1146034", VA = "0x1146034")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public bool IsGuideMode
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x1146040", Offset = "0x1146040", VA = "0x1146040")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x1146048", Offset = "0x1146048", VA = "0x1146048")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public HyperDash.Weapon.Weapon Weapon
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x1146054", Offset = "0x1146054", VA = "0x1146054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x114605C", Offset = "0x114605C", VA = "0x114605C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1146124", Offset = "0x1146124", VA = "0x1146124")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1146188", Offset = "0x1146188", VA = "0x1146188")]
		private void ActivateGuiding()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1146060", Offset = "0x1146060", VA = "0x1146060")]
		private void DeactivateGuideing()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1146238", Offset = "0x1146238", VA = "0x1146238")]
		private void UpdateGuiding()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x11464F8", Offset = "0x11464F8", VA = "0x11464F8")]
		public WeaponLaser()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[CreateAssetMenu(fileName = "WeaponPickup", menuName = "Pickups/Weapon", order = 1)]
	public class WeaponPickup : Pickup
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _pickupModel;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WeaponTypes _weaponType;

		[Token(Token = "0x1700013C")]
		public override GameObject Model
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x1146500", Offset = "0x1146500", VA = "0x1146500", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public WeaponTypes WeaponType
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x1146508", Offset = "0x1146508", VA = "0x1146508")]
			get
			{
				return default(WeaponTypes);
			}
		}

		[Token(Token = "0x1700013E")]
		public override bool ListenForRequestPickup
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1146510", Offset = "0x1146510", VA = "0x1146510", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1146518", Offset = "0x1146518", VA = "0x1146518", Slot = "6")]
		public override bool PickUp(NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1145EB0", Offset = "0x1145EB0", VA = "0x1145EB0")]
		protected bool PickupWeapon(WeaponTypes pickUpWeaponType, NetCharacterBehaviour character, int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1146020", Offset = "0x1146020", VA = "0x1146020")]
		public WeaponPickup()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class WeaponSkinViewer : MonoBehaviour
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x114652C", Offset = "0x114652C", VA = "0x114652C")]
		public WeaponSkinViewer()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class TestLoad : MonoBehaviour
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1146534", Offset = "0x1146534", VA = "0x1146534")]
		public TestLoad()
		{
		}
	}
}
namespace HyperDash.VRUI
{
	[Token(Token = "0x20001E8")]
	public static class InputEvents
	{
		[Token(Token = "0x20001E9")]
		public struct PressedArgs
		{
			[Token(Token = "0x1700013F")]
			public GameObject SelectedObject
			{
				[Token(Token = "0x6000A2C")]
				[Address(RVA = "0x1146718", Offset = "0x1146718", VA = "0x1146718")]
				[CompilerGenerated]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000A2D")]
				[Address(RVA = "0x1146720", Offset = "0x1146720", VA = "0x1146720")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x1146728", Offset = "0x1146728", VA = "0x1146728")]
			public PressedArgs(GameObject selectedObject)
			{
			}
		}

		[Token(Token = "0x20001EA")]
		public delegate void PressedDelegate(PressedArgs eventArgs);

		[Token(Token = "0x14000019")]
		public static event PressedDelegate PressedEvent
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x114653C", Offset = "0x114653C", VA = "0x114653C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x11465F4", Offset = "0x11465F4", VA = "0x11465F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x11466AC", Offset = "0x11466AC", VA = "0x11466AC")]
		public static void OnPressed(PressedArgs eventArgs)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class PCGraphicsRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SortOrder;

		[Token(Token = "0x17000140")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x11468A8", Offset = "0x11468A8", VA = "0x11468A8", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000141")]
		public LayerMask BlockingMask
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x11468B0", Offset = "0x11468B0", VA = "0x11468B0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x11468B8", Offset = "0x11468B8", VA = "0x11468B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x11468C0", Offset = "0x11468C0", VA = "0x11468C0")]
		public PCGraphicsRaycaster()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[RequireComponent(typeof(Canvas))]
	public class VRGraphicsRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x20001ED")]
		private struct RaycastHit
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fromMouse;
		}

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FormerlySerializedAs("_sortOrder")]
		public int SortOrder;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas _canvas;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RaycastHit> _raycastResults;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] _corners;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<VRGraphicsRaycaster> _activeRaycasters;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool RaycastNeeded;

		[NonSerialized]
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<RaycastHit> s_SortedGraphics;

		[Token(Token = "0x17000142")]
		public LayerMask BlockingMask
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x1146918", Offset = "0x1146918", VA = "0x1146918")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x1146920", Offset = "0x1146920", VA = "0x1146920")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public GameObject Pointer
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x1146928", Offset = "0x1146928", VA = "0x1146928")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x1146930", Offset = "0x1146930", VA = "0x1146930")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x1146938", Offset = "0x1146938", VA = "0x1146938", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000145")]
		public Canvas Canvas
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x1146940", Offset = "0x1146940", VA = "0x1146940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x11469E8", Offset = "0x11469E8", VA = "0x11469E8", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1146A04", Offset = "0x1146A04", VA = "0x1146A04", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1146AA4", Offset = "0x1146AA4", VA = "0x1146AA4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1146B60", Offset = "0x1146B60", VA = "0x1146B60")]
		private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x11478B8", Offset = "0x11478B8", VA = "0x11478B8", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1147A0C", Offset = "0x1147A0C", VA = "0x1147A0C")]
		public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x11471FC", Offset = "0x11471FC", VA = "0x11471FC")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x1147FBC", Offset = "0x1147FBC", VA = "0x1147FBC")]
		public Vector2 GetScreenPosition(RaycastResult raycastResult)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x1147C5C", Offset = "0x1147C5C", VA = "0x1147C5C")]
		private static bool RayIntersectsGraphic(Graphic graphic, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x1148120", Offset = "0x1148120", VA = "0x1148120")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x11483F0", Offset = "0x11483F0", VA = "0x11483F0")]
		public bool IsFocussed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1148508", Offset = "0x1148508", VA = "0x1148508", Slot = "22")]
		public void OnPointerEnter(PointerEventData e)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x114866C", Offset = "0x114866C", VA = "0x114866C")]
		public VRGraphicsRaycaster()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public interface IUi3d
	{
	}
	[Token(Token = "0x20001F0")]
	public class VRInputModule : BaseInputModule
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRPointer _vrPointer;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Dragging")]
		[SerializeField]
		[FormerlySerializedAs("_angleDragThreshold")]
		private float _angleDragThresholdScrollRect;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _currentObject;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRPointerEventData _pointerEventData;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PointerEventData _pointer3DEventData;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _lostDrag;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject _lostDragGameObject;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LayerMask Pointer3dMask;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _pressedCameraPosition;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject _current3DObject;

		[Token(Token = "0x17000147")]
		public VRGraphicsRaycaster ActiveGraphicRaycaster
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x114890C", Offset = "0x114890C", VA = "0x114890C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x1148914", Offset = "0x1148914", VA = "0x1148914")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x114891C", Offset = "0x114891C", VA = "0x114891C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1148A1C", Offset = "0x1148A1C", VA = "0x1148A1C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1148B40", Offset = "0x1148B40", VA = "0x1148B40", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1149234", Offset = "0x1149234", VA = "0x1149234")]
		private void ProcessOnPress(VRPointerEventData data)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1149A2C", Offset = "0x1149A2C", VA = "0x1149A2C")]
		private void ProcessOnReleased(VRPointerEventData data)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x114955C", Offset = "0x114955C", VA = "0x114955C")]
		private void ProcessScrolling(VRPointerEventData data)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x11496DC", Offset = "0x11496DC", VA = "0x11496DC")]
		private void ProcessDragging(VRPointerEventData data)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x114A2C4", Offset = "0x114A2C4", VA = "0x114A2C4")]
		private bool ShouldStartDrag(VRPointerEventData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1149D18", Offset = "0x1149D18", VA = "0x1149D18")]
		private void ProcessOnPress3D(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1149FF0", Offset = "0x1149FF0", VA = "0x1149FF0")]
		private void ProcessOnReleased3D(PointerEventData data)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x114A58C", Offset = "0x114A58C", VA = "0x114A58C")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	[DefaultExecutionOrder(100000)]
	public class VRPointer : MonoBehaviour
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem _eventSystem;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _leftControllerAnchor;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _rightControllerAnchor;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _dot;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasHitTarget;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _hitPosition;

		[Token(Token = "0x4000B75")]
		private const float _maxHitDistance = 100f;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _hitDistance;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isVisible;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Ray _ray;

		[Token(Token = "0x17000148")]
		public EventSystem EventSystem
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x114A59C", Offset = "0x114A59C", VA = "0x114A59C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x114A5A4", Offset = "0x114A5A4", VA = "0x114A5A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x114A6C8", Offset = "0x114A6C8", VA = "0x114A6C8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x11491BC", Offset = "0x11491BC", VA = "0x11491BC")]
		public Ray GetRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1148A6C", Offset = "0x1148A6C", VA = "0x1148A6C")]
		public void SetHit(bool hit, Vector3 hitPosition)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x114A664", Offset = "0x114A664", VA = "0x114A664")]
		public void SetVisible(bool enable)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x114AA54", Offset = "0x114AA54", VA = "0x114AA54")]
		public VRPointer()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Ray worldSpaceRay;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Vector2 swipeStart;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1148A14", Offset = "0x1148A14", VA = "0x1148A14")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x114AA6C", Offset = "0x114AA6C", VA = "0x114AA6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F3")]
	public static class PointerEventDataExtension
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x114790C", Offset = "0x114790C", VA = "0x114790C")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1147984", Offset = "0x1147984", VA = "0x1147984")]
		public static Ray GetRay(this PointerEventData pointerEventData)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x114AE20", Offset = "0x114AE20", VA = "0x114AE20")]
		public static Vector2 GetSwipeStart(this PointerEventData pointerEventData)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x114AE9C", Offset = "0x114AE9C", VA = "0x114AE9C")]
		public static void SetSwipeStart(this PointerEventData pointerEventData, Vector2 start)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class VR_TMP_Dropdown : TMP_Dropdown
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x114AF28", Offset = "0x114AF28", VA = "0x114AF28", Slot = "45")]
		protected override GameObject CreateBlocker(Canvas rootCanvas)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x114AFEC", Offset = "0x114AFEC", VA = "0x114AFEC")]
		public VR_TMP_Dropdown()
		{
		}
	}
}
namespace HyperDash.Voice
{
	[Token(Token = "0x20001F5")]
	public struct VoiceChannelID
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VoiceChannelType Type;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Index;
	}
	[Token(Token = "0x20001F6")]
	public class VoiceChannel
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VoiceChannelID ID;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IChannelSession Session;

		[Token(Token = "0x17000149")]
		public string ChannelName
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x114B044", Offset = "0x114B044", VA = "0x114B044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x114B118", Offset = "0x114B118", VA = "0x114B118")]
		public VoiceChannel(VoiceChannelID id, IChannelSession session)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x114B150", Offset = "0x114B150", VA = "0x114B150")]
		public IParticipant GetParticipant(string unityID)
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x114B578", Offset = "0x114B578", VA = "0x114B578")]
		public VoiceManager.ConnectionState GetState()
		{
			return default(VoiceManager.ConnectionState);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x114B8C8", Offset = "0x114B8C8", VA = "0x114B8C8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x114B9E8", Offset = "0x114B9E8", VA = "0x114B9E8")]
		public void SetAsActive(bool active)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x114C380", Offset = "0x114C380", VA = "0x114C380")]
		private void OnChannelPropertyChanged(object sender, PropertyChangedEventArgs propertyChangedEventArgs)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x114C798", Offset = "0x114C798", VA = "0x114C798")]
		private void OnParticipantAdded(object sender, KeyEventArg<string> keyEventArg)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x114CC60", Offset = "0x114CC60", VA = "0x114CC60")]
		private void OnParticipantRemoved(object sender, KeyEventArg<string> keyEventArg)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x114BFAC", Offset = "0x114BFAC", VA = "0x114BFAC")]
		private void SetAllParticipantSettings()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x114CAE0", Offset = "0x114CAE0", VA = "0x114CAE0")]
		private void SetParticipantSettings(IParticipant participant)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x114CFB8", Offset = "0x114CFB8", VA = "0x114CFB8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x114CFDC", Offset = "0x114CFDC", VA = "0x114CFDC")]
		public bool HasToBeReplacedBy(string channelName)
		{
			return default(bool);
		}
	}
}
namespace HyperDash.UI
{
	[Token(Token = "0x20001F7")]
	public class AnimatedView : MonoBehaviour
	{
		[Token(Token = "0x20001F8")]
		public enum State
		{
			[Token(Token = "0x4000B87")]
			TransitionToVisible,
			[Token(Token = "0x4000B88")]
			Visible,
			[Token(Token = "0x4000B89")]
			TransitionToHidden,
			[Token(Token = "0x4000B8A")]
			Hidden
		}

		[Token(Token = "0x20001F9")]
		public class AnimationStartedArgs
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x114D894", Offset = "0x114D894", VA = "0x114D894")]
			public AnimationStartedArgs()
			{
			}
		}

		[Token(Token = "0x20001FA")]
		public delegate void AnimationStartedDelegate(AnimatedView sender, AnimationStartedArgs eventArgs);

		[Token(Token = "0x20001FB")]
		public class AnimationEndedArgs
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x114D788", Offset = "0x114D788", VA = "0x114D788")]
			public AnimationEndedArgs()
			{
			}
		}

		[Token(Token = "0x20001FC")]
		public delegate void AnimationEndedDelegate(AnimatedView sender, AnimationEndedArgs eventArgs);

		[Token(Token = "0x20001FD")]
		public class StateChangedArgs
		{
			[Token(Token = "0x1700014D")]
			public State OldState
			{
				[Token(Token = "0x6000A9C")]
				[Address(RVA = "0x114E07C", Offset = "0x114E07C", VA = "0x114E07C")]
				[CompilerGenerated]
				get
				{
					return default(State);
				}
				[Token(Token = "0x6000A9D")]
				[Address(RVA = "0x114E084", Offset = "0x114E084", VA = "0x114E084")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700014E")]
			public State NewState
			{
				[Token(Token = "0x6000A9E")]
				[Address(RVA = "0x114E08C", Offset = "0x114E08C", VA = "0x114E08C")]
				[CompilerGenerated]
				get
				{
					return default(State);
				}
				[Token(Token = "0x6000A9F")]
				[Address(RVA = "0x114E094", Offset = "0x114E094", VA = "0x114E094")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x114D56C", Offset = "0x114D56C", VA = "0x114D56C")]
			public StateChangedArgs(State oldState, State newState)
			{
			}
		}

		[Token(Token = "0x20001FE")]
		public delegate void StateChangedDelegate(AnimatedView sender, StateChangedArgs eventArgs);

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ViewAnimation _viewAnimation;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _blockAnimateInput;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private State _currentState;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _confirmCallback;

		[Token(Token = "0x1700014A")]
		public State CurrentState
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x114D4C4", Offset = "0x114D4C4", VA = "0x114D4C4")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x114D4CC", Offset = "0x114D4CC", VA = "0x114D4CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool BlockAnimateInput
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x114D598", Offset = "0x114D598", VA = "0x114D598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		public ViewAnimation ViewAnimation
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x114D5A0", Offset = "0x114D5A0", VA = "0x114D5A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x114D5A8", Offset = "0x114D5A8", VA = "0x114D5A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event AnimationStartedDelegate AnimationStartedEvent
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x114D0A4", Offset = "0x114D0A4", VA = "0x114D0A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x114D140", Offset = "0x114D140", VA = "0x114D140")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event AnimationEndedDelegate AnimationEndedEvent
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x114D204", Offset = "0x114D204", VA = "0x114D204")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x114D2A0", Offset = "0x114D2A0", VA = "0x114D2A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event StateChangedDelegate StateChangedEvent
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x114D364", Offset = "0x114D364", VA = "0x114D364")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x114D400", Offset = "0x114D400", VA = "0x114D400")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x114D1DC", Offset = "0x114D1DC", VA = "0x114D1DC")]
		protected void OnAnimationStarted(AnimationStartedArgs eventArgs)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x114D33C", Offset = "0x114D33C", VA = "0x114D33C")]
		protected void OnAnimationEnded(AnimationEndedArgs eventArgs)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x114D49C", Offset = "0x114D49C", VA = "0x114D49C")]
		private void OnStateChanged(StateChangedArgs eventArgs)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x114D5B0", Offset = "0x114D5B0", VA = "0x114D5B0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x114D5B8", Offset = "0x114D5B8", VA = "0x114D5B8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x114D5DC", Offset = "0x114D5DC", VA = "0x114D5DC", Slot = "6")]
		public virtual void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x114D790", Offset = "0x114D790", VA = "0x114D790", Slot = "7")]
		protected virtual void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x114D89C", Offset = "0x114D89C", VA = "0x114D89C", Slot = "8")]
		protected virtual void InTransitionDone(Action callback)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x114D96C", Offset = "0x114D96C", VA = "0x114D96C")]
		public void HideButton()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x114D980", Offset = "0x114D980", VA = "0x114D980", Slot = "9")]
		public virtual void Hide(bool useTransitions = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x114DB84", Offset = "0x114DB84", VA = "0x114DB84", Slot = "10")]
		protected virtual void OutTransitionDone(Action callback)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x114DC44", Offset = "0x114DC44", VA = "0x114DC44", Slot = "11")]
		protected virtual void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x114DCFC", Offset = "0x114DCFC", VA = "0x114DCFC", Slot = "12")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x114DD20", Offset = "0x114DD20", VA = "0x114DD20")]
		public void SetConfirmCallback(Action confirmCallback)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x114DD28", Offset = "0x114DD28", VA = "0x114DD28")]
		protected void DoConfirmAction()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x114DD5C", Offset = "0x114DD5C", VA = "0x114DD5C")]
		public AnimatedView()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class ArcadeServerBrowser : GlobalEventListener
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _statusText;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _hostName;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isJoining;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _timeTillNextConnectionAtempt;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x114E274", Offset = "0x114E274", VA = "0x114E274")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x114E430", Offset = "0x114E430", VA = "0x114E430")]
		private string HashServer(string server)
		{
			return null;
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x114E35C", Offset = "0x114E35C", VA = "0x114E35C")]
		private void JoinSession(string hostName)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x114E4D4", Offset = "0x114E4D4", VA = "0x114E4D4", Slot = "37")]
		public override void SessionConnectFailed(UdpSession session, IProtocolToken token, UdpSessionError errorReason)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x114E4F8", Offset = "0x114E4F8", VA = "0x114E4F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x114E6A4", Offset = "0x114E6A4", VA = "0x114E6A4")]
		public ArcadeServerBrowser()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class EscapeAction
	{
		[Token(Token = "0x1700014F")]
		public Type Type
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x114E6FC", Offset = "0x114E6FC", VA = "0x114E6FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public Action Action
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x114E704", Offset = "0x114E704", VA = "0x114E704")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x114E70C", Offset = "0x114E70C", VA = "0x114E70C")]
		public EscapeAction(Type obj, Action action)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class FlipbookText : MonoBehaviour
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] _book;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _switchTime;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timer;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int index;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x114E750", Offset = "0x114E750", VA = "0x114E750")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x114E7B4", Offset = "0x114E7B4", VA = "0x114E7B4")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x114E848", Offset = "0x114E848", VA = "0x114E848")]
		public FlipbookText()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class GraphicsRaycasterSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _sortOrder;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask _blockingMasktest;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRGraphicsRaycaster _vrGraphicsRaycaster;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GraphicRaycaster _standaloneGraphicsRaycaster;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphicRaycaster _graphicRaycaster;

		[Token(Token = "0x17000151")]
		public int SortOrder
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x114E8B4", Offset = "0x114E8B4", VA = "0x114E8B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x114E8BC", Offset = "0x114E8BC", VA = "0x114E8BC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x114E984", Offset = "0x114E984", VA = "0x114E984")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x114EAF4", Offset = "0x114EAF4", VA = "0x114EAF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x114EAF8", Offset = "0x114EAF8", VA = "0x114EAF8")]
		private void CheckInputModule()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x114EB98", Offset = "0x114EB98", VA = "0x114EB98")]
		private void HandleModuleSwitch(VrSdk sdk)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x114ECA4", Offset = "0x114ECA4", VA = "0x114ECA4")]
		public GraphicsRaycasterSwitcher()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class AdSettings : MonoBehaviour
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _showAdsToggle;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _allowPersonalizedAdsToggle;

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x114ECCC", Offset = "0x114ECCC", VA = "0x114ECCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x114EFDC", Offset = "0x114EFDC", VA = "0x114EFDC")]
		public AdSettings()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class BhapticsSettings : MonoBehaviour
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _enableToggle;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _verticalListTransform;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BHapticsElement _template;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<BHapticsElement> _elements;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x114F114", Offset = "0x114F114", VA = "0x114F114")]
		private void UpdateDeviceElements()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x114F34C", Offset = "0x114F34C", VA = "0x114F34C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x114F61C", Offset = "0x114F61C", VA = "0x114F61C")]
		private void OnBhapticsRefresh()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x114F500", Offset = "0x114F500", VA = "0x114F500")]
		private void SetBhapticsEnabled()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x114F590", Offset = "0x114F590", VA = "0x114F590")]
		private void SetBhapticsDisabled()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x114F620", Offset = "0x114F620", VA = "0x114F620")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x114F698", Offset = "0x114F698", VA = "0x114F698")]
		private void DebugLogDevices()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x114FAE0", Offset = "0x114FAE0", VA = "0x114FAE0")]
		private void OnToggleChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x114FBE8", Offset = "0x114FBE8", VA = "0x114FBE8")]
		public BhapticsSettings()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class LanguageSettings : MonoBehaviour
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Dropdown _languageDropDown;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TMP_Dropdown.OptionData> _options;

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x114FC74", Offset = "0x114FC74", VA = "0x114FC74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x114FE08", Offset = "0x114FE08", VA = "0x114FE08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x114FFB4", Offset = "0x114FFB4", VA = "0x114FFB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x114FFD8", Offset = "0x114FFD8", VA = "0x114FFD8")]
		private void DropdownValueChanged(int index)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1150058", Offset = "0x1150058", VA = "0x1150058")]
		public LanguageSettings()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class MapSelectList : MonoBehaviour
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiVoteMap Template;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UiVoteMap> Elements;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _multiToggle;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string LastSelectedMap;

		[Token(Token = "0x1400001D")]
		public event Action<string, int> MapSelected
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x11500E0", Offset = "0x11500E0", VA = "0x11500E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x1150190", Offset = "0x1150190", VA = "0x1150190")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1150240", Offset = "0x1150240", VA = "0x1150240")]
		public void Init(string[] maps)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1150634", Offset = "0x1150634", VA = "0x1150634")]
		public void HighLightSelection(int index)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x11507F8", Offset = "0x11507F8", VA = "0x11507F8")]
		private void ToggleHighlight(int index)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1150888", Offset = "0x1150888", VA = "0x1150888")]
		public void OnMapButton(int index)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1150578", Offset = "0x1150578", VA = "0x1150578")]
		public void SetMap(int index, string mapName)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1150CD0", Offset = "0x1150CD0", VA = "0x1150CD0")]
		public MapSelectList()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class RaycastTarget : Graphic
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1150CF8", Offset = "0x1150CF8", VA = "0x1150CF8", Slot = "29")]
		public override void SetMaterialDirty()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1150CFC", Offset = "0x1150CFC", VA = "0x1150CFC", Slot = "28")]
		public override void SetVerticesDirty()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1150D00", Offset = "0x1150D00", VA = "0x1150D00", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1150D18", Offset = "0x1150D18", VA = "0x1150D18")]
		public RaycastTarget()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class ReconnectCanvas : MonoBehaviour
	{
		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReconnectAfterServerReboot _reconnectController;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _statusText;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _timerText;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1150D70", Offset = "0x1150D70", VA = "0x1150D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1150DC8", Offset = "0x1150DC8", VA = "0x1150DC8")]
		public ReconnectCanvas()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class SkewedImage : Image
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected float _skewX;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		protected float _skewY;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private bool _useSkewedRectRaycastTarget;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Rect ExtendedRect;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Vector2[] SkewedRectVertices;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2 _local;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1150DD0", Offset = "0x1150DD0", VA = "0x1150DD0", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1150E08", Offset = "0x1150E08", VA = "0x1150E08", Slot = "89")]
		protected virtual void SkewVertices(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x11512A0", Offset = "0x11512A0", VA = "0x11512A0", Slot = "90")]
		protected virtual Vector2 GetSkewedRectPos(Vector2 rectVert, Rect rect, float skewX, float skewY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1147FF4", Offset = "0x1147FF4", VA = "0x1147FF4")]
		public void GetWorldCorners(Vector3[] fourCornersArray)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x115136C", Offset = "0x115136C", VA = "0x115136C")]
		private void GetLocalCorners(Vector3[] fourCornersArray)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x11514C8", Offset = "0x11514C8", VA = "0x11514C8")]
		private float AreaSign(Vector2 p1, Vector2 p2, Vector2 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x11514E8", Offset = "0x11514E8", VA = "0x11514E8")]
		private bool PointInTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x115157C", Offset = "0x115157C", VA = "0x115157C", Slot = "88")]
		public override bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x115171C", Offset = "0x115171C", VA = "0x115171C")]
		public SkewedImage()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class SkewedImageOld : SkewedImage
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x11517B4", Offset = "0x11517B4", VA = "0x11517B4", Slot = "89")]
		protected override void SkewVertices(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1151BC8", Offset = "0x1151BC8", VA = "0x1151BC8", Slot = "90")]
		protected override Vector2 GetSkewedRectPos(Vector2 rectVert, Rect rect, float skewX, float skewY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1151C94", Offset = "0x1151C94", VA = "0x1151C94")]
		public SkewedImageOld()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class SkewedTMProUGUI : TextMeshProUGUI
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		[SerializeField]
		private float _skewX;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79C")]
		[SerializeField]
		private float _skewY;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1151C98", Offset = "0x1151C98", VA = "0x1151C98", Slot = "142")]
		protected override void GenerateTextMesh()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1151F48", Offset = "0x1151F48", VA = "0x1151F48")]
		public SkewedTMProUGUI()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class SkewedVerticalLayout : MonoBehaviour
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _skew;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _spacing;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _topMargin;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _leftMargin;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _skewParentOffset;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _roundingError;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _leftAligned;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1151FA0", Offset = "0x1151FA0", VA = "0x1151FA0")]
		public void RebuildLayout()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x115232C", Offset = "0x115232C", VA = "0x115232C")]
		public SkewedVerticalLayout()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class UiAdmin : MonoBehaviour
	{
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1152334", Offset = "0x1152334", VA = "0x1152334")]
		public UiAdmin()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class UiAssignControllerTransform : MonoBehaviour
	{
		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRGazePointer Pointer;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInputModule InputModule;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x115233C", Offset = "0x115233C", VA = "0x115233C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1152490", Offset = "0x1152490", VA = "0x1152490")]
		public UiAssignControllerTransform()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[DisallowMultipleComponent]
	[RequireComponent(typeof(Button))]
	public class UIButtonAudio : MonoBehaviour
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button _button;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1152498", Offset = "0x1152498", VA = "0x1152498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1152560", Offset = "0x1152560", VA = "0x1152560")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x11525F4", Offset = "0x11525F4", VA = "0x11525F4")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1152640", Offset = "0x1152640", VA = "0x1152640")]
		public UIButtonAudio()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class UiCloseDropDown : MonoBehaviour
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform DropdownRect;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Dropdown Dropdown;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _parentRect;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1152648", Offset = "0x1152648", VA = "0x1152648")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1152798", Offset = "0x1152798", VA = "0x1152798")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1152858", Offset = "0x1152858", VA = "0x1152858")]
		public UiCloseDropDown()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class UiCreateRoom : MonoBehaviour
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("_mapSelectList")]
		public MapSelectList MapSelectList;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FormerlySerializedAs("_modsUi")]
		public UiMods ModsUi;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UiSlider BotCountSlider;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle BotDiffEasy;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle BotDiffNormal;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle BotDiffHard;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BotDifficulty _botDifficulty;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _adminButtons;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UiMapPreview PlayerMapPreview;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _adminStartButton;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Text _adminStartText;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_Text _serverNameText;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1152860", Offset = "0x1152860", VA = "0x1152860")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1153308", Offset = "0x1153308", VA = "0x1153308")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1153460", Offset = "0x1153460", VA = "0x1153460")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1153504", Offset = "0x1153504", VA = "0x1153504")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x11537A0", Offset = "0x11537A0", VA = "0x11537A0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x11536CC", Offset = "0x11536CC", VA = "0x11536CC")]
		private void NetPlayerDataOnPlayerCountUpdatedEvent(NetPlayerData arg1, int playerCount)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1153260", Offset = "0x1153260", VA = "0x1153260")]
		private void SetUIState(bool isAdmin)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1153988", Offset = "0x1153988", VA = "0x1153988")]
		private void NetPlayerDataOnAdminChangedEvent(bool isAdmin, string adminApiId)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1153990", Offset = "0x1153990", VA = "0x1153990")]
		private void MapSelectListOnMapSelected(string obj, int index)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1153A5C", Offset = "0x1153A5C", VA = "0x1153A5C")]
		public void SetBotCount(int count)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1153B38", Offset = "0x1153B38", VA = "0x1153B38")]
		public void SetBotDifficulty(BotDifficulty botDifficulty)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1153BA4", Offset = "0x1153BA4", VA = "0x1153BA4")]
		private void OnSetEasy(bool isOn)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1153CC8", Offset = "0x1153CC8", VA = "0x1153CC8")]
		private void OnSetNormal(bool isOn)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1153D00", Offset = "0x1153D00", VA = "0x1153D00")]
		private void OnSetHard(bool isOn)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1153D38", Offset = "0x1153D38", VA = "0x1153D38")]
		private void BotCountSliderOnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1153BD8", Offset = "0x1153BD8", VA = "0x1153BD8")]
		private void SendMatchSettings()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1153DA8", Offset = "0x1153DA8", VA = "0x1153DA8")]
		public void StartMatch()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1153E70", Offset = "0x1153E70", VA = "0x1153E70")]
		private void OnModsValueChanged(int index, bool value)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1153F5C", Offset = "0x1153F5C", VA = "0x1153F5C")]
		public void SetGameName(string value)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1153F80", Offset = "0x1153F80", VA = "0x1153F80")]
		public UiCreateRoom()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class UIDebugVariable : MonoBehaviour
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Image;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Label;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI Value;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1153F88", Offset = "0x1153F88", VA = "0x1153F88")]
		public void SetValue(string value, bool error, bool warning = false)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x115402C", Offset = "0x115402C", VA = "0x115402C")]
		public void SetValue(string value)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x115408C", Offset = "0x115408C", VA = "0x115408C")]
		public UIDebugVariable()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class UiDspDebug : MonoBehaviour
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle PhotonMicrophone;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle AEC;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle NoiseSuppresion;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle AGC;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle DebugEcho;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle VAD;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle ManualVAD;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text Text1;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text Text2;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text Text3;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Slider ThresholdSlider;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text ThresholdText;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _readOnly;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1154094", Offset = "0x1154094", VA = "0x1154094")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x11540B4", Offset = "0x11540B4", VA = "0x11540B4")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1154684", Offset = "0x1154684", VA = "0x1154684")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1154738", Offset = "0x1154738", VA = "0x1154738")]
		public void OnTogglePhotonMicrophone()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x115473C", Offset = "0x115473C", VA = "0x115473C")]
		public void OnRestartRecorder()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1154740", Offset = "0x1154740", VA = "0x1154740")]
		public void OnToggleDebugEcho()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1154744", Offset = "0x1154744", VA = "0x1154744")]
		public void OnToggleAEC()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1154748", Offset = "0x1154748", VA = "0x1154748")]
		public void OnToggleNoiseSuppresion()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x115474C", Offset = "0x115474C", VA = "0x115474C")]
		public void OnToggleAGC()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1154750", Offset = "0x1154750", VA = "0x1154750")]
		public void OnToggleVAD()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1154790", Offset = "0x1154790", VA = "0x1154790")]
		public void OnToggleManualVAD()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x11547D0", Offset = "0x11547D0", VA = "0x11547D0")]
		public void OnUpdateThresholdSlider()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x11547D4", Offset = "0x11547D4", VA = "0x11547D4")]
		public void OnCalibrate()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x11547D8", Offset = "0x11547D8", VA = "0x11547D8")]
		public UiDspDebug()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class UiFpsCounter : MonoBehaviour
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro _fpsText;

		[Token(Token = "0x4000BE9")]
		private const int BufferSize = 45;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _bufferIndex;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] _buffer;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _cashed;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x11547E0", Offset = "0x11547E0", VA = "0x11547E0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1154904", Offset = "0x1154904", VA = "0x1154904")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x11548DC", Offset = "0x11548DC", VA = "0x11548DC")]
		private void SettingsOnShowPingChangedEvent(bool showPing)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x11549CC", Offset = "0x11549CC", VA = "0x11549CC")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1154BDC", Offset = "0x1154BDC", VA = "0x1154BDC")]
		public UiFpsCounter()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class UiHoverHaptic : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1154C40", Offset = "0x1154C40", VA = "0x1154C40", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1154D9C", Offset = "0x1154D9C", VA = "0x1154D9C", Slot = "6")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1154EF8", Offset = "0x1154EF8", VA = "0x1154EF8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1155054", Offset = "0x1155054", VA = "0x1155054")]
		public UiHoverHaptic()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected EventSystem EventSystem;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<AnimatedView> _views;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _numberOfAnimationsPlaying;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<EscapeAction> _escapeStack;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool BlockAnimInteractionToggle;

		[Token(Token = "0x17000152")]
		private int NumberOfAnimations
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x115505C", Offset = "0x115505C", VA = "0x115505C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x1155064", Offset = "0x1155064", VA = "0x1155064")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public Canvas MainCanvas
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x1155110", Offset = "0x1155110", VA = "0x1155110")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x1155118", Offset = "0x1155118", VA = "0x1155118")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1155120", Offset = "0x1155120", VA = "0x1155120", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1155280", Offset = "0x1155280", VA = "0x1155280", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1155438", Offset = "0x1155438", VA = "0x1155438", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x115543C", Offset = "0x115543C", VA = "0x115543C")]
		private void CallEscapeStack()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x11554CC", Offset = "0x11554CC", VA = "0x11554CC")]
		public void AddToEscapeStack(EscapeAction escapeAction, bool allowMultipleFromType = true)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1155664", Offset = "0x1155664", VA = "0x1155664")]
		public void RemoveLastFromEscapeStack(Type type)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1155128", Offset = "0x1155128", VA = "0x1155128")]
		private void Subscribe(bool subscribe)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1155790", Offset = "0x1155790", VA = "0x1155790")]
		private void AnimationStarted(AnimatedView sender, AnimatedView.AnimationStartedArgs startedArgs)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1155838", Offset = "0x1155838", VA = "0x1155838")]
		private void AnimatedEnded(AnimatedView sender, AnimatedView.AnimationEndedArgs endedArgs)
		{
		}

		[Token(Token = "0x6000B35")]
		public T GetView<T>() where T : AnimatedView
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		public T ShowView<T>(bool useTransition = true, [Optional] Action callBack) where T : AnimatedView
		{
			return null;
		}

		[Token(Token = "0x6000B37")]
		public void HideView<T>(bool useTransitions = true, [Optional] Action callback) where T : AnimatedView
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x11558D4", Offset = "0x11558D4", VA = "0x11558D4")]
		private List<AnimatedView> GetAllActiveViews()
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1155A40", Offset = "0x1155A40", VA = "0x1155A40")]
		public void HideAllActiveView()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1155AE8", Offset = "0x1155AE8", VA = "0x1155AE8")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class UiMapPreview : MonoBehaviour
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _mapImage;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _gamemodeText;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _mapNameText;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1155C58", Offset = "0x1155C58", VA = "0x1155C58")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1155C5C", Offset = "0x1155C5C", VA = "0x1155C5C")]
		private void SetEmpty()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1155D10", Offset = "0x1155D10", VA = "0x1155D10")]
		public void SetMap(string mapName)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1155E98", Offset = "0x1155E98", VA = "0x1155E98")]
		public UiMapPreview()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class UiMicrophone : MonoBehaviour
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer _microphoneImage;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _positionOffset;

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1155EA0", Offset = "0x1155EA0", VA = "0x1155EA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1155FA0", Offset = "0x1155FA0", VA = "0x1155FA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1156138", Offset = "0x1156138", VA = "0x1156138")]
		public UiMicrophone()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class UiMods : MonoBehaviour
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Template;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Toggle> _toggleElements;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<TMP_Text> _textElements;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<int, bool> ValueChangedCallback;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mutators[] _mutatorPool;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MatchTypes MatchType;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1152B1C", Offset = "0x1152B1C", VA = "0x1152B1C")]
		public void Init(Mutators[] pool, bool setOn = true)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x115627C", Offset = "0x115627C", VA = "0x115627C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1156320", Offset = "0x1156320", VA = "0x1156320")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x11564A8", Offset = "0x11564A8", VA = "0x11564A8")]
		public void OnButton(int mutator, int index, bool value)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1156564", Offset = "0x1156564", VA = "0x1156564")]
		public void UpdateMapMutatorUI(List<Mutators> mapMutators, MatchTypes matchTypes)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x11569BC", Offset = "0x11569BC", VA = "0x11569BC")]
		private void SetToggle(int index, bool value)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x11566E4", Offset = "0x11566E4", VA = "0x11566E4")]
		private Dictionary<Mutators, bool> SetEnabledMutators(List<Mutators> mapMutators)
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1156AD0", Offset = "0x1156AD0", VA = "0x1156AD0")]
		public void SetToggleWithoutNotify(int index, bool value)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1156148", Offset = "0x1156148", VA = "0x1156148")]
		public void UpdateDisabled()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x11538E0", Offset = "0x11538E0", VA = "0x11538E0")]
		public void SetActiveVisible()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1153844", Offset = "0x1153844", VA = "0x1153844")]
		public void SetAllVisible()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1156B6C", Offset = "0x1156B6C", VA = "0x1156B6C")]
		public UiMods()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class UiModsIngame : MonoBehaviour
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Panel;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Template;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _elements;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text _label;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _sync;

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1156B9C", Offset = "0x1156B9C", VA = "0x1156B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1156C50", Offset = "0x1156C50", VA = "0x1156C50")]
		private void RefreshIfNeeded()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1156D48", Offset = "0x1156D48", VA = "0x1156D48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1156D4C", Offset = "0x1156D4C", VA = "0x1156D4C")]
		public UiModsIngame()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class UiMusicPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image PlayImage;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image PauseImage;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI TrackName;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _trackNameCached;

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1156D5C", Offset = "0x1156D5C", VA = "0x1156D5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1156DE0", Offset = "0x1156DE0", VA = "0x1156DE0")]
		public void OnNextTrackButton()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1156E90", Offset = "0x1156E90", VA = "0x1156E90")]
		public void OnPreviousTrackButton()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1156F40", Offset = "0x1156F40", VA = "0x1156F40")]
		public void OnPlayOrPauseButton()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1156FF0", Offset = "0x1156FF0", VA = "0x1156FF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x115710C", Offset = "0x115710C", VA = "0x115710C")]
		public UiMusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class UiNetworking : MonoBehaviour
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro _pingText;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _cachedPing;

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1157114", Offset = "0x1157114", VA = "0x1157114")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1157238", Offset = "0x1157238", VA = "0x1157238")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1157210", Offset = "0x1157210", VA = "0x1157210")]
		private void SettingsOnShowPingChangedEvent(bool showPing)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1157300", Offset = "0x1157300", VA = "0x1157300")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1157564", Offset = "0x1157564", VA = "0x1157564")]
		public UiNetworking()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class UiPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image TeamRedBackground;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image TeamBlueBackground;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color TeamRedColor;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color TeamBlueColor;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle Toggle;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputField HardwareName;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InputField PlayerName;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button SwapTeam;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text HeadsetBattery;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text LeftControllerBattery;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text RightControllerBattery;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text Latency;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Text Debug;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlayerObject Player;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x115756C", Offset = "0x115756C", VA = "0x115756C")]
		public void OnSwapTeamButton()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1157584", Offset = "0x1157584", VA = "0x1157584")]
		public void OnDeviceNameChanged()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x11575B8", Offset = "0x11575B8", VA = "0x11575B8")]
		public void OnDeviceNameChangeEnd()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x11575CC", Offset = "0x11575CC", VA = "0x11575CC")]
		public void OnParticipateChanged()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x11575D0", Offset = "0x11575D0", VA = "0x11575D0")]
		public UiPlayer()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class UiRegions : MonoBehaviour
	{
		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> _regions;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> _regionsText;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Dropdown _dropdown;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _index;

		[Token(Token = "0x17000154")]
		public string CurrentSelected
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x11575D8", Offset = "0x11575D8", VA = "0x11575D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x11575E0", Offset = "0x11575E0", VA = "0x11575E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<string> SelectionChanged
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x11575E8", Offset = "0x11575E8", VA = "0x11575E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x1157698", Offset = "0x1157698", VA = "0x1157698")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1157748", Offset = "0x1157748", VA = "0x1157748")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x11577F0", Offset = "0x11577F0", VA = "0x11577F0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1157894", Offset = "0x1157894", VA = "0x1157894")]
		private void ServerBrowserOnCustomGameRegionsUpdatedEvent(Dictionary<string, ServerBrowser.RegionInfo> obj)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x115789C", Offset = "0x115789C", VA = "0x115789C")]
		public void Refresh(bool reset = false)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1157E6C", Offset = "0x1157E6C", VA = "0x1157E6C")]
		private void DropdownChanged(int index)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1157F00", Offset = "0x1157F00", VA = "0x1157F00")]
		public void Close()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1157F1C", Offset = "0x1157F1C", VA = "0x1157F1C")]
		public UiRegions()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class UiServerBrowserFilters : MonoBehaviour
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ServerBrowser _serverBrowser;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Server Toggles")]
		[SerializeField]
		private Toggle _publicServerToggle;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _specialServerToggle;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _customServerToggle;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _passwordToggle;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _levelToggle;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _pingToggle;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _joinableToggle;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _emptyServerToggle;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _spaceServerToggle;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _fullServerToggle;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("GameMode Toggles")]
		[SerializeField]
		private RectTransform _gamemodeTransform;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle _togglePrefab;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform _gamemodeRoot;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Toggle> _gamemodeToggles;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<int> _gamemodeFlags;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1157FA4", Offset = "0x1157FA4", VA = "0x1157FA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x11588B4", Offset = "0x11588B4", VA = "0x11588B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1158B70", Offset = "0x1158B70", VA = "0x1158B70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1158728", Offset = "0x1158728", VA = "0x1158728")]
		private void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1158B74", Offset = "0x1158B74", VA = "0x1158B74")]
		private void SetServerFilter(Toggle filterToggle, SessionInfoFlags flag, bool setOn)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1158C5C", Offset = "0x1158C5C", VA = "0x1158C5C")]
		private void SetAccessFilter(Toggle filterToggle, SessionInfoFlags flag, bool setOn)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1158CF4", Offset = "0x1158CF4", VA = "0x1158CF4")]
		private void SetCapacityFilter(Toggle filterToggle, SessionSpaceFilters flag, bool setOn)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1158DDC", Offset = "0x1158DDC", VA = "0x1158DDC")]
		private void SetStatusFilter(Toggle filterToggle, SessionStatusFilters flag, bool setOn)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1158E74", Offset = "0x1158E74", VA = "0x1158E74")]
		private void SetGamemodeFilter(Toggle filterToggle, int flag, bool setOn)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1158FC0", Offset = "0x1158FC0", VA = "0x1158FC0")]
		public UiServerBrowserFilters()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class UiServerBrowserSorts : MonoBehaviour
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ServerBrowser _serverBrowser;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _togglePing;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _toggleLevel;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _togglePlayersAsc;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _togglePlayersDesc;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _toggleNameAsc;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _toggleNameDesc;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x115916C", Offset = "0x115916C", VA = "0x115916C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1159468", Offset = "0x1159468", VA = "0x1159468")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x11595AC", Offset = "0x11595AC", VA = "0x11595AC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x11593C8", Offset = "0x11593C8", VA = "0x11593C8")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x11595B0", Offset = "0x11595B0", VA = "0x11595B0")]
		public UiServerBrowserSorts()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class UiSlider : MonoBehaviour
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text PreviewText;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider Slider;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ForceEven;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _suffix;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _min;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _max;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _step;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _prevValue;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _propagateChangeEvent;

		[Token(Token = "0x17000155")]
		public int Value
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x1153D3C", Offset = "0x1153D3C", VA = "0x1153D3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<int> ValueChanged
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x11531B0", Offset = "0x11531B0", VA = "0x11531B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x1159790", Offset = "0x1159790", VA = "0x1159790")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x11530F0", Offset = "0x11530F0", VA = "0x11530F0")]
		public void SetRange(int min, int max, int step, string suffix, int startingValue)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x11598D4", Offset = "0x11598D4", VA = "0x11598D4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1159840", Offset = "0x1159840", VA = "0x1159840")]
		private void OnValueChangedInternal()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x11599A4", Offset = "0x11599A4", VA = "0x11599A4")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x11599CC", Offset = "0x11599CC", VA = "0x11599CC")]
		public void OnValueConfirmed()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1153A74", Offset = "0x1153A74", VA = "0x1153A74")]
		public void SetValue(int value)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1159AA0", Offset = "0x1159AA0", VA = "0x1159AA0")]
		public UiSlider()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class UIVoicePanel : MonoBehaviour
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite MicrophoneEnabledSprite;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite MicrophoneDisabledSprite;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image MicrophoneImage;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider VoiceLevelSlider;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _teamButton;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _teamIcon;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _teamAccent;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _globalButton;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _globalIcon;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _globalAccent;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _noMicLabel;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Space]
		private Color[] _statusColors;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Sprite[] _statusSprites;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Space]
		public GameObject DebugDSP;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject TeamChatPanel;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject MicrophonePanel;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public CanvasGroup MicrophoneCanvasGroup;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VoiceChatState _previousVoiceChatState;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VoiceManager.ConnectionState[] _states;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1159AB4", Offset = "0x1159AB4", VA = "0x1159AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1159B3C", Offset = "0x1159B3C", VA = "0x1159B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1159CA0", Offset = "0x1159CA0", VA = "0x1159CA0")]
		public void OnToggleButton()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1159DE8", Offset = "0x1159DE8", VA = "0x1159DE8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x115A1C0", Offset = "0x115A1C0", VA = "0x115A1C0")]
		public void OnToggleTeamChat()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x115A2F8", Offset = "0x115A2F8", VA = "0x115A2F8")]
		public void OnToggleGlobalChat()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1159B40", Offset = "0x1159B40", VA = "0x1159B40")]
		private void UpdateVoiceChatModeButton()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x115A430", Offset = "0x115A430", VA = "0x115A430")]
		private void UpdateVisuals(VoiceManager.ConnectionState state, Button button, Image icon, Image accent)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x115A4EC", Offset = "0x115A4EC", VA = "0x115A4EC")]
		public UIVoicePanel()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class UiVoteMap : MonoBehaviour
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Image;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Name;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI Mode;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI Votes;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI Random;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image VotesBackground;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image SelectionBorder;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image ResultBorder;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image SelectionBackground;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image RegularBackground;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string MapName;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RectMask2D ImageMask;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UiMods ModsUi;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Mutators> _mutators;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MatchTypes _matchType;

		[Token(Token = "0x17000156")]
		public bool IsSelected
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x115A550", Offset = "0x115A550", VA = "0x115A550")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x115A558", Offset = "0x115A558", VA = "0x115A558")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x11506D0", Offset = "0x11506D0", VA = "0x11506D0")]
		public void HighLight(bool isSelected)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x115A564", Offset = "0x115A564", VA = "0x115A564")]
		private void GetGamemode()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x115A5BC", Offset = "0x115A5BC", VA = "0x115A5BC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x115A660", Offset = "0x115A660", VA = "0x115A660")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x115A88C", Offset = "0x115A88C", VA = "0x115A88C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x115A930", Offset = "0x115A930", VA = "0x115A930")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1150964", Offset = "0x1150964", VA = "0x1150964")]
		public void SetMap(string mapName)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1150BFC", Offset = "0x1150BFC", VA = "0x1150BFC")]
		public void SetVotes(int votes)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x115A6E0", Offset = "0x115A6E0", VA = "0x115A6E0")]
		private void SetMutators()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x115A9DC", Offset = "0x115A9DC", VA = "0x115A9DC")]
		public UiVoteMap()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class UiVoting : MonoBehaviour
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas Canvas;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiVoteMap Template;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UiVoteMap> Elements;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI Title;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI Countdown;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VotingGrid _grid;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _allowInput;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _myVote;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _layoutDirty;

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x115BA90", Offset = "0x115BA90", VA = "0x115BA90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x115BE24", Offset = "0x115BE24", VA = "0x115BE24")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x115BD84", Offset = "0x115BD84", VA = "0x115BD84")]
		private void HighLightSelection(int index)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x115C070", Offset = "0x115C070", VA = "0x115C070")]
		private string GetMapNameForAnalytics(int index)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x115C188", Offset = "0x115C188", VA = "0x115C188")]
		public void OnMapButton(int index)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x115C1F0", Offset = "0x115C1F0", VA = "0x115C1F0")]
		public void SetMap(int index, string mapName)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x115C2D4", Offset = "0x115C2D4", VA = "0x115C2D4")]
		public void SetVotes(int index, int votes)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x115C374", Offset = "0x115C374", VA = "0x115C374")]
		public void SetTimer(int value)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x115C424", Offset = "0x115C424", VA = "0x115C424")]
		public void SetNextMap(int index)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x115C628", Offset = "0x115C628", VA = "0x115C628")]
		public void SetMessage(string message)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x115C64C", Offset = "0x115C64C", VA = "0x115C64C")]
		public void SetHighlight(bool stateHighlightedMap)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x115C710", Offset = "0x115C710", VA = "0x115C710")]
		public UiVoting()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class VersionText : MonoBehaviour
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x115C740", Offset = "0x115C740", VA = "0x115C740")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x115C7B4", Offset = "0x115C7B4", VA = "0x115C7B4")]
		public VersionText()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class VotingGrid : MonoBehaviour
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 _cellSize;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 _spacing;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _columnCount;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool HasHighlightedMap;

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x115BE54", Offset = "0x115BE54", VA = "0x115BE54")]
		[ContextMenu("UpdateLayout")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x115C7BC", Offset = "0x115C7BC", VA = "0x115C7BC")]
		public VotingGrid()
		{
		}
	}
}
namespace HyperDash.UI.ViewAnimations
{
	[Token(Token = "0x2000230")]
	public class FadeAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x115C7C4", Offset = "0x115C7C4", VA = "0x115C7C4", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x115C898", Offset = "0x115C898", VA = "0x115C898", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x115C96C", Offset = "0x115C96C", VA = "0x115C96C")]
		public FadeAnimation()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class FlowerViewAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Top part to animate. Leave empty if not needed.")]
		[SerializeField]
		private RectTransform _top;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Bottom part to animate. Leave empty if not needed.")]
		[SerializeField]
		private RectTransform _bottom;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("Side left part to animate. Leave empty if not needed.")]
		private RectTransform _sideLeft;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Side right part to animate. Leave empty if not needed.")]
		[SerializeField]
		private RectTransform _sideRight;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _initialBottomValue;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _initialTopValue;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x115C988", Offset = "0x115C988", VA = "0x115C988")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x115CA44", Offset = "0x115CA44", VA = "0x115CA44", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x115CD3C", Offset = "0x115CD3C", VA = "0x115CD3C", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x115D034", Offset = "0x115D034", VA = "0x115D034")]
		public FlowerViewAnimation()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class MessageBoxAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _backGround;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _objectToScale;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color _startColor;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x115D03C", Offset = "0x115D03C", VA = "0x115D03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x115D070", Offset = "0x115D070", VA = "0x115D070", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x115D1A8", Offset = "0x115D1A8", VA = "0x115D1A8", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x115D2E0", Offset = "0x115D2E0", VA = "0x115D2E0")]
		public MessageBoxAnimation()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class PunchScaleAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _transform;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _maxScale;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x115D2E8", Offset = "0x115D2E8", VA = "0x115D2E8", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x115D3F0", Offset = "0x115D3F0", VA = "0x115D3F0", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x115D4FC", Offset = "0x115D4FC", VA = "0x115D4FC")]
		public PunchScaleAnimation()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class SlideInViewAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _rect;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x115D504", Offset = "0x115D504", VA = "0x115D504")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x115D5DC", Offset = "0x115D5DC", VA = "0x115D5DC", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x115D6BC", Offset = "0x115D6BC", VA = "0x115D6BC", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x115D79C", Offset = "0x115D79C", VA = "0x115D79C")]
		public SlideInViewAnimation()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class SlideVerticalAnimation : ViewAnimation
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _rect;

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x115D7A4", Offset = "0x115D7A4", VA = "0x115D7A4", Slot = "4")]
		protected override void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x115D884", Offset = "0x115D884", VA = "0x115D884", Slot = "5")]
		protected override void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x115D964", Offset = "0x115D964", VA = "0x115D964")]
		public SlideVerticalAnimation()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class ViewAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent _additionalShow;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent _additionalHide;

		[Token(Token = "0x4000C8E")]
		public const float ShowAnimationDuration = 0.2f;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x115D96C", Offset = "0x115D96C", VA = "0x115D96C")]
		public void Show([Optional] TweenCallback callback)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x115D998", Offset = "0x115D998", VA = "0x115D998")]
		public void Hide([Optional] TweenCallback callback)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x115D9C4", Offset = "0x115D9C4", VA = "0x115D9C4", Slot = "4")]
		protected virtual void TransitionIn([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x115D9DC", Offset = "0x115D9DC", VA = "0x115D9DC", Slot = "5")]
		protected virtual void TransitionOut([Optional] TweenCallback doneCallback)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x115C980", Offset = "0x115C980", VA = "0x115C980")]
		public ViewAnimation()
		{
		}
	}
}
namespace HyperDash.UI.SpectatorServerBrowser
{
	[Token(Token = "0x2000237")]
	public class SpectatorServerBrowserUIManager : UIManager
	{
		[Token(Token = "0x2000238")]
		[CompilerGenerated]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectatorServerBrowserUIManager <>4__this;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE5")]
				[Address(RVA = "0x115DBA8", Offset = "0x115DBA8", VA = "0x115DBA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE7")]
				[Address(RVA = "0x115DBF0", Offset = "0x115DBF0", VA = "0x115DBF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x115DAD8", Offset = "0x115DAD8", VA = "0x115DAD8")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x115DB08", Offset = "0x115DB08", VA = "0x115DB08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x115DB0C", Offset = "0x115DB0C", VA = "0x115DB0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x115DBB0", Offset = "0x115DBB0", VA = "0x115DBB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x115D9F4", Offset = "0x115D9F4", VA = "0x115D9F4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x115DA64", Offset = "0x115DA64", VA = "0x115DA64")]
		[IteratorStateMachine(typeof(<Start>d__1))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x115DB00", Offset = "0x115DB00", VA = "0x115DB00")]
		public SpectatorServerBrowserUIManager()
		{
		}
	}
}
namespace HyperDash.UI.Spectator
{
	[Token(Token = "0x2000239")]
	public class PlayerSpectatorElement : MonoBehaviour
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _emptyPlayerBackground;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _emptyPlayerBackgroundHp;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _panel;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _backround;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _hpBar;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _playerName;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _kills;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _deaths;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _currentKills;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _currentDeaths;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentHp;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _hpPercent;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _teamColor;

		[Token(Token = "0x17000159")]
		public NetCharacterBehaviour Character
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x115DBF8", Offset = "0x115DBF8", VA = "0x115DBF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x115DC00", Offset = "0x115DC00", VA = "0x115DC00")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x115DC08", Offset = "0x115DC08", VA = "0x115DC08")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x115DC3C", Offset = "0x115DC3C", VA = "0x115DC3C")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x115DCDC", Offset = "0x115DCDC", VA = "0x115DCDC")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x115DD60", Offset = "0x115DD60", VA = "0x115DD60")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x115E35C", Offset = "0x115E35C", VA = "0x115E35C")]
		public void SetPlayer(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x115E2A8", Offset = "0x115E2A8", VA = "0x115E2A8")]
		private void UpdateBackgroundSaturation()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x115E0D0", Offset = "0x115E0D0", VA = "0x115E0D0")]
		private void UpdateEmptyBackgroundAlpha()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x115E6A0", Offset = "0x115E6A0", VA = "0x115E6A0")]
		public PlayerSpectatorElement()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class SpectatorCanvas : MonoBehaviour
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _redTeamColor;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _blueTeamColor;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerSpectatorElement[] _redTeamElements;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerSpectatorElement[] _blueTeamElements;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _spectatedPlayerNameText;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpectatorFollowPlayerView _followingView;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _dominationDisplay;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _payloadDisplay;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _ctfDisplay;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _mainPanel;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SpectatorModeView _spectatorModeView;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isHidden;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<PlayerSpectatorElement> _allElements;

		[Token(Token = "0x1700015A")]
		public RectTransform MainPanel
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x115E6B0", Offset = "0x115E6B0", VA = "0x115E6B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x115E6B8", Offset = "0x115E6B8", VA = "0x115E6B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x115EAC8", Offset = "0x115EAC8", VA = "0x115EAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x115EC58", Offset = "0x115EC58", VA = "0x115EC58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x115EE20", Offset = "0x115EE20", VA = "0x115EE20")]
		private void OnStartSpectator(SpectatorController sender)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x115EE44", Offset = "0x115EE44", VA = "0x115EE44")]
		private void OnStopSpectator(SpectatorController sender)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x115EE68", Offset = "0x115EE68", VA = "0x115EE68")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x115F3CC", Offset = "0x115F3CC", VA = "0x115F3CC")]
		private void UpdatePlayerElements()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x115EBE0", Offset = "0x115EBE0", VA = "0x115EBE0")]
		public void SetPlayer(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x115E900", Offset = "0x115E900", VA = "0x115E900")]
		public void Resize(Rect rect, float duration)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x115F4B8", Offset = "0x115F4B8", VA = "0x115F4B8")]
		private void OnSpectatorModeChanged(SpectatorController sender, SpectatorMode mode)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x115F650", Offset = "0x115F650", VA = "0x115F650")]
		public SpectatorCanvas()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class SpectatorFollowPlayerView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x115F7A8", Offset = "0x115F7A8", VA = "0x115F7A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x115F7CC", Offset = "0x115F7CC", VA = "0x115F7CC", Slot = "7")]
		public override void Show([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x115F9AC", Offset = "0x115F9AC", VA = "0x115F9AC", Slot = "8")]
		public override void Hide([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x115FB8C", Offset = "0x115FB8C", VA = "0x115FB8C")]
		public SpectatorFollowPlayerView()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class SpectatorModeView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _modeNameText;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x115F62C", Offset = "0x115F62C", VA = "0x115F62C")]
		public void SetModeName(string modeName)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x115FC64", Offset = "0x115FC64", VA = "0x115FC64", Slot = "4")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x115FD5C", Offset = "0x115FD5C", VA = "0x115FD5C", Slot = "8")]
		public override void Hide([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x115FF10", Offset = "0x115FF10", VA = "0x115FF10")]
		public SpectatorModeView()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class SpectatorPayloadProgressDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _container;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _marker;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _checkpointIcon;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _speedImage;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite[] _speedSprites;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _visibleSpeed;

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x115FF94", Offset = "0x115FF94", VA = "0x115FF94")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1160174", Offset = "0x1160174", VA = "0x1160174")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x115FFC0", Offset = "0x115FFC0", VA = "0x115FFC0")]
		public void SetCheckPoint(float percent)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1160038", Offset = "0x1160038", VA = "0x1160038")]
		public void SetMarkerPercent(float percent)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x11600B0", Offset = "0x11600B0", VA = "0x11600B0")]
		private void SetSpeed(int speed)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x116022C", Offset = "0x116022C", VA = "0x116022C")]
		public SpectatorPayloadProgressDisplay()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class NewBehaviourScript : MonoBehaviour
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x116023C", Offset = "0x116023C", VA = "0x116023C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1160240", Offset = "0x1160240", VA = "0x1160240")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1160244", Offset = "0x1160244", VA = "0x1160244")]
		public NewBehaviourScript()
		{
		}
	}
}
namespace HyperDash.UI.OLD
{
	[Token(Token = "0x2000243")]
	public class AnimatedView : MonoBehaviour
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected RectTransform _rectTransform;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		protected bool _isHidding;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		protected bool _isShowing;

		[Token(Token = "0x1700015B")]
		public bool IsHidden
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x115F3A0", Offset = "0x115F3A0", VA = "0x115F3A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		public bool IsAnimating
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x116024C", Offset = "0x116024C", VA = "0x116024C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x1160254", Offset = "0x1160254", VA = "0x1160254")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1160260", Offset = "0x1160260", VA = "0x1160260", Slot = "4")]
		protected virtual void OnShow()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1160264", Offset = "0x1160264", VA = "0x1160264", Slot = "5")]
		protected virtual void OnHidden()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1160268", Offset = "0x1160268", VA = "0x1160268", Slot = "6")]
		protected virtual void SetInteractable(bool enable)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x116026C", Offset = "0x116026C", VA = "0x116026C", Slot = "7")]
		[ContextMenu("Show")]
		public virtual void Show([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x116046C", Offset = "0x116046C", VA = "0x116046C", Slot = "8")]
		[ContextMenu("Hide")]
		public virtual void Hide([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x115FB94", Offset = "0x115FB94", VA = "0x115FB94")]
		public AnimatedView()
		{
		}
	}
}
namespace HyperDash.UI.Messagebox
{
	[Token(Token = "0x2000246")]
	public struct MessageBoxData
	{
		[Token(Token = "0x1700015D")]
		public readonly int Priority
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x1160738", Offset = "0x1160738", VA = "0x1160738")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015E")]
		public readonly string Title
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x1160740", Offset = "0x1160740", VA = "0x1160740")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public readonly string Message
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x1160748", Offset = "0x1160748", VA = "0x1160748")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public readonly bool ShowCancelButton
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x1160750", Offset = "0x1160750", VA = "0x1160750")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public readonly string CancelButtonText
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x1160758", Offset = "0x1160758", VA = "0x1160758")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public readonly string ConfirmButtonText
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x1160760", Offset = "0x1160760", VA = "0x1160760")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public readonly Action CancelClicked
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x1160768", Offset = "0x1160768", VA = "0x1160768")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public readonly Action ConfirmClicked
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x1160770", Offset = "0x1160770", VA = "0x1160770")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public readonly MessageBoxType Type
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x1160778", Offset = "0x1160778", VA = "0x1160778")]
			[CompilerGenerated]
			get
			{
				return default(MessageBoxType);
			}
		}

		[Token(Token = "0x17000166")]
		public readonly MessageBoxImageType Image
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x1160780", Offset = "0x1160780", VA = "0x1160780")]
			[CompilerGenerated]
			get
			{
				return default(MessageBoxImageType);
			}
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1160788", Offset = "0x1160788", VA = "0x1160788")]
		public MessageBoxData(int priority, string title, string message, [Optional] Action cancelClicked, [Optional] Action confirmClicked, [Optional] string cancelButtonText, [Optional] string confirmButtonText, bool showCancelButton = false, MessageBoxType type = MessageBoxType.Default, MessageBoxImageType image = MessageBoxImageType.None)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000247")]
	public class MessageBoxImage
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageBoxImageType Type;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite Sprite;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x11608EC", Offset = "0x11608EC", VA = "0x11608EC")]
		public MessageBoxImage()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public enum MessageBoxImageType
	{
		[Token(Token = "0x4000CD3")]
		None,
		[Token(Token = "0x4000CD4")]
		Maintenance,
		[Token(Token = "0x4000CD5")]
		Update,
		[Token(Token = "0x4000CD6")]
		NoInternet
	}
	[Token(Token = "0x2000249")]
	public enum MessageBoxType
	{
		[Token(Token = "0x4000CD8")]
		Default,
		[Token(Token = "0x4000CD9")]
		OnlyShowOne
	}
	[Token(Token = "0x200024A")]
	public class MessageBoxView : AnimatedView
	{
		[Token(Token = "0x200024B")]
		public delegate void HideDelegate(MessageBoxView sender);

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _title;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _message;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _confirmButtonText;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _cancelButtonText;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _cancelButton;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Button _confirmButton;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform _midRect;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Action _cancelClicked;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Action _confirmClicked;

		[Token(Token = "0x17000167")]
		public MessageBoxType Type
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x1160A4C", Offset = "0x1160A4C", VA = "0x1160A4C")]
			[CompilerGenerated]
			get
			{
				return default(MessageBoxType);
			}
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x1160A54", Offset = "0x1160A54", VA = "0x1160A54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event HideDelegate HideEvent
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x11608F4", Offset = "0x11608F4", VA = "0x11608F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x1160990", Offset = "0x1160990", VA = "0x1160990")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1160A2C", Offset = "0x1160A2C", VA = "0x1160A2C")]
		private void OnHide()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1160A5C", Offset = "0x1160A5C", VA = "0x1160A5C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1160A60", Offset = "0x1160A60", VA = "0x1160A60")]
		public void Show(MessageBoxData messageBoxData)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1160B64", Offset = "0x1160B64", VA = "0x1160B64", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1160D74", Offset = "0x1160D74", VA = "0x1160D74", Slot = "9")]
		public override void Hide(bool useTransitions = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1160DC0", Offset = "0x1160DC0", VA = "0x1160DC0")]
		private void EscapeFunctionality()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1160DF8", Offset = "0x1160DF8", VA = "0x1160DF8")]
		public void CancelClicked()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1160E84", Offset = "0x1160E84", VA = "0x1160E84")]
		public void ConfirmClicked()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1160F10", Offset = "0x1160F10", VA = "0x1160F10")]
		private void CancelCallback()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1160F58", Offset = "0x1160F58", VA = "0x1160F58")]
		private void ConfirmCallback()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1160FA0", Offset = "0x1160FA0", VA = "0x1160FA0")]
		public MessageBoxView()
		{
		}
	}
}
namespace HyperDash.UI.MainMenu
{
	[Token(Token = "0x200024C")]
	public class ComfortSettings : MonoBehaviour
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _seatedModeToggle;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _chevronsToggle;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _hideDronesToggle;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider _heightOffsetSlider;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _heightOffsetText;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup _heightOffsetSliderGroup;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _stickyDashToggle;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1161124", Offset = "0x1161124", VA = "0x1161124")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x11612AC", Offset = "0x11612AC", VA = "0x11612AC")]
		private void UpdateLabel()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x11613DC", Offset = "0x11613DC", VA = "0x11613DC")]
		public void TogglSeatedMode(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x11615FC", Offset = "0x11615FC", VA = "0x11615FC")]
		public void ToggleChevrons(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1161658", Offset = "0x1161658", VA = "0x1161658")]
		public void ToggleHideDrones(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11616B4", Offset = "0x11616B4", VA = "0x11616B4")]
		public void ToggleStickyDash(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1161710", Offset = "0x1161710", VA = "0x1161710")]
		public void HeightOffsetSliderChanged(float value)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1161714", Offset = "0x1161714", VA = "0x1161714")]
		public void HeightOffsetSliderSubmit()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x11614A0", Offset = "0x11614A0", VA = "0x11614A0")]
		public void HeightOffsetCalibrate()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1161718", Offset = "0x1161718", VA = "0x1161718")]
		public ComfortSettings()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ConfirmUsernameView : AnimatedView
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _message;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _cancelButton;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _confirmButton;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _newName;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<bool> _confirmAction;

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1161720", Offset = "0x1161720", VA = "0x1161720", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x116181C", Offset = "0x116181C", VA = "0x116181C", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1161B50", Offset = "0x1161B50", VA = "0x1161B50")]
		public void ConfirmPressed()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1161B94", Offset = "0x1161B94", VA = "0x1161B94")]
		public void CancelPressed()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1161BD8", Offset = "0x1161BD8", VA = "0x1161BD8")]
		public void SetNewName(string newName, Action<bool> onConfirmNameChange)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1161C0C", Offset = "0x1161C0C", VA = "0x1161C0C")]
		public ConfirmUsernameView()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class ControlsSettings : MonoBehaviour
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _leftHandedModeToggle;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider _verticalWeaponRotationSlider;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Slider _horizontalWeaponRotationSlider;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _verticalRotationText;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _horizontalRotationText;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _pickupOnButtonToggle;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Header("Rotation settings")]
		private Toggle _useSmoothTurningToggle;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider _rotationSpeedSlider;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _rotationSpeedText;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Slider _snapAngleSlider;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _snapAngleText;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1161C14", Offset = "0x1161C14", VA = "0x1161C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1161D18", Offset = "0x1161D18", VA = "0x1161D18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1161D58", Offset = "0x1161D58", VA = "0x1161D58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1162130", Offset = "0x1162130", VA = "0x1162130")]
		public void ToggleLeftHandedMode(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x116218C", Offset = "0x116218C", VA = "0x116218C")]
		public void ToggleSmoothTurning(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1162268", Offset = "0x1162268", VA = "0x1162268")]
		public void TogglePickupOnButton(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x11622C4", Offset = "0x11622C4", VA = "0x11622C4")]
		public void OnRotationSpeedChanged(float value)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x11623F0", Offset = "0x11623F0", VA = "0x11623F0")]
		public void OnSnapAngleChanged(float value)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x116251C", Offset = "0x116251C", VA = "0x116251C")]
		public void OnVerticalWeaponAngleChanged(float value)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x116262C", Offset = "0x116262C", VA = "0x116262C")]
		public void OnHorizontalWeaponAngleChanged(float value)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x116273C", Offset = "0x116273C", VA = "0x116273C")]
		public void ResetVerticalGunAngle()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x11628A4", Offset = "0x11628A4", VA = "0x11628A4")]
		public void ResetHorizontalGunAngle()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1162A0C", Offset = "0x1162A0C", VA = "0x1162A0C")]
		public void ResetSnapAngle()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1162B8C", Offset = "0x1162B8C", VA = "0x1162B8C")]
		public void ResetRotationSpeed()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1162D24", Offset = "0x1162D24", VA = "0x1162D24")]
		public ControlsSettings()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class CreateServerTab : TabPanel
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _serverNameText;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_InputField _serverPasswordText;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ServerPreview _serverPreview;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UiRegions _regions;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _createGameButton;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _levelLockAll;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _levelLock1to20;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _levelLock20to40;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle _levelLock40plus;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle _pingAllowAll;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle _pingAllowLow;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle _pingAllowMedium;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LevelRange _levelLock;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LevelRange Range1to20;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static readonly LevelRange Range20to40;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly LevelRange Range40plus;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _maxAllowedPing;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AdminJoinToken _joinToken;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _targetRegion;

		[Token(Token = "0x17000168")]
		public UiRegions Regions
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1162D2C", Offset = "0x1162D2C", VA = "0x1162D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1162D34", Offset = "0x1162D34", VA = "0x1162D34")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x11630B8", Offset = "0x11630B8", VA = "0x11630B8", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x11635FC", Offset = "0x11635FC", VA = "0x11635FC")]
		public void NameChanged(string text)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1163600", Offset = "0x1163600", VA = "0x1163600")]
		private void RegionsOnSelectionChanged(string region)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1163604", Offset = "0x1163604", VA = "0x1163604")]
		private bool IsValidConfig()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1163654", Offset = "0x1163654", VA = "0x1163654")]
		public AdminJoinToken GetSettingsProfile()
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x116371C", Offset = "0x116371C", VA = "0x116371C")]
		public void CreateGamePressed()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1163958", Offset = "0x1163958", VA = "0x1163958")]
		private void RequestPrivateServerCallback(Response<PrivateServerTicketResponse> response)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1163C08", Offset = "0x1163C08", VA = "0x1163C08")]
		private void JoinNextServer()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1163E50", Offset = "0x1163E50", VA = "0x1163E50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1163534", Offset = "0x1163534", VA = "0x1163534")]
		private void RefreshPreview()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1163B90", Offset = "0x1163B90", VA = "0x1163B90")]
		private void ShowErrorMessageCustomGameTab(string message)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1163E9C", Offset = "0x1163E9C", VA = "0x1163E9C")]
		private void JoinedViaCreateServerCallback(bool succes, string errorMessage)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x11640F0", Offset = "0x11640F0", VA = "0x11640F0")]
		private void LevelLockOnSetAll(bool isOn)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1164158", Offset = "0x1164158", VA = "0x1164158")]
		private void LevelLockOnSet1to20(bool isOn)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x11641C0", Offset = "0x11641C0", VA = "0x11641C0")]
		private void LevelLockOnSet20to40(bool isOn)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1164228", Offset = "0x1164228", VA = "0x1164228")]
		private void LevelLockOnSet40plus(bool isOn)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1164290", Offset = "0x1164290", VA = "0x1164290")]
		private void PingLockSetAll(bool isOn)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x11642A0", Offset = "0x11642A0", VA = "0x11642A0")]
		private void PingLockSetLow(bool isOn)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x11642B0", Offset = "0x11642B0", VA = "0x11642B0")]
		private void PingLockSetMedium(bool isOn)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x11642C0", Offset = "0x11642C0", VA = "0x11642C0")]
		public CreateServerTab()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class CreditsTab : TabPanel
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform _container;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform _content;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _scrollspeed;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _startPos;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x116438C", Offset = "0x116438C", VA = "0x116438C", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x11643D0", Offset = "0x11643D0", VA = "0x11643D0", Slot = "7")]
		public override void OnSelect()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x11643D8", Offset = "0x11643D8", VA = "0x11643D8", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x11643E0", Offset = "0x11643E0", VA = "0x11643E0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1164510", Offset = "0x1164510", VA = "0x1164510")]
		public CreditsTab()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class CustomizationTab : TabPanel
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1164524", Offset = "0x1164524", VA = "0x1164524")]
		public void HelmetOptionPressed()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x11647DC", Offset = "0x11647DC", VA = "0x11647DC")]
		public void WeaponOptionPressed()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1164830", Offset = "0x1164830", VA = "0x1164830")]
		public CustomizationTab()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class DataProtectionView : AnimatedView
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text Message;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1164838", Offset = "0x1164838", VA = "0x1164838", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1164A08", Offset = "0x1164A08", VA = "0x1164A08")]
		public void OnSkipPressed()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1164A1C", Offset = "0x1164A1C", VA = "0x1164A1C")]
		public DataProtectionView()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class DebugSettings : MonoBehaviour
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _fpsToggle;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _hitDebugToggle;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle[] _colorSpaces;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle[] _anisotropicToggles;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _forceOpaqueSortingToggle;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _effectSpawnerToggle;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _cullingToggle;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle _vrikToggle;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle _locomotionIKToggle;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle _nametagToggle;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle _anzuStatsToggle;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI _cpuLevelText;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI _gpuLevelText;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshProUGUI _viewDistanceText;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI _lodBias;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _crashButton1;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button _crashButton2;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PlayerHud _hud;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HyperDash.UI.ArmDisplay.ArmDisplay _armhud;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AmmoDisplay[] _ammoDisplays;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _zeroInt;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _zeroFloat;

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1164AB4", Offset = "0x1164AB4", VA = "0x1164AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1164B20", Offset = "0x1164B20", VA = "0x1164B20")]
		public void OnColorSpaceChanged(int index)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1164BB8", Offset = "0x1164BB8", VA = "0x1164BB8")]
		public void OnAnisotropicChanged(int index)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1164C04", Offset = "0x1164C04", VA = "0x1164C04")]
		public void ToggleForceOpaqueSorting(bool isOn)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1164C2C", Offset = "0x1164C2C", VA = "0x1164C2C")]
		public void ToggleHitDebug(bool isOn)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1164C30", Offset = "0x1164C30", VA = "0x1164C30")]
		public void ToggleCulling(bool isOn)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1164C58", Offset = "0x1164C58", VA = "0x1164C58")]
		public void ToggleEffects(bool isOn)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1164C5C", Offset = "0x1164C5C", VA = "0x1164C5C")]
		public void ToggleNameTags(bool isOn)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1164C60", Offset = "0x1164C60", VA = "0x1164C60")]
		public void ToggleVRIK(bool isOn)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1164C64", Offset = "0x1164C64", VA = "0x1164C64")]
		public void ToggleLocomotionIK(bool isOn)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1164C68", Offset = "0x1164C68", VA = "0x1164C68")]
		public void SetGPULevel(float value)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1164D20", Offset = "0x1164D20", VA = "0x1164D20")]
		public void SetCPULevel(float value)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1164DD8", Offset = "0x1164DD8", VA = "0x1164DD8")]
		public void SetViewDistance(float value)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1164EB4", Offset = "0x1164EB4", VA = "0x1164EB4")]
		public void SetLODBias(float value)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1164F4C", Offset = "0x1164F4C", VA = "0x1164F4C")]
		public void ToggleFps(bool isOn)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1164F50", Offset = "0x1164F50", VA = "0x1164F50")]
		public void ToggleAmmoHud(bool isOn)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1164FC4", Offset = "0x1164FC4", VA = "0x1164FC4")]
		public void ToggleArmHud(bool isOn)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1164FF4", Offset = "0x1164FF4", VA = "0x1164FF4")]
		public void TogglePlayerHud(bool isOn)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1165024", Offset = "0x1165024", VA = "0x1165024")]
		private void OnCrashButton1()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1165124", Offset = "0x1165124", VA = "0x1165124")]
		private void OnCrashButton2()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1165228", Offset = "0x1165228", VA = "0x1165228")]
		public DebugSettings()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class DisplaySettings : MonoBehaviour
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle Toggle120Hz;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] _frequencies;

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1165230", Offset = "0x1165230", VA = "0x1165230")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1165420", Offset = "0x1165420", VA = "0x1165420")]
		public void OnToggle120Hz(bool toggleValue)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1165518", Offset = "0x1165518", VA = "0x1165518")]
		public DisplaySettings()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class EnterPasswordView : AnimatedView
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_InputField _inputField;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _joinButton;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action _cancelCallback;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<string> _joinCallback;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1165520", Offset = "0x1165520", VA = "0x1165520")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1165590", Offset = "0x1165590", VA = "0x1165590")]
		public void JoinPressed()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x116563C", Offset = "0x116563C", VA = "0x116563C")]
		public void CancelPressed()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x11656A4", Offset = "0x11656A4", VA = "0x11656A4")]
		public void TextValueChanged(string value)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x11656D8", Offset = "0x11656D8", VA = "0x11656D8")]
		public void SetCallbacks(Action cancel, Action<string> join)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1165614", Offset = "0x1165614", VA = "0x1165614")]
		private void ClearCallbacks()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1165708", Offset = "0x1165708", VA = "0x1165708")]
		public EnterPasswordView()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class EnterPlayerNameView : AnimatedView
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_InputField _clanInputField;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_InputField _nameInputField;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text _errorText;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button _confirmButton;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _box;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool CreateNewUser;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1165710", Offset = "0x1165710", VA = "0x1165710", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x11658DC", Offset = "0x11658DC", VA = "0x11658DC")]
		public void ConfirmPressed()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1165C00", Offset = "0x1165C00", VA = "0x1165C00")]
		private void OnCreateUser(AccountManager sender, Response<CreateUserResponse> response)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1165E70", Offset = "0x1165E70", VA = "0x1165E70")]
		private void OnUserDataChangedEvent(AccountManager sender, Response<ChangeUserDataResponse> response)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1166004", Offset = "0x1166004", VA = "0x1166004")]
		public void TextValueChanged(string value)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1166038", Offset = "0x1166038", VA = "0x1166038")]
		public EnterPlayerNameView()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class FailedToConnectView : AnimatedView
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _errorText;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _sidePanel;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action _closedCallback;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<string> _errorMessageQueue;

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1166048", Offset = "0x1166048", VA = "0x1166048")]
		protected new void OnDisable()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x116607C", Offset = "0x116607C", VA = "0x116607C")]
		public void OnCloseClicked()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x11660F8", Offset = "0x11660F8", VA = "0x11660F8")]
		public void SetCallbacks(Action closedCallback)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1163E78", Offset = "0x1163E78", VA = "0x1163E78")]
		public void SetErrorMessage(string error)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x11660EC", Offset = "0x11660EC", VA = "0x11660EC")]
		public void ClearCallbacks()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1166100", Offset = "0x1166100", VA = "0x1166100")]
		public static void QueueErrorMessage(string error)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1166180", Offset = "0x1166180", VA = "0x1166180")]
		public void ShowQueuedErrorMessage(Action closedCallback)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x11662A8", Offset = "0x11662A8", VA = "0x11662A8")]
		public FailedToConnectView()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class FreeToPlayView : AnimatedView
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Header("bought")]
		private GameObject _freeToPlayBoughtPanel;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HoldButton _freeToPlayBoughtConfirm;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("everybody")]
		[SerializeField]
		private GameObject _freeToPlayPanel;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HoldButton _freeToPlayConfirm;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("ads")]
		[SerializeField]
		private GameObject _adPreferencePanel;

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1166348", Offset = "0x1166348", VA = "0x1166348", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1166434", Offset = "0x1166434", VA = "0x1166434", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x11664B0", Offset = "0x11664B0", VA = "0x11664B0")]
		private void FreeToPlayToBought()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x11665C0", Offset = "0x11665C0", VA = "0x11665C0")]
		private void BoughtToAdPreference()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x116668C", Offset = "0x116668C", VA = "0x116668C")]
		private void AdPreferencesSet()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x11666FC", Offset = "0x11666FC", VA = "0x11666FC")]
		public static bool ShouldShow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1166750", Offset = "0x1166750", VA = "0x1166750")]
		public FreeToPlayView()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class FriendsListElement : RecyclingListViewItem
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _friendProfile;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _friendNameLabel;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _friendDetailLabel;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FriendData _data;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color _offlineImageColor;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Color _offlineTextColor;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Color _onlineImageColor;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Color _onlineTextColor;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Color _evenBackgroundColor;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Color _oddBackgroundColor;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RequestHandle<Sprite> _spriteRequestHandle;

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1166758", Offset = "0x1166758", VA = "0x1166758")]
		public void UpdateData(FriendData friend, int rowIndex)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1166CBC", Offset = "0x1166CBC", VA = "0x1166CBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1166D14", Offset = "0x1166D14", VA = "0x1166D14")]
		public void AttemptJoin()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1166DBC", Offset = "0x1166DBC", VA = "0x1166DBC")]
		public FriendsListElement()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class FriendsPanelUIManager : UIManager
	{
		[Token(Token = "0x200025D")]
		[CompilerGenerated]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FriendsPanelUIManager <>4__this;

			[Token(Token = "0x1700016A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCD")]
				[Address(RVA = "0x116760C", Offset = "0x116760C", VA = "0x116760C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CCF")]
				[Address(RVA = "0x1167654", Offset = "0x1167654", VA = "0x1167654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x11670D4", Offset = "0x11670D4", VA = "0x11670D4")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x1167404", Offset = "0x1167404", VA = "0x1167404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x1167408", Offset = "0x1167408", VA = "0x1167408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x1167614", Offset = "0x1167614", VA = "0x1167614", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000169")]
		public static FriendsPanelUIManager Instance
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1166F5C", Offset = "0x1166F5C", VA = "0x1166F5C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x1166FA4", Offset = "0x1166FA4", VA = "0x1166FA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1166FFC", Offset = "0x1166FFC", VA = "0x1166FFC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1167060", Offset = "0x1167060", VA = "0x1167060")]
		[IteratorStateMachine(typeof(<Start>d__5))]
		protected IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x11670FC", Offset = "0x11670FC", VA = "0x11670FC")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1167240", Offset = "0x1167240", VA = "0x1167240", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x11673FC", Offset = "0x11673FC", VA = "0x11673FC")]
		public FriendsPanelUIManager()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class FriendsView : AnimatedView
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HyperDash.RecyclingListView.RecyclingListView _recyclingListView;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocaText _onlineCounterText;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<FriendData> _friendList;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private object[] _counterArgs;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _updateTimer;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x116765C", Offset = "0x116765C", VA = "0x116765C", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1167C68", Offset = "0x1167C68", VA = "0x1167C68")]
		private void UpdateList()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1167738", Offset = "0x1167738", VA = "0x1167738")]
		private void FriendsRefreshed(List<FriendData> friendsList)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1167DB4", Offset = "0x1167DB4", VA = "0x1167DB4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1167EEC", Offset = "0x1167EEC", VA = "0x1167EEC")]
		private void PopulateItem(RecyclingListViewItem item, int rowindex)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1167FE8", Offset = "0x1167FE8", VA = "0x1167FE8")]
		public FriendsView()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class HeightCalibrationPopupView : AnimatedView
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle _rememberToggle;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1168288", Offset = "0x1168288", VA = "0x1168288")]
		public void OnEnablePressed()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x116831C", Offset = "0x116831C", VA = "0x116831C")]
		private void EnableHeightCalibration()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x116836C", Offset = "0x116836C", VA = "0x116836C")]
		private void HeightOffsetCalibrate()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1168424", Offset = "0x1168424", VA = "0x1168424")]
		public void OnSkipPressed()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x11684E4", Offset = "0x11684E4", VA = "0x11684E4")]
		public HeightCalibrationPopupView()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class HudSettings : MonoBehaviour
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle _showPingToggle;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _showNetworkStatusToggle;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _toggleHudSmoothFollow;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _toggleArmHud;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _toggleStatusHud;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _statusHudScale;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider _statusHudScaleSlider;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _statusHudScaleText;

		[Token(Token = "0x4000D64")]
		private const string PercentageFormat = "{0}%";

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x11684EC", Offset = "0x11684EC", VA = "0x11684EC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x116886C", Offset = "0x116886C", VA = "0x116886C")]
		public void ToggleShowPing(bool toggleValue)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x11688C8", Offset = "0x11688C8", VA = "0x11688C8")]
		public void ToggleShowNetworkStatus(bool toggleValue)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1168924", Offset = "0x1168924", VA = "0x1168924")]
		public void ToggleHudSmoothFollow(bool toggleValue)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1168980", Offset = "0x1168980", VA = "0x1168980")]
		public void ToggleArmHud(bool toggleValue)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x11689DC", Offset = "0x11689DC", VA = "0x11689DC")]
		public void ToggleStatusHud(bool toggleValue)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x11686F0", Offset = "0x11686F0", VA = "0x11686F0")]
		public void SetStatusHudScale(float value)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1168A54", Offset = "0x1168A54", VA = "0x1168A54")]
		public HudSettings()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class KeybindAltElement : MonoBehaviour
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocaText _actionText;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _keyTextComponent;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _altKeyTextComponent;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _rebindButton;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _clearButton;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _rebindAltButton;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _clearAltButton;

		[Token(Token = "0x1700016C")]
		public int ActionID
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1168D1C", Offset = "0x1168D1C", VA = "0x1168D1C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x1168D24", Offset = "0x1168D24", VA = "0x1168D24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public ActionType ActionType
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x1168D2C", Offset = "0x1168D2C", VA = "0x1168D2C")]
			[CompilerGenerated]
			get
			{
				return default(ActionType);
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x1168D34", Offset = "0x1168D34", VA = "0x1168D34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<KeybindAltElement, bool> RebindPressedEvent
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x1168A5C", Offset = "0x1168A5C", VA = "0x1168A5C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x1168B0C", Offset = "0x1168B0C", VA = "0x1168B0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<KeybindAltElement, bool> ClearPressedEvent
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x1168BBC", Offset = "0x1168BBC", VA = "0x1168BBC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x1168C6C", Offset = "0x1168C6C", VA = "0x1168C6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1168D3C", Offset = "0x1168D3C", VA = "0x1168D3C")]
		public void Setup(int actionID, ActionType type, string actionLocaKey, string keyLocaKey, string altKeyLocaKey)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1168DD4", Offset = "0x1168DD4", VA = "0x1168DD4")]
		public void DisableRebinding()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1168D84", Offset = "0x1168D84", VA = "0x1168D84")]
		public void SetKeyText(string keyLocaKey, string altKey)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1168E0C", Offset = "0x1168E0C", VA = "0x1168E0C")]
		public void OnRebindPressed()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1168EEC", Offset = "0x1168EEC", VA = "0x1168EEC")]
		public void OnRebindAltPressed()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1168E18", Offset = "0x1168E18", VA = "0x1168E18")]
		private void OnRebindPressed(TextMeshProUGUI keyText, bool alt)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1168EF8", Offset = "0x1168EF8", VA = "0x1168EF8")]
		public void OnClearPressed()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1168FA8", Offset = "0x1168FA8", VA = "0x1168FA8")]
		public void OnClearAltPressed()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1168F04", Offset = "0x1168F04", VA = "0x1168F04")]
		private void OnClearPressed(TextMeshProUGUI keyText, bool alt)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1168FB4", Offset = "0x1168FB4", VA = "0x1168FB4")]
		public KeybindAltElement()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class KeybindElement : MonoBehaviour
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocaText _actionText;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocaText _keyText;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocaText _controllerText;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _rebindButton;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _clearButton;

		[Token(Token = "0x1700016E")]
		public int ActionID
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x116927C", Offset = "0x116927C", VA = "0x116927C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x1169284", Offset = "0x1169284", VA = "0x1169284")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public ActionType ActionType
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x116928C", Offset = "0x116928C", VA = "0x116928C")]
			[CompilerGenerated]
			get
			{
				return default(ActionType);
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x1169294", Offset = "0x1169294", VA = "0x1169294")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<KeybindElement> RebindPressedEvent
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1168FBC", Offset = "0x1168FBC", VA = "0x1168FBC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x116906C", Offset = "0x116906C", VA = "0x116906C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<KeybindElement> ClearPressedEvent
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x116911C", Offset = "0x116911C", VA = "0x116911C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x11691CC", Offset = "0x11691CC", VA = "0x11691CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x116929C", Offset = "0x116929C", VA = "0x116929C")]
		public void Setup(int actionID, ActionType type, string actionLocaKey, string keyLocaKey, string controllerLocaKey)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x11692FC", Offset = "0x11692FC", VA = "0x11692FC")]
		public void SetupSteamVr(int actionID, ActionType type, string actionLocaKey, string key, string controller)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1169418", Offset = "0x1169418", VA = "0x1169418")]
		public void DisableRebinding()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1169450", Offset = "0x1169450", VA = "0x1169450")]
		public void SetKeyText(string keyLocaKey, string controllerLocaKey)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1169490", Offset = "0x1169490", VA = "0x1169490")]
		public void OnRebindPressed()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x116956C", Offset = "0x116956C", VA = "0x116956C")]
		public void OnClearPressed()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x116960C", Offset = "0x116960C", VA = "0x116960C")]
		public KeybindElement()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class KeybindsTab : TabPanel
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _oculusKeybindMenu;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _steamVRKeybindMenu;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _spectatorKeybindMenu;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _xrKeybindMenu;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1169614", Offset = "0x1169614", VA = "0x1169614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1169784", Offset = "0x1169784", VA = "0x1169784")]
		public KeybindsTab()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[DefaultExecutionOrder(-999999)]
	public class MainMenu : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		public enum State
		{
			[Token(Token = "0x4000D8A")]
			Main,
			[Token(Token = "0x4000D8B")]
			CustomizationCharacter,
			[Token(Token = "0x4000D8C")]
			CustomizationWeapon,
			[Token(Token = "0x4000D8D")]
			SkinShop,
			[Token(Token = "0x4000D8E")]
			CreditShop
		}

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinIconListObject _skinIcons;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _characterObject;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BodySelector _bodySelector;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HelmetSelector _helmetSelector;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MainMenu Active;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, Sprite> _iconLookup;

		[Token(Token = "0x17000170")]
		public EventSystem EventSystem
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x116978C", Offset = "0x116978C", VA = "0x116978C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x1169794", Offset = "0x1169794", VA = "0x1169794")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public static State CurrentState
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x116979C", Offset = "0x116979C", VA = "0x116979C")]
			[CompilerGenerated]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x11697E4", Offset = "0x11697E4", VA = "0x11697E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public GameObject CharacterObject
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x1169830", Offset = "0x1169830", VA = "0x1169830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public BodySelector BodySelector
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x1169838", Offset = "0x1169838", VA = "0x1169838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public HelmetSelector HelmetSelector
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x1169840", Offset = "0x1169840", VA = "0x1169840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<State, State> StateChangedEvent
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x116755C", Offset = "0x116755C", VA = "0x116755C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x116734C", Offset = "0x116734C", VA = "0x116734C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1169848", Offset = "0x1169848", VA = "0x1169848")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1169ADC", Offset = "0x1169ADC", VA = "0x1169ADC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1169AFC", Offset = "0x1169AFC", VA = "0x1169AFC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1169BE4", Offset = "0x1169BE4", VA = "0x1169BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1164578", Offset = "0x1164578", VA = "0x1164578")]
		public void ChangeState(State state)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1169C48", Offset = "0x1169C48", VA = "0x1169C48")]
		public static Sprite GetIconSprite(string id)
		{
			return null;
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1169CD8", Offset = "0x1169CD8", VA = "0x1169CD8")]
		public void SetInteraction(bool active)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1169BB4", Offset = "0x1169BB4", VA = "0x1169BB4")]
		public void ReleaseCharacter()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1169CF8", Offset = "0x1169CF8", VA = "0x1169CF8")]
		public MainMenu()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class MainMenuUIManager : UIManager
	{
		[Token(Token = "0x2000268")]
		[CompilerGenerated]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainMenuUIManager <>4__this;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D26")]
				[Address(RVA = "0x116A0FC", Offset = "0x116A0FC", VA = "0x116A0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D28")]
				[Address(RVA = "0x116A144", Offset = "0x116A144", VA = "0x116A144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x1169DD8", Offset = "0x1169DD8", VA = "0x1169DD8")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x1169FA4", Offset = "0x1169FA4", VA = "0x1169FA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x1169FA8", Offset = "0x1169FA8", VA = "0x1169FA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x116A104", Offset = "0x116A104", VA = "0x116A104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRGraphicsRaycaster _vrGraphicsRaycaster;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GraphicRaycaster _screenRaycaster;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MainMenuUIManager _instance;

		[Token(Token = "0x17000175")]
		public static MainMenuUIManager Instance
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1160CA0", Offset = "0x1160CA0", VA = "0x1160CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1169D00", Offset = "0x1169D00", VA = "0x1169D00", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1169D64", Offset = "0x1169D64", VA = "0x1169D64")]
		[IteratorStateMachine(typeof(<Start>d__6))]
		protected IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1169E00", Offset = "0x1169E00", VA = "0x1169E00")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1169E2C", Offset = "0x1169E2C", VA = "0x1169E2C", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1169F38", Offset = "0x1169F38", VA = "0x1169F38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x11638DC", Offset = "0x11638DC", VA = "0x11638DC")]
		public void SetInteraction(bool isInteractable)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1169F9C", Offset = "0x1169F9C", VA = "0x1169F9C")]
		public MainMenuUIManager()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class MainMenuView : AnimatedView
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _versionText;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text _commitShaText;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TabHandler _tabHandler;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MenuAnimatedButton _multiplayerButton;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MenuAnimatedButton _trainingButton;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MenuAnimatedButton _profileButton;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MenuAnimatedButton _customizationButton;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MultiplayerTab _multiplayerTab;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _background;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int TabIndexOverride;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x116A14C", Offset = "0x116A14C", VA = "0x116A14C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x116A1FC", Offset = "0x116A1FC", VA = "0x116A1FC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x116A2A0", Offset = "0x116A2A0", VA = "0x116A2A0")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x116A3E8", Offset = "0x116A3E8", VA = "0x116A3E8", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x116A2A4", Offset = "0x116A2A4", VA = "0x116A2A4")]
		private void SetVersionText()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x116A578", Offset = "0x116A578", VA = "0x116A578")]
		private void ResetTab()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x116A5CC", Offset = "0x116A5CC", VA = "0x116A5CC")]
		public void SetMultiplayerTab()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x116A634", Offset = "0x116A634", VA = "0x116A634")]
		public void SetTrainingTab()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x116A65C", Offset = "0x116A65C", VA = "0x116A65C")]
		public void SetPromoTab()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x116A684", Offset = "0x116A684", VA = "0x116A684")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x116A738", Offset = "0x116A738", VA = "0x116A738")]
		public MainMenuView()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class MicrophoneSettings : MonoBehaviour
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToggleGroup _toggleGroup;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _vad;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle _pushToTalk;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Dropdown _deviceDropdown;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _devicePanel;

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x116A78C", Offset = "0x116A78C", VA = "0x116A78C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x116A88C", Offset = "0x116A88C", VA = "0x116A88C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x116A9B8", Offset = "0x116A9B8", VA = "0x116A9B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x116ACF0", Offset = "0x116ACF0", VA = "0x116ACF0")]
		private void DropdownValueChanged(int index)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x116AE10", Offset = "0x116AE10", VA = "0x116AE10")]
		private void OnMicrophoneChanged(IAudioDevice newMicrophone)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x116AE14", Offset = "0x116AE14", VA = "0x116AE14")]
		private void SetSelectedMicrophone()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x116AF2C", Offset = "0x116AF2C", VA = "0x116AF2C")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x116AF30", Offset = "0x116AF30", VA = "0x116AF30")]
		public void TogglePushToTalk()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x116B0A4", Offset = "0x116B0A4", VA = "0x116B0A4")]
		public MicrophoneSettings()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class MultiplayerTab : TabPanel
	{
		[Token(Token = "0x200026D")]
		public enum Tab
		{
			[Token(Token = "0x4000DAC")]
			None = -1,
			[Token(Token = "0x4000DAD")]
			Overview,
			[Token(Token = "0x4000DAE")]
			CreateServer,
			[Token(Token = "0x4000DAF")]
			Serverbrowser
		}

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TabHandler _tabHandler;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MultiplayerAnimatedButton _createServerButton;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MultiplayerAnimatedButton _quickplayButton;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MultiplayerAnimatedButton[] _overviewButtons;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Tab SelectIndex;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x116B0EC", Offset = "0x116B0EC", VA = "0x116B0EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x116B180", Offset = "0x116B180", VA = "0x116B180", Slot = "7")]
		public override void OnSelect()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x116B1FC", Offset = "0x116B1FC", VA = "0x116B1FC", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x116B2D4", Offset = "0x116B2D4", VA = "0x116B2D4", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x116B2F0", Offset = "0x116B2F0", VA = "0x116B2F0")]
		private void ShowErrorPopup()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x116B3A0", Offset = "0x116B3A0", VA = "0x116B3A0")]
		public void QuickPlayPressed()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x116B434", Offset = "0x116B434", VA = "0x116B434")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x116B664", Offset = "0x116B664", VA = "0x116B664")]
		public void CreateServerPressed()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x116B710", Offset = "0x116B710", VA = "0x116B710")]
		public void ServerBrowserPressed()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x116B7BC", Offset = "0x116B7BC", VA = "0x116B7BC")]
		public void SelectOverviewButton(MultiplayerAnimatedButton button)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x116B894", Offset = "0x116B894", VA = "0x116B894")]
		public void ResetOverviewButtons()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x116B8F4", Offset = "0x116B8F4", VA = "0x116B8F4")]
		public MultiplayerTab()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class NewsView : AnimatedView
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _newsText;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Promo")]
		[SerializeField]
		private GameObject _promoButton;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _promoShort;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform _parentRect;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform _headerRect;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _newsRect;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform _separatorRect;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform _promoRect;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform _bottomHalfRect;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SkewedVerticalLayout _verticalLayoutGroup;

		[Token(Token = "0x4000DBA")]
		private const string NewsKey = "news";

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x116B8FC", Offset = "0x116B8FC", VA = "0x116B8FC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x116B9A8", Offset = "0x116B9A8", VA = "0x116B9A8")]
		private void SetText()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x116BDAC", Offset = "0x116BDAC", VA = "0x116BDAC", Slot = "12")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x116BE5C", Offset = "0x116BE5C", VA = "0x116BE5C")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x116BE60", Offset = "0x116BE60", VA = "0x116BE60")]
		public void ClickedPromoButton()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x116BCA0", Offset = "0x116BCA0", VA = "0x116BCA0")]
		[ContextMenu("Show Promo")]
		public void ShowPromo()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x116BBAC", Offset = "0x116BBAC", VA = "0x116BBAC")]
		[ContextMenu("Hide Promo")]
		public void HidePromo()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x116BEAC", Offset = "0x116BEAC", VA = "0x116BEAC")]
		public NewsView()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class OfflineModeTab : TabPanel
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x116BEB4", Offset = "0x116BEB4", VA = "0x116BEB4")]
		public void GoOnlinePressed()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x116BFAC", Offset = "0x116BFAC", VA = "0x116BFAC")]
		public OfflineModeTab()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class PanelControl : MonoBehaviour
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ServerPreview _serverPreview;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StoreBanner _storeBanner;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _mainMenuView;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isShopBannerActive;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x116BFB4", Offset = "0x116BFB4", VA = "0x116BFB4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x116BFE4", Offset = "0x116BFE4", VA = "0x116BFE4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x116C250", Offset = "0x116C250", VA = "0x116C250")]
		public PanelControl()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class PlayerListView : AnimatedView
	{
		[Token(Token = "0x2000272")]
		public struct PlayerRoomProperties
		{
			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte Level;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public byte TeamIndex;
		}

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI[] _nameFields;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI[] _levelFields;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image[] _levelBackgrounds;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image[] _teamColorImages;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI[] _spectatorNameFields;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image[] _spectatorIconBackgrounds;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<PlayerRoomProperties> _playerProperties;

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x116C258", Offset = "0x116C258", VA = "0x116C258")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x116C25C", Offset = "0x116C25C", VA = "0x116C25C")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x116C4F0", Offset = "0x116C4F0", VA = "0x116C4F0")]
		public void SetSession(ServerBrowser.SessionInfo session)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x116CCE0", Offset = "0x116CCE0", VA = "0x116CCE0")]
		private int SortByTeamID(PlayerRoomProperties player, PlayerRoomProperties other)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x116C95C", Offset = "0x116C95C", VA = "0x116C95C")]
		private bool TryGetPlayerPropertiesArray(PhotonSession session, ref List<PlayerRoomProperties> properties)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x116CC10", Offset = "0x116CC10", VA = "0x116CC10")]
		private bool TryGetStringArray(PhotonSession session, string key, out string[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x116CD08", Offset = "0x116CD08", VA = "0x116CD08")]
		private bool TryGetIntArray(PhotonSession session, string key, out int[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x116CDD8", Offset = "0x116CDD8", VA = "0x116CDD8")]
		public PlayerListView()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class PrivacyPolicyView : AnimatedView
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _errorText;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _confirmButton;

		[Token(Token = "0x4000DCB")]
		private const string internationalPPUrl = "https://hyperdashvr.com/privacy-policy/";

		[Token(Token = "0x4000DCC")]
		private const string chinaPPUrl = "https://hyperdashvr.com/privacy-policy-cn/";

		[Token(Token = "0x4000DCD")]
		private const string internationalTOSUrl = "https://www.hyperdashvr.com/terms-of-use/";

		[Token(Token = "0x4000DCE")]
		private const string chinaTOSUrl = "https://www.hyperdashvr.com/terms-of-use-cn/";

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x116CE9C", Offset = "0x116CE9C", VA = "0x116CE9C", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x116CF24", Offset = "0x116CF24", VA = "0x116CF24")]
		public void AgreePressed()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x116D0B8", Offset = "0x116D0B8", VA = "0x116D0B8")]
		private void ApprovePrivacyPolicyCallback(Response<ApprovePrivacyPolicyResponse> response)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x116D1E4", Offset = "0x116D1E4", VA = "0x116D1E4")]
		public void QuitPressed()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x116D1EC", Offset = "0x116D1EC", VA = "0x116D1EC")]
		public void OpenPrivacyPolicyPressed()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x116D27C", Offset = "0x116D27C", VA = "0x116D27C")]
		public void OpenTermsOfUsePressed()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x116D30C", Offset = "0x116D30C", VA = "0x116D30C")]
		public PrivacyPolicyView()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class ProfileTab : TabPanel
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _playerNameInputField;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_InputField _clanTagInputField;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text _errorText;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _levelText;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _nameChangeButton;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TabHandler _statsTabHandler;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StatisticsTab _careerStatsTab;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StatisticsTab _seasonStatsTab;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image _boughtShield;

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x116D314", Offset = "0x116D314", VA = "0x116D314", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x116D4D4", Offset = "0x116D4D4", VA = "0x116D4D4", Slot = "7")]
		public override void OnSelect()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x116D5FC", Offset = "0x116D5FC", VA = "0x116D5FC", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x116D628", Offset = "0x116D628", VA = "0x116D628")]
		public void NameFieldChanged(string input)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x116D75C", Offset = "0x116D75C", VA = "0x116D75C")]
		public void ClanTagFieldChanged(string input)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x116D62C", Offset = "0x116D62C", VA = "0x116D62C")]
		private void CheckChanges()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x116D760", Offset = "0x116D760", VA = "0x116D760")]
		public void ChangePressed()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x116DAF8", Offset = "0x116DAF8", VA = "0x116DAF8")]
		private void OnConfirmNameChange(bool confirmed)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x116DC80", Offset = "0x116DC80", VA = "0x116DC80")]
		public void OnDataProtectionPressed()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x116DCCC", Offset = "0x116DCCC", VA = "0x116DCCC")]
		private void OnUserDataChangedEvent(AccountManager sender, Response<ChangeUserDataResponse> response)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x116E03C", Offset = "0x116E03C", VA = "0x116E03C")]
		private void GetStatisticsCallback(StatisticsResponse data, string error)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x116E154", Offset = "0x116E154", VA = "0x116E154")]
		public ProfileTab()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class PromoTab : TabPanel
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _linkButton;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _url;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x116E15C", Offset = "0x116E15C", VA = "0x116E15C", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x116E2C0", Offset = "0x116E2C0", VA = "0x116E2C0")]
		public void OnSkipPressed()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x116E2CC", Offset = "0x116E2CC", VA = "0x116E2CC")]
		public void OnLinkClick()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x116E2D8", Offset = "0x116E2D8", VA = "0x116E2D8")]
		public PromoTab()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class QuickplayTab : TabPanel
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text StatusText;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _status;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x116E2E0", Offset = "0x116E2E0", VA = "0x116E2E0", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x116E2E8", Offset = "0x116E2E8", VA = "0x116E2E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x116E2F0", Offset = "0x116E2F0", VA = "0x116E2F0", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x116E2F8", Offset = "0x116E2F8", VA = "0x116E2F8")]
		public QuickplayTab()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class QuitButton : MonoBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _quitPressed;

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x116E300", Offset = "0x116E300", VA = "0x116E300")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x116E31C", Offset = "0x116E31C", VA = "0x116E31C")]
		public QuitButton()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class ServerBrowserTab : TabPanel
	{
		[Token(Token = "0x2000279")]
		public enum State
		{
			[Token(Token = "0x4000DF6")]
			None,
			[Token(Token = "0x4000DF7")]
			Offline,
			[Token(Token = "0x4000DF8")]
			WaitingForList,
			[Token(Token = "0x4000DF9")]
			ShowList,
			[Token(Token = "0x4000DFA")]
			ConnectingToRoom,
			[Token(Token = "0x4000DFB")]
			OfflineMode
		}

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ServerBrowser.SessionInfo CurrentSelected;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ServerPreview _serverPreview;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HyperDash.RecyclingListView.RecyclingListView _recyclingListView;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform _serverListContainer;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _scrollviewRect;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SkewedVerticalLayout _verticalLayoutGroup;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform _contentRect;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _statusText;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocaText _statusLoca;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CanvasGroup _serverListGroup;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_InputField _searchInputField;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _background;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Filter")]
		[SerializeField]
		private RectTransform _filtersRect;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject _arrowFilters;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Header("Sort")]
		private RectTransform _sortsRect;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _arrowSorts;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Header("Refresh")]
		private Button _refreshButton;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle _refreshToggle;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LocaText _refreshLabel;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private State _currentState;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<ServerBrowser.SessionInfo> _serverList;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool _showFilters;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool _showSorts;

		[Token(Token = "0x14000026")]
		public static event Action<ServerBrowser.SessionInfo> SessionSelectedEvent
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x116E324", Offset = "0x116E324", VA = "0x116E324")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x116E3F0", Offset = "0x116E3F0", VA = "0x116E3F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x116E4BC", Offset = "0x116E4BC", VA = "0x116E4BC")]
		public static void OnSelectedInvoke(ServerBrowser.SessionInfo value)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x116E53C", Offset = "0x116E53C", VA = "0x116E53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x116E768", Offset = "0x116E768", VA = "0x116E768")]
		private void ToggleRefresh(bool arg0)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x116E7CC", Offset = "0x116E7CC", VA = "0x116E7CC")]
		private void ClickedRefreshButton()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x116E6DC", Offset = "0x116E6DC", VA = "0x116E6DC")]
		private void SetRefreshToggle(bool autoRefresh)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x116E860", Offset = "0x116E860", VA = "0x116E860", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x116EAB4", Offset = "0x116EAB4", VA = "0x116EAB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x116EB30", Offset = "0x116EB30", VA = "0x116EB30", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x116ECA0", Offset = "0x116ECA0", VA = "0x116ECA0", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x116EE48", Offset = "0x116EE48", VA = "0x116EE48", Slot = "7")]
		public override void OnSelect()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x116EFCC", Offset = "0x116EFCC", VA = "0x116EFCC")]
		public void ToggleFilters()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x116F058", Offset = "0x116F058", VA = "0x116F058")]
		public void ToggleSorts()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x116F00C", Offset = "0x116F00C", VA = "0x116F00C")]
		[ContextMenu("Show Filters")]
		public void ShowFilters()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x116E9E4", Offset = "0x116E9E4", VA = "0x116E9E4")]
		[ContextMenu("Hide Filters")]
		public void HideFilters()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x116F098", Offset = "0x116F098", VA = "0x116F098")]
		[ContextMenu("Show Sorts")]
		public void ShowSorts()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x116EA3C", Offset = "0x116EA3C", VA = "0x116EA3C")]
		[ContextMenu("Hide Sorts")]
		public void HideSorts()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x116EF8C", Offset = "0x116EF8C", VA = "0x116EF8C")]
		public void ChangeState(State state)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x116F148", Offset = "0x116F148", VA = "0x116F148")]
		private void ExitState()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x116F43C", Offset = "0x116F43C", VA = "0x116F43C")]
		private void SetElementsSelectable(bool isSelectable)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x116F200", Offset = "0x116F200", VA = "0x116F200")]
		private void EnterState()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x116F560", Offset = "0x116F560", VA = "0x116F560")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x116F678", Offset = "0x116F678", VA = "0x116F678")]
		private void PopulateItem(RecyclingListViewItem item, int rowindex)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x116FC2C", Offset = "0x116FC2C", VA = "0x116FC2C")]
		private void OnServerListUpdated(ServerBrowser sender, List<ServerBrowser.SessionInfo> serverList)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x116FE48", Offset = "0x116FE48", VA = "0x116FE48")]
		private void OnSessionSelectedEvent(ServerBrowser.SessionInfo sessionInfo)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x116FFAC", Offset = "0x116FFAC", VA = "0x116FFAC")]
		private void SearchValueChanged(string arg0)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x117005C", Offset = "0x117005C", VA = "0x117005C")]
		public ServerBrowserTab()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class ServerListElement : RecyclingListViewItem
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _selectColor;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _textColor;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _serverNameText;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _mapText;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _gameModeText;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _playerCountText;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI _spectatorCountText;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI _pingText;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image _lockedIcon;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UiHoverHaptic _haptic;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _isSelected;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color _evenColor;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Color _unevenColor;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _pingCached;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _rowIndex;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string IP;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ServerBrowser.SessionInfo _sessionInfo;

		[Token(Token = "0x17000178")]
		public ServerBrowser.SessionInfo SessionInfo
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x117006C", Offset = "0x117006C", VA = "0x117006C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x1170074", Offset = "0x1170074", VA = "0x1170074")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x117007C", Offset = "0x117007C", VA = "0x117007C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x11700F8", Offset = "0x11700F8", VA = "0x11700F8")]
		private void OnSessionSelectedEvent(ServerBrowser.SessionInfo value)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x117030C", Offset = "0x117030C", VA = "0x117030C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1170388", Offset = "0x1170388", VA = "0x1170388")]
		public void UpdatePing(int ping)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x117047C", Offset = "0x117047C", VA = "0x117047C")]
		public void UpdatePingColor()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x116F730", Offset = "0x116F730", VA = "0x116F730")]
		public void UpdateData(ServerBrowser.SessionInfo sessionInfo, int rowindex)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x11705A0", Offset = "0x11705A0", VA = "0x11705A0")]
		private string GenerateMapText(ServerBrowser.SessionInfo session)
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1170120", Offset = "0x1170120", VA = "0x1170120")]
		private void SetBackgroundColor()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x11706CC", Offset = "0x11706CC", VA = "0x11706CC")]
		public void Select()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1170618", Offset = "0x1170618", VA = "0x1170618")]
		public string ParseIP()
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x116F540", Offset = "0x116F540", VA = "0x116F540")]
		public void SetSelectable(bool isSelectable)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x11706D4", Offset = "0x11706D4", VA = "0x11706D4")]
		public ServerListElement()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class ServerPreview : MonoBehaviour
	{
		[Token(Token = "0x200027C")]
		private enum State
		{
			[Token(Token = "0x4000E20")]
			ServerBrowser,
			[Token(Token = "0x4000E21")]
			Training
		}

		[Token(Token = "0x200027D")]
		private enum JoinType
		{
			[Token(Token = "0x4000E23")]
			None,
			[Token(Token = "0x4000E24")]
			ServerBrowser,
			[Token(Token = "0x4000E25")]
			AutoJoin,
			[Token(Token = "0x4000E26")]
			QuickPlay
		}

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _serverNameText;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _serverDetailsText;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _serverImage;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AspectRatioFitter _aspectRatioFitter;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _joinButton;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _joinButtonText;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ServerBrowserTab _serverBrowserTab;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ServerBrowser.SessionInfo _session;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isConnecting;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private State _state;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private JoinType _joinType;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ServerPreview Active;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _previewIsWrongVersion;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _selectedIsInvalid;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<bool, string> _joinCallback;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1171744", Offset = "0x1171744", VA = "0x1171744")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1171818", Offset = "0x1171818", VA = "0x1171818")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1171898", Offset = "0x1171898", VA = "0x1171898")]
		private void OnSessionSelectedEvent(ServerBrowser.SessionInfo value)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1171ED0", Offset = "0x1171ED0", VA = "0x1171ED0")]
		private void SetBanner(string mapName, string serverName)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x117189C", Offset = "0x117189C", VA = "0x117189C")]
		private void SetPreview(ServerBrowser.SessionInfo session)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x11720C0", Offset = "0x11720C0", VA = "0x11720C0")]
		private void SetJoinButton(ServerBrowser.SessionInfo sessionInfo)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x117259C", Offset = "0x117259C", VA = "0x117259C")]
		public void SetPreviewTraining(string mapName)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1172068", Offset = "0x1172068", VA = "0x1172068")]
		private void SetDefaultBanner()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1172414", Offset = "0x1172414", VA = "0x1172414")]
		private bool IsSafeToStart()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x11726F8", Offset = "0x11726F8", VA = "0x11726F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1172720", Offset = "0x1172720", VA = "0x1172720")]
		public void JoinPressed()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1172978", Offset = "0x1172978", VA = "0x1172978")]
		public void AutoJoin(ServerBrowser.SessionInfo session, [Optional] Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x11729B4", Offset = "0x11729B4", VA = "0x11729B4")]
		public void QuickplayJoin(ServerBrowser.SessionInfo session, [Optional] Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x11727D0", Offset = "0x11727D0", VA = "0x11727D0")]
		private void JoinCurrentSession(JoinType joinType)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x11729F0", Offset = "0x11729F0", VA = "0x11729F0")]
		private void JoinSession([Optional] string password)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1172B70", Offset = "0x1172B70", VA = "0x1172B70")]
		private void JoinedViaCallback(bool succes, string message)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1172E24", Offset = "0x1172E24", VA = "0x1172E24")]
		private void ErrorMessageClosedServerBrowser()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1172E60", Offset = "0x1172E60", VA = "0x1172E60")]
		private void PasswordCanceled()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1172E9C", Offset = "0x1172E9C", VA = "0x1172E9C")]
		public ServerPreview()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class SidePanelUIManager : UIManager
	{
		[Token(Token = "0x200027F")]
		[CompilerGenerated]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SidePanelUIManager <>4__this;

			[Token(Token = "0x1700017A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC7")]
				[Address(RVA = "0x11732F4", Offset = "0x11732F4", VA = "0x11732F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC9")]
				[Address(RVA = "0x117333C", Offset = "0x117333C", VA = "0x117333C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x117302C", Offset = "0x117302C", VA = "0x117302C")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x1173198", Offset = "0x1173198", VA = "0x1173198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x117319C", Offset = "0x117319C", VA = "0x117319C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x11732FC", Offset = "0x11732FC", VA = "0x11732FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000179")]
		public static SidePanelUIManager Instance
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x1172EA4", Offset = "0x1172EA4", VA = "0x1172EA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x1172EEC", Offset = "0x1172EEC", VA = "0x1172EEC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1172F44", Offset = "0x1172F44", VA = "0x1172F44", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1172FB8", Offset = "0x1172FB8", VA = "0x1172FB8")]
		[IteratorStateMachine(typeof(<Start>d__5))]
		protected IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1173054", Offset = "0x1173054", VA = "0x1173054")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1173080", Offset = "0x1173080", VA = "0x1173080", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1173190", Offset = "0x1173190", VA = "0x1173190")]
		public SidePanelUIManager()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class SoundSettings : MonoBehaviour
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider _masterVolumeSlider;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider _musicVolumeSlider;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Slider _voiceVolumeSlider;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider _gameVolumeSlider;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider _announcerVolumeSlider;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _matchMusicToggle;

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1173344", Offset = "0x1173344", VA = "0x1173344")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x11735C0", Offset = "0x11735C0", VA = "0x11735C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x11737AC", Offset = "0x11737AC", VA = "0x11737AC")]
		public void SetMasterLevel(float sliderValue)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1173808", Offset = "0x1173808", VA = "0x1173808")]
		public void SetMusicLevel(float sliderValue)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1173864", Offset = "0x1173864", VA = "0x1173864")]
		public void SetVoiceLevel(float sliderValue)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x11738C0", Offset = "0x11738C0", VA = "0x11738C0")]
		public void SetGameLevel(float sliderValue)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x117391C", Offset = "0x117391C", VA = "0x117391C")]
		public void SetAnnouncerLevel(float sliderValue)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1173978", Offset = "0x1173978", VA = "0x1173978")]
		public void SetMatchMusic(bool isOn)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x11739D4", Offset = "0x11739D4", VA = "0x11739D4")]
		public SoundSettings()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class StartTutorialView : AnimatedView
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x11739DC", Offset = "0x11739DC", VA = "0x11739DC")]
		public void OnStartPressed()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1173B40", Offset = "0x1173B40", VA = "0x1173B40", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1173BB0", Offset = "0x1173BB0", VA = "0x1173BB0")]
		public void OnSkipPressed()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1173BDC", Offset = "0x1173BDC", VA = "0x1173BDC")]
		public StartTutorialView()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class StartupView : AnimatedView
	{
		[Token(Token = "0x2000284")]
		private enum LoadStep
		{
			[Token(Token = "0x4000E3F")]
			None,
			[Token(Token = "0x4000E40")]
			Login,
			[Token(Token = "0x4000E41")]
			PopupQueue,
			[Token(Token = "0x4000E42")]
			StartBolt,
			[Token(Token = "0x4000E43")]
			Done
		}

		[StructLayout(3)]
		[Token(Token = "0x2000285")]
		[CompilerGenerated]
		private struct <DoLogin>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartupView <>4__this;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x11756E8", Offset = "0x11756E8", VA = "0x11756E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x1175A0C", Offset = "0x1175A0C", VA = "0x1175A0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _statusObject;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text _statusMessageText;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text _titleText;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text _messageText;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _retryButton;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _skipButton;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _quitButton;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _supportButton;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _errorMessageObject;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LoadStep _currentStep;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<AnimatedView> _popupQueue;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1173CFC", Offset = "0x1173CFC", VA = "0x1173CFC", Slot = "12")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1173E8C", Offset = "0x1173E8C", VA = "0x1173E8C", Slot = "9")]
		public override void Hide(bool useTransitions = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x117402C", Offset = "0x117402C", VA = "0x117402C", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1174754", Offset = "0x1174754", VA = "0x1174754")]
		[AsyncStateMachine(typeof(<DoLogin>d__15))]
		private System.Threading.Tasks.Task DoLogin()
		{
			return null;
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1174344", Offset = "0x1174344", VA = "0x1174344")]
		public void NextStep(bool increaseStep = true)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1174EC0", Offset = "0x1174EC0", VA = "0x1174EC0")]
		private void OnBoltStarted(bool success, int reason)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x11748A0", Offset = "0x11748A0", VA = "0x11748A0")]
		private void CheckLogin(Response<LoginResponse> response)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1175528", Offset = "0x1175528", VA = "0x1175528")]
		public void ShowDataProtection()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1175280", Offset = "0x1175280", VA = "0x1175280")]
		private void ContinueAfterLoginCheck()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1175578", Offset = "0x1175578", VA = "0x1175578")]
		private void OnLoginEvent(AccountManager sender, Response<LoginResponse> response)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1175020", Offset = "0x1175020", VA = "0x1175020")]
		private void ShowErrorMessage(string message, string title = "", bool showRetry = true, bool showSkip = true, bool showSupport = false)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1174840", Offset = "0x1174840", VA = "0x1174840")]
		private void ShowStatus(string message)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1175590", Offset = "0x1175590", VA = "0x1175590")]
		public void RetryPressed()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1174D9C", Offset = "0x1174D9C", VA = "0x1174D9C")]
		private void DoBoltStart()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x11755B0", Offset = "0x11755B0", VA = "0x11755B0")]
		public void SkipPressed()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1175650", Offset = "0x1175650", VA = "0x1175650")]
		public void QuitPressed()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1175658", Offset = "0x1175658", VA = "0x1175658")]
		public StartupView()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class StatisticsTab : TabPanel
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _errorText;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _loadingObject;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _frame;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<GunStatsHandler> _gunStatsHandlers;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<GameModeStatHandler> _gameModeStatHandlers;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GeneralStatsHandler _generalStatsHandler;

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1175A18", Offset = "0x1175A18", VA = "0x1175A18")]
		public void SetLoading()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1175A70", Offset = "0x1175A70", VA = "0x1175A70")]
		public void SetError(string error)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1175AF0", Offset = "0x1175AF0", VA = "0x1175AF0")]
		public void ShowData(StatisticsChildResponse dataStatistics)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1177154", Offset = "0x1177154", VA = "0x1177154")]
		public StatisticsTab()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class SteamVRKeybinds : MonoBehaviour
	{
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1177244", Offset = "0x1177244", VA = "0x1177244")]
		public SteamVRKeybinds()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class StoreBanner : MonoBehaviour
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _openStoreButton;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _newObject;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UiStoreTimer _storeTimer;

		[Token(Token = "0x4000E52")]
		private const string EndTimePlayerPrefKey = "SHOPTIME_LASTSEEN";

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _timeStamp;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x117724C", Offset = "0x117724C", VA = "0x117724C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x11774BC", Offset = "0x11774BC", VA = "0x11774BC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x11773F0", Offset = "0x11773F0", VA = "0x11773F0")]
		private void ItemShopOnShopRefreshed(ItemShop sender, ShopResponse shop)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x117753C", Offset = "0x117753C", VA = "0x117753C")]
		private void OpenStoreButtonPressed()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x11776F4", Offset = "0x11776F4", VA = "0x11776F4")]
		public StoreBanner()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class TrainingTab : TabPanel
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MapSelectList _mapSelect;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UiMods _modsUi;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UiSlider BotCountSlider;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UiSlider MatchLengthSlider;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Toggle BotDiffEasy;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle BotDiffNormal;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle BotDiffHard;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ServerPreview _serverPreview;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CanvasGroup _modifiersGroup;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _previewedMap;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _preferedBotCount;

		[Token(Token = "0x1700017C")]
		public MapSelectList MapSelect
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x11776FC", Offset = "0x11776FC", VA = "0x11776FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1177704", Offset = "0x1177704", VA = "0x1177704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1177800", Offset = "0x1177800", VA = "0x1177800", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1177BC0", Offset = "0x1177BC0", VA = "0x1177BC0", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1177CE0", Offset = "0x1177CE0", VA = "0x1177CE0")]
		private void OnSetBotCount(int count)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1177CE8", Offset = "0x1177CE8", VA = "0x1177CE8")]
		private void OnSetEasy(bool isOn)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1177D48", Offset = "0x1177D48", VA = "0x1177D48")]
		private void OnSetNormal(bool isOn)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1177DAC", Offset = "0x1177DAC", VA = "0x1177DAC")]
		private void OnSetHard(bool isOn)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1177E10", Offset = "0x1177E10", VA = "0x1177E10")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x117815C", Offset = "0x117815C", VA = "0x117815C")]
		public TrainingTab()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class XrKeybindsMenu : MonoBehaviour
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeybindElement _keybindElementPrefab;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _container;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _content;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<KeybindElement> _elements;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _isWaitingForKeypress;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeybindElement _currentElement;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XrKeybinds _keybinds;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableInput;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1178174", Offset = "0x1178174", VA = "0x1178174")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x11782D4", Offset = "0x11782D4", VA = "0x11782D4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x11787B4", Offset = "0x11787B4", VA = "0x11787B4")]
		public void OnRebindKeyPressed(KeybindElement element)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x11787E8", Offset = "0x11787E8", VA = "0x11787E8")]
		private void OnClearPressed(KeybindElement element)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1178930", Offset = "0x1178930", VA = "0x1178930")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1178B50", Offset = "0x1178B50", VA = "0x1178B50")]
		private void RefreshAllElements()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1178C88", Offset = "0x1178C88", VA = "0x1178C88")]
		public void OnDefaultKeybindsPressed()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1178CC0", Offset = "0x1178CC0", VA = "0x1178CC0")]
		public void OnDefaultLeftHandedKeybindsPressed()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1178CF8", Offset = "0x1178CF8", VA = "0x1178CF8")]
		public XrKeybindsMenu()
		{
		}
	}
}
namespace HyperDash.UI.MainMenu.Statistics
{
	[Token(Token = "0x200028B")]
	public class GameModeStatHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _titleText;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StatObject _winsObject;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StatObject _lossesObject;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StatObject _drawsObject;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StatObject _winLossObject;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FormerlySerializedAs("_dominationCapturesObject")]
		[SerializeField]
		private StatObject _capturesObject;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StatObject _dominationCountersObject;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StatObject _payloadPushObject;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StatObject _ballGoalsObject;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StatObject _ctfReturnsObject;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StatObject _eliminationSurvivalrateObject;

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1176A28", Offset = "0x1176A28", VA = "0x1176A28")]
		public void SetData(MatchTypes matchType, StatisticsModeResponse data, StatisticsChildResponse dataStatistics)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1178DAC", Offset = "0x1178DAC", VA = "0x1178DAC")]
		public GameModeStatHandler()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class GeneralStatsHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatObject _killsObject;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StatObject _deathsObject;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StatObject _kdObject;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StatObject _damageObject;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StatObject _totalGamesObject;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StatObject _playTimeObject;

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1176458", Offset = "0x1176458", VA = "0x1176458")]
		public void SetData(StatisticsChildResponse data)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1178DB4", Offset = "0x1178DB4", VA = "0x1178DB4")]
		public GeneralStatsHandler()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class GunStatsHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _titleText;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StatObject _killsObject;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StatObject _damageObject;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StatObject _shotsObject;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StatObject _accuracyObject;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StatObject _headshotAccuracyObject;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1176800", Offset = "0x1176800", VA = "0x1176800")]
		public void SetData(WeaponTypes weapon, StatisticsWeaponResponse data)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x1178DBC", Offset = "0x1178DBC", VA = "0x1178DBC")]
		public GunStatsHandler()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class StatObject : MonoBehaviour
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _dataText;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1178D88", Offset = "0x1178D88", VA = "0x1178D88")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1178DC4", Offset = "0x1178DC4", VA = "0x1178DC4")]
		public StatObject()
		{
		}
	}
}
namespace HyperDash.UI.Login_screen
{
	[Token(Token = "0x200028F")]
	public class LoginErrorView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _errorIcon;

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1178DCC", Offset = "0x1178DCC", VA = "0x1178DCC", Slot = "7")]
		public override void Show([Optional] Action callback)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1178E94", Offset = "0x1178E94", VA = "0x1178E94", Slot = "4")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x117904C", Offset = "0x117904C", VA = "0x117904C")]
		public LoginErrorView()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class LoginFormView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_InputField _usernameField;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_InputField _passwordField;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _submitButton;

		[Token(Token = "0x1700017D")]
		public string UserName
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x1179054", Offset = "0x1179054", VA = "0x1179054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public string Password
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x1179070", Offset = "0x1179070", VA = "0x1179070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x117908C", Offset = "0x117908C", VA = "0x117908C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1179144", Offset = "0x1179144", VA = "0x1179144", Slot = "6")]
		protected override void SetInteractable(bool enable)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x11791A0", Offset = "0x11791A0", VA = "0x11791A0")]
		public LoginFormView()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class LoginLoadingView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _loadingIcon;

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x11791A8", Offset = "0x11791A8", VA = "0x11791A8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x11791AC", Offset = "0x11791AC", VA = "0x11791AC")]
		private void RotateIcon()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1179254", Offset = "0x1179254", VA = "0x1179254")]
		public LoginLoadingView()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class LoginSuccesView : HyperDash.UI.OLD.AnimatedView
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _successIcon;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _userNameText;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x117925C", Offset = "0x117925C", VA = "0x117925C")]
		public void SetUserName(string userName)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1179280", Offset = "0x1179280", VA = "0x1179280", Slot = "7")]
		public override void Show(Action callback)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1179348", Offset = "0x1179348", VA = "0x1179348")]
		public LoginSuccesView()
		{
		}
	}
}
namespace HyperDash.UI.InGameMenu
{
	[Token(Token = "0x2000293")]
	public class AdminTools : MonoBehaviour
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _goToLobbyButton;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isPlayableMatch;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Practice")]
		private GameObject _practiveGroup;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle _disableShootingToggle;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle _botsIdleToggle;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle _forceOvertime;

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1179350", Offset = "0x1179350", VA = "0x1179350")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x1179488", Offset = "0x1179488", VA = "0x1179488")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x117952C", Offset = "0x117952C", VA = "0x117952C")]
		private void NetPlayerDataOnAdminChangedEvent(bool isAdmin, string arg2)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x11795A0", Offset = "0x11795A0", VA = "0x11795A0")]
		public void ReturnToLobby()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x11797F4", Offset = "0x11797F4", VA = "0x11797F4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x11798F8", Offset = "0x11798F8", VA = "0x11798F8")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1179884", Offset = "0x1179884", VA = "0x1179884")]
		private void SetPlayableMatch(bool isPlayable)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x11796F0", Offset = "0x11796F0", VA = "0x11796F0")]
		private void SetPracticeSettings(bool _)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1179A0C", Offset = "0x1179A0C", VA = "0x1179A0C")]
		public AdminTools()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[DefaultExecutionOrder(1000)]
	public class InGameMenuUIManager : UIManager
	{
		[Token(Token = "0x2000295")]
		[CompilerGenerated]
		private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InGameMenuUIManager <>4__this;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3A")]
				[Address(RVA = "0x117A818", Offset = "0x117A818", VA = "0x117A818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0x117A860", Offset = "0x117A860", VA = "0x117A860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1179C98", Offset = "0x1179C98", VA = "0x1179C98")]
			[DebuggerHidden]
			public <Start>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x117A718", Offset = "0x117A718", VA = "0x117A718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x117A71C", Offset = "0x117A71C", VA = "0x117A71C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x117A820", Offset = "0x117A820", VA = "0x117A820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Canvas _overrideCanvas;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GraphicsRaycasterSwitcher _graphicsRaycasterSwitcher;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _root;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer _backgroundQuad;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AdminTools _adminTools;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _mutatorsRoot;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InGameMenuUIManager _instance;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _inGameMenuVisible;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameManager _gameManager;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _defaultParent;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _localPosition;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion _localRotation;

		[Token(Token = "0x1700017F")]
		public bool IsOpen
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x1179A14", Offset = "0x1179A14", VA = "0x1179A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public static InGameMenuUIManager Instance
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x1179A1C", Offset = "0x1179A1C", VA = "0x1179A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1179AF0", Offset = "0x1179AF0", VA = "0x1179AF0", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1179C24", Offset = "0x1179C24", VA = "0x1179C24")]
		[IteratorStateMachine(typeof(<Start>d__17))]
		protected IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1179CC0", Offset = "0x1179CC0", VA = "0x1179CC0")]
		private void SetCanvas(bool enable)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1179D04", Offset = "0x1179D04", VA = "0x1179D04")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1179F8C", Offset = "0x1179F8C", VA = "0x1179F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x117A008", Offset = "0x117A008", VA = "0x117A008", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x117A468", Offset = "0x117A468", VA = "0x117A468")]
		public void ShowReportFlow()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x117A554", Offset = "0x117A554", VA = "0x117A554")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x117A12C", Offset = "0x117A12C", VA = "0x117A12C")]
		public void ShowInGameMenu()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1179E24", Offset = "0x1179E24", VA = "0x1179E24")]
		public void HideInGameMenu()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x117A710", Offset = "0x117A710", VA = "0x117A710")]
		public InGameMenuUIManager()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class InGameMenuView : AnimatedView
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _menuRoot;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform _subMenuParent;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform _subMenuRoot;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _rootDropShadow;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _pingText;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI _aliasedPingText;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI _relayConnectionText;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button _switchTeamButton;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button _quitButton;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TabHandler _tabHandler;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TextMeshProUGUI _serverNameText;

		[Token(Token = "0x4000EA6")]
		private const float AnimationSpeed = 0.4f;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int TabOverload;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _startOverload;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x117A868", Offset = "0x117A868", VA = "0x117A868")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x117A534", Offset = "0x117A534", VA = "0x117A534")]
		public void ShowReportTab()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x117A504", Offset = "0x117A504", VA = "0x117A504")]
		public void HideTab(int tabIndex)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x117A51C", Offset = "0x117A51C", VA = "0x117A51C")]
		public void ShowTab(int tabIndex)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x117AC18", Offset = "0x117AC18", VA = "0x117AC18", Slot = "6")]
		public override void Show(bool useTransition = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x117A6F0", Offset = "0x117A6F0", VA = "0x117A6F0")]
		public void FastHide()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x117B42C", Offset = "0x117B42C", VA = "0x117B42C")]
		private void ResetRects()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x117B5F4", Offset = "0x117B5F4", VA = "0x117B5F4")]
		private void AnimateOpen()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x117B7D0", Offset = "0x117B7D0", VA = "0x117B7D0")]
		private void AnimateClose()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x117B9D8", Offset = "0x117B9D8", VA = "0x117B9D8")]
		public void QuitMatchPressed()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x117BA34", Offset = "0x117BA34", VA = "0x117BA34")]
		public void SwitchTeamPressed()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x117BAB4", Offset = "0x117BAB4", VA = "0x117BAB4")]
		public InGameMenuView()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class LeaderboardElement : MonoBehaviour
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform RootBackground;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform RootLevel;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform RootText;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _levelObject;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _levelText;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Stats")]
		private TextMeshProUGUI _nameText;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _killsText;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _deathsText;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _scoreText;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _platformImage;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image _boughtGameImage;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image _bacgroundImage;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _highLightImage;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image _teamcolorImage;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Voice")]
		[SerializeField]
		private Button _voiceButton;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image _voiceTalking;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image _voiceNotTalking;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image _voiceMuted;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image _voiceNotInChannel;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform _contextMenuPosition;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private CanvasGroup _speakerGroup;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Ping")]
		[SerializeField]
		private Image _pingImage;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Sprite[] _pingSprites;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Header("Reporting")]
		private bool _isUserReportingElement;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject _reportButton;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ReportPanel _reportPanel;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool ShowScore;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool _isHighLighted;

		[Token(Token = "0x17000183")]
		public NetPlayerData.PlayerStats PlayerStats
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x117BAE8", Offset = "0x117BAE8", VA = "0x117BAE8")]
			[CompilerGenerated]
			get
			{
				return default(NetPlayerData.PlayerStats);
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x117BAF8", Offset = "0x117BAF8", VA = "0x117BAF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x117BB1C", Offset = "0x117BB1C", VA = "0x117BB1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x117C028", Offset = "0x117C028", VA = "0x117C028")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x117C164", Offset = "0x117C164", VA = "0x117C164")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x117C208", Offset = "0x117C208", VA = "0x117C208")]
		public void SetData(NetPlayerData.PlayerStats stats, int localPlayerID)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x117BD88", Offset = "0x117BD88", VA = "0x117BD88")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x117C88C", Offset = "0x117C88C", VA = "0x117C88C")]
		public void UpdateVoiceIndicator(IndicatorStatus status, bool inSharedChannel)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x117CA20", Offset = "0x117CA20", VA = "0x117CA20")]
		public void OnToggleVoiceMute()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x117CAF4", Offset = "0x117CAF4", VA = "0x117CAF4")]
		public void SelfPressed()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x117CD30", Offset = "0x117CD30", VA = "0x117CD30")]
		public void ReportPressed()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x117D084", Offset = "0x117D084", VA = "0x117D084")]
		public LeaderboardElement()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class LeaderboardPanel : MonoBehaviour
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LeaderboardElement> _elements;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _teamScore;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _teamNameText;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _localPlayerID;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _teamScoreValue;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _teamScoreFormat;

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x117D08C", Offset = "0x117D08C", VA = "0x117D08C")]
		public void SetTeamName(string teamName)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x117D0B0", Offset = "0x117D0B0", VA = "0x117D0B0")]
		public void SetData(List<NetPlayerData.PlayerStats> teamList, int localPlayerID)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x117D1E8", Offset = "0x117D1E8", VA = "0x117D1E8")]
		public void SetScore(int teamScore, string format = "{0}")
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x117D2D4", Offset = "0x117D2D4", VA = "0x117D2D4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x117D464", Offset = "0x117D464", VA = "0x117D464")]
		public LeaderboardPanel()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class LeaderboardTab : TabPanel
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _teamPanels;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LeaderboardPanel _redTeamPanel;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LeaderboardPanel _blueTeamPanel;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LeaderboardPanel _freeForAllPanel;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<NetPlayerData.PlayerStats> _team0;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<NetPlayerData.PlayerStats> _team1;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<NetPlayerData.PlayerStats> _ffa;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isTeamBased;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private MatchTypes _matchType;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _localPlayerID;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastTeamScoreUpdateTime;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _lastRankingUpdateTime;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float IngameMenuUpdateScoreInterval;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float IngameMenuUpdateRankingInterval;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x117D46C", Offset = "0x117D46C", VA = "0x117D46C", Slot = "5")]
		protected override void Show()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x117DAB0", Offset = "0x117DAB0", VA = "0x117DAB0", Slot = "6")]
		protected override void Hide()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x117D894", Offset = "0x117D894", VA = "0x117D894")]
		private void SetupHeader(MatchTypes matchType)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x117D778", Offset = "0x117D778", VA = "0x117D778")]
		private void SetupPanel(bool isTeamBased)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x117DC0C", Offset = "0x117DC0C", VA = "0x117DC0C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x117DD48", Offset = "0x117DD48", VA = "0x117DD48")]
		private void OnScoringUpdatedEvent(NetPlayerData sender, NetPlayerData.TeamScoringUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x117DDB4", Offset = "0x117DDB4", VA = "0x117DDB4")]
		private void OnRankingUpdatedEvent(NetPlayerData sender, NetPlayerData.RankingUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x117E420", Offset = "0x117E420", VA = "0x117E420")]
		private void OnNamesUpdatedEvent(NetPlayerData sender, NetPlayerData.NamesUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x117DE00", Offset = "0x117DE00", VA = "0x117DE00")]
		private void UpdateTeamList(NetPlayerData sender, List<int> playerList)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x117E1A0", Offset = "0x117E1A0", VA = "0x117E1A0")]
		private void UpdateFFAList(NetPlayerData sender, List<int> playerList)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x117E430", Offset = "0x117E430", VA = "0x117E430")]
		public LeaderboardTab()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class PlayerContextMenu : MonoBehaviour
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ReportPanel _reportPanel;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _volumeGroup;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider _volumeSlider;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _muteButton;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _kickOption;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _banOption;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _transferAdminOption;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _addFriendOption;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerContextMenu _instance;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetPlayerData.PlayerStats _player;

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x117E570", Offset = "0x117E570", VA = "0x117E570")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x117CC34", Offset = "0x117CC34", VA = "0x117CC34")]
		public static void Open(Vector3 position, NetPlayerData.PlayerStats player)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x117C168", Offset = "0x117C168", VA = "0x117C168")]
		public static void Close()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x117E664", Offset = "0x117E664", VA = "0x117E664")]
		private void OpenInternal(Vector3 position, NetPlayerData.PlayerStats player)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x117EB4C", Offset = "0x117EB4C", VA = "0x117EB4C")]
		private void CloseInternal()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x117EC10", Offset = "0x117EC10", VA = "0x117EC10")]
		public void ReportPressed()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x117EC6C", Offset = "0x117EC6C", VA = "0x117EC6C")]
		public void MutePressed()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x117ED48", Offset = "0x117ED48", VA = "0x117ED48")]
		private void OnVolumeChanges(float arg0)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x117EEA4", Offset = "0x117EEA4", VA = "0x117EEA4")]
		private void InputEventsOnPressedEvent(InputEvents.PressedArgs eventargs)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x117EFF4", Offset = "0x117EFF4", VA = "0x117EFF4")]
		public void KickPressed()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x117F050", Offset = "0x117F050", VA = "0x117F050")]
		public void BanPressed()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x117F0AC", Offset = "0x117F0AC", VA = "0x117F0AC")]
		public void TransferAdmin()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x117F0F8", Offset = "0x117F0F8", VA = "0x117F0F8")]
		public void AddFriend()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x117F208", Offset = "0x117F208", VA = "0x117F208")]
		public PlayerContextMenu()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ReportOptionElement : MonoBehaviour
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle _toggle;

		[Token(Token = "0x17000184")]
		public ReportOption Option
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x117F210", Offset = "0x117F210", VA = "0x117F210")]
			[CompilerGenerated]
			get
			{
				return default(ReportOption);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x117F218", Offset = "0x117F218", VA = "0x117F218")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public Toggle Toggle
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x117F220", Offset = "0x117F220", VA = "0x117F220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x117F228", Offset = "0x117F228", VA = "0x117F228")]
		public void SetData(ReportOption option)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x117F32C", Offset = "0x117F32C", VA = "0x117F32C")]
		public void RefreshData()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x117F424", Offset = "0x117F424", VA = "0x117F424")]
		public ReportOptionElement()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class ReportPanel : MonoBehaviour
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _titleText;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _playerIdText;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ReportOptionElement _template;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _reportButton;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ReportOptionElement> _elements;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetPlayerData.PlayerStats _player;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<ReportOption> _options;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string _previousReport;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x117F42C", Offset = "0x117F42C", VA = "0x117F42C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x117F648", Offset = "0x117F648", VA = "0x117F648")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x117F4D8", Offset = "0x117F4D8", VA = "0x117F4D8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x117F6EC", Offset = "0x117F6EC", VA = "0x117F6EC")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x117F774", Offset = "0x117F774", VA = "0x117F774")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x117CEB8", Offset = "0x117CEB8", VA = "0x117CEB8")]
		public void Show(NetPlayerData.PlayerStats player)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x117F798", Offset = "0x117F798", VA = "0x117F798")]
		public void ReportPressed()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x117FA58", Offset = "0x117FA58", VA = "0x117FA58")]
		public void CancelPressed()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x117F998", Offset = "0x117F998", VA = "0x117F998")]
		private void Close()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x117FA5C", Offset = "0x117FA5C", VA = "0x117FA5C")]
		public void CheckReportButtonStatus()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x117FB0C", Offset = "0x117FB0C", VA = "0x117FB0C")]
		public ReportPanel()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class SettingsTab : TabPanel
	{
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x117FC10", Offset = "0x117FC10", VA = "0x117FC10")]
		public SettingsTab()
		{
		}
	}
}
namespace HyperDash.UI.Elements
{
	[Token(Token = "0x200029E")]
	[RequireComponent(typeof(Button))]
	public abstract class AnimatedButton : MonoBehaviour
	{
		[Token(Token = "0x200029F")]
		private enum State
		{
			[Token(Token = "0x4000EF5")]
			None,
			[Token(Token = "0x4000EF6")]
			Default,
			[Token(Token = "0x4000EF7")]
			Selected
		}

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _offlineModeTabOverride;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private State _currentState;

		[Token(Token = "0x17000186")]
		public bool OfflineModeTabOverride
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x117FC20", Offset = "0x117FC20", VA = "0x117FC20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x117FC28", Offset = "0x117FC28", VA = "0x117FC28")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x117FC64", Offset = "0x117FC64", VA = "0x117FC64")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E8B")]
		protected abstract void HoverStartAnim();

		[Token(Token = "0x6000E8C")]
		protected abstract void HoverEndAnim();

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x117FCA0", Offset = "0x117FCA0", VA = "0x117FCA0")]
		public void SetSelect(bool selected)
		{
		}

		[Token(Token = "0x6000E8E")]
		protected abstract void SelectAnim();

		[Token(Token = "0x6000E8F")]
		protected abstract void DeselectAnim();

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x117FCE4", Offset = "0x117FCE4", VA = "0x117FCE4")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x117FD04", Offset = "0x117FD04", VA = "0x117FD04")]
		protected AnimatedButton()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[RequireComponent(typeof(Button))]
	public class HoldButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _defaultColor;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[FormerlySerializedAs("_backgroundColor")]
		[SerializeField]
		private Color _downColor;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _remainingColor;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIGradient _gradient;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _downTime;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isDown;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _clicked;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Gradient _gradientObject;

		[Token(Token = "0x14000027")]
		public event Action ClickedEvent
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x117FD0C", Offset = "0x117FD0C", VA = "0x117FD0C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x117FDA8", Offset = "0x117FDA8", VA = "0x117FDA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x117FE44", Offset = "0x117FE44", VA = "0x117FE44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x118002C", Offset = "0x118002C", VA = "0x118002C", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1180138", Offset = "0x1180138", VA = "0x1180138", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1180154", Offset = "0x1180154", VA = "0x1180154", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1180170", Offset = "0x1180170", VA = "0x1180170")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1180040", Offset = "0x1180040", VA = "0x1180040")]
		private void SetColorGradient(float f)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1180358", Offset = "0x1180358", VA = "0x1180358")]
		public HoldButton()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[RequireComponent(typeof(TMP_InputField))]
	public class InputFieldScroll : MonoBehaviour
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField _inputField;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1180360", Offset = "0x1180360", VA = "0x1180360")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x118043C", Offset = "0x118043C", VA = "0x118043C")]
		public void OnTextChanged(string arg0)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x118048C", Offset = "0x118048C", VA = "0x118048C")]
		public InputFieldScroll()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class MenuAnimatedButton : AnimatedButton
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _baseColor;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _accentColor;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _foregroundRect;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _backgroundImage;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image _foregroundImage;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image _arrow;

		[Token(Token = "0x4000F0B")]
		private const float AnimationSpeed = 0.1f;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence _hoverTween;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence _hoverEndTween;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Sequence _selectTween;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1180494", Offset = "0x1180494", VA = "0x1180494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x118071C", Offset = "0x118071C", VA = "0x118071C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1180758", Offset = "0x1180758", VA = "0x1180758", Slot = "4")]
		protected override void HoverStartAnim()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x118076C", Offset = "0x118076C", VA = "0x118076C", Slot = "5")]
		protected override void HoverEndAnim()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1180780", Offset = "0x1180780", VA = "0x1180780", Slot = "6")]
		protected override void SelectAnim()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x11807F8", Offset = "0x11807F8", VA = "0x11807F8", Slot = "7")]
		protected override void DeselectAnim()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1180838", Offset = "0x1180838", VA = "0x1180838")]
		public MenuAnimatedButton()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class MultiplayerAnimatedButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultiplayerTab _multiplayerTab;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] _textComponents;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _maskRect;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _imageRect;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _hoverColor;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000F17")]
		private const float AnimationSpeed = 0.2f;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence _idleTween;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence _unselectTween;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence _selectTween;

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1180840", Offset = "0x1180840", VA = "0x1180840")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1180844", Offset = "0x1180844", VA = "0x1180844")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1180994", Offset = "0x1180994", VA = "0x1180994", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1180B40", Offset = "0x1180B40", VA = "0x1180B40")]
		private void ClearTweens()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1180BA4", Offset = "0x1180BA4", VA = "0x1180BA4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1180BD8", Offset = "0x1180BD8", VA = "0x1180BD8")]
		public void SetUnselected()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1180D54", Offset = "0x1180D54", VA = "0x1180D54")]
		public void SetIdle()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1180EB8", Offset = "0x1180EB8", VA = "0x1180EB8")]
		public void SetInteractable(bool value)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1180F38", Offset = "0x1180F38", VA = "0x1180F38")]
		public MultiplayerAnimatedButton()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class NewsAnimatedButton : AnimatedButton
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _baseColor;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _accentColor;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _foregroundRect;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _foregroundImage;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000F20")]
		private const float AnimationSpeed = 0.1f;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence _hoverTween;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence _hoverEndTween;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1180F40", Offset = "0x1180F40", VA = "0x1180F40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x11810EC", Offset = "0x11810EC", VA = "0x11810EC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1181118", Offset = "0x1181118", VA = "0x1181118", Slot = "4")]
		protected override void HoverStartAnim()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x118112C", Offset = "0x118112C", VA = "0x118112C", Slot = "5")]
		protected override void HoverEndAnim()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1181140", Offset = "0x1181140", VA = "0x1181140", Slot = "6")]
		protected override void SelectAnim()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1181144", Offset = "0x1181144", VA = "0x1181144", Slot = "7")]
		protected override void DeselectAnim()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1181150", Offset = "0x1181150", VA = "0x1181150")]
		public NewsAnimatedButton()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TabHandler : MonoBehaviour
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<AnimatedButton> _buttons;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TabPanel> _tabs;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TabPanel _offlineTabPanel;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _Buttons;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _isIngameMenu;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentIndex;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ShowBackground;

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1181158", Offset = "0x1181158", VA = "0x1181158")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x117ABA0", Offset = "0x117ABA0", VA = "0x117ABA0")]
		public void HideButton(int tabIndex)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x117ABDC", Offset = "0x117ABDC", VA = "0x117ABDC")]
		public void ShowButton(int tabIndex)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x117AB98", Offset = "0x117AB98", VA = "0x117AB98")]
		public void SelectTab(int index)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x117B098", Offset = "0x117B098", VA = "0x117B098")]
		public void SelectTab(int index, bool force)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1181248", Offset = "0x1181248", VA = "0x1181248")]
		public TabHandler()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class TabPanel : MonoBehaviour
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas _tabCanvas;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GraphicsRaycasterSwitcher _graphicsRaycasterSwitcher;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ShowBackground;

		[Token(Token = "0x17000187")]
		public bool IsVisible
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x1178114", Offset = "0x1178114", VA = "0x1178114")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000188")]
		public Canvas TabCanvas
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x11812A4", Offset = "0x11812A4", VA = "0x11812A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x11812AC", Offset = "0x11812AC", VA = "0x11812AC", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x11811E8", Offset = "0x11811E8", VA = "0x11811E8")]
		public void SetVisible(bool value, bool force = false)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1177B6C", Offset = "0x1177B6C", VA = "0x1177B6C", Slot = "5")]
		protected virtual void Show()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1177C8C", Offset = "0x1177C8C", VA = "0x1177C8C", Slot = "6")]
		protected virtual void Hide()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x11812FC", Offset = "0x11812FC", VA = "0x11812FC", Slot = "7")]
		public virtual void OnSelect()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1177234", Offset = "0x1177234", VA = "0x1177234")]
		public TabPanel()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class TopAnimatedButton : AnimatedButton
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _selectedColor;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _deselectedColor;

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1181300", Offset = "0x1181300", VA = "0x1181300", Slot = "4")]
		protected override void HoverStartAnim()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1181304", Offset = "0x1181304", VA = "0x1181304", Slot = "5")]
		protected override void HoverEndAnim()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1181308", Offset = "0x1181308", VA = "0x1181308", Slot = "6")]
		protected override void SelectAnim()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1181340", Offset = "0x1181340", VA = "0x1181340", Slot = "7")]
		protected override void DeselectAnim()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1181378", Offset = "0x1181378", VA = "0x1181378")]
		public TopAnimatedButton()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[RequireComponent(typeof(TMP_InputField))]
	public class VrInputFieldHandler : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20002A9")]
		public enum InputType
		{
			[Token(Token = "0x4000F33")]
			Any,
			[Token(Token = "0x4000F34")]
			PlayerNickname,
			[Token(Token = "0x4000F35")]
			ClanTag,
			[Token(Token = "0x4000F36")]
			Password
		}

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_InputField _inputField;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputType _inputType;

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1181380", Offset = "0x1181380", VA = "0x1181380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x11814E0", Offset = "0x11814E0", VA = "0x11814E0")]
		public char OnValidateInput(string text, int charIndex, char addedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x11814F0", Offset = "0x11814F0", VA = "0x11814F0", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x11815D8", Offset = "0x11815D8", VA = "0x11815D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x11816C0", Offset = "0x11816C0", VA = "0x11816C0", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x11816C4", Offset = "0x11816C4", VA = "0x11816C4")]
		public VrInputFieldHandler()
		{
		}
	}
}
namespace HyperDash.UI.ArmDisplay
{
	[Token(Token = "0x20002AA")]
	public class ArmAlivePlayersDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] _redAliveTexts;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] _blueAliveTexts;

		[Token(Token = "0x4000F39")]
		private const string AliveChar = "-";

		[Token(Token = "0x4000F3A")]
		private const string DeadChar = "X";

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool[] _teamRedIsDead;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] _teamBlueIsDead;

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x11816CC", Offset = "0x11816CC", VA = "0x11816CC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x11818C8", Offset = "0x11818C8", VA = "0x11818C8")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1181D94", Offset = "0x1181D94", VA = "0x1181D94")]
		public ArmAlivePlayersDisplay()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[DefaultExecutionOrder(100000)]
	public class ArmDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _root;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HealthBar _healthBar;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DashBar _dashBar;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ArmorBar _armorBar;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _default;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _controlPointScore;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _payloadDisplay;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _dominationDisplay;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _deathmatchDisplay;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _CTFDisplay;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _ballmatchDisplay;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _eliminationDisplay;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _teamDeadmatchDisplay;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _pingDisplay;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3 _controllerRotationOffset;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector3 _controllerLocalOffset;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MatchTypes _currentDisplayMode;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _hasCharacter;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1181E68", Offset = "0x1181E68", VA = "0x1181E68")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1182078", Offset = "0x1182078", VA = "0x1182078")]
		private void OnControlOfCharacterGained(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1182288", Offset = "0x1182288", VA = "0x1182288")]
		private void OnControlOfCharacterLost()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x11822E8", Offset = "0x11822E8", VA = "0x11822E8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x118253C", Offset = "0x118253C", VA = "0x118253C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1181EF8", Offset = "0x1181EF8", VA = "0x1181EF8")]
		public void ChangeDisplay(MatchTypes type)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x11829F4", Offset = "0x11829F4", VA = "0x11829F4")]
		public ArmDisplay()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ArmorBar : MonoBehaviour
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _percentIDHash;

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x11829FC", Offset = "0x11829FC", VA = "0x11829FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1182A84", Offset = "0x1182A84", VA = "0x1182A84")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x11821F8", Offset = "0x11821F8", VA = "0x11821F8")]
		public void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1182BBC", Offset = "0x1182BBC", VA = "0x1182BBC")]
		public ArmorBar()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class ArmScoreDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] _scoreTexts;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Performance.FormatType _format;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _cashedScores;

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1182C14", Offset = "0x1182C14", VA = "0x1182C14")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1182DCC", Offset = "0x1182DCC", VA = "0x1182DCC")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x118300C", Offset = "0x118300C", VA = "0x118300C")]
		public ArmScoreDisplay()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class CTFArmDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _timer;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1183078", Offset = "0x1183078", VA = "0x1183078")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1183098", Offset = "0x1183098", VA = "0x1183098")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x118309C", Offset = "0x118309C", VA = "0x118309C")]
		public CTFArmDisplay()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class DashBar : MonoBehaviour
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _percentIDHash;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int _segmentsIDHash;

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x11830A4", Offset = "0x11830A4", VA = "0x11830A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1183114", Offset = "0x1183114", VA = "0x1183114")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1182168", Offset = "0x1182168", VA = "0x1182168")]
		public void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x118322C", Offset = "0x118322C", VA = "0x118322C")]
		public DashBar()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class DeathmatchDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _rankText;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _rankNumberText;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _killsText;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _killsMaxText;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 Offset99;

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x11832B0", Offset = "0x11832B0", VA = "0x11832B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x118343C", Offset = "0x118343C", VA = "0x118343C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x11834E0", Offset = "0x11834E0", VA = "0x11834E0")]
		private void OnRankingUpdatedEvent(NetPlayerData sender, NetPlayerData.RankingUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x11837F8", Offset = "0x11837F8", VA = "0x11837F8")]
		public DeathmatchDisplay()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class DominationPointsDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _neutralPoints;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _bluePoints;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _redPoints;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] _scalePoints;

		[Token(Token = "0x4000F64")]
		private const float OwnTeamScale = 1.2f;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasCharacter;

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1183854", Offset = "0x1183854", VA = "0x1183854")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1183B64", Offset = "0x1183B64", VA = "0x1183B64")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x11840E0", Offset = "0x11840E0", VA = "0x11840E0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x11842A4", Offset = "0x11842A4", VA = "0x11842A4")]
		private void OnControlOfCharacterGained(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x11842A8", Offset = "0x11842A8", VA = "0x11842A8")]
		private void OnControlOfCharacterLost(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1183A18", Offset = "0x1183A18", VA = "0x1183A18")]
		public void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1184334", Offset = "0x1184334", VA = "0x1184334")]
		private void OnCharactereChangedTeam(NetCharacterBehaviour sender)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1183D38", Offset = "0x1183D38", VA = "0x1183D38")]
		private void SetupPoints()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1184338", Offset = "0x1184338", VA = "0x1184338")]
		private void OnPointChangedTeam(int pointIndex, Teams team)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1184540", Offset = "0x1184540", VA = "0x1184540")]
		private void OnPointChangedEnabled(int pointIndex, bool isEnabled)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x118458C", Offset = "0x118458C", VA = "0x118458C")]
		public DominationPointsDisplay()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class DominationPointsDisplayCanvas : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B3")]
		private struct CapturepointUI
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Image _image;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private TextMeshProUGUI _text;

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1185058", Offset = "0x1185058", VA = "0x1185058")]
			public void SetEnabled(bool enabled)
			{
			}

			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1184F94", Offset = "0x1184F94", VA = "0x1184F94")]
			public void SetTeam(Teams team)
			{
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x118509C", Offset = "0x118509C", VA = "0x118509C")]
			public void SetScale(float scale)
			{
			}
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CapturepointUI[] _points;

		[Token(Token = "0x4000F68")]
		private const float OwnTeamScale = 1.2f;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasCharacter;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1184594", Offset = "0x1184594", VA = "0x1184594")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x11848A4", Offset = "0x11848A4", VA = "0x11848A4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1184D3C", Offset = "0x1184D3C", VA = "0x1184D3C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1184F00", Offset = "0x1184F00", VA = "0x1184F00")]
		private void OnControlOfCharacterGained(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1184F04", Offset = "0x1184F04", VA = "0x1184F04")]
		private void OnControlOfCharacterLost(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1184758", Offset = "0x1184758", VA = "0x1184758")]
		public void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1184F90", Offset = "0x1184F90", VA = "0x1184F90")]
		private void OnCharactereChangedTeam(NetCharacterBehaviour sender)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1184A78", Offset = "0x1184A78", VA = "0x1184A78")]
		private void SetupPoints()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1185108", Offset = "0x1185108", VA = "0x1185108")]
		private void OnPointChangedTeam(int pointIndex, Teams team)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x118524C", Offset = "0x118524C", VA = "0x118524C")]
		private void OnPointChangedEnabled(int pointIndex, bool isEnabled)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1185280", Offset = "0x1185280", VA = "0x1185280")]
		public DominationPointsDisplayCanvas()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class FlagLocationDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _startPoint;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _endPoint;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _blueFlag;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _redFlag;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x11852E4", Offset = "0x11852E4", VA = "0x11852E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x11853B4", Offset = "0x11853B4", VA = "0x11853B4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x118530C", Offset = "0x118530C", VA = "0x118530C")]
		public void SetFlagPercent(Transform flag, float percent)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1185450", Offset = "0x1185450", VA = "0x1185450")]
		public FlagLocationDisplay()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class HealthBar : MonoBehaviour
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _percentIDHash;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1185458", Offset = "0x1185458", VA = "0x1185458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x11854C8", Offset = "0x11854C8", VA = "0x11854C8")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x11820D8", Offset = "0x11820D8", VA = "0x11820D8")]
		public void SetCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x11855C0", Offset = "0x11855C0", VA = "0x11855C0")]
		public HealthBar()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class MatchClock : MonoBehaviour
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _timeText1;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _timeText2;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _seconds;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _minutes;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1185618", Offset = "0x1185618", VA = "0x1185618")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x11857F8", Offset = "0x11857F8", VA = "0x11857F8")]
		protected void UpdateClock(int minutes, int seconds)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x11858FC", Offset = "0x11858FC", VA = "0x11858FC")]
		public MatchClock()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class OvertimeDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int _percentIDHash;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x118590C", Offset = "0x118590C", VA = "0x118590C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x118598C", Offset = "0x118598C", VA = "0x118598C")]
		public OvertimeDisplay()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class PayloadArmDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _timer;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _overTime;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _overtimeShowing;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x11859E4", Offset = "0x11859E4", VA = "0x11859E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1185A24", Offset = "0x1185A24", VA = "0x1185A24")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1185AC0", Offset = "0x1185AC0", VA = "0x1185AC0")]
		public PayloadArmDisplay()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class PayloadProgressDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _startPoint;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _checkPoint;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _endPoint;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _marker;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpriteRenderer _markerSpriteRenderer;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite[] _speedSprites;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _visibleSpeed;

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1185AC8", Offset = "0x1185AC8", VA = "0x1185AC8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1185D2C", Offset = "0x1185D2C", VA = "0x1185D2C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1185AF4", Offset = "0x1185AF4", VA = "0x1185AF4")]
		public void SetCheckPoint(float percent)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1185BAC", Offset = "0x1185BAC", VA = "0x1185BAC")]
		public void SetMarkerPercent(float percent)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1185C64", Offset = "0x1185C64", VA = "0x1185C64")]
		private void SetSpeed(int speed)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1185DE4", Offset = "0x1185DE4", VA = "0x1185DE4")]
		public PayloadProgressDisplay()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class TeamDeathmatchDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _rankText;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _rankNumberText;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _killsText;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _killsMaxText;

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1185DF4", Offset = "0x1185DF4", VA = "0x1185DF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1185F80", Offset = "0x1185F80", VA = "0x1185F80")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1186024", Offset = "0x1186024", VA = "0x1186024")]
		private void OnTeamScoringUpdatedEvent(NetPlayerData sender, NetPlayerData.TeamScoringUpdatedArgs eventArgs)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x11862F0", Offset = "0x11862F0", VA = "0x11862F0")]
		public TeamDeathmatchDisplay()
		{
		}
	}
}
namespace HyperDash.Tutorial
{
	[Token(Token = "0x20002BB")]
	public class DashFromRailTutorial : TutorialBase
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint1;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint2;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _arrows;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xF58A28", Offset = "0xF58A28", VA = "0xF58A28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xF58A48", Offset = "0xF58A48", VA = "0xF58A48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xF58C30", Offset = "0xF58C30", VA = "0xF58C30", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xF591E0", Offset = "0xF591E0", VA = "0xF591E0")]
		private void OnCheckPoint1Reached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xF59510", Offset = "0xF59510", VA = "0xF59510")]
		private void OnCheckPoint2Reached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xF595B8", Offset = "0xF595B8", VA = "0xF595B8")]
		private void OnButtonPressed(PedestalButton sender, int PlayerId)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xF596B4", Offset = "0xF596B4", VA = "0xF596B4", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xF59820", Offset = "0xF59820", VA = "0xF59820")]
		public DashFromRailTutorial()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class DashTutorial : TutorialBase
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint[] _checkpoints;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialText _text;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _checkPointsLeft;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine _voiceRoutine;

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xF59B20", Offset = "0xF59B20", VA = "0xF59B20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xF59CA4", Offset = "0xF59CA4", VA = "0xF59CA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xF59CD0", Offset = "0xF59CD0", VA = "0xF59CD0", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xF5A21C", Offset = "0xF5A21C", VA = "0xF5A21C")]
		private void OnCheckpointReached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xF5A37C", Offset = "0xF5A37C", VA = "0xF5A37C")]
		private void OnButtonPressed(PedestalButton sender, int playerID)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xF5A418", Offset = "0xF5A418", VA = "0xF5A418", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xF5A580", Offset = "0xF5A580", VA = "0xF5A580")]
		public DashTutorial()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class DeathMatchTutorial : TutorialBase
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _botGoal;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpawnLocation _botSpawn;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro _playerKillsText;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _score;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _kills;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xF5A798", Offset = "0xF5A798", VA = "0xF5A798")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xF5A7D4", Offset = "0xF5A7D4", VA = "0xF5A7D4", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xF5A9DC", Offset = "0xF5A9DC", VA = "0xF5A9DC")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xF5ABA0", Offset = "0xF5ABA0", VA = "0xF5ABA0", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xF5ABEC", Offset = "0xF5ABEC", VA = "0xF5ABEC")]
		public DeathMatchTutorial()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class MovementTutorial : TutorialBase
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialText _tutorialText;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xF5AF94", Offset = "0xF5AF94", VA = "0xF5AF94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF5AFC0", Offset = "0xF5AFC0", VA = "0xF5AFC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xF5B0FC", Offset = "0xF5B0FC", VA = "0xF5B0FC", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xF5B454", Offset = "0xF5B454", VA = "0xF5B454")]
		private void OnLocalCharacterSpawned(NetCharacterBehaviour localPlayer)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xF5B540", Offset = "0xF5B540", VA = "0xF5B540")]
		private void OnCheckpointReached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xF5B544", Offset = "0xF5B544", VA = "0xF5B544", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xF5B674", Offset = "0xF5B674", VA = "0xF5B674")]
		public MovementTutorial()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class PickupSniperTutorial : TutorialBase
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PickupSpawner _sniperSpawner;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _arrow;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Sounds")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _startClip;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _succesClip;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _reminderVoiceline;

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xF5B940", Offset = "0xF5B940", VA = "0xF5B940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xF5B9A4", Offset = "0xF5B9A4", VA = "0xF5B9A4", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xF5BB5C", Offset = "0xF5BB5C", VA = "0xF5BB5C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xF5BC54", Offset = "0xF5BC54", VA = "0xF5BC54", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xF5BCF0", Offset = "0xF5BCF0", VA = "0xF5BCF0")]
		public PickupSniperTutorial()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class PistolChargeTutorial : TutorialBase
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShootingRange _shootingRange;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialText _chargeText;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _reminderVoiceline;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xF5BE80", Offset = "0xF5BE80", VA = "0xF5BE80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF5BFE0", Offset = "0xF5BFE0", VA = "0xF5BFE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF5C160", Offset = "0xF5C160", VA = "0xF5C160", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF5C584", Offset = "0xF5C584", VA = "0xF5C584")]
		private void OnFinishedShootingRange(ShootingRange sender)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xF5C6E0", Offset = "0xF5C6E0", VA = "0xF5C6E0", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xF5C790", Offset = "0xF5C790", VA = "0xF5C790")]
		public PistolChargeTutorial()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class PistolTutorial : TutorialBase
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShootingRange _shootingRange;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xF5CBF4", Offset = "0xF5CBF4", VA = "0xF5CBF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xF5CC1C", Offset = "0xF5CC1C", VA = "0xF5CC1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xF5CCEC", Offset = "0xF5CCEC", VA = "0xF5CCEC", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xF5CE0C", Offset = "0xF5CE0C", VA = "0xF5CE0C")]
		private void OnFinishedShootingRange(ShootingRange sender)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xF5CF28", Offset = "0xF5CF28", VA = "0xF5CF28", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xF5CFCC", Offset = "0xF5CFCC", VA = "0xF5CFCC")]
		public PistolTutorial()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class RailToRailTutorial : TutorialBase
	{
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint1;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint2;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xF5D248", Offset = "0xF5D248", VA = "0xF5D248")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xF5D380", Offset = "0xF5D380", VA = "0xF5D380", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xF5D58C", Offset = "0xF5D58C", VA = "0xF5D58C")]
		private void OnCheckPoint1Reached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xF5D6B4", Offset = "0xF5D6B4", VA = "0xF5D6B4")]
		private void OnCheckPoint2Reached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xF5D748", Offset = "0xF5D748", VA = "0xF5D748")]
		private void OnButtonPressed(PedestalButton sender, int PlayerId)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xF5D7E4", Offset = "0xF5D7E4", VA = "0xF5D7E4", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xF5D93C", Offset = "0xF5D93C", VA = "0xF5D93C")]
		public RailToRailTutorial()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class ShootingRange : MonoBehaviour
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ShootingRangeTarget[] _targets;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _succesClip;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _targetsLeft;

		[Token(Token = "0x17000199")]
		public bool IsActive
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xF5DCF8", Offset = "0xF5DCF8", VA = "0xF5DCF8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xF5DD00", Offset = "0xF5DD00", VA = "0xF5DD00")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public int TargetsRemaining
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xF5DD0C", Offset = "0xF5DD0C", VA = "0xF5DD0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<ShootingRange> FinishedEvent
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xF5C4D4", Offset = "0xF5C4D4", VA = "0xF5C4D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xF5C0B0", Offset = "0xF5C0B0", VA = "0xF5C0B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<ShootingRange> TargetDestroyedEvent
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xF5DB98", Offset = "0xF5DB98", VA = "0xF5DB98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xF5DC48", Offset = "0xF5DC48", VA = "0xF5DC48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xF5DD14", Offset = "0xF5DD14", VA = "0xF5DD14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xF5DD18", Offset = "0xF5DD18", VA = "0xF5DD18")]
		[ContextMenu("Find targets")]
		public void FindTargetsInChilderen()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xF5C9D8", Offset = "0xF5C9D8", VA = "0xF5C9D8")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xF5BEC8", Offset = "0xF5BEC8", VA = "0xF5BEC8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xF5DF5C", Offset = "0xF5DF5C", VA = "0xF5DF5C")]
		private void OnTargetDestroyed(ShootingRangeTarget sender)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xF5E080", Offset = "0xF5E080", VA = "0xF5E080")]
		public ShootingRange()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class ShootingRangeTarget : MonoBehaviour, IDamageable
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ProjectileTypes _projectileType;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _model;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _damagedModel;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rigidbody[] _damagedRigidBodies;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DamageZone _damageZone;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _explosionForce;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] _damagedBodiesStartPositions;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence _dragTween;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Tween _angularDragTween;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _scale;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _drag;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _angularDrag;

		[Token(Token = "0x1700019D")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xF5E1CC", Offset = "0xF5E1CC", VA = "0xF5E1CC", Slot = "7")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xF5E20C", Offset = "0xF5E20C", VA = "0xF5E20C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public bool IsActive
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xF5E24C", Offset = "0xF5E24C", VA = "0xF5E24C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xF5E254", Offset = "0xF5E254", VA = "0xF5E254")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<ShootingRangeTarget> DestroyedEvent
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xF5DE38", Offset = "0xF5DE38", VA = "0xF5DE38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xF5DD88", Offset = "0xF5DD88", VA = "0xF5DD88")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xF5E260", Offset = "0xF5E260", VA = "0xF5E260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xF5E350", Offset = "0xF5E350", VA = "0xF5E350")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xF5E4B4", Offset = "0xF5E4B4", VA = "0xF5E4B4")]
		private void ResetDamaged()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xF5E6B4", Offset = "0xF5E6B4", VA = "0xF5E6B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xF5E778", Offset = "0xF5E778", VA = "0xF5E778")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xF5E898", Offset = "0xF5E898", VA = "0xF5E898", Slot = "4")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xF5EF68", Offset = "0xF5EF68", VA = "0xF5EF68", Slot = "6")]
		public void LocalExplosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xF5EF6C", Offset = "0xF5EF6C", VA = "0xF5EF6C", Slot = "5")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xF5EF70", Offset = "0xF5EF70", VA = "0xF5EF70")]
		public ShootingRangeTarget()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class SmgTutorial : TutorialBase
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShootingRange _shootingRange;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ButtonSlideAnimation _buttonSlide;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TutorialText _text;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _arrow;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PickupSpawner _uziSpawner1;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PickupSpawner _uziSpawner2;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _cachedTargetsRemaining;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xF5EFD8", Offset = "0xF5EFD8", VA = "0xF5EFD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xF5F05C", Offset = "0xF5F05C", VA = "0xF5F05C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xF5F1C0", Offset = "0xF5F1C0", VA = "0xF5F1C0", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xF5F3CC", Offset = "0xF5F3CC", VA = "0xF5F3CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xF5F4B0", Offset = "0xF5F4B0", VA = "0xF5F4B0")]
		private void OnButtonPressed(PedestalButton sender, int playerId)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xF5F544", Offset = "0xF5F544", VA = "0xF5F544")]
		private void OnFinishedShootingRange(ShootingRange sender)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xF5F6F0", Offset = "0xF5F6F0", VA = "0xF5F6F0", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xF5F7D4", Offset = "0xF5F7D4", VA = "0xF5F7D4")]
		public SmgTutorial()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class SniperTutorial : TutorialBase
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShootingRange _shootingRange;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PickupSpawner _sniperSpawner;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ButtonSlideAnimation _buttonSlide;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _buttonArrow;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xF5F998", Offset = "0xF5F998", VA = "0xF5F998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xF5F9EC", Offset = "0xF5F9EC", VA = "0xF5F9EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xF5FB50", Offset = "0xF5FB50", VA = "0xF5FB50", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xF5FCD4", Offset = "0xF5FCD4", VA = "0xF5FCD4")]
		private void OnFinishedShootingRange(ShootingRange sender)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xF5FE50", Offset = "0xF5FE50", VA = "0xF5FE50")]
		private void OnButtonPressed(PedestalButton sender, int playerId)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xF5FEE4", Offset = "0xF5FEE4", VA = "0xF5FEE4", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xF5FFF0", Offset = "0xF5FFF0", VA = "0xF5FFF0")]
		public SniperTutorial()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class SprintTutorial : TutorialBase
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialText _tutorialText;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xF60160", Offset = "0xF60160", VA = "0xF60160")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xF6018C", Offset = "0xF6018C", VA = "0xF6018C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xF6025C", Offset = "0xF6025C", VA = "0xF6025C", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xF60524", Offset = "0xF60524", VA = "0xF60524")]
		private void OnCheckpointReached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xF60654", Offset = "0xF60654", VA = "0xF60654", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xF60784", Offset = "0xF60784", VA = "0xF60784")]
		public SprintTutorial()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class TutorialAudio : MonoBehaviour
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("_voiceLines")]
		public List<AudioClip> VoiceLines;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xF60AC4", Offset = "0xF60AC4", VA = "0xF60AC4")]
		public TutorialAudio()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public abstract class TutorialBase : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		[CompilerGenerated]
		private sealed class <TeleportLocalPlayerRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform point;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF8")]
				[Address(RVA = "0xF613DC", Offset = "0xF613DC", VA = "0xF613DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFA")]
				[Address(RVA = "0xF61424", Offset = "0xF61424", VA = "0xF61424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xF60F4C", Offset = "0xF60F4C", VA = "0xF60F4C")]
			[DebuggerHidden]
			public <TeleportLocalPlayerRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xF610F0", Offset = "0xF610F0", VA = "0xF610F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xF610F4", Offset = "0xF610F4", VA = "0xF610F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xF613E4", Offset = "0xF613E4", VA = "0xF613E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private protected SpawnLocation _spawnLocation;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TutorialMatch TutorialMatch;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly WaitForSeconds _wait0_35Sec;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly WaitForSeconds _wait0_5Sec;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly WaitForSeconds _wait5Sec;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly WaitForSeconds _wait3Sec;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly WaitForSeconds _wait2Sec;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly WaitForSeconds _wait1Sec;

		[Token(Token = "0x170001A5")]
		public SpawnLocation Spawn
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xF60C04", Offset = "0xF60C04", VA = "0xF60C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action FinishedEvent
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xF60ACC", Offset = "0xF60ACC", VA = "0xF60ACC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xF60B68", Offset = "0xF60B68", VA = "0xF60B68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xF60C0C", Offset = "0xF60C0C", VA = "0xF60C0C")]
		public void Initialize(TutorialMatch match)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xF60C14", Offset = "0xF60C14", VA = "0xF60C14")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x6000FEE")]
		protected abstract void OnStart();

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xF59654", Offset = "0xF59654", VA = "0xF59654")]
		public void EndTutorial()
		{
		}

		[Token(Token = "0x6000FF0")]
		protected abstract void OnEnd();

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xF60E80", Offset = "0xF60E80", VA = "0xF60E80")]
		protected void TeleportPlayerToLocation(Transform point, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xF60EBC", Offset = "0xF60EBC", VA = "0xF60EBC")]
		[IteratorStateMachine(typeof(<TeleportLocalPlayerRoutine>d__19))]
		private IEnumerator TeleportLocalPlayerRoutine(Transform point, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xF59878", Offset = "0xF59878", VA = "0xF59878")]
		protected TutorialBase()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class TutorialCheckpoint : MonoBehaviour
	{
		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundsComponent _bounds;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _arrow;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _base;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Light _light;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Sounds")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _startClip;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _succesClip;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isInitialized;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _arrowPositon;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _arrowScale;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _baseScale;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _doBounceArrow;

		[Token(Token = "0x1400002C")]
		public event Action<TutorialCheckpoint> CheckpointReachedEvent
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xF58DC8", Offset = "0xF58DC8", VA = "0xF58DC8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xF58B80", Offset = "0xF58B80", VA = "0xF58B80")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xF6142C", Offset = "0xF6142C", VA = "0xF6142C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xF614DC", Offset = "0xF614DC", VA = "0xF614DC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xF61448", Offset = "0xF61448", VA = "0xF61448")]
		private void Init()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xF58E78", Offset = "0xF58E78", VA = "0xF58E78")]
		public void Enable(bool playSound = true)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xF5930C", Offset = "0xF5930C", VA = "0xF5930C")]
		public void Disable(bool playSound)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xF614EC", Offset = "0xF614EC", VA = "0xF614EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xF615D8", Offset = "0xF615D8", VA = "0xF615D8")]
		public TutorialCheckpoint()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class TutorialMatch : Match
	{
		[Token(Token = "0x20002DB")]
		public enum VoiceLines
		{
			[Token(Token = "0x4001018")]
			Tutorial_01_Welcome,
			[Token(Token = "0x4001019")]
			Tutorial_02_Move,
			[Token(Token = "0x400101A")]
			Tutorial_03_MoveReminder,
			[Token(Token = "0x400101B")]
			Tutorial_04_Sprint,
			[Token(Token = "0x400101C")]
			Tutorial_05_Dash,
			[Token(Token = "0x400101D")]
			Tutorial_06_DashReminder,
			[Token(Token = "0x400101E")]
			Tutorial_07_Energy,
			[Token(Token = "0x400101F")]
			Tutorial_08_Energy2,
			[Token(Token = "0x4001020")]
			Tutorial_09_PressButton,
			[Token(Token = "0x4001021")]
			Tutorial_10_RailGrind,
			[Token(Token = "0x4001022")]
			Tutorial_11_RailGrindReminder,
			[Token(Token = "0x4001023")]
			Tutorial_12_RailBoost,
			[Token(Token = "0x4001024")]
			Tutorial_13_LeaveRail,
			[Token(Token = "0x4001025")]
			Tutorial_14_SwitchRails,
			[Token(Token = "0x4001026")]
			Tutorial_15_SwitchRailsNow,
			[Token(Token = "0x4001027")]
			Tutorial_16_shooting,
			[Token(Token = "0x4001028")]
			Tutorial_17_Charge,
			[Token(Token = "0x4001029")]
			Tutorial_18_ChargeReminder,
			[Token(Token = "0x400102A")]
			Tutorial_19_PickupSniper,
			[Token(Token = "0x400102B")]
			Tutorial_20_PickupSniperReminder,
			[Token(Token = "0x400102C")]
			Tutorial_21_DestroyRemainingTargerts,
			[Token(Token = "0x400102D")]
			Tutorial_22_pressButton2,
			[Token(Token = "0x400102E")]
			Tutorial_23_PickupWeapons,
			[Token(Token = "0x400102F")]
			Tutorial_24_DeathmatchIntro,
			[Token(Token = "0x4001030")]
			Tutorial_25_4_KillsRemaining,
			[Token(Token = "0x4001031")]
			Tutorial_26_3_KillsRemaining,
			[Token(Token = "0x4001032")]
			Tutorial_27_2_KillsRemaining,
			[Token(Token = "0x4001033")]
			Tutorial_28_1_KillsRemaining,
			[Token(Token = "0x4001034")]
			Tutorial_29_finish,
			[Token(Token = "0x4001035")]
			Tutorial_30_finish2,
			[Token(Token = "0x4001036")]
			Countdown3,
			[Token(Token = "0x4001037")]
			Countdown2,
			[Token(Token = "0x4001038")]
			Countdown1,
			[Token(Token = "0x4001039")]
			Go
		}

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<TutorialBase> _tutorials;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TutorialAudio _audio;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource _voicelineSource;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _canFire;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currentIndex;

		[Token(Token = "0x170001A8")]
		public WeaponTypes StartingWeapon
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xF61600", Offset = "0xF61600", VA = "0xF61600")]
			[CompilerGenerated]
			get
			{
				return default(WeaponTypes);
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xF61608", Offset = "0xF61608", VA = "0xF61608")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public SpawnLocation CurrentSpawn
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xF61610", Offset = "0xF61610", VA = "0xF61610")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xF61618", Offset = "0xF61618", VA = "0xF61618")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Vector3[] BotGoals
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xF61620", Offset = "0xF61620", VA = "0xF61620")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xF61628", Offset = "0xF61628", VA = "0xF61628")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public int[] BotGoalsControllingTeam
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xF61630", Offset = "0xF61630", VA = "0xF61630")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xF61638", Offset = "0xF61638", VA = "0xF61638")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public int TutorialSteps
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xF61640", Offset = "0xF61640", VA = "0xF61640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xF61688", Offset = "0xF61688", VA = "0xF61688", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xF617F4", Offset = "0xF617F4", VA = "0xF617F4", Slot = "31")]
		public override void GetStartingWeapons(int playerID, int teamID, out WeaponTypes leftHand, out WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xF61808", Offset = "0xF61808", VA = "0xF61808", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xF619B0", Offset = "0xF619B0", VA = "0xF619B0")]
		public void StartNextTutorial()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xF61B84", Offset = "0xF61B84", VA = "0xF61B84")]
		private void OnTutorialEnded()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xF61ABC", Offset = "0xF61ABC", VA = "0xF61ABC")]
		private void FinishTutorialMatch()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xF61D18", Offset = "0xF61D18", VA = "0xF61D18")]
		private void CheckAchievement()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xF59A48", Offset = "0xF59A48", VA = "0xF59A48")]
		public void PlayVoiceLine(VoiceLines voiceLine)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xF60EA0", Offset = "0xF60EA0", VA = "0xF60EA0")]
		public void StopVoiceLine()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xF61C50", Offset = "0xF61C50", VA = "0xF61C50")]
		private void EndOfGameAnnouncerAndMusic()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xF60D84", Offset = "0xF60D84", VA = "0xF60D84")]
		public void SetCurrentSpawn(SpawnLocation spawnLocation)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xF62010", Offset = "0xF62010", VA = "0xF62010", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xF62018", Offset = "0xF62018", VA = "0xF62018", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xF62100", Offset = "0xF62100", VA = "0xF62100", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xF62108", Offset = "0xF62108", VA = "0xF62108", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xF62110", Offset = "0xF62110", VA = "0xF62110")]
		public TutorialMatch()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class TutorialRail : TutorialBase
	{
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialCheckpoint _checkpoint;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isOnRail;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xF62338", Offset = "0xF62338", VA = "0xF62338")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xF62428", Offset = "0xF62428", VA = "0xF62428", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xF62620", Offset = "0xF62620", VA = "0xF62620")]
		private void OnCheckPointReached(TutorialCheckpoint sender)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xF626C4", Offset = "0xF626C4", VA = "0xF626C4")]
		private void OnButtonPressed(PedestalButton sender, int PlayerId)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xF62760", Offset = "0xF62760", VA = "0xF62760", Slot = "5")]
		protected override void OnEnd()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xF62860", Offset = "0xF62860", VA = "0xF62860")]
		public TutorialRail()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class TutorialText : MonoBehaviour
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _backgroundSprite;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer _arrowSprite;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _fadeOutProximity;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _isVisible;

		[Token(Token = "0x4001049")]
		private const float FadeOutDistance = 9f;

		[Token(Token = "0x400104A")]
		private const float FadeSpeed = 0.2f;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xF5A0F4", Offset = "0xF5A0F4", VA = "0xF5A0F4")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xF62B14", Offset = "0xF62B14", VA = "0xF62B14")]
		[ContextMenu("UpdateLayout")]
		private void UpdateLayout()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xF62B5C", Offset = "0xF62B5C", VA = "0xF62B5C")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xF5A124", Offset = "0xF5A124", VA = "0xF5A124")]
		public void Show()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xF62CBC", Offset = "0xF62CBC", VA = "0xF62CBC")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xF62C60", Offset = "0xF62C60", VA = "0xF62C60")]
		private void FadeOut()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xF5A320", Offset = "0xF5A320", VA = "0xF5A320")]
		public void Kill()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xF62D20", Offset = "0xF62D20", VA = "0xF62D20")]
		public TutorialText()
		{
		}
	}
}
namespace HyperDash.Store
{
	[Token(Token = "0x20002E0")]
	public struct FriendData
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Online;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Image;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsPlayingHyperDash;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsJoinable;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ServerIp;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Presence;
	}
	[Token(Token = "0x20002E1")]
	public interface IStore
	{
		[Token(Token = "0x170001B1")]
		bool IsInitialized
		{
			[Token(Token = "0x600103E")]
			get;
			[Token(Token = "0x600103F")]
			set;
		}

		[Token(Token = "0x170001B2")]
		StoreApi StoreType
		{
			[Token(Token = "0x6001040")]
			get;
		}

		[Token(Token = "0x170001B3")]
		string AccountName
		{
			[Token(Token = "0x6001041")]
			get;
		}

		[Token(Token = "0x170001B4")]
		StoreFeature StoreFeatures
		{
			[Token(Token = "0x6001042")]
			get;
		}

		[Token(Token = "0x170001B5")]
		float FriendsUpdateFrequency
		{
			[Token(Token = "0x6001043")]
			get;
		}

		[Token(Token = "0x170001B6")]
		string StorePrefix
		{
			[Token(Token = "0x6001044")]
			get;
		}

		[Token(Token = "0x170001B7")]
		bool IsArcade
		{
			[Token(Token = "0x6001045")]
			get;
		}

		[Token(Token = "0x170001B8")]
		string GetSteamVRAppKey
		{
			[Token(Token = "0x6001052")]
			get;
		}

		[Token(Token = "0x1400002D")]
		event Action<IStore, bool> InitializedEvent;

		[Token(Token = "0x600103B")]
		void Init();

		[Token(Token = "0x6001046")]
		void GetAccountHeaders(Action<Dictionary<string, string>> callback);

		[Token(Token = "0x6001047")]
		void AchievementUnlockSimple(SimpleAchievementKey key);

		[Token(Token = "0x6001048")]
		void AchievementAddCount(CountAchievementKey key, int delta);

		[Token(Token = "0x6001049")]
		void Shutdown();

		[Token(Token = "0x600104A")]
		void SetRichPresenceStatus(GameState gameState, RichPresenceData richPresenceData);

		[Token(Token = "0x600104B")]
		void SetFriendConnectInfo(string ip, string port);

		[Token(Token = "0x600104C")]
		void SetRichPresencePartySize(int size);

		[Token(Token = "0x600104D")]
		void GetFriends(Action<List<FriendData>> callback);

		[Token(Token = "0x600104E")]
		void SetRichPresenceScore(RichPresenceData richPresenceData);

		[Token(Token = "0x600104F")]
		string GetStoreId();

		[Token(Token = "0x6001050")]
		void AddFriend(string id);

		[Token(Token = "0x6001051")]
		void SetIsArcade(bool isArcade);
	}
	[Token(Token = "0x20002E2")]
	public class PicoStore : IStore
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pico.Platform.Models.User _user;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _accessToken;

		[Token(Token = "0x170001B9")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0xF62E90", Offset = "0xF62E90", VA = "0xF62E90", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xF62E98", Offset = "0xF62E98", VA = "0xF62E98", Slot = "8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public StoreApi StoreType
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xF62EA4", Offset = "0xF62EA4", VA = "0xF62EA4", Slot = "9")]
			get
			{
				return default(StoreApi);
			}
		}

		[Token(Token = "0x170001BB")]
		public string AccountName
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xF62EAC", Offset = "0xF62EAC", VA = "0xF62EAC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public StoreFeature StoreFeatures
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xF62EF4", Offset = "0xF62EF4", VA = "0xF62EF4", Slot = "11")]
			get
			{
				return default(StoreFeature);
			}
		}

		[Token(Token = "0x170001BD")]
		public string StorePrefix
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xF62EFC", Offset = "0xF62EFC", VA = "0xF62EFC", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public bool IsArcade
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xF62F3C", Offset = "0xF62F3C", VA = "0xF62F3C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public string GetSteamVRAppKey
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xF62F44", Offset = "0xF62F44", VA = "0xF62F44", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public float FriendsUpdateFrequency
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xF62F8C", Offset = "0xF62F8C", VA = "0xF62F8C", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<IStore, bool> InitializedEvent
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0xF62D30", Offset = "0xF62D30", VA = "0xF62D30", Slot = "5")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xF62DE0", Offset = "0xF62DE0", VA = "0xF62DE0", Slot = "6")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xF62F94", Offset = "0xF62F94", VA = "0xF62F94", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xF631EC", Offset = "0xF631EC", VA = "0xF631EC")]
		private void OnAsyncServiceInitialized(Pico.Platform.Message message)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xF63308", Offset = "0xF63308", VA = "0xF63308", Slot = "15")]
		public void GetAccountHeaders(Action<Dictionary<string, string>> callback)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xF634A8", Offset = "0xF634A8", VA = "0xF634A8", Slot = "16")]
		public void AchievementUnlockSimple(SimpleAchievementKey key)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xF6359C", Offset = "0xF6359C", VA = "0xF6359C", Slot = "17")]
		public void AchievementAddCount(CountAchievementKey key, int delta)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xF63698", Offset = "0xF63698", VA = "0xF63698", Slot = "18")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xF6370C", Offset = "0xF6370C", VA = "0xF6370C", Slot = "19")]
		public void SetRichPresenceStatus(GameState gameState, RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xF63B64", Offset = "0xF63B64", VA = "0xF63B64", Slot = "20")]
		public void SetFriendConnectInfo(string ip, string port)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xF63CE8", Offset = "0xF63CE8", VA = "0xF63CE8", Slot = "21")]
		public void SetRichPresencePartySize(int size)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xF63CEC", Offset = "0xF63CEC", VA = "0xF63CEC", Slot = "23")]
		public void SetRichPresenceScore(RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xF63CF0", Offset = "0xF63CF0", VA = "0xF63CF0")]
		public void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xF63CF4", Offset = "0xF63CF4", VA = "0xF63CF4", Slot = "24")]
		public string GetStoreId()
		{
			return null;
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xF63D10", Offset = "0xF63D10", VA = "0xF63D10", Slot = "25")]
		public void AddFriend(string id)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xF63DC0", Offset = "0xF63DC0", VA = "0xF63DC0", Slot = "22")]
		public void GetFriends(Action<List<FriendData>> callback)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xF63EFC", Offset = "0xF63EFC", VA = "0xF63EFC", Slot = "26")]
		public void SetIsArcade(bool isArcade)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xF63F00", Offset = "0xF63F00", VA = "0xF63F00")]
		private static void LogOnFail(Pico.Platform.Message m)
		{
		}

		[Token(Token = "0x600106E")]
		public static bool CheckResult<TR>(TR message) where TR : Pico.Platform.Message
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xF63F48", Offset = "0xF63F48", VA = "0xF63F48")]
		public PicoStore()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public enum SimpleAchievementKey
	{
		[Token(Token = "0x4001059")]
		DEV_SIMPLE,
		[Token(Token = "0x400105A")]
		TUTORIAL_NO_DEATH,
		[Token(Token = "0x400105B")]
		LEVEL_25,
		[Token(Token = "0x400105C")]
		LEVEL_50,
		[Token(Token = "0x400105D")]
		LEVEL_75,
		[Token(Token = "0x400105E")]
		LEVEL_100
	}
	[Token(Token = "0x20002E5")]
	public enum CountAchievementKey
	{
		[Token(Token = "0x4001060")]
		DEV_COUNT
	}
	[Token(Token = "0x20002E6")]
	public enum Destinations
	{
		[Token(Token = "0x4001062")]
		dest_main_menu,
		[Token(Token = "0x4001063")]
		dest_single_player,
		[Token(Token = "0x4001064")]
		dest_match
	}
	[Token(Token = "0x20002E7")]
	public class SpringboardStore : IStore
	{
		[Token(Token = "0x170001C1")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xF6459C", Offset = "0xF6459C", VA = "0xF6459C", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xF645A4", Offset = "0xF645A4", VA = "0xF645A4", Slot = "8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public StoreApi StoreType
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xF645B0", Offset = "0xF645B0", VA = "0xF645B0", Slot = "9")]
			get
			{
				return default(StoreApi);
			}
		}

		[Token(Token = "0x170001C3")]
		public string AccountName
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xF645B8", Offset = "0xF645B8", VA = "0xF645B8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public StoreFeature StoreFeatures
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xF64600", Offset = "0xF64600", VA = "0xF64600", Slot = "11")]
			get
			{
				return default(StoreFeature);
			}
		}

		[Token(Token = "0x170001C5")]
		public string StorePrefix
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0xF64608", Offset = "0xF64608", VA = "0xF64608", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public bool IsArcade
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0xF64648", Offset = "0xF64648", VA = "0xF64648", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public string GetSteamVRAppKey
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0xF64650", Offset = "0xF64650", VA = "0xF64650", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public float FriendsUpdateFrequency
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xF64698", Offset = "0xF64698", VA = "0xF64698", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<IStore, bool> InitializedEvent
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xF6443C", Offset = "0xF6443C", VA = "0xF6443C", Slot = "5")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xF644EC", Offset = "0xF644EC", VA = "0xF644EC", Slot = "6")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xF646A0", Offset = "0xF646A0", VA = "0xF646A0", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xF64740", Offset = "0xF64740", VA = "0xF64740", Slot = "15")]
		public void GetAccountHeaders(Action<Dictionary<string, string>> callback)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xF6486C", Offset = "0xF6486C", VA = "0xF6486C", Slot = "26")]
		public void SetIsArcade(bool isArcade)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xF64870", Offset = "0xF64870", VA = "0xF64870", Slot = "16")]
		public void AchievementUnlockSimple(SimpleAchievementKey key)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xF64874", Offset = "0xF64874", VA = "0xF64874", Slot = "17")]
		public void AchievementAddCount(CountAchievementKey key, int delta)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xF64878", Offset = "0xF64878", VA = "0xF64878", Slot = "18")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xF648EC", Offset = "0xF648EC", VA = "0xF648EC", Slot = "19")]
		public void SetRichPresenceStatus(GameState gameState, RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xF648F0", Offset = "0xF648F0", VA = "0xF648F0", Slot = "20")]
		public void SetFriendConnectInfo(string reconnectDataIp, string port)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xF648F4", Offset = "0xF648F4", VA = "0xF648F4", Slot = "21")]
		public void SetRichPresencePartySize(int size)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xF648F8", Offset = "0xF648F8", VA = "0xF648F8", Slot = "22")]
		public void GetFriends(Action<List<FriendData>> callback)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xF648FC", Offset = "0xF648FC", VA = "0xF648FC", Slot = "23")]
		public void SetRichPresenceScore(RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xF64900", Offset = "0xF64900", VA = "0xF64900", Slot = "25")]
		public void AddFriend(string id)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xF64904", Offset = "0xF64904", VA = "0xF64904", Slot = "24")]
		public string GetStoreId()
		{
			return null;
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xF6494C", Offset = "0xF6494C", VA = "0xF6494C")]
		public SpringboardStore()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public enum StoreApi
	{
		[Token(Token = "0x4001068")]
		None = 0,
		[Token(Token = "0x4001069")]
		Oculus = 1,
		[Token(Token = "0x400106A")]
		Steam = 2,
		[Token(Token = "0x400106B")]
		Viveport = 3,
		[Token(Token = "0x400106C")]
		Wave = 4,
		[Token(Token = "0x400106D")]
		Pico = 5,
		[Token(Token = "0x400106E")]
		Springboard = 6,
		[Token(Token = "0x400106F")]
		Synthesis = 7,
		[Token(Token = "0x4001070")]
		SpectatorFakeStore = 100
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public struct RichPresenceData
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte DataVersion;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string ServerID;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ServerTick;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MapID;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MapName;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchTypes GameModeID;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string GameMode;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ScoreText;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int TeamBlueScore;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TeamRedScore;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Username;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int UserScore;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int UserKills;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int UserDeaths;
	}
	[Token(Token = "0x20002EA")]
	public static class StoreManager
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStore _store;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IIAPService _iapService;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static RichPresenceData RichPresenceData;

		[Token(Token = "0x170001C9")]
		public static IStore Store
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xF64954", Offset = "0xF64954", VA = "0xF64954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public static IIAPService IAP
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xF649AC", Offset = "0xF649AC", VA = "0xF649AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xF64A04", Offset = "0xF64A04", VA = "0xF64A04")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xF64C94", Offset = "0xF64C94", VA = "0xF64C94")]
		private static void StoreOnInitializedEvent(IStore sender, bool success)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xF64ED0", Offset = "0xF64ED0", VA = "0xF64ED0")]
		private static void OnGameStateChangedEvent(GameManager sender, GameManager.GameStateChangedArgs args)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xF65480", Offset = "0xF65480", VA = "0xF65480")]
		private static void NetPlayerDataOnTeamScoringUpdatedEvent(NetPlayerData sender, NetPlayerData.TeamScoringUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xF65AD0", Offset = "0xF65AD0", VA = "0xF65AD0")]
		private static void NetPlayerDataOnRankingUpdatedEvent(NetPlayerData sender, NetPlayerData.RankingUpdatedArgs eventargs)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xF65864", Offset = "0xF65864", VA = "0xF65864")]
		private static void UpdateLocalPlayerStats()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xF61E30", Offset = "0xF61E30", VA = "0xF61E30")]
		public static void AchievementUnlockSimple(SimpleAchievementKey key)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xF65DAC", Offset = "0xF65DAC", VA = "0xF65DAC")]
		public static void AchievementAddCount(CountAchievementKey key, int delta)
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class StubStore : IStore
	{
		[Token(Token = "0x170001CB")]
		public bool IsInitialized
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xF660F4", Offset = "0xF660F4", VA = "0xF660F4", Slot = "7")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xF660FC", Offset = "0xF660FC", VA = "0xF660FC", Slot = "8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public StoreApi StoreType
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xF66108", Offset = "0xF66108", VA = "0xF66108", Slot = "9")]
			get
			{
				return default(StoreApi);
			}
		}

		[Token(Token = "0x170001CD")]
		public string AccountName
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xF66110", Offset = "0xF66110", VA = "0xF66110", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public StoreFeature StoreFeatures
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xF66158", Offset = "0xF66158", VA = "0xF66158", Slot = "11")]
			get
			{
				return default(StoreFeature);
			}
		}

		[Token(Token = "0x170001CF")]
		public string StorePrefix
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xF66160", Offset = "0xF66160", VA = "0xF66160", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public bool IsArcade
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xF661A0", Offset = "0xF661A0", VA = "0xF661A0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D1")]
		public string GetSteamVRAppKey
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xF661A8", Offset = "0xF661A8", VA = "0xF661A8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public float FriendsUpdateFrequency
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xF661E8", Offset = "0xF661E8", VA = "0xF661E8", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<IStore, bool> InitializedEvent
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xF65F94", Offset = "0xF65F94", VA = "0xF65F94", Slot = "5")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xF66044", Offset = "0xF66044", VA = "0xF66044", Slot = "6")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xF661F0", Offset = "0xF661F0", VA = "0xF661F0", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xF66290", Offset = "0xF66290", VA = "0xF66290", Slot = "15")]
		public void GetAccountHeaders(Action<Dictionary<string, string>> callback)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xF66388", Offset = "0xF66388", VA = "0xF66388", Slot = "26")]
		public void SetIsArcade(bool isArcade)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xF6638C", Offset = "0xF6638C", VA = "0xF6638C", Slot = "16")]
		public void AchievementUnlockSimple(SimpleAchievementKey key)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xF66390", Offset = "0xF66390", VA = "0xF66390", Slot = "17")]
		public void AchievementAddCount(CountAchievementKey key, int delta)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xF66394", Offset = "0xF66394", VA = "0xF66394", Slot = "18")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xF66408", Offset = "0xF66408", VA = "0xF66408", Slot = "19")]
		public void SetRichPresenceStatus(GameState gameState, RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xF6640C", Offset = "0xF6640C", VA = "0xF6640C", Slot = "20")]
		public void SetFriendConnectInfo(string reconnectDataIp, string port)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xF66410", Offset = "0xF66410", VA = "0xF66410", Slot = "21")]
		public void SetRichPresencePartySize(int size)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xF66414", Offset = "0xF66414", VA = "0xF66414", Slot = "22")]
		public void GetFriends(Action<List<FriendData>> callback)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xF66418", Offset = "0xF66418", VA = "0xF66418", Slot = "23")]
		public void SetRichPresenceScore(RichPresenceData richPresenceData)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xF6641C", Offset = "0xF6641C", VA = "0xF6641C", Slot = "25")]
		public void AddFriend(string id)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xF66420", Offset = "0xF66420", VA = "0xF66420", Slot = "24")]
		public string GetStoreId()
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xF66468", Offset = "0xF66468", VA = "0xF66468")]
		public StubStore()
		{
		}
	}
}
namespace HyperDash.Store.IAPs
{
	[Token(Token = "0x20002EC")]
	public enum IAPType
	{
		[Token(Token = "0x4001085")]
		Consumable,
		[Token(Token = "0x4001086")]
		Durable
	}
	[Token(Token = "0x20002ED")]
	public interface IIAPService
	{
		[Token(Token = "0x60010B2")]
		void SetStore(IStore store);

		[Token(Token = "0x60010B3")]
		void Load([Optional] Action callback);

		[Token(Token = "0x60010B4")]
		bool GetProductPrice(IapResponse iap, out string price);

		[Token(Token = "0x60010B5")]
		void Checkout(IapResponse iap, Action<IapCheckoutProgress> callback);

		[Token(Token = "0x60010B6")]
		void Consume(IapResponse iap, Action<IapCheckoutProgress> callback);

		[Token(Token = "0x60010B7")]
		void OnCancelPurchase();

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xF66470", Offset = "0xF66470", VA = "0xF66470", Slot = "6")]
		void OnApplicationFocus(bool focus)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public struct IapCheckoutProgress
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Done;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IapPurchaseState PurchaseState;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IapMessageKeys MessageKey;
	}
	[Token(Token = "0x20002EF")]
	public enum IapPurchaseState
	{
		[Token(Token = "0x400108B")]
		Unknown,
		[Token(Token = "0x400108C")]
		Failed,
		[Token(Token = "0x400108D")]
		Bought,
		[Token(Token = "0x400108E")]
		Consumed
	}
	[Token(Token = "0x20002F0")]
	public enum IapMessageKeys
	{
		[Token(Token = "0x4001090")]
		iap_init = 1,
		[Token(Token = "0x4001091")]
		iap_init_failed = 2,
		[Token(Token = "0x4001092")]
		iap_buying = 10,
		[Token(Token = "0x4001093")]
		iap_buying_failed = 11,
		[Token(Token = "0x4001094")]
		iap_consuming = 20,
		[Token(Token = "0x4001095")]
		iap_consuming_failed = 21,
		[Token(Token = "0x4001096")]
		iap_success = 30
	}
	[Token(Token = "0x20002F1")]
	public class PicoIAP : IIAPService
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PicoStore _store;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, Pico.Platform.Models.Product> _productPrices;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<IapCheckoutProgress> _checkoutProgress;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IapPurchaseState _checkoutStage;

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xF66474", Offset = "0xF66474", VA = "0xF66474", Slot = "4")]
		public void SetStore(IStore store)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xF66520", Offset = "0xF66520", VA = "0xF66520", Slot = "5")]
		public void Load([Optional] Action callback)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xF669B0", Offset = "0xF669B0", VA = "0xF669B0", Slot = "6")]
		public bool GetProductPrice(IapResponse iap, out string price)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xF668C8", Offset = "0xF668C8", VA = "0xF668C8")]
		public void GetPurchases(Action<List<IapResponse>> callback)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xF66AA0", Offset = "0xF66AA0", VA = "0xF66AA0", Slot = "7")]
		public void Checkout(IapResponse iap, Action<IapCheckoutProgress> callback)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xF66C64", Offset = "0xF66C64", VA = "0xF66C64", Slot = "8")]
		public void Consume(IapResponse iap, Action<IapCheckoutProgress> callback)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xF66DE8", Offset = "0xF66DE8", VA = "0xF66DE8", Slot = "9")]
		public void OnCancelPurchase()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xF66DEC", Offset = "0xF66DEC", VA = "0xF66DEC", Slot = "10")]
		public void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xF66E88", Offset = "0xF66E88", VA = "0xF66E88")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xF64C0C", Offset = "0xF64C0C", VA = "0xF64C0C")]
		public PicoIAP()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class StubIAP : IIAPService
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xF67754", Offset = "0xF67754", VA = "0xF67754", Slot = "4")]
		public void SetStore(IStore store)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xF67758", Offset = "0xF67758", VA = "0xF67758", Slot = "5")]
		public void Load([Optional] Action callback)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xF67770", Offset = "0xF67770", VA = "0xF67770", Slot = "6")]
		public bool GetProductPrice(IapResponse iap, out string price)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xF67790", Offset = "0xF67790", VA = "0xF67790")]
		public void GetPurchases(Action<List<IapResponse>> callback)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xF67814", Offset = "0xF67814", VA = "0xF67814", Slot = "7")]
		public void Checkout(IapResponse iap, Action<IapCheckoutProgress> callback)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xF67950", Offset = "0xF67950", VA = "0xF67950", Slot = "8")]
		public void Consume(IapResponse iap, Action<IapCheckoutProgress> callback)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xF67930", Offset = "0xF67930", VA = "0xF67930")]
		public void Delayed(Action action)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xF67A98", Offset = "0xF67A98", VA = "0xF67A98", Slot = "9")]
		public void OnCancelPurchase()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xF67A9C", Offset = "0xF67A9C", VA = "0xF67A9C")]
		public StubIAP()
		{
		}
	}
}
namespace HyperDash.Spectator
{
	[Token(Token = "0x20002F9")]
	public class NetSpectator : EntityEventListener<ISpectatorState>
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _renderTransform;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _model;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetSpectator LocalSpectator;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpectatorController _spectatorController;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _velocity;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _rotationVelocity;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetworkId _playerNetID;

		[Token(Token = "0x170001D3")]
		public int SpectatedPlayerID
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xF67CB0", Offset = "0xF67CB0", VA = "0xF67CB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D4")]
		public NetCharacterBehaviour SpectatedCharacter
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xF67D30", Offset = "0xF67D30", VA = "0xF67D30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xF67D38", Offset = "0xF67D38", VA = "0xF67D38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public static List<NetSpectator> SpectatorList
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xF67D40", Offset = "0xF67D40", VA = "0xF67D40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xF67D98", Offset = "0xF67D98", VA = "0xF67D98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xF67DF8", Offset = "0xF67DF8", VA = "0xF67DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xF67E18", Offset = "0xF67E18", VA = "0xF67E18", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xF683E0", Offset = "0xF683E0", VA = "0xF683E0")]
		private void OnLightChanged()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xF68504", Offset = "0xF68504", VA = "0xF68504", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xF68664", Offset = "0xF68664", VA = "0xF68664", Slot = "22")]
		public override void ControlGained()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xF68AD4", Offset = "0xF68AD4", VA = "0xF68AD4", Slot = "23")]
		public override void ControlLost()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xF68CB8", Offset = "0xF68CB8", VA = "0xF68CB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xF68CF0", Offset = "0xF68CF0", VA = "0xF68CF0")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xF68ECC", Offset = "0xF68ECC", VA = "0xF68ECC", Slot = "21")]
		public override void SimulateController()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xF69ACC", Offset = "0xF69ACC", VA = "0xF69ACC", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xF69BB4", Offset = "0xF69BB4", VA = "0xF69BB4")]
		private void SyncCharacterStateToController(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xF6943C", Offset = "0xF6943C", VA = "0xF6943C")]
		private void SyncControllerStateToCharacter(NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xF6A154", Offset = "0xF6A154", VA = "0xF6A154", Slot = "25")]
		public override void ExecuteCommand(Command command, bool resetState)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xF682AC", Offset = "0xF682AC", VA = "0xF682AC")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xF6A714", Offset = "0xF6A714", VA = "0xF6A714")]
		private void OnHideDroneSettingChanged(bool hideDrones)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xF6A800", Offset = "0xF6A800", VA = "0xF6A800")]
		public static void OnHitCameraFxEvent(int playerID, Vector3 origin)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xF6A9A0", Offset = "0xF6A9A0", VA = "0xF6A9A0")]
		public static void OnHitMarkerEvent(PlayerObject shooter, HitData hitData, bool isKill)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xF6AB60", Offset = "0xF6AB60", VA = "0xF6AB60")]
		public static void OnKillLineEvent(int playerID, HitData hitData)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xF6AD10", Offset = "0xF6AD10", VA = "0xF6AD10")]
		public static void OnCameraOverlayEvent(int playerID, PlayerHud.OverlayType type)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xF6AE98", Offset = "0xF6AE98", VA = "0xF6AE98")]
		public static void OnLifeOrbEvent(PlayerObject shooter, HitData hitData, float vampireLifeSteal)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xF6B0A8", Offset = "0xF6B0A8", VA = "0xF6B0A8")]
		public NetSpectator()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class SpectatorAutomaticCameraMode : SpectatorMode
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _noPlayerModeIndex;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpectatorMode[] _spectatorModes;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _timeBetweenModes;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _spectatorModeIndex;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _timer;

		[Token(Token = "0x170001D6")]
		public override string ModeName
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xF6B1F8", Offset = "0xF6B1F8", VA = "0xF6B1F8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public override bool ShowDrone
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xF6B238", Offset = "0xF6B238", VA = "0xF6B238", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public override bool UseTarget
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xF6B278", Offset = "0xF6B278", VA = "0xF6B278", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xF6B2B8", Offset = "0xF6B2B8", VA = "0xF6B2B8")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xF6B35C", Offset = "0xF6B35C", VA = "0xF6B35C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xF6B400", Offset = "0xF6B400", VA = "0xF6B400", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xF6B4F8", Offset = "0xF6B4F8", VA = "0xF6B4F8", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xF6B58C", Offset = "0xF6B58C", VA = "0xF6B58C")]
		public void Update()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xF6B664", Offset = "0xF6B664", VA = "0xF6B664")]
		private void SetNoPlayerMode()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xF6B73C", Offset = "0xF6B73C", VA = "0xF6B73C")]
		private void NextSpectatorMode()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xF6B828", Offset = "0xF6B828", VA = "0xF6B828")]
		private void OnSceneLoaded(Scene arg0, LoadSceneMode arg1)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xF6B844", Offset = "0xF6B844", VA = "0xF6B844")]
		public SpectatorAutomaticCameraMode()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class SpectatorController : MonoBehaviour
	{
		[Token(Token = "0x20002FC")]
		[CompilerGenerated]
		private sealed class <ReAttachModeInternal>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectatorController <>4__this;

			[Token(Token = "0x170001DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001133")]
				[Address(RVA = "0xF6E47C", Offset = "0xF6E47C", VA = "0xF6E47C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001135")]
				[Address(RVA = "0xF6E4C4", Offset = "0xF6E4C4", VA = "0xF6E4C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001130")]
			[Address(RVA = "0xF6DBE4", Offset = "0xF6DBE4", VA = "0xF6DBE4")]
			[DebuggerHidden]
			public <ReAttachModeInternal>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0xF6E314", Offset = "0xF6E314", VA = "0xF6E314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0xF6E318", Offset = "0xF6E318", VA = "0xF6E318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0xF6E484", Offset = "0xF6E484", VA = "0xF6E484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera _camera;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpectatorDroneCameraMode _spectatorDrone;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpectatorDroneNoClipCameraMode _spectatorDroneNoClip;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpectatorFollowFirstPersonMode _spectatorFirstPerson;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpectatorFollowThirdPersonMode _spectatorThirdPerson;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpectatorFollowThirdPersonPayloadMode _spectatorThirdPersonPayload;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpectatorCanvas _spectatorCanvas;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SpectatorMode[] _spectatorModes;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpectatorMode _activeMode;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpectatorMode _lastMode;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _lastUsedPlayerId;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _isFullscreen;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Resolution _screenResolution;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Resolution? _windowedResolution;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _captureMouse;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool _isAttached;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerHud _playerHud;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ArmDisplay _armDisplay;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _killSwitchCooldown;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _killSwitchPlayerId;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _currentCharacterIndex;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NetCharacterBehaviour[] CharactersBySpectatorIndex;

		[Token(Token = "0x170001D9")]
		public static SpectatorController Active
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xF6B8B8", Offset = "0xF6B8B8", VA = "0xF6B8B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xF6B900", Offset = "0xF6B900", VA = "0xF6B900")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public static bool IsSpectating
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xF6B958", Offset = "0xF6B958", VA = "0xF6B958")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xF6B9A0", Offset = "0xF6B9A0", VA = "0xF6B9A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public NetCharacterBehaviour Character
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xF693E4", Offset = "0xF693E4", VA = "0xF693E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xF6B9EC", Offset = "0xF6B9EC", VA = "0xF6B9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public bool ShowDrone
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xF693A4", Offset = "0xF693A4", VA = "0xF693A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		public bool UseTarget
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xF693C4", Offset = "0xF693C4", VA = "0xF693C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000031")]
		public static event Action<SpectatorController> StartSpectatorEvent
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xF6BA08", Offset = "0xF6BA08", VA = "0xF6BA08")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600110C")]
			[Address(RVA = "0xF6BAD8", Offset = "0xF6BAD8", VA = "0xF6BAD8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event Action<SpectatorController> StopSpectatorEvent
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0xF6BBA8", Offset = "0xF6BBA8", VA = "0xF6BBA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0xF6BC78", Offset = "0xF6BC78", VA = "0xF6BC78")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<SpectatorController, SpectatorMode> OnSpectatorModeChanged
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xF6BD48", Offset = "0xF6BD48", VA = "0xF6BD48")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xF6BDF8", Offset = "0xF6BDF8", VA = "0xF6BDF8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xF6BEA8", Offset = "0xF6BEA8", VA = "0xF6BEA8")]
		public void InvokeOnSpectatorModeChanged(SpectatorMode mode)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xF6BED0", Offset = "0xF6BED0", VA = "0xF6BED0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xF6C1EC", Offset = "0xF6C1EC", VA = "0xF6C1EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xF6C244", Offset = "0xF6C244", VA = "0xF6C244")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xF6C028", Offset = "0xF6C028", VA = "0xF6C028")]
		private void DisableAllSpectatorModes()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xF6C3E4", Offset = "0xF6C3E4", VA = "0xF6C3E4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xF6D630", Offset = "0xF6D630", VA = "0xF6D630")]
		private bool IndexHasPlayer(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xF6CA90", Offset = "0xF6CA90", VA = "0xF6CA90")]
		private void UpdateCharacters()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xF68A44", Offset = "0xF68A44", VA = "0xF68A44")]
		public void ReAttachMode()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xF6DB70", Offset = "0xF6DB70", VA = "0xF6DB70")]
		[IteratorStateMachine(typeof(<ReAttachModeInternal>d__56))]
		public IEnumerator ReAttachModeInternal()
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xF68CB0", Offset = "0xF68CB0", VA = "0xF68CB0")]
		public void DetachMode()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xF6DC0C", Offset = "0xF6DC0C", VA = "0xF6DC0C")]
		public void OnPlayerKilled(PlayerKilledEvent evnt)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xF6CB04", Offset = "0xF6CB04", VA = "0xF6CB04")]
		private int FindIndexOfPlayerId(int id)
		{
			return default(int);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xF6CBC8", Offset = "0xF6CBC8", VA = "0xF6CBC8")]
		private void SetCurrentCharacterIndex(int index)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xF6D6B4", Offset = "0xF6D6B4", VA = "0xF6D6B4")]
		private void UpdateCharactersTeamBased()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xF6D9D0", Offset = "0xF6D9D0", VA = "0xF6D9D0")]
		private void UpdateCharactersDeadMatch()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xF6C8E0", Offset = "0xF6C8E0", VA = "0xF6C8E0")]
		private void UpdateResolutionFix()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xF6C0B4", Offset = "0xF6C0B4", VA = "0xF6C0B4")]
		private void SetResolution(int width, int height, int refreshRate)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xF6CF0C", Offset = "0xF6CF0C", VA = "0xF6CF0C")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xF6CD8C", Offset = "0xF6CD8C", VA = "0xF6CD8C")]
		public int GetNextPlayerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xF6E13C", Offset = "0xF6E13C", VA = "0xF6E13C")]
		public int GetPreviousPlayerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xF6DD1C", Offset = "0xF6DD1C", VA = "0xF6DD1C")]
		private void ToggleDrone()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xF6DE18", Offset = "0xF6DE18", VA = "0xF6DE18")]
		private void ToggleDroneNoClip()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xF6DE98", Offset = "0xF6DE98", VA = "0xF6DE98")]
		private void ToggleThirdPerson()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xF6DFD0", Offset = "0xF6DFD0", VA = "0xF6DFD0")]
		private void ToggleThirdPersonPayload()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xF6CE60", Offset = "0xF6CE60", VA = "0xF6CE60")]
		private void ChangeSpectatorMode(SpectatorMode newMode)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xF6C0FC", Offset = "0xF6C0FC", VA = "0xF6C0FC")]
		private void ActivateSpectator()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xF6C31C", Offset = "0xF6C31C", VA = "0xF6C31C")]
		private void DeactivateSpectator()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xF6E210", Offset = "0xF6E210", VA = "0xF6E210")]
		public void ResizeCameraRect(Rect rect, float duration)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xF689B0", Offset = "0xF689B0", VA = "0xF689B0")]
		public void Teleport(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xF6E2A0", Offset = "0xF6E2A0", VA = "0xF6E2A0")]
		public SpectatorController()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class SpectatorDroneCameraMode : SpectatorMode
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected CharacterController _controller;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion _smoothHeadDerv;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion _rotation;

		[Token(Token = "0x170001E1")]
		public override string ModeName
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xF6E4CC", Offset = "0xF6E4CC", VA = "0xF6E4CC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public override bool ShowDrone
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xF6E50C", Offset = "0xF6E50C", VA = "0xF6E50C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public override bool UseTarget
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xF6E514", Offset = "0xF6E514", VA = "0xF6E514", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xF6E51C", Offset = "0xF6E51C", VA = "0xF6E51C", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xF6E5D0", Offset = "0xF6E5D0", VA = "0xF6E5D0", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xF6E5F0", Offset = "0xF6E5F0", VA = "0xF6E5F0")]
		public void Update()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xF6E9F0", Offset = "0xF6E9F0", VA = "0xF6E9F0", Slot = "9")]
		protected virtual void Move(Vector3 distance)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xF6E0C4", Offset = "0xF6E0C4", VA = "0xF6E0C4")]
		public void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xF6EA0C", Offset = "0xF6EA0C", VA = "0xF6EA0C")]
		public SpectatorDroneCameraMode()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class SpectatorDroneNoClipCameraMode : SpectatorDroneCameraMode
	{
		[Token(Token = "0x170001E4")]
		public override string ModeName
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xF6EA14", Offset = "0xF6EA14", VA = "0xF6EA14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xF6EA54", Offset = "0xF6EA54", VA = "0xF6EA54", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xF6EA74", Offset = "0xF6EA74", VA = "0xF6EA74", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xF6EB28", Offset = "0xF6EB28", VA = "0xF6EB28", Slot = "9")]
		protected override void Move(Vector3 distance)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xF6EB88", Offset = "0xF6EB88", VA = "0xF6EB88")]
		public SpectatorDroneNoClipCameraMode()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[DefaultExecutionOrder(1000000)]
	public class SpectatorFollowFirstPersonMode : SpectatorMode
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _cameraTransform;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _target;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isFirstFrameOfThisTarget;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _smoothHeadDerv;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _rotation;

		[Token(Token = "0x170001E5")]
		public override string ModeName
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xF6EB90", Offset = "0xF6EB90", VA = "0xF6EB90", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public override bool ShowDrone
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xF6EBD0", Offset = "0xF6EBD0", VA = "0xF6EBD0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public override bool UseTarget
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xF6EBD8", Offset = "0xF6EBD8", VA = "0xF6EBD8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xF6EBE0", Offset = "0xF6EBE0", VA = "0xF6EBE0")]
		private void SetTarget(NetCharacterBehaviour newTarget)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xF6EEA4", Offset = "0xF6EEA4", VA = "0xF6EEA4", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xF6EF04", Offset = "0xF6EF04", VA = "0xF6EF04", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xF6F048", Offset = "0xF6F048", VA = "0xF6F048")]
		public void Update()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xF6F298", Offset = "0xF6F298", VA = "0xF6F298")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF6F614", Offset = "0xF6F614", VA = "0xF6F614")]
		public SpectatorFollowFirstPersonMode()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SpectatorFollowThirdPersonMode : SpectatorMode
	{
		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask _collionMask;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _distanceToPlayer;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetCharacterBehaviour _target;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _pan;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _tilt;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _smoothPosition;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _smoothVelocity;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _offset;

		[Token(Token = "0x170001E8")]
		public override string ModeName
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xF6F61C", Offset = "0xF6F61C", VA = "0xF6F61C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public override bool ShowDrone
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0xF6F65C", Offset = "0xF6F65C", VA = "0xF6F65C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EA")]
		public override bool UseTarget
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0xF6F664", Offset = "0xF6F664", VA = "0xF6F664", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF6F66C", Offset = "0xF6F66C", VA = "0xF6F66C")]
		private void SetTarget(NetCharacterBehaviour newTarget)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xF6F73C", Offset = "0xF6F73C", VA = "0xF6F73C", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xF6F79C", Offset = "0xF6F79C", VA = "0xF6F79C", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xF6F7A4", Offset = "0xF6F7A4", VA = "0xF6F7A4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xF6F930", Offset = "0xF6F930", VA = "0xF6F930")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xF6FC64", Offset = "0xF6FC64", VA = "0xF6FC64")]
		private void TrailerCam()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xF6FFC8", Offset = "0xF6FFC8", VA = "0xF6FFC8")]
		public SpectatorFollowThirdPersonMode()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class SpectatorFollowThirdPersonPayloadMode : SpectatorMode
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask _collionMask;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _distanceToPayload;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 _payloadOffset;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _pan;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _tilt;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _lastKnowPosition;

		[Token(Token = "0x170001EB")]
		public override string ModeName
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0xF6FFD8", Offset = "0xF6FFD8", VA = "0xF6FFD8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public override bool ShowDrone
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xF70018", Offset = "0xF70018", VA = "0xF70018", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public override bool UseTarget
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0xF70020", Offset = "0xF70020", VA = "0xF70020", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xF70028", Offset = "0xF70028", VA = "0xF70028", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xF7002C", Offset = "0xF7002C", VA = "0xF7002C", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xF70030", Offset = "0xF70030", VA = "0xF70030")]
		public void Update()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xF700C4", Offset = "0xF700C4", VA = "0xF700C4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xF70410", Offset = "0xF70410", VA = "0xF70410")]
		public SpectatorFollowThirdPersonPayloadMode()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class SpectatorFreeCameraMode : SpectatorMode
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _cameraSpeed;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _lookSensitivity;

		[Token(Token = "0x170001EE")]
		public override string ModeName
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xF70478", Offset = "0xF70478", VA = "0xF70478", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public override bool ShowDrone
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xF704B8", Offset = "0xF704B8", VA = "0xF704B8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public override bool UseTarget
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xF704C0", Offset = "0xF704C0", VA = "0xF704C0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xF704C8", Offset = "0xF704C8", VA = "0xF704C8", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xF704CC", Offset = "0xF704CC", VA = "0xF704CC", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xF704D0", Offset = "0xF704D0", VA = "0xF704D0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xF70AD4", Offset = "0xF70AD4", VA = "0xF70AD4")]
		public SpectatorFreeCameraMode()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public abstract class SpectatorMode : MonoBehaviour
	{
		[Token(Token = "0x170001F1")]
		public abstract string ModeName
		{
			[Token(Token = "0x6001166")]
			get;
		}

		[Token(Token = "0x170001F2")]
		public abstract bool ShowDrone
		{
			[Token(Token = "0x6001167")]
			get;
		}

		[Token(Token = "0x170001F3")]
		public abstract bool UseTarget
		{
			[Token(Token = "0x6001168")]
			get;
		}

		[Token(Token = "0x6001169")]
		public abstract void OnStartMode();

		[Token(Token = "0x600116A")]
		public abstract void OnEndMode();

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xF71AE8", Offset = "0xF71AE8", VA = "0xF71AE8")]
		protected SpectatorMode()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class SpectatorStaticCameraMode : SpectatorMode
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpectatorTarget _currentTarget;

		[Token(Token = "0x170001F4")]
		public override string ModeName
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0xF71AF0", Offset = "0xF71AF0", VA = "0xF71AF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public override bool ShowDrone
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0xF71B30", Offset = "0xF71B30", VA = "0xF71B30", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		public override bool UseTarget
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xF71B38", Offset = "0xF71B38", VA = "0xF71B38", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF71B40", Offset = "0xF71B40", VA = "0xF71B40", Slot = "8")]
		public override void OnEndMode()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xF71B44", Offset = "0xF71B44", VA = "0xF71B44", Slot = "7")]
		public override void OnStartMode()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xF71D54", Offset = "0xF71D54", VA = "0xF71D54")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xF72160", Offset = "0xF72160", VA = "0xF72160")]
		public SpectatorStaticCameraMode()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class SpectatorTarget : MonoBehaviour
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int index;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _index;

		[Token(Token = "0x170001F7")]
		public static List<SpectatorTarget> SpectatorTargets
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xF72168", Offset = "0xF72168", VA = "0xF72168")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xF721C0", Offset = "0xF721C0", VA = "0xF721C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xF72228", Offset = "0xF72228", VA = "0xF72228")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xF72354", Offset = "0xF72354", VA = "0xF72354")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xF71BA4", Offset = "0xF71BA4", VA = "0xF71BA4")]
		public static SpectatorTarget GetRandomTarget()
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xF724D0", Offset = "0xF724D0", VA = "0xF724D0")]
		public static SpectatorTarget GetTarget(int index)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xF71F3C", Offset = "0xF71F3C", VA = "0xF71F3C")]
		public SpectatorTarget GetNextTarget()
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xF72048", Offset = "0xF72048", VA = "0xF72048")]
		public SpectatorTarget GetPreviousTarget()
		{
			return null;
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xF72670", Offset = "0xF72670", VA = "0xF72670")]
		public SpectatorTarget()
		{
		}
	}
}
namespace HyperDash.Shop
{
	[Token(Token = "0x2000307")]
	public class IapShop
	{
		[Token(Token = "0x2000308")]
		public delegate void IapShopRefreshedDelegate(IapShop sender, IapShopResponse list);

		[Token(Token = "0x170001F8")]
		public IapShopResponse IapResponse
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0xF728AC", Offset = "0xF728AC", VA = "0xF728AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xF728B4", Offset = "0xF728B4", VA = "0xF728B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event IapShopRefreshedDelegate IapShopRefreshed
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0xF7273C", Offset = "0xF7273C", VA = "0xF7273C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001180")]
			[Address(RVA = "0xF727F4", Offset = "0xF727F4", VA = "0xF727F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xF728BC", Offset = "0xF728BC", VA = "0xF728BC")]
		public void SetIapShopResponse(IapShopResponse iapResponse)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xF7294C", Offset = "0xF7294C", VA = "0xF7294C")]
		public void Purchase(int index, Action<IapCheckoutProgress> callback)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xF72B34", Offset = "0xF72B34", VA = "0xF72B34")]
		private void PurchaseCallback(IapCheckoutProgress handle, int index)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xF72E30", Offset = "0xF72E30", VA = "0xF72E30")]
		public IapShop()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class ItemShop
	{
		[Token(Token = "0x200030B")]
		public delegate void ShopRefreshedDelegate(ItemShop sender, ShopResponse shop);

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double _targetEndTime;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _refreshing;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isInitialized;

		[Token(Token = "0x170001F9")]
		public ShopResponse ShopResponse
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xF73188", Offset = "0xF73188", VA = "0xF73188")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xF73190", Offset = "0xF73190", VA = "0xF73190")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public bool Refreshing
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xF73198", Offset = "0xF73198", VA = "0xF73198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000035")]
		public static event ShopRefreshedDelegate ShopRefreshed
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0xF73018", Offset = "0xF73018", VA = "0xF73018")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0xF730D0", Offset = "0xF730D0", VA = "0xF730D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xF731A0", Offset = "0xF731A0", VA = "0xF731A0")]
		public void SetShopResponse(ShopResponse shopResponse)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xF732E4", Offset = "0xF732E4", VA = "0xF732E4")]
		public void UpdateTick(float dt)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xF73328", Offset = "0xF73328", VA = "0xF73328")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xF733C8", Offset = "0xF733C8", VA = "0xF733C8")]
		public void PurchaseItem(ShopItemResponse response, Action<Response<BuyShopItemResponse>> callback)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xF734FC", Offset = "0xF734FC", VA = "0xF734FC")]
		private void PurchaseCallback(Response<BuyShopItemResponse> response)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xF73638", Offset = "0xF73638", VA = "0xF73638")]
		public ItemShop()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class Ui3dBundleOnPress : MonoBehaviour, IUi3d, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _scalePivot;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _gunModelParent;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _returnWeaponVisual;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SerializedDictionary<WeaponTypes, WeaponPreviewData> _weaponData;

		[Token(Token = "0x170001FB")]
		public GameObject ScalePivot
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xF739F8", Offset = "0xF739F8", VA = "0xF739F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public GameObject GunModelParent
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xF73A00", Offset = "0xF73A00", VA = "0xF73A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public GameObject ReturnWeaponVisual
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xF73A08", Offset = "0xF73A08", VA = "0xF73A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public BundleSkin Skin
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0xF73A10", Offset = "0xF73A10", VA = "0xF73A10")]
			[CompilerGenerated]
			get
			{
				return default(BundleSkin);
			}
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xF73A1C", Offset = "0xF73A1C", VA = "0xF73A1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public SerializedDictionary<WeaponTypes, WeaponPreviewData> WeaponData
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xF73A2C", Offset = "0xF73A2C", VA = "0xF73A2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<Ui3dBundleOnPress> OnPress
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0xF73898", Offset = "0xF73898", VA = "0xF73898")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xF73948", Offset = "0xF73948", VA = "0xF73948")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xF73A34", Offset = "0xF73A34", VA = "0xF73A34", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xF73A54", Offset = "0xF73A54", VA = "0xF73A54")]
		public Ui3dBundleOnPress()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class Ui3dOnPress : MonoBehaviour, IUi3d, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UnityEvent OnPress;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xF73A5C", Offset = "0xF73A5C", VA = "0xF73A5C", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xF73A70", Offset = "0xF73A70", VA = "0xF73A70")]
		public Ui3dOnPress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030F")]
	public struct WeaponPreviewData
	{
		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GunSkinSelector Weapon;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject DashedSprite;
	}
	[Token(Token = "0x2000310")]
	public class UIBundleCollectionPage : MonoBehaviour
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Category Titles")]
		[SerializeField]
		private GameObject _characterCategory;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _weaponCategory;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Skin Elements")]
		private Ui3dBundleOnPress[] _gunSkinPreviews;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Ui3dOnPress _characterSkinPreview;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _characterScalePivot;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Character Selectors")]
		private HelmetSelector _helmetSelector;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BodySelector _bodySelector;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("Purchase Window")]
		private TextMeshProUGUI _skinBuyNameText;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _skinBuyCreditsText;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _skinBuyOriginalCreditsText;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _strikeThroughText;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button _skinBuyEquipButton;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI _skinBuyEquipText;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshProUGUI _itemDescription;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI _errorMessage;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isPreviewingItem;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ui3dBundleOnPress _currentSelectedSkin;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _timePurchaseStarted;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _characterSkinName;

		[Token(Token = "0x4001119")]
		private const string InvalidName = "invalid";

		[Token(Token = "0x400111A")]
		private const string ButtonShopEquipedKey = "btn_shopequiped";

		[Token(Token = "0x400111B")]
		private const string ButtonShopEquipSkinKey = "btn_shopequipskin";

		[Token(Token = "0x400111C")]
		private const string PurchaseSkinKey = "btn_purchaseskin";

		[Token(Token = "0x400111D")]
		private const string BodyPrefix = "body";

		[Token(Token = "0x400111E")]
		private const string HelmetPrefix = "helmet";

		[Token(Token = "0x400111F")]
		private const string InvalidKey = "invalid";

		[Token(Token = "0x4001120")]
		private const float FadeDuration = 0.4f;

		[Token(Token = "0x14000037")]
		public event Action OnBundlePurchased
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xF73A78", Offset = "0xF73A78", VA = "0xF73A78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xF73B14", Offset = "0xF73B14", VA = "0xF73B14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xF73BB0", Offset = "0xF73BB0", VA = "0xF73BB0")]
		protected void Start()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xF73CEC", Offset = "0xF73CEC", VA = "0xF73CEC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xF73E28", Offset = "0xF73E28", VA = "0xF73E28")]
		public void InitPage(ShopItemResponse bundleData)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xF73E64", Offset = "0xF73E64", VA = "0xF73E64")]
		private void InitPurchaseWindow(ShopItemResponse bundleData)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xF74B58", Offset = "0xF74B58", VA = "0xF74B58")]
		private void SetSkinBuyEquipButtonState(ShopItemResponse skinData)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xF74734", Offset = "0xF74734", VA = "0xF74734")]
		private void SetUpGunPreviewElements(List<BundleSkin> gunSkinData)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xF743EC", Offset = "0xF743EC", VA = "0xF743EC")]
		private List<BundleSkin> LoadSkinData(ShopItemResponse skinData)
		{
			return null;
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xF74D80", Offset = "0xF74D80", VA = "0xF74D80")]
		private void SetUpCharacterSkinPreview(BundleSkin skin)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF740D8", Offset = "0xF740D8", VA = "0xF740D8")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xF74F48", Offset = "0xF74F48", VA = "0xF74F48")]
		public void ResetPage()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xF74F60", Offset = "0xF74F60", VA = "0xF74F60")]
		private void FadeOut()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xF751B0", Offset = "0xF751B0", VA = "0xF751B0")]
		private void ResetPreview()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF752D8", Offset = "0xF752D8", VA = "0xF752D8")]
		public void ShowErrorMessage(string message)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF75330", Offset = "0xF75330", VA = "0xF75330")]
		public void SetLoading(bool isLoading)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF75430", Offset = "0xF75430", VA = "0xF75430")]
		private void OnSkinPressed(Ui3dBundleOnPress skinObject)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF756E0", Offset = "0xF756E0", VA = "0xF756E0")]
		private void OnPurchaseEquipPressed()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF756FC", Offset = "0xF756FC", VA = "0xF756FC")]
		public UIBundleCollectionPage()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class UICollectionPageBase : MonoBehaviour
	{
		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIItemShopElementBase[] _skinElements;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _navigateLeftButton;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _navigateRightButton;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _maxSkinsPerPage;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Page Counters")]
		private Image[] _pageCounters;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _pageCounterOffset;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color _inactiveCounterColor;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Color _activeCounterColor;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ShopItemResponse> _currentSkins;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _currentPage;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _currentMaximumPages;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Image _currentPageCounter;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _inactiveCounterScale;

		[Token(Token = "0x4001131")]
		private const float PageCounterFadeDuration = 0.4f;

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xF759E0", Offset = "0xF759E0", VA = "0xF759E0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xF75AD0", Offset = "0xF75AD0", VA = "0xF75AD0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xF75BC0", Offset = "0xF75BC0", VA = "0xF75BC0")]
		private void OnNavigateLeft()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xF75EEC", Offset = "0xF75EEC", VA = "0xF75EEC")]
		private void OnNavigateRight()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xF75D1C", Offset = "0xF75D1C", VA = "0xF75D1C")]
		private void UpdateNavigationButtonVisibility()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF75F1C", Offset = "0xF75F1C", VA = "0xF75F1C")]
		public void InitPage(List<ShopItemResponse> skinData)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF75D7C", Offset = "0xF75D7C", VA = "0xF75D7C")]
		private void UpdatePageCounters()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF76160", Offset = "0xF76160", VA = "0xF76160")]
		private void InitPageCounters()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xF76008", Offset = "0xF76008", VA = "0xF76008")]
		private void SortSkins()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xF75BF0", Offset = "0xF75BF0", VA = "0xF75BF0")]
		private void UpdatePageData(List<ShopItemResponse> skinData)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xF76368", Offset = "0xF76368", VA = "0xF76368")]
		public UICollectionPageBase()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class UiCreditsBalance : MonoBehaviour
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _creditsText;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private char[] _chars;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] _charsWorker;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _startCharIndex;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _charCount;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _actualCredits;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _animStartCredits;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _visualCredits;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float _animationLerp;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static bool WaitForNextAnimate;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xF764D4", Offset = "0xF764D4", VA = "0xF764D4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xF76520", Offset = "0xF76520", VA = "0xF76520")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xF768EC", Offset = "0xF768EC", VA = "0xF768EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xF76990", Offset = "0xF76990", VA = "0xF76990")]
		protected void Update()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF76688", Offset = "0xF76688", VA = "0xF76688")]
		private void OnUserDataUpdatedEvent(UserResponse userResponse)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF76A94", Offset = "0xF76A94", VA = "0xF76A94")]
		public static void MarkForAnim()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xF76724", Offset = "0xF76724", VA = "0xF76724")]
		private void SetCharArray(int number)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xF76AE8", Offset = "0xF76AE8", VA = "0xF76AE8")]
		public UiCreditsBalance()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public class BorderHoverAnimation
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UIGradient _edgeGradient;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _currentEdgeAngle;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xF76B68", Offset = "0xF76B68", VA = "0xF76B68")]
		public void Reset()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xF76B90", Offset = "0xF76B90", VA = "0xF76B90")]
		public void Update(float dt)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xF76C00", Offset = "0xF76C00", VA = "0xF76C00")]
		public void Start()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xF76C18", Offset = "0xF76C18", VA = "0xF76C18")]
		public BorderHoverAnimation()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class UiCreditsOption : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _priceText;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _creditsText;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _bestValueBanner;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BorderHoverAnimation _borderHoverAnimation;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UIGradient _edgeGradient;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnPress;

		[Token(Token = "0x4001147")]
		private const string CreditString = "<sprite name=\"credits\" tint=1>";

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _currentEdgeIntensity;

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xF76C20", Offset = "0xF76C20", VA = "0xF76C20")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xF76CB4", Offset = "0xF76CB4", VA = "0xF76CB4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xF76D48", Offset = "0xF76D48", VA = "0xF76D48")]
		protected void Update()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF76D6C", Offset = "0xF76D6C", VA = "0xF76D6C")]
		public void UpdateData(IapResponse iapResponse, bool isBestValue, Sprite sprite)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xF77214", Offset = "0xF77214", VA = "0xF77214", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xF77240", Offset = "0xF77240", VA = "0xF77240", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xF77244", Offset = "0xF77244", VA = "0xF77244")]
		public UiCreditsOption()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class UiCreditsShop : MonoBehaviour
	{
		[Token(Token = "0x2000319")]
		public interface IPanel
		{
			[Token(Token = "0x60011F8")]
			void Show();

			[Token(Token = "0x60011F9")]
			void Hide();
		}

		[Serializable]
		[Token(Token = "0x200031A")]
		public class OptionsPanel : IPanel
		{
			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private CanvasGroup _canvasGroup;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private UiCreditsOption _creditsOptionTemplate;

			[Token(Token = "0x4001158")]
			private const int Capacity = 5;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UiCreditsOption[] _creditsOptions;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Action<int> _pressedItemButton;

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xF77558", Offset = "0xF77558", VA = "0xF77558")]
			public void Init(Action<int> pressedItemButton)
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xF79564", Offset = "0xF79564", VA = "0xF79564", Slot = "5")]
			public void Hide()
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xF79698", Offset = "0xF79698", VA = "0xF79698", Slot = "4")]
			public void Show()
			{
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xF78C40", Offset = "0xF78C40", VA = "0xF78C40")]
			public void SetData(IapShopResponse data, CreditSprites sprites)
			{
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xF79754", Offset = "0xF79754", VA = "0xF79754")]
			public OptionsPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031C")]
		public class BuyPanel : IPanel
		{
			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private CanvasGroup _creditBuyGroup;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Button _buyButton;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private TMP_Text _totalCreditsText;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private TMP_Text _priceText;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private TMP_Text _errorMessage;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private GameObject _creditSocket;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private SpriteRenderer _creditImageRenderer;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Action _pressedBuyCallback;

			[Token(Token = "0x6001202")]
			[Address(RVA = "0xF777D0", Offset = "0xF777D0", VA = "0xF777D0")]
			public void Init(Action pressedBuy)
			{
			}

			[Token(Token = "0x6001203")]
			[Address(RVA = "0xF79814", Offset = "0xF79814", VA = "0xF79814", Slot = "4")]
			public void Show()
			{
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0xF77BFC", Offset = "0xF77BFC", VA = "0xF77BFC", Slot = "5")]
			public void Hide()
			{
			}

			[Token(Token = "0x6001205")]
			[Address(RVA = "0xF786EC", Offset = "0xF786EC", VA = "0xF786EC")]
			public void SetData(IapResponse data, CreditSprites sprites)
			{
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0xF78678", Offset = "0xF78678", VA = "0xF78678")]
			public void SetBuyButtonEnabled(bool enable)
			{
			}

			[Token(Token = "0x6001207")]
			[Address(RVA = "0xF79144", Offset = "0xF79144", VA = "0xF79144")]
			public void ShowErrorMessage(string errorMessage)
			{
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0xF799A8", Offset = "0xF799A8", VA = "0xF799A8")]
			public BuyPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031D")]
		public class CouponPanel : IPanel
		{
			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private CanvasGroup _couponGroup;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private TMP_InputField _inputField;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Button _submitButton;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private TextMeshProUGUI _errorMessage;

			[Token(Token = "0x17000200")]
			public string CurrentCode
			{
				[Token(Token = "0x600120C")]
				[Address(RVA = "0xF79A20", Offset = "0xF79A20", VA = "0xF79A20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600120D")]
			[Address(RVA = "0xF7746C", Offset = "0xF7746C", VA = "0xF7746C")]
			public void Init(Action<string> submitButtonPressed)
			{
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0xF77E0C", Offset = "0xF77E0C", VA = "0xF77E0C", Slot = "5")]
			public void Hide()
			{
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0xF79A44", Offset = "0xF79A44", VA = "0xF79A44", Slot = "4")]
			public void Show()
			{
			}

			[Token(Token = "0x6001210")]
			[Address(RVA = "0xF794F4", Offset = "0xF794F4", VA = "0xF794F4")]
			public void ShowError(string errorMessage)
			{
			}

			[Token(Token = "0x6001211")]
			[Address(RVA = "0xF784E0", Offset = "0xF784E0", VA = "0xF784E0")]
			public void HideError()
			{
			}

			[Token(Token = "0x6001212")]
			[Address(RVA = "0xF79B30", Offset = "0xF79B30", VA = "0xF79B30")]
			public CouponPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031F")]
		public class CreditSprites
		{
			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite CreditsTier1;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite CreditsTier2;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite CreditsTier3;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sprite CreditsTier4;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Sprite CreditsTier5;

			[Token(Token = "0x6001216")]
			[Address(RVA = "0xF791B4", Offset = "0xF791B4", VA = "0xF791B4")]
			public Sprite GetByID(int id)
			{
				return null;
			}

			[Token(Token = "0x6001217")]
			[Address(RVA = "0xF79B9C", Offset = "0xF79B9C", VA = "0xF79B9C")]
			public CreditSprites()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000320")]
		public class ReceivedPanel : IPanel
		{
			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private CanvasGroup _group;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform _textBox;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform _spriteSocket;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Transform _flare;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private SpriteRenderer _icon;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private TextMeshProUGUI _text;

			[Token(Token = "0x6001218")]
			[Address(RVA = "0xF77F48", Offset = "0xF77F48", VA = "0xF77F48", Slot = "5")]
			public void Hide()
			{
			}

			[Token(Token = "0x6001219")]
			[Address(RVA = "0xF79BA4", Offset = "0xF79BA4", VA = "0xF79BA4", Slot = "4")]
			public void Show()
			{
			}

			[Token(Token = "0x600121A")]
			[Address(RVA = "0xF79204", Offset = "0xF79204", VA = "0xF79204")]
			public void SetData(string text, Sprite icon)
			{
			}

			[Token(Token = "0x600121B")]
			[Address(RVA = "0xF79F20", Offset = "0xF79F20", VA = "0xF79F20")]
			public ReceivedPanel()
			{
			}
		}

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Panels")]
		private OptionsPanel _optionsPanel;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BuyPanel _buyPanel;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CouponPanel _couponPanel;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ReceivedPanel _receivedPanel;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Button Bar")]
		private CanvasGroup _buttonBarCanvasGroup;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _couponButton;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("Status Group")]
		private CanvasGroup _statusGroup;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text _statusText;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Audio")]
		[SerializeField]
		private AudioClip _purchaseSound;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Icons")]
		[SerializeField]
		private CreditSprites _icons;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _currentSelectedItem;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IPanel _currentPanel;

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF77268", Offset = "0xF77268", VA = "0xF77268")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xF7787C", Offset = "0xF7787C", VA = "0xF7787C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xF7798C", Offset = "0xF7798C", VA = "0xF7798C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xF77960", Offset = "0xF77960", VA = "0xF77960")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xF77A90", Offset = "0xF77A90", VA = "0xF77A90")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xF78324", Offset = "0xF78324", VA = "0xF78324")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xF781D8", Offset = "0xF781D8", VA = "0xF781D8")]
		private void SwitchPanel(IPanel panel)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xF783A4", Offset = "0xF783A4", VA = "0xF783A4")]
		private void SetButtonsEnabled(bool enable)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xF783E8", Offset = "0xF783E8", VA = "0xF783E8")]
		private void PressedCouponButton()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xF783F0", Offset = "0xF783F0", VA = "0xF783F0")]
		private void PressedSubmitCouponButton(string couponCode)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xF7855C", Offset = "0xF7855C", VA = "0xF7855C")]
		private void PressedItemButton(int itemIndex)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xF78984", Offset = "0xF78984", VA = "0xF78984")]
		private void PressedBackButton()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xF78AF8", Offset = "0xF78AF8", VA = "0xF78AF8")]
		private void PressedBuyButton()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xF781A0", Offset = "0xF781A0", VA = "0xF781A0")]
		private void IapShopOnIapShopRefreshed(IapShop sender, IapShopResponse response)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xF78DC8", Offset = "0xF78DC8", VA = "0xF78DC8")]
		private void PurchaseCallback(IapCheckoutProgress handle)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xF7924C", Offset = "0xF7924C", VA = "0xF7924C")]
		private void GiftCallback(Response<ClaimGiftResponse> response)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xF7954C", Offset = "0xF7954C", VA = "0xF7954C")]
		public UiCreditsShop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public struct BundleSkin
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] Items;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ItemCategory Category;

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF74CC4", Offset = "0xF74CC4", VA = "0xF74CC4")]
		public BundleSkin(string itemName, ItemCategory category)
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class UiItemCollectionShop : MonoBehaviour
	{
		[Token(Token = "0x2000325")]
		[CompilerGenerated]
		private sealed class <EnsureMinimumDelay>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001257")]
				[Address(RVA = "0xF7FBCC", Offset = "0xF7FBCC", VA = "0xF7FBCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001259")]
				[Address(RVA = "0xF7FC14", Offset = "0xF7FC14", VA = "0xF7FC14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0xF7E1E8", Offset = "0xF7E1E8", VA = "0xF7E1E8")]
			[DebuggerHidden]
			public <EnsureMinimumDelay>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6001255")]
			[Address(RVA = "0xF7FB04", Offset = "0xF7FB04", VA = "0xF7FB04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001256")]
			[Address(RVA = "0xF7FB08", Offset = "0xF7FB08", VA = "0xF7FB08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001258")]
			[Address(RVA = "0xF7FBD4", Offset = "0xF7FBD4", VA = "0xF7FBD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _backButton;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _addCreditsButton;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _goAdFreeButton;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiStoreTimer _storeTimer;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup _statusGroup;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup _mainCanvasGroup;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup _buttonBarCanvasGroup;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text _shopError;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _credits;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Refresh Window Group")]
		[SerializeField]
		private CanvasGroup _salesRefreshedCanvasGroup;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button _refreshWindowBackButton;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Shop List Group")]
		[SerializeField]
		private CanvasGroup _shopListGroup;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _goAdsFreeModel;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Header("Skin Buy Group")]
		private CanvasGroup _skinBuyGroup;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text _skinBuyNameText;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text _skinBuyCreditsText;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text _skinBuyOriginalCreditsText;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text _strikeThroughText;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button _skinBuyEquipButton;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text _skinBuyEquipText;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _scalePivot;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _gunSocket;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject _characterSocket;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BodySelector _bodySelector;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private HelmetSelector _helmetSelector;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TMP_Text _errorMessage;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TMP_Text _itemDescription;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Ui3dOnPress _weaponPreview;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Ui3dOnPress _characterPreview;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GunSkinSelector _pistol;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GunSkinSelector _smg;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GunSkinSelector _burst;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GunSkinSelector _shock;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GunSkinSelector _rocketlauncher;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GunSkinSelector _sniper;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GunSkinSelector _shotgun;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject _pistolDashedSprite;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject _smgDashedSprite;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject _burstDashedSprite;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject _shockDashedSprite;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject _rocketlauncherDashedSprite;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject _sniperDashedSprite;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject _shotgunDashedSprite;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject _returnWeaponVisual;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject _gunModelParent;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[Header("Not enough credits Group")]
		[SerializeField]
		private CanvasGroup _necGroup;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Button _necBackButton;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Button _necPurchaseButton;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[Header("Gun Collection")]
		[SerializeField]
		private CanvasGroup _gunCollectionCanvasGroup;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private UICollectionPageBase _gunCollectionPage;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private UiItemShopGunCollectionElement[] _gunCollectionElements;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private UiItemShopWeaponElement[] _weaponElements;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		[Header("Character Collection")]
		private CanvasGroup _characterCollectionCanvasGroup;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private UICollectionPageBase _characterCollectionPage;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private UiItemShopCharacterCollectionElement _characterCollectionElement;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private UiItemShopCharacterElement[] _characterElements;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[Header("Bundle Collection")]
		private UIBundleCollectionPage _bundleCollectionPage;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private CanvasGroup _bundleCollectionCanvasGroup;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private GameObject _bundleDivider;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private GameObject _offersText;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[Header("Sound Effects")]
		private AudioClip _purchaseSound;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private AudioClip _errorSound;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[Header("Sales Data")]
		private UiItemShopBundleCollectionElement _bundleCollectionElement;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private List<UiItemShopCharacterElement> _saleCharacterElements;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private List<UiItemShopWeaponElement> _saleWeaponElements;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private ShopItemResponse _selectedItem;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private ShopResponse _currentShopResponse;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool _ownsSelectedSkin;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
		private bool _isPreviewingItem;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float _timePurchaseStarted;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private ItemCategory _currentItemCategory;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private ItemCategory _currentCollectionType;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private string _currentCollectionName;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Dictionary<string, List<ShopItemResponse>> _storeSkins;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private List<ShopItemResponse> _sales;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private List<ShopItemResponse> _bundleResponses;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private ShopItemResponse _bundleResponse;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private bool _canUpdateCurrentShop;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
		private bool _hasPurchasedSkin;

		[Token(Token = "0x40011C7")]
		private const string ItemShopEmptyKey = "itemshop_empty";

		[Token(Token = "0x40011C8")]
		private const string BundlePrefix = "bundle";

		[Token(Token = "0x40011C9")]
		private const string InvalidKey = "invalid";

		[Token(Token = "0x40011CA")]
		private const float FadeDuration = 0.4f;

		[Token(Token = "0x40011CB")]
		private const float MinAlphaValue = 0.2f;

		[Token(Token = "0x40011CC")]
		private const string ButtonShopEquipedKey = "btn_shopequiped";

		[Token(Token = "0x40011CD")]
		private const string ButtonShopEquipSkinKey = "btn_shopequipskin";

		[Token(Token = "0x40011CE")]
		private const string PurchaseSkinKey = "btn_purchaseskin";

		[Token(Token = "0x40011CF")]
		private const string ItemShopNotFoundErrorKey = "error_itemshop_notfound";

		[Token(Token = "0x40011D0")]
		private const string ItemShopInvalidStateErrorKey = "error_itemshop_invalidstate";

		[Token(Token = "0x40011D1")]
		private const string ItemShopConflictErrorKey = "error_itemshop_conflict";

		[Token(Token = "0x40011D2")]
		private const string SkinNameKey = "skin_name";

		[Token(Token = "0x40011D3")]
		private const string SkinTypeKey = "skin_type";

		[Token(Token = "0x40011D4")]
		private const string CharacterValue = "Character";

		[Token(Token = "0x40011D5")]
		private const string WeaponValue = "Weapon";

		[Token(Token = "0x40011D6")]
		private const int MaxSaleSkins = 4;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF7A00C", Offset = "0xF7A00C", VA = "0xF7A00C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF7AA24", Offset = "0xF7AA24", VA = "0xF7AA24")]
		private void AddCreditsButtonPressed()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF7AD8C", Offset = "0xF7AD8C", VA = "0xF7AD8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF7AE9C", Offset = "0xF7AE9C", VA = "0xF7AE9C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF7B0F0", Offset = "0xF7B0F0", VA = "0xF7B0F0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xF7C08C", Offset = "0xF7C08C", VA = "0xF7C08C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF7C284", Offset = "0xF7C284", VA = "0xF7C284")]
		private void OnSalesRefreshed()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF7C544", Offset = "0xF7C544", VA = "0xF7C544")]
		private void OnRefreshWindowBackButtonPressed()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF7B460", Offset = "0xF7B460", VA = "0xF7B460")]
		private void ItemShopOnShopRefreshed(ItemShop sender, ShopResponse shopResponse)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF7CEB0", Offset = "0xF7CEB0", VA = "0xF7CEB0")]
		private void HandleSalesData()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF7C6BC", Offset = "0xF7C6BC", VA = "0xF7C6BC")]
		private void LoadSkins(ShopItemResponse[] items)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xF7AE70", Offset = "0xF7AE70", VA = "0xF7AE70")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xF7D440", Offset = "0xF7D440", VA = "0xF7D440")]
		private void OnLoadCollection(ItemCategory collectionType, string collectionName)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xF7AACC", Offset = "0xF7AACC", VA = "0xF7AACC")]
		private void CancelItemPreview()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xF7C418", Offset = "0xF7C418", VA = "0xF7C418")]
		private void ResetScalePivot()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF7DA48", Offset = "0xF7DA48", VA = "0xF7DA48")]
		private void ActivateScalePivot()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xF7B884", Offset = "0xF7B884", VA = "0xF7B884")]
		private void SetSelected(ShopItemResponse itemResponse)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xF7DBCC", Offset = "0xF7DBCC", VA = "0xF7DBCC")]
		private void HandlePurchaseWindow(ShopItemResponse response, string nameLocaKey)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF7DEFC", Offset = "0xF7DEFC", VA = "0xF7DEFC")]
		private static string GetCreditsText(ShopItemResponse response)
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF7D864", Offset = "0xF7D864", VA = "0xF7D864")]
		private void DisablePlaceHolderAssets()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF7ABC0", Offset = "0xF7ABC0", VA = "0xF7ABC0")]
		private void DoFadeCanvas(CanvasGroup canvas, bool fadeIn)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xF7DD9C", Offset = "0xF7DD9C", VA = "0xF7DD9C")]
		private void SetSkinBuyEquipButtonState(ShopItemResponse response)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xF7DF6C", Offset = "0xF7DF6C", VA = "0xF7DF6C")]
		private void BackButtonPressed()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xF7E020", Offset = "0xF7E020", VA = "0xF7E020")]
		private void OnBundlePurchased()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xF7E0CC", Offset = "0xF7E0CC", VA = "0xF7E0CC")]
		private void SkinBuyEquipPressed()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xF7E164", Offset = "0xF7E164", VA = "0xF7E164")]
		[IteratorStateMachine(typeof(<EnsureMinimumDelay>d__120))]
		private IEnumerator EnsureMinimumDelay(float waitTime, Action action)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xF7E210", Offset = "0xF7E210", VA = "0xF7E210")]
		private void PurchaseWeaponCallback(Response<BuyShopItemResponse> response)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xF7E334", Offset = "0xF7E334", VA = "0xF7E334")]
		private void PurchaseWeaponCallbackInternal(Response<BuyShopItemResponse> response)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xF7E9A0", Offset = "0xF7E9A0", VA = "0xF7E9A0")]
		private void SetLoading(bool isLoading)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xF7EC0C", Offset = "0xF7EC0C", VA = "0xF7EC0C")]
		private void SetLoadingBundle(bool isLoading)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xF7EAA0", Offset = "0xF7EAA0", VA = "0xF7EAA0")]
		private void ShowErrorMessage(string errorMessage)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xF7EB74", Offset = "0xF7EB74", VA = "0xF7EB74")]
		private void SetNecPopup(bool showPopup)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xF7ECFC", Offset = "0xF7ECFC", VA = "0xF7ECFC")]
		private void NotEnoughCreditsPurchasePressed()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xF7ED54", Offset = "0xF7ED54", VA = "0xF7ED54")]
		private void NotEnoughCreditsBackPressed()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xF7ED5C", Offset = "0xF7ED5C", VA = "0xF7ED5C")]
		private void WeaponPreviewPressed()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xF7EEF4", Offset = "0xF7EEF4", VA = "0xF7EEF4")]
		private void CharacterPreviewPressed()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xF7EF7C", Offset = "0xF7EF7C", VA = "0xF7EF7C")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xF7EFC8", Offset = "0xF7EFC8", VA = "0xF7EFC8")]
		public UiItemCollectionShop()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class UiItemShopBundleCollectionElement : UIItemShopElementBase
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image[] _skinPreviews;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _previewSkinPivot;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<BundleSkin> _bundleSkins;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string _collectionName;

		[Token(Token = "0x40011E6")]
		private const string HelmetPrefix = "helmet";

		[Token(Token = "0x40011E7")]
		private const string BodyPrefix = "body";

		[Token(Token = "0x40011E8")]
		private const float PreviewSkinOffset = 380f;

		[Token(Token = "0x14000038")]
		public new event Action<ItemCategory, string> OnPress
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xF7A8D8", Offset = "0xF7A8D8", VA = "0xF7A8D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xF7FC3C", Offset = "0xF7FC3C", VA = "0xF7FC3C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xF7FCEC", Offset = "0xF7FCEC", VA = "0xF7FCEC", Slot = "5")]
		public override void UpdateData(ShopItemResponse bundleData, bool viewedInCollection)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xF80234", Offset = "0xF80234", VA = "0xF80234")]
		private void InitializeSkinPreviews(List<string> gunNames)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xF80714", Offset = "0xF80714", VA = "0xF80714", Slot = "7")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xF80738", Offset = "0xF80738", VA = "0xF80738")]
		public UiItemShopBundleCollectionElement()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class UiItemShopCharacterCollectionElement : UIItemShopCollectionElementBase
	{
		[Token(Token = "0x6001262")]
		[Address(RVA = "0xF807F4", Offset = "0xF807F4", VA = "0xF807F4", Slot = "6")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xF80844", Offset = "0xF80844", VA = "0xF80844")]
		public UiItemShopCharacterCollectionElement()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class UiItemShopCharacterElement : UIItemShopElementBase
	{
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xF80854", Offset = "0xF80854", VA = "0xF80854", Slot = "6")]
		protected override void TryGetSkin(string refId)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xF80948", Offset = "0xF80948", VA = "0xF80948")]
		public UiItemShopCharacterElement()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class UIItemShopCollectionElementBase : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Image _image;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _ownedSkinsText;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string _collectionName;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ShopItemResponse _response;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ShopItemResponse> _skinData;

		[Token(Token = "0x40011F0")]
		private const string DefaultOwnedSkinText = "0/0";

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ItemCategory _itemCategory;

		[Token(Token = "0x17000203")]
		public string CollectionName
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xF80A00", Offset = "0xF80A00", VA = "0xF80A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<ItemCategory, string> OnPress
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xF7A778", Offset = "0xF7A778", VA = "0xF7A778")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xF80950", Offset = "0xF80950", VA = "0xF80950")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xF7CCB8", Offset = "0xF7CCB8", VA = "0xF7CCB8")]
		public void LoadSkinData(List<ShopItemResponse> skinData)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xF80B48", Offset = "0xF80B48", VA = "0xF80B48", Slot = "5")]
		protected virtual void ResetSprite()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xF80820", Offset = "0xF80820", VA = "0xF80820", Slot = "6")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xF80A08", Offset = "0xF80A08", VA = "0xF80A08")]
		private int GetOwnedAmount()
		{
			return default(int);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xF8084C", Offset = "0xF8084C", VA = "0xF8084C")]
		public UIItemShopCollectionElementBase()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class UIItemShopElementBase : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TextMeshProUGUI _titleText;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _creditsText;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _creditIcon;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UISkinElementAnimation _animation;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _edgeImage;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _newColor;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color _ownedColor;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[Header("Discount Data")]
		private TextMeshProUGUI _discountPercentageText;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI _originalPriceText;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _discountPercentageFrame;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _discountFlare;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI _strikeThroughText;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _hasInInventory;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _viewedInCollection;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ShopItemResponse _response;

		[Token(Token = "0x4001202")]
		private const string InvalidKey = "invalid";

		[Token(Token = "0x1400003A")]
		public event Action<ShopItemResponse> OnPress
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xF7A828", Offset = "0xF7A828", VA = "0xF7A828")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xF80B4C", Offset = "0xF80B4C", VA = "0xF80B4C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xF80BFC", Offset = "0xF80BFC", VA = "0xF80BFC", Slot = "5")]
		public virtual void UpdateData(ShopItemResponse iapItemResponse, bool viewedInCollection)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xF80D5C", Offset = "0xF80D5C", VA = "0xF80D5C", Slot = "6")]
		protected virtual void TryGetSkin(string refId)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xF803D0", Offset = "0xF803D0", VA = "0xF803D0")]
		protected void HandlePriceText(ShopItemResponse iapItemResponse)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xF80D60", Offset = "0xF80D60", VA = "0xF80D60", Slot = "7")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xF807EC", Offset = "0xF807EC", VA = "0xF807EC")]
		public UIItemShopElementBase()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class UiItemShopGunCollectionElement : UIItemShopCollectionElementBase
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private WeaponTypes _weaponType;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocaText _locaText;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, string> _collectionLocalizationKeys;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xF80D80", Offset = "0xF80D80", VA = "0xF80D80")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xF80DFC", Offset = "0xF80DFC", VA = "0xF80DFC", Slot = "5")]
		protected override void ResetSprite()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xF80D84", Offset = "0xF80D84", VA = "0xF80D84")]
		private void ResetLocaKey()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xF80EAC", Offset = "0xF80EAC", VA = "0xF80EAC", Slot = "6")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xF80EE8", Offset = "0xF80EE8", VA = "0xF80EE8")]
		public UiItemShopGunCollectionElement()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class UiItemShopWeaponElement : UIItemShopElementBase
	{
		[Token(Token = "0x600127A")]
		[Address(RVA = "0xF81148", Offset = "0xF81148", VA = "0xF81148", Slot = "6")]
		protected override void TryGetSkin(string refId)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xF8123C", Offset = "0xF8123C", VA = "0xF8123C")]
		public UiItemShopWeaponElement()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class UiStoreTimer : MonoBehaviour
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _hoursText;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _minutesText;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _secondsText;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime TargetTime;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _startTime;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double _targetEndTime;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _lastSetTime;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _canResetTimer;

		[Token(Token = "0x1400003B")]
		public event Action OnTimerReset
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xF7A988", Offset = "0xF7A988", VA = "0xF7A988")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xF7B054", Offset = "0xF7B054", VA = "0xF7B054")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xF7C5AC", Offset = "0xF7C5AC", VA = "0xF7C5AC")]
		public void SetTargetTime(DateTime endTime)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xF81244", Offset = "0xF81244", VA = "0xF81244")]
		private void SetTimer(int totalSeconds)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xF813A8", Offset = "0xF813A8", VA = "0xF813A8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xF81438", Offset = "0xF81438", VA = "0xF81438")]
		public UiStoreTimer()
		{
		}
	}
}
namespace HyperDash.Weapon
{
	[Token(Token = "0x200032F")]
	public class Shield : MonoBehaviour
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider _collider;

		[Token(Token = "0x17000204")]
		public IDamageable Actor
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xF81440", Offset = "0xF81440", VA = "0xF81440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xF8145C", Offset = "0xF8145C", VA = "0xF8145C")]
		public Shield()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AlternatingFiremode : FireMode
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FireMode[] _firemodes;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentIndex;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _switchOnTriggerUp;

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xF81464", Offset = "0xF81464", VA = "0xF81464", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xF814A4", Offset = "0xF814A4", VA = "0xF814A4", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xF814FC", Offset = "0xF814FC", VA = "0xF814FC", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xF81574", Offset = "0xF81574", VA = "0xF81574", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xF81580", Offset = "0xF81580", VA = "0xF81580", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xF81584", Offset = "0xF81584", VA = "0xF81584", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xF81588", Offset = "0xF81588", VA = "0xF81588")]
		public AlternatingFiremode()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[DefaultExecutionOrder(100000)]
	public class AmmoDisplay : MonoBehaviour
	{
		[Token(Token = "0x2000332")]
		private enum DisplayStates
		{
			[Token(Token = "0x400122A")]
			Ammo,
			[Token(Token = "0x400122B")]
			Reloading,
			[Token(Token = "0x400122C")]
			Charging
		}

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _visibilityRoot;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _meter;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _reloadColor;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _chargeColor;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpriteRenderer _chargeIcon;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpriteRenderer _chargeIconBig;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _isLeftHand;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _currentAmmo;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isActive;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _chargeIconActive;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool _largeChargeIconActive;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool _textActive;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private DisplayStates _currentState;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _linearReloadColor;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int _colorID;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private readonly int _percentID;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xF81598", Offset = "0xF81598", VA = "0xF81598")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xF81758", Offset = "0xF81758", VA = "0xF81758")]
		protected void Update()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xF81C58", Offset = "0xF81C58", VA = "0xF81C58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xF81DA4", Offset = "0xF81DA4", VA = "0xF81DA4")]
		private void SetMeterColor(Color color)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xF81DDC", Offset = "0xF81DDC", VA = "0xF81DDC")]
		private void SetMeterPercent(float percent)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xF81AF0", Offset = "0xF81AF0", VA = "0xF81AF0")]
		private void CheckStateChanges(bool isReloading, bool isCharging)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xF81734", Offset = "0xF81734", VA = "0xF81734")]
		private void ChangeState(DisplayStates state)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xF81E14", Offset = "0xF81E14", VA = "0xF81E14")]
		private void EnterState(DisplayStates newState)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xF81B68", Offset = "0xF81B68", VA = "0xF81B68")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xF82044", Offset = "0xF82044", VA = "0xF82044")]
		private void UpdateAmmoText()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xF81A14", Offset = "0xF81A14", VA = "0xF81A14")]
		private void UpdateIsActive()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xF81FF8", Offset = "0xF81FF8", VA = "0xF81FF8")]
		private void ToggleText(bool toggle)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xF81F60", Offset = "0xF81F60", VA = "0xF81F60")]
		private void ToggleChargeIcon(bool toggle)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xF81FAC", Offset = "0xF81FAC", VA = "0xF81FAC")]
		private void ToggleLargeChargeIcon(bool toggle)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xF820E8", Offset = "0xF820E8", VA = "0xF820E8")]
		public AmmoDisplay()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class AutomaticFireMode : FireMode
	{
		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _fireRateFrames;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProjectileSpawner _projectileSpawner;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameOfLastShot;

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xF82174", Offset = "0xF82174", VA = "0xF82174", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xF82698", Offset = "0xF82698", VA = "0xF82698", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xF826D4", Offset = "0xF826D4", VA = "0xF826D4", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xF826D8", Offset = "0xF826D8", VA = "0xF826D8", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xF826DC", Offset = "0xF826DC", VA = "0xF826DC", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xF826E0", Offset = "0xF826E0", VA = "0xF826E0", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xF826E4", Offset = "0xF826E4", VA = "0xF826E4")]
		public AutomaticFireMode()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class BallFireMode : FireMode
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xF826F4", Offset = "0xF826F4", VA = "0xF826F4", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xF826F8", Offset = "0xF826F8", VA = "0xF826F8", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xF826FC", Offset = "0xF826FC", VA = "0xF826FC", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xF82700", Offset = "0xF82700", VA = "0xF82700", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xF829F8", Offset = "0xF829F8", VA = "0xF829F8", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xF829FC", Offset = "0xF829FC", VA = "0xF829FC", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xF82704", Offset = "0xF82704", VA = "0xF82704")]
		private void TryShootBall()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xF82A00", Offset = "0xF82A00", VA = "0xF82A00")]
		public BallFireMode()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class BallWeaponParticle : MonoBehaviour
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem _effect;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _speed;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lifeTime;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _spawnRate;

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xF82A08", Offset = "0xF82A08", VA = "0xF82A08")]
		private void Start()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xF82A94", Offset = "0xF82A94", VA = "0xF82A94")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xF82B20", Offset = "0xF82B20", VA = "0xF82B20")]
		public BallWeaponParticle()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class BlankFireMode : FireMode
	{
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF82B28", Offset = "0xF82B28", VA = "0xF82B28", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xF82B2C", Offset = "0xF82B2C", VA = "0xF82B2C", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xF82B30", Offset = "0xF82B30", VA = "0xF82B30", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xF82B68", Offset = "0xF82B68", VA = "0xF82B68", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xF82B6C", Offset = "0xF82B6C", VA = "0xF82B6C", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xF82B70", Offset = "0xF82B70", VA = "0xF82B70", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xF82B74", Offset = "0xF82B74", VA = "0xF82B74")]
		public BlankFireMode()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class ChargedShotsFireMode : FireMode
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ProjectileSpawner _defaultProjectileSpawner;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProjectileSpawner _chargedProjectileSpawner;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _chargeDelayFrames;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _chargeTimeFrames;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _minFramesBetweenShots;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _fireWhenCharged;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _chargedAmmoCost;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool _useInputQueue;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _chargeTimer;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isCharging;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _queuedShots;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF82B7C", Offset = "0xF82B7C", VA = "0xF82B7C", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF82B80", Offset = "0xF82B80", VA = "0xF82B80", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xF82F94", Offset = "0xF82F94", VA = "0xF82F94", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xF831D0", Offset = "0xF831D0", VA = "0xF831D0", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xF831D4", Offset = "0xF831D4", VA = "0xF831D4", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xF831E0", Offset = "0xF831E0", VA = "0xF831E0", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xF832E0", Offset = "0xF832E0", VA = "0xF832E0")]
		public ChargedShotsFireMode()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public abstract class FireMode : MonoBehaviour
	{
		[Token(Token = "0x60012BA")]
		public abstract void OnTriggerDown();

		[Token(Token = "0x60012BB")]
		public abstract void OnTriggerUp();

		[Token(Token = "0x60012BC")]
		public abstract void OnTrigger();

		[Token(Token = "0x60012BD")]
		public abstract void OnDropItem();

		[Token(Token = "0x60012BE")]
		public abstract void ResetValues();

		[Token(Token = "0x60012BF")]
		public abstract void OnCommandFrame();

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xF81590", Offset = "0xF81590", VA = "0xF81590")]
		protected FireMode()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class FlagFireMode : FireMode
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xF832F0", Offset = "0xF832F0", VA = "0xF832F0", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xF832F4", Offset = "0xF832F4", VA = "0xF832F4", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xF832F8", Offset = "0xF832F8", VA = "0xF832F8")]
		private void TryDropFlag()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xF834F4", Offset = "0xF834F4", VA = "0xF834F4")]
		private CtfFlag GetHoldingFlag()
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xF83734", Offset = "0xF83734", VA = "0xF83734", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF83738", Offset = "0xF83738", VA = "0xF83738", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xF8373C", Offset = "0xF8373C", VA = "0xF8373C", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xF83740", Offset = "0xF83740", VA = "0xF83740", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xF83744", Offset = "0xF83744", VA = "0xF83744")]
		public FlagFireMode()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class HandInteraction : MonoBehaviour
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _cooldown;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _elapsedCooldown;

		[Token(Token = "0x400124C")]
		private const string HandTag = "Hand";

		[Token(Token = "0x17000205")]
		private bool InCooldown
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xF8374C", Offset = "0xF8374C", VA = "0xF8374C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xF8375C", Offset = "0xF8375C", VA = "0xF8375C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xF837E0", Offset = "0xF837E0", VA = "0xF837E0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xF83960", Offset = "0xF83960", VA = "0xF83960")]
		private bool IsSelf(HandInteraction other, bool allowed)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xF83B50", Offset = "0xF83B50", VA = "0xF83B50")]
		private void PlayHaptic(HandInteraction handOther, HapticManager.Haptics effect)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xF839F8", Offset = "0xF839F8", VA = "0xF839F8")]
		private void SpawnEffect(HandInteraction hand, Effects effect)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xF8391C", Offset = "0xF8391C", VA = "0xF8391C")]
		private bool IsFist()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xF84008", Offset = "0xF84008", VA = "0xF84008")]
		private bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xF83D48", Offset = "0xF83D48", VA = "0xF83D48")]
		private void GetFingerState(out bool triggerDown, out bool gripDown, out bool thumbDown)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xF8404C", Offset = "0xF8404C", VA = "0xF8404C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xF84080", Offset = "0xF84080", VA = "0xF84080")]
		public HandInteraction()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class InstagibTeamSwitch : MonoBehaviour
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProjectileData _teamRed;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ProjectileData _teamBlue;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RaycastProjectileSpawner _projectileSpawner;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xF84094", Offset = "0xF84094", VA = "0xF84094")]
		public void Initialize(Teams team)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xF840E4", Offset = "0xF840E4", VA = "0xF840E4")]
		public InstagibTeamSwitch()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public abstract class ProjectileSpawner : MonoBehaviour
	{
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xF840EC", Offset = "0xF840EC", VA = "0xF840EC", Slot = "4")]
		public virtual void SpawnProjectile(int cmdServerFrame, NetCharacterBehaviour character, Vector3 position, Vector3 direction, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xF84190", Offset = "0xF84190", VA = "0xF84190")]
		protected ProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class RaycastProjectileSpawner : ProjectileSpawner
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProjectileData _projectile;

		[Token(Token = "0x17000206")]
		public ProjectileData Projectile
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xF84198", Offset = "0xF84198", VA = "0xF84198")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xF841A0", Offset = "0xF841A0", VA = "0xF841A0")]
			set
			{
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xF841A8", Offset = "0xF841A8", VA = "0xF841A8", Slot = "4")]
		public override void SpawnProjectile(int cmdServerFrame, NetCharacterBehaviour character, Vector3 position, Vector3 direction, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xF842EC", Offset = "0xF842EC", VA = "0xF842EC")]
		public RaycastProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class RocketProjectileSpawner : ProjectileSpawner
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponLaser _guideLaser;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xF842F4", Offset = "0xF842F4", VA = "0xF842F4", Slot = "4")]
		public override void SpawnProjectile(int cmdServerFrame, NetCharacterBehaviour character, Vector3 position, Vector3 direction, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xF844E4", Offset = "0xF844E4", VA = "0xF844E4")]
		public RocketProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[RequireComponent(typeof(Weapon))]
	public class SeasonalWeaponFXOverride : MonoBehaviour
	{
		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Halloween")]
		[SerializeField]
		private Effects _halloweenShotFx;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Effects _halloweenAltShotFx;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Winter")]
		[SerializeField]
		private Effects _winterShotFx;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Effects _winterAltShotFx;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xF844EC", Offset = "0xF844EC", VA = "0xF844EC")]
		protected void Start()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xF845C0", Offset = "0xF845C0", VA = "0xF845C0")]
		public SeasonalWeaponFXOverride()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class ShockProjectileSpawner : ProjectileSpawner
	{
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xF845C8", Offset = "0xF845C8", VA = "0xF845C8", Slot = "4")]
		public override void SpawnProjectile(int cmdServerFrame, NetCharacterBehaviour character, Vector3 position, Vector3 direction, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xF845F8", Offset = "0xF845F8", VA = "0xF845F8")]
		public ShockProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class SingleShotFireMode : FireMode
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ProjectileSpawner _projectileSpawner;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _minFramesBetweenShots;

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xF84600", Offset = "0xF84600", VA = "0xF84600", Slot = "4")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xF84738", Offset = "0xF84738", VA = "0xF84738", Slot = "6")]
		public override void OnTrigger()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xF8473C", Offset = "0xF8473C", VA = "0xF8473C", Slot = "5")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xF84740", Offset = "0xF84740", VA = "0xF84740", Slot = "8")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xF84744", Offset = "0xF84744", VA = "0xF84744", Slot = "7")]
		public override void OnDropItem()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xF84748", Offset = "0xF84748", VA = "0xF84748", Slot = "9")]
		public override void OnCommandFrame()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xF8474C", Offset = "0xF8474C", VA = "0xF8474C")]
		public SingleShotFireMode()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class SpreadProjectileSpawner : ProjectileSpawner
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProjectileSpawner _baseProjectileSpawner;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _angle;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _projectileCount;

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xF84754", Offset = "0xF84754", VA = "0xF84754", Slot = "4")]
		public override void SpawnProjectile(int cmdServerFrame, NetCharacterBehaviour character, Vector3 position, Vector3 direction, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xF8495C", Offset = "0xF8495C", VA = "0xF8495C")]
		public SpreadProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class Weapon : MonoBehaviour
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		[SerializeField]
		private FireMode _fireMode;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _muzzle;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _root;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _displayAnchor;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GunSkinSelector _skinSelector;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Settings")]
		private int _clipSize;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool InfiniteClip;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _reloadTimeFrames;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector3 _recoilVector;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _recoilDecaySpeed;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Header("Physics")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Collider[] _colliders;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoltHitboxBody _boltHitboxBody;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Header("Effects")]
		private Animator _animator;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HandPoses _handPose;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Effects _shotEffect;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Effects _altShotEffect;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Effects _reloadEffect;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("bhaptics")]
		[SerializeField]
		private RecoilHapticTypes _recoilEffect;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private RecoilHapticTypes _recoilEffectAlt;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoltWeapon _weaponState;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ControllerInput _controllerState;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected readonly int FireTriggerHash;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool _enableHitBoxes;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool _isExplosion;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 _impactPosition;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float _explosionForce;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _explosionRadius;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 _lastPosition;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 _velocity;

		[Token(Token = "0x17000207")]
		public NetCharacterBehaviour Character
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xF84970", Offset = "0xF84970", VA = "0xF84970")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xF84978", Offset = "0xF84978", VA = "0xF84978")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public bool IsAttached
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xF84980", Offset = "0xF84980", VA = "0xF84980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000209")]
		public bool IsOwner
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xF84A14", Offset = "0xF84A14", VA = "0xF84A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool IsController
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xF84A3C", Offset = "0xF84A3C", VA = "0xF84A3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public int ClipSize
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xF84A64", Offset = "0xF84A64", VA = "0xF84A64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020C")]
		public int ReloadFrames
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xF84A6C", Offset = "0xF84A6C", VA = "0xF84A6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020D")]
		public float RecoilDecaySpeed
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xF84A74", Offset = "0xF84A74", VA = "0xF84A74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020E")]
		public int Ammo
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xF84A7C", Offset = "0xF84A7C", VA = "0xF84A7C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xF84A84", Offset = "0xF84A84", VA = "0xF84A84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool IsTriggerHeld
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xF84A8C", Offset = "0xF84A8C", VA = "0xF84A8C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xF84A94", Offset = "0xF84A94", VA = "0xF84A94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public int ReloadStartFrame
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0xF84AA0", Offset = "0xF84AA0", VA = "0xF84AA0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xF84AA8", Offset = "0xF84AA8", VA = "0xF84AA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public int FrameOfLastShot
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xF84AB0", Offset = "0xF84AB0", VA = "0xF84AB0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xF84AB8", Offset = "0xF84AB8", VA = "0xF84AB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public float ChargePercent
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xF84AC0", Offset = "0xF84AC0", VA = "0xF84AC0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xF84AC8", Offset = "0xF84AC8", VA = "0xF84AC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float ReloadPercent
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xF84AD0", Offset = "0xF84AD0", VA = "0xF84AD0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xF84AD8", Offset = "0xF84AD8", VA = "0xF84AD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public bool IsReloading
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xF84AE0", Offset = "0xF84AE0", VA = "0xF84AE0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xF84AE8", Offset = "0xF84AE8", VA = "0xF84AE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public HandPoses HandPose
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xF84AF4", Offset = "0xF84AF4", VA = "0xF84AF4")]
			get
			{
				return default(HandPoses);
			}
		}

		[Token(Token = "0x17000216")]
		public int Hand
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xF84AFC", Offset = "0xF84AFC", VA = "0xF84AFC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xF84B04", Offset = "0xF84B04", VA = "0xF84B04")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public int CurrentFrame
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xF84B0C", Offset = "0xF84B0C", VA = "0xF84B0C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xF84B14", Offset = "0xF84B14", VA = "0xF84B14")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool IsRagdoll
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xF84B1C", Offset = "0xF84B1C", VA = "0xF84B1C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xF84B24", Offset = "0xF84B24", VA = "0xF84B24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool IsLocked
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xF822A8", Offset = "0xF822A8", VA = "0xF822A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public Transform DisplayAnchor
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xF84B30", Offset = "0xF84B30", VA = "0xF84B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public WeaponTypes WeaponType
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xF84B38", Offset = "0xF84B38", VA = "0xF84B38")]
			[CompilerGenerated]
			get
			{
				return default(WeaponTypes);
			}
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xF84B40", Offset = "0xF84B40", VA = "0xF84B40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public Vector3 MuzzlePosition
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xF84B48", Offset = "0xF84B48", VA = "0xF84B48")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700021D")]
		public Transform MuzzleTransform
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xF84B64", Offset = "0xF84B64", VA = "0xF84B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public GunSkinSelector SkinSelector
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xF84B6C", Offset = "0xF84B6C", VA = "0xF84B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public Effects ShotEffect
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xF84B74", Offset = "0xF84B74", VA = "0xF84B74")]
			get
			{
				return default(Effects);
			}
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xF84B7C", Offset = "0xF84B7C", VA = "0xF84B7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public Effects AltShotEffect
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xF84B84", Offset = "0xF84B84", VA = "0xF84B84")]
			get
			{
				return default(Effects);
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xF84B8C", Offset = "0xF84B8C", VA = "0xF84B8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xF84B94", Offset = "0xF84B94", VA = "0xF84B94")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xF84FE4", Offset = "0xF84FE4", VA = "0xF84FE4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF8508C", Offset = "0xF8508C", VA = "0xF8508C")]
		public void Initialize(NetCharacterBehaviour owner, BoltWeapon weaponState, ControllerInput controllerState, int handIndex, WeaponTypes weaponType)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF850E8", Offset = "0xF850E8", VA = "0xF850E8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF8510C", Offset = "0xF8510C", VA = "0xF8510C")]
		private void SyncValuesOnClients()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF8518C", Offset = "0xF8518C", VA = "0xF8518C")]
		public void ProcessInput(bool triggerHeld, bool triggerDown, bool triggerUp, bool reloadDown, bool dropItemDown, int cmdServerFrame)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xF8536C", Offset = "0xF8536C", VA = "0xF8536C")]
		private void StartReload()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xF85504", Offset = "0xF85504", VA = "0xF85504")]
		private void EndReload()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF8563C", Offset = "0xF8563C", VA = "0xF8563C")]
		public void SetInstantReload(int gainedAmmo)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF82558", Offset = "0xF82558", VA = "0xF82558")]
		public void DryFire()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF82390", Offset = "0xF82390", VA = "0xF82390")]
		public void Fire()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xF82DCC", Offset = "0xF82DCC", VA = "0xF82DCC")]
		public void AltFire()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xF85C68", Offset = "0xF85C68", VA = "0xF85C68")]
		public void ResetState()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xF85D10", Offset = "0xF85D10", VA = "0xF85D10")]
		public void InitNetworking(bool isServer)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xF84C28", Offset = "0xF84C28", VA = "0xF84C28")]
		public void SetRagdoll(bool isRagdoll)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xF85D50", Offset = "0xF85D50", VA = "0xF85D50")]
		public void Explosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xF85D68", Offset = "0xF85D68", VA = "0xF85D68")]
		private void ApplyExplosion()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xF85E0C", Offset = "0xF85E0C", VA = "0xF85E0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xF85EA8", Offset = "0xF85EA8", VA = "0xF85EA8")]
		public void PickupFx()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xF85998", Offset = "0xF85998", VA = "0xF85998")]
		public void FireFx()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xF85B00", Offset = "0xF85B00", VA = "0xF85B00")]
		public void AltFireFx()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xF858B8", Offset = "0xF858B8", VA = "0xF858B8")]
		public void DryFireFx()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xF85F84", Offset = "0xF85F84", VA = "0xF85F84")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class WeaponHideWhenRagdoll : MonoBehaviour
	{
		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Weapon _weapon;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _objectToHide;

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xF86054", Offset = "0xF86054", VA = "0xF86054")]
		private void Update()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xF860B0", Offset = "0xF860B0", VA = "0xF860B0")]
		public WeaponHideWhenRagdoll()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[RequireComponent(typeof(Weapon))]
	public class WeaponOwnerOnly : MonoBehaviour
	{
		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _objects;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon _weapon;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isActive;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xF860B8", Offset = "0xF860B8", VA = "0xF860B8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xF86164", Offset = "0xF86164", VA = "0xF86164")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xF863E0", Offset = "0xF863E0", VA = "0xF863E0")]
		public WeaponOwnerOnly()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public enum WeaponTypes
	{
		[Token(Token = "0x400128E")]
		None = -1,
		[Token(Token = "0x400128F")]
		DefaultPistol = 0,
		[Token(Token = "0x4001290")]
		Uzi = 1,
		[Token(Token = "0x4001291")]
		Rocket = 2,
		[Token(Token = "0x4001292")]
		Confetti = 3,
		[Token(Token = "0x4001293")]
		FoamHand = 4,
		[Token(Token = "0x4001294")]
		Cup = 5,
		[Token(Token = "0x4001295")]
		Shield = 6,
		[Token(Token = "0x4001296")]
		Shotgun = 7,
		[Token(Token = "0x4001297")]
		BurstRifle = 8,
		[Token(Token = "0x4001298")]
		Sniper = 9,
		[Token(Token = "0x4001299")]
		Hand = 10,
		[Token(Token = "0x400129A")]
		ShockPistol = 11,
		[Token(Token = "0x400129B")]
		InstaGib = 12,
		[Token(Token = "0x400129C")]
		Ball = 13,
		[Token(Token = "0x400129D")]
		Flag = 14,
		[Token(Token = "0x400129E")]
		Sword = 15,
		[Token(Token = "0x400129F")]
		Count = 16,
		[Token(Token = "0x40012A0")]
		ShieldAndPistol = 100,
		[Token(Token = "0x40012A1")]
		EndRoomWeapons = 101,
		[Token(Token = "0x40012A2")]
		ShieldAndSword = 102
	}
	[Token(Token = "0x2000347")]
	public static class WeaponHelpers
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly WeaponTypes[] BotWeapons;

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xF863E8", Offset = "0xF863E8", VA = "0xF863E8")]
		public static bool IsChargeWeapon(this WeaponTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xF86404", Offset = "0xF86404", VA = "0xF86404")]
		public static bool IsStatTracked(this WeaponTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xF86424", Offset = "0xF86424", VA = "0xF86424")]
		public static string GetSpriteText(this WeaponTypes type, bool altfire)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xF86558", Offset = "0xF86558", VA = "0xF86558")]
		public static string GetStatisticsHeaderText(this WeaponTypes type)
		{
			return null;
		}
	}
}
namespace HyperDash.Scoreboard
{
	[Token(Token = "0x2000348")]
	public class Scoreboard : MonoBehaviour
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _redTeamName;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _blueTeamName;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _redTeamscore;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _blueTeamscore;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _redTeamWinLoseText;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _blueTeamWinLoseText;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScoreElement[] _redTeamElements;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ScoreElement[] _blueTeamElements;

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xF867B0", Offset = "0xF867B0", VA = "0xF867B0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xF86880", Offset = "0xF86880", VA = "0xF86880")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xF87094", Offset = "0xF87094", VA = "0xF87094")]
		private string GetFormatedScore(int score, string format)
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xF8759C", Offset = "0xF8759C", VA = "0xF8759C")]
		public Scoreboard()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class ScoreboardDM : MonoBehaviour
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScoreElement[] _scoreElements;

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xF875A4", Offset = "0xF875A4", VA = "0xF875A4")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xF87850", Offset = "0xF87850", VA = "0xF87850")]
		public ScoreboardDM()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ScoreElement : MonoBehaviour
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _normalColor;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _highlightedColor;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _disabledColor;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI _playerName;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _kills;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _deaths;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[FormerlySerializedAs("_kd")]
		[SerializeField]
		private TextMeshProUGUI _score;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xF87858", Offset = "0xF87858", VA = "0xF87858")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xF87220", Offset = "0xF87220", VA = "0xF87220")]
		public void SetText(string playerName, int kills, int deaths, int score)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xF87340", Offset = "0xF87340", VA = "0xF87340")]
		public void Highlight()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xF87488", Offset = "0xF87488", VA = "0xF87488")]
		public void Disable()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xF87374", Offset = "0xF87374", VA = "0xF87374")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xF8785C", Offset = "0xF8785C", VA = "0xF8785C")]
		public ScoreElement()
		{
		}
	}
}
namespace HyperDash.Rendering
{
	[Token(Token = "0x200034B")]
	public class GPUInstancingColor : MonoBehaviour
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _color;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xF87864", Offset = "0xF87864", VA = "0xF87864")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xF879B0", Offset = "0xF879B0", VA = "0xF879B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xF87AA8", Offset = "0xF87AA8", VA = "0xF87AA8")]
		public GPUInstancingColor()
		{
		}
	}
}
namespace HyperDash.RecyclingListView
{
	[Token(Token = "0x200034C")]
	[RequireComponent(typeof(ScrollRect))]
	public class RecyclingListView : MonoBehaviour
	{
		[Token(Token = "0x200034D")]
		public delegate void ItemDelegate(RecyclingListViewItem item, int rowIndex);

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Prefab for all the child view objects in the list")]
		public RecyclingListViewItem ChildPrefab;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The amount of vertical padding to add between items")]
		public float RowPadding;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Minimum height to pre-allocate list items for. Use to prevent allocations on resizing.")]
		public float PreAllocHeight;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int rowCount;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ItemDelegate ItemCallback;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ScrollRect scrollRect;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected RecyclingListViewItem[] childItems;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int childBufferStart;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int sourceDataRowStart;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool ignoreScrollChange;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float previousBuildHeight;

		[Token(Token = "0x40012C3")]
		protected const int rowsAboveBelow = 1;

		[Token(Token = "0x17000221")]
		public float VerticalNormalizedPosition
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xF87AB0", Offset = "0xF87AB0", VA = "0xF87AB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xF87ACC", Offset = "0xF87ACC", VA = "0xF87ACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public int RowCount
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xF87AE8", Offset = "0xF87AE8", VA = "0xF87AE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xF87AF0", Offset = "0xF87AF0", VA = "0xF87AF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public RecyclingListViewItem[] ChildItems
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xF87B4C", Offset = "0xF87B4C", VA = "0xF87B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xF87B54", Offset = "0xF87B54", VA = "0xF87B54", Slot = "4")]
		public virtual void Refresh()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xF87B6C", Offset = "0xF87B6C", VA = "0xF87B6C", Slot = "5")]
		public virtual void Refresh(int rowStart, int count)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF87CF4", Offset = "0xF87CF4", VA = "0xF87CF4", Slot = "6")]
		public virtual void Refresh(RecyclingListViewItem item)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xF87E50", Offset = "0xF87E50", VA = "0xF87E50", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xF87E58", Offset = "0xF87E58", VA = "0xF87E58", Slot = "8")]
		public virtual void ScrollToRow(int row)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF87E7C", Offset = "0xF87E7C", VA = "0xF87E7C")]
		public float GetRowScrollPosition(int row)
		{
			return default(float);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF87FEC", Offset = "0xF87FEC", VA = "0xF87FEC")]
		public RecyclingListViewItem GetRowItem(int row)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF88064", Offset = "0xF88064", VA = "0xF88064", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF880BC", Offset = "0xF880BC", VA = "0xF880BC", Slot = "10")]
		protected virtual bool CheckChildItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xF8849C", Offset = "0xF8849C", VA = "0xF8849C", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xF8853C", Offset = "0xF8853C", VA = "0xF8853C", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xF885D4", Offset = "0xF885D4", VA = "0xF885D4", Slot = "13")]
		protected virtual void OnScrollChanged(Vector2 normalisedPos)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xF885F8", Offset = "0xF885F8", VA = "0xF885F8", Slot = "14")]
		protected virtual void ReorganiseContent(bool clearContents, bool resetToTop = false)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xF87CC4", Offset = "0xF87CC4", VA = "0xF87CC4")]
		private int WrapChildIndex(int idx)
		{
			return default(int);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF87F48", Offset = "0xF87F48", VA = "0xF87F48")]
		private float RowHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xF87FA4", Offset = "0xF87FA4", VA = "0xF87FA4")]
		private float ViewportHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xF88890", Offset = "0xF88890", VA = "0xF88890", Slot = "15")]
		protected virtual void UpdateChild(RecyclingListViewItem child, int rowIdx)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xF88AA0", Offset = "0xF88AA0", VA = "0xF88AA0", Slot = "16")]
		protected virtual void UpdateContentHeight()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xF88B50", Offset = "0xF88B50", VA = "0xF88B50", Slot = "17")]
		protected virtual void DisableAllChildren()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xF88BC0", Offset = "0xF88BC0", VA = "0xF88BC0")]
		public RecyclingListView()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[RequireComponent(typeof(RectTransform))]
	public class RecyclingListViewItem : MonoBehaviour
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RecyclingListView parentList;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentRow;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectTransform;

		[Token(Token = "0x17000224")]
		public RecyclingListView ParentList
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xF88DC4", Offset = "0xF88DC4", VA = "0xF88DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public int CurrentRow
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xF88DCC", Offset = "0xF88DCC", VA = "0xF88DCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000226")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xF883F4", Offset = "0xF883F4", VA = "0xF883F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xF88DD4", Offset = "0xF88DD4", VA = "0xF88DD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xF88A74", Offset = "0xF88A74", VA = "0xF88A74")]
		public void NotifyCurrentAssignment(RecyclingListView v, int row)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xF88E2C", Offset = "0xF88E2C", VA = "0xF88E2C")]
		public RecyclingListViewItem()
		{
		}
	}
}
namespace HyperDash.Player
{
	[Token(Token = "0x200034F")]
	public static class ArcCalculations
	{
		[Token(Token = "0x6001367")]
		[Address(RVA = "0xF88E34", Offset = "0xF88E34", VA = "0xF88E34")]
		public static bool ArcRaycast(Transform localSpace, Vector3 origin, float distance, float height, int segments, out RaycastHit hit, ref List<Vector3> positions, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xF88F50", Offset = "0xF88F50", VA = "0xF88F50")]
		public static bool ArcRaycast(Vector3 start, Vector3 controlPoint, Vector3 end, int segments, out RaycastHit hit, ref List<Vector3> positions, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xF892B8", Offset = "0xF892B8", VA = "0xF892B8")]
		public static void DrawCross(Vector3 position, Color color)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xF894DC", Offset = "0xF894DC", VA = "0xF894DC")]
		public static void DrawCross(Vector3 position, float size, Color color)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xF896FC", Offset = "0xF896FC", VA = "0xF896FC")]
		public static bool ArcCapsuleCast(Vector3 start, Vector3 controlPoint, Vector3 end, float radius, float height, int segments, out RaycastHit hit, DashTrajectory positions, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xF89238", Offset = "0xF89238", VA = "0xF89238")]
		public static Vector3 ArcLerp(Vector3 start, Vector3 controlPoint, Vector3 end, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xF89D4C", Offset = "0xF89D4C", VA = "0xF89D4C")]
		public static void Draw(List<Vector3> positions, Color color, float duration)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xF89EB0", Offset = "0xF89EB0", VA = "0xF89EB0")]
		public static void Draw(Vector3 start, Vector3 controlPoint, Vector3 end, int segments, Color color, float duration)
		{
		}
	}
	[Token(Token = "0x2000350")]
	public static class PlayerAnimatorHashes
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MotionTime;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int IsDashing;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int IsFalling;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int RightTrigger;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int LeftTrigger;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int RightGrip;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int LeftGrip;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int RightThumbDown;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int LeftThumbDown;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int VelocityX;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int VelocityZ;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int LeftHandPose;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int RightHandPose;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int DashState;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int FallingState;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int LocomotionState;
	}
	[Token(Token = "0x2000351")]
	public class CharacterAnimationController : MonoBehaviour
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		[SerializeField]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRIK _vrik;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IKSolverVR _ikSolver;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion _leftHandDefaultLocalRotation;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _rightHandDefaultLocalRotation;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xF8A390", Offset = "0xF8A390", VA = "0xF8A390")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xF8A418", Offset = "0xF8A418", VA = "0xF8A418")]
		public void UpdateHandAnimation()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xF8AA6C", Offset = "0xF8AA6C", VA = "0xF8AA6C")]
		public void ChangeHandPose(int hand, HandPoses pose)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xF8AB3C", Offset = "0xF8AB3C", VA = "0xF8AB3C")]
		public void StartRagdoll()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xF8ABBC", Offset = "0xF8ABBC", VA = "0xF8ABBC")]
		public void StopRagdoll()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xF8AD4C", Offset = "0xF8AD4C", VA = "0xF8AD4C")]
		public CharacterAnimationController()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class CharacterBody : MonoBehaviour
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer[] _bodyRenderers;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Body Materials")]
		private Material _teamRedMaterial;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _teamBlueMaterial;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _deathMatchMaterial;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Arm Display")]
		[SerializeField]
		private Vector3 _armDisplayPositionOffset;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 _armDisplayRotationOffset;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ColorID;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ArmorColorID;

		[Token(Token = "0x17000227")]
		public Vector3 ArmDisplayPositionOffset
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xF8ADB0", Offset = "0xF8ADB0", VA = "0xF8ADB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000228")]
		public Vector3 ArmDisplayRotationOffset
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xF8ADBC", Offset = "0xF8ADBC", VA = "0xF8ADBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xF8ADC8", Offset = "0xF8ADC8", VA = "0xF8ADC8")]
		public void SetLightProbeAnchor(Transform transform)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xF8AE30", Offset = "0xF8AE30", VA = "0xF8AE30")]
		public void SetBodyToLayer(int layer)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xF8AEA4", Offset = "0xF8AEA4", VA = "0xF8AEA4")]
		public void SetBodyTeamMaterial(int teamIndex)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xF8AF2C", Offset = "0xF8AF2C", VA = "0xF8AF2C")]
		private void SetBodyMaterial(Material material)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xF8B0C8", Offset = "0xF8B0C8", VA = "0xF8B0C8")]
		public void SetRenderersEnabled(bool state)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xF8AF94", Offset = "0xF8AF94", VA = "0xF8AF94")]
		private void SetBodyColor(Color color)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xF8B130", Offset = "0xF8B130", VA = "0xF8B130")]
		public void SetArmorColor(Color color)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xF8B264", Offset = "0xF8B264", VA = "0xF8B264")]
		public void AllowOcclusionWhenDynamic(bool isAllowed)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xF8B2CC", Offset = "0xF8B2CC", VA = "0xF8B2CC")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xF8B33C", Offset = "0xF8B33C", VA = "0xF8B33C")]
		public void CopyBones(SkinnedMeshRenderer targetRenderer)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xF8B534", Offset = "0xF8B534", VA = "0xF8B534")]
		public CharacterBody()
		{
		}
	}
	[Token(Token = "0x2000353")]
	[Flags]
	public enum CharacterFeature
	{
		[Token(Token = "0x40012E7")]
		None = 0,
		[Token(Token = "0x40012E8")]
		FireLeft = 1,
		[Token(Token = "0x40012E9")]
		FireRight = 2,
		[Token(Token = "0x40012EA")]
		Dash = 4,
		[Token(Token = "0x40012EB")]
		Moving = 8,
		[Token(Token = "0x40012EC")]
		Sprint = 0x10,
		[Token(Token = "0x40012ED")]
		All = 0x1F
	}
	[Token(Token = "0x2000354")]
	public static class CharacterFeaturesExtensions
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xF8B634", Offset = "0xF8B634", VA = "0xF8B634")]
		public static bool HasFlagFast(this CharacterFeature value, CharacterFeature flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000355")]
	public class DashEffect : MonoBehaviour
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _default;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _dashTime;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _timer;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _startPosition;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _endPosition;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _controlPoint;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrailRenderer Renderer;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _alphaTimer;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color StartColor;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TintColorID;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xF8B640", Offset = "0xF8B640", VA = "0xF8B640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xF8B6A8", Offset = "0xF8B6A8", VA = "0xF8B6A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xF8B6D8", Offset = "0xF8B6D8", VA = "0xF8B6D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xF8B6E4", Offset = "0xF8B6E4", VA = "0xF8B6E4")]
		public void Init(Vector3 startPosition, Vector3 controlPoint, Vector3 endPosition, float dashTime, NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xF8B754", Offset = "0xF8B754", VA = "0xF8B754")]
		private void Update()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xF8B914", Offset = "0xF8B914", VA = "0xF8B914")]
		public DashEffect()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[DefaultExecutionOrder(100000)]
	public class DashIndicator : MonoBehaviour
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DashController _dashController;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _arcRenderer;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Gradient _validTrajectoryGradient;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient _inValidTrajectoryGradient;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Gradient _railGradient;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _circleMaterial;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material _circleRailMaterial;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material _hologramMaterial;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material _hologramRailMaterial;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _circle;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _hologram;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Animator _hologramAnimator;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MeshRenderer _circleRenderer;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MeshRenderer _headRenderer;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SkinnedMeshRenderer _bodyRenderer;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xF8B984", Offset = "0xF8B984", VA = "0xF8B984")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xF8BB38", Offset = "0xF8BB38", VA = "0xF8BB38")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xF8BAD4", Offset = "0xF8BAD4", VA = "0xF8BAD4")]
		private void HideDashTrajectory()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xF8BBC4", Offset = "0xF8BBC4", VA = "0xF8BBC4")]
		private void ShowDashTrajectory()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xF8BE84", Offset = "0xF8BE84", VA = "0xF8BE84")]
		public void UpdateLine(DashTrajectory trajectory)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xF8BF6C", Offset = "0xF8BF6C", VA = "0xF8BF6C")]
		private void CopyPose(Animator other)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xF8C0C4", Offset = "0xF8C0C4", VA = "0xF8C0C4")]
		public DashIndicator()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class DashTrajectory : MonoBehaviour
	{
		[Token(Token = "0x2000358")]
		private enum Surface
		{
			[Token(Token = "0x4001321")]
			Floor,
			[Token(Token = "0x4001322")]
			Wall,
			[Token(Token = "0x4001323")]
			ceiling
		}

		[Token(Token = "0x400130A")]
		[Header("Arc parameters")]
		public const float ArcDistance = 15f;

		[Token(Token = "0x400130B")]
		public const float ArcHeight = 3f;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _segments;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _holdTimer;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GrindRail _holdRail;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _holdDirection;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _holdEndpoint;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _holdNormal;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _holdMidpoint;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3[] Points;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int PointCount;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Collider[] _railOverlap;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool AllowDropDown;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Collider[] _dropHitCollider;

		[Token(Token = "0x17000229")]
		public Vector3 EndNormal
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xF8C0CC", Offset = "0xF8C0CC", VA = "0xF8C0CC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xF8C0D8", Offset = "0xF8C0D8", VA = "0xF8C0D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public Vector3 StartPoint
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xF8C0E4", Offset = "0xF8C0E4", VA = "0xF8C0E4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xF8C0F0", Offset = "0xF8C0F0", VA = "0xF8C0F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public Vector3 ControlPoint
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xF8C0FC", Offset = "0xF8C0FC", VA = "0xF8C0FC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xF8C108", Offset = "0xF8C108", VA = "0xF8C108")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public Vector3 EndPoint
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xF8C114", Offset = "0xF8C114", VA = "0xF8C114")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xF8C120", Offset = "0xF8C120", VA = "0xF8C120")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public GrindRail Rail
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xF8C12C", Offset = "0xF8C12C", VA = "0xF8C12C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xF8C134", Offset = "0xF8C134", VA = "0xF8C134")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public Vector3 RailDirection
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xF8C13C", Offset = "0xF8C13C", VA = "0xF8C13C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xF8C148", Offset = "0xF8C148", VA = "0xF8C148")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool IsValid
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF8C15C", Offset = "0xF8C15C", VA = "0xF8C15C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF8C164", Offset = "0xF8C164", VA = "0xF8C164")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public bool Show
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xF8C170", Offset = "0xF8C170", VA = "0xF8C170")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xF8C178", Offset = "0xF8C178", VA = "0xF8C178")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF8C154", Offset = "0xF8C154", VA = "0xF8C154")]
		public void ClearPoints()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xF89CFC", Offset = "0xF89CFC", VA = "0xF89CFC")]
		public void AddPoint(Vector3 point)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xF8C184", Offset = "0xF8C184", VA = "0xF8C184")]
		private bool SnapToRail(GameObject endCollider, CharacterController characterController, Transform origin, int mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xF8C558", Offset = "0xF8C558", VA = "0xF8C558")]
		public void UpdateRailHold()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xF8C6B4", Offset = "0xF8C6B4", VA = "0xF8C6B4")]
		public void ClearRailHold()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xF8C7AC", Offset = "0xF8C7AC", VA = "0xF8C7AC")]
		public void CalculateTrajectory(Transform origin, CharacterController characterController, LayerMask mask)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xF8D880", Offset = "0xF8D880", VA = "0xF8D880")]
		private bool IsNonDashAble(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xF8D90C", Offset = "0xF8D90C", VA = "0xF8D90C")]
		public bool CanStand(Vector3 position, float radius, float height, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xF8D340", Offset = "0xF8D340", VA = "0xF8D340")]
		private bool SmartRayCast(Vector3 start, Vector3 direction, out Vector3 endPosition, float distance, int mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xF8DA9C", Offset = "0xF8DA9C", VA = "0xF8DA9C")]
		private bool SmartRayCast(Vector3 start, Vector3 direction, out RaycastHit hitInfo, float distance, int mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xF8D420", Offset = "0xF8D420", VA = "0xF8D420")]
		private bool CanRepositionOnTopOfWall(RaycastHit wallHit, out RaycastHit raycastHit, LayerMask mask, Vector3 forwardDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xF8D2AC", Offset = "0xF8D2AC", VA = "0xF8D2AC")]
		private Surface GetSurfaceFromDirection(Vector3 normal)
		{
			return default(Surface);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xF8D218", Offset = "0xF8D218", VA = "0xF8D218")]
		public void ClearTrajectory()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xF8DAB4", Offset = "0xF8DAB4", VA = "0xF8DAB4")]
		public DashTrajectory()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class EffectAnchors : MonoBehaviour
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoltEntity _entity;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] _anchors;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, EffectAnchors> _lookup;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong _id;

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xF8DB7C", Offset = "0xF8DB7C", VA = "0xF8DB7C")]
		protected void Start()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xF8DC14", Offset = "0xF8DC14", VA = "0xF8DC14")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xF8DC94", Offset = "0xF8DC94", VA = "0xF8DC94")]
		public static Transform GetAnchor(ulong networkID, int anchorIndex)
		{
			return null;
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xF8DD70", Offset = "0xF8DD70", VA = "0xF8DD70")]
		public EffectAnchors()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class FixWrists : MonoBehaviour
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Arm;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Wrist;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Hand;

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xF8DE6C", Offset = "0xF8DE6C", VA = "0xF8DE6C")]
		public void Update()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xF8DE70", Offset = "0xF8DE70", VA = "0xF8DE70")]
		public FixWrists()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class ForceMicrophone : MonoBehaviour
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xF8DE78", Offset = "0xF8DE78", VA = "0xF8DE78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xF8E030", Offset = "0xF8E030", VA = "0xF8E030")]
		public ForceMicrophone()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public struct VRIK_Targets
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Head;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform LeftHand;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform RightHand;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LeftFoot;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RightFoot;
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class VelocityBuffer
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] _buffer;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _currentIndex;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _previousPosition;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _dampVelocity;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _wasCleared;

		[Token(Token = "0x17000231")]
		public Vector3 Value
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xF8E038", Offset = "0xF8E038", VA = "0xF8E038")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xF8E044", Offset = "0xF8E044", VA = "0xF8E044")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public Vector3 Smooth
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xF8E050", Offset = "0xF8E050", VA = "0xF8E050")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xF8E05C", Offset = "0xF8E05C", VA = "0xF8E05C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float Speed
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xF8E068", Offset = "0xF8E068", VA = "0xF8E068")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xF8E070", Offset = "0xF8E070", VA = "0xF8E070")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xF8E078", Offset = "0xF8E078", VA = "0xF8E078")]
		public VelocityBuffer(int bufferSize)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xF8E144", Offset = "0xF8E144", VA = "0xF8E144")]
		public void Update(Vector3 currentPosition, float deltaTime, Vector3 platformMotion)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xF8E344", Offset = "0xF8E344", VA = "0xF8E344")]
		public void Clear()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public struct GrindParams
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeOfDirectionChange;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float PreviousDirection;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float TargetDirection;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float CurrentDirection;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrindRail Rail;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int RailDirection;
	}
	[Token(Token = "0x200035F")]
	public class NetCharacterBehaviour : EntityEventListener<ICharacterState>, IDamageable
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Controller")]
		public CharacterController CharacterController;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Remote")]
		public Transform RootTransform;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform HeadTransform;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform LeftHandTransform;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RightHandTransform;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("VRIK")]
		private VRIK_Targets _fixedIKTargets;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Render transforms (VRIK)")]
		public Transform RootRenderTransform;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform HeadRenderTransform;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform LeftHandRenderTransform;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform RightHandRenderTransform;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform LeftTeleporterAnchor;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform RightTeleporterAnchor;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform _armDisplayAnchor;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Header("Rig")]
		private CharacterRig _characterRig;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform _rigParent;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private HyperDash.Weapon.Weapon[] _leftHandWeapons;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private HyperDash.Weapon.Weapon[] _rightHandWeapons;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private InstagibTeamSwitch _leftInstagibTeamSwitch;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private InstagibTeamSwitch _rightInstagibTeamSwitch;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Looks")]
		public VRIK VRIK;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Animator Animator;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private HelmetSelector _helmetSelector;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private BodySelector _bodySelector;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject _pumpkinHead;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public MeshRenderer BlobShadow;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public PlayerNameTag PlayerNameTag;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private CharacterAnimationController _animationController;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject _headExplosionEffect;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject _pumpkinExplosionEffect;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Header("Height adjustment")]
		public float TargetHeight;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float FixHeadScale;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float MinHeight;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float MaxHeight;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float HeightOffset;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[Header("Dashing")]
		[SerializeField]
		private ObscuredFloat _dashSpeed;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private ObscuredInt _maxDashCharges;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private ObscuredFloat _dashRechargeTime;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[Header("Grinding")]
		public RailFollower GrindSplineFollower;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AudioSource GrindAudioSource;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject[] _grindFx;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[Header("Sprint")]
		private SprintEffect _sprintEffectRed;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private SprintEffect _sprintEffectBlue;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[Header("Bhaptics")]
		[SerializeField]
		private BoundsComponent _chestHapticbounds;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[Header("BOTS")]
		[SerializeField]
		private NavMeshObstacle _navMeshObstacle;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Transform _botAimTarget;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[Header("Fx")]
		public LayerMask ShadowLayerMask;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[ColorUsage(true, true)]
		public Color ShieldColor;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[Header("DEBUG")]
		private BoltHitboxSnapshotRecorder _hitboxRecorder;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private ICharacterState _state;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _characterHeadHeight;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private CameraRig _playerCamera;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform _controllerRoot;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Transform _controllerHeadset;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Transform _controllerLeftHand;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Transform _controllerRightHand;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SprintEffect _sprintEffect;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private int _myDashEffectIndex;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static NetCharacterBehaviour _localPlayer;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<NetCharacterBehaviour> CharacterList;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private HyperDash.Weapon.Weapon[] _currentWeapons;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private bool _leftTrigger;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		private bool _leftTriggerUp;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
		private bool _leftTriggerDown;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
		private bool _rightTrigger;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool _rightTriggerUp;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
		private bool _rightTriggerDown;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3 _previousFixedPosition;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private WeaponTypes _leftHandStartingWeapon;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private WeaponTypes _rightHandStartingWeapon;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private DashInfo _currentDash;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private GrindRail _grindRail;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private int _localRailID;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private int _localRailDirection;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private bool _grindFxEnabled;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private int _cachedTeamID;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _leftReloadDown;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D1")]
		private bool _rightReloadDown;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D2")]
		private bool _leftDropItemDown;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D3")]
		private bool _rightDropItemDown;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float _currentGrindSpeed;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private Vector3 _checkInactivePosition;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _previousFireLeft;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _previousFireRight;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static RespawnState[] _teamRespawnStateLookup;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E6")]
		private bool _isLeftPickupDown;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E7")]
		private bool _isRightPickupDown;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private int _serverSpawnFrame;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int _serverDeadFrame;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private int[] _serverFrameWeaponChanged;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private bool[] _waitForTriggerUp;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private SortingGroup _sortingGroup;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private bool _previousLeftGrip;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
		private bool _previousLeftTrigger;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
		private bool _previousLeftThumbDown;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
		private bool _previousRightGrip;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private bool _previousRightTrigger;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30D")]
		private bool _previousRightThumbDown;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30E")]
		private bool _isTeleportFrame;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private int _teamIndex;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private Vector3 _platformMovement;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38D")]
		private bool _updateIkLod;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private BotController _botController;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private int _cullingMask;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		private bool _forcedHeightLimits;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private float _minCharacterHeight;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		private float _maxCharacterHeight;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private VelocityBuffer _animationVelocityBuffer;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Vector3 _syncedVelocity;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private int _executedCommandFrame;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int _executedServerFrame;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private float _locomotionWeight;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private GrindParams _grindParams;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private Vector3 _previousAnimationPosition;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private bool _shouldResetVRIK;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FD")]
		private bool _isFalling;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private float _normalizedAnimationTime;

		[Token(Token = "0x40013CD")]
		private const int InterpolatedBoneCount = 25;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private Transform[] _transforms;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private Quaternion[] _previousRotations;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private Quaternion[] _currentRotations;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private Vector3[] _previousPositions;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private Vector3[] _currentPositions;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private int _lastVRIKSolverFrame;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private StringBuilder stringbuilder;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int ArmorColorID;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private DamageZone.SurfaceTypes _characterSurfaceType;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static bool CullVRIK;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float LODDistanceSqr1;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float LODDistanceSqr2;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float HandLODDistanceSqr;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static bool ReducedIkSolver;

		[Token(Token = "0x17000234")]
		public BoltHitboxSnapshotRecorder HitboxRecorder
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xF8E9B4", Offset = "0xF8E9B4", VA = "0xF8E9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public static NetCharacterBehaviour LocalAttachedCharacter
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xF8712C", Offset = "0xF8712C", VA = "0xF8712C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xF8E9BC", Offset = "0xF8E9BC", VA = "0xF8E9BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool IsLeftHandRequestingPickup
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xF8EB4C", Offset = "0xF8EB4C", VA = "0xF8EB4C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xF8EB54", Offset = "0xF8EB54", VA = "0xF8EB54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public bool IsRightHandRequestingPickup
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xF8EB60", Offset = "0xF8EB60", VA = "0xF8EB60")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xF8EB68", Offset = "0xF8EB68", VA = "0xF8EB68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public Vector3 LeftHandRecoil
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xF8EB74", Offset = "0xF8EB74", VA = "0xF8EB74")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xF8EB84", Offset = "0xF8EB84", VA = "0xF8EB84")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public Vector3 RightHandRecoil
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xF8EB94", Offset = "0xF8EB94", VA = "0xF8EB94")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xF8EBA4", Offset = "0xF8EBA4", VA = "0xF8EBA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public RespawnState RespawnState
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xF8EBB4", Offset = "0xF8EBB4", VA = "0xF8EBB4")]
			get
			{
				return default(RespawnState);
			}
		}

		[Token(Token = "0x1700023B")]
		public bool IsRespawnBlocked
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xF8EC58", Offset = "0xF8EC58", VA = "0xF8EC58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		public float RespawnTime
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xF8ED08", Offset = "0xF8ED08", VA = "0xF8ED08")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xF8ED10", Offset = "0xF8ED10", VA = "0xF8ED10")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool IsDeadClient
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xF8ED18", Offset = "0xF8ED18", VA = "0xF8ED18")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xF8ED20", Offset = "0xF8ED20", VA = "0xF8ED20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public bool IsDeadServer
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xF8ED2C", Offset = "0xF8ED2C", VA = "0xF8ED2C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xF8ED34", Offset = "0xF8ED34", VA = "0xF8ED34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public int Health
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xF8ED40", Offset = "0xF8ED40", VA = "0xF8ED40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000240")]
		public int Armor
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xF8EDE4", Offset = "0xF8EDE4", VA = "0xF8EDE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000241")]
		public string PlayerName
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xF8EE88", Offset = "0xF8EE88", VA = "0xF8EE88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xF8EE90", Offset = "0xF8EE90", VA = "0xF8EE90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public string Clan
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xF8EEA0", Offset = "0xF8EEA0", VA = "0xF8EEA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xF8EEA8", Offset = "0xF8EEA8", VA = "0xF8EEA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public string FullName
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xF8EEB8", Offset = "0xF8EEB8", VA = "0xF8EEB8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xF8EEC0", Offset = "0xF8EEC0", VA = "0xF8EEC0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public int MaxHealth
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xF8EED0", Offset = "0xF8EED0", VA = "0xF8EED0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000245")]
		public int MaxArmor
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xF8EED8", Offset = "0xF8EED8", VA = "0xF8EED8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000246")]
		public float HeadScale
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xF8EEE0", Offset = "0xF8EEE0", VA = "0xF8EEE0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xF8EEE8", Offset = "0xF8EEE8", VA = "0xF8EEE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public GameObject HeadMesh
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xF8EEF0", Offset = "0xF8EEF0", VA = "0xF8EEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public GameObject PumpkinMesh
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xF8EF0C", Offset = "0xF8EF0C", VA = "0xF8EF0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public bool IsDashing
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xF8EF14", Offset = "0xF8EF14", VA = "0xF8EF14")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xF8EF1C", Offset = "0xF8EF1C", VA = "0xF8EF1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public ObscuredFloat ClientDashCharges
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xF8EF28", Offset = "0xF8EF28", VA = "0xF8EF28")]
			[CompilerGenerated]
			get
			{
				return default(ObscuredFloat);
			}
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xF8EF40", Offset = "0xF8EF40", VA = "0xF8EF40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public int BoostCharges
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xF8EF58", Offset = "0xF8EF58", VA = "0xF8EF58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024C")]
		public float DashEnergy
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xF8EFFC", Offset = "0xF8EFFC", VA = "0xF8EFFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024D")]
		public int MaxDashCharges
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xF8F080", Offset = "0xF8F080", VA = "0xF8F080")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsGrinding
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xF8F0CC", Offset = "0xF8F0CC", VA = "0xF8F0CC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xF8F0D4", Offset = "0xF8F0D4", VA = "0xF8F0D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xF8F0E0", Offset = "0xF8F0E0", VA = "0xF8F0E0", Slot = "130")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xF8F0E8", Offset = "0xF8F0E8", VA = "0xF8F0E8", Slot = "131")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public int TeamIndex
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xF8F0F4", Offset = "0xF8F0F4", VA = "0xF8F0F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public int ServerTeamIndex
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xF8F0FC", Offset = "0xF8F0FC", VA = "0xF8F0FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xF8F104", Offset = "0xF8F104", VA = "0xF8F104")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public int PlayerID
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xF8F1B4", Offset = "0xF8F1B4", VA = "0xF8F1B4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xF8F1BC", Offset = "0xF8F1BC", VA = "0xF8F1BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public Vector3 FixedVelocity
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF8F1C4", Offset = "0xF8F1C4", VA = "0xF8F1C4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xF8F1D4", Offset = "0xF8F1D4", VA = "0xF8F1D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public CharacterFeature ActiveFeatures
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xF8F1E4", Offset = "0xF8F1E4", VA = "0xF8F1E4")]
			[CompilerGenerated]
			get
			{
				return default(CharacterFeature);
			}
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xF8F1EC", Offset = "0xF8F1EC", VA = "0xF8F1EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public Vector3 BotAimTarget
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xF8F1F4", Offset = "0xF8F1F4", VA = "0xF8F1F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000256")]
		public bool BotHasControl
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xF8F210", Offset = "0xF8F210", VA = "0xF8F210")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xF8F218", Offset = "0xF8F218", VA = "0xF8F218")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool BotIsSidekick
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xF8F224", Offset = "0xF8F224", VA = "0xF8F224")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xF8F22C", Offset = "0xF8F22C", VA = "0xF8F22C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public NetCharacterBehaviour BotLastShooter
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xF8F238", Offset = "0xF8F238", VA = "0xF8F238")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xF8F240", Offset = "0xF8F240", VA = "0xF8F240")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public int InactiveFrames
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xF8F250", Offset = "0xF8F250", VA = "0xF8F250")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xF8F258", Offset = "0xF8F258", VA = "0xF8F258")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public Transform ArmDisplayAnchor
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xF8F260", Offset = "0xF8F260", VA = "0xF8F260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public HyperDash.Weapon.Weapon RightWeapon
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xF8AD20", Offset = "0xF8AD20", VA = "0xF8AD20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public HyperDash.Weapon.Weapon LeftWeapon
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xF8ACF8", Offset = "0xF8ACF8", VA = "0xF8ACF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public Collider[] Colliders
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xF8F268", Offset = "0xF8F268", VA = "0xF8F268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public bool BhapticsEnabled
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xF8F284", Offset = "0xF8F284", VA = "0xF8F284")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xF8F28C", Offset = "0xF8F28C", VA = "0xF8F28C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public BoundsComponent BhapticsChestBounds
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xF8F298", Offset = "0xF8F298", VA = "0xF8F298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public BodySelector BodySelector
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xF8F2A0", Offset = "0xF8F2A0", VA = "0xF8F2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public Vector3 GrindDirection
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0xF99EFC", Offset = "0xF99EFC", VA = "0xF99EFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000262")]
		public bool Controller_IsSprinting
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xF9A1AC", Offset = "0xF9A1AC", VA = "0xF9A1AC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xF9A1B4", Offset = "0xF9A1B4", VA = "0xF9A1B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<NetCharacterBehaviour> TeamChangedEvent
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xF8E48C", Offset = "0xF8E48C", VA = "0xF8E48C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xF8E53C", Offset = "0xF8E53C", VA = "0xF8E53C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event Action<NetCharacterBehaviour> ControlOfPlayerGainedEvent
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xF8E5EC", Offset = "0xF8E5EC", VA = "0xF8E5EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xF8E6DC", Offset = "0xF8E6DC", VA = "0xF8E6DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event Action<NetCharacterBehaviour> ControlOfPlayeLostEvent
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0xF8E7CC", Offset = "0xF8E7CC", VA = "0xF8E7CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xF8E8C0", Offset = "0xF8E8C0", VA = "0xF8E8C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xF8F2A8", Offset = "0xF8F2A8", VA = "0xF8F2A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xF8FCBC", Offset = "0xF8FCBC", VA = "0xF8FCBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xF902A8", Offset = "0xF902A8", VA = "0xF902A8", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xF91E6C", Offset = "0xF91E6C", VA = "0xF91E6C")]
		public void InitBot(BotController controller)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xF91EA4", Offset = "0xF91EA4", VA = "0xF91EA4", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xF92034", Offset = "0xF92034", VA = "0xF92034", Slot = "22")]
		public override void ControlGained()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xF92940", Offset = "0xF92940", VA = "0xF92940", Slot = "23")]
		public override void ControlLost()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xF92DD4", Offset = "0xF92DD4", VA = "0xF92DD4")]
		public void ResetInactiveFrames()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xF92E08", Offset = "0xF92E08", VA = "0xF92E08")]
		private void UpdateInactiveFrames()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xF92E98", Offset = "0xF92E98", VA = "0xF92E98")]
		private Vector3 FixPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xF92FD8", Offset = "0xF92FD8", VA = "0xF92FD8")]
		public Vector3 ClampHand(Vector3 hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xF93144", Offset = "0xF93144", VA = "0xF93144")]
		public Vector3 ClampHead(Vector3 head)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xF93200", Offset = "0xF93200", VA = "0xF93200", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xF94538", Offset = "0xF94538", VA = "0xF94538", Slot = "21")]
		public override void SimulateController()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xF961C8", Offset = "0xF961C8", VA = "0xF961C8")]
		public bool IsWeaponInWall(HyperDash.Weapon.Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xF962AC", Offset = "0xF962AC", VA = "0xF962AC")]
		private void Controller_PollInput()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xF962A4", Offset = "0xF962A4", VA = "0xF962A4")]
		private void Controller_ClearInput()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xF96684", Offset = "0xF96684", VA = "0xF96684", Slot = "25")]
		public override void ExecuteCommand(Command command, bool resetState)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xF980B4", Offset = "0xF980B4", VA = "0xF980B4")]
		public void BotCommand(bool fireLeft, bool fireRight, bool reloadLeft, bool reloadRight)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xF98BF8", Offset = "0xF98BF8", VA = "0xF98BF8")]
		public void EnableFeature(CharacterFeature feature)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xF98C08", Offset = "0xF98C08", VA = "0xF98C08")]
		public void DisableFeature(CharacterFeature feature)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xF98C18", Offset = "0xF98C18", VA = "0xF98C18")]
		public void EnableAllFeatures()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xF98C24", Offset = "0xF98C24", VA = "0xF98C24")]
		public void DisableAllFeatures()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xF98C2C", Offset = "0xF98C2C", VA = "0xF98C2C")]
		public void ControllerRailToCart(Vector3 position)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xF98D84", Offset = "0xF98D84", VA = "0xF98D84")]
		public void Controller_Teleport(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xF98F3C", Offset = "0xF98F3C", VA = "0xF98F3C")]
		public void ToggleNameTag(bool active)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xF98FE0", Offset = "0xF98FE0", VA = "0xF98FE0")]
		public void AddRecoilToHand(int handIndex, Vector3 recoilVector)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xF991FC", Offset = "0xF991FC", VA = "0xF991FC")]
		private void OnDashingChanged()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xF992D0", Offset = "0xF992D0", VA = "0xF992D0")]
		public void Controller_StartDash(Vector3 target, Vector3 controlPoint, GrindRail rail, Vector3 railDirection)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xF994D8", Offset = "0xF994D8", VA = "0xF994D8")]
		public void Controller_UpdateDash()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xF98E70", Offset = "0xF98E70", VA = "0xF98E70")]
		private void Controller_StopDash()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xF94204", Offset = "0xF94204", VA = "0xF94204")]
		private void UpdateDashCharges(float deltaTime)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xF99784", Offset = "0xF99784", VA = "0xF99784")]
		private void ChargeRegainedFx(int chargeCount)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xF998BC", Offset = "0xF998BC", VA = "0xF998BC")]
		private void OnChargesChanged()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xF999F4", Offset = "0xF999F4", VA = "0xF999F4")]
		public void SendGiveMaxDashChargesEvent()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xF9997C", Offset = "0xF9997C", VA = "0xF9997C")]
		public void GiveMaxDashCharges()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xF99A78", Offset = "0xF99A78", VA = "0xF99A78")]
		public void GiveDashCharge()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xF99B50", Offset = "0xF99B50", VA = "0xF99B50")]
		private void OnRailIDChanged()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xF99640", Offset = "0xF99640", VA = "0xF99640")]
		private void Controller_StartGrind(GrindRail rail, Vector3 direction)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xF99D30", Offset = "0xF99D30", VA = "0xF99D30")]
		public void OnGrindingStarted(GrindRail rail, Vector3 position)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xF98CF4", Offset = "0xF98CF4", VA = "0xF98CF4")]
		public void Controller_StopGrind()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xF99CE8", Offset = "0xF99CE8", VA = "0xF99CE8")]
		public void OnGrindingStopped()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xF99F24", Offset = "0xF99F24", VA = "0xF99F24")]
		public void Controller_UpdateGrind()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xF9A140", Offset = "0xF9A140", VA = "0xF9A140")]
		private void UpdateGrindSpeed()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xF99E70", Offset = "0xF99E70", VA = "0xF99E70")]
		private void ToggleGrindFx(bool toggle)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xF9A1C0", Offset = "0xF9A1C0", VA = "0xF9A1C0")]
		private void Controller_UpdateSprint()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xF96608", Offset = "0xF96608", VA = "0xF96608")]
		public void Controller_StartSprint()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xF9667C", Offset = "0xF9667C", VA = "0xF9667C")]
		public void Controller_StopSprint()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xF9A3D8", Offset = "0xF9A3D8", VA = "0xF9A3D8")]
		private void OnSprintingChanged()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xF9A5C0", Offset = "0xF9A5C0", VA = "0xF9A5C0")]
		private void UpdateVoiceChatIcon()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xF9A75C", Offset = "0xF9A75C", VA = "0xF9A75C")]
		private void UpdateBlobShadow()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xF9A920", Offset = "0xF9A920", VA = "0xF9A920")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xF9C0AC", Offset = "0xF9C0AC", VA = "0xF9C0AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xF9C464", Offset = "0xF9C464", VA = "0xF9C464")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xF9B258", Offset = "0xF9B258", VA = "0xF9B258")]
		private void UpdateAnimationAndIK(VRIK_Targets ikTargets, Transform rootTransform)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xF8F8B4", Offset = "0xF8F8B4", VA = "0xF8F8B4")]
		private void InitTransforms()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xF9BDC0", Offset = "0xF9BDC0", VA = "0xF9BDC0")]
		private void UpdatePositionsAndRotations(bool teleport)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xF9CCF0", Offset = "0xF9CCF0", VA = "0xF9CCF0")]
		private void InterpolateTransforms()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xF9D1AC", Offset = "0xF9D1AC", VA = "0xF9D1AC")]
		private void SetupVRIK(VRIK_Targets ikTargets, bool isDashing, bool isGrinding, bool isFalling, bool shouldDoLocomotionIK)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xF9CE70", Offset = "0xF9CE70", VA = "0xF9CE70")]
		public Vector3 CalculateForwardFromHead(Transform headTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xF9D36C", Offset = "0xF9D36C", VA = "0xF9D36C")]
		private void AnimationDebugLog(VRIK_Targets ikTargets)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xF9C610", Offset = "0xF9C610", VA = "0xF9C610")]
		private void UpdateHeadAndHandTransforms()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xF9E4D4", Offset = "0xF9E4D4", VA = "0xF9E4D4")]
		private void UpdateCharacterControllerLayer()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xF8FB50", Offset = "0xF8FB50", VA = "0xF8FB50")]
		private void ResetCharacterRig()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xF9E5A0", Offset = "0xF9E5A0", VA = "0xF9E5A0")]
		public void AddPlatformMotion(Vector3 displacement, Quaternion rotationDelta, Vector3 pivot)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xF9E6F8", Offset = "0xF9E6F8", VA = "0xF9E6F8")]
		public void AddBotPlatformMovement(Vector3 displacement, Vector3 pivot)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xF9E764", Offset = "0xF9E764", VA = "0xF9E764")]
		public void AssignStartingWeapons(WeaponTypes leftHand, WeaponTypes rightHand)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xF9E790", Offset = "0xF9E790", VA = "0xF9E790")]
		public void SetWeapon(WeaponTypes weaponType, int handIndex)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xF9E900", Offset = "0xF9E900", VA = "0xF9E900")]
		public WeaponTypes GetWeaponType(int handIndex)
		{
			return default(WeaponTypes);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xF9E9F0", Offset = "0xF9E9F0", VA = "0xF9E9F0")]
		private void OnLeftWeaponChanged()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xF9EE8C", Offset = "0xF9EE8C", VA = "0xF9EE8C")]
		private void OnRightWeaponChanged()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xF9EC14", Offset = "0xF9EC14", VA = "0xF9EC14")]
		public void ChangeWeapon(int hand, int weaponIndex)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xF9F0B8", Offset = "0xF9F0B8", VA = "0xF9F0B8")]
		private void OnTeamIndexChanged()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xF9F5AC", Offset = "0xF9F5AC", VA = "0xF9F5AC")]
		private void OnCharacterHeightChanged()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xF9F778", Offset = "0xF9F778", VA = "0xF9F778")]
		private void OnHealthChanged()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xF9FC54", Offset = "0xF9FC54", VA = "0xF9FC54")]
		public void ServerSetDead()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xFA0028", Offset = "0xFA0028", VA = "0xFA0028")]
		public void Controller_OnDead(float respawnTime)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xF9FAA8", Offset = "0xF9FAA8", VA = "0xF9FAA8")]
		private void OnDead()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xF91E04", Offset = "0xF91E04", VA = "0xF91E04")]
		private void ServerResetOnSpawn()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xF93AD4", Offset = "0xF93AD4", VA = "0xF93AD4")]
		public void ServerRespawn()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xFA006C", Offset = "0xFA006C", VA = "0xFA006C")]
		public void Controller_Respawn(Vector3 position, float pan, int leftWeaponIndex, int rightWeaponIndex, int serverRespawnFrame)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xF9F8FC", Offset = "0xF9F8FC", VA = "0xF9F8FC")]
		private void ResetOnAllClientsWhenRespawning()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xFA040C", Offset = "0xFA040C", VA = "0xFA040C")]
		public static void SetTeamRespawnState(Teams team, RespawnState respawnState)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xFA0470", Offset = "0xFA0470", VA = "0xFA0470")]
		public static void SetTeamRespawnState(int teamID, RespawnState respawnState)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xFA04F8", Offset = "0xFA04F8", VA = "0xFA04F8")]
		public static void EnableAllRespawn()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xFA05A4", Offset = "0xFA05A4", VA = "0xFA05A4")]
		public static void DisableAllRespawn()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xF93A24", Offset = "0xF93A24", VA = "0xF93A24")]
		public static RespawnState GetRespawnStateSafe(int teamIndex)
		{
			return default(RespawnState);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xFA0654", Offset = "0xFA0654", VA = "0xFA0654")]
		public bool GiveDashPickup()
		{
			return default(bool);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xFA0888", Offset = "0xFA0888", VA = "0xFA0888")]
		private void InitInstantReload(PlayerObject shooter)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xFA0924", Offset = "0xFA0924", VA = "0xFA0924")]
		public void InstantReload(int gainedAmmoLeft, int gainedAmmoRight)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xFA0A14", Offset = "0xFA0A14", VA = "0xFA0A14")]
		public bool GiveHealthPickup(int hp)
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFA0C40", Offset = "0xFA0C40", VA = "0xFA0C40")]
		public void ApplyVampireHealth(int hp)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFA0D58", Offset = "0xFA0D58", VA = "0xFA0D58")]
		public bool GiveArmorPickup(int armor)
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFA02B0", Offset = "0xFA02B0", VA = "0xFA02B0")]
		public void ApplyModsOnSpawn()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFA0F80", Offset = "0xFA0F80", VA = "0xFA0F80")]
		public static NetCharacterBehaviour FindCharacterByID(int id)
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFA106C", Offset = "0xFA106C", VA = "0xFA106C")]
		public static NetCharacterBehaviour FindCharacterByUniyID(string id, out string apiID)
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFA1218", Offset = "0xFA1218", VA = "0xFA1218", Slot = "128")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFA1234", Offset = "0xFA1234", VA = "0xFA1234", Slot = "129")]
		public void LocalExplosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xF9AE88", Offset = "0xF9AE88", VA = "0xF9AE88")]
		private void UpdateCharacterShader()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFA1364", Offset = "0xFA1364", VA = "0xFA1364")]
		private void SetCharacterShieldColor(Color color)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xF9AFC0", Offset = "0xF9AFC0", VA = "0xF9AFC0")]
		private void UpdateCharacterSurfaceType()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xFA14C8", Offset = "0xFA14C8", VA = "0xFA14C8", Slot = "127")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xFA22E0", Offset = "0xFA22E0", VA = "0xFA22E0")]
		private static void SendLifeOrbEvent(HitData hitData, PlayerObject shooter, float vampireLifeSteal)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xFA273C", Offset = "0xFA273C", VA = "0xFA273C")]
		private void SendDebugPlaceOfDead(HitData hitData)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xFA1FBC", Offset = "0xFA1FBC", VA = "0xFA1FBC")]
		private void SendDebugHitboxes(PlayerObject shooter, HitData hitData)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xFA21B8", Offset = "0xFA21B8", VA = "0xFA21B8")]
		private void SendHitmarkerEvent(PlayerObject shooter, HitData hitData, bool isKill)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xFA28D8", Offset = "0xFA28D8", VA = "0xFA28D8")]
		private void SendHitCameraFxEvent(HitData hitData)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xFA2A18", Offset = "0xFA2A18", VA = "0xFA2A18")]
		public void SendBhapticsHitEvent(HitData hitData)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xF941CC", Offset = "0xF941CC", VA = "0xF941CC")]
		public void Kill()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xFA2B6C", Offset = "0xFA2B6C", VA = "0xFA2B6C")]
		private void OnHeadExplodedChanged()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xFA2C50", Offset = "0xFA2C50", VA = "0xFA2C50")]
		private void OnPumpkinExplodedChanged()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xFA2458", Offset = "0xFA2458", VA = "0xFA2458")]
		private void OnKilled(int killerID, WeaponTypes weaponType, bool isHeadshot, bool isAltfire)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xFA25F4", Offset = "0xFA25F4", VA = "0xFA25F4")]
		public void SendKillLineEvent(HitData hitData)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xFA09B4", Offset = "0xFA09B4", VA = "0xFA09B4")]
		private void SendInstantReloadEvent(PlayerObject shooter, int gainedAmmoLeft, int gainedAmmoRight)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xFA2D28", Offset = "0xFA2D28", VA = "0xFA2D28", Slot = "114")]
		public override void OnEvent(HandAnimationEvent evnt)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xFA0798", Offset = "0xFA0798", VA = "0xFA0798")]
		public void StartOverlay(PlayerHud.OverlayType type)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xF9B0C0", Offset = "0xF9B0C0", VA = "0xF9B0C0")]
		private void UpdateClientIKLOD()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xF9CBE8", Offset = "0xF9CBE8", VA = "0xF9CBE8")]
		private bool IsCharacterVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xFA2F24", Offset = "0xFA2F24", VA = "0xFA2F24")]
		public NetCharacterBehaviour()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class NetPlayerData : EntityBehaviour<ISyncedPlayerData>
	{
		[Token(Token = "0x2000361")]
		public struct PlayerStats
		{
			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Score;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Kills;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Deaths;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int Team;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Level;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int PlayerID;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ApiPlayerID;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string UnityID;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsAdmin;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool HasBoughtTheGame;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool IsDead;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
			public bool IsBot;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public StoreApi Store;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string StoreId;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int Ping;
		}

		[Token(Token = "0x2000362")]
		public struct NamesUpdatedArgs
		{
			[Token(Token = "0x17000265")]
			public readonly List<int> RankedPlayers
			{
				[Token(Token = "0x60014BA")]
				[Address(RVA = "0xFA9B48", Offset = "0xFA9B48", VA = "0xFA9B48")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xFA9B50", Offset = "0xFA9B50", VA = "0xFA9B50")]
			public NamesUpdatedArgs(List<int> rankedPlayers)
			{
			}
		}

		[Token(Token = "0x2000363")]
		public delegate void NamesUpdatedDelegate(NetPlayerData sender, NamesUpdatedArgs eventArgs);

		[Token(Token = "0x2000364")]
		public struct RankingUpdatedArgs
		{
			[Token(Token = "0x17000266")]
			public readonly List<int> RankedPlayers
			{
				[Token(Token = "0x60014C0")]
				[Address(RVA = "0xFA9D48", Offset = "0xFA9D48", VA = "0xFA9D48")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xFA9D50", Offset = "0xFA9D50", VA = "0xFA9D50")]
			public RankingUpdatedArgs(List<int> rankedPlayers)
			{
			}
		}

		[Token(Token = "0x2000365")]
		public delegate void RankingUpdatedDelegate(NetPlayerData sender, RankingUpdatedArgs eventArgs);

		[Token(Token = "0x2000366")]
		public struct TeamScoringUpdatedArgs
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int ScoreRed;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int ScoreBlue;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Format;
		}

		[Token(Token = "0x2000367")]
		public delegate void ScoringUpdatedDelegate(NetPlayerData sender, TeamScoringUpdatedArgs eventArgs);

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetPlayerData _instance;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<int> RankedPlayers;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ISyncedPlayerData _state;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _updateRankingIsDirty;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _updateTeamScoringIsDirty;

		[Token(Token = "0x40013E8")]
		private const int ArrayLenght = 32;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] _names;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _apiIds;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] _unityIDs;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] _stores;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] _storeIds;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] _levels;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] _scores;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int[] _deaths;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int[] _kills;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int[] _teams;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool[] _isDeath;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _ping;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int[] _pingChange;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool[] _boughtTheGame;

		[Token(Token = "0x40013F7")]
		private const int MinPingChangedFrames = 10;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NetworkArray_String _syncedNames;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NetworkArray_String _syncedApiIds;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NetworkArray_String _syncedUnityIDs;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NetworkArray_Integer _syncedStores;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NetworkArray_String _syncedStoreIds;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NetworkArray_Integer _syncedLevels;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NetworkArray_Integer _syncedScores;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private NetworkArray_Integer _syncedDeaths;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NetworkArray_Integer _syncedTeams;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private NetworkArray_Integer _syncedKills;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NetworkArray_Integer _syncedIsDeath;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private NetworkArray_Integer _syncedPing;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NetworkArray_Integer _syncedBoughtGame;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string TeamRedName;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string TeamBlueName;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _NamesChangedIsDirty;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static List<string> _redClans;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static List<string> _blueClans;

		[Token(Token = "0x17000263")]
		public static NetPlayerData AttachedInstance
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xFA5190", Offset = "0xFA5190", VA = "0xFA5190")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xFA5284", Offset = "0xFA5284", VA = "0xFA5284")]
			private set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public static bool IsLocalPlayerAdmin
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0xFA52E4", Offset = "0xFA52E4", VA = "0xFA52E4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xFA533C", Offset = "0xFA533C", VA = "0xFA533C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public static event NamesUpdatedDelegate NamesUpdatedEvent
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xFA48A0", Offset = "0xFA48A0", VA = "0xFA48A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xFA4978", Offset = "0xFA4978", VA = "0xFA4978")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event RankingUpdatedDelegate RankingUpdatedEvent
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xFA4A50", Offset = "0xFA4A50", VA = "0xFA4A50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xFA4B2C", Offset = "0xFA4B2C", VA = "0xFA4B2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event ScoringUpdatedDelegate TeamScoringUpdatedEvent
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xFA4C08", Offset = "0xFA4C08", VA = "0xFA4C08")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001495")]
			[Address(RVA = "0xFA4CE4", Offset = "0xFA4CE4", VA = "0xFA4CE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event Action<NetPlayerData, int> PlayerCountUpdatedEvent
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0xFA4DC0", Offset = "0xFA4DC0", VA = "0xFA4DC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001497")]
			[Address(RVA = "0xFA4EB4", Offset = "0xFA4EB4", VA = "0xFA4EB4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event Action<bool, string> AdminChangedEvent
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0xFA4FA8", Offset = "0xFA4FA8", VA = "0xFA4FA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xFA509C", Offset = "0xFA509C", VA = "0xFA509C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xFA5398", Offset = "0xFA5398", VA = "0xFA5398", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xFA7AFC", Offset = "0xFA7AFC", VA = "0xFA7AFC")]
		private void OnBlueTeamNameChanged()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xFA7BE0", Offset = "0xFA7BE0", VA = "0xFA7BE0")]
		private void OnRedTeamNameChanged(IState state, string propertyPath, ArrayIndices arrayIndices)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xFA7CC4", Offset = "0xFA7CC4", VA = "0xFA7CC4")]
		private void OnAdminApiIdChanged()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xFA7AF0", Offset = "0xFA7AF0", VA = "0xFA7AF0")]
		public void OnUpdateRanking()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xFA7FF8", Offset = "0xFA7FF8", VA = "0xFA7FF8")]
		public void OnUpdateTeamScoring()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xFA8004", Offset = "0xFA8004", VA = "0xFA8004")]
		private void OnPlayerCountChanged()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xFA8104", Offset = "0xFA8104", VA = "0xFA8104")]
		public void SortPlayerBasedOnGameMode()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xFA82C4", Offset = "0xFA82C4", VA = "0xFA82C4")]
		private int SortByScore(int playerID, int otherID)
		{
			return default(int);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xFA8370", Offset = "0xFA8370", VA = "0xFA8370")]
		private int SortByKills(int playerID, int otherID)
		{
			return default(int);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xFA69CC", Offset = "0xFA69CC", VA = "0xFA69CC")]
		public void SetDefaultState()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xFA8474", Offset = "0xFA8474", VA = "0xFA8474")]
		private void OnPlayerCountChanged(int count)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xFA8520", Offset = "0xFA8520", VA = "0xFA8520")]
		private void OnPlayerDataChanged()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xFA852C", Offset = "0xFA852C", VA = "0xFA852C", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xFA8638", Offset = "0xFA8638", VA = "0xFA8638", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xFA863C", Offset = "0xFA863C", VA = "0xFA863C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xFA8640", Offset = "0xFA8640", VA = "0xFA8640")]
		public void RaiseDirtyEvents()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xFA71C0", Offset = "0xFA71C0", VA = "0xFA71C0")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xFA8EF0", Offset = "0xFA8EF0", VA = "0xFA8EF0")]
		public string GetName(int playerID)
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFA8F74", Offset = "0xFA8F74", VA = "0xFA8F74")]
		public int GetTeam(int playerID)
		{
			return default(int);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xFA8FE4", Offset = "0xFA8FE4", VA = "0xFA8FE4")]
		public PlayerStats GetPlayerStats(int playerID)
		{
			return default(PlayerStats);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xFA9350", Offset = "0xFA9350", VA = "0xFA9350")]
		public bool IsTopPlayerOfTeam(int playerID, int team)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFA9508", Offset = "0xFA9508", VA = "0xFA9508")]
		public bool IsTopPlayerDeathmatch(int playerID)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFA95F0", Offset = "0xFA95F0", VA = "0xFA95F0")]
		public void SetScoreFormat(string format)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFA8A10", Offset = "0xFA8A10", VA = "0xFA8A10")]
		public void UpdateTeamNames()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFA96C4", Offset = "0xFA96C4", VA = "0xFA96C4")]
		private static bool GetTeamName(string defaultTeamName, ref List<string> clans, out string clanName)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFA9810", Offset = "0xFA9810", VA = "0xFA9810")]
		public NetPlayerData()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public struct DashInfo
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Start;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 End;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 ControlPoint;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Duration;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Time;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrindRail Rail;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 RailDirection;
	}
	[Token(Token = "0x2000369")]
	[DefaultExecutionOrder(-10000)]
	public class PlayerMovement : MonoBehaviour
	{
		[Token(Token = "0x200036A")]
		public enum Stances
		{
			[Token(Token = "0x4001447")]
			Standing,
			[Token(Token = "0x4001448")]
			Crouching,
			[Token(Token = "0x4001449")]
			TooLow
		}

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _localSpaceVelocity;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _simulateCrouch;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObscuredFloat _timeUntilNextCrouch;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _rotateAxis;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _fallSpeed;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _teleportFrame;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _teleportIgnoreRotation;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputModule _currentInputModule;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _movementSpeedMultiplier;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float ThumbstickAngle;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 ThumbstickAxisRemapped;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector2 ThumbstickAxis;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Debug output")]
		public float DebugSpeed;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float MeasuredHeight;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float AdjustedHeight;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float OverHeight;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float UnderHeight;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool DebugTeleportFrame;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Stances Stance;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float StanceTime;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool UseOldMovement;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _worldSpaceVelocity;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _timeOfLastUpdate;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _angleTest;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _slideTimer;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _persistentOffset;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _lastCalibratedHeight;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 _dampVelocity;

		[Token(Token = "0x17000267")]
		public InputModule CurrentInputModule
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xFAA13C", Offset = "0xFAA13C", VA = "0xFAA13C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public CharacterController CharacterController
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xFAA1C8", Offset = "0xFAA1C8", VA = "0xFAA1C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xFAA1D0", Offset = "0xFAA1D0", VA = "0xFAA1D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public NetCharacterBehaviour CharacterBehavior
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xFAA1D8", Offset = "0xFAA1D8", VA = "0xFAA1D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xFAA1E0", Offset = "0xFAA1E0", VA = "0xFAA1E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public Vector3 PlatformMovement
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xFAA1E8", Offset = "0xFAA1E8", VA = "0xFAA1E8")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xFAA1F4", Offset = "0xFAA1F4", VA = "0xFAA1F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float HeightOffset
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xFAA200", Offset = "0xFAA200", VA = "0xFAA200")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xFAA208", Offset = "0xFAA208", VA = "0xFAA208")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public Vector3 LocalSpaceVelocity
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xFAA210", Offset = "0xFAA210", VA = "0xFAA210")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026D")]
		public float MovementSpeedMultiplier
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xFAA21C", Offset = "0xFAA21C", VA = "0xFAA21C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xFAA224", Offset = "0xFAA224", VA = "0xFAA224")]
		public void Initialize(InputModule inputModule)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xFAA22C", Offset = "0xFAA22C", VA = "0xFAA22C")]
		public void DoUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xFAB220", Offset = "0xFAB220", VA = "0xFAB220")]
		public Vector3 FixedExtrapolationVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xFAB0E0", Offset = "0xFAB0E0", VA = "0xFAB0E0")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xFAB42C", Offset = "0xFAB42C", VA = "0xFAB42C")]
		private void SnapRotation()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xFAB250", Offset = "0xFAB250", VA = "0xFAB250")]
		private void SmoothRotation()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xFAB61C", Offset = "0xFAB61C", VA = "0xFAB61C")]
		public void TeleportFrame(bool ingnoreRotation = false)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xFAB150", Offset = "0xFAB150", VA = "0xFAB150")]
		private void UpdateEffectCulling()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xFAA98C", Offset = "0xFAA98C", VA = "0xFAA98C")]
		public void UpdateCharacterController(float dt)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xFAA2F8", Offset = "0xFAA2F8", VA = "0xFAA2F8")]
		public void UpdateCrouch(float dt)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xFABC80", Offset = "0xFABC80", VA = "0xFABC80")]
		public void CalibrateHeight()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xFAA45C", Offset = "0xFAA45C", VA = "0xFAA45C")]
		public void UpdateStance()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xFAB70C", Offset = "0xFAB70C", VA = "0xFAB70C")]
		private void CalculateVelocity_Old(float dt)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xFAB9FC", Offset = "0xFAB9FC", VA = "0xFAB9FC")]
		private void CalculateVelocity_New(float dt)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xFAA778", Offset = "0xFAA778", VA = "0xFAA778")]
		public void TeleportHmdToController(bool ignoreRotation = false)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xFAB630", Offset = "0xFAB630", VA = "0xFAB630")]
		private void UpdateMovementSpeedMultiplier(float dt)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xFABD88", Offset = "0xFABD88", VA = "0xFABD88")]
		public PlayerMovement()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public enum RespawnState
	{
		[Token(Token = "0x400144B")]
		Allowed,
		[Token(Token = "0x400144C")]
		Blocked,
		[Token(Token = "0x400144D")]
		Blocked_NoInfo,
		[Token(Token = "0x400144E")]
		Blocked_EnemyDominating
	}
	[Token(Token = "0x200036C")]
	public class SprintEffect : MonoBehaviour
	{
		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrailRenderer _renderer;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Color StartColor;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource _loopSource;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _maxLoopVolume;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _oneShotSource;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _startClip;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _stopClip;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _startClipVolume;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _endClipVolume;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _particle;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _alphaTimer;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly int TintColorID;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _trailTime;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _targetLoopVolumePercent;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _currentLoopVolumePercent;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _previousPosition;

		[Token(Token = "0x1700026E")]
		public bool IsEnabled
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xFABDDC", Offset = "0xFABDDC", VA = "0xFABDDC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xFABDE4", Offset = "0xFABDE4", VA = "0xFABDE4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xFABDF0", Offset = "0xFABDF0", VA = "0xFABDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xFABED0", Offset = "0xFABED0", VA = "0xFABED0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xFABF8C", Offset = "0xFABF8C", VA = "0xFABF8C")]
		private void UpdateLoopSound()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xFAC0CC", Offset = "0xFAC0CC", VA = "0xFAC0CC")]
		private void UpdateFadeOut()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xFAC260", Offset = "0xFAC260", VA = "0xFAC260")]
		public void EnableFx()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xFAC378", Offset = "0xFAC378", VA = "0xFAC378")]
		public void DisableFx()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xFAC320", Offset = "0xFAC320", VA = "0xFAC320")]
		private void PlayStartSound()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xFAC3B4", Offset = "0xFAC3B4", VA = "0xFAC3B4")]
		private void PlayEndSound()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xFAC3FC", Offset = "0xFAC3FC", VA = "0xFAC3FC")]
		public SprintEffect()
		{
		}
	}
}
namespace HyperDash.Player.FPS
{
	[Token(Token = "0x200036D")]
	[AddComponentMenu("Camera-Control/Mouse Look (Advanced)")]
	public class MouseLookAdvanced : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		public enum RotationAxes
		{
			[Token(Token = "0x400146A")]
			MouseXAndY,
			[Token(Token = "0x400146B")]
			MouseX,
			[Token(Token = "0x400146C")]
			MouseY
		}

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumY;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumY;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationY;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isFocused;

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xFAC46C", Offset = "0xFAC46C", VA = "0xFAC46C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xFAC8A4", Offset = "0xFAC8A4", VA = "0xFAC8A4")]
		private void OnGameFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xFAC734", Offset = "0xFAC734", VA = "0xFAC734")]
		public static bool IsPointerOverUIElement()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xFAC8B0", Offset = "0xFAC8B0", VA = "0xFAC8B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xFAC96C", Offset = "0xFAC96C", VA = "0xFAC96C")]
		public MouseLookAdvanced()
		{
		}
	}
}
namespace HyperDash.Payload
{
	[Token(Token = "0x200036F")]
	public class NetPayloadBehaviour : EntityEventListener<IPayloadState>
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrindRail _rail;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Spline.Direction _direction;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundsComponent _standOnCartBound;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundsComponent _autoMountBounds;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _renderTransform;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _extraPayloadPush;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoundsComponent _overtimeBounds;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SplineFollower _splineFollower;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<NetCharacterBehaviour> _pushingPlayersOnCart;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<NetCharacterBehaviour> _defendingPlayersOnCart;

		[Token(Token = "0x4001477")]
		public const float Speed = 1f;

		[Token(Token = "0x1700026F")]
		public Teams PushingTeam
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xFAC980", Offset = "0xFAC980", VA = "0xFAC980")]
			[CompilerGenerated]
			get
			{
				return default(Teams);
			}
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xFAC988", Offset = "0xFAC988", VA = "0xFAC988")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Teams DefendingTeam
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xFAC990", Offset = "0xFAC990", VA = "0xFAC990")]
			get
			{
				return default(Teams);
			}
		}

		[Token(Token = "0x17000271")]
		public bool LockMovement
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xFAC99C", Offset = "0xFAC99C", VA = "0xFAC99C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xFAC9A4", Offset = "0xFAC9A4", VA = "0xFAC9A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float Percent
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xFAC9B0", Offset = "0xFAC9B0", VA = "0xFAC9B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000273")]
		public GrindRail Rail
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xFACA68", Offset = "0xFACA68", VA = "0xFACA68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public int MovingSpeed
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xFACA70", Offset = "0xFACA70", VA = "0xFACA70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xFACBC4", Offset = "0xFACBC4", VA = "0xFACBC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xFACD28", Offset = "0xFACD28", VA = "0xFACD28", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xFACE8C", Offset = "0xFACE8C", VA = "0xFACE8C", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xFAD65C", Offset = "0xFAD65C", VA = "0xFAD65C")]
		private void UpdateScoreForPlayersOnCart()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xFAD7D0", Offset = "0xFAD7D0", VA = "0xFAD7D0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xFAD320", Offset = "0xFAD320", VA = "0xFAD320")]
		private void UpdateRailToCartForBots()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xFAD8A0", Offset = "0xFAD8A0", VA = "0xFAD8A0")]
		private void DismountLocalPlayerOnCollision(NetCharacterBehaviour localPlayer)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xFAD3F4", Offset = "0xFAD3F4", VA = "0xFAD3F4")]
		private void UpdatePlayersOnPayload(Teams team, ref List<NetCharacterBehaviour> playersOnPayload)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xFACCCC", Offset = "0xFACCCC", VA = "0xFACCCC")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xFADAD4", Offset = "0xFADAD4", VA = "0xFADAD4")]
		public bool IsAttackerInOverTimeZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xFADCBC", Offset = "0xFADCBC", VA = "0xFADCBC")]
		public bool HasPassedPercent(float percent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xFADCF0", Offset = "0xFADCF0", VA = "0xFADCF0")]
		public NetPayloadBehaviour()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class PayloadAnnouncer : MonoBehaviour
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Announcer _announcer;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetMusicPlayer _musicPlayer;

		[Token(Token = "0x17000275")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xFADDC4", Offset = "0xFADDC4", VA = "0xFADDC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xFADDE0", Offset = "0xFADDE0", VA = "0xFADDE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xFADE74", Offset = "0xFADE74", VA = "0xFADE74")]
		public PayloadAnnouncer()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class PayloadCheckPoint : MonoBehaviour
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GrindRail _payloadRail;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x17000276")]
		public float Percent
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xFADE7C", Offset = "0xFADE7C", VA = "0xFADE7C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xFADE84", Offset = "0xFADE84", VA = "0xFADE84")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xFADE8C", Offset = "0xFADE8C", VA = "0xFADE8C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xFADEEC", Offset = "0xFADEEC", VA = "0xFADEEC")]
		public void OnPointReachedFx()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xFADF08", Offset = "0xFADF08", VA = "0xFADF08")]
		public PayloadCheckPoint()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class PayloadDisplay : MonoBehaviour
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _timer;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _overTime;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NetPayloadBehaviour _netPayload;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _speedSegments;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _overtimeShowing;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _pushCountShowing;

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xFADF18", Offset = "0xFADF18", VA = "0xFADF18")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xFADF58", Offset = "0xFADF58", VA = "0xFADF58")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xFAE12C", Offset = "0xFAE12C", VA = "0xFAE12C")]
		public PayloadDisplay()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class PayloadHudMessages : MonoBehaviour
	{
		[Token(Token = "0x6001515")]
		[Address(RVA = "0xFAE13C", Offset = "0xFAE13C", VA = "0xFAE13C")]
		public void OnTeamWinsGame(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xFAE1F0", Offset = "0xFAE1F0", VA = "0xFAE1F0")]
		public void OnRoundEnd(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xFAE410", Offset = "0xFAE410", VA = "0xFAE410")]
		public PayloadHudMessages()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class PayloadMatch : Match
	{
		[Token(Token = "0x2000375")]
		private enum PayloadMatchState
		{
			[Token(Token = "0x40014A7")]
			None,
			[Token(Token = "0x40014A8")]
			DefenderSetup,
			[Token(Token = "0x40014A9")]
			Playing,
			[Token(Token = "0x40014AA")]
			RoundOver,
			[Token(Token = "0x40014AB")]
			NextMap
		}

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NetPayloadBehaviour _payload;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Teams _pushingTeam;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PayloadCheckPoint _checkPoint;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Fx")]
		[SerializeField]
		private GameObject _fireworks;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _pushTarget;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Checkpoint objects")]
		[SerializeField]
		private GameObject[] _attackerDoors;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Header("Checkpoint objects")]
		private GameObject[] _objectsBeforeCheckpoint;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject[] _objectsAfterCheckpoint;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Header("Audio")]
		private PayloadAnnouncer _announcerAndMusic;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Header("Messages")]
		private PayloadHudMessages _hudMessages;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PayloadMatchState _matchState;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _stateTime;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _hasWinningTeamMessageBeenSend;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _hasPrepareMessageBeenSend;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IPayloadMatchState _boltState;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _wasInOvertimeZone;

		[Token(Token = "0x4001495")]
		private const float OvertimeDuration = 3f;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Announcer _announcer;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NetMusicPlayer _musicPlayer;

		[Token(Token = "0x4001498")]
		private const int ScorePrecision = 10000;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _hasFadeStarted;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _pushTargetPercent;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Teams _winnerOfLastRound;

		[Token(Token = "0x400149C")]
		private const int TotalRounds = 2;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _prevTimeStateChanged;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int[] _botControllingTeam;

		[Token(Token = "0x17000277")]
		public override float Timer
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xFAE418", Offset = "0xFAE418", VA = "0xFAE418", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000278")]
		public static Transform PayloadTransform
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xFAE780", Offset = "0xFAE780", VA = "0xFAE780")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xFAE7C8", Offset = "0xFAE7C8", VA = "0xFAE7C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public static float PayloadPercent
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xFAE820", Offset = "0xFAE820", VA = "0xFAE820")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xFAE868", Offset = "0xFAE868", VA = "0xFAE868")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public static float CheckpointPercent
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xFAE8BC", Offset = "0xFAE8BC", VA = "0xFAE8BC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xFAE904", Offset = "0xFAE904", VA = "0xFAE904")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public static bool IsOvertime
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xFAE958", Offset = "0xFAE958", VA = "0xFAE958")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xFAE9A0", Offset = "0xFAE9A0", VA = "0xFAE9A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public static float OverTimePercent
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xFAE9EC", Offset = "0xFAE9EC", VA = "0xFAE9EC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xFAEA34", Offset = "0xFAEA34", VA = "0xFAEA34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public static int PayloadSpeed
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0xFAEA88", Offset = "0xFAEA88", VA = "0xFAEA88")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001524")]
			[Address(RVA = "0xFAEAD0", Offset = "0xFAEAD0", VA = "0xFAEAD0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xFAEB1C", Offset = "0xFAEB1C", VA = "0xFAEB1C", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xFAEB9C", Offset = "0xFAEB9C", VA = "0xFAEB9C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xFB0284", Offset = "0xFB0284", VA = "0xFB0284")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xFAFED8", Offset = "0xFAFED8", VA = "0xFAFED8")]
		private void UpdateGlobals()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xFB04E4", Offset = "0xFB04E4", VA = "0xFB04E4", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xFAF520", Offset = "0xFAF520", VA = "0xFAF520")]
		private void ServerChangeState(PayloadMatchState state)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xFB0704", Offset = "0xFB0704", VA = "0xFB0704")]
		private void ServerEnterState(PayloadMatchState newState)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xFB05C4", Offset = "0xFB05C4", VA = "0xFB05C4")]
		private void UpdateServerState()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xFB11E0", Offset = "0xFB11E0", VA = "0xFB11E0")]
		private void ServerUpdatePlayingState()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xFB22A0", Offset = "0xFB22A0", VA = "0xFB22A0")]
		private void EndRoundOutOfTime()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xFB0FA0", Offset = "0xFB0FA0", VA = "0xFB0FA0")]
		private void ServerUpdateDefenderSetupState()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xFB1E80", Offset = "0xFB1E80", VA = "0xFB1E80")]
		private void ServerUpdateRoundOverState()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xFB29B8", Offset = "0xFB29B8", VA = "0xFB29B8", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playersOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xFB2CBC", Offset = "0xFB2CBC", VA = "0xFB2CBC", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xFB2CCC", Offset = "0xFB2CCC", VA = "0xFB2CCC", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xFB2494", Offset = "0xFB2494", VA = "0xFB2494")]
		public void AnnouncerOnTeamWinsRound(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xFB25AC", Offset = "0xFB25AC", VA = "0xFB25AC")]
		public void SwapTeams()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xFB2D50", Offset = "0xFB2D50", VA = "0xFB2D50", Slot = "34")]
		protected override void UpdateTeamScores()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xFAF7B0", Offset = "0xFAF7B0", VA = "0xFAF7B0")]
		private void OnCheckPointReachedChanged()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xFAF6F4", Offset = "0xFAF6F4", VA = "0xFAF6F4")]
		private void OnToggleFireWorksChanged()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xFAF9D8", Offset = "0xFAF9D8", VA = "0xFAF9D8")]
		private void OnToggleAttackersDoorsChanged()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xFAFAD0", Offset = "0xFAFAD0", VA = "0xFAFAD0")]
		private void OnSyncedMatchStateChanged()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xFAFD64", Offset = "0xFAFD64", VA = "0xFAFD64")]
		private void OnPushTargetChanged()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xFB3100", Offset = "0xFB3100", VA = "0xFB3100", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xFB3114", Offset = "0xFB3114", VA = "0xFB3114")]
		public PayloadMatch()
		{
		}
	}
}
namespace HyperDash.Networking
{
	[Token(Token = "0x2000378")]
	public class AdminJoinToken : IProtocolToken
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ServerName;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Password;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelRange LevelLock;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxAllowedPing;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrivateServerTicketResponse Ticket;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xFB3424", Offset = "0xFB3424", VA = "0xFB3424", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xFB356C", Offset = "0xFB356C", VA = "0xFB356C", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xFB35EC", Offset = "0xFB35EC", VA = "0xFB35EC")]
		public AdminJoinToken()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public enum AdminSimpleEventType
	{
		[Token(Token = "0x40014B7")]
		StartMatch,
		[Token(Token = "0x40014B8")]
		StopMatch
	}
	[Token(Token = "0x200037A")]
	public abstract class BoltController : GlobalEventListener
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<bool, int> _startCallback;

		[Token(Token = "0x40014BA")]
		public const string MapPropertyHashKey = "m";

		[Token(Token = "0x40014BB")]
		public const string GameModePropertyHashKey = "gm";

		[Token(Token = "0x40014BC")]
		public const string MutatorPropertyHashKey = "mods";

		[Token(Token = "0x40014BD")]
		public const string MutatorCountPropertyHashKey = "modsc";

		[Token(Token = "0x40014BE")]
		public const string ServerMessagePropertyHashKey = "sm";

		[Token(Token = "0x40014BF")]
		public const string VersionPropertyHashKey = "cv";

		[Token(Token = "0x40014C0")]
		public const string IsDevPropertyHashKey = "dev";

		[Token(Token = "0x40014C1")]
		public const string SessionInfoFlagsKey = "info";

		[Token(Token = "0x40014C2")]
		public const string IpPropertyHashKey = "ip";

		[Token(Token = "0x40014C3")]
		public const string PortPropertyHashKey = "p";

		[Token(Token = "0x40014C4")]
		public const string MaxPlayersKey = "maxP";

		[Token(Token = "0x40014C5")]
		public const string MaxSpectatorsKey = "maxS";

		[Token(Token = "0x40014C6")]
		public const string CurrentPlayersKey = "curP";

		[Token(Token = "0x40014C7")]
		public const string CurrentSpectatorsKey = "curS";

		[Token(Token = "0x40014C8")]
		public const string IsAmazonServerKey = "Amz";

		[Token(Token = "0x40014C9")]
		public const string ServerKey = "svr";

		[Token(Token = "0x40014CA")]
		public const string ServerNameKey = "svrN";

		[Token(Token = "0x40014CB")]
		public const string PlayerNamesKey = "plrsN";

		[Token(Token = "0x40014CC")]
		public const string PlayerLevelsKey = "plrsL";

		[Token(Token = "0x40014CD")]
		public const string PlayerTeamsKey = "plrsT";

		[Token(Token = "0x40014CE")]
		public const string SpectatorPropertiesKey = "spcttrs";

		[Token(Token = "0x40014CF")]
		public const string FriendPropertiesKey = "friends";

		[Token(Token = "0x40014D0")]
		public const string RegionPropertiesKey = "region";

		[Token(Token = "0x40014D1")]
		public const string LocationIdPropertiesKey = "lid";

		[Token(Token = "0x40014D2")]
		public const string LevelLockMaxKey = "llmin";

		[Token(Token = "0x40014D3")]
		public const string LevelLockMinKey = "llmax";

		[Token(Token = "0x40014D4")]
		public const string PingMaxKey = "pingmax";

		[Token(Token = "0x17000280")]
		public string StatusMessage
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0xFB35F4", Offset = "0xFB35F4", VA = "0xFB35F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600154A")]
			[Address(RVA = "0xFB35FC", Offset = "0xFB35FC", VA = "0xFB35FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xFB3604", Offset = "0xFB3604", VA = "0xFB3604", Slot = "150")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xFB3768", Offset = "0xFB3768", VA = "0xFB3768", Slot = "12")]
		public override void BoltStartBegin()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xFB39B8", Offset = "0xFB39B8", VA = "0xFB39B8", Slot = "14")]
		public override void BoltStartFailed(UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xFB3AD0", Offset = "0xFB3AD0", VA = "0xFB3AD0", Slot = "13")]
		public override void BoltStartDone()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xFB3B0C", Offset = "0xFB3B0C", VA = "0xFB3B0C", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x6001550")]
		public abstract void ShutDown([Optional] Action callback);

		[Token(Token = "0x6001551")]
		protected abstract void OnBoltShutdownFinished();

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xFB3D08", Offset = "0xFB3D08", VA = "0xFB3D08", Slot = "37")]
		public override void SessionConnectFailed(UdpSession session, IProtocolToken token, UdpSessionError errorReason)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xFB3DD0", Offset = "0xFB3DD0", VA = "0xFB3DD0")]
		public void SetStartCallback(Action<bool, int> callback)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xFB3DD8", Offset = "0xFB3DD8", VA = "0xFB3DD8")]
		protected BoltController()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class ClientBoltController : BoltController
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _shutdownFinishedCallback;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isBoltStartSuccesful;

		[Token(Token = "0x17000281")]
		public bool IsConnectedToPhoton
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xFB3DE0", Offset = "0xFB3DE0", VA = "0xFB3DE0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xFB3DE8", Offset = "0xFB3DE8", VA = "0xFB3DE8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool ShouldTryToReconnect
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0xFB3DF4", Offset = "0xFB3DF4", VA = "0xFB3DF4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xFB3DFC", Offset = "0xFB3DFC", VA = "0xFB3DFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public ReconnectData ReconnectData
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0xFB3E08", Offset = "0xFB3E08", VA = "0xFB3E08")]
			[CompilerGenerated]
			get
			{
				return default(ReconnectData);
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xFB3E14", Offset = "0xFB3E14", VA = "0xFB3E14")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool AutoRestart
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xFB3E2C", Offset = "0xFB3E2C", VA = "0xFB3E2C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xFB3E34", Offset = "0xFB3E34", VA = "0xFB3E34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xFB3E40", Offset = "0xFB3E40", VA = "0xFB3E40")]
		private void Start()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xFB3E44", Offset = "0xFB3E44", VA = "0xFB3E44")]
		private void StartBolt()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xFB3FA4", Offset = "0xFB3FA4", VA = "0xFB3FA4", Slot = "14")]
		public override void BoltStartFailed(UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xFB3FB8", Offset = "0xFB3FB8", VA = "0xFB3FB8", Slot = "151")]
		public override void ShutDown([Optional] Action callback)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xFB4078", Offset = "0xFB4078", VA = "0xFB4078", Slot = "152")]
		protected override void OnBoltShutdownFinished()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xFB439C", Offset = "0xFB439C", VA = "0xFB439C", Slot = "13")]
		public override void BoltStartDone()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xFB43FC", Offset = "0xFB43FC", VA = "0xFB43FC", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xFB4494", Offset = "0xFB4494", VA = "0xFB4494", Slot = "36")]
		public override void SessionConnected(UdpSession session, IProtocolToken token)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xFB4B94", Offset = "0xFB4B94", VA = "0xFB4B94", Slot = "37")]
		public override void SessionConnectFailed(UdpSession session, IProtocolToken token, UdpSessionError errorReason)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xFB4C28", Offset = "0xFB4C28", VA = "0xFB4C28")]
		public void DisconnectFromServer()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xFB4CB0", Offset = "0xFB4CB0", VA = "0xFB4CB0", Slot = "27")]
		public override void Disconnected(BoltConnection connection)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xFB48D8", Offset = "0xFB48D8", VA = "0xFB48D8")]
		private void SendConnectedAnalytic(BoltConnection connection, string serverName, string serverRegion, int playerCount, bool isRelayed)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xFB51B4", Offset = "0xFB51B4", VA = "0xFB51B4")]
		public ClientBoltController()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public enum StatusSeverity
	{
		[Token(Token = "0x40014DF")]
		Good,
		[Token(Token = "0x40014E0")]
		Warning,
		[Token(Token = "0x40014E1")]
		Severe
	}
	[Token(Token = "0x200037E")]
	public class ClientConnectionStatus : MonoBehaviour
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StatusSeverity PacketLossSeverity;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static StatusSeverity PingSeverity;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool NoRewind;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _lastMeasuredPacketLoss;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _packetLossMeasureDelay;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int PacketLossSevereRuntime;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int PacketLossWarningRuntime;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int PingSevereRuntime;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int PingWarningRuntime;

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xFB52A4", Offset = "0xFB52A4", VA = "0xFB52A4")]
		private void Reset()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xFB5300", Offset = "0xFB5300", VA = "0xFB5300")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xFA896C", Offset = "0xFA896C", VA = "0xFA896C")]
		public static StatusSeverity GetPingSeverity(BoltConnection connection)
		{
			return default(StatusSeverity);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xFB55BC", Offset = "0xFB55BC", VA = "0xFB55BC")]
		public static StatusSeverity GetPingSeverity(int ping)
		{
			return default(StatusSeverity);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xFB564C", Offset = "0xFB564C", VA = "0xFB564C")]
		public ClientConnectionStatus()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public enum ErrorTypes
	{
		[Token(Token = "0x40014EC")]
		Unknown,
		[Token(Token = "0x40014ED")]
		NoPlayerSlots,
		[Token(Token = "0x40014EE")]
		NoSpectatorSlots,
		[Token(Token = "0x40014EF")]
		InvalidUserToken,
		[Token(Token = "0x40014F0")]
		PasswordIncorrect,
		[Token(Token = "0x40014F1")]
		InactiveDisconnect,
		[Token(Token = "0x40014F2")]
		ServerRestart,
		[Token(Token = "0x40014F3")]
		InvalidUserData,
		[Token(Token = "0x40014F4")]
		InvalidAdminToken,
		[Token(Token = "0x40014F5")]
		InvalidAdminServer,
		[Token(Token = "0x40014F6")]
		KickedByAdmin,
		[Token(Token = "0x40014F7")]
		BannedByAdmin,
		[Token(Token = "0x40014F8")]
		InvalidLevel,
		[Token(Token = "0x40014F9")]
		InvalidPing,
		[Token(Token = "0x40014FA")]
		QuickplayNotAllowed,
		[Token(Token = "0x40014FB")]
		InvalidVersion
	}
	[Token(Token = "0x2000380")]
	public class ErrorToken : IProtocolToken
	{
		[Token(Token = "0x17000285")]
		public string HostName
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0xFB56A4", Offset = "0xFB56A4", VA = "0xFB56A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xFB56AC", Offset = "0xFB56AC", VA = "0xFB56AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public string HostRegion
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0xFB56B4", Offset = "0xFB56B4", VA = "0xFB56B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xFB56BC", Offset = "0xFB56BC", VA = "0xFB56BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public Guid SessionID
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xFB56C4", Offset = "0xFB56C4", VA = "0xFB56C4")]
			[CompilerGenerated]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xFB56D0", Offset = "0xFB56D0", VA = "0xFB56D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public ErrorTypes ErrorType
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0xFB56D8", Offset = "0xFB56D8", VA = "0xFB56D8")]
			[CompilerGenerated]
			get
			{
				return default(ErrorTypes);
			}
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xFB56E0", Offset = "0xFB56E0", VA = "0xFB56E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xFB56E8", Offset = "0xFB56E8", VA = "0xFB56E8")]
		public static ErrorToken CreateToken(ErrorTypes error)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xFB50E8", Offset = "0xFB50E8", VA = "0xFB50E8")]
		public string GetErrorMessage()
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xFB5868", Offset = "0xFB5868", VA = "0xFB5868", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xFB58E4", Offset = "0xFB58E4", VA = "0xFB58E4", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xFB5860", Offset = "0xFB5860", VA = "0xFB5860")]
		public ErrorToken()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class HitBoxToken : IProtocolToken
	{
		[Token(Token = "0x2000382")]
		public enum HitboxInfo : byte
		{
			[Token(Token = "0x4001506")]
			IsClientSideHitBox,
			[Token(Token = "0x4001507")]
			IsServerSideHitBox,
			[Token(Token = "0x4001508")]
			IsDeadHitBox
		}

		[Token(Token = "0x17000289")]
		public Vector3 Position
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xFB5944", Offset = "0xFB5944", VA = "0xFB5944")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xFB5950", Offset = "0xFB5950", VA = "0xFB5950")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xFB595C", Offset = "0xFB595C", VA = "0xFB595C")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xFB5968", Offset = "0xFB5968", VA = "0xFB5968")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Vector3 Size
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xFB5974", Offset = "0xFB5974", VA = "0xFB5974")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xFB5980", Offset = "0xFB5980", VA = "0xFB5980")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public int Frame
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xFB598C", Offset = "0xFB598C", VA = "0xFB598C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xFB5994", Offset = "0xFB5994", VA = "0xFB5994")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public HitboxInfo Info
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xFB599C", Offset = "0xFB599C", VA = "0xFB599C")]
			[CompilerGenerated]
			get
			{
				return default(HitboxInfo);
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0xFB59A4", Offset = "0xFB59A4", VA = "0xFB59A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xFB59AC", Offset = "0xFB59AC", VA = "0xFB59AC")]
		public static HitBoxToken CreateToken(Vector3 position, Quaternion rotation, Vector3 size, int frame, HitboxInfo info)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xFB5A88", Offset = "0xFB5A88", VA = "0xFB5A88", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xFB5B90", Offset = "0xFB5B90", VA = "0xFB5B90", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xFB5A80", Offset = "0xFB5A80", VA = "0xFB5A80")]
		public HitBoxToken()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class KillTraceToken : IProtocolToken
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ProjectileTrajectory ProjectileTrajectory;

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xFB5C98", Offset = "0xFB5C98", VA = "0xFB5C98")]
		public static KillTraceToken CreateToken(ProjectileTrajectory trajectory)
		{
			return null;
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xFB5D10", Offset = "0xFB5D10", VA = "0xFB5D10", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xFB5DAC", Offset = "0xFB5DAC", VA = "0xFB5DAC", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xFB5D08", Offset = "0xFB5D08", VA = "0xFB5D08")]
		public KillTraceToken()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public struct LevelRange
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte Min;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte Max;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LevelRange zero;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xFB3560", Offset = "0xFB3560", VA = "0xFB3560")]
		public LevelRange(byte min, byte max)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xFB5E54", Offset = "0xFB5E54", VA = "0xFB5E54")]
		public static bool operator ==(LevelRange lr1, LevelRange lr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xFB5EA0", Offset = "0xFB5EA0", VA = "0xFB5EA0")]
		public static bool operator !=(LevelRange lr1, LevelRange lr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xFB5EC4", Offset = "0xFB5EC4", VA = "0xFB5EC4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xFB5E78", Offset = "0xFB5E78", VA = "0xFB5E78")]
		public bool Equals(LevelRange other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xFB5F48", Offset = "0xFB5F48", VA = "0xFB5F48", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xFB5F84", Offset = "0xFB5F84", VA = "0xFB5F84")]
		public bool InRange(int lvl)
		{
			return default(bool);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xFB6034", Offset = "0xFB6034", VA = "0xFB6034")]
		public bool IsLocalPlayerInRange()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000385")]
	public class NetServerStatus : EntityBehaviour<IServerStatusState>
	{
		[Token(Token = "0x400150D")]
		private const int GoodFramesLimit = 72;

		[Token(Token = "0x400150E")]
		private const int BadFramesLimit = -72;

		[Token(Token = "0x400150F")]
		private const int ErrorFrameMargin = 4;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _updateSwitchCounter;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _simulateSwitchCounter;

		[Token(Token = "0x4001512")]
		private const float TargetFixedDeltaTime = 0.01388889f;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _lasTimeSinceLevelLoad;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _currentFrameRate;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StatusSeverity LowFramerateSeverity;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static StatusSeverity LowFixedUpdateSeverity;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch _fixedUpdateStopwatch;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double Error;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xFB6130", Offset = "0xFB6130", VA = "0xFB6130", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xFB6464", Offset = "0xFB6464", VA = "0xFB6464", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xFB64AC", Offset = "0xFB64AC", VA = "0xFB64AC")]
		private void OnFrameRateSeverityChanged()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xFB6590", Offset = "0xFB6590", VA = "0xFB6590")]
		private void OnFixedUpdateRateSeverityChanged()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xFB6678", Offset = "0xFB6678", VA = "0xFB6678")]
		protected void Update()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xFB6870", Offset = "0xFB6870", VA = "0xFB6870", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xFB6AA8", Offset = "0xFB6AA8", VA = "0xFB6AA8")]
		public NetServerStatus()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public struct ReconnectData
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PreviousSessionID;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Ip;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Port;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Password;
	}
	[Token(Token = "0x2000387")]
	public class SceneToken : IProtocolToken
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Mods;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BotDifficulty BotDifficulty;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ShowHitboxes;

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xFB6B38", Offset = "0xFB6B38", VA = "0xFB6B38")]
		public static SceneToken Create(string mods, BotDifficulty difficulty, bool showHitboxes)
		{
			return null;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xFB6BCC", Offset = "0xFB6BCC", VA = "0xFB6BCC", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xFB6C30", Offset = "0xFB6C30", VA = "0xFB6C30", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xFB6BC4", Offset = "0xFB6BC4", VA = "0xFB6BC4")]
		public SceneToken()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[Flags]
	public enum SessionSpaceFilters
	{
		[Token(Token = "0x4001521")]
		None = 0,
		[Token(Token = "0x4001522")]
		All = -1,
		[Token(Token = "0x4001523")]
		Empty = 1,
		[Token(Token = "0x4001524")]
		SpaceRemaining = 2,
		[Token(Token = "0x4001525")]
		Full = 4
	}
	[Token(Token = "0x2000389")]
	public static class SessionSpaceFiltersExtensions
	{
		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xFB6C80", Offset = "0xFB6C80", VA = "0xFB6C80")]
		public static SessionSpaceFilters GetDefaultFilterFlags()
		{
			return default(SessionSpaceFilters);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xFB6C88", Offset = "0xFB6C88", VA = "0xFB6C88")]
		public static SessionSpaceFilters SetFlag(this SessionSpaceFilters value, SessionSpaceFilters flag, bool enable)
		{
			return default(SessionSpaceFilters);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xFB6C9C", Offset = "0xFB6C9C", VA = "0xFB6C9C")]
		public static SessionSpaceFilters AddFlag(this SessionSpaceFilters value, SessionSpaceFilters flag)
		{
			return default(SessionSpaceFilters);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xFB6CA4", Offset = "0xFB6CA4", VA = "0xFB6CA4")]
		public static SessionSpaceFilters RemoveFlag(this SessionSpaceFilters value, SessionSpaceFilters flag)
		{
			return default(SessionSpaceFilters);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xFB6CAC", Offset = "0xFB6CAC", VA = "0xFB6CAC")]
		public static bool HasFlagFast(this SessionSpaceFilters value, SessionSpaceFilters flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xFB6CB8", Offset = "0xFB6CB8", VA = "0xFB6CB8")]
		public static bool ServerPassesFilter(this SessionSpaceFilters value, ServerBrowser.SessionInfo sessionInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200038A")]
	[Flags]
	public enum SessionStatusFilters
	{
		[Token(Token = "0x4001527")]
		None = 0,
		[Token(Token = "0x4001528")]
		All = -1,
		[Token(Token = "0x4001529")]
		Joinable = 1
	}
	[Token(Token = "0x200038B")]
	public static class SessionStatusFiltersExtensions
	{
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xFB6D10", Offset = "0xFB6D10", VA = "0xFB6D10")]
		public static SessionStatusFilters GetDefaultFilterFlags()
		{
			return default(SessionStatusFilters);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xFB6D20", Offset = "0xFB6D20", VA = "0xFB6D20")]
		public static SessionStatusFilters SetFlag(this SessionStatusFilters value, SessionStatusFilters flag, bool enable)
		{
			return default(SessionStatusFilters);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xFB6D34", Offset = "0xFB6D34", VA = "0xFB6D34")]
		public static SessionStatusFilters AddFlag(this SessionStatusFilters value, SessionStatusFilters flag)
		{
			return default(SessionStatusFilters);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xFB6D18", Offset = "0xFB6D18", VA = "0xFB6D18")]
		public static SessionStatusFilters RemoveFlag(this SessionStatusFilters value, SessionStatusFilters flag)
		{
			return default(SessionStatusFilters);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xFB6D3C", Offset = "0xFB6D3C", VA = "0xFB6D3C")]
		public static bool HasFlagFast(this SessionStatusFilters value, SessionStatusFilters flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xFB6D48", Offset = "0xFB6D48", VA = "0xFB6D48")]
		public static bool ServerPassesFilter(this SessionStatusFilters value, ServerBrowser.SessionInfo sessionInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200038C")]
	public enum ServerState
	{
		[Token(Token = "0x400152B")]
		None,
		[Token(Token = "0x400152C")]
		Lobby,
		[Token(Token = "0x400152D")]
		InProgress
	}
	[Token(Token = "0x200038D")]
	public class SinglePlayerBoltController : BoltController
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _shutdownFinishedCallback;

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xFB6D7C", Offset = "0xFB6D7C", VA = "0xFB6D7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xFB6D80", Offset = "0xFB6D80", VA = "0xFB6D80")]
		private void StartBolt()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xFB6EA0", Offset = "0xFB6EA0", VA = "0xFB6EA0", Slot = "13")]
		public override void BoltStartDone()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xFB721C", Offset = "0xFB721C", VA = "0xFB721C", Slot = "151")]
		public override void ShutDown([Optional] Action callback)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xFB72D8", Offset = "0xFB72D8", VA = "0xFB72D8", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xFB72E0", Offset = "0xFB72E0", VA = "0xFB72E0", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xFB735C", Offset = "0xFB735C", VA = "0xFB735C", Slot = "152")]
		protected override void OnBoltShutdownFinished()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xFB74C8", Offset = "0xFB74C8", VA = "0xFB74C8")]
		public SinglePlayerBoltController()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public enum ClientType
	{
		[Token(Token = "0x4001530")]
		Player,
		[Token(Token = "0x4001531")]
		Spectator
	}
	[Token(Token = "0x200038F")]
	public class UserToken : IProtocolToken
	{
		[NonSerialized]
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool IsDataValid;

		[Token(Token = "0x1700028E")]
		public string ApiPlayerId
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xFB74D0", Offset = "0xFB74D0", VA = "0xFB74D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xFB74D8", Offset = "0xFB74D8", VA = "0xFB74D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public string UnityID
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xFB74E0", Offset = "0xFB74E0", VA = "0xFB74E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xFB74E8", Offset = "0xFB74E8", VA = "0xFB74E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public string Clan
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xFB74F0", Offset = "0xFB74F0", VA = "0xFB74F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xFB74F8", Offset = "0xFB74F8", VA = "0xFB74F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public string Username
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0xFB7500", Offset = "0xFB7500", VA = "0xFB7500")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xFB7508", Offset = "0xFB7508", VA = "0xFB7508")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public int Level
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xFB7510", Offset = "0xFB7510", VA = "0xFB7510")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xFB7518", Offset = "0xFB7518", VA = "0xFB7518")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public string DeviceUID
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xFB7520", Offset = "0xFB7520", VA = "0xFB7520")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xFB7528", Offset = "0xFB7528", VA = "0xFB7528")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public string AssignedDeviceName
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xFB7530", Offset = "0xFB7530", VA = "0xFB7530")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xFB7538", Offset = "0xFB7538", VA = "0xFB7538")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public ClientType ClientType
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xFB7540", Offset = "0xFB7540", VA = "0xFB7540")]
			[CompilerGenerated]
			get
			{
				return default(ClientType);
			}
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xFB7548", Offset = "0xFB7548", VA = "0xFB7548")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public Guid SessionID
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xFB7550", Offset = "0xFB7550", VA = "0xFB7550")]
			[CompilerGenerated]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xFB7560", Offset = "0xFB7560", VA = "0xFB7560")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public string ServerName
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xFB756C", Offset = "0xFB756C", VA = "0xFB756C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xFB7574", Offset = "0xFB7574", VA = "0xFB7574")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public string ServerRegion
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xFB757C", Offset = "0xFB757C", VA = "0xFB757C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xFB7584", Offset = "0xFB7584", VA = "0xFB7584")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public int ServerPing
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xFB758C", Offset = "0xFB758C", VA = "0xFB758C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xFB7594", Offset = "0xFB7594", VA = "0xFB7594")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public string Password
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xFB759C", Offset = "0xFB759C", VA = "0xFB759C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xFB75A4", Offset = "0xFB75A4", VA = "0xFB75A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public VoiceChannelType VoiceChannel
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xFB75AC", Offset = "0xFB75AC", VA = "0xFB75AC")]
			[CompilerGenerated]
			get
			{
				return default(VoiceChannelType);
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xFB75B4", Offset = "0xFB75B4", VA = "0xFB75B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool BHapticsEnabled
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xFB75BC", Offset = "0xFB75BC", VA = "0xFB75BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0xFB75C4", Offset = "0xFB75C4", VA = "0xFB75C4")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public bool HasBoughtTheGame
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xFB75D0", Offset = "0xFB75D0", VA = "0xFB75D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xFB75D8", Offset = "0xFB75D8", VA = "0xFB75D8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public string UserDataHash
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xFB75E4", Offset = "0xFB75E4", VA = "0xFB75E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xFB75EC", Offset = "0xFB75EC", VA = "0xFB75EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public Appearance Appearance
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xFB75F4", Offset = "0xFB75F4", VA = "0xFB75F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xFB75FC", Offset = "0xFB75FC", VA = "0xFB75FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public AdminJoinToken AdminJoinToken
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xFB7604", Offset = "0xFB7604", VA = "0xFB7604")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xFB760C", Offset = "0xFB760C", VA = "0xFB760C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool JoinedViaQuickplay
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0xFB7614", Offset = "0xFB7614", VA = "0xFB7614")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xFB761C", Offset = "0xFB761C", VA = "0xFB761C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public StoreApi Store
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xFB7628", Offset = "0xFB7628", VA = "0xFB7628")]
			[CompilerGenerated]
			get
			{
				return default(StoreApi);
			}
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xFB7630", Offset = "0xFB7630", VA = "0xFB7630")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public string StoreId
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xFB7638", Offset = "0xFB7638", VA = "0xFB7638")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0xFB7640", Offset = "0xFB7640", VA = "0xFB7640")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public int Version
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xFB7648", Offset = "0xFB7648", VA = "0xFB7648")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xFB7650", Offset = "0xFB7650", VA = "0xFB7650")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xFB7658", Offset = "0xFB7658", VA = "0xFB7658")]
		public static UserToken CreatePlayerToken(string apiPlayerId, string unityID, string clan, string username, int level, string password, ServerBrowser.SessionInfo sessionInfo, VoiceChannelType voiceChannel, bool BhapticsEnabled, Appearance appearance, string hash, bool joinedViaQuickPlay, StoreApi store, string storeId, bool hasBoughtTheGame)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xFB79A0", Offset = "0xFB79A0", VA = "0xFB79A0")]
		public static UserToken CreateSpectatorToken(string apiPlayerId, string unityID, string clan, string username, int level, string password, ServerBrowser.SessionInfo sessionInfo, Appearance appearance, string hash, bool joinedViaQuickPlay, StoreApi store, string storeId, bool hasBoughtTheGame)
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xFB7C78", Offset = "0xFB7C78", VA = "0xFB7C78", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xFB8B48", Offset = "0xFB8B48", VA = "0xFB8B48", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xFB7940", Offset = "0xFB7940", VA = "0xFB7940")]
		public UserToken()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class ReconnectAfterServerReboot : MonoBehaviour
	{
		[Token(Token = "0x400154A")]
		private const string _mainMenuScene = "MainMenu";

		[Token(Token = "0x400154B")]
		private const float _timeOut = 120f;

		[Token(Token = "0x170002A5")]
		public float TimeLeft
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xFB8CCC", Offset = "0xFB8CCC", VA = "0xFB8CCC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xFB8CD4", Offset = "0xFB8CD4", VA = "0xFB8CD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public string Status
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xFB8CDC", Offset = "0xFB8CDC", VA = "0xFB8CDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xFB8CE4", Offset = "0xFB8CE4", VA = "0xFB8CE4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public bool IsConnecting
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xFB8CEC", Offset = "0xFB8CEC", VA = "0xFB8CEC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xFB8CF4", Offset = "0xFB8CF4", VA = "0xFB8CF4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xFB8D00", Offset = "0xFB8D00", VA = "0xFB8D00")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xFB9314", Offset = "0xFB9314", VA = "0xFB9314")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xFB9544", Offset = "0xFB9544", VA = "0xFB9544")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xFB96C4", Offset = "0xFB96C4", VA = "0xFB96C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xFB8FE8", Offset = "0xFB8FE8", VA = "0xFB8FE8")]
		private void OnServerListUpdated(ServerBrowser serverBrowser, List<ServerBrowser.SessionInfo> servers)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xFB9D00", Offset = "0xFB9D00", VA = "0xFB9D00")]
		private void JoinViaReconnectCallback(bool succes, string errorMessage)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xFB9EB8", Offset = "0xFB9EB8", VA = "0xFB9EB8")]
		public void GotoMainMenu()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xFB9F88", Offset = "0xFB9F88", VA = "0xFB9F88")]
		public ReconnectAfterServerReboot()
		{
		}
	}
	[Token(Token = "0x2000391")]
	[Flags]
	public enum Sorting
	{
		[Token(Token = "0x4001550")]
		PingAsc = 1,
		[Token(Token = "0x4001551")]
		LevelDistanceAsc = 4,
		[Token(Token = "0x4001552")]
		PlayerCountAsc = 0x10,
		[Token(Token = "0x4001553")]
		PlayerCountDesc = 0x20,
		[Token(Token = "0x4001554")]
		AnyPlayerCount = 0x30,
		[Token(Token = "0x4001555")]
		NameAsc = 0x40,
		[Token(Token = "0x4001556")]
		NameDesc = 0x80,
		[Token(Token = "0x4001557")]
		AnyName = 0xC0,
		[Token(Token = "0x4001558")]
		Default = 0x45
	}
	[Token(Token = "0x2000392")]
	public static class SortingExtensions
	{
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xFB9F90", Offset = "0xFB9F90", VA = "0xFB9F90")]
		public static Sorting SetFlag(this Sorting value, Sorting flag, bool enable)
		{
			return default(Sorting);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xFB9FA4", Offset = "0xFB9FA4", VA = "0xFB9FA4")]
		public static Sorting AddFlag(this Sorting value, Sorting flag)
		{
			return default(Sorting);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xFB9FAC", Offset = "0xFB9FAC", VA = "0xFB9FAC")]
		public static Sorting RemoveFlag(this Sorting value, Sorting flag)
		{
			return default(Sorting);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xFB9FB4", Offset = "0xFB9FB4", VA = "0xFB9FB4")]
		public static bool HasFlagFast(this Sorting value, Sorting flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xFB9FC0", Offset = "0xFB9FC0", VA = "0xFB9FC0")]
		public static bool HasAnyFlagFast(this Sorting value, Sorting flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000393")]
	[DefaultExecutionOrder(-1)]
	public class ServerBrowser : GlobalEventListener
	{
		[Serializable]
		[Token(Token = "0x2000394")]
		public class SessionInfo
		{
			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Weight;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float PlayerWeight;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float PingWeight;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float LevelWeight;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int CurrentClientPing;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int MaxAllowedPing;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string ServerName;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string OriginalServerName;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string IP;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string Port;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public PhotonSession Session;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int PlayerCount;

			[NonSerialized]
			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool IsStale;

			[NonSerialized]
			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
			public bool DoesntPassFilters;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public MatchTypes GameMode;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string MapSceneName;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public RuntimeMapData MapData;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool IsCorrectVersion;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int Version;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public bool HasJoinFailed;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string Region;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public string RegionPrettyString;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public SessionInfoFlags InfoFlags;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public LevelRange LevelLock;

			[Token(Token = "0x170002AC")]
			public bool HasPassword
			{
				[Token(Token = "0x6001630")]
				[Address(RVA = "0xFBDE20", Offset = "0xFBDE20", VA = "0xFBDE20")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0xFBDE2C", Offset = "0xFBDE2C", VA = "0xFBDE2C")]
			public SessionInfo(PhotonSession session)
			{
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0xFBE374", Offset = "0xFBE374", VA = "0xFBE374")]
			public SessionInfo()
			{
			}

			[Token(Token = "0x6001633")]
			[Address(RVA = "0xFBDE58", Offset = "0xFBDE58", VA = "0xFBDE58")]
			public void Update(PhotonSession session)
			{
			}

			[Token(Token = "0x6001634")]
			[Address(RVA = "0xFBE37C", Offset = "0xFBE37C", VA = "0xFBE37C")]
			public bool IsJoinable()
			{
				return default(bool);
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0xFBE3B0", Offset = "0xFBE3B0", VA = "0xFBE3B0")]
			public bool IsSpecialAndJoinable()
			{
				return default(bool);
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0xFBE3F8", Offset = "0xFBE3F8", VA = "0xFBE3F8")]
			public int GroupedPlayerCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0xFBE420", Offset = "0xFBE420", VA = "0xFBE420")]
			public static bool IsEqual(SessionInfo a, SessionInfo b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0xFBE494", Offset = "0xFBE494", VA = "0xFBE494")]
			public float GetAveragePlayerLevelDifference(int ownLevel)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000395")]
		public struct RegionInfo
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Ip;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string RegionPrettyString;
		}

		[Token(Token = "0x2000396")]
		public enum States
		{
			[Token(Token = "0x400158E")]
			Idle,
			[Token(Token = "0x400158F")]
			QuickplayInProgress,
			[Token(Token = "0x4001590")]
			CreateGameInProgress
		}

		[Token(Token = "0x2000398")]
		[CompilerGenerated]
		private sealed class <PingRoutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerBrowser <>4__this;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <allDone>5__2;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600163E")]
				[Address(RVA = "0xFBEC20", Offset = "0xFBEC20", VA = "0xFBEC20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001640")]
				[Address(RVA = "0xFBEC68", Offset = "0xFBEC68", VA = "0xFBEC68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xFBE69C", Offset = "0xFBE69C", VA = "0xFBE69C")]
			[DebuggerHidden]
			public <PingRoutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0xFBE6C4", Offset = "0xFBE6C4", VA = "0xFBE6C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600163D")]
			[Address(RVA = "0xFBE6C8", Offset = "0xFBE6C8", VA = "0xFBE6C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600163F")]
			[Address(RVA = "0xFBEC28", Offset = "0xFBEC28", VA = "0xFBEC28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<ulong, SessionInfo> _friendLookup;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action<bool, string> _joinSessionCallback;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _allowPingServers;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _sessionListTimestamp;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string QuickJoinStatus;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _quickJoinEnabled;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _quickJoinDebug;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _firstPingSort;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _filter;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, RegionInfo> CustomGameRegions;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<SessionInfo> _latestSessionList;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<SessionInfo> _serverBrowserSessionList;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<SessionInfo> _serverBrowserSessionListFiltered;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool QuickJoinOverride;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Sorting _activeSort;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, int> _pingLookup;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<string> _IPsToPing;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Ping> _pings;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine _pingRoutine;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public States State;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<SessionInfo> _specialBoosts;

		[Token(Token = "0x170002A8")]
		public bool IsJoining
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xFBA27C", Offset = "0xFBA27C", VA = "0xFBA27C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xFBA284", Offset = "0xFBA284", VA = "0xFBA284")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public static ServerBrowser Instance
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xFBA290", Offset = "0xFBA290", VA = "0xFBA290")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001608")]
			[Address(RVA = "0xFBA2E8", Offset = "0xFBA2E8", VA = "0xFBA2E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public List<SessionInfo> LatestSessions
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xFBA348", Offset = "0xFBA348", VA = "0xFBA348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public bool ServerListRetrieved
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xFBA350", Offset = "0xFBA350", VA = "0xFBA350")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xFBA358", Offset = "0xFBA358", VA = "0xFBA358")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<ServerBrowser, List<SessionInfo>> ServerListUpdatedEvent
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xFB8F38", Offset = "0xFB8F38", VA = "0xFB8F38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xFB9494", Offset = "0xFB9494", VA = "0xFB9494")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event Action<Dictionary<string, RegionInfo>> CustomGameRegionsUpdatedEvent
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xFBA09C", Offset = "0xFBA09C", VA = "0xFBA09C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xFBA18C", Offset = "0xFBA18C", VA = "0xFBA18C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xFB9FCC", Offset = "0xFB9FCC", VA = "0xFB9FCC")]
		private bool TryGetIdArray(PhotonSession session, string key, out ulong[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xFBA364", Offset = "0xFBA364", VA = "0xFBA364")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xFB97D0", Offset = "0xFB97D0", VA = "0xFB97D0")]
		public void JoinSession(SessionInfo sessionInfo, [Optional] string password, [Optional] Action<bool, string> callback, [Optional] AdminJoinToken profile, bool joinedViaQuickplay = false)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xFBA508", Offset = "0xFBA508", VA = "0xFBA508")]
		public UdpSession GetSessionForIpPort(string ip, string port)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xFBA5DC", Offset = "0xFBA5DC", VA = "0xFBA5DC")]
		public PhotonSession GetSessionForCreateServer(string region)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xFBA6E4", Offset = "0xFBA6E4", VA = "0xFBA6E4")]
		private void MarkJoinFailed(Guid sessionID)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xFBA84C", Offset = "0xFBA84C", VA = "0xFBA84C", Slot = "37")]
		public override void SessionConnectFailed(UdpSession session, IProtocolToken token, UdpSessionError errorReason)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xFBAB3C", Offset = "0xFBAB3C", VA = "0xFBAB3C", Slot = "23")]
		public override void ConnectFailed(UdpEndPoint endpoint, IProtocolToken token)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xFBADE0", Offset = "0xFBADE0", VA = "0xFBADE0", Slot = "25")]
		public override void ConnectRefused(UdpEndPoint endpoint, IProtocolToken token)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xFBB108", Offset = "0xFBB108", VA = "0xFBB108", Slot = "22")]
		public override void Connected(BoltConnection connection)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xFBB310", Offset = "0xFBB310", VA = "0xFBB310", Slot = "35")]
		public override void SessionListUpdated(Map<Guid, UdpSession> sessionMap)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xFBC178", Offset = "0xFBC178", VA = "0xFBC178")]
		public static bool IsInServer(string ip, string port)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xFBBB48", Offset = "0xFBBB48", VA = "0xFBBB48")]
		public void RefreshServerBrowserList()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xFBBF2C", Offset = "0xFBBF2C", VA = "0xFBBF2C")]
		public void AutoJoin()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xFBC4F8", Offset = "0xFBC4F8", VA = "0xFBC4F8")]
		private void ResetAutoJoinVars()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xFBC2FC", Offset = "0xFBC2FC", VA = "0xFBC2FC")]
		private void SortServerBrowserSessions()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xFBC660", Offset = "0xFBC660", VA = "0xFBC660")]
		public int DefaultSort(SessionInfo a, SessionInfo b)
		{
			return default(int);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xFBC9F4", Offset = "0xFBC9F4", VA = "0xFBC9F4")]
		public int SortByFlags(SessionInfo a, SessionInfo b)
		{
			return default(int);
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xFBCC34", Offset = "0xFBCC34", VA = "0xFBCC34")]
		public void SetSort(Sorting sorting, bool isOn)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xFBBBE8", Offset = "0xFBBBE8", VA = "0xFBBBE8")]
		public void FilterServerBrowserSessionsAndPresent(bool forceNewList)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xFBCCC4", Offset = "0xFBCCC4", VA = "0xFBCCC4")]
		private bool PassesFilters(SessionInfo session)
		{
			return default(bool);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xFBCE68", Offset = "0xFBCE68", VA = "0xFBCE68")]
		public void SetFilterString(string value)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xFBBDCC", Offset = "0xFBBDCC", VA = "0xFBBDCC")]
		public void InvokeServerListUpdatedEvent()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xFBCE88", Offset = "0xFBCE88", VA = "0xFBCE88")]
		public void RefreshListAfterPingsAreDone()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xFBC5CC", Offset = "0xFBC5CC", VA = "0xFBC5CC")]
		public int PingLookup(string ip)
		{
			return default(int);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xFBA3FC", Offset = "0xFBA3FC", VA = "0xFBA3FC")]
		public void StopPingLoop()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xFBBEE4", Offset = "0xFBBEE4", VA = "0xFBBEE4")]
		public void StartPing()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xFBD2EC", Offset = "0xFBD2EC", VA = "0xFBD2EC")]
		[IteratorStateMachine(typeof(<PingRoutine>d__68))]
		private IEnumerator PingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xFBD360", Offset = "0xFBD360", VA = "0xFBD360")]
		public void ChangeState(States newState)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xFBC474", Offset = "0xFBC474", VA = "0xFBC474")]
		public void StartQuickJoin()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xFBD368", Offset = "0xFBD368", VA = "0xFBD368")]
		private void QuickPlaySort()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xFBCF58", Offset = "0xFBCF58", VA = "0xFBCF58")]
		private void QuickJoinPingsAreDone()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xFBD8D8", Offset = "0xFBD8D8", VA = "0xFBD8D8")]
		public void JoinViaQuickPlayCallback(bool succes, string errorMessage)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xFBD9D8", Offset = "0xFBD9D8", VA = "0xFBD9D8")]
		public void StopQuickJoin()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xFBDA28", Offset = "0xFBDA28", VA = "0xFBDA28")]
		public ServerBrowser()
		{
		}
	}
}
namespace HyperDash.Networking.Deployments
{
	[Token(Token = "0x2000399")]
	public static class DeploymentUtils
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xFBEC70", Offset = "0xFBEC70", VA = "0xFBEC70")]
		public static string GetAutoServerIP()
		{
			return null;
		}
	}
}
namespace HyperDash.Loca
{
	[Serializable]
	[Token(Token = "0x200039A")]
	public static class Localization
	{
		[Token(Token = "0x200039B")]
		public class LanguageChangedArgs
		{
			[Token(Token = "0x170002B1")]
			public string NewLanguage
			{
				[Token(Token = "0x6001655")]
				[Address(RVA = "0xFC0E88", Offset = "0xFC0E88", VA = "0xFC0E88")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001656")]
				[Address(RVA = "0xFC0E90", Offset = "0xFC0E90", VA = "0xFC0E90")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001657")]
			[Address(RVA = "0xFBFD9C", Offset = "0xFBFD9C", VA = "0xFBFD9C")]
			public LanguageChangedArgs(string newL)
			{
			}
		}

		[Token(Token = "0x200039C")]
		public delegate void LanguageChangedDelegate(LanguageChangedArgs eventArgs);

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, string> LookupTable;

		[Token(Token = "0x4001598")]
		private const string LocaVersionKey = "LOCA_VERSION";

		[Token(Token = "0x4001599")]
		public const string LanguageKey = "LANGUAGE";

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] LanguageCodes;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string[] Languages;

		[Token(Token = "0x170002AF")]
		public static int Version
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0xFBEFE8", Offset = "0xFBEFE8", VA = "0xFBEFE8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001644")]
			[Address(RVA = "0xFBF040", Offset = "0xFBF040", VA = "0xFBF040")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public static string ActiveLanguage
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0xFBF09C", Offset = "0xFBF09C", VA = "0xFBF09C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xFBF0F4", Offset = "0xFBF0F4", VA = "0xFBF0F4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event LanguageChangedDelegate LanguageChangedEvent
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xFBF154", Offset = "0xFBF154", VA = "0xFBF154")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xFBF230", Offset = "0xFBF230", VA = "0xFBF230")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xFBEE9C", Offset = "0xFBEE9C", VA = "0xFBEE9C")]
		private static string GetSystemLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xFBF30C", Offset = "0xFBF30C", VA = "0xFBF30C")]
		private static void OnLanguageChanged(LanguageChangedArgs eventArgs)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xFBF388", Offset = "0xFBF388", VA = "0xFBF388")]
		public static string GetLocaFormatString(string key, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xFBF678", Offset = "0xFBF678", VA = "0xFBF678")]
		public static string GetLocaFormatString(string key, object arg0)
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xFBF56C", Offset = "0xFBF56C", VA = "0xFBF56C")]
		public static string GetLocalizedString(string key)
		{
			return null;
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xFBF7AC", Offset = "0xFBF7AC", VA = "0xFBF7AC")]
		public static bool HasLocaKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xFBF4BC", Offset = "0xFBF4BC", VA = "0xFBF4BC")]
		private static void CheckActiveLanguage()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xFBF850", Offset = "0xFBF850", VA = "0xFBF850")]
		public static void LoadSystemOrSavedLanguage()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xFBF94C", Offset = "0xFBF94C", VA = "0xFBF94C")]
		public static void LoadLanguage(string languageCode)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xFBF9CC", Offset = "0xFBF9CC", VA = "0xFBF9CC")]
		private static LocalizationData LoadFromResources(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xFBFB24", Offset = "0xFBFB24", VA = "0xFBFB24")]
		private static void FillLookUpTable(LocalizationData locaData)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xFBFDCC", Offset = "0xFBFDCC", VA = "0xFBFDCC")]
		public static void OnUpdate(LocalizationResponse dataLocalization)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class LocalizationData
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LocalizationPair> Localization;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LanguageCode;

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xFC1014", Offset = "0xFC1014", VA = "0xFC1014")]
		public LocalizationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039E")]
	public class LocalizationPair
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xFC10C0", Offset = "0xFC10C0", VA = "0xFC10C0")]
		public LocalizationPair()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class LocaText : MonoBehaviour
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _localizationKey;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _preText;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _postText;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object[] _args;

		[Token(Token = "0x170002B2")]
		protected TMP_Text Text
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xFC10C8", Offset = "0xFC10C8", VA = "0xFC10C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xFC10D0", Offset = "0xFC10D0", VA = "0xFC10D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		protected string LocalizationKey
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xFC10D8", Offset = "0xFC10D8", VA = "0xFC10D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xFC10E0", Offset = "0xFC10E0", VA = "0xFC10E0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xFC117C", Offset = "0xFC117C", VA = "0xFC117C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xFC12B0", Offset = "0xFC12B0", VA = "0xFC12B0")]
		private void LanguageChanged(Localization.LanguageChangedArgs eventArgs)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xFC12BC", Offset = "0xFC12BC", VA = "0xFC12BC", Slot = "5")]
		protected virtual void SetText()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xFC1370", Offset = "0xFC1370", VA = "0xFC1370")]
		public void SetLocalizationkey(string locaKey)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xFC1414", Offset = "0xFC1414", VA = "0xFC1414", Slot = "6")]
		public virtual void SetArguments(params object[] args)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xFC14B8", Offset = "0xFC14B8", VA = "0xFC14B8")]
		public LocaText()
		{
		}
	}
}
namespace HyperDash.Hud
{
	[Token(Token = "0x20003A0")]
	[DefaultExecutionOrder(10000001)]
	public class CriticalDamageHud : MonoBehaviour
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _criticalDamage;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Audio")]
		private AudioSource _audioSource;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _positionOffset;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xFC14C0", Offset = "0xFC14C0", VA = "0xFC14C0")]
		public void SetHp(float hp)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xFC1554", Offset = "0xFC1554", VA = "0xFC1554")]
		public void Show()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xFC159C", Offset = "0xFC159C", VA = "0xFC159C")]
		public void Hide()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xFC1678", Offset = "0xFC1678", VA = "0xFC1678")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xFC15CC", Offset = "0xFC15CC", VA = "0xFC15CC")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xFC1718", Offset = "0xFC1718", VA = "0xFC1718")]
		public CriticalDamageHud()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class GameEndCountdown : MonoBehaviour
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _returningText;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float MessageEndTime;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _time;

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xFC1720", Offset = "0xFC1720", VA = "0xFC1720")]
		protected void Update()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xFC18AC", Offset = "0xFC18AC", VA = "0xFC18AC")]
		public GameEndCountdown()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[DefaultExecutionOrder(10000001)]
	public class GameEndHud : MonoBehaviour
	{
		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup _levelingFrame;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameEndCountdown _countdown;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _teamWinsText;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text[] _xpDropsText;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float[] _xpDropsScale;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color[] _xpDropsColor;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text _currentLevelText;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text _nextLevelText;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image _xpBarImage;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _flareRectTransform;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _flareImage;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CanvasGroup[] _unlockDropGroup;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text[] _unlockDropTitle;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text[] _unlockDropMessage;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text _messageText;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _teamRedFlare;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _teamBlueFlare;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _xpBar;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _expirationTime;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _xpDropIndex;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _unlockDropIndex;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentLevel;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _showServerTime;

		[Token(Token = "0x40015C9")]
		private const float StepDurationMax = 1.6f;

		[Token(Token = "0x40015CA")]
		private const float _initialXpDelay = 3f;

		[Token(Token = "0x40015CB")]
		private const float _xpDropDelay = 2f;

		[Token(Token = "0x40015CC")]
		private const float _unlockDropDelay = 1f;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _positionOffset;

		[Token(Token = "0x170002B4")]
		public bool IsVisible
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xFC18B4", Offset = "0xFC18B4", VA = "0xFC18B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xFC18D0", Offset = "0xFC18D0", VA = "0xFC18D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xFC1A1C", Offset = "0xFC1A1C", VA = "0xFC1A1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xFC1A20", Offset = "0xFC1A20", VA = "0xFC1A20")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xFC1ADC", Offset = "0xFC1ADC", VA = "0xFC1ADC")]
		private void ShowInit(float expirationTime)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xFC1BF0", Offset = "0xFC1BF0", VA = "0xFC1BF0")]
		public void Show(Teams winner, float expirationTime)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xFC22A8", Offset = "0xFC22A8", VA = "0xFC22A8")]
		public void Show(int winner1, int winner2, int winner3, float expirationTime)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xFC1DE4", Offset = "0xFC1DE4", VA = "0xFC1DE4")]
		private void HandleUserResponse()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xFC24D8", Offset = "0xFC24D8", VA = "0xFC24D8")]
		public void OnGameEndError(string error)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xFC2590", Offset = "0xFC2590", VA = "0xFC2590")]
		public void OnGameEndXpDrop(PlayerProgressionResponse response)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xFC1908", Offset = "0xFC1908", VA = "0xFC1908")]
		public void Hide()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xFC278C", Offset = "0xFC278C", VA = "0xFC278C")]
		private void AnimateProgressionReward(PlayerProgressionResponse data, float duration)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xFC2DC4", Offset = "0xFC2DC4", VA = "0xFC2DC4")]
		private void AnimateXpDrop(PlayerXpResponse reward, float stepDuration)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xFC3140", Offset = "0xFC3140", VA = "0xFC3140")]
		private void AnimateXpBar(float amount, float duration)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xFC34C8", Offset = "0xFC34C8", VA = "0xFC34C8")]
		private void AnimateUnlock(string skin, float stepDuration)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xFC3AC8", Offset = "0xFC3AC8", VA = "0xFC3AC8")]
		private void AnimateLevel(int level)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xFC3B4C", Offset = "0xFC3B4C", VA = "0xFC3B4C")]
		public GameEndHud()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[BoltGlobalBehaviour]
	public class HudCallbacks : GlobalEventListener
	{
		[Token(Token = "0x20003AA")]
		private struct KillQueueData
		{
			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public HudMessage HudMessage;

			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Killstreak;
		}

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerHud _hud;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isDirty;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _delayTimer;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<KillQueueData> _streakQueue;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xFC3F2C", Offset = "0xFC3F2C", VA = "0xFC3F2C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xFC3FA4", Offset = "0xFC3FA4", VA = "0xFC3FA4", Slot = "104")]
		public override void OnEvent(PlayerKilledEvent evnt)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xFC4AA8", Offset = "0xFC4AA8", VA = "0xFC4AA8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xFC434C", Offset = "0xFC434C", VA = "0xFC434C")]
		private HudRespawnMessage KilledSelfMessage(NetCharacterBehaviour localPlayer)
		{
			return null;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xFC4504", Offset = "0xFC4504", VA = "0xFC4504")]
		private HudRespawnMessage KilledByMessage(NetCharacterBehaviour localPlayer, int otherPlayerID, WeaponTypes weaponType, bool isHeadshot, bool isAltfire)
		{
			return null;
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xFC48A0", Offset = "0xFC48A0", VA = "0xFC48A0")]
		private HudMessage KilledPlayerMessage(int playerID, int currentKillStreak)
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xFC4DE0", Offset = "0xFC4DE0", VA = "0xFC4DE0", Slot = "109")]
		public override void OnEvent(CameraFadeToBlack evnt)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xFC4E8C", Offset = "0xFC4E8C", VA = "0xFC4E8C", Slot = "107")]
		public override void OnEvent(CameraForceBlack evnt)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xFC4F34", Offset = "0xFC4F34", VA = "0xFC4F34", Slot = "108")]
		public override void OnEvent(CameraFadeFromBlack evnt)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xFC512C", Offset = "0xFC512C", VA = "0xFC512C", Slot = "114")]
		public override void OnEvent(HudMessageEvent evnt)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xFC5610", Offset = "0xFC5610", VA = "0xFC5610", Slot = "138")]
		public override void OnEvent(HudMessagePriorityEvent evnt)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xFC5B08", Offset = "0xFC5B08", VA = "0xFC5B08", Slot = "137")]
		public override void OnEvent(HudCountdownMessageEvent evnt)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xFC61C4", Offset = "0xFC61C4", VA = "0xFC61C4", Slot = "122")]
		public override void OnEvent(GameEndMessageEvent evnt)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xFC6320", Offset = "0xFC6320", VA = "0xFC6320", Slot = "124")]
		public override void OnEvent(GameEndXpDropEvent evnt)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xFC67A8", Offset = "0xFC67A8", VA = "0xFC67A8", Slot = "135")]
		public override void OnEvent(GameEndResponseEvent evnt)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xFC681C", Offset = "0xFC681C", VA = "0xFC681C", Slot = "106")]
		public override void OnEvent(HitEvent evnt)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xFC6C58", Offset = "0xFC6C58", VA = "0xFC6C58", Slot = "113")]
		public override void OnEvent(KillTraceEvent evnt)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xFC6DDC", Offset = "0xFC6DDC", VA = "0xFC6DDC", Slot = "119")]
		public override void OnEvent(CameraOverlay evnt)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xFC6FCC", Offset = "0xFC6FCC", VA = "0xFC6FCC", Slot = "36")]
		public override void SessionConnected(UdpSession session, IProtocolToken token)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xFC7058", Offset = "0xFC7058", VA = "0xFC7058", Slot = "140")]
		public override void OnEvent(HudVersusEvent evnt)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xFC712C", Offset = "0xFC712C", VA = "0xFC712C")]
		public HudCallbacks()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class HudCountdownMessage : HudMessage
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _time;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _roundUp;

		[Token(Token = "0x170002B5")]
		public override string Line1
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xFC71B8", Offset = "0xFC71B8", VA = "0xFC71B8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		public override string Line2
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xFC723C", Offset = "0xFC723C", VA = "0xFC723C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xFC60AC", Offset = "0xFC60AC", VA = "0xFC60AC")]
		public HudCountdownMessage(string title, string line1, string line2, float expirationTime, int priority = 0, bool roundUp = false)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xFC72C0", Offset = "0xFC72C0", VA = "0xFC72C0", Slot = "8")]
		protected override void UpdateImplementation()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class HudMessage
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _title;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string _line1;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Color _colorLine1;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string _line2;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float _expirationTime;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int _priority;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isDirty;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _lastUpdateFrame;

		[Token(Token = "0x170002B7")]
		public bool IsDirty
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xFC73F8", Offset = "0xFC73F8", VA = "0xFC73F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xFC73E0", Offset = "0xFC73E0", VA = "0xFC73E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public bool IsDirtyLine2
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xFC7400", Offset = "0xFC7400", VA = "0xFC7400")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xFC7408", Offset = "0xFC7408", VA = "0xFC7408")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public virtual string Title
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xFC7414", Offset = "0xFC7414", VA = "0xFC7414", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public virtual string Line1
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xFC741C", Offset = "0xFC741C", VA = "0xFC741C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public virtual string Line2
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xFC7424", Offset = "0xFC7424", VA = "0xFC7424", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public virtual bool HasExpired
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xFC742C", Offset = "0xFC742C", VA = "0xFC742C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BD")]
		public int Priority
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xFC74BC", Offset = "0xFC74BC", VA = "0xFC74BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BE")]
		public Color ColorLine1
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xFC74C4", Offset = "0xFC74C4", VA = "0xFC74C4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xFC74D0", Offset = "0xFC74D0", VA = "0xFC74D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public MessageAnimation Animation
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xFC74DC", Offset = "0xFC74DC", VA = "0xFC74DC")]
			[CompilerGenerated]
			get
			{
				return default(MessageAnimation);
			}
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xFC74E4", Offset = "0xFC74E4", VA = "0xFC74E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public bool HasLine2
		{
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xFC74EC", Offset = "0xFC74EC", VA = "0xFC74EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xFC4D40", Offset = "0xFC4D40", VA = "0xFC4D40")]
		public HudMessage(string title, string line1, string line2, float expirationTime, int priority = 0, MessageAnimation animation = MessageAnimation.None)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xFC750C", Offset = "0xFC750C", VA = "0xFC750C")]
		public void Update()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xFC755C", Offset = "0xFC755C", VA = "0xFC755C", Slot = "8")]
		protected virtual void UpdateImplementation()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class HudRespawnMessage : HudMessage
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _time;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _showRespawnBlocked;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RespawnState _respawnState;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _showKilledByMessage;

		[Token(Token = "0x170002C1")]
		public override string Title
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xFC7560", Offset = "0xFC7560", VA = "0xFC7560", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public override string Line1
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xFC75BC", Offset = "0xFC75BC", VA = "0xFC75BC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public override string Line2
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xFC7618", Offset = "0xFC7618", VA = "0xFC7618", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public override bool HasExpired
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xFC772C", Offset = "0xFC772C", VA = "0xFC772C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xFC4BEC", Offset = "0xFC4BEC", VA = "0xFC4BEC")]
		public HudRespawnMessage(string title, string line1, string line2, NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xFC76A0", Offset = "0xFC76A0", VA = "0xFC76A0")]
		private string GetRespawnBlockedReason(RespawnState blockedReason)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xFC7834", Offset = "0xFC7834", VA = "0xFC7834", Slot = "8")]
		protected override void UpdateImplementation()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[DefaultExecutionOrder(1000001)]
	public class HudTransform : MonoBehaviour
	{
		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _headset;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _root;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _anchor;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _stickyRoot;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _verticalRotationDampTime;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _horizontalRotationDampTime;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _yPositionDampTime;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _verticalVelocity;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _horizontalAngleVelocity;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _verticalAngleVelocity;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _vericalAngle;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _horizontalAngle;

		[Token(Token = "0x170002C5")]
		public Vector3 Position
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xFC16E0", Offset = "0xFC16E0", VA = "0xFC16E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C6")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xFC16FC", Offset = "0xFC16FC", VA = "0xFC16FC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xFC7A2C", Offset = "0xFC7A2C", VA = "0xFC7A2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xFC7BFC", Offset = "0xFC7BFC", VA = "0xFC7BFC")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xFC7C70", Offset = "0xFC7C70", VA = "0xFC7C70")]
		private void UpdateSpectator()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xFC7D70", Offset = "0xFC7D70", VA = "0xFC7D70")]
		private void UpdatePlayer2()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xFC8024", Offset = "0xFC8024", VA = "0xFC8024")]
		private void UpdatePlayer()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xFC8670", Offset = "0xFC8670", VA = "0xFC8670")]
		public HudTransform()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class KillTracer : MonoBehaviour
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LineRenderer _killRender;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xFC868C", Offset = "0xFC868C", VA = "0xFC868C")]
		public void Show(ProjectileTrajectory trajectory)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xFC874C", Offset = "0xFC874C", VA = "0xFC874C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xFC8784", Offset = "0xFC8784", VA = "0xFC8784")]
		private void Update()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xFC87C8", Offset = "0xFC87C8", VA = "0xFC87C8")]
		public KillTracer()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public enum MessageAnimation
	{
		[Token(Token = "0x4001603")]
		None,
		[Token(Token = "0x4001604")]
		KillMessage,
		[Token(Token = "0x4001605")]
		RespawnMessage
	}
	[Token(Token = "0x20003B1")]
	[DefaultExecutionOrder(10000001)]
	public class MessageHud : MonoBehaviour
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _moveRoot;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer _titleBackground;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro _messageTitleText;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro _line1Text;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StackingMessage _line2stackingMessage;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HudMessage _currentMessage;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _positionOffset;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _initialized;

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xFC87D0", Offset = "0xFC87D0", VA = "0xFC87D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xFC87E0", Offset = "0xFC87E0", VA = "0xFC87E0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xFC88D0", Offset = "0xFC88D0", VA = "0xFC88D0")]
		public void Preload()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xFC8AD0", Offset = "0xFC8AD0", VA = "0xFC8AD0")]
		public void Show()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xFC8BB4", Offset = "0xFC8BB4", VA = "0xFC8BB4")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xFC8C00", Offset = "0xFC8C00", VA = "0xFC8C00")]
		private void HideElements()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xFC89AC", Offset = "0xFC89AC", VA = "0xFC89AC")]
		public void DisplayMessage(HudMessage message)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xFC8F88", Offset = "0xFC8F88", VA = "0xFC8F88")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xFC8E68", Offset = "0xFC8E68", VA = "0xFC8E68")]
		private void UpdateTextFields(HudMessage message)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xFC9080", Offset = "0xFC9080", VA = "0xFC9080")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xFC8B00", Offset = "0xFC8B00", VA = "0xFC8B00")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xFC9084", Offset = "0xFC9084", VA = "0xFC9084")]
		public MessageHud()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[DefaultExecutionOrder(10000001)]
	public class ModsHud : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _label;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _positionOffset;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _timer;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xFC908C", Offset = "0xFC908C", VA = "0xFC908C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xFC90E8", Offset = "0xFC90E8", VA = "0xFC90E8")]
		public void Show()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xFC9260", Offset = "0xFC9260", VA = "0xFC9260")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xFC9298", Offset = "0xFC9298", VA = "0xFC9298")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xFC91B4", Offset = "0xFC91B4", VA = "0xFC91B4")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xFC92E4", Offset = "0xFC92E4", VA = "0xFC92E4")]
		public ModsHud()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class PlayerHud : MonoBehaviour
	{
		[Token(Token = "0x20003B4")]
		private enum FadeType
		{
			[Token(Token = "0x4001626")]
			Default,
			[Token(Token = "0x4001627")]
			Pumpkin
		}

		[Token(Token = "0x20003B5")]
		public enum OverlayType
		{
			[Token(Token = "0x4001629")]
			Pickup,
			[Token(Token = "0x400162A")]
			Health,
			[Token(Token = "0x400162B")]
			Dash,
			[Token(Token = "0x400162C")]
			Sprint,
			[Token(Token = "0x400162D")]
			Login,
			[Token(Token = "0x400162E")]
			Armor,
			[Token(Token = "0x400162F")]
			LifeOrb,
			[Token(Token = "0x4001630")]
			Pumpkin
		}

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameEndHud _gameEndHud;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterProvider _characterProvider;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraOverlays _overlays;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CriticalDamageHud _criticalDamageHud;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private KillTracer _killTracer;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MessageHud _messageHud;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ModsHud _modsHud;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TeamVersusTeam _versusHud;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PlayerStatusHud _statusHud;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetCharacterBehaviour _character;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _hasDeadOverlayPlayed;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color _overlayColor;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _overlayTimer;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _overlayTime;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private FadeType _overlayFadeType;

		[Token(Token = "0x170002C7")]
		public static PlayerHud Active
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xFC92EC", Offset = "0xFC92EC", VA = "0xFC92EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xFC9334", Offset = "0xFC9334", VA = "0xFC9334")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public static bool HasInstance
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xFC938C", Offset = "0xFC938C", VA = "0xFC938C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xFC93D4", Offset = "0xFC93D4", VA = "0xFC93D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xFC9420", Offset = "0xFC9420", VA = "0xFC9420")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xFC9748", Offset = "0xFC9748", VA = "0xFC9748")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xFC995C", Offset = "0xFC995C", VA = "0xFC995C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xFC9960", Offset = "0xFC9960", VA = "0xFC9960")]
		private void SetPlayer(NetCharacterBehaviour Player)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xFC9A7C", Offset = "0xFC9A7C", VA = "0xFC9A7C")]
		public void Update()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xFCA4B0", Offset = "0xFCA4B0", VA = "0xFCA4B0")]
		private void UpdatePumpkinHead()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xFCA2EC", Offset = "0xFCA2EC", VA = "0xFCA2EC")]
		private void UpdateDeadOverlay(float hp)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xFC44B0", Offset = "0xFC44B0", VA = "0xFC44B0")]
		public void DisplayMessage(HudMessage message)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xFC6D94", Offset = "0xFC6D94", VA = "0xFC6D94")]
		public void ShowKillTracer(ProjectileTrajectory trajectory)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xFC6258", Offset = "0xFC6258", VA = "0xFC6258")]
		public void ShowEndOfGameHud(GameEndMessageEvent evnt)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xFC6790", Offset = "0xFC6790", VA = "0xFC6790")]
		public void EndOfGameHudXp(PlayerProgressionResponse progressionResponse)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xFC6778", Offset = "0xFC6778", VA = "0xFC6778")]
		public void EndOfGameHudError(string error)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xFC4E70", Offset = "0xFC4E70", VA = "0xFC4E70")]
		public void FadeToBlack(float duration = 1f)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xFC4F18", Offset = "0xFC4F18", VA = "0xFC4F18")]
		public void ForceBlack()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xFC50F8", Offset = "0xFC50F8", VA = "0xFC50F8")]
		public void FadeFromBlack(float duration = 1f)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xFC6C08", Offset = "0xFC6C08", VA = "0xFC6C08")]
		public void HitEffect(bool left, bool right)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xFC960C", Offset = "0xFC960C", VA = "0xFC960C")]
		private void HideAllUIAndResetPostFx()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xFCA690", Offset = "0xFCA690", VA = "0xFCA690")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode sceneMode)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xFC5114", Offset = "0xFC5114", VA = "0xFC5114")]
		public void ShowMods()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xFCA388", Offset = "0xFCA388", VA = "0xFCA388")]
		private void UpdatePickupOverlay()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xFC6E84", Offset = "0xFC6E84", VA = "0xFC6E84")]
		public void StartOverlay(OverlayType type)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xFC7114", Offset = "0xFC7114", VA = "0xFC7114")]
		public void ShowTeamVersusTeam(string team0, string team1)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xFCA70C", Offset = "0xFCA70C", VA = "0xFCA70C")]
		public PlayerHud()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[DefaultExecutionOrder(10000001)]
	public class PlayerStatusHud : MonoBehaviour
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Roots")]
		private HudTransform _hudTransform;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rootGameObject;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _armorRoot;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Visuals")]
		[SerializeField]
		private MeshRenderer _energyMesh;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro _healthNumber;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer _healthMesh;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro _armorNumber;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro _timeRemaining;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _normalHealthColor;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _lowHealthColor;

		[Token(Token = "0x400163B")]
		private const float BaseScale = 0.003f;

		[Token(Token = "0x400163C")]
		private const string _timeFormatString = "{0:00}:{1:00}";

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _lastSeconds;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _lastCharges;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _wasLowHealth;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private readonly int _energyPercentHash;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int _segmentsHash;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MaterialPropertyBlock _energyPropertyBlock;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int _colorHash;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MaterialPropertyBlock _healthPropertyBlock;

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xFCA714", Offset = "0xFCA714", VA = "0xFCA714")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xFC9F30", Offset = "0xFC9F30", VA = "0xFC9F30")]
		public void Show()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xFCA630", Offset = "0xFCA630", VA = "0xFCA630")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xFCA148", Offset = "0xFCA148", VA = "0xFCA148")]
		public void SetEnergy(float percentage, int dashCharges)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xFCA900", Offset = "0xFCA900", VA = "0xFCA900")]
		public void SetMaxDashes(int dashCount)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xFCA940", Offset = "0xFCA940", VA = "0xFCA940")]
		public void SetLowHealth(bool isLowHealth)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xFCA00C", Offset = "0xFCA00C", VA = "0xFCA00C")]
		public void SetHealth(int amount)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xFCAA34", Offset = "0xFCAA34", VA = "0xFCAA34")]
		public void SetArmorVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xFCA0A4", Offset = "0xFCA0A4", VA = "0xFCA0A4")]
		public void SetArmor(int amount)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xFCA194", Offset = "0xFCA194", VA = "0xFCA194")]
		public void UpdateMatchTime()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xFCAA88", Offset = "0xFCAA88", VA = "0xFCAA88")]
		private void SetTimeRemaining(int seconds)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xFCAB20", Offset = "0xFCAB20", VA = "0xFCAB20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xFCA7A4", Offset = "0xFCA7A4", VA = "0xFCA7A4")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xFCABA8", Offset = "0xFCABA8", VA = "0xFCABA8")]
		public PlayerStatusHud()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class StackingMessage : MonoBehaviour
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StackMessage[] _text;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentLine2TopIndex;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _currentTopPriorityIndex;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xFC8860", Offset = "0xFC8860", VA = "0xFC8860")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xFC8A58", Offset = "0xFC8A58", VA = "0xFC8A58")]
		public void Preload()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xFC8CBC", Offset = "0xFC8CBC", VA = "0xFC8CBC")]
		public void AddMessage(HudMessage message)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xFC9004", Offset = "0xFC9004", VA = "0xFC9004")]
		public bool IsAllExpired()
		{
			return default(bool);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xFC8C4C", Offset = "0xFC8C4C", VA = "0xFC8C4C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xFCAE3C", Offset = "0xFCAE3C", VA = "0xFCAE3C")]
		public StackingMessage()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class StackMessage : MonoBehaviour
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text TextComponent;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HudMessage _currentMessage;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _positionIndex;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _line2StartLocalPosition;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _line2StartLocalScale;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color _line2StartColor;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Sequence _currentSequence;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence _killMessageSequence;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence _respawnMessageSequence;

		[Token(Token = "0x170002C9")]
		public HudMessage CurrentMessage
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xFCAE44", Offset = "0xFCAE44", VA = "0xFCAE44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xFCAE4C", Offset = "0xFCAE4C", VA = "0xFCAE4C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xFCAE5C", Offset = "0xFCAE5C", VA = "0xFCAE5C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xFCAC70", Offset = "0xFCAC70", VA = "0xFCAC70")]
		public void ShowMessage(HudMessage message)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xFCADE8", Offset = "0xFCADE8", VA = "0xFCADE8")]
		public void MoveDown()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xFCB490", Offset = "0xFCB490", VA = "0xFCB490")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xFCB2DC", Offset = "0xFCB2DC", VA = "0xFCB2DC")]
		private void PlayKillMessageAnimation()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xFCB280", Offset = "0xFCB280", VA = "0xFCB280")]
		private void PlayNoAnimation()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xFCB3C0", Offset = "0xFCB3C0", VA = "0xFCB3C0")]
		private void PlayRespawnMessageAnimation()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xFCB208", Offset = "0xFCB208", VA = "0xFCB208")]
		private void ResetAllElements()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xFCAF40", Offset = "0xFCAF40", VA = "0xFCAF40")]
		private Sequence GenerateKillMessageSequence()
		{
			return null;
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xFCB108", Offset = "0xFCB108", VA = "0xFCB108")]
		private Sequence GenerateRespawnMessageSequence()
		{
			return null;
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xFCB628", Offset = "0xFCB628", VA = "0xFCB628")]
		public StackMessage()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[DefaultExecutionOrder(10000001)]
	public class TeamVersusTeam : MonoBehaviour
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HudTransform _hudTransform;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _flarePivot;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _team0Text;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _team1Text;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _vsText;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer _team0FlareMesh;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ColorUsage(true, true)]
		[SerializeField]
		private Color _team0FlareColor;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer _team1FlareMesh;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ColorUsage(true, true)]
		[SerializeField]
		private Color _team1FlareColor;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MeshRenderer _vsFlareMesh;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _vsFlareColor;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TintColor;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Sequence _sequence;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _positionOffset;

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xFCB630", Offset = "0xFCB630", VA = "0xFCB630")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xFCB664", Offset = "0xFCB664", VA = "0xFCB664")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xFCB668", Offset = "0xFCB668", VA = "0xFCB668")]
		private void UpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xFCB724", Offset = "0xFCB724", VA = "0xFCB724")]
		[ContextMenu("Reset")]
		private void ResetElements()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xFCA6B4", Offset = "0xFCA6B4", VA = "0xFCA6B4")]
		public void PlayVersus(string team0Name, string team1Name)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xFCB968", Offset = "0xFCB968", VA = "0xFCB968")]
		[ContextMenu("Animate")]
		private void Animate()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xFCA650", Offset = "0xFCA650", VA = "0xFCA650")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xFCC2D8", Offset = "0xFCC2D8", VA = "0xFCC2D8")]
		public TeamVersusTeam()
		{
		}
	}
}
namespace HyperDash.GameInput
{
	[Token(Token = "0x20003BA")]
	public enum ActionType
	{
		[Token(Token = "0x4001661")]
		Button,
		[Token(Token = "0x4001662")]
		Axis2D
	}
	[Token(Token = "0x20003BB")]
	public static class ButtonActionID
	{
		[Token(Token = "0x4001663")]
		public const int ShootLeft = 0;

		[Token(Token = "0x4001664")]
		public const int ShootRight = 1;

		[Token(Token = "0x4001665")]
		public const int ReloadLeft = 2;

		[Token(Token = "0x4001666")]
		public const int ReloadRight = 3;

		[Token(Token = "0x4001667")]
		public const int DashLeft = 4;

		[Token(Token = "0x4001668")]
		public const int DashRight = 5;

		[Token(Token = "0x4001669")]
		public const int Sprint = 6;

		[Token(Token = "0x400166A")]
		public const int SnapTurnLeft = 7;

		[Token(Token = "0x400166B")]
		public const int SnapTurnRight = 8;

		[Token(Token = "0x400166C")]
		public const int Crouch = 9;

		[Token(Token = "0x400166D")]
		public const int PushToTalk = 10;

		[Token(Token = "0x400166E")]
		public const int DropItemLeft = 11;

		[Token(Token = "0x400166F")]
		public const int DropItemRight = 12;

		[Token(Token = "0x4001670")]
		public const int Count = 13;
	}
	[Token(Token = "0x20003BC")]
	public static class Axis2DActionID
	{
		[Token(Token = "0x4001671")]
		public const int Movement = 0;

		[Token(Token = "0x4001672")]
		public const int SmoothTurn = 1;

		[Token(Token = "0x4001673")]
		public const int Count = 2;
	}
	[Token(Token = "0x20003BD")]
	public enum Controller
	{
		[Token(Token = "0x4001675")]
		None = -1,
		[Token(Token = "0x4001676")]
		Left,
		[Token(Token = "0x4001677")]
		Right
	}
	[Token(Token = "0x20003BE")]
	public class FpsInputModule : InputModule
	{
		[Token(Token = "0x170002CA")]
		public override bool IsUserPresent
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xFCC36C", Offset = "0xFCC36C", VA = "0xFCC36C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CB")]
		public override bool IsMixedRealityEnabled
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xFCC374", Offset = "0xFCC374", VA = "0xFCC374", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xFCC37C", Offset = "0xFCC37C", VA = "0xFCC37C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xFCC388", Offset = "0xFCC388", VA = "0xFCC388", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xFCC38C", Offset = "0xFCC38C", VA = "0xFCC38C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xFCC4E4", Offset = "0xFCC4E4", VA = "0xFCC4E4", Slot = "7")]
		public override Vector3 GetMoveInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xFCC828", Offset = "0xFCC828", VA = "0xFCC828", Slot = "8")]
		public override bool GetDashButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xFCC850", Offset = "0xFCC850", VA = "0xFCC850", Slot = "9")]
		public override bool GetDashButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xFCC878", Offset = "0xFCC878", VA = "0xFCC878", Slot = "10")]
		public override bool GetDashButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xFCC8A0", Offset = "0xFCC8A0", VA = "0xFCC8A0", Slot = "11")]
		public override bool GetReloadButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xFCC8BC", Offset = "0xFCC8BC", VA = "0xFCC8BC", Slot = "12")]
		public override bool GetReloadButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xFCC8D8", Offset = "0xFCC8D8", VA = "0xFCC8D8", Slot = "13")]
		public override bool GetReloadButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xFCC8F4", Offset = "0xFCC8F4", VA = "0xFCC8F4", Slot = "20")]
		public override bool GetTrigger(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xFCC910", Offset = "0xFCC910", VA = "0xFCC910", Slot = "21")]
		public override float GetTriggerAxis(Controller c)
		{
			return default(float);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xFCC950", Offset = "0xFCC950", VA = "0xFCC950", Slot = "22")]
		public override bool GetMenuButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xFCC95C", Offset = "0xFCC95C", VA = "0xFCC95C", Slot = "23")]
		public override bool GetMenuButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xFCC968", Offset = "0xFCC968", VA = "0xFCC968", Slot = "29")]
		public override bool GetPushToTalkButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xFCC974", Offset = "0xFCC974", VA = "0xFCC974", Slot = "24")]
		public override bool GetRotationButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xFCCA10", Offset = "0xFCCA10", VA = "0xFCCA10", Slot = "25")]
		public override float GetSmoothRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xFCCAD0", Offset = "0xFCCAD0", VA = "0xFCCAD0", Slot = "26")]
		public override float GetSnapRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xFCCB90", Offset = "0xFCCB90", VA = "0xFCCB90", Slot = "27")]
		public override bool GetInteractUIButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xFCCB9C", Offset = "0xFCCB9C", VA = "0xFCCB9C", Slot = "28")]
		public override bool GetInteractUIButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xFCCBA8", Offset = "0xFCCBA8", VA = "0xFCCBA8", Slot = "30")]
		public override Vector2 GetScrollAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xFCCBB0", Offset = "0xFCCBB0", VA = "0xFCCBB0", Slot = "31")]
		public override void SetHaptic(float duration, float frequency, float amplitude, Controller c)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xFCCBB4", Offset = "0xFCCBB4", VA = "0xFCCBB4", Slot = "32")]
		public override void ToggleControllerModels(bool enable)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xFCCBB8", Offset = "0xFCCBB8", VA = "0xFCCBB8", Slot = "14")]
		public override bool GetDownCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xFCCBC4", Offset = "0xFCCBC4", VA = "0xFCCBC4", Slot = "15")]
		public override bool GetCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xFCCBD0", Offset = "0xFCCBD0", VA = "0xFCCBD0", Slot = "16")]
		public override bool GetUpCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xFCCBDC", Offset = "0xFCCBDC", VA = "0xFCCBDC", Slot = "17")]
		public override bool GetDownSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xFCCBE8", Offset = "0xFCCBE8", VA = "0xFCCBE8", Slot = "18")]
		public override bool GetSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xFCCBF4", Offset = "0xFCCBF4", VA = "0xFCCBF4", Slot = "19")]
		public override bool GetUpSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xFCCC00", Offset = "0xFCCC00", VA = "0xFCCC00", Slot = "33")]
		public override bool GetPickupButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xFCCC1C", Offset = "0xFCCC1C", VA = "0xFCCC1C", Slot = "40")]
		public override bool GetDropItemLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xFCCC28", Offset = "0xFCCC28", VA = "0xFCCC28", Slot = "41")]
		public override bool GetDropItemRight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xFCCC34", Offset = "0xFCCC34", VA = "0xFCCC34", Slot = "34")]
		public override string GetMovementAxisName()
		{
			return null;
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xFCCC74", Offset = "0xFCCC74", VA = "0xFCCC74", Slot = "35")]
		public override string GetSprintButtonName()
		{
			return null;
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xFCCCB4", Offset = "0xFCCCB4", VA = "0xFCCCB4", Slot = "36")]
		public override string GetDashButtonLeftName()
		{
			return null;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xFCCCF4", Offset = "0xFCCCF4", VA = "0xFCCCF4", Slot = "37")]
		public override string GetDashButtonRightName()
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xFCCD34", Offset = "0xFCCD34", VA = "0xFCCD34", Slot = "38")]
		public override string GetTriggerLeftName()
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xFCCD74", Offset = "0xFCCD74", VA = "0xFCCD74", Slot = "39")]
		public override string GetTriggerRightName()
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xFCCDB4", Offset = "0xFCCDB4", VA = "0xFCCDB4", Slot = "42")]
		public override void GetHandGesture(Controller controller, out bool trigger, out bool grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xFCCE04", Offset = "0xFCCE04", VA = "0xFCCE04", Slot = "43")]
		public override void GetHandGesture(Controller controller, out float trigger, out float grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xFCCE6C", Offset = "0xFCCE6C", VA = "0xFCCE6C")]
		public FpsInputModule()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[DefaultExecutionOrder(-200000)]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerMovement PlayerMovement;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashController PlayerDashController;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<InputModule> _inputModules;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputManager _instance;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static VrSdk InputSDK;

		[Token(Token = "0x170002CC")]
		public static InputManager Instance
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xFC7B0C", Offset = "0xFC7B0C", VA = "0xFC7B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public InputModule InputModule
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xFCCE8C", Offset = "0xFCCE8C", VA = "0xFCCE8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xFCCE94", Offset = "0xFCCE94", VA = "0xFCCE94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xFCCE9C", Offset = "0xFCCE9C", VA = "0xFCCE9C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xFCCFB8", Offset = "0xFCCFB8", VA = "0xFCCFB8")]
		private void ChangeSdkModule(VrSdk sdk)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xFCD3D0", Offset = "0xFCD3D0", VA = "0xFCD3D0")]
		public void InitializeSpectator()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xFCD5CC", Offset = "0xFCD5CC", VA = "0xFCD5CC")]
		public bool InitializeSdkModule(VrSdk sdk)
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xFCD9E8", Offset = "0xFCD9E8", VA = "0xFCD9E8")]
		public static VrSdk GetVrSDK()
		{
			return default(VrSdk);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xFCD614", Offset = "0xFCD614", VA = "0xFCD614")]
		public static bool ActivateXRLoader(VrSdk sdk)
		{
			return default(bool);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xFCDFEC", Offset = "0xFCDFEC", VA = "0xFCDFEC")]
		public static XRLoader GetActiveLoader()
		{
			return null;
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xFCE198", Offset = "0xFCE198", VA = "0xFCE198")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public abstract class InputModule : MonoBehaviour
	{
		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraRig _cameraRig;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera _eventCamera;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EventSystem _eventSystem;

		[Token(Token = "0x170002CE")]
		public CameraRig CameraRig
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xFCE220", Offset = "0xFCE220", VA = "0xFCE220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		public Camera EventCamera
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xFCE228", Offset = "0xFCE228", VA = "0xFCE228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public Transform HeadsetTransform
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0xFC7BE0", Offset = "0xFC7BE0", VA = "0xFC7BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public abstract bool IsUserPresent
		{
			[Token(Token = "0x600175D")]
			get;
		}

		[Token(Token = "0x170002D2")]
		public abstract bool IsMixedRealityEnabled
		{
			[Token(Token = "0x600175E")]
			get;
		}

		[Token(Token = "0x170002D3")]
		public Controller CurrentUIInputController
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xFCE230", Offset = "0xFCE230", VA = "0xFCE230")]
			[CompilerGenerated]
			get
			{
				return default(Controller);
			}
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xFCE238", Offset = "0xFCE238", VA = "0xFCE238")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001761")]
		public abstract void Initialize();

		[Token(Token = "0x6001762")]
		public abstract Vector3 GetMoveInput();

		[Token(Token = "0x6001763")]
		public abstract bool GetDashButton(Controller c);

		[Token(Token = "0x6001764")]
		public abstract bool GetDashButtonDown(Controller c);

		[Token(Token = "0x6001765")]
		public abstract bool GetDashButtonUp(Controller c);

		[Token(Token = "0x6001766")]
		public abstract bool GetReloadButton(Controller c);

		[Token(Token = "0x6001767")]
		public abstract bool GetReloadButtonDown(Controller c);

		[Token(Token = "0x6001768")]
		public abstract bool GetReloadButtonUp(Controller c);

		[Token(Token = "0x6001769")]
		public abstract bool GetDownCrouch();

		[Token(Token = "0x600176A")]
		public abstract bool GetCrouch();

		[Token(Token = "0x600176B")]
		public abstract bool GetUpCrouch();

		[Token(Token = "0x600176C")]
		public abstract bool GetDownSprint();

		[Token(Token = "0x600176D")]
		public abstract bool GetSprint();

		[Token(Token = "0x600176E")]
		public abstract bool GetUpSprint();

		[Token(Token = "0x600176F")]
		public abstract bool GetTrigger(Controller c);

		[Token(Token = "0x6001770")]
		public abstract float GetTriggerAxis(Controller c);

		[Token(Token = "0x6001771")]
		public abstract bool GetMenuButtonDown();

		[Token(Token = "0x6001772")]
		public abstract bool GetMenuButton();

		[Token(Token = "0x6001773")]
		public abstract bool GetRotationButtonDown();

		[Token(Token = "0x6001774")]
		public abstract float GetSmoothRotationAxis();

		[Token(Token = "0x6001775")]
		public abstract float GetSnapRotationAxis();

		[Token(Token = "0x6001776")]
		public abstract bool GetInteractUIButtonDown(Controller controller);

		[Token(Token = "0x6001777")]
		public abstract bool GetInteractUIButtonUp(Controller controller);

		[Token(Token = "0x6001778")]
		public abstract bool GetPushToTalkButton();

		[Token(Token = "0x6001779")]
		public abstract Vector2 GetScrollAxis();

		[Token(Token = "0x600177A")]
		public abstract void SetHaptic(float duration, float frequency, float amplitude, Controller c);

		[Token(Token = "0x600177B")]
		public abstract void ToggleControllerModels(bool enable);

		[Token(Token = "0x600177C")]
		public abstract bool GetPickupButton(Controller c);

		[Token(Token = "0x600177D")]
		public abstract string GetMovementAxisName();

		[Token(Token = "0x600177E")]
		public abstract string GetSprintButtonName();

		[Token(Token = "0x600177F")]
		public abstract string GetDashButtonLeftName();

		[Token(Token = "0x6001780")]
		public abstract string GetDashButtonRightName();

		[Token(Token = "0x6001781")]
		public abstract string GetTriggerLeftName();

		[Token(Token = "0x6001782")]
		public abstract string GetTriggerRightName();

		[Token(Token = "0x6001783")]
		public abstract bool GetDropItemLeft();

		[Token(Token = "0x6001784")]
		public abstract bool GetDropItemRight();

		[Token(Token = "0x6001785")]
		public abstract void GetHandGesture(Controller controller, out bool trigger, out bool grip, out bool thumbDown);

		[Token(Token = "0x6001786")]
		public abstract void GetHandGesture(Controller controller, out float trigger, out float grip, out bool thumbDown);

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xFCCE7C", Offset = "0xFCCE7C", VA = "0xFCCE7C")]
		protected InputModule()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public static class KeyCodeInputHelper
	{
		[Token(Token = "0x4001682")]
		public const float AxisButtonTriggerValue = 0.9f;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hadAnyLastFrame;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xFCE240", Offset = "0xFCE240", VA = "0xFCE240")]
		public static bool GetAnyKeyGroup(out KeyGroup group)
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xFCE460", Offset = "0xFCE460", VA = "0xFCE460")]
		private static bool GetKey(out KeyCode code, out KeyModifiers modifiers)
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xFCE5D8", Offset = "0xFCE5D8", VA = "0xFCE5D8")]
		private static bool IsModifier(KeyCode code)
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xFCE380", Offset = "0xFCE380", VA = "0xFCE380")]
		public static bool GetAxis(out int axis, out int direction)
		{
			return default(bool);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xFCE5F8", Offset = "0xFCE5F8", VA = "0xFCE5F8")]
		public static KeyModifiers GetPressedModifiers()
		{
			return default(KeyModifiers);
		}
	}
	[Token(Token = "0x20003C2")]
	[CreateAssetMenu]
	public class KeyInputValidator : TMP_InputValidator
	{
		[Token(Token = "0x4001684")]
		private const char Null = '\0';

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xFCE68C", Offset = "0xFCE68C", VA = "0xFCE68C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xFCE7A4", Offset = "0xFCE7A4", VA = "0xFCE7A4")]
		public KeyInputValidator()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class OculusInputModule : XRInputModule
	{
		[Token(Token = "0x20003C4")]
		[CompilerGenerated]
		private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusInputModule <>4__this;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017A6")]
				[Address(RVA = "0xFCF3C0", Offset = "0xFCF3C0", VA = "0xFCF3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017A8")]
				[Address(RVA = "0xFCF408", Offset = "0xFCF408", VA = "0xFCF408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xFCE9F0", Offset = "0xFCE9F0", VA = "0xFCE9F0")]
			[DebuggerHidden]
			public <Start>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xFCF2E4", Offset = "0xFCF2E4", VA = "0xFCF2E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xFCF2E8", Offset = "0xFCF2E8", VA = "0xFCF2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xFCF3C8", Offset = "0xFCF3C8", VA = "0xFCF3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("OVR")]
		private OVRControllerHelper _controllerLeft;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OVRControllerHelper _controllerRight;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPaused;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isFocused;

		[Token(Token = "0x170002D4")]
		public override bool IsUserPresent
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xFCE7AC", Offset = "0xFCE7AC", VA = "0xFCE7AC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D5")]
		public override bool IsMixedRealityEnabled
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xFCE840", Offset = "0xFCE840", VA = "0xFCE840", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xFCE890", Offset = "0xFCE890", VA = "0xFCE890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xFCE97C", Offset = "0xFCE97C", VA = "0xFCE97C")]
		[IteratorStateMachine(typeof(<Start>d__9))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xFCEA18", Offset = "0xFCEA18", VA = "0xFCEA18", Slot = "44")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xFCEB10", Offset = "0xFCEB10", VA = "0xFCEB10", Slot = "7")]
		public override Vector3 GetMoveInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xFCEB70", Offset = "0xFCEB70", VA = "0xFCEB70", Slot = "8")]
		public override bool GetDashButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xFCEB90", Offset = "0xFCEB90", VA = "0xFCEB90", Slot = "20")]
		public override bool GetTrigger(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xFCEBB0", Offset = "0xFCEBB0", VA = "0xFCEBB0", Slot = "21")]
		public override float GetTriggerAxis(Controller c)
		{
			return default(float);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xFCEBD0", Offset = "0xFCEBD0", VA = "0xFCEBD0", Slot = "25")]
		public override float GetSmoothRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xFCEBF0", Offset = "0xFCEBF0", VA = "0xFCEBF0", Slot = "18")]
		public override bool GetSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xFCEC10", Offset = "0xFCEC10", VA = "0xFCEC10", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xFCEF0C", Offset = "0xFCEF0C", VA = "0xFCEF0C", Slot = "32")]
		public override void ToggleControllerModels(bool enable)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xFCEF68", Offset = "0xFCEF68", VA = "0xFCEF68")]
		private void OnInputFocusAquired()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xFCEF78", Offset = "0xFCEF78", VA = "0xFCEF78")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xFCF054", Offset = "0xFCF054", VA = "0xFCF054")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xFCEF74", Offset = "0xFCEF74", VA = "0xFCEF74")]
		private void UpdateMicrophoneAvailability()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xFCF148", Offset = "0xFCF148", VA = "0xFCF148", Slot = "42")]
		public override void GetHandGesture(Controller controller, out bool trigger, out bool grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xFCF21C", Offset = "0xFCF21C", VA = "0xFCF21C", Slot = "43")]
		public override void GetHandGesture(Controller controller, out float trigger, out float grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xFCF2D4", Offset = "0xFCF2D4", VA = "0xFCF2D4")]
		public OculusInputModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public struct OvrButton
	{
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private OVRInput.Controller _controller;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private OVRInput.Button _button;

		[Token(Token = "0x170002D8")]
		public OVRInput.Controller Controller
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xFCF410", Offset = "0xFCF410", VA = "0xFCF410")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x170002D9")]
		public OVRInput.Button Button
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xFCF418", Offset = "0xFCF418", VA = "0xFCF418")]
			get
			{
				return default(OVRInput.Button);
			}
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xFCF420", Offset = "0xFCF420", VA = "0xFCF420")]
		public OvrButton(OVRInput.Button button, OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xFCF428", Offset = "0xFCF428", VA = "0xFCF428")]
		public bool Get()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xFCF488", Offset = "0xFCF488", VA = "0xFCF488")]
		public bool GetDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xFCF4E8", Offset = "0xFCF4E8", VA = "0xFCF4E8")]
		public bool GetUp()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public struct OvrAxis2D
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private OVRInput.Controller _controller;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private OVRInput.Axis2D _axis2D;

		[Token(Token = "0x170002DA")]
		public OVRInput.Controller Controller
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xFCF548", Offset = "0xFCF548", VA = "0xFCF548")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x170002DB")]
		public OVRInput.Axis2D Axis2D
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xFCF550", Offset = "0xFCF550", VA = "0xFCF550")]
			get
			{
				return default(OVRInput.Axis2D);
			}
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xFCF558", Offset = "0xFCF558", VA = "0xFCF558")]
		public OvrAxis2D(OVRInput.Axis2D axis, OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xFCF560", Offset = "0xFCF560", VA = "0xFCF560")]
		public Vector2 Get()
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class OvrKeybinds
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private OvrAxis2D[] _axis2D;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OvrButton[] _buttons;

		[Token(Token = "0x170002DC")]
		public OvrAxis2D[] Axis2D
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xFCF5C0", Offset = "0xFCF5C0", VA = "0xFCF5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public OvrAxis2D MovementAxis
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xFCF5C8", Offset = "0xFCF5C8", VA = "0xFCF5C8")]
			get
			{
				return default(OvrAxis2D);
			}
		}

		[Token(Token = "0x170002DE")]
		public OvrAxis2D SmoothTurnAxis
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xFCF5F0", Offset = "0xFCF5F0", VA = "0xFCF5F0")]
			get
			{
				return default(OvrAxis2D);
			}
		}

		[Token(Token = "0x170002DF")]
		public OvrButton[] Buttons
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xFCF61C", Offset = "0xFCF61C", VA = "0xFCF61C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public OvrButton ShootLeft
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xFCF624", Offset = "0xFCF624", VA = "0xFCF624")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E1")]
		public OvrButton ShootRight
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xFCF64C", Offset = "0xFCF64C", VA = "0xFCF64C")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E2")]
		public OvrButton ReloadLeft
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xFCF678", Offset = "0xFCF678", VA = "0xFCF678")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E3")]
		public OvrButton ReloadRight
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xFCF6A4", Offset = "0xFCF6A4", VA = "0xFCF6A4")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E4")]
		public OvrButton DashLeft
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xFCF6D0", Offset = "0xFCF6D0", VA = "0xFCF6D0")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E5")]
		public OvrButton DashRight
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xFCF6FC", Offset = "0xFCF6FC", VA = "0xFCF6FC")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E6")]
		public OvrButton Sprint
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xFCF728", Offset = "0xFCF728", VA = "0xFCF728")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E7")]
		public OvrButton SnapTurnLeft
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xFCF754", Offset = "0xFCF754", VA = "0xFCF754")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E8")]
		public OvrButton SnapTurnRight
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xFCF780", Offset = "0xFCF780", VA = "0xFCF780")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002E9")]
		public OvrButton Crouch
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xFCF7AC", Offset = "0xFCF7AC", VA = "0xFCF7AC")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002EA")]
		public OvrButton PushToTalk
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xFCF7D8", Offset = "0xFCF7D8", VA = "0xFCF7D8")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002EB")]
		public OvrButton DropItemLeft
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xFCF804", Offset = "0xFCF804", VA = "0xFCF804")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x170002EC")]
		public OvrButton DropItemRight
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xFCF830", Offset = "0xFCF830", VA = "0xFCF830")]
			get
			{
				return default(OvrButton);
			}
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xFCF85C", Offset = "0xFCF85C", VA = "0xFCF85C")]
		public OvrKeybinds()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xFCF8F8", Offset = "0xFCF8F8", VA = "0xFCF8F8")]
		public void Save()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xFCF954", Offset = "0xFCF954", VA = "0xFCF954")]
		public void Load()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xFCFA88", Offset = "0xFCFA88", VA = "0xFCFA88")]
		private static OvrButton[] GetDefaultButtonsArray()
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xFCFA28", Offset = "0xFCFA28", VA = "0xFCFA28")]
		public void LoadDefaultKeybinds()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xFCFBC4", Offset = "0xFCFBC4", VA = "0xFCFBC4")]
		public void LoadDefaultLeftHandedKeybinds()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public static class OVRInputHelpers
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OVRInput.Button[] _ovrButtons;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xFCFD54", Offset = "0xFCFD54", VA = "0xFCFD54")]
		public static string GetLocalizedButtonName(OVRInput.Button button, OVRInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xFD0030", Offset = "0xFD0030", VA = "0xFD0030")]
		public static string GetButtonLocaKey(OVRInput.Button button, OVRInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xFD0258", Offset = "0xFD0258", VA = "0xFD0258")]
		public static string GetLocalizedControllerName(OVRInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xFD0320", Offset = "0xFD0320", VA = "0xFD0320")]
		public static string GetControllerLocaKey(OVRInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xFD03AC", Offset = "0xFD03AC", VA = "0xFD03AC")]
		public static string GetLeftOrRightHand(OVRInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xFD048C", Offset = "0xFD048C", VA = "0xFD048C")]
		public static bool GetAnyAxis2D(out OVRInput.Axis2D axis, out OVRInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xFD0568", Offset = "0xFD0568", VA = "0xFD0568")]
		public static string GetLocalizedAxis2DName(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xFD065C", Offset = "0xFD065C", VA = "0xFD065C")]
		public static string GetAxis2DLocaKey(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xFD06DC", Offset = "0xFD06DC", VA = "0xFD06DC")]
		public static bool GetAnyButtonUp(out OVRInput.Button button, out OVRInput.Controller controller)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C9")]
	[DefaultExecutionOrder(-9999)]
	public class PicoInputModule : XRInputModule
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _leftControllerModel;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _rightControllerModel;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPaused;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isFocused;

		[Token(Token = "0x170002ED")]
		public override bool IsUserPresent
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xFD0938", Offset = "0xFD0938", VA = "0xFD0938", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public override bool IsMixedRealityEnabled
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xFD0940", Offset = "0xFD0940", VA = "0xFD0940", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xFD0948", Offset = "0xFD0948", VA = "0xFD0948", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xFD0988", Offset = "0xFD0988", VA = "0xFD0988", Slot = "32")]
		public override void ToggleControllerModels(bool enable)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xFD09CC", Offset = "0xFD09CC", VA = "0xFD09CC", Slot = "31")]
		public override void SetHaptic(float duration, float frequency, float amplitude, Controller c)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xFD0A0C", Offset = "0xFD0A0C", VA = "0xFD0A0C")]
		public void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xFD0C10", Offset = "0xFD0C10", VA = "0xFD0C10")]
		public void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xFD0ADC", Offset = "0xFD0ADC", VA = "0xFD0ADC")]
		private void UpdateMicrophoneAvailability()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xFD0CE0", Offset = "0xFD0CE0", VA = "0xFD0CE0")]
		public PicoInputModule()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public static class SpectatorInput
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SpectatorKeybinds _keybinds;

		[Token(Token = "0x170002EF")]
		public static SpectatorKeybinds KeyBinds
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xFD0CE8", Offset = "0xFD0CE8", VA = "0xFD0CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xFD0D40", Offset = "0xFD0D40", VA = "0xFD0D40")]
		public static Vector3 GetMovementVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xFD109C", Offset = "0xFD109C", VA = "0xFD109C")]
		public static Vector3 GetRotationInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xFD12EC", Offset = "0xFD12EC", VA = "0xFD12EC")]
		public static bool GetBoostButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xFD13EC", Offset = "0xFD13EC", VA = "0xFD13EC")]
		public static bool GetHideUIButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xFD14EC", Offset = "0xFD14EC", VA = "0xFD14EC")]
		public static bool GetMenuButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xFD15C8", Offset = "0xFD15C8", VA = "0xFD15C8")]
		public static bool UnlockMouseDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xFD15D4", Offset = "0xFD15D4", VA = "0xFD15D4")]
		public static bool LockMouseDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xFD15E0", Offset = "0xFD15E0", VA = "0xFD15E0")]
		public static bool GetNextModeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xFD16BC", Offset = "0xFD16BC", VA = "0xFD16BC")]
		public static bool GetToggleThirdPerson()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xFD1798", Offset = "0xFD1798", VA = "0xFD1798")]
		public static bool GetToggleSpectatorSettings()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xFD1870", Offset = "0xFD1870", VA = "0xFD1870")]
		public static bool GetToggleSpectatorNoClip()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xFD194C", Offset = "0xFD194C", VA = "0xFD194C")]
		public static bool GetToggleSpectatorFollowOnKill()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xFD1A28", Offset = "0xFD1A28", VA = "0xFD1A28")]
		public static bool GetNextTargetDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xFD1B04", Offset = "0xFD1B04", VA = "0xFD1B04")]
		public static bool GetPreviousTargetDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xFD1BDC", Offset = "0xFD1BDC", VA = "0xFD1BDC")]
		public static bool GetReadyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xFD1CB8", Offset = "0xFD1CB8", VA = "0xFD1CB8")]
		public static bool GetSelectPlayerKeyDown(out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xFD1EBC", Offset = "0xFD1EBC", VA = "0xFD1EBC")]
		public static bool GetStaticCameraKeyDown(out int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CB")]
	[Flags]
	public enum KeyModifiers
	{
		[Token(Token = "0x4001699")]
		None = 0,
		[Token(Token = "0x400169A")]
		Ctrl = 1,
		[Token(Token = "0x400169B")]
		Alt = 2,
		[Token(Token = "0x400169C")]
		Shift = 4
	}
	[Serializable]
	[Token(Token = "0x20003CC")]
	public struct KeyGroup
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private KeyModifiers _modifiers;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private KeyCode _button;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int _axis;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private int _direction;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _axisIsDown;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly KeyGroup Empty;

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xFCE5C4", Offset = "0xFCE5C4", VA = "0xFCE5C4")]
		public KeyGroup(KeyCode button, KeyModifiers modifiers = KeyModifiers.None)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xFCE450", Offset = "0xFCE450", VA = "0xFCE450")]
		public KeyGroup(int axis, int direction)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xFD21A4", Offset = "0xFD21A4", VA = "0xFD21A4")]
		public static bool HasFlagFast(KeyModifiers value, KeyModifiers flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xFD21B0", Offset = "0xFD21B0", VA = "0xFD21B0")]
		private bool HasCorrectModifiers()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xFD22C0", Offset = "0xFD22C0", VA = "0xFD22C0")]
		private float GetAxis()
		{
			return default(float);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xFD2350", Offset = "0xFD2350", VA = "0xFD2350")]
		private bool GetAxisButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xFD2394", Offset = "0xFD2394", VA = "0xFD2394")]
		public bool Get()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xFD2408", Offset = "0xFD2408", VA = "0xFD2408")]
		public bool GetDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xFD2484", Offset = "0xFD2484", VA = "0xFD2484")]
		public bool GetUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xFD2504", Offset = "0xFD2504", VA = "0xFD2504")]
		public string LocalizedName()
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xFD2740", Offset = "0xFD2740", VA = "0xFD2740")]
		public float GetAsFloat()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public struct SpectatorKeyBind
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private KeyGroup _button;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private KeyGroup _altButton;

		[Token(Token = "0x170002F0")]
		public KeyGroup Button
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xFD27C8", Offset = "0xFD27C8", VA = "0xFD27C8")]
			get
			{
				return default(KeyGroup);
			}
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xFD27DC", Offset = "0xFD27DC", VA = "0xFD27DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public KeyGroup AltButton
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xFD27F0", Offset = "0xFD27F0", VA = "0xFD27F0")]
			get
			{
				return default(KeyGroup);
			}
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xFD2804", Offset = "0xFD2804", VA = "0xFD2804")]
			set
			{
			}
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xFD2818", Offset = "0xFD2818", VA = "0xFD2818")]
		public SpectatorKeyBind(KeyGroup button, KeyGroup altButton)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xFD13C4", Offset = "0xFD13C4", VA = "0xFD13C4")]
		public bool Get()
		{
			return default(bool);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xFD14C4", Offset = "0xFD14C4", VA = "0xFD14C4")]
		public bool GetDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xFD283C", Offset = "0xFD283C", VA = "0xFD283C")]
		public bool GetUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xFD0F58", Offset = "0xFD0F58", VA = "0xFD0F58")]
		public float GetAsFloat()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	public class SpectatorKeybinds
	{
		[Token(Token = "0x20003CF")]
		private static class ButtonActionID
		{
			[Token(Token = "0x40016A8")]
			public const int MoveForwards = 0;

			[Token(Token = "0x40016A9")]
			public const int MoveBackwards = 1;

			[Token(Token = "0x40016AA")]
			public const int MoveLeft = 2;

			[Token(Token = "0x40016AB")]
			public const int MoveRight = 3;

			[Token(Token = "0x40016AC")]
			public const int MoveUp = 4;

			[Token(Token = "0x40016AD")]
			public const int MoveDown = 5;

			[Token(Token = "0x40016AE")]
			public const int LookUp = 6;

			[Token(Token = "0x40016AF")]
			public const int LookDown = 7;

			[Token(Token = "0x40016B0")]
			public const int LookLeft = 8;

			[Token(Token = "0x40016B1")]
			public const int LookRight = 9;

			[Token(Token = "0x40016B2")]
			public const int Boost = 10;

			[Token(Token = "0x40016B3")]
			public const int RingLight = 11;

			[Token(Token = "0x40016B4")]
			public const int HideUI = 12;

			[Token(Token = "0x40016B5")]
			public const int ToggleMenu = 13;

			[Token(Token = "0x40016B6")]
			public const int ToggleSpectatorMenu = 14;

			[Token(Token = "0x40016B7")]
			public const int NextPlayer = 15;

			[Token(Token = "0x40016B8")]
			public const int PreviousPlayer = 16;

			[Token(Token = "0x40016B9")]
			public const int SelectPlayer1 = 17;

			[Token(Token = "0x40016BA")]
			public const int SelectPlayer2 = 18;

			[Token(Token = "0x40016BB")]
			public const int SelectPlayer3 = 19;

			[Token(Token = "0x40016BC")]
			public const int SelectPlayer4 = 20;

			[Token(Token = "0x40016BD")]
			public const int SelectPlayer5 = 21;

			[Token(Token = "0x40016BE")]
			public const int SelectPlayer6 = 22;

			[Token(Token = "0x40016BF")]
			public const int SelectPlayer7 = 23;

			[Token(Token = "0x40016C0")]
			public const int SelectPlayer8 = 24;

			[Token(Token = "0x40016C1")]
			public const int SelectPlayer9 = 25;

			[Token(Token = "0x40016C2")]
			public const int SelectPlayer10 = 26;

			[Token(Token = "0x40016C3")]
			public const int ToggleFollowMode = 27;

			[Token(Token = "0x40016C4")]
			public const int ToggleThirdPerson = 28;

			[Token(Token = "0x40016C5")]
			public const int ToggleNoClip = 29;

			[Token(Token = "0x40016C6")]
			public const int ToggleFollowOnKill = 30;

			[Token(Token = "0x40016C7")]
			public const int SelectStaticPosition1 = 31;

			[Token(Token = "0x40016C8")]
			public const int SelectStaticPosition2 = 32;

			[Token(Token = "0x40016C9")]
			public const int SelectStaticPosition3 = 33;

			[Token(Token = "0x40016CA")]
			public const int SelectStaticPosition4 = 34;

			[Token(Token = "0x40016CB")]
			public const int SelectStaticPosition5 = 35;

			[Token(Token = "0x40016CC")]
			public const int SelectStaticPosition6 = 36;

			[Token(Token = "0x40016CD")]
			public const int SelectStaticPosition7 = 37;

			[Token(Token = "0x40016CE")]
			public const int SelectStaticPosition8 = 38;

			[Token(Token = "0x40016CF")]
			public const int SelectStaticPosition9 = 39;

			[Token(Token = "0x40016D0")]
			public const int SelectStaticPosition10 = 40;

			[Token(Token = "0x40016D1")]
			public const int Count = 41;
		}

		[Token(Token = "0x20003D0")]
		private static class Axis2DActionID
		{
			[Token(Token = "0x40016D2")]
			public const int Movement = 0;

			[Token(Token = "0x40016D3")]
			public const int SmoothTurn = 1;

			[Token(Token = "0x40016D4")]
			public const int Count = 2;
		}

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] ButtonActionIDSelectPlayers;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] _buttonActionIDStaticPosition;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SpectatorKeyBind[] _buttons;

		[Token(Token = "0x170002F2")]
		public SpectatorKeyBind[] Buttons
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0xFD2864", Offset = "0xFD2864", VA = "0xFD2864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public SpectatorKeyBind MoveForwards
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xFD0FB8", Offset = "0xFD0FB8", VA = "0xFD0FB8")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F4")]
		public SpectatorKeyBind MoveBackwards
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xFD0FEC", Offset = "0xFD0FEC", VA = "0xFD0FEC")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F5")]
		public SpectatorKeyBind MoveLeft
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xFD0F80", Offset = "0xFD0F80", VA = "0xFD0F80")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F6")]
		public SpectatorKeyBind MoveRight
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xFD0F1C", Offset = "0xFD0F1C", VA = "0xFD0F1C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F7")]
		public SpectatorKeyBind MoveUp
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xFD1028", Offset = "0xFD1028", VA = "0xFD1028")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F8")]
		public SpectatorKeyBind MoveDown
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xFD1060", Offset = "0xFD1060", VA = "0xFD1060")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002F9")]
		public SpectatorKeyBind LookLeft
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xFD1204", Offset = "0xFD1204", VA = "0xFD1204")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FA")]
		public SpectatorKeyBind LookRight
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xFD123C", Offset = "0xFD123C", VA = "0xFD123C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FB")]
		public SpectatorKeyBind LookUp
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xFD1278", Offset = "0xFD1278", VA = "0xFD1278")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FC")]
		public SpectatorKeyBind LookDown
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xFD12B0", Offset = "0xFD12B0", VA = "0xFD12B0")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FD")]
		public SpectatorKeyBind HideUI
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xFD148C", Offset = "0xFD148C", VA = "0xFD148C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FE")]
		public SpectatorKeyBind ToggleMenu
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xFD158C", Offset = "0xFD158C", VA = "0xFD158C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x170002FF")]
		public SpectatorKeyBind ToggleHiddenMenu
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xFD1838", Offset = "0xFD1838", VA = "0xFD1838")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000300")]
		public SpectatorKeyBind Boost
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xFD138C", Offset = "0xFD138C", VA = "0xFD138C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000301")]
		public SpectatorKeyBind RingLight
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0xFD1C7C", Offset = "0xFD1C7C", VA = "0xFD1C7C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000302")]
		public SpectatorKeyBind NextPlayer
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xFD1AC8", Offset = "0xFD1AC8", VA = "0xFD1AC8")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000303")]
		public SpectatorKeyBind PreviousPlayer
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xFD1BA4", Offset = "0xFD1BA4", VA = "0xFD1BA4")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000304")]
		public SpectatorKeyBind ToggleFollowMode
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xFD1680", Offset = "0xFD1680", VA = "0xFD1680")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000305")]
		public SpectatorKeyBind ToggleThirdPerson
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xFD175C", Offset = "0xFD175C", VA = "0xFD175C")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000306")]
		public SpectatorKeyBind ToggleNoClip
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xFD1910", Offset = "0xFD1910", VA = "0xFD1910")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x17000307")]
		public SpectatorKeyBind ToggleOnKill
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xFD19EC", Offset = "0xFD19EC", VA = "0xFD19EC")]
			get
			{
				return default(SpectatorKeyBind);
			}
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xFD1D84", Offset = "0xFD1D84", VA = "0xFD1D84")]
		public bool GetSelectPlayer(int index, out SpectatorKeyBind btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xFD1F88", Offset = "0xFD1F88", VA = "0xFD1F88")]
		public bool GetStaticPosition(int index, out SpectatorKeyBind btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xFD286C", Offset = "0xFD286C", VA = "0xFD286C")]
		public void Save()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xFCD4D4", Offset = "0xFCD4D4", VA = "0xFCD4D4")]
		public void Load()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xFD28C8", Offset = "0xFD28C8", VA = "0xFD28C8")]
		public void LoadDefaultKeybinds()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xFD2928", Offset = "0xFD2928", VA = "0xFD2928")]
		private static SpectatorKeyBind[] GetDefaultButtonsArray()
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xFD2140", Offset = "0xFD2140", VA = "0xFD2140")]
		public SpectatorKeybinds()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class SteamVRInputModule : InputModule
	{
		[Token(Token = "0x17000308")]
		public override bool IsUserPresent
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xFD4554", Offset = "0xFD4554", VA = "0xFD4554", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000309")]
		public override bool IsMixedRealityEnabled
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0xFD455C", Offset = "0xFD455C", VA = "0xFD455C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xFD4564", Offset = "0xFD4564", VA = "0xFD4564", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xFD45A4", Offset = "0xFD45A4", VA = "0xFD45A4", Slot = "7")]
		public override Vector3 GetMoveInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xFD45E4", Offset = "0xFD45E4", VA = "0xFD45E4", Slot = "8")]
		public override bool GetDashButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xFD4624", Offset = "0xFD4624", VA = "0xFD4624", Slot = "9")]
		public override bool GetDashButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xFD4664", Offset = "0xFD4664", VA = "0xFD4664", Slot = "10")]
		public override bool GetDashButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xFD46A4", Offset = "0xFD46A4", VA = "0xFD46A4", Slot = "11")]
		public override bool GetReloadButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xFD46E4", Offset = "0xFD46E4", VA = "0xFD46E4", Slot = "12")]
		public override bool GetReloadButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xFD4724", Offset = "0xFD4724", VA = "0xFD4724", Slot = "13")]
		public override bool GetReloadButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xFD4764", Offset = "0xFD4764", VA = "0xFD4764", Slot = "14")]
		public override bool GetDownCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xFD47A4", Offset = "0xFD47A4", VA = "0xFD47A4", Slot = "15")]
		public override bool GetCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xFD47E4", Offset = "0xFD47E4", VA = "0xFD47E4", Slot = "16")]
		public override bool GetUpCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xFD4824", Offset = "0xFD4824", VA = "0xFD4824", Slot = "17")]
		public override bool GetDownSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xFD4864", Offset = "0xFD4864", VA = "0xFD4864", Slot = "18")]
		public override bool GetSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xFD48A4", Offset = "0xFD48A4", VA = "0xFD48A4", Slot = "19")]
		public override bool GetUpSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xFD48E4", Offset = "0xFD48E4", VA = "0xFD48E4", Slot = "20")]
		public override bool GetTrigger(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xFD4924", Offset = "0xFD4924", VA = "0xFD4924", Slot = "21")]
		public override float GetTriggerAxis(Controller c)
		{
			return default(float);
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xFD4964", Offset = "0xFD4964", VA = "0xFD4964", Slot = "22")]
		public override bool GetMenuButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xFD49A4", Offset = "0xFD49A4", VA = "0xFD49A4", Slot = "23")]
		public override bool GetMenuButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xFD49E4", Offset = "0xFD49E4", VA = "0xFD49E4", Slot = "24")]
		public override bool GetRotationButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xFD4A24", Offset = "0xFD4A24", VA = "0xFD4A24", Slot = "25")]
		public override float GetSmoothRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xFD4A64", Offset = "0xFD4A64", VA = "0xFD4A64", Slot = "26")]
		public override float GetSnapRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xFD4AA4", Offset = "0xFD4AA4", VA = "0xFD4AA4", Slot = "27")]
		public override bool GetInteractUIButtonDown(Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xFD4AE4", Offset = "0xFD4AE4", VA = "0xFD4AE4", Slot = "28")]
		public override bool GetInteractUIButtonUp(Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xFD4B24", Offset = "0xFD4B24", VA = "0xFD4B24", Slot = "29")]
		public override bool GetPushToTalkButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xFD4B64", Offset = "0xFD4B64", VA = "0xFD4B64", Slot = "30")]
		public override Vector2 GetScrollAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xFD4BA4", Offset = "0xFD4BA4", VA = "0xFD4BA4", Slot = "31")]
		public override void SetHaptic(float duration, float frequency, float amplitude, Controller c)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xFD4BE4", Offset = "0xFD4BE4", VA = "0xFD4BE4", Slot = "32")]
		public override void ToggleControllerModels(bool enable)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xFD4C24", Offset = "0xFD4C24", VA = "0xFD4C24", Slot = "33")]
		public override bool GetPickupButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xFD4C64", Offset = "0xFD4C64", VA = "0xFD4C64", Slot = "34")]
		public override string GetMovementAxisName()
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xFD4CA4", Offset = "0xFD4CA4", VA = "0xFD4CA4", Slot = "35")]
		public override string GetSprintButtonName()
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xFD4CE4", Offset = "0xFD4CE4", VA = "0xFD4CE4", Slot = "36")]
		public override string GetDashButtonLeftName()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xFD4D24", Offset = "0xFD4D24", VA = "0xFD4D24", Slot = "37")]
		public override string GetDashButtonRightName()
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xFD4D64", Offset = "0xFD4D64", VA = "0xFD4D64", Slot = "38")]
		public override string GetTriggerLeftName()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xFD4DA4", Offset = "0xFD4DA4", VA = "0xFD4DA4", Slot = "39")]
		public override string GetTriggerRightName()
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xFD4DE4", Offset = "0xFD4DE4", VA = "0xFD4DE4", Slot = "40")]
		public override bool GetDropItemLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xFD4E24", Offset = "0xFD4E24", VA = "0xFD4E24", Slot = "41")]
		public override bool GetDropItemRight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xFD4E64", Offset = "0xFD4E64", VA = "0xFD4E64", Slot = "42")]
		public override void GetHandGesture(Controller controller, out bool trigger, out bool grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xFD4EA4", Offset = "0xFD4EA4", VA = "0xFD4EA4", Slot = "43")]
		public override void GetHandGesture(Controller controller, out float trigger, out float grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xFD4EE4", Offset = "0xFD4EE4", VA = "0xFD4EE4")]
		public SteamVRInputModule()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[DefaultExecutionOrder(-9999)]
	public class WaveInputModule : XRInputModule
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _leftControllerModel;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _rightControllerModel;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPaused;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isFocused;

		[Token(Token = "0x1700030A")]
		public override bool IsUserPresent
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xFD4EEC", Offset = "0xFD4EEC", VA = "0xFD4EEC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public override bool IsMixedRealityEnabled
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xFD4EF4", Offset = "0xFD4EF4", VA = "0xFD4EF4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xFD4EFC", Offset = "0xFD4EFC", VA = "0xFD4EFC", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xFD4F98", Offset = "0xFD4F98", VA = "0xFD4F98", Slot = "32")]
		public override void ToggleControllerModels(bool enable)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xFD4FDC", Offset = "0xFD4FDC", VA = "0xFD4FDC")]
		public void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xFD51E0", Offset = "0xFD51E0", VA = "0xFD51E0")]
		public void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xFD50AC", Offset = "0xFD50AC", VA = "0xFD50AC")]
		private void UpdateMicrophoneAvailability()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xFD52B0", Offset = "0xFD52B0", VA = "0xFD52B0")]
		public WaveInputModule()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[Flags]
	public enum XrButtons
	{
		[Token(Token = "0x40016DC")]
		None = 0,
		[Token(Token = "0x40016DD")]
		One = 1,
		[Token(Token = "0x40016DE")]
		Two = 2,
		[Token(Token = "0x40016DF")]
		Menu = 4,
		[Token(Token = "0x40016E0")]
		ThumbstickPress = 8,
		[Token(Token = "0x40016E1")]
		ThumbstickLeft = 0x10,
		[Token(Token = "0x40016E2")]
		ThumbstickRight = 0x20,
		[Token(Token = "0x40016E3")]
		ThumbstickUp = 0x40,
		[Token(Token = "0x40016E4")]
		ThumbstickDown = 0x80,
		[Token(Token = "0x40016E5")]
		Trigger = 0x100,
		[Token(Token = "0x40016E6")]
		Grip = 0x200
	}
	[Token(Token = "0x20003D4")]
	public enum XrAxis1D
	{
		[Token(Token = "0x40016E8")]
		None,
		[Token(Token = "0x40016E9")]
		Trigger,
		[Token(Token = "0x40016EA")]
		Grip
	}
	[Token(Token = "0x20003D5")]
	public enum XrAxis2D
	{
		[Token(Token = "0x40016EC")]
		None,
		[Token(Token = "0x40016ED")]
		Thumbstick
	}
	[Token(Token = "0x20003D6")]
	public struct ControllerState
	{
		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XrButtons _get;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private XrButtons _getDown;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private XrButtons _getUp;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float _triggerAxis;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _gripAxis;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector2 _thumbstickAxis;

		[Token(Token = "0x40016F4")]
		private const float ThumbStickButtonPressedZone = 0.75f;

		[Token(Token = "0x40016F5")]
		private const float TriggerPressedZone = 0.75f;

		[Token(Token = "0x40016F6")]
		private const float GripPressedZone = 0.75f;

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xFD5324", Offset = "0xFD5324", VA = "0xFD5324")]
		public void UpdateState(bool buttonOne, bool buttonTwo, bool buttonMenu, bool thumbstickPress, float triggerAxis, float gripAxis, Vector2 thumbstickAxis)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xFD53C0", Offset = "0xFD53C0", VA = "0xFD53C0")]
		public void ResetState()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xFD5418", Offset = "0xFD5418", VA = "0xFD5418")]
		public bool Get(XrButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xFD5428", Offset = "0xFD5428", VA = "0xFD5428")]
		public bool GetDown(XrButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xFD5438", Offset = "0xFD5438", VA = "0xFD5438")]
		public bool GetUp(XrButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xFD5448", Offset = "0xFD5448", VA = "0xFD5448")]
		public float Get(XrAxis1D axis)
		{
			return default(float);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xFD5470", Offset = "0xFD5470", VA = "0xFD5470")]
		public Vector2 Get(XrAxis2D axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xFD54CC", Offset = "0xFD54CC", VA = "0xFD54CC")]
		public XrButtons GetAnyButtonUp()
		{
			return default(XrButtons);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xFD54F4", Offset = "0xFD54F4", VA = "0xFD54F4")]
		public XrAxis2D GetAnyAxis2D()
		{
			return default(XrAxis2D);
		}
	}
	[Token(Token = "0x20003D7")]
	public static class XrInput
	{
		[Token(Token = "0x40016F7")]
		private const InputDeviceCharacteristics LeftControllerCharacteristics = InputDeviceCharacteristics.HeldInHand | InputDeviceCharacteristics.Controller | InputDeviceCharacteristics.Left;

		[Token(Token = "0x40016F8")]
		private const InputDeviceCharacteristics RightControllerCharacteristics = InputDeviceCharacteristics.HeldInHand | InputDeviceCharacteristics.Controller | InputDeviceCharacteristics.Right;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputDevice _leftInputDevice;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static InputDevice _rightInputDevice;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ControllerState[] Controllers;

		[Token(Token = "0x1700030C")]
		public static InputDevice LeftInputDevice
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xFD5514", Offset = "0xFD5514", VA = "0xFD5514")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x1700030D")]
		public static InputDevice RightInputDevice
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xFD556C", Offset = "0xFD556C", VA = "0xFD556C")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xFD55C4", Offset = "0xFD55C4", VA = "0xFD55C4")]
		private static void OnDeviceChangedOrConnected(InputDevice device)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xFD5688", Offset = "0xFD5688", VA = "0xFD5688")]
		private static void OnInputDeviceConfigChanged(InputDevice device)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xFD56EC", Offset = "0xFD56EC", VA = "0xFD56EC")]
		private static void OnInputDeviceDisconnected(InputDevice device)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xFD56F0", Offset = "0xFD56F0", VA = "0xFD56F0")]
		private static void OnInputDeviceConnected(InputDevice device)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xFD5754", Offset = "0xFD5754", VA = "0xFD5754")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xFD5984", Offset = "0xFD5984", VA = "0xFD5984")]
		public static void Destroy()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xFD5A80", Offset = "0xFD5A80", VA = "0xFD5A80")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xFD5E44", Offset = "0xFD5E44", VA = "0xFD5E44")]
		public static bool Get(XrButtons button, Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xFD5EE0", Offset = "0xFD5EE0", VA = "0xFD5EE0")]
		public static bool GetDown(XrButtons button, Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xFD5F7C", Offset = "0xFD5F7C", VA = "0xFD5F7C")]
		public static bool GetUp(XrButtons button, Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xFD6018", Offset = "0xFD6018", VA = "0xFD6018")]
		public static Vector2 Get(XrAxis2D axis, Controller controller)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xFD60E4", Offset = "0xFD60E4", VA = "0xFD60E4")]
		public static float Get(XrAxis1D axis, Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xFD61A4", Offset = "0xFD61A4", VA = "0xFD61A4")]
		public static bool GetAnyAxis2D(out XrAxis2D axis, out Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xFD62BC", Offset = "0xFD62BC", VA = "0xFD62BC")]
		public static bool GetAnyButtonUp(out XrButtons button, out Controller controller)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D8")]
	public static class XrInputHelpers
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0xFD6448", Offset = "0xFD6448", VA = "0xFD6448")]
		public static string GetLocalizedButtonName(XrButtons button, Controller controller)
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xFD64C0", Offset = "0xFD64C0", VA = "0xFD64C0")]
		public static string GetButtonLocaKey(XrButtons button, Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xFD66D0", Offset = "0xFD66D0", VA = "0xFD66D0")]
		public static string GetLocalizedControllerName(Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xFD6738", Offset = "0xFD6738", VA = "0xFD6738")]
		public static string GetControllerLocaKey(Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xFD67C0", Offset = "0xFD67C0", VA = "0xFD67C0")]
		public static string GetLocalizedAxis2DName(XrAxis2D axis)
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xFD6828", Offset = "0xFD6828", VA = "0xFD6828")]
		public static string GetAxis2DLocaKey(XrAxis2D axis)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D9")]
	[DefaultExecutionOrder(-9999)]
	public abstract class XRInputModule : InputModule
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private XrKeybinds _keybinds;

		[Token(Token = "0x1700030E")]
		public XrKeybinds Keybinds
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0xFD68AC", Offset = "0xFD68AC", VA = "0xFD68AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xFD4F38", Offset = "0xFD4F38", VA = "0xFD4F38", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xFD6988", Offset = "0xFD6988", VA = "0xFD6988", Slot = "44")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xFD69D4", Offset = "0xFD69D4", VA = "0xFD69D4", Slot = "45")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xFD6A20", Offset = "0xFD6A20", VA = "0xFD6A20", Slot = "7")]
		public override Vector3 GetMoveInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xFD6AC4", Offset = "0xFD6AC4", VA = "0xFD6AC4", Slot = "8")]
		public override bool GetDashButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xFD6BBC", Offset = "0xFD6BBC", VA = "0xFD6BBC", Slot = "9")]
		public override bool GetDashButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xFD6C5C", Offset = "0xFD6C5C", VA = "0xFD6C5C", Slot = "10")]
		public override bool GetDashButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xFD6CFC", Offset = "0xFD6CFC", VA = "0xFD6CFC", Slot = "11")]
		public override bool GetReloadButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xFD6DF4", Offset = "0xFD6DF4", VA = "0xFD6DF4", Slot = "12")]
		public override bool GetReloadButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xFD6E94", Offset = "0xFD6E94", VA = "0xFD6E94", Slot = "13")]
		public override bool GetReloadButtonUp(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xFD6F34", Offset = "0xFD6F34", VA = "0xFD6F34", Slot = "20")]
		public override bool GetTrigger(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xFD7028", Offset = "0xFD7028", VA = "0xFD7028", Slot = "21")]
		public override float GetTriggerAxis(Controller c)
		{
			return default(float);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xFD7080", Offset = "0xFD7080", VA = "0xFD7080", Slot = "24")]
		public override bool GetRotationButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xFD71C0", Offset = "0xFD71C0", VA = "0xFD71C0", Slot = "25")]
		public override float GetSmoothRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xFD7270", Offset = "0xFD7270", VA = "0xFD7270", Slot = "26")]
		public override float GetSnapRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xFD7370", Offset = "0xFD7370", VA = "0xFD7370", Slot = "14")]
		public override bool GetDownCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xFD7420", Offset = "0xFD7420", VA = "0xFD7420", Slot = "15")]
		public override bool GetCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xFD74A4", Offset = "0xFD74A4", VA = "0xFD74A4", Slot = "16")]
		public override bool GetUpCrouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xFD7528", Offset = "0xFD7528", VA = "0xFD7528", Slot = "17")]
		public override bool GetDownSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xFD75D8", Offset = "0xFD75D8", VA = "0xFD75D8", Slot = "18")]
		public override bool GetSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xFD765C", Offset = "0xFD765C", VA = "0xFD765C", Slot = "19")]
		public override bool GetUpSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xFD76E0", Offset = "0xFD76E0", VA = "0xFD76E0", Slot = "22")]
		public override bool GetMenuButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xFD7734", Offset = "0xFD7734", VA = "0xFD7734", Slot = "23")]
		public override bool GetMenuButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xFD7788", Offset = "0xFD7788", VA = "0xFD7788", Slot = "29")]
		public override bool GetPushToTalkButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xFD7838", Offset = "0xFD7838", VA = "0xFD7838", Slot = "27")]
		public override bool GetInteractUIButtonDown(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xFD7914", Offset = "0xFD7914", VA = "0xFD7914", Slot = "28")]
		public override bool GetInteractUIButtonUp(Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xFD79F0", Offset = "0xFD79F0", VA = "0xFD79F0", Slot = "30")]
		public override Vector2 GetScrollAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xFD7AF8", Offset = "0xFD7AF8", VA = "0xFD7AF8", Slot = "31")]
		public override void SetHaptic(float duration, float frequency, float amplitude, Controller c)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xFD7C64", Offset = "0xFD7C64", VA = "0xFD7C64", Slot = "33")]
		public override bool GetPickupButton(Controller c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xFD7D04", Offset = "0xFD7D04", VA = "0xFD7D04", Slot = "34")]
		public override string GetMovementAxisName()
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xFD7DCC", Offset = "0xFD7DCC", VA = "0xFD7DCC", Slot = "40")]
		public override bool GetDropItemLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xFD7E7C", Offset = "0xFD7E7C", VA = "0xFD7E7C", Slot = "41")]
		public override bool GetDropItemRight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xFD7F2C", Offset = "0xFD7F2C", VA = "0xFD7F2C", Slot = "35")]
		public override string GetSprintButtonName()
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xFD8084", Offset = "0xFD8084", VA = "0xFD8084", Slot = "36")]
		public override string GetDashButtonLeftName()
		{
			return null;
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xFD80A4", Offset = "0xFD80A4", VA = "0xFD80A4", Slot = "37")]
		public override string GetDashButtonRightName()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xFD80C4", Offset = "0xFD80C4", VA = "0xFD80C4", Slot = "38")]
		public override string GetTriggerLeftName()
		{
			return null;
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xFD80E4", Offset = "0xFD80E4", VA = "0xFD80E4", Slot = "39")]
		public override string GetTriggerRightName()
		{
			return null;
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xFD7F4C", Offset = "0xFD7F4C", VA = "0xFD7F4C")]
		private string GetButtonName(XrButtonBind keybind)
		{
			return null;
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xFD8104", Offset = "0xFD8104", VA = "0xFD8104", Slot = "42")]
		public override void GetHandGesture(Controller controller, out bool trigger, out bool grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xFD81C4", Offset = "0xFD81C4", VA = "0xFD81C4", Slot = "43")]
		public override void GetHandGesture(Controller controller, out float trigger, out float grip, out bool thumbDown)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xFD52B4", Offset = "0xFD52B4", VA = "0xFD52B4")]
		protected XRInputModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	public struct XrButtonBind
	{
		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Controller _controller;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private XrButtons _button;

		[Token(Token = "0x1700030F")]
		public Controller Controller
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xFD82F4", Offset = "0xFD82F4", VA = "0xFD82F4")]
			get
			{
				return default(Controller);
			}
		}

		[Token(Token = "0x17000310")]
		public XrButtons Button
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xFD82FC", Offset = "0xFD82FC", VA = "0xFD82FC")]
			get
			{
				return default(XrButtons);
			}
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xFD8304", Offset = "0xFD8304", VA = "0xFD8304")]
		public XrButtonBind(XrButtons button, Controller controller)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DB")]
	public struct XrAxis2DBind
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Controller _controller;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private XrAxis2D _axis2D;

		[Token(Token = "0x17000311")]
		public Controller Controller
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xFD830C", Offset = "0xFD830C", VA = "0xFD830C")]
			get
			{
				return default(Controller);
			}
		}

		[Token(Token = "0x17000312")]
		public XrAxis2D Axis2D
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xFD8314", Offset = "0xFD8314", VA = "0xFD8314")]
			get
			{
				return default(XrAxis2D);
			}
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xFD831C", Offset = "0xFD831C", VA = "0xFD831C")]
		public XrAxis2DBind(XrAxis2D axis, Controller controller)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public struct XrAxis1DBind
	{
		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Controller _controller;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private XrAxis1D _axis1D;

		[Token(Token = "0x17000313")]
		public Controller Controller
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xFD8324", Offset = "0xFD8324", VA = "0xFD8324")]
			get
			{
				return default(Controller);
			}
		}

		[Token(Token = "0x17000314")]
		public XrAxis1D Axis1D
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xFD832C", Offset = "0xFD832C", VA = "0xFD832C")]
			get
			{
				return default(XrAxis1D);
			}
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xFD8334", Offset = "0xFD8334", VA = "0xFD8334")]
		public XrAxis1DBind(XrAxis1D axis, Controller controller)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DD")]
	public class XrKeybinds
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private XrAxis2DBind[] _axis2D;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XrButtonBind[] _buttons;

		[Token(Token = "0x17000315")]
		public XrAxis2DBind[] Axis2D
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xFD833C", Offset = "0xFD833C", VA = "0xFD833C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public XrAxis2DBind MovementAxis
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xFD6A9C", Offset = "0xFD6A9C", VA = "0xFD6A9C")]
			get
			{
				return default(XrAxis2DBind);
			}
		}

		[Token(Token = "0x17000317")]
		public XrAxis2DBind SmoothTurnAxis
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xFD7244", Offset = "0xFD7244", VA = "0xFD7244")]
			get
			{
				return default(XrAxis2DBind);
			}
		}

		[Token(Token = "0x17000318")]
		public XrButtonBind[] Buttons
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xFD8344", Offset = "0xFD8344", VA = "0xFD8344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		public XrButtonBind ShootLeft
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xFD6FD4", Offset = "0xFD6FD4", VA = "0xFD6FD4")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031A")]
		public XrButtonBind ShootRight
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xFD6FFC", Offset = "0xFD6FFC", VA = "0xFD6FFC")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031B")]
		public XrButtonBind ReloadLeft
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xFD6D9C", Offset = "0xFD6D9C", VA = "0xFD6D9C")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031C")]
		public XrButtonBind ReloadRight
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xFD6DC8", Offset = "0xFD6DC8", VA = "0xFD6DC8")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031D")]
		public XrButtonBind DashLeft
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xFD6B64", Offset = "0xFD6B64", VA = "0xFD6B64")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031E")]
		public XrButtonBind DashRight
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xFD6B90", Offset = "0xFD6B90", VA = "0xFD6B90")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x1700031F")]
		public XrButtonBind Sprint
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xFD75AC", Offset = "0xFD75AC", VA = "0xFD75AC")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000320")]
		public XrButtonBind SnapTurnLeft
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xFD7168", Offset = "0xFD7168", VA = "0xFD7168")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000321")]
		public XrButtonBind SnapTurnRight
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xFD7194", Offset = "0xFD7194", VA = "0xFD7194")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000322")]
		public XrButtonBind Crouch
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xFD73F4", Offset = "0xFD73F4", VA = "0xFD73F4")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000323")]
		public XrButtonBind PushToTalk
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xFD780C", Offset = "0xFD780C", VA = "0xFD780C")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000324")]
		public XrButtonBind DropItemLeft
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xFD7E50", Offset = "0xFD7E50", VA = "0xFD7E50")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x17000325")]
		public XrButtonBind DropItemRight
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xFD7F00", Offset = "0xFD7F00", VA = "0xFD7F00")]
			get
			{
				return default(XrButtonBind);
			}
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xFD8258", Offset = "0xFD8258", VA = "0xFD8258")]
		public XrKeybinds()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xFD834C", Offset = "0xFD834C", VA = "0xFD834C")]
		public void Save()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xFD68B4", Offset = "0xFD68B4", VA = "0xFD68B4")]
		public void Load()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xFD8404", Offset = "0xFD8404", VA = "0xFD8404")]
		private static XrButtonBind[] GetDefaultButtonsArray()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xFD83A8", Offset = "0xFD83A8", VA = "0xFD83A8")]
		public void LoadDefaultKeybinds()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xFD853C", Offset = "0xFD853C", VA = "0xFD853C")]
		public void LoadDefaultLeftHandedKeybinds()
		{
		}
	}
}
namespace HyperDash.Fps
{
	[Token(Token = "0x20003DE")]
	public class CharacterRig : MonoBehaviour
	{
		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _template;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DamageZone[] Limbs;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody[] Rigidbodies;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] Colliders;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoltHitboxBody _boltHitboxBody;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoltHitboxBody _boltHitboxBodyPumpkin;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int NormalLayer;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int RagdollLayer;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _ragdollOnAwake;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _isRagdoll;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IDamageable _owner;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _applyImpactForce;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _impactForce;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _impactPosition;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _impactRigidbody;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _applyExplosionForce;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _explosionForce;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _explosionRadius;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _lastPosition;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 _velocity;

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xFD86F4", Offset = "0xFD86F4", VA = "0xFD86F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xFD8900", Offset = "0xFD8900", VA = "0xFD8900")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xFD8B04", Offset = "0xFD8B04", VA = "0xFD8B04")]
		public void Initialize(IDamageable owner)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xFD8704", Offset = "0xFD8704", VA = "0xFD8704")]
		public void SetRagdoll(bool isRagdoll)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xFD8B7C", Offset = "0xFD8B7C", VA = "0xFD8B7C")]
		public void Impact(Vector3 position, Vector3 impactForce, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xFD8C00", Offset = "0xFD8C00", VA = "0xFD8C00")]
		public void Explosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xFD8A40", Offset = "0xFD8A40", VA = "0xFD8A40")]
		private static void ApplyImpactPhysicsForce(Rigidbody rigidbody, Vector3 impactForce)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xFD8A58", Offset = "0xFD8A58", VA = "0xFD8A58")]
		private static void ApplyExplosionForce(ref Rigidbody[] rigidbodies, Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xFD8C64", Offset = "0xFD8C64", VA = "0xFD8C64")]
		public CharacterRig()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class DamageZone : MonoBehaviour
	{
		[Token(Token = "0x20003E0")]
		public enum ZoneTypes
		{
			[Token(Token = "0x4001720")]
			Generic,
			[Token(Token = "0x4001721")]
			Head,
			[Token(Token = "0x4001722")]
			Chest,
			[Token(Token = "0x4001723")]
			LeftUpperArm,
			[Token(Token = "0x4001724")]
			LeftUpperLeg,
			[Token(Token = "0x4001725")]
			RightUpperArm,
			[Token(Token = "0x4001726")]
			RightUpperLeg,
			[Token(Token = "0x4001727")]
			LeftLowerArm,
			[Token(Token = "0x4001728")]
			LeftLowerLeg,
			[Token(Token = "0x4001729")]
			RightLowerArm,
			[Token(Token = "0x400172A")]
			RightLowerLeg,
			[Token(Token = "0x400172B")]
			Count
		}

		[Token(Token = "0x20003E1")]
		public enum SurfaceTypes
		{
			[Token(Token = "0x400172D")]
			Generic,
			[Token(Token = "0x400172E")]
			Metal,
			[Token(Token = "0x400172F")]
			Flesh,
			[Token(Token = "0x4001730")]
			Wood,
			[Token(Token = "0x4001731")]
			Water,
			[Token(Token = "0x4001732")]
			Glass,
			[Token(Token = "0x4001733")]
			Shield,
			[Token(Token = "0x4001734")]
			None
		}

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ZoneTypes _zoneType;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SurfaceTypes _surfaceType;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isDynamic;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody RagdollRigidbody;

		[Token(Token = "0x17000326")]
		public ZoneTypes ZoneType
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xFD8C74", Offset = "0xFD8C74", VA = "0xFD8C74")]
			get
			{
				return default(ZoneTypes);
			}
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xFD8C7C", Offset = "0xFD8C7C", VA = "0xFD8C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public SurfaceTypes SurfaceType
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xFD8C84", Offset = "0xFD8C84", VA = "0xFD8C84")]
			get
			{
				return default(SurfaceTypes);
			}
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xFD8C8C", Offset = "0xFD8C8C", VA = "0xFD8C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public IDamageable Actor
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xFD8C94", Offset = "0xFD8C94", VA = "0xFD8C94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xFD8C9C", Offset = "0xFD8C9C", VA = "0xFD8C9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public bool IsDynamic
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xFD8CA4", Offset = "0xFD8CA4", VA = "0xFD8CA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xFD8CAC", Offset = "0xFD8CAC", VA = "0xFD8CAC")]
			set
			{
			}
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xFD8CB8", Offset = "0xFD8CB8", VA = "0xFD8CB8")]
		public void Damage(HitData hitData)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xFD8D9C", Offset = "0xFD8D9C", VA = "0xFD8D9C")]
		public DamageZone()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[BoltGlobalBehaviour]
	public class EffectReciever : GlobalEventListener
	{
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xFD8DA4", Offset = "0xFD8DA4", VA = "0xFD8DA4", Slot = "96")]
		public override void OnEvent(SpawnEffectEvent evnt)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xFD95F0", Offset = "0xFD95F0", VA = "0xFD95F0", Slot = "142")]
		public override void OnEvent(SpawnLifeOrbsEvent evnt)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xFD9828", Offset = "0xFD9828", VA = "0xFD9828", Slot = "98")]
		public override void OnEvent(SpawnProjectileEvent evnt)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xFD9A64", Offset = "0xFD9A64", VA = "0xFD9A64", Slot = "141")]
		public override void OnEvent(SpawnBounceProjectileEvent evnt)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xFD9B64", Offset = "0xFD9B64", VA = "0xFD9B64", Slot = "101")]
		public override void OnEvent(SpawnDashEffectEvent evnt)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xFD9EA8", Offset = "0xFD9EA8", VA = "0xFD9EA8", Slot = "112")]
		public override void OnEvent(SpawnHitMarkerEvent evnt)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xFDA154", Offset = "0xFDA154", VA = "0xFDA154")]
		public EffectReciever()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public static class EffectSender
	{
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xFDA21C", Offset = "0xFDA21C", VA = "0xFDA21C")]
		public static void SendSpawnDashEffectEvent(int playerID, int teamID, Vector3 start, Vector3 controlPoint, Vector3 end, float dashTime)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xFDA31C", Offset = "0xFDA31C", VA = "0xFDA31C")]
		public static void SendSpawnProjectileEvent(BoltEntity shooter, ProjectileEffects projectileEffect, Vector3 muzzlePosition, Vector3 muzzleDirection, float muzzleSpeed, int playerID = -1)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xFDA884", Offset = "0xFDA884", VA = "0xFDA884")]
		public static void SendSpawnEffectEvent(Effects effect, Vector3 position, Vector3 eulerAngles, bool isDynamicObject)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public enum Effects
	{
		[Token(Token = "0x4001738")]
		None = 0,
		[Token(Token = "0x4001739")]
		GenericImpact = 1,
		[Token(Token = "0x400173A")]
		MetalImpact = 2,
		[Token(Token = "0x400173B")]
		HitMarker = 6,
		[Token(Token = "0x400173C")]
		PistolShotFx = 7,
		[Token(Token = "0x400173D")]
		PistolEmpty = 8,
		[Token(Token = "0x400173E")]
		SMGShotFx = 9,
		[Token(Token = "0x400173F")]
		ChargedPistomShotFx = 10,
		[Token(Token = "0x4001740")]
		ImpactShield = 11,
		[Token(Token = "0x4001741")]
		Explosion = 12,
		[Token(Token = "0x4001742")]
		RockerLauncherShotFx = 13,
		[Token(Token = "0x4001743")]
		HitMarkerHeadshot = 14,
		[Token(Token = "0x4001744")]
		ReloadPistol = 15,
		[Token(Token = "0x4001745")]
		ReloadSmg = 16,
		[Token(Token = "0x4001746")]
		ReloadRocketLauncher = 17,
		[Token(Token = "0x4001747")]
		KillMarker = 18,
		[Token(Token = "0x4001748")]
		KillMarkerHeadshot = 19,
		[Token(Token = "0x4001749")]
		ConfettiShotFx = 20,
		[Token(Token = "0x400174A")]
		LandOnRailSfx = 21,
		[Token(Token = "0x400174B")]
		PickupHealthSfx = 22,
		[Token(Token = "0x400174C")]
		PickupDashSfx = 23,
		[Token(Token = "0x400174D")]
		ShotgunShotFx = 24,
		[Token(Token = "0x400174E")]
		BurstRifleShotFx = 25,
		[Token(Token = "0x400174F")]
		DashErrorSfx = 26,
		[Token(Token = "0x4001750")]
		DashRecharge1Sfx = 27,
		[Token(Token = "0x4001751")]
		DashRecharge2Sfx = 28,
		[Token(Token = "0x4001752")]
		DashRecharge3Sfx = 29,
		[Token(Token = "0x4001753")]
		DashRecharge4Sfx = 30,
		[Token(Token = "0x4001754")]
		DashRecharge5Sfx = 31,
		[Token(Token = "0x4001755")]
		SniperShotFx = 32,
		[Token(Token = "0x4001756")]
		BuzzerSfx = 33,
		[Token(Token = "0x4001757")]
		ShockShotFx = 34,
		[Token(Token = "0x4001758")]
		ShockExplosion = 35,
		[Token(Token = "0x4001759")]
		ShockChargedShotFx = 36,
		[Token(Token = "0x400175A")]
		WaterSplash = 37,
		[Token(Token = "0x400175B")]
		ButtonSfx = 38,
		[Token(Token = "0x400175C")]
		RespawnFx = 39,
		[Token(Token = "0x400175D")]
		InstaGibShotFx = 40,
		[Token(Token = "0x400175E")]
		DebugHitServer = 41,
		[Token(Token = "0x400175F")]
		DebugHitClient = 42,
		[Token(Token = "0x4001760")]
		PickupArmorSfx = 43,
		[Token(Token = "0x4001761")]
		FistBumpFx = 44,
		[Token(Token = "0x4001762")]
		HighFiveFx = 45,
		[Token(Token = "0x4001763")]
		ArmorBreakFx = 46,
		[Token(Token = "0x4001764")]
		LifeOrb = 47,
		[Token(Token = "0x4001765")]
		ConfettiShotHalloweenFx = 48,
		[Token(Token = "0x4001766")]
		LifeOrbSfx = 49,
		[Token(Token = "0x4001767")]
		ConfettiShotWinterFx = 50,
		[Token(Token = "0x4001768")]
		GlassImpact = 51
	}
	[Token(Token = "0x20003E6")]
	public enum ProjectileEffects
	{
		[Token(Token = "0x400176A")]
		None,
		[Token(Token = "0x400176B")]
		DefaultProjectile,
		[Token(Token = "0x400176C")]
		LaserBounceProjectile,
		[Token(Token = "0x400176D")]
		SMGProjectile,
		[Token(Token = "0x400176E")]
		ShotgunProjectile,
		[Token(Token = "0x400176F")]
		SniperProjectile,
		[Token(Token = "0x4001770")]
		ShockProjectile,
		[Token(Token = "0x4001771")]
		AltShockProjectile,
		[Token(Token = "0x4001772")]
		InstaGibProjectileRed,
		[Token(Token = "0x4001773")]
		InstaGibProjectileBlue
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	public class EffectPool
	{
		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject[] _effectPrefabs;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxSpawnDistance;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _maxDistanceSq;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _lifeSpan;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isProjectile;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _projectileForce;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _projectileSpawnImpactFX;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _scale;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject[] _pool;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] _time;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] _decay;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] _projectileIsActive;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] _frame;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] _velocity;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] _position;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] _gravity;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IDamageable[] _ignoreActor;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _nextId;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MaxDistanceFactor;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float PoolSizeFactor;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Vector3 EffectCullingPosition;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static Vector3 EffectCullingForward;

		[Token(Token = "0x1700032A")]
		public GameObject[] Pool
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xFDA940", Offset = "0xFDA940", VA = "0xFDA940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public int DEBUG_EffectsCulled
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xFDBA5C", Offset = "0xFDBA5C", VA = "0xFDBA5C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xFDBA64", Offset = "0xFDBA64", VA = "0xFDBA64")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public int DEBUG_EffectsPlayed
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xFDBA6C", Offset = "0xFDBA6C", VA = "0xFDBA6C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xFDBA74", Offset = "0xFDBA74", VA = "0xFDBA74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public int DEBUG_PoolUsed
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xFDBA7C", Offset = "0xFDBA7C", VA = "0xFDBA7C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xFDBA84", Offset = "0xFDBA84", VA = "0xFDBA84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public int DEBUG_MaxPoolUsed
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0xFDBA8C", Offset = "0xFDBA8C", VA = "0xFDBA8C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xFDBA94", Offset = "0xFDBA94", VA = "0xFDBA94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xFDA948", Offset = "0xFDA948", VA = "0xFDA948")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xFDB3E0", Offset = "0xFDB3E0", VA = "0xFDB3E0")]
		public void Update()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xFDB49C", Offset = "0xFDB49C", VA = "0xFDB49C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xFDB654", Offset = "0xFDB654", VA = "0xFDB654")]
		public void Allocate(Transform parent)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xFDBA9C", Offset = "0xFDBA9C", VA = "0xFDBA9C")]
		public GameObject Spawn(Vector3 position, Quaternion rotation, [Optional] Transform anchor)
		{
			return null;
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xFDBCDC", Offset = "0xFDBCDC", VA = "0xFDBCDC")]
		public void SpawnProjectile(Vector3 position, Vector3 velocity, float gravity, int playerID, int frame, float decayTime = 0f)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xFDB3F0", Offset = "0xFDB3F0", VA = "0xFDB3F0")]
		private void UpdateLifeSpan()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xFDA958", Offset = "0xFDA958", VA = "0xFDA958")]
		private void UpdateProjectilesFixed()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xFDB514", Offset = "0xFDB514", VA = "0xFDB514")]
		public void ExtrapolateProjectiles()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xFDC89C", Offset = "0xFDC89C", VA = "0xFDC89C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xFDC96C", Offset = "0xFDC96C", VA = "0xFDC96C")]
		public EffectPool()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[DefaultExecutionOrder(10002)]
	public class EffectSpawner : MonoBehaviour
	{
		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Projectiles")]
		private EffectPool _defaultProjectile;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EffectPool _laserBounceProjectile;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EffectPool _smgProjectile;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EffectPool _shotgunProjectile;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EffectPool _sniperProjectile;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EffectPool _sniperTrail;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EffectPool _shockProjectile;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EffectPool _altShockProjectile;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EffectPool _instaGibProjectile;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EffectPool _instaGibProjectileBlue;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[Header("Effects")]
		private EffectPool _genericImpact;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private EffectPool _metalImpact;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private EffectPool _glassImpact;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private EffectPool _bulletHoleGeneric;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private EffectPool _bulletHoleGlass;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private EffectPool _bulletShield;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private EffectPool _hitMarker;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private EffectPool _hitMarkerHeadshot;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private EffectPool _killMarker;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private EffectPool _killMarkerHeadshot;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private EffectPool _muzzleFlash;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private EffectPool _muzzleFlashSmg;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private EffectPool _muzzleFlashShotGun;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private EffectPool _muzzleFlashShotGunSparks;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private EffectPool _muzzleFlashBurstRifle;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private EffectPool _impactFlash;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private EffectPool _sfxGenericImpact;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private EffectPool _sfxMetalImpact;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private EffectPool _sfxGlassImpact;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private EffectPool _sfxShieldImpact;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private EffectPool _sfxHitMarker;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private EffectPool _explosion;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private EffectPool _shockExplosion;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private EffectPool _sfxPistolShot;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private EffectPool _sfxChargedPistolShot;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private EffectPool _sfxSniperShot;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private EffectPool _sfxShockShot;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private EffectPool _sfxShockChargedShot;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private EffectPool _sfxPistolEmpty;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private EffectPool _sfxSMGShot;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private EffectPool _sfxRocketLauncherShot;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private EffectPool _sfxBurstRifleShot;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private EffectPool _sfxShotgunShot;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private EffectPool _reloadPistol;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private EffectPool _reloadSmg;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private EffectPool _reloadRocket;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private EffectPool _confettiShotFx;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private EffectPool _confettiShotHalloweenFx;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private EffectPool _confettiShotWinterFx;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private EffectPool _landOnRailSfx;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private EffectPool _pickupHealthSfx;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private EffectPool _pickupArmorSfx;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private EffectPool _pickupDashSfx;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private EffectPool _sfxDashError;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private EffectPool _sfxDashRecharge1;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private EffectPool _sfxDashRecharge2;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private EffectPool _sfxDashRecharge3;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private EffectPool _sfxDashRecharge4;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private EffectPool _sfxDashRecharge5;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private EffectPool _sfxBuzzer;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private EffectPool _watersplash;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private EffectPool _sfxButton;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private EffectPool _respawnFx;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private EffectPool _fistbumpFx;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private EffectPool _highFiveFx;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private EffectPool _armorBreakFx;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private EffectPool _LifeOrbFx;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private EffectPool _LifeOrbSfx;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[Header("Dash Fx")]
		private EffectPool _blueDashTrail;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private EffectPool _redDashTrail;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[Header("Debug Fx")]
		[SerializeField]
		private EffectPool _serverHitFx;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private EffectPool _clientHitFx;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Collider[] _weaponForceResults;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private List<Rigidbody> _tempRigidbodies;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Collider[] _tempColliders;

		[Token(Token = "0x1700032F")]
		public static EffectSpawner Instance
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xFDC9E4", Offset = "0xFDC9E4", VA = "0xFDC9E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xFDCA2C", Offset = "0xFDCA2C", VA = "0xFDCA2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public List<EffectPool> EffectPools
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xFDCA84", Offset = "0xFDCA84", VA = "0xFDCA84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xFDCA8C", Offset = "0xFDCA8C", VA = "0xFDCA8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xFDCFA0", Offset = "0xFDCFA0", VA = "0xFDCFA0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xFDD044", Offset = "0xFDD044", VA = "0xFDD044")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xFDD0D4", Offset = "0xFDD0D4", VA = "0xFDD0D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xFDD164", Offset = "0xFDD164", VA = "0xFDD164")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xFDCED4", Offset = "0xFDCED4", VA = "0xFDCED4")]
		private void InitPool(EffectPool pool)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xFDD1EC", Offset = "0xFDD1EC", VA = "0xFDD1EC")]
		private void PhysicsExplosion(Vector3 position, float radius, float force)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xFD8E88", Offset = "0xFD8E88", VA = "0xFD8E88")]
		public void ClientSpawnEffect(Effects effect, Vector3 position, Vector3 eulerAngles, bool isDynamicObject, [Optional] Transform anchor)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xFD9C94", Offset = "0xFD9C94", VA = "0xFD9C94")]
		public void ClientSpawnDashEffect(int playerID, int team, Vector3 start, Vector3 controlPoint, Vector3 end, float time)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xFD9910", Offset = "0xFD9910", VA = "0xFD9910")]
		public void ClientSpawnProjectile(ProjectileEffects effect, Vector3 position, Vector3 velocity, float gravity, int playerID, int frame = 0)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xFDD3DC", Offset = "0xFDD3DC", VA = "0xFDD3DC")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xFDD3E0", Offset = "0xFDD3E0", VA = "0xFDD3E0")]
		private void ResetEffectPools()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xFDC7D0", Offset = "0xFDC7D0", VA = "0xFDC7D0")]
		internal void ClientSpawnImpactEffect(DamageZone.ZoneTypes zoneType, DamageZone.SurfaceTypes surfaceType, Vector3 impactPoint, Vector3 impactNormal, bool isDynamic)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xFDD468", Offset = "0xFDD468", VA = "0xFDD468")]
		public EffectSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public struct ExplosionData
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Effects ExplosionFx;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float InnerRadius;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float OuterRadius;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float InnerDamage;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float OuterDamage;

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xFDD598", Offset = "0xFDD598", VA = "0xFDD598")]
		public ExplosionData(Effects explosionFx, float innerRadius, float outerRadius, float innerDamage, float outerDamage)
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public struct HitData
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProjectileTrajectory ProjectileTrajectory;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 ShotDirection;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool UseHeadshotEffect;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float Damage;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsHeadshot;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int ShooterID;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int ShooterTeamID;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public WeaponTypes WeaponType;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ProjectileTypes ProjectileType;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int Frame;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 HitmarkerPosition;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 HitCameraFxPosition;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 HitBHapticsPosition;
	}
	[Token(Token = "0x20003EB")]
	public interface IDamageable
	{
		[Token(Token = "0x17000331")]
		bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x6001907")]
			get;
			[Token(Token = "0x6001908")]
			set;
		}

		[Token(Token = "0x6001904")]
		void Damage(DamageZone damageZone, HitData hitData);

		[Token(Token = "0x6001905")]
		void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody);

		[Token(Token = "0x6001906")]
		void LocalExplosion(Vector3 position, float force, float radius);
	}
	[Token(Token = "0x20003EC")]
	[CreateAssetMenu(fileName = "ProjectileData", menuName = "Weapons/ProjectileData", order = 1)]
	public class ProjectileData : ScriptableObject
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectileTypes Type;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Damage")]
		public float DamageAmount;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HeadshotDamageAmount;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Damage falloff")]
		public int FalloffStartDistance;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FalloffEndDistance;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int FalloffStartBounce;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FalloffEndBounce;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float FalloffDamageAmount;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float FalloffHeadshotDamageAmount;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Movement")]
		public float MaxDistance;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Speed;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Gravity;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int Bounces;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("Effects")]
		public ProjectileEffects projectileEffect;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool UseHeadshotEffect;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[Header("Explosions")]
		public bool ExplodeOnImpact;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ExplosionData ExplosionData;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xFDD5A8", Offset = "0xFDD5A8", VA = "0xFDD5A8")]
		public ProjectileData()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class ProjectileMeta
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable Ignore;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectileData Data;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TeamID;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int PlayerID;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RemainingBounces;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WeaponTypes WeaponType;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ProjectileTrajectory Trajectory;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xFDD5C8", Offset = "0xFDD5C8", VA = "0xFDD5C8")]
		public ProjectileMeta()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public struct ClientRaycastOut
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Point;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Normal;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Distance;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageZone DamageZone;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider Collider;
	}
	[Token(Token = "0x20003EF")]
	[DefaultExecutionOrder(10003)]
	public class ProjectileManager : MonoBehaviour
	{
		[Token(Token = "0x20003F0")]
		private class Projectile
		{
			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int CmdServerFrame;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 Position;

			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 Velocity;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float Gravity;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float RemainingDistance;

			[Token(Token = "0x6001918")]
			[Address(RVA = "0xFDD8DC", Offset = "0xFDD8DC", VA = "0xFDD8DC")]
			public Projectile()
			{
			}
		}

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask _projectileCollisionMask;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask _fxProjectileCollisionMask;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask _explosionMask;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask _explosionBlockers;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _nextProjectileId;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Projectile[] _projectiles;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProjectileMeta[] _projectilesMeta;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit[] _raycastHits;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] _colliderCache;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int LastShotServerFrame;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<DamageZone> damageZones;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<IDamageable, List<DamageZone>> damagedActors;

		[Token(Token = "0x17000332")]
		public static ProjectileManager Instance
		{
			[Token(Token = "0x600190B")]
			[Address(RVA = "0xFDD5D0", Offset = "0xFDD5D0", VA = "0xFDD5D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xFDD618", Offset = "0xFDD618", VA = "0xFDD618")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public int ProjectileCollisionMask
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xFDD670", Offset = "0xFDD670", VA = "0xFDD670")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000334")]
		public int FxProjectileCollisionMask
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xFDC0C0", Offset = "0xFDC0C0", VA = "0xFDC0C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xFDD67C", Offset = "0xFDD67C", VA = "0xFDD67C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xFDD8E4", Offset = "0xFDD8E4", VA = "0xFDD8E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xFDC0CC", Offset = "0xFDC0CC", VA = "0xFDC0CC")]
		public bool ClientFxRaycast(Vector3 position, Vector3 direction, LayerMask mask, float maxDistance, IDamageable ignoreActor, out ClientRaycastOut result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xFDE830", Offset = "0xFDE830", VA = "0xFDE830")]
		public void Shoot(int cmdServerFrame, Vector3 position, Vector3 direction, IDamageable ignore, ProjectileData projectileData, WeaponTypes WeaponType, int playerID = -1, int teamID = 0, int remainingBounces = 0)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xFDD96C", Offset = "0xFDD96C", VA = "0xFDD96C")]
		private void UpdateProjectiles()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xFDE980", Offset = "0xFDE980", VA = "0xFDE980")]
		private Vector3 NormalAt(Vector3 point, BoltHitbox hitbox)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xFDEC80", Offset = "0xFDEC80", VA = "0xFDEC80")]
		private void Explosion(Vector3 position, ProjectileMeta projectileMeta)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xFDECA4", Offset = "0xFDECA4", VA = "0xFDECA4")]
		public void Explosion(Vector3 explosionCenter, float innerRadius, float outerRadius, float innerDamage, float outerDamage, ProjectileMeta projectileMeta)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xFDF678", Offset = "0xFDF678", VA = "0xFDF678")]
		public ProjectileManager()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public enum ProjectileTypes
	{
		[Token(Token = "0x400181F")]
		Generic,
		[Token(Token = "0x4001820")]
		Pistol,
		[Token(Token = "0x4001821")]
		PistolCharged,
		[Token(Token = "0x4001822")]
		Sniper,
		[Token(Token = "0x4001823")]
		Shock,
		[Token(Token = "0x4001824")]
		ShockAlt,
		[Token(Token = "0x4001825")]
		Burst,
		[Token(Token = "0x4001826")]
		Smg,
		[Token(Token = "0x4001827")]
		Rocket,
		[Token(Token = "0x4001828")]
		Shotgun,
		[Token(Token = "0x4001829")]
		Any
	}
}
namespace HyperDash.DoTween
{
	[Token(Token = "0x20003F2")]
	public static class SpriteRendererTween
	{
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xFDF800", Offset = "0xFDF800", VA = "0xFDF800")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}
	}
}
namespace HyperDash.Domination
{
	[Token(Token = "0x20003F4")]
	public class DominationAnnouncer : MonoBehaviour
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Announcer _announcer;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetMusicPlayer _musicPlayer;

		[Token(Token = "0x17000335")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xFDF9C4", Offset = "0xFDF9C4", VA = "0xFDF9C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xFDF9E0", Offset = "0xFDF9E0", VA = "0xFDF9E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xFDFA74", Offset = "0xFDFA74", VA = "0xFDFA74")]
		public void OnPreRound()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xFDFB00", Offset = "0xFDFB00", VA = "0xFDFB00")]
		public void UpdatePreround(float timeUntilStart)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xFDFB54", Offset = "0xFDFB54", VA = "0xFDFB54")]
		public void OnOvertime(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xFDFB9C", Offset = "0xFDFB9C", VA = "0xFDFB9C")]
		public void UpdateOvertime(float timeRemaining)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xFDFBBC", Offset = "0xFDFBBC", VA = "0xFDFBBC")]
		public void OnCountered()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xFDFBF4", Offset = "0xFDFBF4", VA = "0xFDFBF4")]
		public void OnPointCaptured(int point, Teams team)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xFDFCD0", Offset = "0xFDFCD0", VA = "0xFDFCD0")]
		public void OnTeamWinsRound(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xFDFE60", Offset = "0xFDFE60", VA = "0xFDFE60")]
		public void OnTeamWinsGame(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xFDFFF0", Offset = "0xFDFFF0", VA = "0xFDFFF0")]
		public void OnRoundStart(bool isMatchPoint)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xFE0020", Offset = "0xFE0020", VA = "0xFE0020")]
		public void OnOutOfTime()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xFE0110", Offset = "0xFE0110", VA = "0xFE0110")]
		public void OnStartSuddenDeath()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xFE0134", Offset = "0xFE0134", VA = "0xFE0134")]
		public DominationAnnouncer()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class DominationHudMessages : MonoBehaviour
	{
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xFE0550", Offset = "0xFE0550", VA = "0xFE0550")]
		public void OnTeamWinsGame(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xFE0604", Offset = "0xFE0604", VA = "0xFE0604")]
		public void OnTeamWinsRound(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xFE0754", Offset = "0xFE0754", VA = "0xFE0754")]
		public void OnCountered(PlayerObject player)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xFE0834", Offset = "0xFE0834", VA = "0xFE0834")]
		public void OnStartSuddenDeath()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xFE0900", Offset = "0xFE0900", VA = "0xFE0900")]
		public DominationHudMessages()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class DominationMatch : Match
	{
		[Token(Token = "0x20003FC")]
		public enum DominationMatchState
		{
			[Token(Token = "0x4001851")]
			None,
			[Token(Token = "0x4001852")]
			PreRound,
			[Token(Token = "0x4001853")]
			Round,
			[Token(Token = "0x4001854")]
			RoundOver,
			[Token(Token = "0x4001855")]
			MatchOver,
			[Token(Token = "0x4001856")]
			NextMap,
			[Token(Token = "0x4001857")]
			RoundOverOutOfTime,
			[Token(Token = "0x4001858")]
			SuddenDeath
		}

		[Token(Token = "0x400183C")]
		private const float RoundOverTime = 10f;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HyperDash.ControlPoint.ControlPoint[] _controlpoints;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] _spawnShields;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Audio")]
		[SerializeField]
		[FormerlySerializedAs("_announcer")]
		private DominationAnnouncer _announcerAndMusic;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Header("Messages")]
		private DominationHudMessages _hudMessages;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IDominationMatchState _boltState;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DominationMatchState _matchState;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _stateTime;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _timeStateChanged;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _timeOvertimeStarted;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _roundIndex;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _hasFadedAtEndOfRound;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] _botObjectiveControllingTeam;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _doSuddenDeathAsTieBreaker;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _isFirstSuddenDeathRound;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _targetScore;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isGhost;

		[Token(Token = "0x1700033C")]
		public override bool PlayersAreGhostsOnDeath
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xFE0CD0", Offset = "0xFE0CD0", VA = "0xFE0CD0", Slot = "29")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033D")]
		public override float Timer
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xFE0CD8", Offset = "0xFE0CD8", VA = "0xFE0CD8", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033E")]
		public static int[] ControllingTeams
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xFE0E60", Offset = "0xFE0E60", VA = "0xFE0E60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xFE0EB8", Offset = "0xFE0EB8", VA = "0xFE0EB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public static bool[] IsPointEnabled
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xFE0F18", Offset = "0xFE0F18", VA = "0xFE0F18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xFE0F70", Offset = "0xFE0F70", VA = "0xFE0F70")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event Action<int, Teams> CapturePointTeamChangedEvent
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xFE0908", Offset = "0xFE0908", VA = "0xFE0908")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xFE09F8", Offset = "0xFE09F8", VA = "0xFE09F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event Action<int, bool> CapturePointEnabledChangedEvent
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xFE0AE8", Offset = "0xFE0AE8", VA = "0xFE0AE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xFE0BDC", Offset = "0xFE0BDC", VA = "0xFE0BDC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xFE0FD0", Offset = "0xFE0FD0", VA = "0xFE0FD0", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xFE10C8", Offset = "0xFE10C8", VA = "0xFE10C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xFE13C0", Offset = "0xFE13C0", VA = "0xFE13C0", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xFE26F8", Offset = "0xFE26F8", VA = "0xFE26F8", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xFE2584", Offset = "0xFE2584", VA = "0xFE2584")]
		private void ServerChangeState(DominationMatchState newState)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xFE2C48", Offset = "0xFE2C48", VA = "0xFE2C48")]
		private void ServerEnterState(DominationMatchState prevState, DominationMatchState newState)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xFE2720", Offset = "0xFE2720", VA = "0xFE2720")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xFE3AE0", Offset = "0xFE3AE0", VA = "0xFE3AE0")]
		private void GetBestTeam(out Teams teamWithHighestScore, out int teamHighestScore)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xFE409C", Offset = "0xFE409C", VA = "0xFE409C")]
		private bool AreAllPlayersOfTeamDead(Teams team)
		{
			return default(bool);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xFE3EB0", Offset = "0xFE3EB0", VA = "0xFE3EB0")]
		private void EndRound()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xFE3810", Offset = "0xFE3810", VA = "0xFE3810")]
		private void RespawnAllPlayers()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xFE3978", Offset = "0xFE3978", VA = "0xFE3978")]
		private void ResetButtons()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xFE4674", Offset = "0xFE4674", VA = "0xFE4674")]
		private void OnButtonTeam0PressedEvent(PedestalButton button, int playerID)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xFE49F0", Offset = "0xFE49F0", VA = "0xFE49F0")]
		private void OnButtonMPressedEvent(PedestalButton button, int playerID)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xFE49FC", Offset = "0xFE49FC", VA = "0xFE49FC")]
		private void OnButtonTeam1PressedEvent(PedestalButton button, int playerID)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xFE4680", Offset = "0xFE4680", VA = "0xFE4680")]
		private void OnButtonPressed(int playerID, int buttonIndex)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xFE4B50", Offset = "0xFE4B50", VA = "0xFE4B50")]
		private void OnSuddenDeathButtonPressed(PedestalButton button, int playerID)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xFE4190", Offset = "0xFE4190", VA = "0xFE4190")]
		private void CaptureMidPoint(Teams team)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xFE4DE8", Offset = "0xFE4DE8", VA = "0xFE4DE8")]
		private void OnControllingTeamChanged(IState state1, string propertypath, ArrayIndices arrayIndices)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xFE508C", Offset = "0xFE508C", VA = "0xFE508C")]
		private void OnPointEnabledChanged(IState state, string propertyPath, ArrayIndices arrayIndices)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xFE4304", Offset = "0xFE4304", VA = "0xFE4304")]
		public void StartOvertime(Teams dominatingTeam)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xFE4A2C", Offset = "0xFE4A2C", VA = "0xFE4A2C")]
		private void OnCountered(PlayerObject player)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xFE4A08", Offset = "0xFE4A08", VA = "0xFE4A08")]
		private bool IsTeamDominating(out Teams dominatingTeam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xFE445C", Offset = "0xFE445C", VA = "0xFE445C")]
		private Teams GetDominatingTeam()
		{
			return default(Teams);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xFE5338", Offset = "0xFE5338", VA = "0xFE5338", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xFE53BC", Offset = "0xFE53BC", VA = "0xFE53BC", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xFE53D4", Offset = "0xFE53D4", VA = "0xFE53D4", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xFE2604", Offset = "0xFE2604", VA = "0xFE2604")]
		private void OnSpawnShieldsEnabledChanged()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xFE5C30", Offset = "0xFE5C30", VA = "0xFE5C30", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xFE5C5C", Offset = "0xFE5C5C", VA = "0xFE5C5C")]
		public DominationMatch()
		{
		}
	}
}
namespace HyperDash.Debugging
{
	[Token(Token = "0x20003FD")]
	public class DebugCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _timeScaleText;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _mainPanel;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isHidden;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xFE5EDC", Offset = "0xFE5EDC", VA = "0xFE5EDC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xFE5F94", Offset = "0xFE5F94", VA = "0xFE5F94")]
		public void Update()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xFE60F0", Offset = "0xFE60F0", VA = "0xFE60F0")]
		public void OnTimeScaleSliderChanged(float timeScale)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xFE61D0", Offset = "0xFE61D0", VA = "0xFE61D0")]
		public DebugCanvas()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class SkinMemoryTester : MonoBehaviour
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GunSkinSelector _pistol;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GunSkinSelector _smg;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GunSkinSelector _burst;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GunSkinSelector _shock;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GunSkinSelector _rocketlauncher;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GunSkinSelector _sniper;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GunSkinSelector _shotgun;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _position;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _spawnedCount;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GunSkinSelector> _gunSkinSelectors;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xFE61D8", Offset = "0xFE61D8", VA = "0xFE61D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xFE63AC", Offset = "0xFE63AC", VA = "0xFE63AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xFE62CC", Offset = "0xFE62CC", VA = "0xFE62CC")]
		private void SpawnAllSkinsOfType(WeaponTypes type)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xFE6734", Offset = "0xFE6734", VA = "0xFE6734")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xFE6508", Offset = "0xFE6508", VA = "0xFE6508")]
		public void Instantiate(WeaponSkin skin)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xFE675C", Offset = "0xFE675C", VA = "0xFE675C")]
		public SkinMemoryTester()
		{
		}
	}
}
namespace HyperDash.Customization
{
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class Appearance : IProtocolToken, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] DefaultLoadout;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static HashSet<string> DefaultLoadoutLookup;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Loadout;

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xFE67E8", Offset = "0xFE67E8", VA = "0xFE67E8")]
		static Appearance()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xFE6C1C", Offset = "0xFE6C1C", VA = "0xFE6C1C")]
		public Appearance()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xFE6E68", Offset = "0xFE6E68", VA = "0xFE6E68", Slot = "6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xFE6E6C", Offset = "0xFE6E6C", VA = "0xFE6E6C", Slot = "7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xFE6E70", Offset = "0xFE6E70", VA = "0xFE6E70")]
		public Appearance Clone()
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xFE6F9C", Offset = "0xFE6F9C", VA = "0xFE6F9C", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xFE705C", Offset = "0xFE705C", VA = "0xFE705C", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xFE6C88", Offset = "0xFE6C88", VA = "0xFE6C88")]
		private void CheckLoadoutIntegrity()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xFE71A4", Offset = "0xFE71A4", VA = "0xFE71A4")]
		public string GetEquipment(SkinSlot slot)
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xFE7240", Offset = "0xFE7240", VA = "0xFE7240")]
		public static string GetDefaultEquipment(SkinSlot slot)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xFE70DC", Offset = "0xFE70DC", VA = "0xFE70DC")]
		public static string GetDefaultEquipment(int slot)
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xFE7294", Offset = "0xFE7294", VA = "0xFE7294")]
		public bool SetEquipment(SkinSlot slot, string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xFE7328", Offset = "0xFE7328", VA = "0xFE7328")]
		public bool HasEquipped(string item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000400")]
	public static class AppearanceExtensions
	{
		[Token(Token = "0x6001987")]
		[Address(RVA = "0xFE739C", Offset = "0xFE739C", VA = "0xFE739C")]
		public static SkinSlot ToEquipmentSlot(this WeaponTypes value)
		{
			return default(SkinSlot);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xFE73C0", Offset = "0xFE73C0", VA = "0xFE73C0")]
		public static WeaponTypes ToWeaponType(this SkinSlot value)
		{
			return default(WeaponTypes);
		}
	}
	[Token(Token = "0x2000401")]
	[CreateAssetMenu(fileName = "BodyEquipment", menuName = "HyperDash/Customization/BodyEquipment", order = 0)]
	public class BodyEquipment : EquipmentBase
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Body")]
		private CharacterBody _bodyPrefab;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _thumbnailSprite;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HelmetEquipment _defaultHelmet;

		[Token(Token = "0x17000340")]
		public override SkinSlot EquipmentSlot
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xFE73E4", Offset = "0xFE73E4", VA = "0xFE73E4", Slot = "4")]
			get
			{
				return default(SkinSlot);
			}
		}

		[Token(Token = "0x17000341")]
		public CharacterBody BodyPrefab
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xFE73EC", Offset = "0xFE73EC", VA = "0xFE73EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public Sprite ThumbnailSprite
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xFE73F4", Offset = "0xFE73F4", VA = "0xFE73F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public HelmetEquipment DefaultHelmet
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xFE73FC", Offset = "0xFE73FC", VA = "0xFE73FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xFE7404", Offset = "0xFE7404", VA = "0xFE7404")]
		public BodyEquipment()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class BodySelector : MonoBehaviour
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterBody _defaultBody;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinnedMeshRenderer _defaultRenderer;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _bodyAnimator;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _lightProbeAnchor;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterBody _currentBody;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _teamIndex;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color _armorColor;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _bodyLayer;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _allowOcclusionWhenDynamic;

		[Token(Token = "0x17000344")]
		public string CurrentId
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xFE740C", Offset = "0xFE740C", VA = "0xFE740C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600198F")]
			[Address(RVA = "0xFE7414", Offset = "0xFE7414", VA = "0xFE7414")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xFE741C", Offset = "0xFE741C", VA = "0xFE741C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xFE75B8", Offset = "0xFE75B8", VA = "0xFE75B8")]
		public void ReleaseBody()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xFE7740", Offset = "0xFE7740", VA = "0xFE7740")]
		public void SetBodyByID(string bodyID, bool showOldMeshWhileLoading)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xFE790C", Offset = "0xFE790C", VA = "0xFE790C")]
		private void SetBody(GameObject body, string id)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xFE74C0", Offset = "0xFE74C0", VA = "0xFE74C0")]
		private void SetToDefaultBody()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xFE7AFC", Offset = "0xFE7AFC", VA = "0xFE7AFC")]
		private void RebindAnimator()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xFE7A84", Offset = "0xFE7A84", VA = "0xFE7A84")]
		private void SetDefaultValues()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xFE7BF0", Offset = "0xFE7BF0", VA = "0xFE7BF0")]
		public void SetTeamColor(int teamIndex)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xFE7C8C", Offset = "0xFE7C8C", VA = "0xFE7C8C")]
		public void SetArmorColor(Color color)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xFE751C", Offset = "0xFE751C", VA = "0xFE751C")]
		public void SetBodyLayer(int layer)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xFE7D48", Offset = "0xFE7D48", VA = "0xFE7D48")]
		public void SetAllowOcclusionWhenDynamic(bool isAllowed)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xFE7DE4", Offset = "0xFE7DE4", VA = "0xFE7DE4")]
		public bool IsBodyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xFE7E6C", Offset = "0xFE7E6C", VA = "0xFE7E6C")]
		public Vector3 GetArmDisplayPositionOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xFE7F34", Offset = "0xFE7F34", VA = "0xFE7F34")]
		public Vector3 GetArmDisplayRotationOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xFE7FFC", Offset = "0xFE7FFC", VA = "0xFE7FFC")]
		public BodySelector()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[CreateAssetMenu(fileName = "BodySkinList", menuName = "HyperDash/Customization/BodySkinList")]
	public class BodySkinListObject : ScriptableObject
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BodySkin[] SkinList;

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xFE8024", Offset = "0xFE8024", VA = "0xFE8024")]
		public BodySkinListObject()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class Button3DAnimation : MonoBehaviour, IUi3d, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Serializable]
		[Token(Token = "0x2000406")]
		public struct AnimationValues
		{
			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Scale;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ScaleTime;
		}

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _objectTransform;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Animation Values")]
		private AnimationValues _resetAnimation;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationValues _hoverAnimation;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationValues _clickAnimation;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasPointer;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween _scaleTween;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ID;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentID;

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xFE8088", Offset = "0xFE8088", VA = "0xFE8088")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xFE8128", Offset = "0xFE8128", VA = "0xFE8128")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xFE808C", Offset = "0xFE808C", VA = "0xFE808C")]
		private void ResetAnimations()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xFE8244", Offset = "0xFE8244", VA = "0xFE8244")]
		private void PlayHoverHaptic()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xFE8370", Offset = "0xFE8370", VA = "0xFE8370")]
		private void PlayClickHaptic()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xFE8138", Offset = "0xFE8138", VA = "0xFE8138")]
		private void StopHaptic()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xFE849C", Offset = "0xFE849C", VA = "0xFE849C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xFE864C", Offset = "0xFE864C", VA = "0xFE864C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xFE8664", Offset = "0xFE8664", VA = "0xFE8664", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xFE86BC", Offset = "0xFE86BC", VA = "0xFE86BC", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xFE8500", Offset = "0xFE8500", VA = "0xFE8500")]
		public void PlayAnimation(AnimationValues values)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xFE86E8", Offset = "0xFE86E8", VA = "0xFE86E8")]
		public Button3DAnimation()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public abstract class CategoryNewHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinSlot[] _trackSlots;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int Count;

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xFE8718", Offset = "0xFE8718", VA = "0xFE8718")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xFE8904", Offset = "0xFE8904", VA = "0xFE8904")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xFE8820", Offset = "0xFE8820", VA = "0xFE8820")]
		private void NewItemDataOnListUpdatedEvent(NewItemData sender)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xFE89D4", Offset = "0xFE89D4", VA = "0xFE89D4")]
		public int GetAmountOfNewUnlockedSkinsInSlot(HashSet<string> newUnlockedSkins, SkinSlot slot)
		{
			return default(int);
		}

		[Token(Token = "0x60019B2")]
		protected abstract void SetHighlightActive(bool active);

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xFE8DD0", Offset = "0xFE8DD0", VA = "0xFE8DD0")]
		protected CategoryNewHighlight()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class CategoryNewHighlightImage : CategoryNewHighlight
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _counterObject;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _counterText;

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xFE8DD8", Offset = "0xFE8DD8", VA = "0xFE8DD8", Slot = "4")]
		protected override void SetHighlightActive(bool active)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xFE8E80", Offset = "0xFE8E80", VA = "0xFE8E80")]
		public CategoryNewHighlightImage()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class CategoryNewHighlightObject : CategoryNewHighlight
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _highlightObject;

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xFE8E88", Offset = "0xFE8E88", VA = "0xFE8E88", Slot = "4")]
		protected override void SetHighlightActive(bool active)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xFE8EA8", Offset = "0xFE8EA8", VA = "0xFE8EA8")]
		public CategoryNewHighlightObject()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class CategoryNewHighlightTmp : CategoryNewHighlight
	{
		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _counterObject;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _counterText;

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xFE8EB0", Offset = "0xFE8EB0", VA = "0xFE8EB0", Slot = "4")]
		protected override void SetHighlightActive(bool active)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xFE8F58", Offset = "0xFE8F58", VA = "0xFE8F58")]
		public CategoryNewHighlightTmp()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class CustomizationManager : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		public struct SelectionChangedArgs
		{
			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Id;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool Locked;
		}

		[Token(Token = "0x200040D")]
		public struct CharacterSelectionChangedArgs
		{
			[Token(Token = "0x40018A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string HelmetId;

			[Token(Token = "0x40018A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool HelmetLocked;

			[Token(Token = "0x40018A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string BodyId;

			[Token(Token = "0x40018A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool BodyLocked;
		}

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CharacterSelectionChangedArgs _characterSelectionChangedArgs;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Character Customization")]
		private GameObject _characterCustomizationObject;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiCharacterUnlockable _uiCharacterUnlockable;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UiCharacterPurchased _uiCharacterPurchased;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup _characterSelectCanvasGroup;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _characterSkinErrorText;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _characterSkinConfirmButton;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Weapon Customization")]
		[SerializeField]
		private GameObject _weaponCustomizationObject;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _weaponFocusTransform;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Weapon3dUi[] _weapon3dUiList;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _weaponSelectCanvas;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _skinSelectCanvas;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UISkinSelection _unlockableSkinsCanvas;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UISkinSelection _purchasedSkinsCanvas;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CanvasGroup _skinSelectCanvasGroup;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text _weaponSkinErrorText;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject _skinSelectionTitleCanvas;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TextMeshProUGUI _skinSelectionTitleText;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static CustomizationManager Active;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Weapon3dUi _currentSelectedWeapon;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Appearance _appearance;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isPreviewing;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<WeaponSkin> _tempWeaponSkinList;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<HelmetSkin> _tempHelmetSkinList;

		[Token(Token = "0x17000345")]
		public Weapon3dUi CurrentSelectedWeapon
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xFE9450", Offset = "0xFE9450", VA = "0xFE9450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public static event Action<SelectionChangedArgs> WeaponSelectionChangedEvent
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xFE8F60", Offset = "0xFE8F60", VA = "0xFE8F60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xFE902C", Offset = "0xFE902C", VA = "0xFE902C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event Action<CharacterSelectionChangedArgs> CharacterSelectionChangedEvent
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xFE9178", Offset = "0xFE9178", VA = "0xFE9178")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xFE9248", Offset = "0xFE9248", VA = "0xFE9248")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xFE90F8", Offset = "0xFE90F8", VA = "0xFE90F8")]
		public static void InvokeWeaponSelectionChangedEvent(SelectionChangedArgs eventArgs)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xFE9318", Offset = "0xFE9318", VA = "0xFE9318")]
		public static void InvokeHelmetSelectionChangedEvent(string id, bool locked)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xFE93B4", Offset = "0xFE93B4", VA = "0xFE93B4")]
		public static void InvokeBodySelectionChangedEvent(string id, bool locked)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xFE9458", Offset = "0xFE9458", VA = "0xFE9458")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xFE94A8", Offset = "0xFE94A8", VA = "0xFE94A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xFE95DC", Offset = "0xFE95DC", VA = "0xFE95DC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xFE958C", Offset = "0xFE958C", VA = "0xFE958C")]
		private void ActiveOnStateChangedEvent(MainMenu.State prev, MainMenu.State current)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xFE96F8", Offset = "0xFE96F8", VA = "0xFE96F8")]
		public void Hide()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xFE9D98", Offset = "0xFE9D98", VA = "0xFE9D98")]
		private void CopyAppearance()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xFE98C4", Offset = "0xFE98C4", VA = "0xFE98C4")]
		public void ShowCharacterCustomization()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xFE9E44", Offset = "0xFE9E44", VA = "0xFE9E44")]
		public void HeadBackPressed()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xFE9ED0", Offset = "0xFE9ED0", VA = "0xFE9ED0")]
		public void HeadConfirmPressed()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xFE9E48", Offset = "0xFE9E48", VA = "0xFE9E48")]
		private void HeadSelectReturnToMenu()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xFEA084", Offset = "0xFEA084", VA = "0xFEA084")]
		private void OnUpdateHeadCallback(Response<ChangeAppearanceResponse> response)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xFEA120", Offset = "0xFEA120", VA = "0xFEA120")]
		private void OnCharacterSelectionChangedEvent(CharacterSelectionChangedArgs eventargs)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xFE9D08", Offset = "0xFE9D08", VA = "0xFE9D08")]
		public void ShowWeaponCustomization()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xFEA160", Offset = "0xFEA160", VA = "0xFEA160")]
		private void ResetWeapon3dUiPosition()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xFEA1E0", Offset = "0xFEA1E0", VA = "0xFEA1E0")]
		private void ResetWeapon3dUiSkin()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xFEA308", Offset = "0xFEA308", VA = "0xFEA308")]
		public void SelectWeapon(Weapon3dUi weapon3dUi)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xFEAAB8", Offset = "0xFEAAB8", VA = "0xFEAAB8")]
		public void WeaponBackPressedPressed()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xFEAC84", Offset = "0xFEAC84", VA = "0xFEAC84")]
		public void WeaponConfirmPressed()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xFEAE0C", Offset = "0xFEAE0C", VA = "0xFEAE0C")]
		private void OnUpdateWeaponCallback(Response<ChangeAppearanceResponse> response)
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xFEAEA4", Offset = "0xFEAEA4", VA = "0xFEAEA4")]
		public void WeaponSelectBackPressed()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xFEAABC", Offset = "0xFEAABC", VA = "0xFEAABC")]
		private void ReturnToSelect()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xFEAEFC", Offset = "0xFEAEFC", VA = "0xFEAEFC")]
		public void SetWeaponSkin(string id)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xFEA95C", Offset = "0xFEA95C", VA = "0xFEA95C")]
		public void WeaponPreviewPressed()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xFEAFCC", Offset = "0xFEAFCC", VA = "0xFEAFCC")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xFEB018", Offset = "0xFEB018", VA = "0xFEB018")]
		public CustomizationManager()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public abstract class EquipmentBase : ScriptableObject
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("General")]
		private string _id;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _locaKeyOverride;

		[Token(Token = "0x17000346")]
		public abstract SkinSlot EquipmentSlot
		{
			[Token(Token = "0x60019DD")]
			get;
		}

		[Token(Token = "0x17000347")]
		public string ID
		{
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xFEB178", Offset = "0xFEB178", VA = "0xFEB178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public string LocaKey
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xFEB180", Offset = "0xFEB180", VA = "0xFEB180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xFEB1B0", Offset = "0xFEB1B0", VA = "0xFEB1B0")]
		protected EquipmentBase()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public enum SkinSlot
	{
		[Token(Token = "0x40018AD")]
		Helmet,
		[Token(Token = "0x40018AE")]
		Pistol,
		[Token(Token = "0x40018AF")]
		Smg,
		[Token(Token = "0x40018B0")]
		BurstRifle,
		[Token(Token = "0x40018B1")]
		Sniper,
		[Token(Token = "0x40018B2")]
		Shotgun,
		[Token(Token = "0x40018B3")]
		RocketLauncher,
		[Token(Token = "0x40018B4")]
		ShockRifle,
		[Token(Token = "0x40018B5")]
		Body,
		[Token(Token = "0x40018B6")]
		Count
	}
	[Token(Token = "0x2000410")]
	public static class EquipmentSlotExtensions
	{
		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xFEB1B8", Offset = "0xFEB1B8", VA = "0xFEB1B8")]
		public static bool IsWeapon(this SkinSlot target)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xFEB1DC", Offset = "0xFEB1DC", VA = "0xFEB1DC")]
		public static bool IsHelmet(this SkinSlot target)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xFEB1E8", Offset = "0xFEB1E8", VA = "0xFEB1E8")]
		public static bool IsBody(this SkinSlot target)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000411")]
	[CreateAssetMenu(fileName = "GunSkin", menuName = "HyperDash/Customization/GunSkin", order = 0)]
	public class GunSkinEquipment : EquipmentBase
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Weapon")]
		[SerializeField]
		private WeaponTypes _weaponType;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _skinMaterial;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _iconSprite;

		[Token(Token = "0x17000349")]
		public override SkinSlot EquipmentSlot
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xFEB1F4", Offset = "0xFEB1F4", VA = "0xFEB1F4", Slot = "4")]
			get
			{
				return default(SkinSlot);
			}
		}

		[Token(Token = "0x1700034A")]
		public WeaponTypes WeaponType
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xFEB21C", Offset = "0xFEB21C", VA = "0xFEB21C")]
			get
			{
				return default(WeaponTypes);
			}
		}

		[Token(Token = "0x1700034B")]
		public Material SkinMaterial
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xFEB224", Offset = "0xFEB224", VA = "0xFEB224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public Sprite IconSprite
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xFEB22C", Offset = "0xFEB22C", VA = "0xFEB22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xFEB234", Offset = "0xFEB234", VA = "0xFEB234")]
		public GunSkinEquipment()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class GunSkinSelector : MonoBehaviour
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer[] _renderers;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _skinMaterial;

		[Token(Token = "0x1700034D")]
		public string CurrentId
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xFEB23C", Offset = "0xFEB23C", VA = "0xFEB23C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xFEB244", Offset = "0xFEB244", VA = "0xFEB244")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xFEB24C", Offset = "0xFEB24C", VA = "0xFEB24C")]
		public void SetSkinByName(string id)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xFEB484", Offset = "0xFEB484", VA = "0xFEB484")]
		public void SetSkin(Material material)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xFEB55C", Offset = "0xFEB55C", VA = "0xFEB55C")]
		public void ReleaseSkin()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xFEB6D8", Offset = "0xFEB6D8", VA = "0xFEB6D8")]
		public GunSkinSelector()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class Helmet : MonoBehaviour
	{
		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Renderer;

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xFEB6E0", Offset = "0xFEB6E0", VA = "0xFEB6E0")]
		public Helmet()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class Helmet3dUi : MonoBehaviour, IUi3d, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Helmet _helmet;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _selectVisual;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LockedFrame _lockedFrame;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _glowObject;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Helmet3dUi Selected;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _locked;

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xFEB6E8", Offset = "0xFEB6E8", VA = "0xFEB6E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xFEB720", Offset = "0xFEB720", VA = "0xFEB720")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xFEB724", Offset = "0xFEB724", VA = "0xFEB724")]
		public void Select()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xFEB728", Offset = "0xFEB728", VA = "0xFEB728")]
		public void DeSelect()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xFEB748", Offset = "0xFEB748", VA = "0xFEB748", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xFEB768", Offset = "0xFEB768", VA = "0xFEB768")]
		public Helmet3dUi()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[CreateAssetMenu(fileName = "HelmetEquipment", menuName = "HyperDash/Customization/HelmetEquipment", order = 0)]
	public class HelmetEquipment : EquipmentBase
	{
		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Helmet")]
		[SerializeField]
		private Helmet _helmetPrefab;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _thumbnailSprite;

		[Token(Token = "0x1700034E")]
		public override SkinSlot EquipmentSlot
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xFEB770", Offset = "0xFEB770", VA = "0xFEB770", Slot = "4")]
			get
			{
				return default(SkinSlot);
			}
		}

		[Token(Token = "0x1700034F")]
		public Helmet HelmetPrefab
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0xFEB778", Offset = "0xFEB778", VA = "0xFEB778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public Sprite ThumbnailSprite
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xFEB780", Offset = "0xFEB780", VA = "0xFEB780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xFEB788", Offset = "0xFEB788", VA = "0xFEB788")]
		public HelmetEquipment()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class HelmetSelector : MonoBehaviour
	{
		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Helmet _defaultHelmet;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _lightProbeAnchor;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _targetLayer;

		[Token(Token = "0x17000351")]
		public Helmet CurrentHelmet
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0xFEB790", Offset = "0xFEB790", VA = "0xFEB790")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xFEB798", Offset = "0xFEB798", VA = "0xFEB798")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public string CurrentId
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xFEB7A0", Offset = "0xFEB7A0", VA = "0xFEB7A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xFEB7A8", Offset = "0xFEB7A8", VA = "0xFEB7A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xFEB7B0", Offset = "0xFEB7B0", VA = "0xFEB7B0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xFEB87C", Offset = "0xFEB87C", VA = "0xFEB87C")]
		public void ReleaseHelmet()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xFEBA50", Offset = "0xFEBA50", VA = "0xFEBA50")]
		public void SetHelmetByID(string helmetID, bool showOldMeshWhileLoading)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xFEBD90", Offset = "0xFEBD90", VA = "0xFEBD90")]
		private void SetHelmet(GameObject helmet, string id)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xFEB828", Offset = "0xFEB828", VA = "0xFEB828")]
		private void SetToDefaultHelmet()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xFEBEEC", Offset = "0xFEBEEC", VA = "0xFEBEEC")]
		private void SetDefaultValues()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xFEBF4C", Offset = "0xFEBF4C", VA = "0xFEBF4C")]
		public void SetLayer(int layer)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xFEBF80", Offset = "0xFEBF80", VA = "0xFEBF80")]
		public HelmetSelector()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[CreateAssetMenu(fileName = "HelmetSkinList", menuName = "HyperDash/Customization/HelmetSkinList")]
	public class HelmetSkinListObject : ScriptableObject
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmetSkin[] SkinList;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xFEBFB0", Offset = "0xFEBFB0", VA = "0xFEBFB0")]
		public HelmetSkinListObject()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class ItemSocket : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xFEC014", Offset = "0xFEC014", VA = "0xFEC014", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xFEC07C", Offset = "0xFEC07C", VA = "0xFEC07C")]
		public ItemSocket()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class LockedFrame : MonoBehaviour
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _levelText;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xFEC084", Offset = "0xFEC084", VA = "0xFEC084")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xFEC088", Offset = "0xFEC088", VA = "0xFEC088")]
		public void SetData(List<UnlockListItemResponse> unlockList, ref bool extraInfoHover)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xFEC210", Offset = "0xFEC210", VA = "0xFEC210")]
		public LockedFrame()
		{
		}
	}
	[Token(Token = "0x200041B")]
	[CreateAssetMenu(fileName = "SkinIcons", menuName = "HyperDash/Customization/SkinIcons")]
	public class SkinIconListObject : ScriptableObject
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("Icons")]
		public Sprite[] WeaponThumbnails;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite[] HelmetThumbnails;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite[] BodyThumbnails;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xFEC218", Offset = "0xFEC218", VA = "0xFEC218")]
		public SkinIconListObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class SkinBase
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocaKey;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinSlot SkinSlot;

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xFEC298", Offset = "0xFEC298", VA = "0xFEC298")]
		public SkinBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class WeaponSkin : SkinBase
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WeaponTypes WeaponType;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference MaterialAssetReference;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xFEC2A0", Offset = "0xFEC2A0", VA = "0xFEC2A0")]
		public WeaponSkin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041E")]
	public class HelmetSkin : SkinBase
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference HelmetPrefabReference;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xFEC2A8", Offset = "0xFEC2A8", VA = "0xFEC2A8")]
		public HelmetSkin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public class BodySkin : SkinBase
	{
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference BodyPrefabReference;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xFEC2B0", Offset = "0xFEC2B0", VA = "0xFEC2B0")]
		public BodySkin()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[DefaultExecutionOrder(-99)]
	public class SkinManager : MonoBehaviour
	{
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponSkinListObject _weaponSkinsScriptableObject;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HelmetSkinListObject _helmetSkinsScriptableObject;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BodySkinListObject _bodySkinsScriptableObject;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Material> _preloadedDefaultWeaponSkinMaterials;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Material> _preloadedAppearanceMaterials;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Material> _preloadedShopSkinMaterials;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _keepShopLoaded;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> _preloadedHelmetSkins;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> _preloadedBodySkins;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, WeaponSkin> _nameToWeaponSkin;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, HelmetSkin> _nameToHelmetSkin;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, BodySkin> _nameToBodySkin;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<WeaponTypes, List<WeaponSkin>> _skinsByWeaponType;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SkinManager Active;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool IsInitialized;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Dictionary<WeaponTypes, WeaponSkin> DefaultWeaponSkinsByWeaponType;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public HelmetSkin DefaultHelmetSkin;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public BodySkin DefaultBodySkin;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string[] DefaultWeaponSkinNames;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string[] DefaultBodySkinNames;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string[] DefaultHelmetSkinNames;

		[Token(Token = "0x17000353")]
		public Material SeasonalConfettiMaterial
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xFEC2B8", Offset = "0xFEC2B8", VA = "0xFEC2B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xFEC2C0", Offset = "0xFEC2C0", VA = "0xFEC2C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xFEC2C8", Offset = "0xFEC2C8", VA = "0xFEC2C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xFECD84", Offset = "0xFECD84", VA = "0xFECD84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xFEC948", Offset = "0xFEC948", VA = "0xFEC948")]
		private void PreloadDefaultSkins()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xFED10C", Offset = "0xFED10C", VA = "0xFED10C")]
		public void PreloadAppearance(Appearance appearance)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xFED288", Offset = "0xFED288", VA = "0xFED288")]
		public void PreloadShop(ShopResponse shopResponse)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xFED3CC", Offset = "0xFED3CC", VA = "0xFED3CC")]
		public void ReleaseShop()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xFEB320", Offset = "0xFEB320", VA = "0xFEB320")]
		public void LoadWeaponSkin(string skinName, Action<Material> OnCompleted)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xFEBC20", Offset = "0xFEBC20", VA = "0xFEBC20")]
		public void InstantiateHelmet(string helmetID, Transform helmetParent, Action<GameObject> onCompleted)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xFECF9C", Offset = "0xFECF9C", VA = "0xFECF9C")]
		public void InstantiateBody(string bodyID, Transform bodyParent, Action<GameObject> onCompleted)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xFEB9F8", Offset = "0xFEB9F8", VA = "0xFEB9F8")]
		public void ReleaseGameObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xFEB66C", Offset = "0xFEB66C", VA = "0xFEB66C")]
		public void ReleaseWeaponSkin(Material material)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xFED498", Offset = "0xFED498", VA = "0xFED498")]
		public bool TryGetWeaponSkin(string skinID, out WeaponSkin skin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xFED508", Offset = "0xFED508", VA = "0xFED508")]
		public bool TryGetHelmetSkin(string skinID, out HelmetSkin skin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xFED578", Offset = "0xFED578", VA = "0xFED578")]
		public bool TryGetBodySkin(string skinID, out BodySkin skin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xFED5E0", Offset = "0xFED5E0", VA = "0xFED5E0")]
		public bool IsHelmetSkin(string skinID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xFED638", Offset = "0xFED638", VA = "0xFED638")]
		public bool IsBodySkin(string skinID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xFED690", Offset = "0xFED690", VA = "0xFED690")]
		public List<WeaponSkin> GetAllSkinsOfWeaponType(WeaponTypes weaponType)
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xFED6E8", Offset = "0xFED6E8", VA = "0xFED6E8")]
		public void LoadSeasonalContent(SeasonalEvent seasonalEvent)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xFED868", Offset = "0xFED868", VA = "0xFED868")]
		public SkinManager()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class SkinPreviewer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000426")]
		private class WeaponPreview
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WeaponTypes WeaponType;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GunSkinSelector SkinSelector;

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xFEF324", Offset = "0xFEF324", VA = "0xFEF324")]
			public WeaponPreview()
			{
			}
		}

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponPreview[] _weapons;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _weaponsParent;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _animateTarget;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SkinPreviewer Active;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WeaponPreview _selectedWeapon;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _animateToLocation;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _animateCallback;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _lastStartLocation;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _animationTime;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _timer;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _startPosition;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion _startRotation;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _playHaptic;

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xFEE7B8", Offset = "0xFEE7B8", VA = "0xFEE7B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xFEEE08", Offset = "0xFEEE08", VA = "0xFEEE08")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xFEF10C", Offset = "0xFEF10C", VA = "0xFEF10C")]
		private void ResetSkins()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xFEF220", Offset = "0xFEF220", VA = "0xFEF220")]
		public void ShowWeapon(string skinID, bool animate = false, [Optional] Transform animateStart, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xFEE82C", Offset = "0xFEE82C", VA = "0xFEE82C")]
		public void ShowWeapon(WeaponTypes weaponType, [Optional] string skinID, bool animate = false, [Optional] Transform animateStart, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xFEF2EC", Offset = "0xFEF2EC", VA = "0xFEF2EC")]
		public void SetSkin(string skinID)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xFEF314", Offset = "0xFEF314", VA = "0xFEF314")]
		public SkinPreviewer()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public static class SkinUnlockDetails
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnlockListResponse Data;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly fsSerializer Serializer;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<HelmetSkin> UnlockableHelmets;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<BodySkin> UnlockableBodies;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Dictionary<WeaponTypes, List<WeaponSkin>> UnlockableWeaponsByWeaponType;

		[Token(Token = "0x17000354")]
		public static int Version
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xFEF434", Offset = "0xFEF434", VA = "0xFEF434")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xFEF48C", Offset = "0xFEF48C", VA = "0xFEF48C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xFEF4E8", Offset = "0xFEF4E8", VA = "0xFEF4E8")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xFEF5E4", Offset = "0xFEF5E4", VA = "0xFEF5E4")]
		private static void LoadUnlockListFromDisk()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xFEFF60", Offset = "0xFEFF60", VA = "0xFEFF60")]
		private static void SaveUnlockListToDisk(UnlockListResponse data)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xFEFA20", Offset = "0xFEFA20", VA = "0xFEFA20")]
		public static void OnUpdate(UnlockListResponse data)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xFF02EC", Offset = "0xFF02EC", VA = "0xFF02EC")]
		public static List<UnlockListItemResponse> GetUnlockDetailsForSkin(string skinName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000429")]
	public class UiBodyElement : MonoBehaviour
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _nameLabel;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _spriteImage;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _selectionObject;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _glowObject;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _grayscaleMaterial;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _levelLabel;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _levelBackground;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _skinName;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _locked;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<UnlockListItemResponse> _unlockDetails;

		[Token(Token = "0x17000355")]
		public BodySkin BodySkin
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xFF0580", Offset = "0xFF0580", VA = "0xFF0580")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xFF0588", Offset = "0xFF0588", VA = "0xFF0588")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xFF0590", Offset = "0xFF0590", VA = "0xFF0590")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xFF064C", Offset = "0xFF064C", VA = "0xFF064C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xFF06CC", Offset = "0xFF06CC", VA = "0xFF06CC")]
		private void OnCharacterSelectionChangedEvent(CustomizationManager.CharacterSelectionChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xFF0704", Offset = "0xFF0704", VA = "0xFF0704")]
		public void SetData(BodySkin bodySkin, Sprite icon)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xFF0C1C", Offset = "0xFF0C1C", VA = "0xFF0C1C")]
		public void SelfPressed()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xFF0CA8", Offset = "0xFF0CA8", VA = "0xFF0CA8")]
		public UiBodyElement()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class UiCharacterPurchased : MonoBehaviour
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiHelmetElement _helmetElementTemplate;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _HelmetPaddingElementTemplate;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _helmetContainer;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiBodyElement _bodyElementTemplate;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _bodyPaddingElementTemplate;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _bodyContainer;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _btnNextPage;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _btnPreviousPage;

		[Token(Token = "0x4001921")]
		private const int MaxElementsPerPage = 4;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentPage;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<UiHelmetElement> _unlockableHelmets;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Button> _paddingHelmetElements;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<UiBodyElement> _unlockableBodies;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Button> _paddingBodyElements;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<HelmetSkin> _helmetlist;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<BodySkin> _bodyList;

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xFF0CB0", Offset = "0xFF0CB0", VA = "0xFF0CB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xFF0E50", Offset = "0xFF0E50", VA = "0xFF0E50")]
		public void SetData(List<HelmetSkin> helmetSkins, List<BodySkin> bodySkins)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xFF1CCC", Offset = "0xFF1CCC", VA = "0xFF1CCC")]
		public void ResetToFirstPage()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xFF1CD4", Offset = "0xFF1CD4", VA = "0xFF1CD4")]
		public void GotoNextPage()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xFF1E3C", Offset = "0xFF1E3C", VA = "0xFF1E3C")]
		public void GotoPreviousPage()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xFF1E58", Offset = "0xFF1E58", VA = "0xFF1E58")]
		private void PaddingPressed()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xFF1EB0", Offset = "0xFF1EB0", VA = "0xFF1EB0")]
		public UiCharacterPurchased()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class UiCharacterUnlockable : MonoBehaviour
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiBodyElement _bodyElement;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UiHelmetElement> _unlockableSkins;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HelmetSkin> _helmetSkinlist;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xFF20C0", Offset = "0xFF20C0", VA = "0xFF20C0")]
		public void SetData(List<HelmetSkin> helmetSkins, BodySkin bodySkin)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xFF229C", Offset = "0xFF229C", VA = "0xFF229C")]
		public UiCharacterUnlockable()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class UiHelmetElement : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _nameLabel;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _spriteImage;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _selectionObject;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _glowObject;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _grayscaleMaterial;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _levelLabel;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _levelBackground;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _skinName;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _locked;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<UnlockListItemResponse> _unlockDetails;

		[Token(Token = "0x17000356")]
		public HelmetSkin HelmetSkin
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xFF237C", Offset = "0xFF237C", VA = "0xFF237C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xFF2384", Offset = "0xFF2384", VA = "0xFF2384")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xFF238C", Offset = "0xFF238C", VA = "0xFF238C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xFF2448", Offset = "0xFF2448", VA = "0xFF2448")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xFF24C8", Offset = "0xFF24C8", VA = "0xFF24C8")]
		private void OnCharacterSelectionChangedEvent(CustomizationManager.CharacterSelectionChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xFF17B4", Offset = "0xFF17B4", VA = "0xFF17B4")]
		public void SetData(HelmetSkin helmetSkin, Sprite icon)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xFF2500", Offset = "0xFF2500", VA = "0xFF2500")]
		public void SelfPressed()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xFF2588", Offset = "0xFF2588", VA = "0xFF2588")]
		public UiHelmetElement()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class UISkinElement : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _nameLabel;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _spriteImage;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _selectionObject;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _glowObject;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _grayscaleMaterial;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _levelLabel;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _levelBackground;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _skinName;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _locked;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<UnlockListItemResponse> _unlockDetails;

		[Token(Token = "0x17000357")]
		public List<UnlockListItemResponse> UnlockList
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xFF2590", Offset = "0xFF2590", VA = "0xFF2590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public WeaponSkin WeaponSkin
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xFF2598", Offset = "0xFF2598", VA = "0xFF2598")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xFF25A0", Offset = "0xFF25A0", VA = "0xFF25A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xFF25A8", Offset = "0xFF25A8", VA = "0xFF25A8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xFF25E0", Offset = "0xFF25E0", VA = "0xFF25E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xFF2660", Offset = "0xFF2660", VA = "0xFF2660")]
		private void OnWeaponSelectionChangedEvent(CustomizationManager.SelectionChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xFF291C", Offset = "0xFF291C", VA = "0xFF291C")]
		public void SetData(WeaponSkin weaponSkin, Sprite icon)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xFF2E0C", Offset = "0xFF2E0C", VA = "0xFF2E0C")]
		public void SelfPressed()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xFF2EB0", Offset = "0xFF2EB0", VA = "0xFF2EB0")]
		public UISkinElement()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class UISkinElementAnimation : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Serializable]
		[Token(Token = "0x200042F")]
		private struct AnimationValues
		{
			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float MoveZ;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float MoveTime;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Scale;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float ScaleTime;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ImageScale;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float ImageScaleTime;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color BackgroundColor;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float BackgroundColorTime;
		}

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _invertImageScale;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("References")]
		[SerializeField]
		private Transform _container;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UIGradient _gradient;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Animation values")]
		[SerializeField]
		private AnimationValues _hoverAnimation;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private AnimationValues _clickAnimation;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AnimationValues _resetAnimation;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool ClickActive;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int NextTweenID;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _gradientTweenID;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _hasPointer;

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xFF2EB8", Offset = "0xFF2EB8", VA = "0xFF2EB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xFF3014", Offset = "0xFF3014", VA = "0xFF3014")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xFF2EBC", Offset = "0xFF2EBC", VA = "0xFF2EBC")]
		private void ResetAnimations()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xFF3130", Offset = "0xFF3130", VA = "0xFF3130")]
		private void PlayAnimation(AnimationValues values)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xFF3394", Offset = "0xFF3394", VA = "0xFF3394")]
		private void PlayHoverHaptic()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xFF34C0", Offset = "0xFF34C0", VA = "0xFF34C0")]
		private void PlayClickHaptic()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xFF3024", Offset = "0xFF3024", VA = "0xFF3024")]
		private void StopHaptic()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xFF35EC", Offset = "0xFF35EC", VA = "0xFF35EC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xFF366C", Offset = "0xFF366C", VA = "0xFF366C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xFF369C", Offset = "0xFF369C", VA = "0xFF369C", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xFF3724", Offset = "0xFF3724", VA = "0xFF3724", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xFF3774", Offset = "0xFF3774", VA = "0xFF3774")]
		public UISkinElementAnimation()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class UISkinSelection : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UISkinElement _skinElementTemplate;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _paddingElementTemplate;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _container;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _weaponSkinConfirmButton;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _btnNextPage;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _btnPreviousPage;

		[Token(Token = "0x400195D")]
		private const int MaxElementsPerPage = 9;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _currentPage;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<UISkinElement> _unlockableSkins;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject> _paddingElements;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<WeaponSkin> _skinlist;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xFF3834", Offset = "0xFF3834", VA = "0xFF3834")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xFF3994", Offset = "0xFF3994", VA = "0xFF3994")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xFF3A14", Offset = "0xFF3A14", VA = "0xFF3A14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xFF3AF4", Offset = "0xFF3AF4", VA = "0xFF3AF4")]
		private void OnWeaponSelectionChangedEvent(CustomizationManager.SelectionChangedArgs eventargs)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xFF3B18", Offset = "0xFF3B18", VA = "0xFF3B18")]
		public void SetData(List<WeaponSkin> skins)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xFF3FA0", Offset = "0xFF3FA0", VA = "0xFF3FA0")]
		public void ResetToFirstPage()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xFF3FA8", Offset = "0xFF3FA8", VA = "0xFF3FA8")]
		public void GotoNextPage()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xFF408C", Offset = "0xFF408C", VA = "0xFF408C")]
		public void GotoPreviousPage()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xFF40A8", Offset = "0xFF40A8", VA = "0xFF40A8")]
		public void GotoStore()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFF4100", Offset = "0xFF4100", VA = "0xFF4100")]
		public void Show()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xFF4194", Offset = "0xFF4194", VA = "0xFF4194")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xFF41D8", Offset = "0xFF41D8", VA = "0xFF41D8")]
		public UISkinSelection()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class UISkinUnlockDetails : MonoBehaviour
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _killsObject;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _killsText;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _headshotsObject;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _headshotsText;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _damageObject;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text _damageText;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _unimplemented;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UISkinElement _skinElement;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UISkinUnlockDetails Active;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xFF430C", Offset = "0xFF430C", VA = "0xFF430C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xFF26F8", Offset = "0xFF26F8", VA = "0xFF26F8")]
		public void SetData(UISkinElement skinElement)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xFF2894", Offset = "0xFF2894", VA = "0xFF2894")]
		public void Hide(UISkinElement skinElement)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xFF3ABC", Offset = "0xFF3ABC", VA = "0xFF3ABC")]
		public void ForceHide()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xFF4384", Offset = "0xFF4384", VA = "0xFF4384")]
		private void GetStatisticsCallback(StatisticsResponse data, string error)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xFF4698", Offset = "0xFF4698", VA = "0xFF4698")]
		public UISkinUnlockDetails()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class UiSoftFadein : MonoBehaviour
	{
		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xFF46A0", Offset = "0xFF46A0", VA = "0xFF46A0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xFF4734", Offset = "0xFF4734", VA = "0xFF4734")]
		public UiSoftFadein()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class Weapon3dUi : MonoBehaviour, IUi3d, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponTypes _weaponType;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GunSkinSelector _skinSelector;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _socket;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _highlightObject;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _dashedSprite;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _backdrop;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isInitialized;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _originalPosition;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _originalScale;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion _originalRotation;

		[Token(Token = "0x17000359")]
		public WeaponTypes WeaponType
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xFF473C", Offset = "0xFF473C", VA = "0xFF473C")]
			get
			{
				return default(WeaponTypes);
			}
		}

		[Token(Token = "0x1700035A")]
		public GunSkinSelector SkinSelector
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xFF4744", Offset = "0xFF4744", VA = "0xFF4744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public Transform Socket
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0xFF474C", Offset = "0xFF474C", VA = "0xFF474C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xFF4754", Offset = "0xFF4754", VA = "0xFF4754")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xFF4818", Offset = "0xFF4818", VA = "0xFF4818")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xFF4888", Offset = "0xFF4888", VA = "0xFF4888")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xFF48F8", Offset = "0xFF48F8", VA = "0xFF48F8")]
		public void ReturnToOriginalPosition([Optional] TweenCallback callback)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xFF4A18", Offset = "0xFF4A18", VA = "0xFF4A18", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xFF47D4", Offset = "0xFF47D4", VA = "0xFF47D4")]
		public void SetDashedSprite(bool active)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xFF4A1C", Offset = "0xFF4A1C", VA = "0xFF4A1C")]
		public Weapon3dUi()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class WeaponPickupSkinSelector : GunSkinSelector
	{
		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WeaponTypes _weaponType;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xFF4A24", Offset = "0xFF4A24", VA = "0xFF4A24")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xFF4C14", Offset = "0xFF4C14", VA = "0xFF4C14")]
		public WeaponPickupSkinSelector()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[CreateAssetMenu(fileName = "WeaponSkinList", menuName = "HyperDash/Customization/WeaponSkinList")]
	public class WeaponSkinListObject : ScriptableObject
	{
		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponSkin[] SkinList;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xFF4C1C", Offset = "0xFF4C1C", VA = "0xFF4C1C")]
		public bool Contains(GunSkinEquipment equipment)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xFF4CD0", Offset = "0xFF4CD0", VA = "0xFF4CD0")]
		public WeaponSkinListObject()
		{
		}
	}
}
namespace HyperDash.CTF
{
	[Token(Token = "0x2000436")]
	public class CtfAnnouncer : MonoBehaviour
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Announcer _announcer;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetMusicPlayer _musicPlayer;

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xFF4D34", Offset = "0xFF4D34", VA = "0xFF4D34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xFF4DC8", Offset = "0xFF4DC8", VA = "0xFF4DC8")]
		public void OnTeamWinsGame(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xFF4F5C", Offset = "0xFF4F5C", VA = "0xFF4F5C")]
		public void OnOvertimeRoundStart()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xFF4F80", Offset = "0xFF4F80", VA = "0xFF4F80")]
		public void StartCountDown()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xFF5014", Offset = "0xFF5014", VA = "0xFF5014")]
		public void TeamScores(Teams team)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xFF505C", Offset = "0xFF505C", VA = "0xFF505C")]
		public void OnRoundReset()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xFF5060", Offset = "0xFF5060", VA = "0xFF5060")]
		public void OnRoundUpdate(float remainingTime)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xFF50FC", Offset = "0xFF50FC", VA = "0xFF50FC")]
		public void OnOvertimeRoundUpdate(float remainingTime)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xFF5130", Offset = "0xFF5130", VA = "0xFF5130")]
		public CtfAnnouncer()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[DefaultExecutionOrder(100)]
	public class CtfFlag : EntityEventListener<IFlagState>, IDamageable
	{
		[Token(Token = "0x200043A")]
		public enum States
		{
			[Token(Token = "0x400199E")]
			None,
			[Token(Token = "0x400199F")]
			AtBase,
			[Token(Token = "0x40019A0")]
			PlayerIsHolding,
			[Token(Token = "0x40019A1")]
			Dropped
		}

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource AudioSource;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RenderTransform;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer PickupSphere;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer FlagRenderer;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer PoleRenderer;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ServerTeamIndex;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TrailRenderer _trail;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BallIndicator _indicator;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private States _state;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _timeSinceHeld;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _holderHandIndex;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _startPosition;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _idleCounter;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _canGrab;

		[Token(Token = "0x400198E")]
		private const float _pickupRadius = 1f;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private WeaponTypes _weaponToReturn;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CtfGoal _goal;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CtfGoal[] Goals;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _holderTeamWhenGrabbed;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material[] FlagMaterials;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material[] PoleMaterials;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color[] IndicatorColors;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<int> OnStolenFromBase;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action OnReturned;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Shadow")]
		public MeshRenderer BlobShadow;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public LayerMask ShadowLayerMask;

		[Token(Token = "0x1700035E")]
		public bool CanGrab
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xFF52C4", Offset = "0xFF52C4", VA = "0xFF52C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xFF52CC", Offset = "0xFF52CC", VA = "0xFF52CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public States CaptureState
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xFF52D8", Offset = "0xFF52D8", VA = "0xFF52D8")]
			get
			{
				return default(States);
			}
		}

		[Token(Token = "0x17000360")]
		public NetCharacterBehaviour Holder
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xFF52E0", Offset = "0xFF52E0", VA = "0xFF52E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0xFF52E8", Offset = "0xFF52E8", VA = "0xFF52E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public int HandID
		{
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xFF52F0", Offset = "0xFF52F0", VA = "0xFF52F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000362")]
		public NetCharacterBehaviour PrevHolder
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xFF52F8", Offset = "0xFF52F8", VA = "0xFF52F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0xFF5300", Offset = "0xFF5300", VA = "0xFF5300")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public int HolderTeamSafe
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xFF5308", Offset = "0xFF5308", VA = "0xFF5308")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000364")]
		public int PrevHolderTeamSafe
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xFF5388", Offset = "0xFF5388", VA = "0xFF5388")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000365")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xFF5408", Offset = "0xFF5408", VA = "0xFF5408", Slot = "130")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xFF5410", Offset = "0xFF5410", VA = "0xFF5410", Slot = "131")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public bool IsAtBase
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xFF7374", Offset = "0xFF7374", VA = "0xFF7374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xFF541C", Offset = "0xFF541C", VA = "0xFF541C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xFF544C", Offset = "0xFF544C", VA = "0xFF544C")]
		public void SetTeam(int team)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xFF5528", Offset = "0xFF5528", VA = "0xFF5528")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xFF552C", Offset = "0xFF552C", VA = "0xFF552C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xFF5B74", Offset = "0xFF5B74", VA = "0xFF5B74")]
		private CtfGoal GetGoal(int team)
		{
			return null;
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xFF59FC", Offset = "0xFF59FC", VA = "0xFF59FC")]
		private void OnTeamIndexChanged()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xFF5C6C", Offset = "0xFF5C6C", VA = "0xFF5C6C", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xFF6A6C", Offset = "0xFF6A6C", VA = "0xFF6A6C", Slot = "127")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xFF6A70", Offset = "0xFF6A70", VA = "0xFF6A70", Slot = "129")]
		public void LocalExplosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xFF6A74", Offset = "0xFF6A74", VA = "0xFF6A74", Slot = "128")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xFF6A78", Offset = "0xFF6A78", VA = "0xFF6A78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xFF64CC", Offset = "0xFF64CC", VA = "0xFF64CC")]
		public void ServerResetAtBase()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xFF7384", Offset = "0xFF7384", VA = "0xFF7384")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xFF74E4", Offset = "0xFF74E4", VA = "0xFF74E4")]
		private void Grab(NetCharacterBehaviour character, int hand)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xFF6138", Offset = "0xFF6138", VA = "0xFF6138")]
		private void ServerUpdateHolder()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xFF7AC0", Offset = "0xFF7AC0", VA = "0xFF7AC0")]
		public void WeaponShoot(Vector3 force, NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xFF71EC", Offset = "0xFF71EC", VA = "0xFF71EC")]
		private void ReturnWeaponToHolder()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xFF7758", Offset = "0xFF7758", VA = "0xFF7758")]
		private void Drop(Vector3 force)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xFF7B78", Offset = "0xFF7B78", VA = "0xFF7B78")]
		public void OnFlagInSpawn()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xFF7BB8", Offset = "0xFF7BB8", VA = "0xFF7BB8")]
		public void OnFlagInWater()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xFF5D4C", Offset = "0xFF5D4C", VA = "0xFF5D4C")]
		private void ServerCheckIfPickupIsPickedUp()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xFF6FB8", Offset = "0xFF6FB8", VA = "0xFF6FB8")]
		public void ResetRenderTransform()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xFF7068", Offset = "0xFF7068", VA = "0xFF7068")]
		private void UpdateBlobShadow()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xFF7BF8", Offset = "0xFF7BF8", VA = "0xFF7BF8")]
		public CtfFlag()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[RequireComponent(typeof(BoundsComponent))]
	public class CtfFlagCollider : MonoBehaviour
	{
		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundsComponent _bounds;

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xFF7C40", Offset = "0xFF7C40", VA = "0xFF7C40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xFF7C98", Offset = "0xFF7C98", VA = "0xFF7C98")]
		public bool IsInside(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xFF7CB4", Offset = "0xFF7CB4", VA = "0xFF7CB4")]
		public CtfFlagCollider()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class CtfGoal : MonoBehaviour
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LockBillboard _lockBillboard;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TeamIndex;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform SpawnLocation;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _flagIsAtBase;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _holdingPlayer;

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xFF7CBC", Offset = "0xFF7CBC", VA = "0xFF7CBC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xFF7D3C", Offset = "0xFF7D3C", VA = "0xFF7D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xFF7EE8", Offset = "0xFF7EE8", VA = "0xFF7EE8")]
		private bool LocalPlayerHoldingFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xFF6FA8", Offset = "0xFF6FA8", VA = "0xFF6FA8")]
		public void SetFlagData(bool atBase, int characterID)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xFF8320", Offset = "0xFF8320", VA = "0xFF8320")]
		public CtfGoal()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class CtfMatch : Match
	{
		[Token(Token = "0x200043E")]
		private enum States
		{
			[Token(Token = "0x40019B6")]
			None,
			[Token(Token = "0x40019B7")]
			PreRound,
			[Token(Token = "0x40019B8")]
			Round,
			[Token(Token = "0x40019B9")]
			RoundOvertime,
			[Token(Token = "0x40019BA")]
			MatchPoint,
			[Token(Token = "0x40019BB")]
			MatchOver,
			[Token(Token = "0x40019BC")]
			NextMap
		}

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Audio")]
		[SerializeField]
		private CtfAnnouncer _announcerAndMusic;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private States _matchState;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IBallMatchState _boltState;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _stateTime;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CtfGoal[] Goals;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CtfFlagCollider[] StopFlagColliders;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int[] _botControllingTeam;

		[Token(Token = "0x40019B0")]
		private const float RoundOverTime = 4f;

		[Token(Token = "0x17000367")]
		public CtfFlag RedFlag
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xFF8328", Offset = "0xFF8328", VA = "0xFF8328")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xFF8330", Offset = "0xFF8330", VA = "0xFF8330")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public CtfFlag BlueFlag
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xFF8338", Offset = "0xFF8338", VA = "0xFF8338")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xFF8340", Offset = "0xFF8340", VA = "0xFF8340")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public static float BlueFlagLocationPercent
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xFF8348", Offset = "0xFF8348", VA = "0xFF8348")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xFF8390", Offset = "0xFF8390", VA = "0xFF8390")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public static float RedFlagLocationPercent
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xFF83E4", Offset = "0xFF83E4", VA = "0xFF83E4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xFF842C", Offset = "0xFF842C", VA = "0xFF842C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xFF8480", Offset = "0xFF8480", VA = "0xFF8480", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xFF856C", Offset = "0xFF856C", VA = "0xFF856C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xFF8F04", Offset = "0xFF8F04", VA = "0xFF8F04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xFF8F44", Offset = "0xFF8F44", VA = "0xFF8F44")]
		private void FindFlags()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xFF8D7C", Offset = "0xFF8D7C", VA = "0xFF8D7C")]
		private void ServerChangeState(States newState)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xFF9CC0", Offset = "0xFF9CC0", VA = "0xFF9CC0", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xFF962C", Offset = "0xFF962C", VA = "0xFF962C")]
		private void ServerEnterState(States newState)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xFF9CE8", Offset = "0xFF9CE8", VA = "0xFF9CE8")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xFFA810", Offset = "0xFFA810", VA = "0xFFA810")]
		private void OnRedFlagStolenFromBase(int playerID)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xFFA9D0", Offset = "0xFFA9D0", VA = "0xFFA9D0")]
		private void OnRedFlagReturned()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xFFAB28", Offset = "0xFFAB28", VA = "0xFFAB28")]
		private void OnBlueFlagStolenFromBase(int playerID)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xFFABEC", Offset = "0xFFABEC", VA = "0xFFABEC")]
		private void OnBlueFlagReturned()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xFFA7A4", Offset = "0xFFA7A4", VA = "0xFFA7A4")]
		private void UpdateAnnouncer()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xFFA07C", Offset = "0xFFA07C", VA = "0xFFA07C")]
		private void GetBestTeam(out Teams teamWithHighestScore, out int teamHighestScore)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xFF8CA0", Offset = "0xFF8CA0", VA = "0xFF8CA0")]
		public CtfGoal GetBase(Teams team)
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xFF91E8", Offset = "0xFF91E8", VA = "0xFF91E8")]
		private void UpdateFlagLocationPercent()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xFFAC48", Offset = "0xFFAC48", VA = "0xFFAC48", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xFFAEA8", Offset = "0xFFAEA8", VA = "0xFFAEA8", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xFFAEB0", Offset = "0xFFAEB0", VA = "0xFFAEB0", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xFFAED8", Offset = "0xFFAED8", VA = "0xFFAED8", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xFFAF00", Offset = "0xFFAF00", VA = "0xFFAF00")]
		public void Score(Teams team, CtfFlag flag)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xFF9F14", Offset = "0xFF9F14", VA = "0xFF9F14")]
		private void RespawnAllPlayers()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xFFA500", Offset = "0xFFA500", VA = "0xFFA500")]
		private void CheckIfFlagScored()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xFFA6B0", Offset = "0xFFA6B0", VA = "0xFFA6B0")]
		private void CheckIfFlagIsInSpawn()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xFFA44C", Offset = "0xFFA44C", VA = "0xFFA44C")]
		public void SendHudMessagesOnTeamWinsGame(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xFFB3A0", Offset = "0xFFB3A0", VA = "0xFFB3A0")]
		public void SendHudMessagesOnScore(PlayerObject player, int scoreRed, int scoreBlue)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xFFA8D4", Offset = "0xFFA8D4", VA = "0xFFA8D4")]
		public void SendHudMessagesOnFlagStolen(Teams flag)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xFFAA2C", Offset = "0xFFAA2C", VA = "0xFFAA2C")]
		public void SendHudMessagesOnFlagReturned(Teams flag)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xFFB580", Offset = "0xFFB580", VA = "0xFFB580")]
		public CtfMatch()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class LockBillboard : MonoBehaviour
	{
		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[ColorUsage(true, true)]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion _previousRotation;

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xFF800C", Offset = "0xFF800C", VA = "0xFF800C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xFFB71C", Offset = "0xFFB71C", VA = "0xFFB71C")]
		public LockBillboard()
		{
		}
	}
}
namespace HyperDash.ControlPoint
{
	[Token(Token = "0x2000440")]
	public class ControlPoint : MonoBehaviour
	{
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PedestalButton _button;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TeamLight[] _lights;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _blueTeamFx;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _redTeamFx;

		[Token(Token = "0x1700036B")]
		public PedestalButton Button
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xFFB77C", Offset = "0xFFB77C", VA = "0xFFB77C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xFFB784", Offset = "0xFFB784", VA = "0xFFB784")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xFFB78C", Offset = "0xFFB78C", VA = "0xFFB78C")]
		public void OnCapture(Teams team)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xFFB9C0", Offset = "0xFFB9C0", VA = "0xFFB9C0")]
		public ControlPoint()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class ControlPointMatch : Match
	{
		[Token(Token = "0x2000442")]
		private enum ControlPointMatchState
		{
			[Token(Token = "0x40019D2")]
			None,
			[Token(Token = "0x40019D3")]
			Playing,
			[Token(Token = "0x40019D4")]
			MatchOver,
			[Token(Token = "0x40019D5")]
			NextMap
		}

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Effects")]
		[SerializeField]
		private Material _neutralGlow;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material _redTeamGlow;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material _blueTeamGlow;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ControlPoint _controlPoint;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] _timeInControl;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _previousControllingTeam;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _previousLeadingTeam;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ControlPointMatchState _matchState;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _stateTime;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _stateChangeTime;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] _botControllingTeam;

		[Token(Token = "0x1700036C")]
		public override float Timer
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xFFBA24", Offset = "0xFFBA24", VA = "0xFFBA24", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xFFBB24", Offset = "0xFFBB24", VA = "0xFFBB24", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xFFBBE8", Offset = "0xFFBBE8", VA = "0xFFBBE8", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xFFC384", Offset = "0xFFC384", VA = "0xFFC384", Slot = "19")]
		public override void Detached()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xFFC4D0", Offset = "0xFFC4D0", VA = "0xFFC4D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xFFC508", Offset = "0xFFC508", VA = "0xFFC508")]
		private void UpdateSpawnBlockers()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xFFC190", Offset = "0xFFC190", VA = "0xFFC190")]
		private void ServerChangeState(ControlPointMatchState newState)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xFFC898", Offset = "0xFFC898", VA = "0xFFC898")]
		private Teams GetCurrentWinner()
		{
			return default(Teams);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xFFC778", Offset = "0xFFC778", VA = "0xFFC778")]
		private void ServerEnterState(ControlPointMatchState newState)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xFFCCA8", Offset = "0xFFCCA8", VA = "0xFFCCA8")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xFFCE40", Offset = "0xFFCE40", VA = "0xFFCE40", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xFFD1A4", Offset = "0xFFD1A4", VA = "0xFFD1A4")]
		public void UpdateAnnouncerMessages()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xFFCB38", Offset = "0xFFCB38", VA = "0xFFCB38")]
		public void AnnouncerOnGameEnd(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xFFCE78", Offset = "0xFFCE78", VA = "0xFFCE78")]
		private void UpdateScore()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xFFD4BC", Offset = "0xFFD4BC", VA = "0xFFD4BC")]
		private void OnButtonPressed(PedestalButton sender, int playerID)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xFFC224", Offset = "0xFFC224", VA = "0xFFC224")]
		private void OnControllingTeamChanged()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xFFD740", Offset = "0xFFD740", VA = "0xFFD740")]
		public void SetGlow(Material glowMaterial)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xFFD798", Offset = "0xFFD798", VA = "0xFFD798", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xFFD958", Offset = "0xFFD958", VA = "0xFFD958", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xFFD968", Offset = "0xFFD968", VA = "0xFFD968", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xFFD970", Offset = "0xFFD970", VA = "0xFFD970", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xFFD980", Offset = "0xFFD980", VA = "0xFFD980")]
		public ControlPointMatch()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class InitializeControlpoint : GlobalEventListener
	{
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xFFDCEC", Offset = "0xFFDCEC", VA = "0xFFDCEC", Slot = "20")]
		public override void SceneLoadLocalDone(string scene, IProtocolToken token)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xFFDE80", Offset = "0xFFDE80", VA = "0xFFDE80")]
		public InitializeControlpoint()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class PedestalButton : MonoBehaviour
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider _collider;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _buttonTransform;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _pressedY;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _minY;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent _onPressedUnityEvent;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _canBePressed;

		[Token(Token = "0x1700036F")]
		public Transform ButtonTransform
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xFFDE88", Offset = "0xFFDE88", VA = "0xFFDE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<PedestalButton, int> PressedEvent
		{
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xFFC0E0", Offset = "0xFFC0E0", VA = "0xFFC0E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xFFC420", Offset = "0xFFC420", VA = "0xFFC420")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xFFDE90", Offset = "0xFFDE90", VA = "0xFFDE90")]
		private void InvokePressedEvents(int playerID)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xFFDEE4", Offset = "0xFFDEE4", VA = "0xFFDEE4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xFFE11C", Offset = "0xFFE11C", VA = "0xFFE11C")]
		private bool CheckIfHandInCollider(out Vector3 handPosition, out int playerID, out int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xFFE4AC", Offset = "0xFFE4AC", VA = "0xFFE4AC")]
		public void PressButton(int playerID, int handIndex = 0)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xFFE6C4", Offset = "0xFFE6C4", VA = "0xFFE6C4")]
		public PedestalButton()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class TeamLight : MonoBehaviour
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[ColorUsage(true, true)]
		[Header("Colors")]
		private Color _default;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _redLight;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ColorUsage(true, true)]
		private Color _blueLight;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly int _colorID;

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xFFE6D8", Offset = "0xFFE6D8", VA = "0xFFE6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xFFB820", Offset = "0xFFB820", VA = "0xFFB820")]
		public void SetTeam(Teams team)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xFFE788", Offset = "0xFFE788", VA = "0xFFE788")]
		public TeamLight()
		{
		}
	}
}
namespace HyperDash.HDBhaptics
{
	[Token(Token = "0x2000448")]
	public static class BhapticsHelpers
	{
		[Token(Token = "0x2000449")]
		public enum PairState
		{
			[Token(Token = "0x40019E9")]
			SearchingForDevice,
			[Token(Token = "0x40019EA")]
			ReadyToPair,
			[Token(Token = "0x40019EB")]
			Paired,
			[Token(Token = "0x40019EC")]
			Connecting
		}

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<HapticDevice> PcDevices;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xFFE7E0", Offset = "0xFFE7E0", VA = "0xFFE7E0")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xFFE830", Offset = "0xFFE830", VA = "0xFFE830")]
		public static bool IsDeviceConnected(PositionType deviceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xFFE924", Offset = "0xFFE924", VA = "0xFFE924")]
		public static void PingDevice(PositionType device)
		{
		}
	}
	[Token(Token = "0x200044A")]
	public enum VestImpactTypes
	{
		[Token(Token = "0x40019EE")]
		BulletHit_level1,
		[Token(Token = "0x40019EF")]
		BulletHit_level2,
		[Token(Token = "0x40019F0")]
		ExplosionHit_level1,
		[Token(Token = "0x40019F1")]
		ExplosionHit_level2,
		[Token(Token = "0x40019F2")]
		HeadShot
	}
	[Token(Token = "0x200044B")]
	public enum RecoilHapticTypes
	{
		[Token(Token = "0x40019F4")]
		recoil_level1,
		[Token(Token = "0x40019F5")]
		recoil_level2,
		[Token(Token = "0x40019F6")]
		recoil_shotgun
	}
	[Token(Token = "0x200044C")]
	public class HDBhapticsManager : MonoBehaviour
	{
		[Token(Token = "0x200044D")]
		[CompilerGenerated]
		private sealed class <PingHaptic>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticClip clip;

			[Token(Token = "0x17000374")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B57")]
				[Address(RVA = "0x1000174", Offset = "0x1000174", VA = "0x1000174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000375")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B59")]
				[Address(RVA = "0x10001BC", Offset = "0x10001BC", VA = "0x10001BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xFFFFBC", Offset = "0xFFFFBC", VA = "0xFFFFBC")]
			[DebuggerHidden]
			public <PingHaptic>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xFFFFEC", Offset = "0xFFFFEC", VA = "0xFFFFEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xFFFFF0", Offset = "0xFFFFF0", VA = "0xFFFFF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x100017C", Offset = "0x100017C", VA = "0x100017C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BhapticsAndroidManager _androidManagerPrefab;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Impacts")]
		private VestHapticClip _bodyHitLevel1;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VestHapticClip _bodyHitLevel2;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VestHapticClip _explosionHitLevel1;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VestHapticClip _explosionHitLevel2;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private HeadHapticClip[] _headImpact;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HeadHapticClip[] _headExplosions;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("Pickups")]
		private VestHapticClip _pickupHealth;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VestHapticClip _vestPickupL;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmsHapticClip _armPickupL;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VestHapticClip _vestPickupR;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ArmsHapticClip _armPickupR;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Header("Recoil")]
		private VestHapticClip _vestRecoilLevel1L;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ArmsHapticClip _armRecoilLevel1L;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private VestHapticClip _vestRecoilLevel2L;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ArmsHapticClip _armRecoilLevel2L;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private VestHapticClip _vestRecoilShotgunL;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ArmsHapticClip _armRecoilShotgunL;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private VestHapticClip _vestRecoilLevel1R;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ArmsHapticClip _armRecoilLevel1R;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private VestHapticClip _vestRecoilLevel2R;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ArmsHapticClip _armRecoilLevel2R;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private VestHapticClip _vestRecoilShotgunR;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ArmsHapticClip _armRecoilShotgunR;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Header("Reloading")]
		[SerializeField]
		private VestHapticClip _vestReloadL;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ArmsHapticClip _armReloadL;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private VestHapticClip _vestReloadR;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ArmsHapticClip _armReloadR;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Header("Other")]
		[SerializeField]
		private VestHapticClip _vestGrinding;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private VestHapticClip _vestLowHealth;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ArmsHapticClip _armDashL;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private ArmsHapticClip _armDashR;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private VestHapticClip _vestFallInWater;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private VestHapticClip _vestPayloadExplosion;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private VestHapticClip _vestSprint;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private VestHapticClip _vestButtonL;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private VestHapticClip _vestButtonR;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private ArmsHapticClip _armButtonL;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private ArmsHapticClip _armButtonR;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private BhapticsAndroidManager _androidManager;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int _idCount;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int _framesUnitlNextPulse;

		[Token(Token = "0x17000370")]
		public static HDBhapticsManager Instance
		{
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xFFEE00", Offset = "0xFFEE00", VA = "0xFFEE00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xFFEE48", Offset = "0xFFEE48", VA = "0xFFEE48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public static bool HasInstance
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xFFEEA0", Offset = "0xFFEEA0", VA = "0xFFEEA0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xFFEEE8", Offset = "0xFFEEE8", VA = "0xFFEEE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xFFEF34", Offset = "0xFFEF34", VA = "0xFFEF34")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xFFEF7C", Offset = "0xFFEF7C", VA = "0xFFEF7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public static bool IsEnabled
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xFFEFC8", Offset = "0xFFEFC8", VA = "0xFFEFC8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xFFF010", Offset = "0xFFF010", VA = "0xFFF010")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xFFF05C", Offset = "0xFFF05C", VA = "0xFFF05C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xFFF36C", Offset = "0xFFF36C", VA = "0xFFF36C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xFFF288", Offset = "0xFFF288", VA = "0xFFF288")]
		private void InitBhaptics()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xFFF4D0", Offset = "0xFFF4D0", VA = "0xFFF4D0")]
		private void DisposeBhaptics()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xFFF5AC", Offset = "0xFFF5AC", VA = "0xFFF5AC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xFFF5B0", Offset = "0xFFF5B0", VA = "0xFFF5B0")]
		public void PlayVestImpactHaptic(VestImpactTypes type, float angle, float offsetY)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xFFF75C", Offset = "0xFFF75C", VA = "0xFFF75C")]
		private string GetNewID()
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xFFF7E4", Offset = "0xFFF7E4", VA = "0xFFF7E4")]
		public void PlayPickupHealthHaptic()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xFFF844", Offset = "0xFFF844", VA = "0xFFF844")]
		public void PlayPayloadExplosion()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xFFF8A4", Offset = "0xFFF8A4", VA = "0xFFF8A4")]
		public void PlayRecoil(RecoilHapticTypes type, bool isLeft)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xFFF9AC", Offset = "0xFFF9AC", VA = "0xFFF9AC")]
		private void OnHapticsEnabledChanged(bool isEnabled)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xFFFAA0", Offset = "0xFFFAA0", VA = "0xFFFAA0")]
		public static void GetAngleOffsetFromImpact(Vector3 contactPos, BoundsComponent bounds, out float angle, out float offsetY)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xFFFB90", Offset = "0xFFFB90", VA = "0xFFFB90")]
		public void PlayPickup(bool isLeft)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xFFFBEC", Offset = "0xFFFBEC", VA = "0xFFFBEC")]
		public void PlayReload(bool isLeft, float duration)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xFFFCB8", Offset = "0xFFFCB8", VA = "0xFFFCB8")]
		public void UpdateLowHealth(float health)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xFFFDB4", Offset = "0xFFFDB4", VA = "0xFFFDB4")]
		public void PlayGrind(bool isSprinting, float frameDeltaTime)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xFFFE34", Offset = "0xFFFE34", VA = "0xFFFE34")]
		public void PlaySprint(float frameDeltaTime)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xFFE668", Offset = "0xFFE668", VA = "0xFFE668")]
		public void PlayButtonhaptic(bool isLeft)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xFFFE98", Offset = "0xFFFE98", VA = "0xFFFE98")]
		public void PlayDash(bool isleft)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xFFFF28", Offset = "0xFFFF28", VA = "0xFFFF28")]
		public void PlayFallInWater()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xFFEAB8", Offset = "0xFFEAB8", VA = "0xFFEAB8")]
		public void PingVest()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xFFEA70", Offset = "0xFFEA70", VA = "0xFFEA70")]
		public void PingArmLeft()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xFFEA94", Offset = "0xFFEA94", VA = "0xFFEA94")]
		public void PingArmRight()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xFFEADC", Offset = "0xFFEADC", VA = "0xFFEADC")]
		public void PingHead()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xFFFF48", Offset = "0xFFFF48", VA = "0xFFFF48")]
		[IteratorStateMachine(typeof(<PingHaptic>d__82))]
		private IEnumerator PingHaptic(HapticClip clip)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xFFFFE4", Offset = "0xFFFFE4", VA = "0xFFFFE4")]
		public HDBhapticsManager()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[BoltGlobalBehaviour]
	public class BhapticsCallbacks : GlobalEventListener
	{
		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x10001C4", Offset = "0x10001C4", VA = "0x10001C4", Slot = "128")]
		public override void OnEvent(BHapticsEvent evnt)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x100029C", Offset = "0x100029C", VA = "0x100029C")]
		public BhapticsCallbacks()
		{
		}
	}
}
namespace HyperDash.Ball
{
	[Token(Token = "0x200044F")]
	public class BallAnnouncer : MonoBehaviour
	{
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Announcer _announcer;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetMusicPlayer _musicPlayer;

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x10002A4", Offset = "0x10002A4", VA = "0x10002A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1000338", Offset = "0x1000338", VA = "0x1000338")]
		public void OnTeamWinsGame(Teams winningTeam)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x10004CC", Offset = "0x10004CC", VA = "0x10004CC")]
		public void OnTieBreakerRoundStart()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x100058C", Offset = "0x100058C", VA = "0x100058C")]
		public void OnOutOfTime()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x10006A0", Offset = "0x10006A0", VA = "0x10006A0")]
		public void Overtime()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x10006C4", Offset = "0x10006C4", VA = "0x10006C4")]
		public void StartCountDown(float timeRemaining)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x10006E4", Offset = "0x10006E4", VA = "0x10006E4")]
		public void StartRound()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1000708", Offset = "0x1000708", VA = "0x1000708")]
		public void TeamScores(Teams team)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x100077C", Offset = "0x100077C", VA = "0x100077C")]
		public void OnRoundReset()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x10007FC", Offset = "0x10007FC", VA = "0x10007FC")]
		public void StartCountDown()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1000890", Offset = "0x1000890", VA = "0x1000890")]
		public void OnRoundUpdate(float remainingTime)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x100092C", Offset = "0x100092C", VA = "0x100092C")]
		public BallAnnouncer()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class BallBeam : MonoBehaviour
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetBall _ball;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _beam;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _timeSinceBallLastHeld;

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1000B08", Offset = "0x1000B08", VA = "0x1000B08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1000CE4", Offset = "0x1000CE4", VA = "0x1000CE4")]
		public BallBeam()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class BallBooster : MonoBehaviour
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1000CEC", Offset = "0x1000CEC", VA = "0x1000CEC")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1000F3C", Offset = "0x1000F3C", VA = "0x1000F3C")]
		public BallBooster()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class BallGoal : MonoBehaviour
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TeamIndex;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer _crossRenderer;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1000F4C", Offset = "0x1000F4C", VA = "0x1000F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x10010EC", Offset = "0x10010EC", VA = "0x10010EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x10016C8", Offset = "0x10016C8", VA = "0x10016C8")]
		public BallGoal()
		{
		}
	}
	[Token(Token = "0x2000455")]
	[DefaultExecutionOrder(200000)]
	public class BallIndicator : MonoBehaviour
	{
		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _bounceSpeed;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[FormerlySerializedAs("_color")]
		[SerializeField]
		public Color Color;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _previousRotation;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _angle;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ColorShaderProperty;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x10016D0", Offset = "0x10016D0", VA = "0x10016D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1001738", Offset = "0x1001738", VA = "0x1001738")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1001BE8", Offset = "0x1001BE8", VA = "0x1001BE8")]
		public BallIndicator()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class BallMatch : Match
	{
		[Token(Token = "0x2000457")]
		private enum BallMatchState
		{
			[Token(Token = "0x4001A4B")]
			None,
			[Token(Token = "0x4001A4C")]
			PreFirstRound,
			[Token(Token = "0x4001A4D")]
			PreRound,
			[Token(Token = "0x4001A4E")]
			Round,
			[Token(Token = "0x4001A4F")]
			AfterRound,
			[Token(Token = "0x4001A50")]
			Overtime,
			[Token(Token = "0x4001A51")]
			PreTieBreaker,
			[Token(Token = "0x4001A52")]
			TieBreakerRound,
			[Token(Token = "0x4001A53")]
			MatchOver,
			[Token(Token = "0x4001A54")]
			NextMap
		}

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Audio")]
		[SerializeField]
		private BallAnnouncer _announcerAndMusic;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BallMatchState _matchState;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IBallMatchState _boltState;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _stateTime;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BallGoal[] Goals;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3[] _botObjectivePositions;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _botControllingTeam;

		[Token(Token = "0x4001A45")]
		private const int RoundOverTime = 4;

		[Token(Token = "0x4001A46")]
		private const int PreRoundDuration = 5;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _hasFadedAtEndOfRound;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CtfFlagCollider[] SpawnZones;

		[Token(Token = "0x17000378")]
		public NetBall Ball
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1001CBC", Offset = "0x1001CBC", VA = "0x1001CBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x1001CC4", Offset = "0x1001CC4", VA = "0x1001CC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1001CCC", Offset = "0x1001CCC", VA = "0x1001CCC", Slot = "30")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1001DB0", Offset = "0x1001DB0", VA = "0x1001DB0", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x10022D4", Offset = "0x10022D4", VA = "0x10022D4")]
		private void ServerChangeState(BallMatchState newState)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1002BAC", Offset = "0x1002BAC", VA = "0x1002BAC", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x100245C", Offset = "0x100245C", VA = "0x100245C")]
		private void ServerEnterState(BallMatchState newState)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1002BD4", Offset = "0x1002BD4", VA = "0x1002BD4")]
		private void ServerUpdateState()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1003168", Offset = "0x1003168", VA = "0x1003168")]
		private void GetBestTeam(out Teams teamWithHighestScore, out int teamHighestScore)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x10037C8", Offset = "0x10037C8", VA = "0x10037C8")]
		public BallGoal GetGoal(int team)
		{
			return null;
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x10038C0", Offset = "0x10038C0", VA = "0x10038C0", Slot = "36")]
		public override bool GetBotObjective(out Vector3[] position, out bool useHands, out int[] controllingTeam, out MatchTypes matchType, out int playerOnObjective)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1003A04", Offset = "0x1003A04", VA = "0x1003A04", Slot = "32")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1003A0C", Offset = "0x1003A0C", VA = "0x1003A0C", Slot = "33")]
		public override bool QueryCanUpdateStats()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1003A3C", Offset = "0x1003A3C", VA = "0x1003A3C", Slot = "37")]
		public override bool QueryAllowFire()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x10012A8", Offset = "0x10012A8", VA = "0x10012A8")]
		public void Score(int goalTeamIndex)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1003000", Offset = "0x1003000", VA = "0x1003000")]
		private void RespawnAllPlayers()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x10035EC", Offset = "0x10035EC", VA = "0x10035EC")]
		private void CheckIfBallIsInSpawn()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1003538", Offset = "0x1003538", VA = "0x1003538")]
		public void SendHudMessagesOnTeamWinsGame(Teams winner, float duration)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1003A50", Offset = "0x1003A50", VA = "0x1003A50")]
		public void SendHudMessagesOnScore(PlayerObject player, int scoreBlue, int scoreRed)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1003C20", Offset = "0x1003C20", VA = "0x1003C20")]
		public BallMatch()
		{
		}
	}
	[Token(Token = "0x2000458")]
	[DefaultExecutionOrder(100)]
	public class NetBall : EntityEventListener<IBallState>, IDamageable
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource AudioSource;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RenderTransform;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer PickupSphere;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer SeeThroughSphere;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject Visuals;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("RigidBody")]
		public float PassForce;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Drag;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Mass;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ShotImpactForce;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Fx")]
		[SerializeField]
		private Transform _chargeFx;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _minFxScale;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Vector3 _maxFxScale;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TrailRenderer _trail;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private DamageZone _damageZone;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _timeSinceHeld;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _holderHandIndex;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _startPosition;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _charge;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _idleCounter;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _canGrab;

		[Token(Token = "0x4001A6A")]
		private const float _pickupRadius = 1f;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _previousPosition;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private WeaponTypes _weaponToReturn;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _hasTeleportedThisFrame;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool _isGrabbed;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _holderTeamWhenGrabbed;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Header("Shadow")]
		public MeshRenderer BlobShadow;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public LayerMask ShadowLayerMask;

		[Token(Token = "0x17000379")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x1004D7C", Offset = "0x1004D7C", VA = "0x1004D7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700037A")]
		public NetCharacterBehaviour Holder
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x1004D88", Offset = "0x1004D88", VA = "0x1004D88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x1004D90", Offset = "0x1004D90", VA = "0x1004D90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public NetCharacterBehaviour PrevHolder
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x1004D98", Offset = "0x1004D98", VA = "0x1004D98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x1004DA0", Offset = "0x1004DA0", VA = "0x1004DA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public int HolderTeamSafe
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x1004DA8", Offset = "0x1004DA8", VA = "0x1004DA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037D")]
		public int PrevHolderTeamSafe
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x1004E28", Offset = "0x1004E28", VA = "0x1004E28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037E")]
		public bool LocalHasPlayedWaterSplash
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x1004EA8", Offset = "0x1004EA8", VA = "0x1004EA8", Slot = "130")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x1004EB0", Offset = "0x1004EB0", VA = "0x1004EB0", Slot = "131")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public float TimeSinceLastHeld
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x1004EBC", Offset = "0x1004EBC", VA = "0x1004EBC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x1004EC4", Offset = "0x1004EC4", VA = "0x1004EC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public int BouncesSinceHeld
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x1004ECC", Offset = "0x1004ECC", VA = "0x1004ECC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x1004ED4", Offset = "0x1004ED4", VA = "0x1004ED4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1004EDC", Offset = "0x1004EDC", VA = "0x1004EDC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1004F1C", Offset = "0x1004F1C", VA = "0x1004F1C", Slot = "18")]
		public override void Attached()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x10053EC", Offset = "0x10053EC", VA = "0x10053EC")]
		public void OnVisibilityChanged()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1005778", Offset = "0x1005778", VA = "0x1005778", Slot = "20")]
		public override void SimulateOwner()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1006410", Offset = "0x1006410", VA = "0x1006410", Slot = "127")]
		public void Damage(DamageZone damageZone, HitData hitData)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1006478", Offset = "0x1006478", VA = "0x1006478", Slot = "129")]
		public void LocalExplosion(Vector3 position, float force, float radius)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x100647C", Offset = "0x100647C", VA = "0x100647C", Slot = "128")]
		public void LocalImpact(Vector3 position, Vector3 force, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1006480", Offset = "0x1006480", VA = "0x1006480")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1006D30", Offset = "0x1006D30", VA = "0x1006D30")]
		private void OnHolderChanged()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1006F38", Offset = "0x1006F38", VA = "0x1006F38")]
		public void ServerFreezeAtCenter()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x100607C", Offset = "0x100607C", VA = "0x100607C")]
		public void ServerResetAtCenter()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x1007040", Offset = "0x1007040", VA = "0x1007040")]
		private void ReturnWeaponToHolder()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x10071C8", Offset = "0x10071C8", VA = "0x10071C8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1007334", Offset = "0x1007334", VA = "0x1007334")]
		private void Grab(NetCharacterBehaviour character, int hand)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1007528", Offset = "0x1007528", VA = "0x1007528")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x1005CB0", Offset = "0x1005CB0", VA = "0x1005CB0")]
		private void ServerUpdateHolder()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x100766C", Offset = "0x100766C", VA = "0x100766C")]
		public void WeaponShoot(Vector3 force, NetCharacterBehaviour character)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x10054C8", Offset = "0x10054C8", VA = "0x10054C8")]
		public void Shoot(Vector3 force)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x10058F4", Offset = "0x10058F4", VA = "0x10058F4")]
		private bool ServerCheckIfPickupIsPickedUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x1007838", Offset = "0x1007838", VA = "0x1007838")]
		public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x10077D0", Offset = "0x10077D0", VA = "0x10077D0")]
		public static float DistancePointLineSqr(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x100795C", Offset = "0x100795C", VA = "0x100795C")]
		public void OnInSpawn()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1007960", Offset = "0x1007960", VA = "0x1007960")]
		public void OnBallInWater()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1006AFC", Offset = "0x1006AFC", VA = "0x1006AFC")]
		public void ResetRenderTransform()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1006BAC", Offset = "0x1006BAC", VA = "0x1006BAC")]
		private void UpdateBlobShadow()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1007964", Offset = "0x1007964", VA = "0x1007964")]
		public NetBall()
		{
		}
	}
}
namespace HyperDash.Backend
{
	[Token(Token = "0x2000459")]
	public class ArcadeValidator : MonoBehaviour
	{
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1007A00", Offset = "0x1007A00", VA = "0x1007A00")]
		public ArcadeValidator()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public abstract class AuthenticatedServer : Server, IMovableServer
	{
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x1007A08", Offset = "0x1007A08", VA = "0x1007A08")]
		public AuthenticatedServer(string hostname, GetArgsEncoding encoding)
		{
		}

		[Token(Token = "0x6001BBA")]
		public abstract void RefreshToken();

		[Token(Token = "0x6001BBB")]
		public abstract IServerRequest<Response<T>> MakeAuthRequest<T>(IServerRequest<Response<T>> request, Action<Response<T>> callback);

		[Token(Token = "0x6001BBC")]
		public abstract void ServerMoved(string url);
	}
	[Token(Token = "0x200045B")]
	public class AuthenticatedServerRequest<T> : IServerRequest<Response<T>>, IBaseServerRequest, IEnumerator
	{
		[Token(Token = "0x200045C")]
		public delegate void RequestEndedDelegate(AuthenticatedServerRequest<T> sender);

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IServerRequest<Response<T>> _originalServerRequest;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly AuthenticatedServer _api;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<Response<T>> _callback;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _waiting;

		[Token(Token = "0x17000381")]
		public object Current
		{
			[Token(Token = "0x6001BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public Response<T> Response
		{
			[Token(Token = "0x6001BC1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public string Error
		{
			[Token(Token = "0x6001BC2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public bool IsRequestDone
		{
			[Token(Token = "0x6001BC3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004C")]
		public event RequestEndedDelegate RequestEndedEvent
		{
			[Token(Token = "0x6001BBD")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BBE")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BBF")]
		private void OnRequestEnded()
		{
		}

		[Token(Token = "0x6001BC4")]
		public AuthenticatedServerRequest(AuthenticatedServer api, IServerRequest<Response<T>> originalRequest, [Optional] Action<Response<T>> callback)
		{
		}

		[Token(Token = "0x6001BC5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BC7")]
		public void ResetRequest()
		{
		}

		[Token(Token = "0x6001BC8")]
		public void ChangeHost(string oldUrl, string newUrl)
		{
		}

		[Token(Token = "0x6001BC9")]
		public void Start([Optional] Dictionary<string, string> headers)
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class BackendTest : MonoBehaviour
	{
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1007A94", Offset = "0x1007A94", VA = "0x1007A94")]
		public BackendTest()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ClientAPI : AuthenticatedServer
	{
		[Token(Token = "0x4001A7C")]
		private const string SignatureToken = "emls9Aba626h2GJSZTq5PVrrvmSoB2";

		[Token(Token = "0x4001A7D")]
		private const string JwtTokenHeader = "x-jwt-authorization";

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly TokenResponse _token;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ServerRequest<BaseResponse> _tokenRequest;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Queue<IBaseServerRequest> _waitingRequests;

		[Token(Token = "0x17000385")]
		private bool IsCheckingToken
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x1007A9C", Offset = "0x1007A9C", VA = "0x1007A9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1007AAC", Offset = "0x1007AAC", VA = "0x1007AAC")]
		public ClientAPI(string hostName, GetArgsEncoding getArgsEncoding = GetArgsEncoding.Query)
		{
		}

		[Token(Token = "0x6001BD1")]
		protected override ServerRequest<T> GetRequest<T>(string relativePath, Dictionary<string, string> getArgs, Dictionary<string, string> headers, [Optional] Action<T> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BD2")]
		protected override ServerRequest<T> PostRequest<T>(string relativePath, Dictionary<string, string> postArgs, Dictionary<string, string> headers, [Optional] Action<T> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1007BEC", Offset = "0x1007BEC", VA = "0x1007BEC", Slot = "9")]
		public override void ServerMoved(string url)
		{
		}

		[Token(Token = "0x6001BD4")]
		public override IServerRequest<Response<T>> MakeAuthRequest<T>(IServerRequest<Response<T>> request, Action<Response<T>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BD5")]
		private void OnRequestEnded<T>(AuthenticatedServerRequest<T> sender)
		{
		}

		[Token(Token = "0x6001BD6")]
		private void RequestDone<T>(Response<T> response, Action<Response<T>> callback)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1007EF4", Offset = "0x1007EF4", VA = "0x1007EF4")]
		private void SyncServerTime(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x10080C0", Offset = "0x10080C0", VA = "0x10080C0")]
		private void RegisterForToken()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x10081F0", Offset = "0x10081F0", VA = "0x10081F0", Slot = "7")]
		public override void RefreshToken()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1008340", Offset = "0x1008340", VA = "0x1008340")]
		private void TokenRequestDone(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x100847C", Offset = "0x100847C", VA = "0x100847C")]
		private void SetToken(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x10085E4", Offset = "0x10085E4", VA = "0x10085E4")]
		private Dictionary<string, string> GetSignatureHeader(Dictionary<string, string> arguments, [Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1008A18", Offset = "0x1008A18", VA = "0x1008A18")]
		private string HashPassword(string password)
		{
			return null;
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1008ABC", Offset = "0x1008ABC", VA = "0x1008ABC")]
		public IServerRequest<Response<string>> Login(string username, string password, [Optional] Action<Response<string>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1008C58", Offset = "0x1008C58", VA = "0x1008C58")]
		public IServerRequest<Response<GameStartResponse>> StartMatch(int playerCount, [Optional] Action<Response<GameStartResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1008DC4", Offset = "0x1008DC4", VA = "0x1008DC4")]
		public IServerRequest<Response<string>> EndMatch(int sessionID, [Optional] Action<Response<string>> callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000460")]
	public static class ClientAPIUtilities
	{
		[Token(Token = "0x4001A83")]
		private const string Version = "v1.8";

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1008F30", Offset = "0x1008F30", VA = "0x1008F30")]
		public static string GetGameClientAPIUrl()
		{
			return null;
		}
	}
	[Token(Token = "0x2000461")]
	public enum ErrorCodes
	{
		[Token(Token = "0x4001A85")]
		Maintenance = -1,
		[Token(Token = "0x4001A86")]
		None = 0,
		[Token(Token = "0x4001A87")]
		InitializeFailed = 1,
		[Token(Token = "0x4001A88")]
		Expired = 3,
		[Token(Token = "0x4001A89")]
		BackendMoved = 308,
		[Token(Token = "0x4001A8A")]
		Authentication = 401,
		[Token(Token = "0x4001A8B")]
		Token = 402,
		[Token(Token = "0x4001A8C")]
		NotFound = 404,
		[Token(Token = "0x4001A8D")]
		NotAllowed = 405,
		[Token(Token = "0x4001A8E")]
		Credits = 406,
		[Token(Token = "0x4001A8F")]
		Conflict = 409,
		[Token(Token = "0x4001A90")]
		InvalidState = 410,
		[Token(Token = "0x4001A91")]
		Internal = 500,
		[Token(Token = "0x4001A92")]
		ConnectionTimeout = 599
	}
	[Token(Token = "0x2000462")]
	public enum TokenError
	{
		[Token(Token = "0x4001A94")]
		Valid,
		[Token(Token = "0x4001A95")]
		MissingToken,
		[Token(Token = "0x4001A96")]
		InvalidToken,
		[Token(Token = "0x4001A97")]
		ExpiredToken,
		[Token(Token = "0x4001A98")]
		InvalidAccountType,
		[Token(Token = "0x4001A99")]
		InvalidAccount,
		[Token(Token = "0x4001A9A")]
		InvalidStoreAccount,
		[Token(Token = "0x4001A9B")]
		InvalidSignature,
		[Token(Token = "0x4001A9C")]
		Banned
	}
	[Token(Token = "0x2000463")]
	public class GameClientAPI : AuthenticatedServer
	{
		[Token(Token = "0x4001A9D")]
		private const string JwtTokenHeader = "x-jwt-authorization";

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly TokenResponse _token;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ServerRequest<BaseResponse> _tokenRequest;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Queue<IBaseServerRequest> _waitingRequests;

		[Token(Token = "0x17000386")]
		private bool IsCheckingToken
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x1008F70", Offset = "0x1008F70", VA = "0x1008F70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1008F80", Offset = "0x1008F80", VA = "0x1008F80")]
		public GameClientAPI(string hostName)
		{
		}

		[Token(Token = "0x6001BE6")]
		protected override ServerRequest<T> GetRequest<T>(string relativePath, Dictionary<string, string> getArgs, Dictionary<string, string> headers, [Optional] Action<T> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BE7")]
		protected override ServerRequest<T> PostRequest<T>(string relativePath, Dictionary<string, string> postArgs, Dictionary<string, string> headers, [Optional] Action<T> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		public override IServerRequest<Response<T>> MakeAuthRequest<T>(IServerRequest<Response<T>> request, Action<Response<T>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		private void RequestDone<T>(Response<T> response, Action<Response<T>> callback)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1009060", Offset = "0x1009060", VA = "0x1009060")]
		private void SyncServerTime(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x100910C", Offset = "0x100910C", VA = "0x100910C", Slot = "7")]
		public override void RefreshToken()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x100925C", Offset = "0x100925C", VA = "0x100925C")]
		private void TokenRequestDone(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1009398", Offset = "0x1009398", VA = "0x1009398")]
		private void SetToken(BaseResponse response)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1009460", Offset = "0x1009460", VA = "0x1009460", Slot = "9")]
		public override void ServerMoved(string url)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x10095F0", Offset = "0x10095F0", VA = "0x10095F0")]
		private Dictionary<string, string> GetHeaders(Dictionary<string, string> arguments, [Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1009754", Offset = "0x1009754", VA = "0x1009754")]
		private Dictionary<string, string> GetSignatureHeader(Dictionary<string, string> arguments, [Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1009A48", Offset = "0x1009A48", VA = "0x1009A48")]
		public void Login(int unlockVersion, [Optional] Action<Response<LoginResponse>> callback)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1009C9C", Offset = "0x1009C9C", VA = "0x1009C9C")]
		public void CreateUser(string username, string clanTag, Appearance appearance, [Optional] Action<Response<CreateUserResponse>> callback)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1009F88", Offset = "0x1009F88", VA = "0x1009F88")]
		public IServerRequest<Response<ChangeUserDataResponse>> ChangeUserData(string username, string clanTag, [Optional] Action<Response<ChangeUserDataResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x100A150", Offset = "0x100A150", VA = "0x100A150")]
		public IServerRequest<Response<ChangeAppearanceResponse>> UpdateAppearance(Appearance appearance, [Optional] Action<Response<ChangeAppearanceResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x100A2BC", Offset = "0x100A2BC", VA = "0x100A2BC")]
		public IServerRequest<Response<string>> ReportUser(string userId, string reason, [Optional] Action<Response<string>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x100A450", Offset = "0x100A450", VA = "0x100A450")]
		public IServerRequest<Response<StatisticsResponse>> GetStatistics([Optional] Action<Response<StatisticsResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x100A524", Offset = "0x100A524", VA = "0x100A524")]
		public IServerRequest<Response<ApprovePrivacyPolicyResponse>> ApprovePrivacyPolicy([Optional] Action<Response<ApprovePrivacyPolicyResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x100A5F8", Offset = "0x100A5F8", VA = "0x100A5F8")]
		public IServerRequest<Response<PrivateServerTicketResponse>> RequestPrivateServerTicket(string region, [Optional] Action<Response<PrivateServerTicketResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x100A758", Offset = "0x100A758", VA = "0x100A758")]
		public IServerRequest<Response<ShopResponse>> GetShop([Optional] Action<Response<ShopResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x100A82C", Offset = "0x100A82C", VA = "0x100A82C")]
		public IServerRequest<Response<IapShopResponse>> GetIapShop([Optional] Action<Response<IapShopResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x100A900", Offset = "0x100A900", VA = "0x100A900")]
		public IServerRequest<Response<BuyShopItemResponse>> BuyShopItem(string item, [Optional] Action<Response<BuyShopItemResponse>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x100AA60", Offset = "0x100AA60", VA = "0x100AA60")]
		public IServerRequest<Response<bool>> InitiatePurchase(string platform, int itemId, string currency, [Optional] Action<Response<bool>> callback)
		{
			return null;
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x100AC2C", Offset = "0x100AC2C", VA = "0x100AC2C")]
		public void IapDone(string platform, int itemId, string receipt = "{}", [Optional] Action<Response<IapDoneResponse>> callback)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x100AEE8", Offset = "0x100AEE8", VA = "0x100AEE8")]
		public IServerRequest<Response<ClaimGiftResponse>> ClaimGift(string ticket, [Optional] Action<Response<ClaimGiftResponse>> callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000468")]
	public interface IMovableServer
	{
		[Token(Token = "0x6001C07")]
		void ServerMoved(string url);
	}
	[Serializable]
	[Token(Token = "0x2000469")]
	public class JwtTokenResponse
	{
		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private long exp;

		[Token(Token = "0x17000387")]
		public DateTime Expiration
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x100B36C", Offset = "0x100B36C", VA = "0x100B36C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x100B3BC", Offset = "0x100B3BC", VA = "0x100B3BC")]
		public JwtTokenResponse()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public static class ResponseExtensions
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x100B3C4", Offset = "0x100B3C4", VA = "0x100B3C4")]
		public static string GetErrorMessage(this BaseResponse response)
		{
			return null;
		}
	}
	[Token(Token = "0x200046B")]
	public enum GetArgsEncoding
	{
		[Token(Token = "0x4001AAE")]
		Query,
		[Token(Token = "0x4001AAF")]
		Path
	}
	[Token(Token = "0x200046C")]
	[ExecuteInEditMode]
	public class ServerManager : MonoBehaviour
	{
		[Token(Token = "0x200046D")]
		[CompilerGenerated]
		private sealed class <YieldRequest>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IBaseServerRequest request;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C12")]
				[Address(RVA = "0x100B8F0", Offset = "0x100B8F0", VA = "0x100B8F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C14")]
				[Address(RVA = "0x100B938", Offset = "0x100B938", VA = "0x100B938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x100B86C", Offset = "0x100B86C", VA = "0x100B86C")]
			[DebuggerHidden]
			public <YieldRequest>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x100B89C", Offset = "0x100B89C", VA = "0x100B89C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x100B8A0", Offset = "0x100B8A0", VA = "0x100B8A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x100B8F8", Offset = "0x100B8F8", VA = "0x100B8F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ServerManager _instance;

		[Token(Token = "0x17000388")]
		public static ServerManager Instance
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x100B684", Offset = "0x100B684", VA = "0x100B684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x100B7D8", Offset = "0x100B7D8", VA = "0x100B7D8")]
		public void ServerRequestStarted(IBaseServerRequest request)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x100B7F8", Offset = "0x100B7F8", VA = "0x100B7F8")]
		[IteratorStateMachine(typeof(<YieldRequest>d__4))]
		private IEnumerator YieldRequest(IBaseServerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x100B894", Offset = "0x100B894", VA = "0x100B894")]
		public ServerManager()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class Server
	{
		[Token(Token = "0x200046F")]
		public struct FileUploadArguments
		{
			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ArgumentName;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] Contents;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ServerFileName;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string MimeType;
		}

		[Token(Token = "0x2000470")]
		public delegate string SignatureCalculationFunction(IEnumerable<KeyValuePair<string, string>> args);

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _hostName;

		[Token(Token = "0x1700038B")]
		public string HostName
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x100B940", Offset = "0x100B940", VA = "0x100B940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x1007E44", Offset = "0x1007E44", VA = "0x1007E44")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public GetArgsEncoding GetArgsEncoding
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x100B948", Offset = "0x100B948", VA = "0x100B948")]
			[CompilerGenerated]
			get
			{
				return default(GetArgsEncoding);
			}
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x100B950", Offset = "0x100B950", VA = "0x100B950")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public bool EscapeUrl
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x100B958", Offset = "0x100B958", VA = "0x100B958")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x100B960", Offset = "0x100B960", VA = "0x100B960")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public float Timeout
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x100B96C", Offset = "0x100B96C", VA = "0x100B96C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x100B974", Offset = "0x100B974", VA = "0x100B974")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public bool AutoStart
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x100B97C", Offset = "0x100B97C", VA = "0x100B97C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x100B984", Offset = "0x100B984", VA = "0x100B984")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x100B990", Offset = "0x100B990", VA = "0x100B990")]
		public Server(string hostName)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1007A0C", Offset = "0x1007A0C", VA = "0x1007A0C")]
		public Server(string hostName, GetArgsEncoding getArgsEncoding)
		{
		}

		[Token(Token = "0x6001C21")]
		protected ServerRequest<T> GetRequest<T>(string relativePath, Dictionary<string, string> getArgs, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C22")]
		protected virtual ServerRequest<T> GetRequest<T>(string relativePath, Dictionary<string, string> getArgs, Dictionary<string, string> headers, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		protected ServerRequest<T> PostRequest<T>(string relativePath, Dictionary<string, string> postArgs, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C24")]
		protected virtual ServerRequest<T> PostRequest<T>(string relativePath, Dictionary<string, string> postArgs, Dictionary<string, string> headers, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		protected ServerRequest<T> PostRequest<T>(string relativePath, string postArgs, Dictionary<string, string> headers, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		protected ServerRequest<T> UploadRequest<T>(string relativePath, Dictionary<string, string> postArgs, FileUploadArguments fileUploadArguments, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C27")]
		private ServerRequest<T> UploadRequest<T>(string relativePath, Dictionary<string, string> postArgs, FileUploadArguments fileUploadArguments, Dictionary<string, string> headers, [Optional] Action<T> callback) where T : BaseResponse
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x100B998", Offset = "0x100B998", VA = "0x100B998")]
		private static WWWForm GetWwwForm(Dictionary<string, string> postArgs)
		{
			return null;
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x100BB4C", Offset = "0x100BB4C", VA = "0x100BB4C")]
		private string GetFullUrl(string relativePath)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x100BBEC", Offset = "0x100BBEC", VA = "0x100BBEC")]
		private string MergeToQueryString(Dictionary<string, string> args, bool includeQuestionMark)
		{
			return null;
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x100BF44", Offset = "0x100BF44", VA = "0x100BF44")]
		private string MergeToPathString(Dictionary<string, string> args, bool includeInitialSlash)
		{
			return null;
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1008974", Offset = "0x1008974", VA = "0x1008974")]
		protected static string CreateSHA256Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x2000471")]
	public interface IBaseServerRequest : IEnumerator
	{
		[Token(Token = "0x17000390")]
		string Error
		{
			[Token(Token = "0x6001C31")]
			get;
		}

		[Token(Token = "0x17000391")]
		bool IsRequestDone
		{
			[Token(Token = "0x6001C32")]
			get;
		}

		[Token(Token = "0x6001C33")]
		void Start([Optional] Dictionary<string, string> headers);

		[Token(Token = "0x6001C34")]
		void ResetRequest();

		[Token(Token = "0x6001C35")]
		void ChangeHost(string oldUrl, string newUrl);
	}
	[Token(Token = "0x2000472")]
	public interface IServerRequest<T> : IBaseServerRequest, IEnumerator where T : BaseResponse
	{
		[Token(Token = "0x17000392")]
		T Response
		{
			[Token(Token = "0x6001C36")]
			get;
		}
	}
	[Token(Token = "0x2000473")]
	public class ServerRequest<T> : IServerRequest<T>, IBaseServerRequest, IEnumerator where T : BaseResponse
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly fsSerializer Serializer;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _url;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, string> _headers;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly WWWForm _postDataForm;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string _postDataString;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityWebRequest _request;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float _timeout;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _startTime;

		[Token(Token = "0x17000393")]
		public object Current
		{
			[Token(Token = "0x6001C37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public T Response
		{
			[Token(Token = "0x6001C39")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3A")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public string Error
		{
			[Token(Token = "0x6001C3B")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000396")]
		protected Action<T> Callback
		{
			[Token(Token = "0x6001C3D")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public virtual bool IsRequestDone
		{
			[Token(Token = "0x6001C3F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C38")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C40")]
		public ServerRequest(string fullHostUrl, WWWForm postData, Dictionary<string, string> headers, [Optional] Action<T> callback, float timeout = 0f, bool autoStart = true)
		{
		}

		[Token(Token = "0x6001C41")]
		public ServerRequest(string fullHostUrl, string postData, Dictionary<string, string> headers, [Optional] Action<T> callback, float timeout = 0f, bool autoStart = true)
		{
		}

		[Token(Token = "0x6001C42")]
		private void CreateRequest()
		{
		}

		[Token(Token = "0x6001C43")]
		public void ResetRequest()
		{
		}

		[Token(Token = "0x6001C44")]
		public void ChangeHost(string oldUrl, string newUrl)
		{
		}

		[Token(Token = "0x6001C45")]
		public void Start([Optional] Dictionary<string, string> headers)
		{
		}

		[Token(Token = "0x6001C46")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001C47")]
		protected virtual bool IsDone()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000474")]
	public static class ServerSync
	{
		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double _difference;

		[Token(Token = "0x17000398")]
		public static DateTime CurrentTime
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x10088D8", Offset = "0x10088D8", VA = "0x10088D8")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x100C380", Offset = "0x100C380", VA = "0x100C380")]
		static ServerSync()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1007FA0", Offset = "0x1007FA0", VA = "0x1007FA0")]
		public static void SetServerTime(string serverTime)
		{
		}
	}
	[Token(Token = "0x2000475")]
	public sealed class ServerTimeProvider : IDateTimeProvider
	{
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x100C5C0", Offset = "0x100C5C0", VA = "0x100C5C0", Slot = "4")]
		public DateTimeOffset GetNow()
		{
			return default(DateTimeOffset);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x100C644", Offset = "0x100C644", VA = "0x100C644")]
		public ServerTimeProvider()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public static class ServerUtils
	{
	}
	[Token(Token = "0x2000477")]
	public class TokenResponse
	{
		[Token(Token = "0x4001AC9")]
		private const string SaveKey = "JwtToken";

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _token;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _expiration;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RSA _publicKey;

		[Token(Token = "0x17000399")]
		public bool HasToken
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0x100C64C", Offset = "0x100C64C", VA = "0x100C64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039A")]
		public bool IsExpired
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x100C66C", Offset = "0x100C66C", VA = "0x100C66C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039B")]
		public string Token
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x1008544", Offset = "0x1008544", VA = "0x1008544")]
			set
			{
			}
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x100C9AC", Offset = "0x100C9AC", VA = "0x100C9AC")]
		static TokenResponse()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1007D7C", Offset = "0x1007D7C", VA = "0x1007D7C")]
		public Dictionary<string, string> Headers([Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x100C71C", Offset = "0x100C71C", VA = "0x100C71C")]
		private static JwtTokenResponse ExplodeToken(string newToken)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1007B90", Offset = "0x1007B90", VA = "0x1007B90")]
		public static TokenResponse Create()
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x100CCA4", Offset = "0x100CCA4", VA = "0x100CCA4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x100CC9C", Offset = "0x100CC9C", VA = "0x100CC9C")]
		public TokenResponse()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public enum UnlockType
	{
		[Token(Token = "0x4001ACE")]
		Level,
		[Token(Token = "0x4001ACF")]
		Kills,
		[Token(Token = "0x4001AD0")]
		Headshots,
		[Token(Token = "0x4001AD1")]
		Damage,
		[Token(Token = "0x4001AD2")]
		KillsWeapon,
		[Token(Token = "0x4001AD3")]
		HeadshotsWeapon,
		[Token(Token = "0x4001AD4")]
		DamageWeapon
	}
}
namespace HyperDash.Backend.Responses
{
	[Serializable]
	[Token(Token = "0x2000479")]
	public class ApprovePrivacyPolicyResponse
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x100CCF8", Offset = "0x100CCF8", VA = "0x100CCF8")]
		public ApprovePrivacyPolicyResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047A")]
	public class BuyShopItemResponse
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryResponse Inventory;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x100CD00", Offset = "0x100CD00", VA = "0x100CD00")]
		public BuyShopItemResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047B")]
	public class ChangeAppearanceResponse
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Appearance Appearance;

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x100CD08", Offset = "0x100CD08", VA = "0x100CD08")]
		public ChangeAppearanceResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047C")]
	public class ChangeUserDataResponse
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x100CD10", Offset = "0x100CD10", VA = "0x100CD10")]
		public ChangeUserDataResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047D")]
	public class ClaimGiftResponse
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse Player;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryResponse Inventory;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GiftResponse> Gift;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x100CD18", Offset = "0x100CD18", VA = "0x100CD18")]
		public ClaimGiftResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047E")]
	public class CreateUserResponse
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Appearance Appearance;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsArcade;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x100CD20", Offset = "0x100CD20", VA = "0x100CD20")]
		public CreateUserResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class GameEndResponse
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SessionId;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PlayerProgressionResponse> PlayerProgress;

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x100CD28", Offset = "0x100CD28", VA = "0x100CD28")]
		public GameEndResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000480")]
	public class GameStartResponse
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SessionID;

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x100CD30", Offset = "0x100CD30", VA = "0x100CD30")]
		public GameStartResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000481")]
	public class GiftResponse
	{
		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x100CD38", Offset = "0x100CD38", VA = "0x100CD38")]
		public GiftResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class IapDoneResponse
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryResponse Inventory;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x100CD40", Offset = "0x100CD40", VA = "0x100CD40")]
		public IapDoneResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000483")]
	public class IapPricesResponse
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Currency;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amount;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x100CD48", Offset = "0x100CD48", VA = "0x100CD48")]
		public IapPricesResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000484")]
	public class IapResponse
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Id;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Sku;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IAPType Type;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IapRewardResponse[] Rewards;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IapPricesResponse[] Prices;

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x100CD50", Offset = "0x100CD50", VA = "0x100CD50")]
		public IapResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000485")]
	public class IapRewardResponse
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x100CD58", Offset = "0x100CD58", VA = "0x100CD58")]
		public IapRewardResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000486")]
	public class IapShopResponse
	{
		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IapResponse[] Iaps;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x100CD60", Offset = "0x100CD60", VA = "0x100CD60")]
		public int GetBestValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x100CE44", Offset = "0x100CE44", VA = "0x100CE44")]
		public IapShopResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000487")]
	public class InventoryResponse : IProtocolToken, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Unlocked;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<WeaponTypes, List<WeaponSkin>> PurchasedSkinsByWeaponType;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HelmetSkin> PurchasedHelmetSkins;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BodySkin> PurchasedBodySkins;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<string> UnlockedHashSet;

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x100CE4C", Offset = "0x100CE4C", VA = "0x100CE4C")]
		public InventoryResponse()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x100D554", Offset = "0x100D554", VA = "0x100D554", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x100D6F0", Offset = "0x100D6F0", VA = "0x100D6F0", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x100D78C", Offset = "0x100D78C", VA = "0x100D78C", Slot = "6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x100D790", Offset = "0x100D790", VA = "0x100D790", Slot = "7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x100D84C", Offset = "0x100D84C", VA = "0x100D84C")]
		public bool HasInInventory(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x100D004", Offset = "0x100D004", VA = "0x100D004")]
		public void GeneratePurchasedWeaponSkinsDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000488")]
	public class LocalizationResponse
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Version;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LocalizationData> Localization;

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x100D904", Offset = "0x100D904", VA = "0x100D904")]
		public LocalizationResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public class LoginResponse
	{
		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryResponse Inventory;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Appearance Appearance;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnlockResponse> Unlocks;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnlockListResponse UnlockList;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CustomSettings CustomSettings;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OtherSettingsResponse OtherSettings;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsArcade;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ShopResponse Shop;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IapShopResponse IapShop;

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x100D90C", Offset = "0x100D90C", VA = "0x100D90C")]
		public LoginResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048A")]
	public class OtherSettingsResponse
	{
		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int UsernameChangeLimit;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CustomAdsUrl;

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x100D914", Offset = "0x100D914", VA = "0x100D914")]
		public OtherSettingsResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048B")]
	public class PlayerProgressionResponse : IProtocolToken
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserResponse User;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Error;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PlayerXpResponse> Xp;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnlockResponse> Unlocks;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InventoryResponse Inventory;

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x100D91C", Offset = "0x100D91C", VA = "0x100D91C", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x100DD34", Offset = "0x100DD34", VA = "0x100DD34", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x100DEB4", Offset = "0x100DEB4", VA = "0x100DEB4")]
		public PlayerProgressionResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public class PlayerXpResponse : IProtocolToken
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Xp;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Amount;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocaKey;

		[Token(Token = "0x1700039C")]
		public string DisplayText
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x100DF3C", Offset = "0x100DF3C", VA = "0x100DF3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x100E094", Offset = "0x100E094", VA = "0x100E094", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x100E0F0", Offset = "0x100E0F0", VA = "0x100E0F0", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x100E140", Offset = "0x100E140", VA = "0x100E140")]
		public PlayerXpResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048D")]
	public class PrivateServerTicketResponse : IProtocolToken
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Region;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UserId;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Created;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Signature;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Ip;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Port;

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x100E148", Offset = "0x100E148", VA = "0x100E148", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x100E22C", Offset = "0x100E22C", VA = "0x100E22C", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x100E2BC", Offset = "0x100E2BC", VA = "0x100E2BC")]
		public PrivateServerTicketResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048E")]
	public class BaseResponse
	{
		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Success;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ErrorCodes ErrorCode;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TokenError TokenError;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ErrorMessage;

		[Token(Token = "0x1700039D")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x100E2C4", Offset = "0x100E2C4", VA = "0x100E2C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x100E2CC", Offset = "0x100E2CC", VA = "0x100E2CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x100E2D4", Offset = "0x100E2D4", VA = "0x100E2D4")]
		public BaseResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048F")]
	public class Response<T> : BaseResponse
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Data;

		[Token(Token = "0x6001C7D")]
		public Response()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public enum ItemCategory
	{
		[Token(Token = "0x4001B1C")]
		Invalid = -1,
		[Token(Token = "0x4001B1D")]
		WeaponSkin,
		[Token(Token = "0x4001B1E")]
		BodyBundle,
		[Token(Token = "0x4001B1F")]
		GoAdFree,
		[Token(Token = "0x4001B20")]
		WeaponBundle
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class ShopItemResponse
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Items;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Credits;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ItemCategory Category;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DiscountPrice;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int DiscountPercentage;

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x100E2DC", Offset = "0x100E2DC", VA = "0x100E2DC")]
		public bool HasInInventoryAll()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x100E3D8", Offset = "0x100E3D8", VA = "0x100E3D8")]
		public bool HasEquippedAll()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x100E4D8", Offset = "0x100E4D8", VA = "0x100E4D8")]
		public ShopItemResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class ShopResponse : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EndTime;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShopItemResponse[] Items;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShopItemResponse AdFree;

		[Token(Token = "0x1700039E")]
		public DateTime EndTimeDateTime
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x100E4E8", Offset = "0x100E4E8", VA = "0x100E4E8")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x100E4F0", Offset = "0x100E4F0", VA = "0x100E4F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x100E4F8", Offset = "0x100E4F8", VA = "0x100E4F8")]
		public ShopResponse()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x100E5DC", Offset = "0x100E5DC", VA = "0x100E5DC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x100E5E0", Offset = "0x100E5E0", VA = "0x100E5E0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class StatisticsCalcData
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TotalKills;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TotalDamage;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeSpan TotalPlayTime;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TotalGamesPlayed;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float EliminationSurvivalRate;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x100E700", Offset = "0x100E700", VA = "0x100E700")]
		public StatisticsCalcData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000494")]
	public class StatisticsChildResponse : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, StatisticsMapResponse> Maps;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, StatisticsWeaponResponse> Weapons;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, StatisticsModeResponse> Modes;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Deaths;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Captures;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int CapturesDomination;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float PushTime;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Counters;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Goals;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int CTFReturns;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int CTFCaptures;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int EliminationSurvives;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int EliminationRoundsPlayed;

		[Token(Token = "0x1700039F")]
		public StatisticsCalcData CalculatedData
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x100E708", Offset = "0x100E708", VA = "0x100E708")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x100E710", Offset = "0x100E710", VA = "0x100E710")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x100E718", Offset = "0x100E718", VA = "0x100E718", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x100E71C", Offset = "0x100E71C", VA = "0x100E71C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x100EAA4", Offset = "0x100EAA4", VA = "0x100EAA4")]
		public StatisticsChildResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000495")]
	public class StatisticsMapResponse
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x100EBCC", Offset = "0x100EBCC", VA = "0x100EBCC")]
		public StatisticsMapResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000496")]
	public class StatisticsModeResponse
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Won;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Lost;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Draw;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x100EBD4", Offset = "0x100EBD4", VA = "0x100EBD4")]
		public StatisticsModeResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000497")]
	public class StatisticsResponse
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatisticsChildResponse Statistics;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatisticsChildResponse MonthlyStatistics;

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x100EBDC", Offset = "0x100EBDC", VA = "0x100EBDC")]
		public StatisticsResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000498")]
	public class StatisticsWeaponResponse
	{
		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Kills;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Headshots;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Shots;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ShotsHit;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Damage;

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x100EBE4", Offset = "0x100EBE4", VA = "0x100EBE4")]
		public StatisticsWeaponResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000499")]
	public class UnlockListItemResponse
	{
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnlockType Type;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Extra;

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x100EBEC", Offset = "0x100EBEC", VA = "0x100EBEC")]
		public UnlockListItemResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049A")]
	public class UnlockListResponse
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Version;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, List<UnlockListItemResponse>> UnlockDictionary;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x100EBF4", Offset = "0x100EBF4", VA = "0x100EBF4")]
		public UnlockListResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049B")]
	public class UnlockReasonResponse : IProtocolToken
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x100EBFC", Offset = "0x100EBFC", VA = "0x100EBFC", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x100EC54", Offset = "0x100EC54", VA = "0x100EC54", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x100EC94", Offset = "0x100EC94", VA = "0x100EC94")]
		public UnlockReasonResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class UnlockResponse : IProtocolToken
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<UnlockReasonResponse> Reasons;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Items;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x100EC9C", Offset = "0x100EC9C", VA = "0x100EC9C", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x100EF34", Offset = "0x100EF34", VA = "0x100EF34", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x100F0A4", Offset = "0x100F0A4", VA = "0x100F0A4")]
		public UnlockResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049D")]
	public class UserResponse : IProtocolToken
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Username;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ClanTag;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Level;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float XpProgress;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Credits;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int UsernameLock;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool NeedToAcceptPrivacyPolicy;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Hash;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ShouldRename;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string SupportCode;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool HasBoughtGame;

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x100F12C", Offset = "0x100F12C", VA = "0x100F12C", Slot = "4")]
		public void Read(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x100F248", Offset = "0x100F248", VA = "0x100F248", Slot = "5")]
		public void Write(UdpPacket packet)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x100F318", Offset = "0x100F318", VA = "0x100F318")]
		public static UserResponse CreateOfflineUserResponse()
		{
			return null;
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x100F40C", Offset = "0x100F40C", VA = "0x100F40C")]
		public UserResponse()
		{
		}
	}
}
namespace HyperDash.Backend.RequestData
{
	[Serializable]
	[Token(Token = "0x200049E")]
	public class GameEndData
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MapName;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchTypes GameMode;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Teams TeamWon;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameEndPlayerData> RedTeam;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameEndPlayerData> BlueTeam;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameEndPlayerData> PlayersLeft;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int RedTeamScore;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int BlueTeamScore;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MatchTime;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<RoundData> RoundData;

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x100F464", Offset = "0x100F464", VA = "0x100F464")]
		public GameEndData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049F")]
	public class GameEndPlayerBallData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Goals;

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x100F474", Offset = "0x100F474", VA = "0x100F474")]
		public GameEndPlayerBallData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A0")]
	public class GameEndPlayerControlPointData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Captures;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x100F484", Offset = "0x100F484", VA = "0x100F484")]
		public GameEndPlayerControlPointData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A1")]
	public class GameEndPlayerCtfData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Captures;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Returns;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x100F48C", Offset = "0x100F48C", VA = "0x100F48C")]
		public GameEndPlayerCtfData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A2")]
	public class GameEndPlayerData : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MapTime;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Deaths;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameEndWeaponData> Weapons;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameEndPlayerModeData Game;

		[NonSerialized]
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<WeaponTypes, GameEndWeaponData> WeaponsInternal;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Score;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string DisconnectReason;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x100F494", Offset = "0x100F494", VA = "0x100F494")]
		public GameEndPlayerData()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x100F658", Offset = "0x100F658", VA = "0x100F658", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x100F924", Offset = "0x100F924", VA = "0x100F924", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A3")]
	public class GameEndPlayerDeathmatchData : GameEndPlayerModeData
	{
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x100FA40", Offset = "0x100FA40", VA = "0x100FA40")]
		public GameEndPlayerDeathmatchData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A4")]
	public class GameEndPlayerDominationData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Captures;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Counters;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x100FA48", Offset = "0x100FA48", VA = "0x100FA48")]
		public GameEndPlayerDominationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A5")]
	public class GameEndPlayerEliminationData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Survives;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int RoundsPlayed;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x100FA50", Offset = "0x100FA50", VA = "0x100FA50")]
		public GameEndPlayerEliminationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A6")]
	public abstract class GameEndPlayerModeData
	{
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x100F47C", Offset = "0x100F47C", VA = "0x100F47C")]
		protected GameEndPlayerModeData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A7")]
	public class GameEndPlayerPayloadData : GameEndPlayerModeData
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PushTime;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x100FA58", Offset = "0x100FA58", VA = "0x100FA58")]
		public GameEndPlayerPayloadData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A8")]
	public class GameEndWeaponData
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Kills;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Headshots;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Shots;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ShotsHit;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Damage;

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x100F650", Offset = "0x100F650", VA = "0x100F650")]
		public GameEndWeaponData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A9")]
	public struct RoundData
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Time;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Teams Winner;
	}
}
namespace HyperDash.Backend.JWT
{
	[Token(Token = "0x20004AA")]
	public interface IBase64UrlEncoder
	{
		[Token(Token = "0x6001CA9")]
		string Encode(byte[] input);

		[Token(Token = "0x6001CAA")]
		byte[] Decode(string input);
	}
	[Token(Token = "0x20004AB")]
	public interface IDateTimeProvider
	{
		[Token(Token = "0x6001CAB")]
		DateTimeOffset GetNow();
	}
	[Token(Token = "0x20004AC")]
	public interface IJsonSerializer
	{
		[Token(Token = "0x6001CAC")]
		string Serialize(object obj);

		[Token(Token = "0x6001CAD")]
		T Deserialize<T>(string json);
	}
	[Token(Token = "0x20004AD")]
	public interface IJwtDecoder
	{
		[Token(Token = "0x6001CAE")]
		string DecodeHeader(string token);

		[Token(Token = "0x6001CAF")]
		T DecodeHeader<T>(JwtParts jwt);

		[Token(Token = "0x6001CB0")]
		string Decode(JwtParts jwt);

		[Token(Token = "0x6001CB1")]
		string Decode(JwtParts jwt, byte[] key, bool verify);

		[Token(Token = "0x6001CB2")]
		string Decode(JwtParts jwt, byte[][] keys, bool verify);

		[Token(Token = "0x6001CB3")]
		T DecodeToObject<T>(JwtParts jwt);

		[Token(Token = "0x6001CB4")]
		T DecodeToObject<T>(JwtParts jwt, byte[] key, bool verify);

		[Token(Token = "0x6001CB5")]
		T DecodeToObject<T>(JwtParts jwt, byte[][] keys, bool verify);
	}
	[Token(Token = "0x20004AE")]
	public static class JwtDecoderExtensions
	{
		[Token(Token = "0x6001CB6")]
		public static T DecodeHeader<T>(this IJwtDecoder decoder, string token)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x100FA60", Offset = "0x100FA60", VA = "0x100FA60")]
		public static IDictionary<string, string> DecodeHeaderToDictionary(this IJwtDecoder decoder, string token)
		{
			return null;
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x100FAB8", Offset = "0x100FAB8", VA = "0x100FAB8")]
		public static string Decode(this IJwtDecoder decoder, string token)
		{
			return null;
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x100FC80", Offset = "0x100FC80", VA = "0x100FC80")]
		public static string Decode(this IJwtDecoder decoder, JwtParts jwt)
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x100FD30", Offset = "0x100FD30", VA = "0x100FD30")]
		public static string Decode(this IJwtDecoder decoder, string token, byte[] key, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x100FE24", Offset = "0x100FE24", VA = "0x100FE24")]
		public static string Decode(this IJwtDecoder decoder, string token, byte[][] keys, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x100FF18", Offset = "0x100FF18", VA = "0x100FF18")]
		public static string Decode(this IJwtDecoder decoder, string token, string key, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x100FF80", Offset = "0x100FF80", VA = "0x100FF80")]
		public static string Decode(this IJwtDecoder decoder, string token, string[] keys, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		public static T DecodeToObject<T>(this IJwtDecoder decoder, string token)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1010074", Offset = "0x1010074", VA = "0x1010074")]
		public static IDictionary<string, object> DecodeToObject(this IJwtDecoder decoder, string token)
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x10100CC", Offset = "0x10100CC", VA = "0x10100CC")]
		public static IDictionary<string, object> DecodeToObject(this IJwtDecoder decoder, string token, string key, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x1010218", Offset = "0x1010218", VA = "0x1010218")]
		public static IDictionary<string, object> DecodeToObject(this IJwtDecoder decoder, string token, string[] keys, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x1010104", Offset = "0x1010104", VA = "0x1010104")]
		public static IDictionary<string, object> DecodeToObject(this IJwtDecoder decoder, string token, byte[] key, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x1010250", Offset = "0x1010250", VA = "0x1010250")]
		public static IDictionary<string, object> DecodeToObject(this IJwtDecoder decoder, string token, byte[][] keys, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		public static T DecodeToObject<T>(this IJwtDecoder decoder, string token, string key, bool verify)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CC5")]
		public static T DecodeToObject<T>(this IJwtDecoder decoder, string token, byte[] key, bool verify)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CC6")]
		public static T DecodeToObject<T>(this IJwtDecoder decoder, string token, byte[][] keys, bool verify)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CC7")]
		public static T DecodeToObject<T>(this IJwtDecoder decoder, string token, string[] keys, bool verify)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20004AF")]
	public interface IJwtEncoder
	{
		[Token(Token = "0x6001CC8")]
		string Encode(IDictionary<string, object> extraHeaders, object payload, byte[] key);
	}
	[Token(Token = "0x20004B0")]
	public static class JwtEncoderExtensions
	{
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x1010364", Offset = "0x1010364", VA = "0x1010364")]
		public static string Encode(this IJwtEncoder encoder, object payload, string key)
		{
			return null;
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x101042C", Offset = "0x101042C", VA = "0x101042C")]
		public static string Encode(this IJwtEncoder encoder, object payload, byte[] key)
		{
			return null;
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x10104E4", Offset = "0x10104E4", VA = "0x10104E4")]
		public static string Encode(this IJwtEncoder encoder, IDictionary<string, object> extraHeaders, object payload, string key)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B1")]
	public interface IJwtValidator
	{
		[Token(Token = "0x6001CCC")]
		void Validate(string decodedPayload, string signature, params string[] decodedSignatures);

		[Token(Token = "0x6001CCD")]
		void Validate(string decodedPayload, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature);

		[Token(Token = "0x6001CCE")]
		bool TryValidate(string payloadJson, string signature, string decodedSignature, out Exception ex);

		[Token(Token = "0x6001CCF")]
		bool TryValidate(string payloadJson, string signature, string[] decodedSignature, out Exception ex);

		[Token(Token = "0x6001CD0")]
		bool TryValidate(string payloadJson, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature, out Exception ex);
	}
	[Token(Token = "0x20004B2")]
	public sealed class JwtBase64UrlEncoder : IBase64UrlEncoder
	{
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x10105AC", Offset = "0x10105AC", VA = "0x10105AC", Slot = "4")]
		public string Encode(byte[] input)
		{
			return null;
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x10106E8", Offset = "0x10106E8", VA = "0x10106E8", Slot = "5")]
		public byte[] Decode(string input)
		{
			return null;
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x1010878", Offset = "0x1010878", VA = "0x1010878")]
		public JwtBase64UrlEncoder()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public sealed class JwtDecoder : IJwtDecoder
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IJsonSerializer _jsonSerializer;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IJwtValidator _jwtValidator;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IBase64UrlEncoder _urlEncoder;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IAlgorithmFactory _algFactory;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x1010880", Offset = "0x1010880", VA = "0x1010880")]
		public JwtDecoder(IJsonSerializer jsonSerializer, IBase64UrlEncoder urlEncoder)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1010950", Offset = "0x1010950", VA = "0x1010950")]
		public JwtDecoder(IJsonSerializer jsonSerializer, IJwtValidator jwtValidator, IBase64UrlEncoder urlEncoder, IAlgorithmFactory algFactory)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x1010A20", Offset = "0x1010A20", VA = "0x1010A20")]
		public JwtDecoder(IJsonSerializer jsonSerializer, IJwtValidator jwtValidator, IBase64UrlEncoder urlEncoder, IJwtAlgorithm algorithm)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x1010BE0", Offset = "0x1010BE0", VA = "0x1010BE0", Slot = "4")]
		public string DecodeHeader(string token)
		{
			return null;
		}

		[Token(Token = "0x6001CD8")]
		public T DecodeHeader<T>(JwtParts jwt)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x1010D7C", Offset = "0x1010D7C", VA = "0x1010D7C", Slot = "6")]
		public string Decode(JwtParts jwt)
		{
			return null;
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x1010EB4", Offset = "0x1010EB4", VA = "0x1010EB4", Slot = "7")]
		public string Decode(JwtParts jwt, byte[] key, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x101165C", Offset = "0x101165C", VA = "0x101165C", Slot = "8")]
		public string Decode(JwtParts jwt, byte[][] keys, bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001CDC")]
		public T DecodeToObject<T>(JwtParts jwt)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CDD")]
		public T DecodeToObject<T>(JwtParts jwt, byte[] key, bool verify)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CDE")]
		public T DecodeToObject<T>(JwtParts jwt, byte[][] keys, bool verify)
		{
			return (T)null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x101190C", Offset = "0x101190C", VA = "0x101190C")]
		public void Validate(string[] parts, byte[] key)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1011AAC", Offset = "0x1011AAC", VA = "0x1011AAC")]
		public void Validate(string[] parts, params byte[][] keys)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1011058", Offset = "0x1011058", VA = "0x1011058")]
		public void Validate(JwtParts jwt, params byte[][] keys)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1011780", Offset = "0x1011780", VA = "0x1011780")]
		private static bool AllKeysHaveValues(ICollection<byte[]> keys)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B6")]
	public class JwtDecoderContext
	{
		[Token(Token = "0x170003A0")]
		public JwtParts Token
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1011DC0", Offset = "0x1011DC0", VA = "0x1011DC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x1011DC8", Offset = "0x1011DC8", VA = "0x1011DC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public JwtHeader Header
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1011DD0", Offset = "0x1011DD0", VA = "0x1011DD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x1011DD8", Offset = "0x1011DD8", VA = "0x1011DD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public string Payload
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x1011DE0", Offset = "0x1011DE0", VA = "0x1011DE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1011DE8", Offset = "0x1011DE8", VA = "0x1011DE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x1011B58", Offset = "0x1011B58", VA = "0x1011B58")]
		public static JwtDecoderContext Create(JwtHeader header, string decodedPayload, JwtParts jwt)
		{
			return null;
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1011DF0", Offset = "0x1011DF0", VA = "0x1011DF0")]
		public JwtDecoderContext()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public sealed class JwtEncoder : IJwtEncoder
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IJwtAlgorithm _algorithm;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IJsonSerializer _jsonSerializer;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IBase64UrlEncoder _urlEncoder;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1011DF8", Offset = "0x1011DF8", VA = "0x1011DF8")]
		public JwtEncoder(IJwtAlgorithm algorithm, IJsonSerializer jsonSerializer, IBase64UrlEncoder urlEncoder)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1011E58", Offset = "0x1011E58", VA = "0x1011E58", Slot = "4")]
		public string Encode(IDictionary<string, object> extraHeaders, object payload, byte[] key)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B8")]
	public class JwtParts
	{
		[Token(Token = "0x20004B9")]
		private enum JwtPartsIndex
		{
			[Token(Token = "0x4001B93")]
			Header,
			[Token(Token = "0x4001B94")]
			Payload,
			[Token(Token = "0x4001B95")]
			Signature
		}

		[Token(Token = "0x170003A3")]
		public string Header
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x1010D24", Offset = "0x1010D24", VA = "0x1010D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public string Payload
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x1010E88", Offset = "0x1010E88", VA = "0x1010E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public string Signature
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x1011B2C", Offset = "0x1011B2C", VA = "0x1011B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public string[] Parts
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x1012648", Offset = "0x1012648", VA = "0x1012648")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x100FB94", Offset = "0x100FB94", VA = "0x100FB94")]
		public JwtParts(string token)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x10119EC", Offset = "0x10119EC", VA = "0x10119EC")]
		public JwtParts(string[] parts)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public sealed class JwtValidator : IJwtValidator
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IJsonSerializer _jsonSerializer;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDateTimeProvider _dateTimeProvider;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1012650", Offset = "0x1012650", VA = "0x1012650")]
		public JwtValidator(IJsonSerializer jsonSerializer, IDateTimeProvider dateTimeProvider)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1012694", Offset = "0x1012694", VA = "0x1012694", Slot = "4")]
		public void Validate(string decodedPayload, string signature, params string[] decodedSignatures)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x10127BC", Offset = "0x10127BC", VA = "0x10127BC", Slot = "5")]
		public void Validate(string decodedPayload, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1012928", Offset = "0x1012928", VA = "0x1012928", Slot = "6")]
		public bool TryValidate(string payloadJson, string signature, string decodedSignature, out Exception ex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1012A10", Offset = "0x1012A10", VA = "0x1012A10", Slot = "7")]
		public bool TryValidate(string payloadJson, string signature, string[] decodedSignature, out Exception ex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1012A40", Offset = "0x1012A40", VA = "0x1012A40", Slot = "8")]
		public bool TryValidate(string payloadJson, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature, out Exception ex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x10126C8", Offset = "0x10126C8", VA = "0x10126C8")]
		private Exception GetValidationException(string payloadJson, string decodedCrypto, params string[] decodedSignatures)
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x10127FC", Offset = "0x10127FC", VA = "0x10127FC")]
		private Exception GetValidationException(IAsymmetricAlgorithm alg, string payloadJson, byte[] bytesToSign, byte[] decodedSignature)
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1012D1C", Offset = "0x1012D1C", VA = "0x1012D1C")]
		private Exception GetValidationException(string payloadJson)
		{
			return null;
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1012A7C", Offset = "0x1012A7C", VA = "0x1012A7C")]
		private static bool AreAllDecodedSignaturesNullOrWhiteSpace(IEnumerable<string> decodedSignatures)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1012B7C", Offset = "0x1012B7C", VA = "0x1012B7C")]
		private static bool IsAnySignatureValid(string decodedCrypto, IEnumerable<string> decodedSignatures)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x101366C", Offset = "0x101366C", VA = "0x101366C")]
		private static bool CompareCryptoWithSignature(string decodedCrypto, string decodedSignature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1013120", Offset = "0x1013120", VA = "0x1013120")]
		private static Exception ValidateExpClaim(System.Collections.Generic.IReadOnlyDictionary<string, object> payloadData, double secondsSinceEpoch)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1013434", Offset = "0x1013434", VA = "0x1013434")]
		private static Exception ValidateNbfClaim(System.Collections.Generic.IReadOnlyDictionary<string, object> payloadData, double secondsSinceEpoch)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BD")]
	public static class UnixEpoch
	{
		[Token(Token = "0x170003A7")]
		public static DateTime Value
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x10139AC", Offset = "0x10139AC", VA = "0x10139AC")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1012F88", Offset = "0x1012F88", VA = "0x1012F88")]
		public static double GetSecondsSince(DateTimeOffset time)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20004BE")]
	public sealed class UtcDateTimeProvider : IDateTimeProvider
	{
		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1013A88", Offset = "0x1013A88", VA = "0x1013A88", Slot = "4")]
		public DateTimeOffset GetNow()
		{
			return default(DateTimeOffset);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1013AD8", Offset = "0x1013AD8", VA = "0x1013AD8")]
		public UtcDateTimeProvider()
		{
		}
	}
}
namespace HyperDash.Backend.JWT.Serializers
{
	[Token(Token = "0x20004BF")]
	public sealed class JsonNetSerializer : IJsonSerializer
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly JsonSerializer _serializer;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1013AE0", Offset = "0x1013AE0", VA = "0x1013AE0")]
		public JsonNetSerializer()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1013B00", Offset = "0x1013B00", VA = "0x1013B00")]
		public JsonNetSerializer(JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1013B8C", Offset = "0x1013B8C", VA = "0x1013B8C", Slot = "4")]
		public string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		public T Deserialize<T>(string json)
		{
			return (T)null;
		}
	}
}
namespace HyperDash.Backend.JWT.Properties
{
	[Token(Token = "0x20004C0")]
	internal static class AssemblyInfo
	{
		[Token(Token = "0x4001B9D")]
		public const string PublicKey = "002400000480000094000000060200000024000052534131000400000100010041e599bf147c55b2d243a92f3b81b003a113abc6ce6c8423d3b5f41f807471d6acf45675ac5924e69d04fb76b58cd2985eb47e3408f5f20b913e2dfd8074edab55b62b1b2f2b6538af885f979acb1b2a80eb64da7f097b9788390833ed7d974f7abf6d53cbec49abc4d95e999fbb8ee626c50d3f1c3c750bb82ea5e23233dfd7";
	}
}
namespace HyperDash.Backend.JWT.Internal
{
	[Token(Token = "0x20004C1")]
	internal static class EncodingHelper
	{
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x100FF50", Offset = "0x100FF50", VA = "0x100FF50")]
		internal static byte[] GetBytes(string input)
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x100FFB8", Offset = "0x100FFB8", VA = "0x100FFB8")]
		internal static byte[][] GetBytes(IEnumerable<string> input)
		{
			return null;
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1010D4C", Offset = "0x1010D4C", VA = "0x1010D4C")]
		internal static string GetString(byte[] bytes)
		{
			return null;
		}
	}
}
namespace HyperDash.Backend.JWT.Exceptions
{
	[Token(Token = "0x20004C2")]
	public class InvalidTokenPartsException : ArgumentOutOfRangeException
	{
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x10125EC", Offset = "0x10125EC", VA = "0x10125EC")]
		public InvalidTokenPartsException(string paramName)
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class SignatureVerificationException : Exception
	{
		[Token(Token = "0x4001B9E")]
		private const string ExpectedKey = "Expected";

		[Token(Token = "0x4001B9F")]
		private const string ReceivedKey = "Received";

		[Token(Token = "0x170003A8")]
		public string Expected
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x1014088", Offset = "0x1014088", VA = "0x1014088")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x1013ED8", Offset = "0x1013ED8", VA = "0x1013ED8")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public string Received
		{
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x10140F0", Offset = "0x10140F0", VA = "0x10140F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1013FB0", Offset = "0x1013FB0", VA = "0x1013FB0")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1012F20", Offset = "0x1012F20", VA = "0x1012F20")]
		public SignatureVerificationException(string message)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1012C5C", Offset = "0x1012C5C", VA = "0x1012C5C")]
		public SignatureVerificationException(string decodedCrypto, params string[] decodedSignatures)
		{
		}

		[Token(Token = "0x6001D1F")]
		protected T GetOrDefault<T>(string key)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20004C4")]
	public class TokenExpiredException : SignatureVerificationException
	{
		[Token(Token = "0x4001BA0")]
		private const string PayloadDataKey = "PayloadData";

		[Token(Token = "0x4001BA1")]
		private const string ExpirationKey = "Expiration";

		[Token(Token = "0x170003AA")]
		public System.Collections.Generic.IReadOnlyDictionary<string, object> PayloadData
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x1014158", Offset = "0x1014158", VA = "0x1014158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0x1013848", Offset = "0x1013848", VA = "0x1013848")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public DateTime? Expiration
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x10141C0", Offset = "0x10141C0", VA = "0x10141C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0x1013730", Offset = "0x1013730", VA = "0x1013730")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x101372C", Offset = "0x101372C", VA = "0x101372C")]
		public TokenExpiredException(string message)
		{
		}
	}
}
namespace HyperDash.Backend.JWT.Builder
{
	[Token(Token = "0x20004C5")]
	public enum ClaimName
	{
		[Token(Token = "0x4001BA3")]
		[Description("iss")]
		Issuer,
		[Token(Token = "0x4001BA4")]
		[Description("sub")]
		Subject,
		[Token(Token = "0x4001BA5")]
		[Description("aud")]
		Audience,
		[Token(Token = "0x4001BA6")]
		[Description("exp")]
		ExpirationTime,
		[Token(Token = "0x4001BA7")]
		[Description("nbf")]
		NotBefore,
		[Token(Token = "0x4001BA8")]
		[Description("iat")]
		IssuedAt,
		[Token(Token = "0x4001BA9")]
		[Description("jti")]
		JwtId,
		[Token(Token = "0x4001BAA")]
		[Description("name")]
		FullName,
		[Token(Token = "0x4001BAB")]
		[Description("given_name")]
		GivenName,
		[Token(Token = "0x4001BAC")]
		[Description("family_name")]
		FamilyName,
		[Token(Token = "0x4001BAD")]
		[Description("middle_name")]
		MiddleName,
		[Token(Token = "0x4001BAE")]
		[Description("nickname")]
		CasualName,
		[Token(Token = "0x4001BAF")]
		[Description("preferred_username")]
		PreferredUsername,
		[Token(Token = "0x4001BB0")]
		[Description("profile")]
		ProfilePageUrl,
		[Token(Token = "0x4001BB1")]
		[Description("picture")]
		ProfilePictureUrl,
		[Token(Token = "0x4001BB2")]
		[Description("website")]
		Website,
		[Token(Token = "0x4001BB3")]
		[Description("email")]
		PreferredEmail,
		[Token(Token = "0x4001BB4")]
		[Description("email_verified")]
		VerifiedEmail,
		[Token(Token = "0x4001BB5")]
		[Description("gender")]
		Gender,
		[Token(Token = "0x4001BB6")]
		[Description("birthdate")]
		Birthday,
		[Token(Token = "0x4001BB7")]
		[Description("zoneinfo")]
		TimeZone,
		[Token(Token = "0x4001BB8")]
		[Description("locale")]
		Locale,
		[Token(Token = "0x4001BB9")]
		[Description("phone_number")]
		PreferredPhoneNumber,
		[Token(Token = "0x4001BBA")]
		[Description("phone_number_verified")]
		VerifiedPhoneNumber,
		[Token(Token = "0x4001BBB")]
		[Description("address")]
		Address,
		[Token(Token = "0x4001BBC")]
		[Description("update_at")]
		UpdatedAt,
		[Token(Token = "0x4001BBD")]
		[Description("azp")]
		AuthorizedParty,
		[Token(Token = "0x4001BBE")]
		[Description("nonce")]
		Nonce,
		[Token(Token = "0x4001BBF")]
		[Description("auth_time")]
		AuthenticationTime,
		[Token(Token = "0x4001BC0")]
		[Description("at_hash")]
		AccessTokenHash,
		[Token(Token = "0x4001BC1")]
		[Description("c_hash")]
		CodeHashValue,
		[Token(Token = "0x4001BC2")]
		[Description("acr")]
		Acr,
		[Token(Token = "0x4001BC3")]
		[Description("amr")]
		Amr,
		[Token(Token = "0x4001BC4")]
		[Description("sub_jwk")]
		PublicKey,
		[Token(Token = "0x4001BC5")]
		[Description("cnf")]
		Confirmation,
		[Token(Token = "0x4001BC6")]
		[Description("sip_from_tag")]
		SipFromTag,
		[Token(Token = "0x4001BC7")]
		[Description("sip_date")]
		SipDate,
		[Token(Token = "0x4001BC8")]
		[Description("sip_callid")]
		SipCallId,
		[Token(Token = "0x4001BC9")]
		[Description("sip_cseq_num")]
		SipCseqNumber,
		[Token(Token = "0x4001BCA")]
		[Description("sip_via_branch")]
		SipViaBranch,
		[Token(Token = "0x4001BCB")]
		[Description("orig")]
		OriginatingIdentityString,
		[Token(Token = "0x4001BCC")]
		[Description("dest")]
		DestinationIdentityString,
		[Token(Token = "0x4001BCD")]
		[Description("mky")]
		MediaKeyFingerprintString
	}
	[Token(Token = "0x20004C6")]
	internal static class EnumExtensions
	{
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1014228", Offset = "0x1014228", VA = "0x1014228")]
		public static string GetHeaderName(this HeaderName value)
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1014270", Offset = "0x1014270", VA = "0x1014270")]
		public static string GetPublicClaimName(this ClaimName value)
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		private static string GetDescription<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C7")]
	public enum HeaderName
	{
		[Token(Token = "0x4001BCF")]
		[Description("typ")]
		Type,
		[Token(Token = "0x4001BD0")]
		[Description("cty")]
		ContentType,
		[Token(Token = "0x4001BD1")]
		[Description("alg")]
		Algorithm,
		[Token(Token = "0x4001BD2")]
		[Description("kid")]
		KeyId,
		[Token(Token = "0x4001BD3")]
		[Description("x5u")]
		X5u,
		[Token(Token = "0x4001BD4")]
		[Description("x5c")]
		X5c,
		[Token(Token = "0x4001BD5")]
		[Description("x5t")]
		X5t
	}
	[Token(Token = "0x20004C8")]
	public sealed class JwtBuilder
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly JwtData _jwt;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IJwtEncoder _encoder;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IJwtDecoder _decoder;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IJwtValidator _validator;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IJsonSerializer _serializer;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IBase64UrlEncoder _urlEncoder;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDateTimeProvider _dateTimeProvider;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IJwtAlgorithm _algorithm;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IAlgorithmFactory _algFactory;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte[][] _secrets;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _verify;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x10142B8", Offset = "0x10142B8", VA = "0x10142B8")]
		public JwtBuilder AddHeader(HeaderName name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1014390", Offset = "0x1014390", VA = "0x1014390")]
		public JwtBuilder AddClaim(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x101445C", Offset = "0x101445C", VA = "0x101445C")]
		public JwtBuilder WithSerializer(IJsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x100CC30", Offset = "0x100CC30", VA = "0x100CC30")]
		public JwtBuilder WithDateTimeProvider(IDateTimeProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1014478", Offset = "0x1014478", VA = "0x1014478")]
		public JwtBuilder WithEncoder(IJwtEncoder encoder)
		{
			return null;
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1014494", Offset = "0x1014494", VA = "0x1014494")]
		public JwtBuilder WithDecoder(IJwtDecoder decoder)
		{
			return null;
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x10144B0", Offset = "0x10144B0", VA = "0x10144B0")]
		public JwtBuilder WithValidator(IJwtValidator validator)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x10144CC", Offset = "0x10144CC", VA = "0x10144CC")]
		public JwtBuilder WithUrlEncoder(IBase64UrlEncoder urlEncoder)
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x10144E8", Offset = "0x10144E8", VA = "0x10144E8")]
		public JwtBuilder WithAlgorithmFactory(IAlgorithmFactory algFactory)
		{
			return null;
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x100CC14", Offset = "0x100CC14", VA = "0x100CC14")]
		public JwtBuilder WithAlgorithm(IJwtAlgorithm algorithm)
		{
			return null;
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x1014504", Offset = "0x1014504", VA = "0x1014504")]
		public JwtBuilder WithSecret(params string[] secrets)
		{
			return null;
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1014640", Offset = "0x1014640", VA = "0x1014640")]
		public JwtBuilder WithSecret(params byte[][] secrets)
		{
			return null;
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x101465C", Offset = "0x101465C", VA = "0x101465C")]
		public JwtBuilder MustVerifySignature()
		{
			return null;
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x100CC4C", Offset = "0x100CC4C", VA = "0x100CC4C")]
		public JwtBuilder DoNotVerifySignature()
		{
			return null;
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1014668", Offset = "0x1014668", VA = "0x1014668")]
		public JwtBuilder WithVerifySignature(bool verify)
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1014674", Offset = "0x1014674", VA = "0x1014674")]
		public string Encode()
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x100CC54", Offset = "0x100CC54", VA = "0x100CC54")]
		public string Decode(string token)
		{
			return null;
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1014BA8", Offset = "0x1014BA8", VA = "0x1014BA8")]
		public string DecodeHeader(string token)
		{
			return null;
		}

		[Token(Token = "0x6001D3A")]
		public T DecodeHeader<T>(string token)
		{
			return (T)null;
		}

		[Token(Token = "0x6001D3B")]
		public T Decode<T>(string token)
		{
			return (T)null;
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1014C58", Offset = "0x1014C58", VA = "0x1014C58")]
		private void TryCreateEncoder()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1014D84", Offset = "0x1014D84", VA = "0x1014D84")]
		private void TryCreateDecoder()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1014F0C", Offset = "0x1014F0C", VA = "0x1014F0C")]
		private void TryCreateValidator()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x101475C", Offset = "0x101475C", VA = "0x101475C")]
		private void EnsureCanEncode()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1014974", Offset = "0x1014974", VA = "0x1014974")]
		private void EnsureCanDecode()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x101501C", Offset = "0x101501C", VA = "0x101501C")]
		private bool CanEncode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1015068", Offset = "0x1015068", VA = "0x1015068")]
		private bool CanDecode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x100CA40", Offset = "0x100CA40", VA = "0x100CA40")]
		public JwtBuilder()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public static class JwtBuilderExtensions
	{
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1015134", Offset = "0x1015134", VA = "0x1015134")]
		public static JwtBuilder AddClaim(this JwtBuilder builder, ClaimName name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001D48")]
		public static JwtBuilder AddClaim<T>(this JwtBuilder builder, ClaimName name, T value)
		{
			return null;
		}

		[Token(Token = "0x6001D49")]
		public static JwtBuilder AddClaim<T>(this JwtBuilder builder, string name, T value)
		{
			return null;
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x101516C", Offset = "0x101516C", VA = "0x101516C")]
		public static JwtBuilder AddClaims(this JwtBuilder builder, IEnumerable<KeyValuePair<string, object>> claims)
		{
			return null;
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1015274", Offset = "0x1015274", VA = "0x1015274")]
		public static JwtBuilder ExpirationTime(this JwtBuilder builder, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1015334", Offset = "0x1015334", VA = "0x1015334")]
		public static JwtBuilder ExpirationTime(this JwtBuilder builder, long time)
		{
			return null;
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1015390", Offset = "0x1015390", VA = "0x1015390")]
		public static JwtBuilder Issuer(this JwtBuilder builder, string issuer)
		{
			return null;
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x10153EC", Offset = "0x10153EC", VA = "0x10153EC")]
		public static JwtBuilder Subject(this JwtBuilder builder, string subject)
		{
			return null;
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1015448", Offset = "0x1015448", VA = "0x1015448")]
		public static JwtBuilder Audience(this JwtBuilder builder, string audience)
		{
			return null;
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x10154A4", Offset = "0x10154A4", VA = "0x10154A4")]
		public static JwtBuilder NotBefore(this JwtBuilder builder, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1015564", Offset = "0x1015564", VA = "0x1015564")]
		public static JwtBuilder NotBefore(this JwtBuilder builder, long time)
		{
			return null;
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x10155C0", Offset = "0x10155C0", VA = "0x10155C0")]
		public static JwtBuilder IssuedAt(this JwtBuilder builder, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1015680", Offset = "0x1015680", VA = "0x1015680")]
		public static JwtBuilder IssuedAt(this JwtBuilder builder, long time)
		{
			return null;
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x10156DC", Offset = "0x10156DC", VA = "0x10156DC")]
		public static JwtBuilder Id(this JwtBuilder builder, Guid id)
		{
			return null;
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x101576C", Offset = "0x101576C", VA = "0x101576C")]
		public static JwtBuilder Id(this JwtBuilder builder, long id)
		{
			return null;
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1015710", Offset = "0x1015710", VA = "0x1015710")]
		public static JwtBuilder Id(this JwtBuilder builder, string id)
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x10157EC", Offset = "0x10157EC", VA = "0x10157EC")]
		public static JwtBuilder GivenName(this JwtBuilder builder, string name)
		{
			return null;
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1015848", Offset = "0x1015848", VA = "0x1015848")]
		public static JwtBuilder FamilyName(this JwtBuilder builder, string lastname)
		{
			return null;
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x10158A4", Offset = "0x10158A4", VA = "0x10158A4")]
		public static JwtBuilder MiddleName(this JwtBuilder builder, string middleName)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CC")]
	public class JwtData
	{
		[Token(Token = "0x170003AC")]
		public IDictionary<string, object> Header
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x1015C04", Offset = "0x1015C04", VA = "0x1015C04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public IDictionary<string, object> Payload
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x1015C0C", Offset = "0x1015C0C", VA = "0x1015C0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x10150A8", Offset = "0x10150A8", VA = "0x10150A8")]
		public JwtData()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x1015B6C", Offset = "0x1015B6C", VA = "0x1015B6C")]
		public JwtData(IDictionary<string, object> payload)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x10159E0", Offset = "0x10159E0", VA = "0x10159E0")]
		public JwtData(IDictionary<string, object> header, IDictionary<string, object> payload)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x1015B78", Offset = "0x1015B78", VA = "0x1015B78")]
		public JwtData(string token)
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class JwtHeader
	{
		[Token(Token = "0x170003AE")]
		[JsonProperty("typ")]
		public string Type
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x1015C14", Offset = "0x1015C14", VA = "0x1015C14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x1015C1C", Offset = "0x1015C1C", VA = "0x1015C1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		[JsonProperty("cty")]
		public string ContentType
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x1015C24", Offset = "0x1015C24", VA = "0x1015C24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x1015C2C", Offset = "0x1015C2C", VA = "0x1015C2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		[JsonProperty("alg")]
		public string Algorithm
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x1015C34", Offset = "0x1015C34", VA = "0x1015C34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x1015C3C", Offset = "0x1015C3C", VA = "0x1015C3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		[JsonProperty("kid")]
		public string KeyId
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1015C44", Offset = "0x1015C44", VA = "0x1015C44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x1015C4C", Offset = "0x1015C4C", VA = "0x1015C4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		[JsonProperty("x5u")]
		public string X5u
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x1015C54", Offset = "0x1015C54", VA = "0x1015C54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x1015C5C", Offset = "0x1015C5C", VA = "0x1015C5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		[JsonProperty("x5c")]
		public string X5c
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x1015C64", Offset = "0x1015C64", VA = "0x1015C64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x1015C6C", Offset = "0x1015C6C", VA = "0x1015C6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		[JsonProperty("x5t")]
		public string X5t
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x1015C74", Offset = "0x1015C74", VA = "0x1015C74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x1015C7C", Offset = "0x1015C7C", VA = "0x1015C7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1015C84", Offset = "0x1015C84", VA = "0x1015C84")]
		public JwtHeader()
		{
		}
	}
}
namespace HyperDash.Backend.JWT.Algorithms
{
	[Token(Token = "0x20004CE")]
	public sealed class DelegateAlgorithmFactory : IAlgorithmFactory
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<IJwtAlgorithm> _algFactory;

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1015C8C", Offset = "0x1015C8C", VA = "0x1015C8C")]
		public DelegateAlgorithmFactory(Func<IJwtAlgorithm> algFactory)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1010AB0", Offset = "0x1010AB0", VA = "0x1010AB0")]
		public DelegateAlgorithmFactory(IJwtAlgorithm algorithm)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1015D20", Offset = "0x1015D20", VA = "0x1015D20", Slot = "4")]
		public IJwtAlgorithm Create(JwtDecoderContext context)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D0")]
	public sealed class HMACSHA256Algorithm : IJwtAlgorithm
	{
		[Token(Token = "0x170003B5")]
		public string Name
		{
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x1015EEC", Offset = "0x1015EEC", VA = "0x1015EEC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1015D4C", Offset = "0x1015D4C", VA = "0x1015D4C", Slot = "4")]
		public byte[] Sign(byte[] key, byte[] bytesToSign)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x1015F4C", Offset = "0x1015F4C", VA = "0x1015F4C")]
		public HMACSHA256Algorithm()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public sealed class HMACSHA384Algorithm : IJwtAlgorithm
	{
		[Token(Token = "0x170003B6")]
		public string Name
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x10160F4", Offset = "0x10160F4", VA = "0x10160F4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1015F54", Offset = "0x1015F54", VA = "0x1015F54", Slot = "4")]
		public byte[] Sign(byte[] key, byte[] bytesToSign)
		{
			return null;
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1016158", Offset = "0x1016158", VA = "0x1016158")]
		public HMACSHA384Algorithm()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public sealed class HMACSHA512Algorithm : IJwtAlgorithm
	{
		[Token(Token = "0x170003B7")]
		public string Name
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1016300", Offset = "0x1016300", VA = "0x1016300", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1016160", Offset = "0x1016160", VA = "0x1016160", Slot = "4")]
		public byte[] Sign(byte[] key, byte[] bytesToSign)
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x1016364", Offset = "0x1016364", VA = "0x1016364")]
		public HMACSHA512Algorithm()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class HMACSHAAlgorithmFactory : IAlgorithmFactory
	{
		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x101636C", Offset = "0x101636C", VA = "0x101636C", Slot = "5")]
		public virtual IJwtAlgorithm Create(JwtDecoderContext context)
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x1016480", Offset = "0x1016480", VA = "0x1016480", Slot = "6")]
		protected virtual IJwtAlgorithm Create(JwtAlgorithmName algorithm)
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x10165FC", Offset = "0x10165FC", VA = "0x10165FC")]
		public HMACSHAAlgorithmFactory()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public interface IAlgorithmFactory
	{
		[Token(Token = "0x6001D83")]
		IJwtAlgorithm Create(JwtDecoderContext context);
	}
	[Token(Token = "0x20004D5")]
	public interface IAsymmetricAlgorithm : IJwtAlgorithm
	{
		[Token(Token = "0x6001D84")]
		bool Verify(byte[] bytesToSign, byte[] signature);
	}
	[Token(Token = "0x20004D6")]
	public interface IJwtAlgorithm
	{
		[Token(Token = "0x170003B8")]
		string Name
		{
			[Token(Token = "0x6001D86")]
			get;
		}

		[Token(Token = "0x6001D85")]
		byte[] Sign(byte[] key, byte[] bytesToSign);
	}
	[Token(Token = "0x20004D7")]
	public static class JwtAlgorithmExtensions
	{
		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x1012598", Offset = "0x1012598", VA = "0x1012598")]
		public static bool IsAsymmetric(this IJwtAlgorithm alg)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004D8")]
	public enum JwtAlgorithmName
	{
		[Token(Token = "0x4001BF1")]
		HS256,
		[Token(Token = "0x4001BF2")]
		HS384,
		[Token(Token = "0x4001BF3")]
		HS512,
		[Token(Token = "0x4001BF4")]
		RS256
	}
	[Token(Token = "0x20004D9")]
	public sealed class RS256Algorithm : IAsymmetricAlgorithm, IJwtAlgorithm
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly RSA _publicKey;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly RSA _privateKey;

		[Token(Token = "0x170003B9")]
		public string Name
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x1016930", Offset = "0x1016930", VA = "0x1016930", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x1016604", Offset = "0x1016604", VA = "0x1016604")]
		public RS256Algorithm(RSA publicKey, RSA privateKey)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x100CB78", Offset = "0x100CB78", VA = "0x100CB78")]
		public RS256Algorithm(RSA publicKey)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x10166D4", Offset = "0x10166D4", VA = "0x10166D4")]
		public RS256Algorithm(X509Certificate2 cert)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1016994", Offset = "0x1016994", VA = "0x1016994", Slot = "5")]
		public byte[] Sign(byte[] key, byte[] bytesToSign)
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x10169F8", Offset = "0x10169F8", VA = "0x10169F8")]
		public byte[] Sign(byte[] bytesToSign)
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1016ABC", Offset = "0x1016ABC", VA = "0x1016ABC", Slot = "4")]
		public bool Verify(byte[] bytesToSign, byte[] signature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1016860", Offset = "0x1016860", VA = "0x1016860")]
		private static RSA GetPrivateKey(X509Certificate2 cert)
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1016780", Offset = "0x1016780", VA = "0x1016780")]
		private static RSA GetPublicKey(X509Certificate2 cert)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DA")]
	public sealed class RSAlgorithmFactory : HMACSHAAlgorithmFactory
	{
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<RS256Algorithm> _algFactory;

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1016B90", Offset = "0x1016B90", VA = "0x1016B90")]
		public RSAlgorithmFactory(Func<X509Certificate2> certFactory)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1016C70", Offset = "0x1016C70", VA = "0x1016C70")]
		public RSAlgorithmFactory(RSA publicKey)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x1016D50", Offset = "0x1016D50", VA = "0x1016D50")]
		public RSAlgorithmFactory(RSA publicKey, RSA privateKey)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x1016E44", Offset = "0x1016E44", VA = "0x1016E44", Slot = "6")]
		protected override IJwtAlgorithm Create(JwtAlgorithmName algorithm)
		{
			return null;
		}
	}
}
namespace HyperDash.Backend.HttpServer
{
	[Serializable]
	[Token(Token = "0x20004DE")]
	public struct GameSessionResponse
	{
		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Status;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string HostName;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Connections;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaxConnections;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CurrentMap;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CurrentState;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Version;
	}
	[Token(Token = "0x20004DF")]
	public class HttpProcessor
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TcpClient socket;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HttpServer srv;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stream inputStream;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StreamWriter outputStream;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string http_method;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string http_url;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string http_protocol_versionstring;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Hashtable httpHeaders;

		[Token(Token = "0x4001C0B")]
		private const int BUF_SIZE = 4096;

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x10170AC", Offset = "0x10170AC", VA = "0x10170AC")]
		public HttpProcessor(TcpClient s, HttpServer srv)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1017150", Offset = "0x1017150", VA = "0x1017150")]
		private string streamReadLine(Stream inputStream)
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1017244", Offset = "0x1017244", VA = "0x1017244")]
		public void process()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1017508", Offset = "0x1017508", VA = "0x1017508")]
		public void parseRequest()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1017684", Offset = "0x1017684", VA = "0x1017684")]
		public void readHeaders()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x10178D8", Offset = "0x10178D8", VA = "0x10178D8")]
		public void handleGETRequest()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x10178FC", Offset = "0x10178FC", VA = "0x10178FC")]
		public void handlePOSTRequest()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1017A20", Offset = "0x1017A20", VA = "0x1017A20")]
		public void writeSuccess(string content_type = "text/html")
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1017964", Offset = "0x1017964", VA = "0x1017964")]
		public void writeFailure()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public abstract class HttpServer
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int port;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TcpListener listener;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool is_active;

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1017B2C", Offset = "0x1017B2C", VA = "0x1017B2C")]
		public HttpServer(int port)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1017B5C", Offset = "0x1017B5C", VA = "0x1017B5C")]
		public void Listen()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1017DF8", Offset = "0x1017DF8", VA = "0x1017DF8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001DA7")]
		public abstract void handleGETRequest(HttpProcessor p);

		[Token(Token = "0x6001DA8")]
		public abstract void handlePOSTRequest(HttpProcessor p, StreamReader inputData);
	}
}
namespace HyperDash.Audio
{
	[Token(Token = "0x20004E1")]
	public class LocalPlayerAnnouncer : MonoBehaviour
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _killStreakSource;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _killStreakClip;

		[Token(Token = "0x170003BA")]
		public static LocalPlayerAnnouncer Active
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x1017E14", Offset = "0x1017E14", VA = "0x1017E14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x1017E5C", Offset = "0x1017E5C", VA = "0x1017E5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1017EB4", Offset = "0x1017EB4", VA = "0x1017EB4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1017F90", Offset = "0x1017F90", VA = "0x1017F90")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1017FE8", Offset = "0x1017FE8", VA = "0x1017FE8")]
		private void PlayVoice(AudioClip clip)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x101804C", Offset = "0x101804C", VA = "0x101804C")]
		public void PlayKillStreak(int killstreak)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x10180F8", Offset = "0x10180F8", VA = "0x10180F8")]
		public LocalPlayerAnnouncer()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class SoundManager : MonoBehaviour
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixer _audioMixer;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundManager _instance;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isMuted;

		[Token(Token = "0x170003BB")]
		public static SoundManager Instance
		{
			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x1018100", Offset = "0x1018100", VA = "0x1018100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public bool IsMusicMuted
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x10181D4", Offset = "0x10181D4", VA = "0x10181D4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x10181DC", Offset = "0x10181DC", VA = "0x10181DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x10181E8", Offset = "0x10181E8", VA = "0x10181E8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1018240", Offset = "0x1018240", VA = "0x1018240")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x10185D4", Offset = "0x10185D4", VA = "0x10185D4")]
		private void OnMasterVolumeChangedEvent(Settings sender)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1018700", Offset = "0x1018700", VA = "0x1018700")]
		private void OnMusicVolumeChangedEvent(Settings sender)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1018634", Offset = "0x1018634", VA = "0x1018634")]
		private void OnVoiceVolumeChangedEvent(Settings sender)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1018764", Offset = "0x1018764", VA = "0x1018764")]
		private void OnGameVolumeChangeEvent(Settings sender)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x10187BC", Offset = "0x10187BC", VA = "0x10187BC")]
		private void OnAnnouncerVolumeChangeEvent(Settings sender)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x1018588", Offset = "0x1018588", VA = "0x1018588")]
		private void SetMixerVolume(string key, float value)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1018814", Offset = "0x1018814", VA = "0x1018814")]
		public static float VolumeToDB(string key, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x10184F4", Offset = "0x10184F4", VA = "0x10184F4")]
		public void MuteAudio()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x101896C", Offset = "0x101896C", VA = "0x101896C")]
		public void UnmuteAudio()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1018AC4", Offset = "0x1018AC4", VA = "0x1018AC4")]
		public void FadeMuteAudio()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1018B34", Offset = "0x1018B34", VA = "0x1018B34")]
		public void FadeUnmuteAudio()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1018CC4", Offset = "0x1018CC4", VA = "0x1018CC4")]
		public void SetPitch(float pitch)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1018D28", Offset = "0x1018D28", VA = "0x1018D28")]
		public SoundManager()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class UISoundManager : MonoBehaviour
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		[SerializeField]
		private AudioSource _audiosource;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Audio Clips")]
		[SerializeField]
		private AudioClip _click;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _menuSlideOpen;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _menuSlideClosed;

		[Token(Token = "0x170003BD")]
		public static UISoundManager Active
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x1018D8C", Offset = "0x1018D8C", VA = "0x1018D8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x1018DD4", Offset = "0x1018DD4", VA = "0x1018DD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x1018E2C", Offset = "0x1018E2C", VA = "0x1018E2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1018EB0", Offset = "0x1018EB0", VA = "0x1018EB0")]
		public void PlayClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1018EE0", Offset = "0x1018EE0", VA = "0x1018EE0")]
		public void ButtonClick()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1018EE8", Offset = "0x1018EE8", VA = "0x1018EE8")]
		public void OpenMenu()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1018EF0", Offset = "0x1018EF0", VA = "0x1018EF0")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1018EF8", Offset = "0x1018EF8", VA = "0x1018EF8")]
		public UISoundManager()
		{
		}
	}
}
namespace HyperDash.Anzu
{
	[Token(Token = "0x20004E5")]
	[ExecuteAlways]
	public class AdPlacement : MonoBehaviour
	{
		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _channel;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StreamingTexture _fallbackTexture;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _initialized;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RequestHandle<Sprite> _requestHandle;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _combinedChannelName;

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1018F00", Offset = "0x1018F00", VA = "0x1018F00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1018FD4", Offset = "0x1018FD4", VA = "0x1018FD4")]
		private void OnPlaybackStart()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1019034", Offset = "0x1019034", VA = "0x1019034")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x10190E4", Offset = "0x10190E4", VA = "0x10190E4")]
		private RequestHandle<Sprite> TryLoadDefaultFallback(Action next)
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x101929C", Offset = "0x101929C", VA = "0x101929C")]
		private RequestHandle<Sprite> TryLoadCustomAd(Action next)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1019158", Offset = "0x1019158", VA = "0x1019158")]
		private RequestHandle<Sprite> LoadAnyTexture(string path, Action onDone)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1019458", Offset = "0x1019458", VA = "0x1019458")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x101947C", Offset = "0x101947C", VA = "0x101947C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1018FB8", Offset = "0x1018FB8", VA = "0x1018FB8")]
		private bool IsInEditorScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x10194D4", Offset = "0x10194D4", VA = "0x10194D4")]
		public AdPlacement()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class AdSetup : MonoBehaviour
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask _mask;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AdSetup _instance;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RaycastHit[] _hits;

		[Token(Token = "0x170003BE")]
		public static bool EnableAdsFeature
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x1019634", Offset = "0x1019634", VA = "0x1019634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003BF")]
		public static bool UserCanBuyToggle
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x101963C", Offset = "0x101963C", VA = "0x101963C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C0")]
		public static bool UserHasAdsToggleAccess
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x1019644", Offset = "0x1019644", VA = "0x1019644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C1")]
		public static bool ShowAds
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x101964C", Offset = "0x101964C", VA = "0x101964C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x1019654", Offset = "0x1019654", VA = "0x1019654")]
		public static void ReInitialize()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1019658", Offset = "0x1019658", VA = "0x1019658")]
		public AdSetup()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	[DefaultExecutionOrder(-999999)]
	public class AnzuReport : MonoBehaviour
	{
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x10196D0", Offset = "0x10196D0", VA = "0x10196D0")]
		public AnzuReport()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E9")]
	public class StreamingTexture
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _path;

		[Token(Token = "0x170003C2")]
		public string Path
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x10196D8", Offset = "0x10196D8", VA = "0x10196D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x10196E0", Offset = "0x10196E0", VA = "0x10196E0")]
		public StreamingTexture()
		{
		}
	}
}
namespace HyperDash.AntiCheat
{
	[Token(Token = "0x20004EA")]
	public class AntiCheat : GlobalEventListener
	{
		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x10196E8", Offset = "0x10196E8", VA = "0x10196E8")]
		[RuntimeInitializeOnLoadMethod]
		public static void Init()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x10196EC", Offset = "0x10196EC", VA = "0x10196EC", Slot = "36")]
		public override void SessionConnected(UdpSession session, IProtocolToken token)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x10196F0", Offset = "0x10196F0", VA = "0x10196F0", Slot = "11")]
		public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x10196F4", Offset = "0x10196F4", VA = "0x10196F4")]
		private static void OnMemoryEditingDetected()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x10196F8", Offset = "0x10196F8", VA = "0x10196F8")]
		public void OnSpeedHackDetected()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x10196FC", Offset = "0x10196FC", VA = "0x10196FC")]
		public AntiCheat()
		{
		}
	}
}
namespace HyperDash.Analytics
{
	[Token(Token = "0x20004EB")]
	public enum AnalyticEvent
	{
		[Token(Token = "0x4001C2A")]
		BootClient,
		[Token(Token = "0x4001C2B")]
		AccountApi,
		[Token(Token = "0x4001C2C")]
		ServerJoin,
		[Token(Token = "0x4001C2D")]
		JoinServerMethod,
		[Token(Token = "0x4001C2E")]
		Connected,
		[Token(Token = "0x4001C2F")]
		ShopSkinPurchased,
		[Token(Token = "0x4001C30")]
		ShopCreditsPurchased,
		[Token(Token = "0x4001C31")]
		VoteMap,
		[Token(Token = "0x4001C32")]
		MutatorsUsed
	}
	[Token(Token = "0x20004EC")]
	public static class AnalyticsManager
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, object> _pooledDictionary;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, object> _emptyDictionary;

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1019704", Offset = "0x1019704", VA = "0x1019704")]
		public static Dictionary<string, object> GetDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x101978C", Offset = "0x101978C", VA = "0x101978C")]
		public static void LogEvent(AnalyticEvent eventType, [Optional] Dictionary<string, object> arguments)
		{
		}
	}
}
namespace FullSerializer
{
	[Token(Token = "0x20004ED")]
	public class fsAotCompilationManager
	{
		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Type> AotCandidateTypes;

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1019A68", Offset = "0x1019A68", VA = "0x1019A68")]
		private static bool HasMember(fsAotVersionInfo versionInfo, fsAotVersionInfo.Member member)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x1019B78", Offset = "0x1019B78", VA = "0x1019B78")]
		public static bool IsAotModelUpToDate(fsMetaType currentModel, fsIAotConverter aotModel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1019EC8", Offset = "0x1019EC8", VA = "0x1019EC8")]
		public static string RunAotCompilationForType(fsConfig config, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x101B0EC", Offset = "0x101B0EC", VA = "0x101B0EC")]
		private static string EmitVersionInfo(string prefix, Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
			return null;
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x101B4C0", Offset = "0x101B4C0", VA = "0x101B4C0")]
		private static string GetConverterString(fsMetaProperty member)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x101B588", Offset = "0x101B588", VA = "0x101B588")]
		public static string GetQualifiedConverterNameForType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1019F94", Offset = "0x1019F94", VA = "0x1019F94")]
		private static string GenerateDirectConverterForTypeInCSharp(Type type, fsMetaProperty[] members, bool isConstructorPublic)
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x101B60C", Offset = "0x101B60C", VA = "0x101B60C")]
		public fsAotCompilationManager()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	[CreateAssetMenu(menuName = "Full Serializer AOT Configuration")]
	public class fsAotConfiguration : ScriptableObject
	{
		[Token(Token = "0x20004EF")]
		public enum AotState
		{
			[Token(Token = "0x4001C39")]
			Default,
			[Token(Token = "0x4001C3A")]
			Enabled,
			[Token(Token = "0x4001C3B")]
			Disabled
		}

		[Serializable]
		[Token(Token = "0x20004F0")]
		public struct Entry
		{
			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AotState State;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string FullTypeName;

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x101BA70", Offset = "0x101BA70", VA = "0x101BA70")]
			public Entry(Type type)
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x101BAB4", Offset = "0x101BAB4", VA = "0x101BAB4")]
			public Entry(Type type, AotState state)
			{
			}
		}

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Entry> aotTypes;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outputDirectory;

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x101B6AC", Offset = "0x101B6AC", VA = "0x101B6AC")]
		public bool TryFindEntry(Type type, out Entry result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x101B858", Offset = "0x101B858", VA = "0x101B858")]
		public void UpdateOrAddEntry(Entry entry)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x101B9C4", Offset = "0x101B9C4", VA = "0x101B9C4")]
		public fsAotConfiguration()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public struct fsAotVersionInfo
	{
		[Token(Token = "0x20004F2")]
		public struct Member
		{
			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string MemberName;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string JsonName;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string StorageType;

			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string OverrideConverterType;

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x1019DE0", Offset = "0x1019DE0", VA = "0x1019DE0")]
			public Member(fsMetaProperty property)
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x101BB04", Offset = "0x101BB04", VA = "0x101BB04", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x101BB94", Offset = "0x101BB94", VA = "0x101BB94", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x1019B04", Offset = "0x1019B04", VA = "0x1019B04")]
			public static bool operator ==(Member a, Member b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x101BC4C", Offset = "0x101BC4C", VA = "0x101BC4C")]
			public static bool operator !=(Member a, Member b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsConstructorPublic;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Member[] Members;
	}
	[Token(Token = "0x20004F3")]
	public interface fsIAotConverter
	{
		[Token(Token = "0x170003C3")]
		Type ModelType
		{
			[Token(Token = "0x6001DFF")]
			get;
		}

		[Token(Token = "0x170003C4")]
		fsAotVersionInfo VersionInfo
		{
			[Token(Token = "0x6001E00")]
			get;
		}
	}
	[Token(Token = "0x20004F4")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)]
	public sealed class fsForwardAttribute : Attribute
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MemberName;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x101BC84", Offset = "0x101BC84", VA = "0x101BC84")]
		public fsForwardAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class fsConverterRegistrar
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AnimationCurve_DirectConverter Register_AnimationCurve_DirectConverter;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Bounds_DirectConverter Register_Bounds_DirectConverter;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Gradient_DirectConverter Register_Gradient_DirectConverter;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GUIStyleState_DirectConverter Register_GUIStyleState_DirectConverter;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static GUIStyle_DirectConverter Register_GUIStyle_DirectConverter;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Keyframe_DirectConverter Register_Keyframe_DirectConverter;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static LayerMask_DirectConverter Register_LayerMask_DirectConverter;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static RectOffset_DirectConverter Register_RectOffset_DirectConverter;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Rect_DirectConverter Register_Rect_DirectConverter;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<Type> Converters;

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x101BCB4", Offset = "0x101BCB4", VA = "0x101BCB4")]
		static fsConverterRegistrar()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x101C68C", Offset = "0x101C68C", VA = "0x101C68C")]
		public fsConverterRegistrar()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public abstract class fsBaseConverter
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public fsSerializer Serializer;

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x101C694", Offset = "0x101C694", VA = "0x101C694", Slot = "4")]
		public virtual object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x101C8B8", Offset = "0x101C8B8", VA = "0x101C8B8", Slot = "5")]
		public virtual bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x101C9CC", Offset = "0x101C9CC", VA = "0x101C9CC", Slot = "6")]
		public virtual bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		public abstract fsResult TrySerialize(object instance, out fsData serialized, Type storageType);

		[Token(Token = "0x6001E08")]
		public abstract fsResult TryDeserialize(fsData data, ref object instance, Type storageType);

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x101CA40", Offset = "0x101CA40", VA = "0x101CA40")]
		protected fsResult FailExpectedType(fsData data, params fsDataType[] types)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x101D020", Offset = "0x101D020", VA = "0x101D020")]
		protected fsResult CheckType(fsData data, fsDataType type)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x101D390", Offset = "0x101D390", VA = "0x101D390")]
		protected fsResult CheckKey(fsData data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x101D418", Offset = "0x101D418", VA = "0x101D418")]
		protected fsResult CheckKey(Dictionary<string, fsData> data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0D")]
		protected fsResult SerializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0E")]
		protected fsResult DeserializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, out T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x101D6B4", Offset = "0x101D6B4", VA = "0x101D6B4")]
		protected fsBaseConverter()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public static class fsGlobalConfig
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsCaseSensitive;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool AllowInternalExceptions;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string InternalFieldPrefix;
	}
	[Token(Token = "0x20004F9")]
	public class fsConfig
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] SerializeAttributes;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type[] IgnoreSerializeAttributes;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type[] IgnoreSerializeTypeAttributes;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public fsMemberSerialization DefaultMemberSerialization;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Func<string, MemberInfo, string> GetJsonNameFromMemberName;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool EnablePropertySerialization;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool SerializeNonAutoProperties;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool SerializeNonPublicSetProperties;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string CustomDateTimeFormatString;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Serialize64BitIntegerAsString;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool SerializeEnumsAsInteger;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x101C320", Offset = "0x101C320", VA = "0x101C320")]
		public fsConfig()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public sealed class fsContext
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Type, object> _contextObjects;

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x101D880", Offset = "0x101D880", VA = "0x101D880")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E19")]
		public void Set<T>(T obj)
		{
		}

		[Token(Token = "0x6001E1A")]
		public bool Has<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1B")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x101D8D0", Offset = "0x101D8D0", VA = "0x101D8D0")]
		public fsContext()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public abstract class fsConverter : fsBaseConverter
	{
		[Token(Token = "0x6001E1D")]
		public abstract bool CanProcess(Type type);

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x101D958", Offset = "0x101D958", VA = "0x101D958")]
		protected fsConverter()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public enum fsDataType
	{
		[Token(Token = "0x4001C64")]
		Array,
		[Token(Token = "0x4001C65")]
		Object,
		[Token(Token = "0x4001C66")]
		Double,
		[Token(Token = "0x4001C67")]
		Int64,
		[Token(Token = "0x4001C68")]
		Boolean,
		[Token(Token = "0x4001C69")]
		String,
		[Token(Token = "0x4001C6A")]
		Null
	}
	[Token(Token = "0x20004FE")]
	public sealed class fsData
	{
		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _value;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly fsData True;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly fsData False;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly fsData Null;

		[Token(Token = "0x170003C5")]
		public fsDataType Type
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x101CE74", Offset = "0x101CE74", VA = "0x101CE74")]
			get
			{
				return default(fsDataType);
			}
		}

		[Token(Token = "0x170003C6")]
		public bool IsNull
		{
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x101DF64", Offset = "0x101DF64", VA = "0x101DF64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C7")]
		public bool IsDouble
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x101DF74", Offset = "0x101DF74", VA = "0x101DF74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C8")]
		public bool IsInt64
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x101DFD4", Offset = "0x101DFD4", VA = "0x101DFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C9")]
		public bool IsBool
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x101E034", Offset = "0x101E034", VA = "0x101E034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CA")]
		public bool IsString
		{
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x101E094", Offset = "0x101E094", VA = "0x101E094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CB")]
		public bool IsDictionary
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x101E0F4", Offset = "0x101E0F4", VA = "0x101E0F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CC")]
		public bool IsList
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x101E170", Offset = "0x101E170", VA = "0x101E170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CD")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public double AsDouble
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x101E1EC", Offset = "0x101E1EC", VA = "0x101E1EC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170003CE")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public long AsInt64
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x101E234", Offset = "0x101E234", VA = "0x101E234")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170003CF")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public bool AsBool
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x101E27C", Offset = "0x101E27C", VA = "0x101E27C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D0")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public string AsString
		{
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x101E2C4", Offset = "0x101E2C4", VA = "0x101E2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public Dictionary<string, fsData> AsDictionary
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x101D3D0", Offset = "0x101D3D0", VA = "0x101D3D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public List<fsData> AsList
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x101E30C", Offset = "0x101E30C", VA = "0x101E30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x101D960", Offset = "0x101D960", VA = "0x101D960")]
		public fsData()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x101D984", Offset = "0x101D984", VA = "0x101D984")]
		public fsData(bool boolean)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x101D9FC", Offset = "0x101D9FC", VA = "0x101D9FC")]
		public fsData(double f)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x101DA74", Offset = "0x101DA74", VA = "0x101DA74")]
		public fsData(long i)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x101DAEC", Offset = "0x101DAEC", VA = "0x101DAEC")]
		public fsData(string str)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x101DB1C", Offset = "0x101DB1C", VA = "0x101DB1C")]
		public fsData(Dictionary<string, fsData> dict)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x101DB4C", Offset = "0x101DB4C", VA = "0x101DB4C")]
		public fsData(List<fsData> list)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x101DB7C", Offset = "0x101DB7C", VA = "0x101DB7C")]
		public static fsData CreateDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x101DD04", Offset = "0x101DD04", VA = "0x101DD04")]
		public static fsData CreateList()
		{
			return null;
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x101DDB0", Offset = "0x101DDB0", VA = "0x101DDB0")]
		public static fsData CreateList(int capacity)
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x101DE64", Offset = "0x101DE64", VA = "0x101DE64")]
		internal void BecomeDictionary()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x101DEE0", Offset = "0x101DEE0", VA = "0x101DEE0")]
		internal fsData Clone()
		{
			return null;
		}

		[Token(Token = "0x6001E39")]
		private T Cast<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x101E354", Offset = "0x101E354", VA = "0x101E354", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x101E530", Offset = "0x101E530", VA = "0x101E530", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x101E594", Offset = "0x101E594", VA = "0x101E594")]
		public bool Equals(fsData other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x101EA7C", Offset = "0x101EA7C", VA = "0x101EA7C")]
		public static bool operator ==(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x101EB8C", Offset = "0x101EB8C", VA = "0x101EB8C")]
		public static bool operator !=(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x101EBFC", Offset = "0x101EBFC", VA = "0x101EBFC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004FF")]
	public abstract class fsDirectConverter : fsBaseConverter
	{
		[Token(Token = "0x170003D3")]
		public abstract Type ModelType
		{
			[Token(Token = "0x6001E41")]
			get;
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x101ECF4", Offset = "0x101ECF4", VA = "0x101ECF4")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public abstract class fsDirectConverter<TModel> : fsDirectConverter
	{
		[Token(Token = "0x170003D4")]
		public override Type ModelType
		{
			[Token(Token = "0x6001E43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E44")]
		public sealed override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E45")]
		public sealed override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E46")]
		protected abstract fsResult DoSerialize(TModel model, Dictionary<string, fsData> serialized);

		[Token(Token = "0x6001E47")]
		protected abstract fsResult DoDeserialize(Dictionary<string, fsData> data, ref TModel model);

		[Token(Token = "0x6001E48")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public sealed class fsMissingVersionConstructorException : Exception
	{
		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x101ECFC", Offset = "0x101ECFC", VA = "0x101ECFC")]
		public fsMissingVersionConstructorException(Type versionedType, Type constructorType)
		{
		}
	}
	[Token(Token = "0x2000502")]
	public sealed class fsDuplicateVersionNameException : Exception
	{
		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x101EDD0", Offset = "0x101EDD0", VA = "0x101EDD0")]
		public fsDuplicateVersionNameException(Type typeA, Type typeB, string version)
		{
		}
	}
	[Token(Token = "0x2000503")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Property | AttributeTargets.Field)]
	public sealed class fsIgnoreAttribute : Attribute
	{
		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x101F080", Offset = "0x101F080", VA = "0x101F080")]
		public fsIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public interface fsISerializationCallbacks
	{
		[Token(Token = "0x6001E4C")]
		void OnBeforeSerialize(Type storageType);

		[Token(Token = "0x6001E4D")]
		void OnAfterSerialize(Type storageType, ref fsData data);

		[Token(Token = "0x6001E4E")]
		void OnBeforeDeserialize(Type storageType, ref fsData data);

		[Token(Token = "0x6001E4F")]
		void OnAfterDeserialize(Type storageType);
	}
	[Token(Token = "0x2000505")]
	public class fsJsonParser
	{
		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _start;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _input;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StringBuilder _cachedStringBuilder;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x101F088", Offset = "0x101F088", VA = "0x101F088")]
		private fsResult MakeFailure(string message)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x101F338", Offset = "0x101F338", VA = "0x101F338")]
		private bool TryMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x101F374", Offset = "0x101F374", VA = "0x101F374")]
		private bool HasValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x101F3A8", Offset = "0x101F3A8", VA = "0x101F3A8")]
		private bool HasValue(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x101F3E0", Offset = "0x101F3E0", VA = "0x101F3E0")]
		private char Character()
		{
			return default(char);
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x101F3E8", Offset = "0x101F3E8", VA = "0x101F3E8")]
		private char Character(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x101F410", Offset = "0x101F410", VA = "0x101F410")]
		private void SkipSpace()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x101F6B8", Offset = "0x101F6B8", VA = "0x101F6B8")]
		private bool IsHex(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x101F6F4", Offset = "0x101F6F4", VA = "0x101F6F4")]
		private uint ParseSingleChar(char c1, uint multipliyer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x101F74C", Offset = "0x101F74C", VA = "0x101F74C")]
		private uint ParseUnicode(char c1, char c2, char c3, char c4)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x101F8BC", Offset = "0x101F8BC", VA = "0x101F8BC")]
		private fsResult TryUnescapeChar(out char escaped)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x101FF68", Offset = "0x101FF68", VA = "0x101FF68")]
		private fsResult TryParseExact(string content)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x10200C4", Offset = "0x10200C4", VA = "0x10200C4")]
		private fsResult TryParseTrue(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x10201B8", Offset = "0x10201B8", VA = "0x10201B8")]
		private fsResult TryParseFalse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x10202AC", Offset = "0x10202AC", VA = "0x10202AC")]
		private fsResult TryParseNull(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x10203B0", Offset = "0x10203B0", VA = "0x10203B0")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x1020434", Offset = "0x1020434", VA = "0x1020434")]
		private fsResult TryParseNumber(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x1020790", Offset = "0x1020790", VA = "0x1020790")]
		private fsResult TryParseString(out string str)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x1020A60", Offset = "0x1020A60", VA = "0x1020A60")]
		private fsResult TryParseArray(out fsData arr)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1021088", Offset = "0x1021088", VA = "0x1021088")]
		private fsResult TryParseObject(out fsData obj)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1020DC0", Offset = "0x1020DC0", VA = "0x1020DC0")]
		private fsResult RunParse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1021570", Offset = "0x1021570", VA = "0x1021570")]
		public static fsResult Parse(string input, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x10216E0", Offset = "0x10216E0", VA = "0x10216E0")]
		public static fsData Parse(string input)
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1021644", Offset = "0x1021644", VA = "0x1021644")]
		private fsJsonParser(string input)
		{
		}
	}
	[Token(Token = "0x2000506")]
	public static class fsJsonPrinter
	{
		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x102170C", Offset = "0x102170C", VA = "0x102170C")]
		private static void InsertSpacing(TextWriter stream, int count)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x1021780", Offset = "0x1021780", VA = "0x1021780")]
		private static string EscapeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x1021ACC", Offset = "0x1021ACC", VA = "0x1021ACC")]
		private static void BuildCompressedString(fsData data, TextWriter stream)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x102216C", Offset = "0x102216C", VA = "0x102216C")]
		private static void BuildPrettyString(fsData data, TextWriter stream, int depth)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x1022748", Offset = "0x1022748", VA = "0x1022748")]
		public static void PrettyJson(fsData data, TextWriter outputStream)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x1022750", Offset = "0x1022750", VA = "0x1022750")]
		public static string PrettyJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x102292C", Offset = "0x102292C", VA = "0x102292C")]
		public static void CompressedJson(fsData data, StreamWriter outputStream)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x101E358", Offset = "0x101E358", VA = "0x101E358")]
		public static string CompressedJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x1021F88", Offset = "0x1021F88", VA = "0x1021F88")]
		private static string ConvertDoubleToString(double d)
		{
			return null;
		}
	}
	[Token(Token = "0x2000507")]
	public enum fsMemberSerialization
	{
		[Token(Token = "0x4001C73")]
		OptIn,
		[Token(Token = "0x4001C74")]
		OptOut,
		[Token(Token = "0x4001C75")]
		Default
	}
	[Token(Token = "0x2000508")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public sealed class fsObjectAttribute : Attribute
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] PreviousModels;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string VersionString;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public fsMemberSerialization MemberSerialization;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type Converter;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Type Processor;

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x1022930", Offset = "0x1022930", VA = "0x1022930")]
		public fsObjectAttribute()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1022940", Offset = "0x1022940", VA = "0x1022940")]
		public fsObjectAttribute(string versionString, params Type[] previousModels)
		{
		}
	}
	[Token(Token = "0x2000509")]
	public abstract class fsObjectProcessor
	{
		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x102298C", Offset = "0x102298C", VA = "0x102298C", Slot = "4")]
		public virtual bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x10229CC", Offset = "0x10229CC", VA = "0x10229CC", Slot = "5")]
		public virtual void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x10229D0", Offset = "0x10229D0", VA = "0x10229D0", Slot = "6")]
		public virtual void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x10229D4", Offset = "0x10229D4", VA = "0x10229D4", Slot = "7")]
		public virtual void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x10229D8", Offset = "0x10229D8", VA = "0x10229D8", Slot = "8")]
		public virtual void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x10229DC", Offset = "0x10229DC", VA = "0x10229DC", Slot = "9")]
		public virtual void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x10229E0", Offset = "0x10229E0", VA = "0x10229E0")]
		protected fsObjectProcessor()
		{
		}
	}
	[Token(Token = "0x200050A")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)]
	public sealed class fsPropertyAttribute : Attribute
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Converter;

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x10229E8", Offset = "0x10229E8", VA = "0x10229E8")]
		public fsPropertyAttribute()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x1022A4C", Offset = "0x1022A4C", VA = "0x1022A4C")]
		public fsPropertyAttribute(string name)
		{
		}
	}
	[Token(Token = "0x200050B")]
	public struct fsResult
	{
		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] EmptyStringArray;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _success;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<string> _messages;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static fsResult Success;

		[Token(Token = "0x170003D5")]
		public bool Failed
		{
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x1022F60", Offset = "0x1022F60", VA = "0x1022F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D6")]
		public bool Succeeded
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1022F70", Offset = "0x1022F70", VA = "0x1022F70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D7")]
		public bool HasWarnings
		{
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x1022F78", Offset = "0x1022F78", VA = "0x1022F78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D8")]
		public Exception AsException
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x102300C", Offset = "0x102300C", VA = "0x102300C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		public IEnumerable<string> RawMessages
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x1023180", Offset = "0x1023180", VA = "0x1023180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		public string FormattedMessages
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x10231E4", Offset = "0x10231E4", VA = "0x10231E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x1022A7C", Offset = "0x1022A7C", VA = "0x1022A7C")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x1022B84", Offset = "0x1022B84", VA = "0x1022B84")]
		public void AddMessages(fsResult result)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x1022C44", Offset = "0x1022C44", VA = "0x1022C44")]
		public fsResult Merge(fsResult other)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x1022D24", Offset = "0x1022D24", VA = "0x1022D24")]
		public static fsResult Warn(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x1022E30", Offset = "0x1022E30", VA = "0x1022E30")]
		public static fsResult Fail(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x1022F38", Offset = "0x1022F38", VA = "0x1022F38")]
		public static fsResult operator +(fsResult a, fsResult b)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1022FD0", Offset = "0x1022FD0", VA = "0x1022FD0")]
		public fsResult AssertSuccess()
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x10230FC", Offset = "0x10230FC", VA = "0x10230FC")]
		public fsResult AssertSuccessWithoutWarnings()
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x200050C")]
	public class fsSerializer
	{
		[Token(Token = "0x200050D")]
		internal class fsLazyCycleDefinitionWriter
		{
			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, fsData> _pendingDefinitions;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HashSet<int> _references;

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x10270D0", Offset = "0x10270D0", VA = "0x10270D0")]
			public void WriteDefinition(int id, fsData data)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x1026D68", Offset = "0x1026D68", VA = "0x1026D68")]
			public void WriteReference(int id, Dictionary<string, fsData> dict)
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x1028E54", Offset = "0x1028E54", VA = "0x1028E54")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x1025858", Offset = "0x1025858", VA = "0x1025858")]
			public fsLazyCycleDefinitionWriter()
			{
			}
		}

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<string> _reservedKeywords;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string Key_ObjectReference;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string Key_ObjectDefinition;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string Key_InstanceType;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string Key_Version;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string Key_Content;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, fsBaseConverter> _cachedConverterTypeInstances;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, fsBaseConverter> _cachedConverters;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Type, List<fsObjectProcessor>> _cachedProcessors;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<fsConverter> _availableConverters;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<Type, fsDirectConverter> _availableDirectConverters;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<fsObjectProcessor> _processors;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly fsCyclicReferenceManager _references;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly fsLazyCycleDefinitionWriter _lazyReferenceWriter;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<Type, Type> _abstractTypeRemap;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public fsContext Context;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public fsConfig Config;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x10232FC", Offset = "0x10232FC", VA = "0x10232FC")]
		static fsSerializer()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x10235B0", Offset = "0x10235B0", VA = "0x10235B0")]
		public static bool IsReservedKeyword(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x1023630", Offset = "0x1023630", VA = "0x1023630")]
		private static bool IsObjectReference(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x10236E8", Offset = "0x10236E8", VA = "0x10236E8")]
		private static bool IsObjectDefinition(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x10237A0", Offset = "0x10237A0", VA = "0x10237A0")]
		private static bool IsVersioned(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x1023858", Offset = "0x1023858", VA = "0x1023858")]
		private static bool IsTypeSpecified(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1023910", Offset = "0x1023910", VA = "0x1023910")]
		private static bool IsWrappedData(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x10239C8", Offset = "0x10239C8", VA = "0x10239C8")]
		public static void StripDeserializationMetadata(ref fsData data)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x1023BA0", Offset = "0x1023BA0", VA = "0x1023BA0")]
		public static void StripDeserializationMetadataRecursive(ref fsData data)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x1023F58", Offset = "0x1023F58", VA = "0x1023F58")]
		private static void ConvertLegacyData(ref fsData data)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x10243CC", Offset = "0x10243CC", VA = "0x10243CC")]
		private static void Invoke_OnBeforeSerialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1024478", Offset = "0x1024478", VA = "0x1024478")]
		private static void Invoke_OnAfterSerialize(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x1024528", Offset = "0x1024528", VA = "0x1024528")]
		private static void Invoke_OnBeforeDeserialize(List<fsObjectProcessor> processors, Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x10245D4", Offset = "0x10245D4", VA = "0x10245D4")]
		private static void Invoke_OnBeforeDeserializeAfterInstanceCreation(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1024690", Offset = "0x1024690", VA = "0x1024690")]
		private static void Invoke_OnAfterDeserialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x10242F8", Offset = "0x10242F8", VA = "0x10242F8")]
		private static void EnsureDictionary(fsData data)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x1024730", Offset = "0x1024730", VA = "0x1024730")]
		private void RemapAbstractStorageTypeToDefaultType(ref Type storageType)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x10248BC", Offset = "0x10248BC", VA = "0x10248BC")]
		public fsSerializer()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x1025CD8", Offset = "0x1025CD8", VA = "0x1025CD8")]
		public void AddProcessor(fsObjectProcessor processor)
		{
		}

		[Token(Token = "0x6001E9E")]
		public void RemoveProcessor<TProcessor>()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x10259A0", Offset = "0x10259A0", VA = "0x10259A0")]
		public void SetDefaultStorageType(Type abstractType, Type defaultStorageType)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1025DD4", Offset = "0x1025DD4", VA = "0x1025DD4")]
		private List<fsObjectProcessor> GetProcessors(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1025A78", Offset = "0x1025A78", VA = "0x1025A78")]
		public void AddConverter(fsBaseConverter converter)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1026110", Offset = "0x1026110", VA = "0x1026110")]
		private fsBaseConverter GetConverter(Type type, Type overrideConverterType)
		{
			return null;
		}

		[Token(Token = "0x6001EA3")]
		public fsResult TrySerialize<T>(T instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA4")]
		public fsResult TryDeserialize<T>(fsData data, ref T instance)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x10265C4", Offset = "0x10265C4", VA = "0x10265C4")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x10265D4", Offset = "0x10265D4", VA = "0x10265D4")]
		public fsResult TrySerialize(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x1026768", Offset = "0x1026768", VA = "0x1026768")]
		private fsResult InternalSerialize_1_ProcessCycles(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1026A84", Offset = "0x1026A84", VA = "0x1026A84")]
		private fsResult InternalSerialize_2_Inheritance(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1027234", Offset = "0x1027234", VA = "0x1027234")]
		private fsResult InternalSerialize_3_ProcessVersioning(Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x1027894", Offset = "0x1027894", VA = "0x1027894")]
		private fsResult InternalSerialize_4_Converter(Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1027900", Offset = "0x1027900", VA = "0x1027900")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x102790C", Offset = "0x102790C", VA = "0x102790C")]
		public fsResult TryDeserialize(fsData data, Type storageType, Type overrideConverterType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1027B24", Offset = "0x1027B24", VA = "0x1027B24")]
		private fsResult InternalDeserialize_1_CycleReference(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1027DD0", Offset = "0x1027DD0", VA = "0x1027DD0")]
		private fsResult InternalDeserialize_2_Version(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x10285E4", Offset = "0x10285E4", VA = "0x10285E4")]
		private fsResult InternalDeserialize_3_Inheritance(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x1028C38", Offset = "0x1028C38", VA = "0x1028C38")]
		private fsResult InternalDeserialize_4_Cycles(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1028D50", Offset = "0x1028D50", VA = "0x1028D50")]
		private fsResult InternalDeserialize_5_Converter(Type overrideConverterType, fsData data, Type resultType, ref object result)
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x200050E")]
	public static class fsTypeExtensions
	{
		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x1028EC8", Offset = "0x1028EC8", VA = "0x1028EC8")]
		public static string CSharpName(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x10294F0", Offset = "0x10294F0", VA = "0x10294F0")]
		public static string CSharpName(this Type type, bool includeNamespace, bool ensureSafeDeclarationName)
		{
			return null;
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1028ED0", Offset = "0x1028ED0", VA = "0x1028ED0")]
		public static string CSharpName(this Type type, bool includeNamespace)
		{
			return null;
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1024874", Offset = "0x1024874", VA = "0x1024874")]
		public static bool IsInterface(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x1024888", Offset = "0x1024888", VA = "0x1024888")]
		public static bool IsAbstract(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x102489C", Offset = "0x102489C", VA = "0x102489C")]
		public static bool IsGenericType(this Type type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000510")]
	public class fsMetaType
	{
		[Token(Token = "0x2000511")]
		public class AotFailureException : Exception
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x102AC20", Offset = "0x102AC20", VA = "0x102AC20")]
			public AotFailureException(string reason)
			{
			}
		}

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<fsConfig, Dictionary<Type, fsMetaType>> _configMetaTypes;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ReflectedType;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool? _hasDefaultConstructorCache;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool? _isDefaultConstructorPublicCache;

		[Token(Token = "0x170003DB")]
		public fsMetaProperty[] Properties
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x102AEB4", Offset = "0x102AEB4", VA = "0x102AEB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x102AEBC", Offset = "0x102AEBC", VA = "0x102AEBC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public bool HasDefaultConstructor
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x102AC88", Offset = "0x102AC88", VA = "0x102AC88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DD")]
		public bool IsDefaultConstructorPublic
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x102B050", Offset = "0x102B050", VA = "0x102B050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x102957C", Offset = "0x102957C", VA = "0x102957C")]
		public static fsMetaType Get(fsConfig config, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1029958", Offset = "0x1029958", VA = "0x1029958")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1029854", Offset = "0x1029854", VA = "0x1029854")]
		private fsMetaType(fsConfig config, Type reflectedType)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1029AF0", Offset = "0x1029AF0", VA = "0x1029AF0")]
		private static void CollectProperties(fsConfig config, List<fsMetaProperty> properties, Type reflectedType)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x102A8B8", Offset = "0x102A8B8", VA = "0x102A8B8")]
		private static bool IsAutoProperty(PropertyInfo property, MemberInfo[] members)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x102A0E8", Offset = "0x102A0E8", VA = "0x102A0E8")]
		private static bool CanSerializeProperty(fsConfig config, PropertyInfo property, MemberInfo[] members, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x102A580", Offset = "0x102A580", VA = "0x102A580")]
		private static bool CanSerializeField(fsConfig config, FieldInfo field, bool annotationFreeValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x102AA08", Offset = "0x102AA08", VA = "0x102AA08")]
		public void EmitAotData(bool throwException)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x102B0B8", Offset = "0x102B0B8", VA = "0x102B0B8")]
		public object CreateInstance()
		{
			return null;
		}
	}
}
namespace FullSerializer.Internal
{
	[Token(Token = "0x2000515")]
	public class fsArrayConverter : fsConverter
	{
		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x102B998", Offset = "0x102B998", VA = "0x102B998", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x102B9B0", Offset = "0x102B9B0", VA = "0x102B9B0", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x102B9B8", Offset = "0x102B9B8", VA = "0x102B9B8", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x102B9C0", Offset = "0x102B9C0", VA = "0x102B9C0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x102BD28", Offset = "0x102BD28", VA = "0x102BD28", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x102BFA0", Offset = "0x102BFA0", VA = "0x102BFA0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1025960", Offset = "0x1025960", VA = "0x1025960")]
		public fsArrayConverter()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class fsDateConverter : fsConverter
	{
		[Token(Token = "0x4001C9D")]
		private const string DefaultDateTimeFormatString = "o";

		[Token(Token = "0x4001C9E")]
		private const string DateTimeOffsetFormatString = "o";

		[Token(Token = "0x170003DE")]
		private string DateTimeFormatString
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x102C014", Offset = "0x102C014", VA = "0x102C014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x102C078", Offset = "0x102C078", VA = "0x102C078", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x102C1A4", Offset = "0x102C1A4", VA = "0x102C1A4", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x102C3A4", Offset = "0x102C3A4", VA = "0x102C3A4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x1025948", Offset = "0x1025948", VA = "0x1025948")]
		public fsDateConverter()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class fsDictionaryConverter : fsConverter
	{
		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x102C974", Offset = "0x102C974", VA = "0x102C974", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x102CA08", Offset = "0x102CA08", VA = "0x102CA08", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x102CA7C", Offset = "0x102CA7C", VA = "0x102CA7C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x102D5C0", Offset = "0x102D5C0", VA = "0x102D5C0", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x102D258", Offset = "0x102D258", VA = "0x102D258")]
		private fsResult AddItemToDictionary(IDictionary dictionary, object key, object value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x102D0FC", Offset = "0x102D0FC", VA = "0x102D0FC")]
		private static void GetKeyValueTypes(Type dictionaryType, out Type keyStorageType, out Type valueStorageType)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1025968", Offset = "0x1025968", VA = "0x1025968")]
		public fsDictionaryConverter()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class fsEnumConverter : fsConverter
	{
		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x102E1D4", Offset = "0x102E1D4", VA = "0x102E1D4", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x102E23C", Offset = "0x102E23C", VA = "0x102E23C", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x102E244", Offset = "0x102E244", VA = "0x102E244", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x102E24C", Offset = "0x102E24C", VA = "0x102E24C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x102E2E0", Offset = "0x102E2E0", VA = "0x102E2E0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x102E7E8", Offset = "0x102E7E8", VA = "0x102E7E8", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EF0")]
		private static bool ArrayContains<T>(T[] values, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1025950", Offset = "0x1025950", VA = "0x1025950")]
		public fsEnumConverter()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class fsForwardConverter : fsConverter
	{
		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _memberName;

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x102658C", Offset = "0x102658C", VA = "0x102658C")]
		public fsForwardConverter(fsForwardAttribute attribute)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x102EC14", Offset = "0x102EC14", VA = "0x102EC14", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x102EC64", Offset = "0x102EC64", VA = "0x102EC64")]
		private fsResult GetProperty(object instance, out fsMetaProperty property)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x102EE34", Offset = "0x102EE34", VA = "0x102EE34", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x102F0B4", Offset = "0x102F0B4", VA = "0x102F0B4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x102F3E4", Offset = "0x102F3E4", VA = "0x102F3E4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}
	}
	[Token(Token = "0x200051A")]
	public class fsGuidConverter : fsConverter
	{
		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x102F458", Offset = "0x102F458", VA = "0x102F458", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x102F4E0", Offset = "0x102F4E0", VA = "0x102F4E0", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x102F4E8", Offset = "0x102F4E8", VA = "0x102F4E8", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x102F4F0", Offset = "0x102F4F0", VA = "0x102F4F0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x102F604", Offset = "0x102F604", VA = "0x102F604", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x102F714", Offset = "0x102F714", VA = "0x102F714", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1025938", Offset = "0x1025938", VA = "0x1025938")]
		public fsGuidConverter()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class fsIEnumerableConverter : fsConverter
	{
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x102F768", Offset = "0x102F768", VA = "0x102F768", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x102F9B8", Offset = "0x102F9B8", VA = "0x102F9B8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x102FA2C", Offset = "0x102FA2C", VA = "0x102FA2C", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1030130", Offset = "0x1030130", VA = "0x1030130")]
		private bool IsStack(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1030230", Offset = "0x1030230", VA = "0x1030230", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1030030", Offset = "0x1030030", VA = "0x1030030")]
		private static int HintSize(IEnumerable collection)
		{
			return default(int);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x102FF00", Offset = "0x102FF00", VA = "0x102FF00")]
		private static Type GetElementType(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x10306B8", Offset = "0x10306B8", VA = "0x10306B8")]
		private static void TryClear(Type type, object instance)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1030770", Offset = "0x1030770", VA = "0x1030770")]
		private static int TryGetExistingSize(Type type, object instance)
		{
			return default(int);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x102F828", Offset = "0x102F828", VA = "0x102F828")]
		private static MethodInfo GetAddMethod(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1025970", Offset = "0x1025970", VA = "0x1025970")]
		public fsIEnumerableConverter()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class fsKeyValuePairConverter : fsConverter
	{
		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1030A94", Offset = "0x1030A94", VA = "0x1030A94", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x1030B84", Offset = "0x1030B84", VA = "0x1030B84", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x1030B8C", Offset = "0x1030B8C", VA = "0x1030B8C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x1030B94", Offset = "0x1030B94", VA = "0x1030B94", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1030E6C", Offset = "0x1030E6C", VA = "0x1030E6C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1025978", Offset = "0x1025978", VA = "0x1025978")]
		public fsKeyValuePairConverter()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class fsNullableConverter : fsConverter
	{
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x103120C", Offset = "0x103120C", VA = "0x103120C", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x10312FC", Offset = "0x10312FC", VA = "0x10312FC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x1031344", Offset = "0x1031344", VA = "0x1031344", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x103138C", Offset = "0x103138C", VA = "0x103138C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x1025930", Offset = "0x1025930", VA = "0x1025930")]
		public fsNullableConverter()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class fsPrimitiveConverter : fsConverter
	{
		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x1031394", Offset = "0x1031394", VA = "0x1031394", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x10314A8", Offset = "0x10314A8", VA = "0x10314A8", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x10314B0", Offset = "0x10314B0", VA = "0x10314B0", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x10314B8", Offset = "0x10314B8", VA = "0x10314B8")]
		private static bool UseBool(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1031540", Offset = "0x1031540", VA = "0x1031540")]
		private static bool UseInt64(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x10317D4", Offset = "0x10317D4", VA = "0x10317D4")]
		private static bool UseDouble(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1031900", Offset = "0x1031900", VA = "0x1031900")]
		private static bool UseString(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x10319E4", Offset = "0x10319E4", VA = "0x10319E4", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x10320D4", Offset = "0x10320D4", VA = "0x10320D4", Slot = "8")]
		public override fsResult TryDeserialize(fsData storage, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1025958", Offset = "0x1025958", VA = "0x1025958")]
		public fsPrimitiveConverter()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class fsReflectedConverter : fsConverter
	{
		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1032708", Offset = "0x1032708", VA = "0x1032708", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x10327E0", Offset = "0x10327E0", VA = "0x10327E0", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x10329E8", Offset = "0x10329E8", VA = "0x10329E8", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1032BF4", Offset = "0x1032BF4", VA = "0x1032BF4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1025988", Offset = "0x1025988", VA = "0x1025988")]
		public fsReflectedConverter()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class fsTypeConverter : fsConverter
	{
		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1032C68", Offset = "0x1032C68", VA = "0x1032C68", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x1032CFC", Offset = "0x1032CFC", VA = "0x1032CFC", Slot = "5")]
		public override bool RequestCycleSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x1032D04", Offset = "0x1032D04", VA = "0x1032D04", Slot = "6")]
		public override bool RequestInheritanceSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1032D0C", Offset = "0x1032D0C", VA = "0x1032D0C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x1032E1C", Offset = "0x1032E1C", VA = "0x1032E1C", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x1032F78", Offset = "0x1032F78", VA = "0x1032F78", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1025940", Offset = "0x1025940", VA = "0x1025940")]
		public fsTypeConverter()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class fsWeakReferenceConverter : fsConverter
	{
		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x1032F80", Offset = "0x1032F80", VA = "0x1032F80", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x1033008", Offset = "0x1033008", VA = "0x1033008", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x1033010", Offset = "0x1033010", VA = "0x1033010", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x1033018", Offset = "0x1033018", VA = "0x1033018", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1033284", Offset = "0x1033284", VA = "0x1033284", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x1033568", Offset = "0x1033568", VA = "0x1033568", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1025980", Offset = "0x1025980", VA = "0x1025980")]
		public fsWeakReferenceConverter()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class fsSerializationCallbackProcessor : fsObjectProcessor
	{
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x10335C8", Offset = "0x10335C8", VA = "0x10335C8", Slot = "4")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x103365C", Offset = "0x103365C", VA = "0x103365C", Slot = "5")]
		public override void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1033758", Offset = "0x1033758", VA = "0x1033758", Slot = "6")]
		public override void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1033860", Offset = "0x1033860", VA = "0x1033860", Slot = "8")]
		public override void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x1033A58", Offset = "0x1033A58", VA = "0x1033A58", Slot = "9")]
		public override void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x1025990", Offset = "0x1025990", VA = "0x1025990")]
		public fsSerializationCallbackProcessor()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class fsSerializationCallbackReceiverProcessor : fsObjectProcessor
	{
		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1033B58", Offset = "0x1033B58", VA = "0x1033B58", Slot = "4")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1033BEC", Offset = "0x1033BEC", VA = "0x1033BEC", Slot = "5")]
		public override void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x1033CD4", Offset = "0x1033CD4", VA = "0x1033CD4", Slot = "9")]
		public override void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x1025998", Offset = "0x1025998", VA = "0x1025998")]
		public fsSerializationCallbackReceiverProcessor()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class fsCyclicReferenceManager
	{
		[Token(Token = "0x2000525")]
		private class ObjectReferenceEqualityComparator : IEqualityComparer<object>
		{
			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IEqualityComparer<object> Instance;

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x1033F48", Offset = "0x1033F48", VA = "0x1033F48", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Object>.Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x1033F54", Offset = "0x1033F54", VA = "0x1033F54", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x1033F60", Offset = "0x1033F60", VA = "0x1033F60")]
			public ObjectReferenceEqualityComparator()
			{
			}
		}

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<object, int> _objectIds;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _nextId;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, object> _marked;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _depth;

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1026A74", Offset = "0x1026A74", VA = "0x1026A74")]
		public void Enter()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1033DC0", Offset = "0x1033DC0", VA = "0x1033DC0")]
		public bool Exit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1027CBC", Offset = "0x1027CBC", VA = "0x1027CBC")]
		public object GetReferenceObject(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1028B78", Offset = "0x1028B78", VA = "0x1028B78")]
		public void AddReferenceWithId(int id, object reference)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1026CBC", Offset = "0x1026CBC", VA = "0x1026CBC")]
		public int GetReferenceId(object item)
		{
			return default(int);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1026C54", Offset = "0x1026C54", VA = "0x1026C54")]
		public bool IsReference(object item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1026F94", Offset = "0x1026F94", VA = "0x1026F94")]
		public void MarkSerialized(object item)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1025744", Offset = "0x1025744", VA = "0x1025744")]
		public fsCyclicReferenceManager()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public struct fsOption<T>
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasValue;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static fsOption<T> Empty;

		[Token(Token = "0x170003DF")]
		public bool HasValue
		{
			[Token(Token = "0x6001F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E0")]
		public bool IsEmpty
		{
			[Token(Token = "0x6001F49")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E1")]
		public T Value
		{
			[Token(Token = "0x6001F4A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001F4B")]
		public fsOption(T value)
		{
		}
	}
	[Token(Token = "0x2000527")]
	public static class fsOption
	{
		[Token(Token = "0x6001F4C")]
		public static fsOption<T> Just<T>(T value)
		{
			return default(fsOption<T>);
		}
	}
	[Token(Token = "0x2000528")]
	public static class fsPortableReflection
	{
		[Token(Token = "0x2000529")]
		private struct AttributeQuery
		{
			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MemberInfo MemberInfo;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type AttributeType;
		}

		[Token(Token = "0x200052A")]
		private class AttributeQueryComparator : IEqualityComparer<AttributeQuery>
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x1034A08", Offset = "0x1034A08", VA = "0x1034A08", Slot = "4")]
			public bool Equals(AttributeQuery x, AttributeQuery y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x1034AA0", Offset = "0x1034AA0", VA = "0x1034AA0", Slot = "5")]
			public int GetHashCode(AttributeQuery obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x1034A00", Offset = "0x1034A00", VA = "0x1034A00")]
			public AttributeQueryComparator()
			{
			}
		}

		[Token(Token = "0x200052B")]
		[CompilerGenerated]
		private sealed class <GetFlattenedMethods>d__18 : IEnumerable<MethodInfo>, IEnumerable, IEnumerator<MethodInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MethodInfo <>2__current;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Type type;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Type <>3__type;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string methodName;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string <>3__methodName;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private MethodInfo[] <methods>5__2;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__3;

			[Token(Token = "0x170003E2")]
			private MethodInfo System.Collections.Generic.IEnumerator<System.Reflection.MethodInfo>.Current
			{
				[Token(Token = "0x6001F6C")]
				[Address(RVA = "0x1034CC0", Offset = "0x1034CC0", VA = "0x1034CC0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F6E")]
				[Address(RVA = "0x1034D08", Offset = "0x1034D08", VA = "0x1034D08", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x103466C", Offset = "0x103466C", VA = "0x103466C")]
			[DebuggerHidden]
			public <GetFlattenedMethods>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x1034AF0", Offset = "0x1034AF0", VA = "0x1034AF0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x1034AF4", Offset = "0x1034AF4", VA = "0x1034AF4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x1034CC8", Offset = "0x1034CC8", VA = "0x1034CC8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x1034D10", Offset = "0x1034D10", VA = "0x1034D10", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MethodInfo> System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x1034DCC", Offset = "0x1034DCC", VA = "0x1034DCC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<AttributeQuery, Attribute> _cachedAttributeQueries;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BindingFlags DeclaredFlags;

		[Token(Token = "0x6001F4D")]
		public static bool HasAttribute<TAttribute>(MemberInfo element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		public static bool HasAttribute<TAttribute>(MemberInfo element, bool shouldCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x102B680", Offset = "0x102B680", VA = "0x102B680")]
		public static bool HasAttribute(MemberInfo element, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x102A9D8", Offset = "0x102A9D8", VA = "0x102A9D8")]
		public static bool HasAttribute(MemberInfo element, Type attributeType, bool shouldCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1033FD8", Offset = "0x1033FD8", VA = "0x1033FD8")]
		public static Attribute GetAttribute(MemberInfo element, Type attributeType, bool shouldCache)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element, bool shouldCache) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001F53")]
		public static TAttribute GetAttribute<TAttribute>(MemberInfo element) where TAttribute : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1031130", Offset = "0x1031130", VA = "0x1031130")]
		public static PropertyInfo GetDeclaredProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x10309B8", Offset = "0x10309B8", VA = "0x10309B8")]
		public static MethodInfo GetDeclaredMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x102AEC4", Offset = "0x102AEC4", VA = "0x102AEC4")]
		public static ConstructorInfo GetDeclaredConstructor(this Type type, Type[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x103433C", Offset = "0x103433C", VA = "0x103433C")]
		public static ConstructorInfo[] GetDeclaredConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x10343B0", Offset = "0x10343B0", VA = "0x10343B0")]
		public static MemberInfo[] GetFlattenedMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x102E088", Offset = "0x102E088", VA = "0x102E088")]
		public static MethodInfo GetFlattenedMethod(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x10345CC", Offset = "0x10345CC", VA = "0x10345CC")]
		[IteratorStateMachine(typeof(<GetFlattenedMethods>d__18))]
		public static IEnumerable<MethodInfo> GetFlattenedMethods(this Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x103086C", Offset = "0x103086C", VA = "0x103086C")]
		public static PropertyInfo GetFlattenedProperty(this Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x10346A0", Offset = "0x10346A0", VA = "0x10346A0")]
		public static MemberInfo GetDeclaredMember(this Type type, string memberName)
		{
			return null;
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x10342C8", Offset = "0x10342C8", VA = "0x10342C8")]
		public static MethodInfo[] GetDeclaredMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x1034254", Offset = "0x1034254", VA = "0x1034254")]
		public static PropertyInfo[] GetDeclaredProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x103477C", Offset = "0x103477C", VA = "0x103477C")]
		public static FieldInfo[] GetDeclaredFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x102A06C", Offset = "0x102A06C", VA = "0x102A06C")]
		public static MemberInfo[] GetDeclaredMembers(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x10347F0", Offset = "0x10347F0", VA = "0x10347F0")]
		public static MemberInfo AsMemberInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x10347F4", Offset = "0x10347F4", VA = "0x10347F4")]
		public static bool IsType(MemberInfo member)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x103486C", Offset = "0x103486C", VA = "0x103486C")]
		public static Type AsType(MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x102A8B4", Offset = "0x102A8B4", VA = "0x102A8B4")]
		public static Type Resolve(this Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200052C")]
	public struct fsVersionedType
	{
		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public fsVersionedType[] Ancestors;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string VersionString;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type ModelType;

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1028AC4", Offset = "0x1028AC4", VA = "0x1028AC4")]
		public object Migrate(object ancestorInstance)
		{
			return null;
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1034DD0", Offset = "0x1034DD0", VA = "0x1034DD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x10350A4", Offset = "0x10350A4", VA = "0x10350A4")]
		public static bool operator ==(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x1035114", Offset = "0x1035114", VA = "0x1035114")]
		public static bool operator !=(fsVersionedType a, fsVersionedType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x1035184", Offset = "0x1035184", VA = "0x1035184", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1035230", Offset = "0x1035230", VA = "0x1035230", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200052D")]
	public static class fsVersionManager
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, fsOption<fsVersionedType>> _cache;

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x102821C", Offset = "0x102821C", VA = "0x102821C")]
		public static fsResult GetVersionImportPath(string currentVersion, fsVersionedType targetVersion, out List<fsVersionedType> path)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1035250", Offset = "0x1035250", VA = "0x1035250")]
		private static bool GetVersionImportPathRecursive(List<fsVersionedType> path, string currentVersion, fsVersionedType current)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1027410", Offset = "0x1027410", VA = "0x1027410")]
		public static fsOption<fsVersionedType> GetVersionedType(Type type)
		{
			return default(fsOption<fsVersionedType>);
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x10356CC", Offset = "0x10356CC", VA = "0x10356CC")]
		private static void VerifyConstructors(fsVersionedType type)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x10353E0", Offset = "0x10353E0", VA = "0x10353E0")]
		private static void VerifyUniqueVersionStrings(fsVersionedType type)
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class fsMetaProperty
	{
		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemberInfo _memberInfo;

		[Token(Token = "0x170003E4")]
		public Type StorageType
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x1035A18", Offset = "0x1035A18", VA = "0x1035A18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x1035A20", Offset = "0x1035A20", VA = "0x1035A20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public Type OverrideConverterType
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x1035A28", Offset = "0x1035A28", VA = "0x1035A28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x1035A30", Offset = "0x1035A30", VA = "0x1035A30")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public bool CanRead
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x1035A38", Offset = "0x1035A38", VA = "0x1035A38")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x1035A40", Offset = "0x1035A40", VA = "0x1035A40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public bool CanWrite
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x1035A4C", Offset = "0x1035A4C", VA = "0x1035A4C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x1035A54", Offset = "0x1035A54", VA = "0x1035A54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public string JsonName
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x1035A60", Offset = "0x1035A60", VA = "0x1035A60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x1035A68", Offset = "0x1035A68", VA = "0x1035A68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public string MemberName
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x1035A70", Offset = "0x1035A70", VA = "0x1035A70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x1035A78", Offset = "0x1035A78", VA = "0x1035A78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public bool IsPublic
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x1035A80", Offset = "0x1035A80", VA = "0x1035A80")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x1035A88", Offset = "0x1035A88", VA = "0x1035A88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x1035A94", Offset = "0x1035A94", VA = "0x1035A94")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x1035A9C", Offset = "0x1035A9C", VA = "0x1035A9C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x102A7F8", Offset = "0x102A7F8", VA = "0x102A7F8")]
		internal fsMetaProperty(fsConfig config, FieldInfo field)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x102A43C", Offset = "0x102A43C", VA = "0x102A43C")]
		internal fsMetaProperty(fsConfig config, PropertyInfo property)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1035918", Offset = "0x1035918", VA = "0x1035918")]
		private void CommonInitialize(fsConfig config)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x102F1F8", Offset = "0x102F1F8", VA = "0x102F1F8")]
		public void Write(object context, object value)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x102EF54", Offset = "0x102EF54", VA = "0x102EF54")]
		public object Read(object context)
		{
			return null;
		}
	}
	[Token(Token = "0x200052F")]
	public static class fsReflectionUtility
	{
		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x102DE40", Offset = "0x102DE40", VA = "0x102DE40")]
		public static Type GetInterface(Type type, Type interfaceType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000530")]
	public static class fsTypeCache
	{
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Type> _cachedTypes;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Assembly> _assembliesByName;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Assembly> _assembliesByIndex;

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1035AA8", Offset = "0x1035AA8", VA = "0x1035AA8")]
		static fsTypeCache()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x1035F1C", Offset = "0x1035F1C", VA = "0x1035F1C")]
		private static void OnAssemblyLoaded(object sender, AssemblyLoadEventArgs args)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x10361B4", Offset = "0x10361B4", VA = "0x10361B4")]
		private static bool TryDirectTypeLookup(string assemblyName, string typeName, out Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x10362DC", Offset = "0x10362DC", VA = "0x10362DC")]
		private static bool TryIndirectTypeLookup(string typeName, out Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1036534", Offset = "0x1036534", VA = "0x1036534")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x1028BE0", Offset = "0x1028BE0", VA = "0x1028BE0")]
		public static Type GetType(string name)
		{
			return null;
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x10365DC", Offset = "0x10365DC", VA = "0x10365DC")]
		public static Type GetType(string name, string assemblyHint)
		{
			return null;
		}
	}
}
namespace FullSerializer.Internal.Converters
{
	[Token(Token = "0x2000531")]
	public class UnityEvent_Converter : fsConverter
	{
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1036824", Offset = "0x1036824", VA = "0x1036824", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1036918", Offset = "0x1036918", VA = "0x1036918", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1036920", Offset = "0x1036920", VA = "0x1036920", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1036A08", Offset = "0x1036A08", VA = "0x1036A08", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1036A9C", Offset = "0x1036A9C", VA = "0x1036A9C")]
		public UnityEvent_Converter()
		{
		}
	}
}
namespace FullSerializer.Internal.DirectConverters
{
	[Token(Token = "0x2000532")]
	public class AnimationCurve_DirectConverter : fsDirectConverter<AnimationCurve>
	{
		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1036AA4", Offset = "0x1036AA4", VA = "0x1036AA4", Slot = "10")]
		protected override fsResult DoSerialize(AnimationCurve model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1036C78", Offset = "0x1036C78", VA = "0x1036C78", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref AnimationCurve model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1036EA4", Offset = "0x1036EA4", VA = "0x1036EA4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1036F00", Offset = "0x1036F00", VA = "0x1036F00")]
		public AnimationCurve_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class Bounds_DirectConverter : fsDirectConverter<Bounds>
	{
		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1036F48", Offset = "0x1036F48", VA = "0x1036F48", Slot = "10")]
		protected override fsResult DoSerialize(Bounds model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1037090", Offset = "0x1037090", VA = "0x1037090", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Bounds model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1037238", Offset = "0x1037238", VA = "0x1037238", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1037290", Offset = "0x1037290", VA = "0x1037290")]
		public Bounds_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class Gradient_DirectConverter : fsDirectConverter<Gradient>
	{
		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x10372D8", Offset = "0x10372D8", VA = "0x10372D8", Slot = "10")]
		protected override fsResult DoSerialize(Gradient model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1037444", Offset = "0x1037444", VA = "0x1037444", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Gradient model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x10375F4", Offset = "0x10375F4", VA = "0x10375F4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1037650", Offset = "0x1037650", VA = "0x1037650")]
		public Gradient_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class GUIStyleState_DirectConverter : fsDirectConverter<GUIStyleState>
	{
		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1037698", Offset = "0x1037698", VA = "0x1037698", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyleState model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1037800", Offset = "0x1037800", VA = "0x1037800", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyleState model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x10379BC", Offset = "0x10379BC", VA = "0x10379BC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1037A18", Offset = "0x1037A18", VA = "0x1037A18")]
		public GUIStyleState_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class GUIStyle_DirectConverter : fsDirectConverter<GUIStyle>
	{
		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1037A60", Offset = "0x1037A60", VA = "0x1037A60", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyle model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1038590", Offset = "0x1038590", VA = "0x1038590", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyle model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1039408", Offset = "0x1039408", VA = "0x1039408", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1039464", Offset = "0x1039464", VA = "0x1039464")]
		public GUIStyle_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class Keyframe_DirectConverter : fsDirectConverter<Keyframe>
	{
		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x10394AC", Offset = "0x10394AC", VA = "0x10394AC", Slot = "10")]
		protected override fsResult DoSerialize(Keyframe model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1039728", Offset = "0x1039728", VA = "0x1039728", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Keyframe model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1039A38", Offset = "0x1039A38", VA = "0x1039A38", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1039A94", Offset = "0x1039A94", VA = "0x1039A94")]
		public Keyframe_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class LayerMask_DirectConverter : fsDirectConverter<LayerMask>
	{
		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1039ADC", Offset = "0x1039ADC", VA = "0x1039ADC", Slot = "10")]
		protected override fsResult DoSerialize(LayerMask model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1039BC4", Offset = "0x1039BC4", VA = "0x1039BC4", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref LayerMask model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1039CD8", Offset = "0x1039CD8", VA = "0x1039CD8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1039D24", Offset = "0x1039D24", VA = "0x1039D24")]
		public LayerMask_DirectConverter()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class RectOffset_DirectConverter : fsDirectConverter<RectOffset>
	{
		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x1039D6C", Offset = "0x1039D6C", VA = "0x1039D6C", Slot = "10")]
		protected override fsResult DoSerialize(RectOffset model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1039F8C", Offset = "0x1039F8C", VA = "0x1039F8C", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref RectOffset model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x103A224", Offset = "0x103A224", VA = "0x103A224", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x103A280", Offset = "0x103A280", VA = "0x103A280")]
		public RectOffset_DirectConverter()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class Rect_DirectConverter : fsDirectConverter<Rect>
	{
		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x103A2C8", Offset = "0x103A2C8", VA = "0x103A2C8", Slot = "10")]
		protected override fsResult DoSerialize(Rect model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x103A4CC", Offset = "0x103A4CC", VA = "0x103A4CC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Rect model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x103A74C", Offset = "0x103A74C", VA = "0x103A74C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x103A7A0", Offset = "0x103A7A0", VA = "0x103A7A0")]
		public Rect_DirectConverter()
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x200053B")]
	public static class DMath
	{
		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x103A7E8", Offset = "0x103A7E8", VA = "0x103A7E8")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x103A844", Offset = "0x103A844", VA = "0x103A844")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x103A8A0", Offset = "0x103A8A0", VA = "0x103A8A0")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x103A8FC", Offset = "0x103A8FC", VA = "0x103A8FC")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x103A964", Offset = "0x103A964", VA = "0x103A964")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x103A9CC", Offset = "0x103A9CC", VA = "0x103A9CC")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x103AA28", Offset = "0x103AA28", VA = "0x103AA28")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x103AA48", Offset = "0x103AA48", VA = "0x103AA48")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x103AA64", Offset = "0x103AA64", VA = "0x103AA64")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x103AA88", Offset = "0x103AA88", VA = "0x103AA88")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x103AABC", Offset = "0x103AABC", VA = "0x103AABC")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x103AB1C", Offset = "0x103AB1C", VA = "0x103AB1C")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x103ABE4", Offset = "0x103ABE4", VA = "0x103ABE4")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x103ACC4", Offset = "0x103ACC4", VA = "0x103ACC4")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x103AD20", Offset = "0x103AD20", VA = "0x103AD20")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x103AD94", Offset = "0x103AD94", VA = "0x103AD94")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x103ADF0", Offset = "0x103ADF0", VA = "0x103ADF0")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x103AE64", Offset = "0x103AE64", VA = "0x103AE64")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x103AE94", Offset = "0x103AE94", VA = "0x103AE94")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200053C")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x103AEA4", Offset = "0x103AEA4", VA = "0x103AEA4")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x103B03C", Offset = "0x103B03C", VA = "0x103B03C")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200053D")]
	public class MeshUtility
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x103B090", Offset = "0x103B090", VA = "0x103B090")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x103B150", Offset = "0x103B150", VA = "0x103B150")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x103B3DC", Offset = "0x103B3DC", VA = "0x103B3DC")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x103BA5C", Offset = "0x103BA5C", VA = "0x103BA5C")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x103C3D8", Offset = "0x103C3D8", VA = "0x103C3D8")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x103CC6C", Offset = "0x103CC6C", VA = "0x103CC6C")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x103D184", Offset = "0x103D184", VA = "0x103D184")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x103D268", Offset = "0x103D268", VA = "0x103D268")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x103D34C", Offset = "0x103D34C", VA = "0x103D34C")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x103D430", Offset = "0x103D430", VA = "0x103D430")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x103D514", Offset = "0x103D514", VA = "0x103D514")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x103D664", Offset = "0x103D664", VA = "0x103D664")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x103D7F0", Offset = "0x103D7F0", VA = "0x103D7F0")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x103D878", Offset = "0x103D878", VA = "0x103D878")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x103D900", Offset = "0x103D900", VA = "0x103D900")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x103D988", Offset = "0x103D988", VA = "0x103D988")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x103DA10", Offset = "0x103DA10", VA = "0x103DA10")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x103E39C", Offset = "0x103E39C", VA = "0x103E39C")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x103E588", Offset = "0x103E588", VA = "0x103E588")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x103ECEC", Offset = "0x103ECEC", VA = "0x103ECEC")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x103ED58", Offset = "0x103ED58", VA = "0x103ED58")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x103EE90", Offset = "0x103EE90", VA = "0x103EE90")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x103EA6C", Offset = "0x103EA6C", VA = "0x103EA6C")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x103EAF8", Offset = "0x103EAF8", VA = "0x103EAF8")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x103F890", Offset = "0x103F890", VA = "0x103F890")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x103F90C", Offset = "0x103F90C", VA = "0x103F90C")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public static class ResourceUtility
	{
		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x10409AC", Offset = "0x10409AC", VA = "0x10409AC")]
		public static string FindFolder(string dir, string folderPattern)
		{
			return null;
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1040D7C", Offset = "0x1040D7C", VA = "0x1040D7C")]
		public static Texture2D LoadTexture(string dreamteckPath, string textureFileName)
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1040EFC", Offset = "0x1040EFC", VA = "0x1040EFC")]
		public static Texture2D LoadTexture(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x200053F")]
	public static class SceneUtility
	{
		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1040FF4", Offset = "0x1040FF4", VA = "0x1040FF4")]
		public static void GetChildrenRecursively(Transform current, ref List<Transform> transformList)
		{
		}
	}
	[Token(Token = "0x2000540")]
	public static class TransformUtility
	{
		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1041340", Offset = "0x1041340", VA = "0x1041340")]
		public static Vector3 GetPosition(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x104134C", Offset = "0x104134C", VA = "0x104134C")]
		public static Quaternion GetRotation(ref Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x10413B0", Offset = "0x10413B0", VA = "0x10413B0")]
		public static Vector3 GetScale(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1041544", Offset = "0x1041544", VA = "0x1041544")]
		public static void SetPosition(ref Matrix4x4 m, ref Vector3 p)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x104155C", Offset = "0x104155C", VA = "0x104155C")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public class TS_Bounds
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1041834", Offset = "0x1041834", VA = "0x1041834")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x10418E4", Offset = "0x10418E4", VA = "0x10418E4")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1041A00", Offset = "0x1041A00", VA = "0x1041A00")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1041B2C", Offset = "0x1041B2C", VA = "0x1041B2C")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1041C64", Offset = "0x1041C64", VA = "0x1041C64")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1041CB0", Offset = "0x1041CB0", VA = "0x1041CB0")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000542")]
	public class TS_Mesh
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool hasUpdate;

		[Token(Token = "0x170003EC")]
		public int vertexCount
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x1041D04", Offset = "0x1041D04", VA = "0x1041D04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x1041D20", Offset = "0x1041D20", VA = "0x1041D20")]
			set
			{
			}
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1041D24", Offset = "0x1041D24", VA = "0x1041D24")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1041FBC", Offset = "0x1041FBC", VA = "0x1041FBC")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x10424CC", Offset = "0x10424CC", VA = "0x10424CC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1042264", Offset = "0x1042264", VA = "0x1042264")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1042758", Offset = "0x1042758", VA = "0x1042758")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1043A54", Offset = "0x1043A54", VA = "0x1043A54")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x10441E4", Offset = "0x10441E4", VA = "0x10441E4")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x10446FC", Offset = "0x10446FC", VA = "0x10446FC")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1044DEC", Offset = "0x1044DEC", VA = "0x1044DEC")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000543")]
	public class TS_Transform
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private float scaleY;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		private float lossyScaleY;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[SerializeField]
		private float rotX;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private float rotY;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		[SerializeField]
		private float rotZ;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		private float rotW;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private float lrotX;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x170003ED")]
		public Vector3 position
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x10450D0", Offset = "0x10450D0", VA = "0x10450D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x1045114", Offset = "0x1045114", VA = "0x1045114")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public Quaternion rotation
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x1045164", Offset = "0x1045164", VA = "0x1045164")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x10451B4", Offset = "0x10451B4", VA = "0x10451B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public Vector3 scale
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x1045210", Offset = "0x1045210", VA = "0x1045210")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x1045254", Offset = "0x1045254", VA = "0x1045254")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x10452A0", Offset = "0x10452A0", VA = "0x10452A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x10452E4", Offset = "0x10452E4", VA = "0x10452E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x1045330", Offset = "0x1045330", VA = "0x1045330")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x1045374", Offset = "0x1045374", VA = "0x1045374")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x10453C4", Offset = "0x10453C4", VA = "0x10453C4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x1045414", Offset = "0x1045414", VA = "0x1045414")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public Transform transform
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x1045470", Offset = "0x1045470", VA = "0x1045470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1045478", Offset = "0x1045478", VA = "0x1045478")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1045514", Offset = "0x1045514", VA = "0x1045514")]
		public void Update()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x10454F0", Offset = "0x10454F0", VA = "0x10454F0")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x10456E4", Offset = "0x10456E4", VA = "0x10456E4")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1045718", Offset = "0x1045718", VA = "0x1045718")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x104579C", Offset = "0x104579C", VA = "0x104579C")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1045840", Offset = "0x1045840", VA = "0x1045840")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x10458C4", Offset = "0x10458C4", VA = "0x10458C4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1045958", Offset = "0x1045958", VA = "0x1045958")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x104599C", Offset = "0x104599C", VA = "0x104599C")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x10459DC", Offset = "0x10459DC", VA = "0x10459DC")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002025")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x2000544")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1045A60", Offset = "0x1045A60", VA = "0x1045A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1045A64", Offset = "0x1045A64", VA = "0x1045A64", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1045A6C", Offset = "0x1045A6C", VA = "0x1045A6C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1045A74", Offset = "0x1045A74", VA = "0x1045A74", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1045A7C", Offset = "0x1045A7C", VA = "0x1045A7C")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x2000545")]
	[AddComponentMenu("Dreamteck/Splines/Edge Collider Generator")]
	[RequireComponent(typeof(EdgeCollider2D))]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool updateCollider;

		[Token(Token = "0x170003F4")]
		public float offset
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x1045A84", Offset = "0x1045A84", VA = "0x1045A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x1045A8C", Offset = "0x1045A8C", VA = "0x1045A8C")]
			set
			{
			}
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x1045AB0", Offset = "0x1045AB0", VA = "0x1045AB0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1045B14", Offset = "0x1045B14", VA = "0x1045B14", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1045B1C", Offset = "0x1045B1C", VA = "0x1045B1C", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1045B24", Offset = "0x1045B24", VA = "0x1045B24", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1045B2C", Offset = "0x1045B2C", VA = "0x1045B2C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1045B34", Offset = "0x1045B34", VA = "0x1045B34", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1045BF8", Offset = "0x1045BF8", VA = "0x1045BF8", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1045EBC", Offset = "0x1045EBC", VA = "0x1045EBC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1045FF0", Offset = "0x1045FF0", VA = "0x1045FF0")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[RequireComponent(typeof(MeshRenderer))]
	[AddComponentMenu("Dreamteck/Splines/Extrude Mesh")]
	[RequireComponent(typeof(MeshFilter))]
	public class ExtrudeMesh : MeshGenerator
	{
		[Token(Token = "0x2000547")]
		public enum Axis
		{
			[Token(Token = "0x4001D10")]
			X,
			[Token(Token = "0x4001D11")]
			Y,
			[Token(Token = "0x4001D12")]
			Z
		}

		[Token(Token = "0x2000548")]
		public enum Iteration
		{
			[Token(Token = "0x4001D14")]
			Ordered,
			[Token(Token = "0x4001D15")]
			Random
		}

		[Token(Token = "0x2000549")]
		public enum MirrorMethod
		{
			[Token(Token = "0x4001D17")]
			None,
			[Token(Token = "0x4001D18")]
			X,
			[Token(Token = "0x4001D19")]
			Y,
			[Token(Token = "0x4001D1A")]
			Z
		}

		[Token(Token = "0x200054A")]
		public enum TileUVs
		{
			[Token(Token = "0x4001D1C")]
			None,
			[Token(Token = "0x4001D1D")]
			U,
			[Token(Token = "0x4001D1E")]
			V,
			[Token(Token = "0x4001D1F")]
			UniformU,
			[Token(Token = "0x4001D20")]
			UniformV
		}

		[Serializable]
		[Token(Token = "0x200054B")]
		internal class ExtrudableMesh
		{
			[Serializable]
			[Token(Token = "0x200054C")]
			public class VertexGroup
			{
				[Token(Token = "0x4001D2B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float value;

				[Token(Token = "0x4001D2C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int[] ids;

				[Token(Token = "0x600206B")]
				[Address(RVA = "0x104B028", Offset = "0x104B028", VA = "0x104B028")]
				public VertexGroup(float val, int[] vertIds)
				{
				}

				[Token(Token = "0x600206C")]
				[Address(RVA = "0x104B068", Offset = "0x104B068", VA = "0x104B068")]
				public void AddId(int id)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200054D")]
			public class Submesh
			{
				[Token(Token = "0x4001D2D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int[] triangles;

				[Token(Token = "0x600206D")]
				[Address(RVA = "0x104B114", Offset = "0x104B114", VA = "0x104B114")]
				public Submesh()
				{
				}

				[Token(Token = "0x600206E")]
				[Address(RVA = "0x104A3FC", Offset = "0x104A3FC", VA = "0x104A3FC")]
				public Submesh(int[] input)
				{
				}
			}

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] colors;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Submesh> subMeshes;

			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TS_Bounds bounds;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<VertexGroup> vertexGroups;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private MirrorMethod _mirror;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			private Axis _axis;

			[Token(Token = "0x170003FE")]
			public MirrorMethod mirror
			{
				[Token(Token = "0x6002062")]
				[Address(RVA = "0x1049900", Offset = "0x1049900", VA = "0x1049900")]
				get
				{
					return default(MirrorMethod);
				}
				[Token(Token = "0x6002063")]
				[Address(RVA = "0x1046D28", Offset = "0x1046D28", VA = "0x1046D28")]
				set
				{
				}
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x1049FD8", Offset = "0x1049FD8", VA = "0x1049FD8")]
			public ExtrudableMesh()
			{
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x10470F0", Offset = "0x10470F0", VA = "0x10470F0")]
			public ExtrudableMesh(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x1049090", Offset = "0x1049090", VA = "0x1049090")]
			public void Update(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x1049908", Offset = "0x1049908", VA = "0x1049908")]
			private void Mirror(MirrorMethod method)
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x104A4A8", Offset = "0x104A4A8", VA = "0x104A4A8")]
			private void GroupVertices(Axis axis)
			{
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0x104AF34", Offset = "0x104AF34", VA = "0x104AF34")]
			private int FindInsertIndex(Vector3 pos, float value)
			{
				return default(int);
			}

			[Token(Token = "0x600206A")]
			[Address(RVA = "0x104A984", Offset = "0x104A984", VA = "0x104A984")]
			private void CalculateTangents()
			{
			}
		}

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		private Mesh _startMesh;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Mesh _endMesh;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private bool _dontStretchCaps;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private TileUVs _tileUVs;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		[SerializeField]
		private Mesh[] _middleMeshes;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private List<ExtrudableMesh> extrudableMeshes;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[HideInInspector]
		[SerializeField]
		private int _repeat;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private double _spacing;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _scale;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private SplineResult lastResult;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool useLastResult;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private System.Random random;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int iterations;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool _hasAnyMesh;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
		private bool _hasStartMesh;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
		private bool _hasEndMesh;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x170003F5")]
		public Axis axis
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0x1046060", Offset = "0x1046060", VA = "0x1046060")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6002037")]
			[Address(RVA = "0x1046068", Offset = "0x1046068", VA = "0x1046068")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public Iteration iteration
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x10463AC", Offset = "0x10463AC", VA = "0x10463AC")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6002039")]
			[Address(RVA = "0x10463B4", Offset = "0x10463B4", VA = "0x10463B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public int randomSeed
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x10463F0", Offset = "0x10463F0", VA = "0x10463F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x10463F8", Offset = "0x10463F8", VA = "0x10463F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public int repeat
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x1046444", Offset = "0x1046444", VA = "0x1046444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x104644C", Offset = "0x104644C", VA = "0x104644C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public bool dontStretchCaps
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x1046784", Offset = "0x1046784", VA = "0x1046784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x104678C", Offset = "0x104678C", VA = "0x104678C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public TileUVs tileUVs
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x10467B4", Offset = "0x10467B4", VA = "0x10467B4")]
			get
			{
				return default(TileUVs);
			}
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x10467BC", Offset = "0x10467BC", VA = "0x10467BC")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public double spacing
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x10467E0", Offset = "0x10467E0", VA = "0x10467E0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x10467E8", Offset = "0x10467E8", VA = "0x10467E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public Vector2 scale
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x1046858", Offset = "0x1046858", VA = "0x1046858")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002045")]
			[Address(RVA = "0x1046864", Offset = "0x1046864", VA = "0x1046864")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public bool hasAnyMesh
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0x10468AC", Offset = "0x10468AC", VA = "0x10468AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x10468B4", Offset = "0x10468B4", VA = "0x10468B4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x1046B34", Offset = "0x1046B34", VA = "0x1046B34")]
		public Mesh GetStartMesh()
		{
			return null;
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1046B3C", Offset = "0x1046B3C", VA = "0x1046B3C")]
		public Mesh GetEndMesh()
		{
			return null;
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1046B44", Offset = "0x1046B44", VA = "0x1046B44")]
		public MirrorMethod GetStartMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1046BD8", Offset = "0x1046BD8", VA = "0x1046BD8")]
		public MirrorMethod GetEndMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1046C70", Offset = "0x1046C70", VA = "0x1046C70")]
		public void SetStartMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1046D70", Offset = "0x1046D70", VA = "0x1046D70")]
		public void SetEndMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1046E2C", Offset = "0x1046E2C", VA = "0x1046E2C")]
		public void SetMeshMirror(int index, MirrorMethod mirror)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1046EFC", Offset = "0x1046EFC", VA = "0x1046EFC")]
		public void SetStartMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1047374", Offset = "0x1047374", VA = "0x1047374")]
		public void SetEndMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x104754C", Offset = "0x104754C", VA = "0x104754C")]
		public Mesh GetMesh(int index)
		{
			return null;
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x104757C", Offset = "0x104757C", VA = "0x104757C")]
		public MirrorMethod GetMeshMirror(int index)
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x10475FC", Offset = "0x10475FC", VA = "0x10475FC")]
		public void SetMesh(int index, Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x104773C", Offset = "0x104773C", VA = "0x104773C")]
		public void RemoveMesh(int index)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x10478F4", Offset = "0x10478F4", VA = "0x10478F4")]
		public void AddMesh(Mesh inputMesh)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1046A18", Offset = "0x1046A18", VA = "0x1046A18")]
		private void CheckMeshes()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1047A44", Offset = "0x1047A44", VA = "0x1047A44")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1047A60", Offset = "0x1047A60", VA = "0x1047A60", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1047AD0", Offset = "0x1047AD0", VA = "0x1047AD0")]
		private void Generate()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1047F4C", Offset = "0x1047F4C", VA = "0x1047F4C")]
		private int GetMeshIndex(int repeatIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x10487A0", Offset = "0x10487A0", VA = "0x10487A0")]
		private void TRS(ExtrudableMesh source, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1048C50", Offset = "0x1048C50", VA = "0x1048C50")]
		private void CreateTSFromExtrudableMesh(ExtrudableMesh source, ref TS_Mesh target)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1048028", Offset = "0x1048028", VA = "0x1048028")]
		private void Stretch(ExtrudableMesh source, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x10460A4", Offset = "0x10460A4", VA = "0x10460A4")]
		private void UpdateExtrudableMeshes()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x10493C0", Offset = "0x10493C0", VA = "0x10493C0")]
		private void UpdateStartExtrudeMesh()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1046490", Offset = "0x1046490", VA = "0x1046490")]
		private void UpdateEndExtrudeMesh()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x1049614", Offset = "0x1049614", VA = "0x1049614")]
		public ExtrudeMesh()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[AddComponentMenu("Dreamteck/Splines/Length Calculator")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x200054F")]
		public class LengthEvent
		{
			[Token(Token = "0x2000550")]
			public enum Type
			{
				[Token(Token = "0x4001D37")]
				Growing,
				[Token(Token = "0x4001D38")]
				Shrinking,
				[Token(Token = "0x4001D39")]
				Both
			}

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineAction action;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x600207C")]
			[Address(RVA = "0x104BB9C", Offset = "0x104BB9C", VA = "0x104BB9C")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x104BC20", Offset = "0x104BC20", VA = "0x104BC20")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0x104B4D4", Offset = "0x104B4D4", VA = "0x104B4D4")]
			public LengthEvent(Type t, SplineAction a)
			{
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x104B2B0", Offset = "0x104B2B0", VA = "0x104B2B0")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _length;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastLength;

		[Token(Token = "0x170003FF")]
		public float length
		{
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x104B178", Offset = "0x104B178", VA = "0x104B178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x104B180", Offset = "0x104B180", VA = "0x104B180", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x104B218", Offset = "0x104B218", VA = "0x104B218", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x104B334", Offset = "0x104B334", VA = "0x104B334")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x104B40C", Offset = "0x104B40C", VA = "0x104B40C")]
		public void AddEvent(LengthEvent.Type t, UnityAction call, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x104B580", Offset = "0x104B580", VA = "0x104B580")]
		public void AddEvent(LengthEvent.Type t, UnityAction<int> call, int value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x104B650", Offset = "0x104B650", VA = "0x104B650")]
		public void AddEvent(LengthEvent.Type t, UnityAction<float> call, float value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x104B720", Offset = "0x104B720", VA = "0x104B720")]
		public void AddEvent(LengthEvent.Type t, UnityAction<double> call, double value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x104B7F0", Offset = "0x104B7F0", VA = "0x104B7F0")]
		public void AddTrigger(LengthEvent.Type t, UnityAction<string> call, string value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x104B8C0", Offset = "0x104B8C0", VA = "0x104B8C0")]
		public void AddEvent(LengthEvent.Type t, UnityAction<bool> call, bool value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x104B990", Offset = "0x104B990", VA = "0x104B990")]
		public void AddEvent(LengthEvent.Type t, UnityAction<GameObject> call, GameObject value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x104BA60", Offset = "0x104BA60", VA = "0x104BA60")]
		public void AddEvent(LengthEvent.Type t, UnityAction<Transform> call, Transform value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x104BB30", Offset = "0x104BB30", VA = "0x104BB30")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x2000552")]
		public enum UVMode
		{
			[Token(Token = "0x4001D52")]
			Clip,
			[Token(Token = "0x4001D53")]
			UniformClip,
			[Token(Token = "0x4001D54")]
			Clamp,
			[Token(Token = "0x4001D55")]
			UniformClamp
		}

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[SerializeField]
		private bool _baked;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		[SerializeField]
		private float _size;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		[SerializeField]
		private Vector3 _offset;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		[SerializeField]
		private int _normalMethod;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private bool _tangents;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		[SerializeField]
		private float _rotation;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		[SerializeField]
		private UVMode _uvMode;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		[SerializeField]
		protected MeshFilter filter;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected bool updateCollider;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float vDist;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000400")]
		public float size
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x104BCB8", Offset = "0x104BCB8", VA = "0x104BCB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x104BCC0", Offset = "0x104BCC0", VA = "0x104BCC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public Color color
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x104BCE4", Offset = "0x104BCE4", VA = "0x104BCE4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x104BCF0", Offset = "0x104BCF0", VA = "0x104BCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public Vector3 offset
		{
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x104BD50", Offset = "0x104BD50", VA = "0x104BD50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x104BD5C", Offset = "0x104BD5C", VA = "0x104BD5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public int normalMethod
		{
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x104BDB0", Offset = "0x104BDB0", VA = "0x104BDB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x104BDB8", Offset = "0x104BDB8", VA = "0x104BDB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public bool calculateTangents
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x104BDDC", Offset = "0x104BDDC", VA = "0x104BDDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x104BDE4", Offset = "0x104BDE4", VA = "0x104BDE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public float rotation
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x104BE0C", Offset = "0x104BE0C", VA = "0x104BE0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x104BE14", Offset = "0x104BE14", VA = "0x104BE14")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public bool flipFaces
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x104BE38", Offset = "0x104BE38", VA = "0x104BE38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x104BE40", Offset = "0x104BE40", VA = "0x104BE40")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public bool doubleSided
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x104BE68", Offset = "0x104BE68", VA = "0x104BE68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x104BE70", Offset = "0x104BE70", VA = "0x104BE70")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public UVMode uvMode
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x104BE98", Offset = "0x104BE98", VA = "0x104BE98")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x104BEA0", Offset = "0x104BEA0", VA = "0x104BEA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public Vector2 uvScale
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x104BEC4", Offset = "0x104BEC4", VA = "0x104BEC4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x104BECC", Offset = "0x104BECC", VA = "0x104BECC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x104BF0C", Offset = "0x104BF0C", VA = "0x104BF0C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x104BF14", Offset = "0x104BF14", VA = "0x104BF14")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public float uvRotation
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x104BF54", Offset = "0x104BF54", VA = "0x104BF54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x104BF5C", Offset = "0x104BF5C", VA = "0x104BF5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public bool baked
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x104BF80", Offset = "0x104BF80", VA = "0x104BF80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x10468CC", Offset = "0x10468CC", VA = "0x10468CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x104BF88", Offset = "0x104BF88", VA = "0x104BF88", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x104C0AC", Offset = "0x104C0AC", VA = "0x104C0AC")]
		public void CloneMesh()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x104C1F0", Offset = "0x104C1F0", VA = "0x104C1F0", Slot = "11")]
		public override void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x104C208", Offset = "0x104C208", VA = "0x104C208", Slot = "12")]
		public override void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x104C220", Offset = "0x104C220", VA = "0x104C220", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x104C228", Offset = "0x104C228", VA = "0x104C228", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x104C230", Offset = "0x104C230", VA = "0x104C230", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x104C350", Offset = "0x104C350", VA = "0x104C350")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x104C458", Offset = "0x104C458", VA = "0x104C458", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x104C53C", Offset = "0x104C53C", VA = "0x104C53C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x104C588", Offset = "0x104C588", VA = "0x104C588", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1047ACC", Offset = "0x1047ACC", VA = "0x1047ACC", Slot = "29")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x104C5B0", Offset = "0x104C5B0", VA = "0x104C5B0", Slot = "30")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x104C984", Offset = "0x104C984", VA = "0x104C984", Slot = "31")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x104CB4C", Offset = "0x104CB4C", VA = "0x104CB4C")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x104CBB0", Offset = "0x104CBB0", VA = "0x104CBB0")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x104CCC0", Offset = "0x104CCC0", VA = "0x104CCC0")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x10497C4", Offset = "0x10497C4", VA = "0x10497C4")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000554")]
		public class Connection
		{
			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			[SerializeField]
			internal SplinePoint point;

			[Token(Token = "0x17000410")]
			public SplineComputer computer
			{
				[Token(Token = "0x60020C7")]
				[Address(RVA = "0x104E9B0", Offset = "0x104E9B0", VA = "0x104E9B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000411")]
			public int pointIndex
			{
				[Token(Token = "0x60020C8")]
				[Address(RVA = "0x104E9B8", Offset = "0x104E9B8", VA = "0x104E9B8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000412")]
			internal bool isValid
			{
				[Token(Token = "0x60020C9")]
				[Address(RVA = "0x104DEDC", Offset = "0x104DEDC", VA = "0x104DEDC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x104E628", Offset = "0x104E628", VA = "0x104E628")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x2000555")]
		public enum Type
		{
			[Token(Token = "0x4001D61")]
			Smooth,
			[Token(Token = "0x4001D62")]
			Free
		}

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Connection[] connections;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _transformSize;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _transformNormals;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _transformTangents;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TS_Transform tsTransform;

		[Token(Token = "0x1700040D")]
		public bool transformNormals
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x104CE9C", Offset = "0x104CE9C", VA = "0x104CE9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x104CEA4", Offset = "0x104CEA4", VA = "0x104CEA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public bool transformSize
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x104CFEC", Offset = "0x104CFEC", VA = "0x104CFEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x104CFF4", Offset = "0x104CFF4", VA = "0x104CFF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public bool transformTangents
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x104D010", Offset = "0x104D010", VA = "0x104D010")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x104D018", Offset = "0x104D018", VA = "0x104D018")]
			set
			{
			}
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x104D034", Offset = "0x104D034", VA = "0x104D034")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x104D0B0", Offset = "0x104D0B0", VA = "0x104D0B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x104D0F4", Offset = "0x104D0F4", VA = "0x104D0F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x104D0B4", Offset = "0x104D0B4", VA = "0x104D0B4")]
		private void Run()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x104D47C", Offset = "0x104D47C", VA = "0x104D47C")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x104D6D4", Offset = "0x104D6D4", VA = "0x104D6D4")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x104DDC4", Offset = "0x104DDC4", VA = "0x104DDC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x104DDC8", Offset = "0x104DDC8", VA = "0x104DDC8")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x104D0F8", Offset = "0x104D0F8", VA = "0x104D0F8")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x104E16C", Offset = "0x104E16C", VA = "0x104E16C")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x104CEC0", Offset = "0x104CEC0", VA = "0x104CEC0")]
		private void UpdatePoints()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x104E2AC", Offset = "0x104E2AC", VA = "0x104E2AC")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x104E328", Offset = "0x104E328", VA = "0x104E328", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x104DC58", Offset = "0x104DC58", VA = "0x104DC58")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x104D594", Offset = "0x104D594", VA = "0x104D594")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x104E680", Offset = "0x104E680", VA = "0x104E680", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x104DF6C", Offset = "0x104DF6C", VA = "0x104DF6C")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x104E800", Offset = "0x104E800", VA = "0x104E800", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x104E934", Offset = "0x104E934", VA = "0x104E934")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x104E93C", Offset = "0x104E93C", VA = "0x104E93C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000556")]
	[AddComponentMenu("Dreamteck/Splines/Object Bender")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x2000557")]
		public enum Axis
		{
			[Token(Token = "0x4001D6F")]
			X,
			[Token(Token = "0x4001D70")]
			Y,
			[Token(Token = "0x4001D71")]
			Z
		}

		[Token(Token = "0x2000558")]
		public enum NormalMode
		{
			[Token(Token = "0x4001D73")]
			Spline,
			[Token(Token = "0x4001D74")]
			Auto,
			[Token(Token = "0x4001D75")]
			Custom
		}

		[Token(Token = "0x2000559")]
		public enum ForwardMode
		{
			[Token(Token = "0x4001D77")]
			Spline,
			[Token(Token = "0x4001D78")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x200055A")]
		public class BendProperty
		{
			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[HideInInspector]
			[SerializeField]
			private bool _bendMesh;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			[SerializeField]
			private bool _bendSpline;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 positionPercent;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] normals;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[HideInInspector]
			[SerializeField]
			private Mesh destinationMesh;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[HideInInspector]
			[SerializeField]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			[SerializeField]
			private bool parent;

			[Token(Token = "0x17000419")]
			public bool isValid
			{
				[Token(Token = "0x60020E9")]
				[Address(RVA = "0x1071708", Offset = "0x1071708", VA = "0x1071708")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700041A")]
			public bool bendMesh
			{
				[Token(Token = "0x60020EA")]
				[Address(RVA = "0x1071780", Offset = "0x1071780", VA = "0x1071780")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020EB")]
				[Address(RVA = "0x1071788", Offset = "0x1071788", VA = "0x1071788")]
				set
				{
				}
			}

			[Token(Token = "0x1700041B")]
			public bool bendCollider
			{
				[Token(Token = "0x60020EC")]
				[Address(RVA = "0x1071994", Offset = "0x1071994", VA = "0x1071994")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020ED")]
				[Address(RVA = "0x107199C", Offset = "0x107199C", VA = "0x107199C")]
				set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			public bool bendSpline
			{
				[Token(Token = "0x60020EE")]
				[Address(RVA = "0x1071B74", Offset = "0x1071B74", VA = "0x1071B74")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020EF")]
				[Address(RVA = "0x1071B7C", Offset = "0x1071B7C", VA = "0x1071B7C")]
				set
				{
				}
			}

			[Token(Token = "0x1700041D")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0x1071B88", Offset = "0x1071B88", VA = "0x1071B88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x60020F1")]
				[Address(RVA = "0x1071C94", Offset = "0x1071C94", VA = "0x1071C94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			public Spline originalSpline
			{
				[Token(Token = "0x60020F2")]
				[Address(RVA = "0x1071DC8", Offset = "0x1071DC8", VA = "0x1071DC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x10720E8", Offset = "0x10720E8", VA = "0x10720E8")]
			public BendProperty(Transform t, bool isParent = false)
			{
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x1072984", Offset = "0x1072984", VA = "0x1072984")]
			public void Revert()
			{
			}

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x1071908", Offset = "0x1071908", VA = "0x1071908")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x1072A38", Offset = "0x1072A38", VA = "0x1072A38")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x1071AE8", Offset = "0x1071AE8", VA = "0x1071AE8")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x1072EA8", Offset = "0x1072EA8", VA = "0x1072EA8")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x10731C4", Offset = "0x10731C4", VA = "0x10731C4")]
			public void Update()
			{
			}

			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x1073008", Offset = "0x1073008", VA = "0x1073008")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x1073200", Offset = "0x1073200", VA = "0x1073200")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x1073194", Offset = "0x1073194", VA = "0x1073194")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[SerializeField]
		private bool _bend;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		[FormerlySerializedAs("_upVector")]
		private Vector3 _customNormal;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _customForward;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SplineResult bendResult;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Quaternion bendRotation;

		[Token(Token = "0x17000413")]
		public bool bend
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x104E9C0", Offset = "0x104E9C0", VA = "0x104E9C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x104E9C8", Offset = "0x104E9C8", VA = "0x104E9C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public Axis axis
		{
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x104EC30", Offset = "0x104EC30", VA = "0x104EC30")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x104EC38", Offset = "0x104EC38", VA = "0x104EC38")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public NormalMode upMode
		{
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x104ECF8", Offset = "0x104ECF8", VA = "0x104ECF8")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x104ED00", Offset = "0x104ED00", VA = "0x104ED00")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public Vector3 customNormal
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x104EDB8", Offset = "0x104EDB8", VA = "0x104EDB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x104EDC4", Offset = "0x104EDC4", VA = "0x104EDC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x104EEC4", Offset = "0x104EEC4", VA = "0x104EEC4")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x104EECC", Offset = "0x104EECC", VA = "0x104EECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public Vector3 customForward
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x104EF84", Offset = "0x104EF84", VA = "0x104EF84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x104EF90", Offset = "0x104EF90", VA = "0x104EF90")]
			set
			{
			}
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x104F090", Offset = "0x104F090", VA = "0x104F090")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x104F3F4", Offset = "0x104F3F4", VA = "0x104F3F4")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x104F85C", Offset = "0x104F85C", VA = "0x104F85C")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x104F544", Offset = "0x104F544", VA = "0x104F544")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x104F920", Offset = "0x104F920", VA = "0x104F920")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x104FAC4", Offset = "0x104FAC4", VA = "0x104FAC4")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x104FF8C", Offset = "0x104FF8C", VA = "0x104FF8C")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x104EBD0", Offset = "0x104EBD0", VA = "0x104EBD0")]
		private void Revert()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x104EA1C", Offset = "0x104EA1C", VA = "0x104EA1C")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1050618", Offset = "0x1050618", VA = "0x1050618")]
		private void GetBendResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x10504E4", Offset = "0x10504E4", VA = "0x10504E4")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1050B98", Offset = "0x1050B98", VA = "0x1050B98", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x1050594", Offset = "0x1050594", VA = "0x1050594")]
		private void Bend()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1050BC4", Offset = "0x1050BC4", VA = "0x1050BC4")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1051278", Offset = "0x1051278", VA = "0x1051278")]
		private void BendMesh(Vector3[] vertexPercents, Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x105144C", Offset = "0x105144C", VA = "0x105144C", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1051588", Offset = "0x1051588", VA = "0x1051588", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x10515F0", Offset = "0x10515F0", VA = "0x10515F0")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x200055B")]
	[AddComponentMenu("Dreamteck/Splines/Object Controller")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x200055C")]
		internal class ObjectControl
		{
			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x17000435")]
			public bool isNull
			{
				[Token(Token = "0x6002133")]
				[Address(RVA = "0x1075A78", Offset = "0x1075A78", VA = "0x1075A78")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000436")]
			public Transform transform
			{
				[Token(Token = "0x6002134")]
				[Address(RVA = "0x1073DF4", Offset = "0x1073DF4", VA = "0x1073DF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002135")]
			[Address(RVA = "0x10745B0", Offset = "0x10745B0", VA = "0x10745B0")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1073E7C", Offset = "0x1073E7C", VA = "0x1073E7C")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x1073F0C", Offset = "0x1073F0C", VA = "0x1073F0C")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x10757B0", Offset = "0x10757B0", VA = "0x10757B0")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x200055D")]
		public enum ObjectMethod
		{
			[Token(Token = "0x4001DC0")]
			Instantiate,
			[Token(Token = "0x4001DC1")]
			GetChildren
		}

		[Token(Token = "0x200055E")]
		public enum Positioning
		{
			[Token(Token = "0x4001DC3")]
			Stretch,
			[Token(Token = "0x4001DC4")]
			Clip
		}

		[Token(Token = "0x200055F")]
		public enum Iteration
		{
			[Token(Token = "0x4001DC6")]
			Ordered,
			[Token(Token = "0x4001DC7")]
			Random
		}

		[Token(Token = "0x2000560")]
		[CompilerGenerated]
		private sealed class <InstantiateAllWithDelay>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600213C")]
				[Address(RVA = "0x1075C24", Offset = "0x1075C24", VA = "0x1075C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600213E")]
				[Address(RVA = "0x1075C6C", Offset = "0x1075C6C", VA = "0x1075C6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002139")]
			[Address(RVA = "0x1074890", Offset = "0x1074890", VA = "0x1074890")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x1075AD8", Offset = "0x1075AD8", VA = "0x1075AD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600213B")]
			[Address(RVA = "0x1075ADC", Offset = "0x1075ADC", VA = "0x1075ADC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x1075C2C", Offset = "0x1075C2C", VA = "0x1075C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _positionOffset;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		[SerializeField]
		private int _randomSeed;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _randomSize;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		[SerializeField]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		[SerializeField]
		private Vector3 _minRotationOffset;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotationOffset;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private bool _randomizeOffset;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[SerializeField]
		[HideInInspector]
		private bool _useRandomOffsetRotation;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		[SerializeField]
		[HideInInspector]
		private bool _randomOffset;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SplineResult evaluateResult;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private System.Random randomizer;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private System.Random randomizer2;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x17000420")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x10733D8", Offset = "0x10733D8", VA = "0x10733D8")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x10733E0", Offset = "0x10733E0", VA = "0x10733E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public int spawnCount
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x10734AC", Offset = "0x10734AC", VA = "0x10734AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x10734B4", Offset = "0x10734B4", VA = "0x10734B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0x107372C", Offset = "0x107372C", VA = "0x107372C")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1073734", Offset = "0x1073734", VA = "0x1073734")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public Iteration iteration
		{
			[Token(Token = "0x6002103")]
			[Address(RVA = "0x1073758", Offset = "0x1073758", VA = "0x1073758")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1073760", Offset = "0x1073760", VA = "0x1073760")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public int randomSeed
		{
			[Token(Token = "0x6002105")]
			[Address(RVA = "0x1073784", Offset = "0x1073784", VA = "0x1073784")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x107378C", Offset = "0x107378C", VA = "0x107378C")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public Vector3 offset
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x10737B0", Offset = "0x10737B0", VA = "0x10737B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x10737BC", Offset = "0x10737BC", VA = "0x10737BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x1073810", Offset = "0x1073810", VA = "0x1073810")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1073818", Offset = "0x1073818", VA = "0x1073818")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public Vector3 minRotationOffset
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x1073840", Offset = "0x1073840", VA = "0x1073840")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x107384C", Offset = "0x107384C", VA = "0x107384C")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public Vector3 maxRotationOffset
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x10738A0", Offset = "0x10738A0", VA = "0x10738A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x10738AC", Offset = "0x10738AC", VA = "0x10738AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x1073900", Offset = "0x1073900", VA = "0x1073900")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x1073930", Offset = "0x1073930", VA = "0x1073930")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0x10739B8", Offset = "0x10739B8", VA = "0x10739B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002112")]
			[Address(RVA = "0x10739C4", Offset = "0x10739C4", VA = "0x10739C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0x1073A18", Offset = "0x1073A18", VA = "0x1073A18")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x1073A28", Offset = "0x1073A28", VA = "0x1073A28")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public Vector3 scaleMultiplier
		{
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x1073A84", Offset = "0x1073A84", VA = "0x1073A84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x1073AB4", Offset = "0x1073AB4", VA = "0x1073AB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public bool randomizeOffset
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1073B44", Offset = "0x1073B44", VA = "0x1073B44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x1073B4C", Offset = "0x1073B4C", VA = "0x1073B4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public bool useRandomOffsetRotation
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x1073B74", Offset = "0x1073B74", VA = "0x1073B74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x1073B7C", Offset = "0x1073B7C", VA = "0x1073B7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public bool shellOffset
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x1073BA4", Offset = "0x1073BA4", VA = "0x1073BA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x1073BAC", Offset = "0x1073BAC", VA = "0x1073BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public bool randomOffset
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x1073BD4", Offset = "0x1073BD4", VA = "0x1073BD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x1073BDC", Offset = "0x1073BDC", VA = "0x1073BDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public bool applyRotation
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1073C04", Offset = "0x1073C04", VA = "0x1073C04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x1073C0C", Offset = "0x1073C0C", VA = "0x1073C0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public bool applyScale
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x1073C34", Offset = "0x1073C34", VA = "0x1073C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x1073C3C", Offset = "0x1073C3C", VA = "0x1073C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public Vector2 randomSize
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x1073C64", Offset = "0x1073C64", VA = "0x1073C64")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1073C6C", Offset = "0x1073C6C", VA = "0x1073C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public float positionOffset
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1073CAC", Offset = "0x1073CAC", VA = "0x1073CAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x1073CB4", Offset = "0x1073CB4", VA = "0x1073CB4")]
			set
			{
			}
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1073CD8", Offset = "0x1073CD8", VA = "0x1073CD8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x10734E8", Offset = "0x10734E8", VA = "0x10734E8")]
		private void Remove()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1073F9C", Offset = "0x1073F9C", VA = "0x1073F9C")]
		public void GetAll()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1073400", Offset = "0x1073400", VA = "0x1073400")]
		public void Spawn()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1074818", Offset = "0x1074818", VA = "0x1074818", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x10746E8", Offset = "0x10746E8", VA = "0x10746E8")]
		[IteratorStateMachine(typeof(<InstantiateAllWithDelay>d__101))]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x107475C", Offset = "0x107475C", VA = "0x107475C")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x10748B8", Offset = "0x10748B8", VA = "0x10748B8")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1074BF4", Offset = "0x1074BF4", VA = "0x1074BF4", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x107574C", Offset = "0x107574C", VA = "0x107574C", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x107588C", Offset = "0x107588C", VA = "0x107588C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1075894", Offset = "0x1075894", VA = "0x1075894")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x2000561")]
	[ExecuteInEditMode]
	[AddComponentMenu("Dreamteck/Splines/Particle Controller")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x2000562")]
		public enum EmitPoint
		{
			[Token(Token = "0x4001DDB")]
			Beginning,
			[Token(Token = "0x4001DDC")]
			Ending,
			[Token(Token = "0x4001DDD")]
			Random,
			[Token(Token = "0x4001DDE")]
			Ordered
		}

		[Token(Token = "0x2000563")]
		public enum MotionType
		{
			[Token(Token = "0x4001DE0")]
			None,
			[Token(Token = "0x4001DE1")]
			UseParticleSystem,
			[Token(Token = "0x4001DE2")]
			FollowForward,
			[Token(Token = "0x4001DE3")]
			FollowBackward,
			[Token(Token = "0x4001DE4")]
			ByNormal,
			[Token(Token = "0x4001DE5")]
			ByNormalRandomized
		}

		[Token(Token = "0x2000564")]
		public enum Wrap
		{
			[Token(Token = "0x4001DE7")]
			Default,
			[Token(Token = "0x4001DE8")]
			Loop
		}

		[Token(Token = "0x2000565")]
		public class Particle
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Color startColor;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x107761C", Offset = "0x107761C", VA = "0x107761C")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle)
			{
				return default(double);
			}

			[Token(Token = "0x6002148")]
			[Address(RVA = "0x107619C", Offset = "0x107619C", VA = "0x107619C")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Particle[] controllers;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int particleCount;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int birthIndex;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SplineResult evalResult;

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1075C74", Offset = "0x1075C74", VA = "0x1075C74", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1076134", Offset = "0x1076134", VA = "0x1076134")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1076DEC", Offset = "0x1076DEC", VA = "0x1076DEC")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1077558", Offset = "0x1077558", VA = "0x1077558", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x1076E54", Offset = "0x1076E54", VA = "0x1076E54")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1077750", Offset = "0x1077750", VA = "0x1077750")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1076208", Offset = "0x1076208", VA = "0x1076208")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1077754", Offset = "0x1077754", VA = "0x1077754")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x2000566")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[AddComponentMenu("Dreamteck/Splines/Path Generator")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		[SerializeField]
		private bool _useShapeCurve;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x17000439")]
		public int slices
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0x107787C", Offset = "0x107787C", VA = "0x107787C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600214A")]
			[Address(RVA = "0x1077884", Offset = "0x1077884", VA = "0x1077884")]
			set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public bool useShapeCurve
		{
			[Token(Token = "0x600214B")]
			[Address(RVA = "0x10778B0", Offset = "0x10778B0", VA = "0x10778B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600214C")]
			[Address(RVA = "0x10778B8", Offset = "0x10778B8", VA = "0x10778B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public float shapeExposure
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x1077A0C", Offset = "0x1077A0C", VA = "0x1077A0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600214E")]
			[Address(RVA = "0x1077A14", Offset = "0x1077A14", VA = "0x1077A14")]
			set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public AnimationCurve shape
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0x1077AC8", Offset = "0x1077AC8", VA = "0x1077AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002150")]
			[Address(RVA = "0x1077AD0", Offset = "0x1077AD0", VA = "0x1077AD0")]
			set
			{
			}
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1077E48", Offset = "0x1077E48", VA = "0x1077E48", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1077EA8", Offset = "0x1077EA8", VA = "0x1077EA8", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1077EB0", Offset = "0x1077EB0", VA = "0x1077EB0", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1077F80", Offset = "0x1077F80", VA = "0x1077F80")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1078F58", Offset = "0x1078F58", VA = "0x1078F58")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x2000567")]
	[AddComponentMenu("Dreamteck/Splines/Polygon Collider Generator")]
	[RequireComponent(typeof(PolygonCollider2D))]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x2000568")]
		public enum Type
		{
			[Token(Token = "0x4001DFF")]
			Path,
			[Token(Token = "0x4001E00")]
			Shape
		}

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[SerializeField]
		private Type _type;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		[SerializeField]
		private float _size;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[SerializeField]
		private float _offset;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[SerializeField]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		[SerializeField]
		protected Vector2[] vertices;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool updateCollider;

		[Token(Token = "0x1700043D")]
		public Type type
		{
			[Token(Token = "0x6002156")]
			[Address(RVA = "0x1078FC0", Offset = "0x1078FC0", VA = "0x1078FC0")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6002157")]
			[Address(RVA = "0x1078FC8", Offset = "0x1078FC8", VA = "0x1078FC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public float size
		{
			[Token(Token = "0x6002158")]
			[Address(RVA = "0x1078FEC", Offset = "0x1078FEC", VA = "0x1078FEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002159")]
			[Address(RVA = "0x1078FF4", Offset = "0x1078FF4", VA = "0x1078FF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public float offset
		{
			[Token(Token = "0x600215A")]
			[Address(RVA = "0x1079018", Offset = "0x1079018", VA = "0x1079018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600215B")]
			[Address(RVA = "0x1079020", Offset = "0x1079020", VA = "0x1079020")]
			set
			{
			}
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1079044", Offset = "0x1079044", VA = "0x1079044", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x10790A8", Offset = "0x10790A8", VA = "0x10790A8", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x10790B0", Offset = "0x10790B0", VA = "0x10790B0", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x10790B8", Offset = "0x10790B8", VA = "0x10790B8", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x10790C0", Offset = "0x10790C0", VA = "0x10790C0", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x10790C8", Offset = "0x10790C8", VA = "0x10790C8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1079190", Offset = "0x1079190", VA = "0x1079190", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x1079838", Offset = "0x1079838", VA = "0x1079838", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x10791EC", Offset = "0x10791EC", VA = "0x10791EC")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1079598", Offset = "0x1079598", VA = "0x1079598")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1079970", Offset = "0x1079970", VA = "0x1079970")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x200056A")]
	[AddComponentMenu("Dreamteck/Splines/Spline Computer")]
	public class SplineComputer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200056B")]
		public class NodeLink
		{
			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pointIndex;

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x107ADFC", Offset = "0x107ADFC", VA = "0x107ADFC")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x200056C")]
		public enum Space
		{
			[Token(Token = "0x4001E0F")]
			World,
			[Token(Token = "0x4001E10")]
			Local
		}

		[Serializable]
		[Token(Token = "0x200056D")]
		public class Morph
		{
			[Serializable]
			[Token(Token = "0x200056E")]
			internal class SplineMorphState
			{
				[Token(Token = "0x4001E14")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SplinePoint[] points;

				[Token(Token = "0x4001E15")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float percent;

				[Token(Token = "0x4001E16")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string name;

				[Token(Token = "0x60021DA")]
				[Address(RVA = "0x107F510", Offset = "0x107F510", VA = "0x107F510")]
				public SplineMorphState()
				{
				}
			}

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private SplineComputer computer;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineMorphState[] morphStates;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			internal bool initialized;

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1079D30", Offset = "0x1079D30", VA = "0x1079D30")]
			public Morph(SplineComputer input)
			{
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x107E25C", Offset = "0x107E25C", VA = "0x107E25C")]
			public void SetWeight(int index, float weight)
			{
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x107EF28", Offset = "0x107EF28", VA = "0x107EF28")]
			public void SetWeight(string name, float weight)
			{
			}

			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x107F07C", Offset = "0x107F07C", VA = "0x107F07C")]
			public void CaptureSnapshot(int index)
			{
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x107F1D0", Offset = "0x107F1D0", VA = "0x107F1D0")]
			public void CaptureSnapshot(string name)
			{
			}

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x107F1EC", Offset = "0x107F1EC", VA = "0x107F1EC")]
			public void Clear()
			{
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x107F244", Offset = "0x107F244", VA = "0x107F244")]
			public SplinePoint[] GetSnapshot(int index)
			{
				return null;
			}

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x107F27C", Offset = "0x107F27C", VA = "0x107F27C")]
			public SplinePoint[] GetSnapshot(string name)
			{
				return null;
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x107E5C4", Offset = "0x107E5C4", VA = "0x107E5C4")]
			public float GetWeight(int index)
			{
				return default(float);
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x107F2BC", Offset = "0x107F2BC", VA = "0x107F2BC")]
			public float GetWeight(string name)
			{
				return default(float);
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x107F2FC", Offset = "0x107F2FC", VA = "0x107F2FC")]
			public void AddChannel(string name)
			{
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x107F5A8", Offset = "0x107F5A8", VA = "0x107F5A8")]
			public void RemoveChannel(string name)
			{
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x107F5C4", Offset = "0x107F5C4", VA = "0x107F5C4")]
			public void RemoveChannel(int index)
			{
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x107ECD0", Offset = "0x107ECD0", VA = "0x107ECD0")]
			private void Update()
			{
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x107EF8C", Offset = "0x107EF8C", VA = "0x107EF8C")]
			private int GetChannelIndex(string name)
			{
				return default(int);
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x1079DEC", Offset = "0x1079DEC", VA = "0x1079DEC")]
			public int GetChannelCount()
			{
				return default(int);
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x107E3EC", Offset = "0x107E3EC", VA = "0x107E3EC")]
			public string[] GetChannelNames()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Spline spline;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Morph _morph;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Space _space;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private SplineUser[] subscribers;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private NodeLink[] _nodeLinks;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool rebuildPending;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TS_Transform tsTransform;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool updateRebuild;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lateUpdateRebuild;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SplineUser.UpdateMethod method;

		[Token(Token = "0x17000440")]
		public Space space
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x1079AF4", Offset = "0x1079AF4", VA = "0x1079AF4")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x600216C")]
			[Address(RVA = "0x1079AFC", Offset = "0x1079AFC", VA = "0x1079AFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public Spline.Type type
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x1071F0C", Offset = "0x1071F0C", VA = "0x1071F0C")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x1079B24", Offset = "0x1079B24", VA = "0x1079B24")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public double precision
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x1079B54", Offset = "0x1079B54", VA = "0x1079B54")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x1079B70", Offset = "0x1079B70", VA = "0x1079B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x6002171")]
			[Address(RVA = "0x1079BBC", Offset = "0x1079BBC", VA = "0x1079BBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x1079BD8", Offset = "0x1079BD8", VA = "0x1079BD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x1079C04", Offset = "0x1079C04", VA = "0x1079C04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x1079C20", Offset = "0x1079C20", VA = "0x1079C20")]
			set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public int iterations
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x1079C4C", Offset = "0x1079C4C", VA = "0x1079C4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000446")]
		public double moveStep
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0x1079C68", Offset = "0x1079C68", VA = "0x1079C68")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000447")]
		public bool isClosed
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x1072968", Offset = "0x1072968", VA = "0x1072968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000448")]
		public int pointCount
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x1079C84", Offset = "0x1079C84", VA = "0x1079C84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000449")]
		public Morph morph
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x1079CA8", Offset = "0x1079CA8", VA = "0x1079CA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public NodeLink[] nodeLinks
		{
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x1079DBC", Offset = "0x1079DBC", VA = "0x1079DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		public bool hasMorph
		{
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x1079DC4", Offset = "0x1079DC4", VA = "0x1079DC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044C")]
		public Vector3 position
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0x1079E04", Offset = "0x1079E04", VA = "0x1079E04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700044D")]
		public Quaternion rotation
		{
			[Token(Token = "0x600217D")]
			[Address(RVA = "0x1079E3C", Offset = "0x1079E3C", VA = "0x1079E3C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700044E")]
		public Vector3 scale
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x1079E74", Offset = "0x1079E74", VA = "0x1079E74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700044F")]
		public int subscriberCount
		{
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x1079EAC", Offset = "0x1079EAC", VA = "0x1079EAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400004D")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x1079EC8", Offset = "0x1079EC8", VA = "0x1079EC8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x1079F64", Offset = "0x1079F64", VA = "0x1079F64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x107A000", Offset = "0x107A000", VA = "0x107A000")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x107A080", Offset = "0x107A080", VA = "0x107A080")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x107A2A8", Offset = "0x107A2A8", VA = "0x107A2A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x107A0B0", Offset = "0x107A0B0", VA = "0x107A0B0")]
		private void Run()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x107A470", Offset = "0x107A470", VA = "0x107A470")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x107A454", Offset = "0x107A454", VA = "0x107A454")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x107A488", Offset = "0x107A488", VA = "0x107A488")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x107A67C", Offset = "0x107A67C", VA = "0x107A67C")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x107A85C", Offset = "0x107A85C", VA = "0x107A85C")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x107A914", Offset = "0x107A914", VA = "0x107A914")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x107A91C", Offset = "0x107A91C", VA = "0x107A91C")]
		public void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x107AE04", Offset = "0x107AE04", VA = "0x107AE04")]
		public void RemoveNodeLink(int pointIndex)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1071F28", Offset = "0x1071F28", VA = "0x1071F28")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x107B4BC", Offset = "0x107B4BC", VA = "0x107B4BC")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x107B65C", Offset = "0x107B65C", VA = "0x107B65C")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x107B6DC", Offset = "0x107B6DC", VA = "0x107B6DC")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x107B800", Offset = "0x107B800", VA = "0x107B800")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x107B880", Offset = "0x107B880", VA = "0x107B880")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x107B900", Offset = "0x107B900", VA = "0x107B900")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x107B93C", Offset = "0x107B93C", VA = "0x107B93C")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x1072AB0", Offset = "0x1072AB0", VA = "0x1072AB0")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x107BD78", Offset = "0x107BD78", VA = "0x107BD78")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x107C028", Offset = "0x107C028", VA = "0x107C028")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x107C244", Offset = "0x107C244", VA = "0x107C244")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x107C390", Offset = "0x107C390", VA = "0x107C390")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x107C458", Offset = "0x107C458", VA = "0x107C458")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x107C58C", Offset = "0x107C58C", VA = "0x107C58C")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x107BEC4", Offset = "0x107BEC4", VA = "0x107BEC4")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x107C8C0", Offset = "0x107C8C0", VA = "0x107C8C0")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x107C8E8", Offset = "0x107C8E8", VA = "0x107C8E8")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x107C920", Offset = "0x107C920", VA = "0x107C920")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x107C9EC", Offset = "0x107C9EC", VA = "0x107C9EC")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x107CA84", Offset = "0x107CA84", VA = "0x107CA84")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x107C99C", Offset = "0x107C99C", VA = "0x107C99C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x107CB48", Offset = "0x107CB48", VA = "0x107CB48")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x107CBC4", Offset = "0x107CBC4", VA = "0x107CBC4")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x107CC70", Offset = "0x107CC70", VA = "0x107CC70")]
		public double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x107CAC8", Offset = "0x107CAC8", VA = "0x107CAC8")]
		private void TransformResult(SplineResult result)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1079B18", Offset = "0x1079B18", VA = "0x1079B18")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x107CED0", Offset = "0x107CED0", VA = "0x107CED0")]
		public void RebuildImmediate()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x107D088", Offset = "0x107D088", VA = "0x107D088")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x107A10C", Offset = "0x107A10C", VA = "0x107A10C")]
		private void RebuildOnUpdate()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x107D1B4", Offset = "0x107D1B4", VA = "0x107D1B4")]
		public void RebuildConnectedUsers()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x107D1B8", Offset = "0x107D1B8", VA = "0x107D1B8")]
		private void RebuildUser(int index)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x107D2C8", Offset = "0x107D2C8", VA = "0x107D2C8")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x107B97C", Offset = "0x107B97C", VA = "0x107B97C")]
		public void Break()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x107D324", Offset = "0x107D324", VA = "0x107D324")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x107D374", Offset = "0x107D374", VA = "0x107D374")]
		public void Close()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x107D3B4", Offset = "0x107D3B4", VA = "0x107D3B4")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x107D3D0", Offset = "0x107D3D0", VA = "0x107D3D0")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x107D550", Offset = "0x107D550", VA = "0x107D550")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x107D708", Offset = "0x107D708", VA = "0x107D708")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x107DBBC", Offset = "0x107DBBC", VA = "0x107DBBC")]
		public int[] GetAvailableNodeLinksAtPosition(double percent, Spline.Direction direction)
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x107DD48", Offset = "0x107DD48", VA = "0x107DD48")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x107E1C8", Offset = "0x107E1C8", VA = "0x107E1C8")]
		public void SetMorphState(int index)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x107E2A8", Offset = "0x107E2A8", VA = "0x107E2A8")]
		public void SetMorphState(string morphName)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x107E4F8", Offset = "0x107E4F8", VA = "0x107E4F8")]
		public void SetMorphState(int index, float percent)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x107E5FC", Offset = "0x107E5FC", VA = "0x107E5FC")]
		public void SetMorphState(string morphName, float percent)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x107E758", Offset = "0x107E758", VA = "0x107E758")]
		public void SetMorphState(float percent)
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x107E7FC", Offset = "0x107E7FC", VA = "0x107E7FC")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x107E910", Offset = "0x107E910", VA = "0x107E910")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x107AF70", Offset = "0x107AF70", VA = "0x107AF70")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x107BF6C", Offset = "0x107BF6C", VA = "0x107BF6C")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x107BB3C", Offset = "0x107BB3C", VA = "0x107BB3C")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x107A2D4", Offset = "0x107A2D4", VA = "0x107A2D4")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x107B304", Offset = "0x107B304", VA = "0x107B304")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x107B984", Offset = "0x107B984", VA = "0x107B984")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x107B3E0", Offset = "0x107B3E0", VA = "0x107B3E0")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x107BA60", Offset = "0x107BA60", VA = "0x107BA60")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x107EBE8", Offset = "0x107EBE8", VA = "0x107EBE8")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x2000570")]
	[AddComponentMenu("Dreamteck/Splines/Spline Follower")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x2000571")]
		public enum FollowMode
		{
			[Token(Token = "0x4001E24")]
			Uniform,
			[Token(Token = "0x4001E25")]
			Time
		}

		[Token(Token = "0x2000572")]
		public enum Wrap
		{
			[Token(Token = "0x4001E27")]
			Default,
			[Token(Token = "0x4001E28")]
			Loop,
			[Token(Token = "0x4001E29")]
			PingPong
		}

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool autoFollow;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		[SerializeField]
		private float _followDuration;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private double lastClippedPercent;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private SplineResult from;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private SplineResult to;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool followStarted;

		[Token(Token = "0x17000450")]
		public float followSpeed
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x107F81C", Offset = "0x107F81C", VA = "0x107F81C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x107F824", Offset = "0x107F824", VA = "0x107F824")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public float followDuration
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x107F840", Offset = "0x107F840", VA = "0x107F840")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x107F848", Offset = "0x107F848", VA = "0x107F848")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		[Obsolete("Deprecated in 1.0.8. Use result instead")]
		public SplineResult followResult
		{
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x107F864", Offset = "0x107F864", VA = "0x107F864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		[Obsolete("Deprecated in 1.0.8. Use offsettedResult instead")]
		public SplineResult offsettedFollowResult
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x107F86C", Offset = "0x107F86C", VA = "0x107F86C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004E")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x107F874", Offset = "0x107F874", VA = "0x107F874")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x107F914", Offset = "0x107F914", VA = "0x107F914")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x107F9B4", Offset = "0x107F9B4", VA = "0x107F9B4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x107FA54", Offset = "0x107FA54", VA = "0x107FA54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x107FAF4", Offset = "0x107FAF4", VA = "0x107FAF4", Slot = "29")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x107FB80", Offset = "0x107FB80", VA = "0x107FB80", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x107FC90", Offset = "0x107FC90", VA = "0x107FC90", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x107FBAC", Offset = "0x107FBAC", VA = "0x107FBAC")]
		private void AutoFollow()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1080B50", Offset = "0x1080B50", VA = "0x1080B50")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1080B90", Offset = "0x1080B90", VA = "0x1080B90", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1080BF4", Offset = "0x1080BF4", VA = "0x1080BF4", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x10807A8", Offset = "0x10807A8", VA = "0x10807A8")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x107FD18", Offset = "0x107FD18", VA = "0x107FD18")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1080C74", Offset = "0x1080C74", VA = "0x1080C74")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x2000573")]
	[RequireComponent(typeof(MeshRenderer))]
	[AddComponentMenu("Dreamteck/Splines/Spline Mesh")]
	[RequireComponent(typeof(MeshFilter))]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x2000574")]
		public class Channel
		{
			[Token(Token = "0x2000575")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x2000576")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x2000577")]
			public delegate Vector3 Vector3Handler(double percent);

			[Token(Token = "0x2000578")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x2000579")]
			public enum Type
			{
				[Token(Token = "0x4001E59")]
				Extrude,
				[Token(Token = "0x4001E5A")]
				Place
			}

			[Token(Token = "0x200057A")]
			public enum UVOverride
			{
				[Token(Token = "0x4001E5C")]
				None,
				[Token(Token = "0x4001E5D")]
				ClampU,
				[Token(Token = "0x4001E5E")]
				ClampV,
				[Token(Token = "0x4001E5F")]
				UniformU,
				[Token(Token = "0x4001E60")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x200057B")]
			public class MeshDefinition
			{
				[Token(Token = "0x200057C")]
				public enum MirrorMethod
				{
					[Token(Token = "0x4001E78")]
					None,
					[Token(Token = "0x4001E79")]
					X,
					[Token(Token = "0x4001E7A")]
					Y,
					[Token(Token = "0x4001E7B")]
					Z
				}

				[Serializable]
				[Token(Token = "0x200057D")]
				public class Submesh
				{
					[Token(Token = "0x4001E7C")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x6002281")]
					[Address(RVA = "0x10880E0", Offset = "0x10880E0", VA = "0x10880E0")]
					public Submesh()
					{
					}

					[Token(Token = "0x6002282")]
					[Address(RVA = "0x1085E78", Offset = "0x1085E78", VA = "0x1085E78")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x200057E")]
				public class VertexGroup
				{
					[Token(Token = "0x4001E7D")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x4001E7E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x4001E7F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x6002283")]
					[Address(RVA = "0x1087FEC", Offset = "0x1087FEC", VA = "0x1087FEC")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x6002284")]
					[Address(RVA = "0x1088034", Offset = "0x1088034", VA = "0x1088034")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x4001E61")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] vertices;

				[Token(Token = "0x4001E62")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[HideInInspector]
				[SerializeField]
				internal Vector3[] normals;

				[Token(Token = "0x4001E63")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[HideInInspector]
				[SerializeField]
				internal Vector4[] tangents;

				[Token(Token = "0x4001E64")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[HideInInspector]
				[SerializeField]
				internal Color[] colors;

				[Token(Token = "0x4001E65")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[HideInInspector]
				[SerializeField]
				internal Vector2[] uv;

				[Token(Token = "0x4001E66")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[HideInInspector]
				[SerializeField]
				internal Vector2[] uv2;

				[Token(Token = "0x4001E67")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[HideInInspector]
				[SerializeField]
				internal Vector2[] uv3;

				[Token(Token = "0x4001E68")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x4001E69")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x4001E6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x4001E6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x4001E6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x4001E6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[HideInInspector]
				[SerializeField]
				private Mesh _mesh;

				[Token(Token = "0x4001E6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _rotation;

				[Token(Token = "0x4001E6F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _offset;

				[Token(Token = "0x4001E70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _scale;

				[Token(Token = "0x4001E71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x4001E72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
				[HideInInspector]
				[SerializeField]
				private Vector2 _uvOffset;

				[Token(Token = "0x4001E73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x4001E74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x4001E75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[HideInInspector]
				[SerializeField]
				private bool _flipFaces;

				[Token(Token = "0x4001E76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
				[HideInInspector]
				[SerializeField]
				private bool _doubleSided;

				[Token(Token = "0x17000473")]
				public Mesh mesh
				{
					[Token(Token = "0x6002261")]
					[Address(RVA = "0x1085BF0", Offset = "0x1085BF0", VA = "0x1085BF0")]
					get
					{
						return null;
					}
					[Token(Token = "0x6002262")]
					[Address(RVA = "0x1085BF8", Offset = "0x1085BF8", VA = "0x1085BF8")]
					set
					{
					}
				}

				[Token(Token = "0x17000474")]
				public Vector3 rotation
				{
					[Token(Token = "0x6002263")]
					[Address(RVA = "0x1085C94", Offset = "0x1085C94", VA = "0x1085C94")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002264")]
					[Address(RVA = "0x1085CA0", Offset = "0x1085CA0", VA = "0x1085CA0")]
					set
					{
					}
				}

				[Token(Token = "0x17000475")]
				public Vector2 offset
				{
					[Token(Token = "0x6002265")]
					[Address(RVA = "0x1085CE8", Offset = "0x1085CE8", VA = "0x1085CE8")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002266")]
					[Address(RVA = "0x1085CF0", Offset = "0x1085CF0", VA = "0x1085CF0")]
					set
					{
					}
				}

				[Token(Token = "0x17000476")]
				public Vector3 scale
				{
					[Token(Token = "0x6002267")]
					[Address(RVA = "0x1085D24", Offset = "0x1085D24", VA = "0x1085D24")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002268")]
					[Address(RVA = "0x1085D30", Offset = "0x1085D30", VA = "0x1085D30")]
					set
					{
					}
				}

				[Token(Token = "0x17000477")]
				public Vector2 uvScale
				{
					[Token(Token = "0x6002269")]
					[Address(RVA = "0x1085D78", Offset = "0x1085D78", VA = "0x1085D78")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x600226A")]
					[Address(RVA = "0x1085D80", Offset = "0x1085D80", VA = "0x1085D80")]
					set
					{
					}
				}

				[Token(Token = "0x17000478")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x600226B")]
					[Address(RVA = "0x1085DB4", Offset = "0x1085DB4", VA = "0x1085DB4")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x600226C")]
					[Address(RVA = "0x1085DBC", Offset = "0x1085DBC", VA = "0x1085DBC")]
					set
					{
					}
				}

				[Token(Token = "0x17000479")]
				public float uvRotation
				{
					[Token(Token = "0x600226D")]
					[Address(RVA = "0x1085DF0", Offset = "0x1085DF0", VA = "0x1085DF0")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x600226E")]
					[Address(RVA = "0x1085DF8", Offset = "0x1085DF8", VA = "0x1085DF8")]
					set
					{
					}
				}

				[Token(Token = "0x1700047A")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x600226F")]
					[Address(RVA = "0x1085E10", Offset = "0x1085E10", VA = "0x1085E10")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x6002270")]
					[Address(RVA = "0x1085E18", Offset = "0x1085E18", VA = "0x1085E18")]
					set
					{
					}
				}

				[Token(Token = "0x1700047B")]
				public bool flipFaces
				{
					[Token(Token = "0x6002271")]
					[Address(RVA = "0x1085E30", Offset = "0x1085E30", VA = "0x1085E30")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002272")]
					[Address(RVA = "0x1085E38", Offset = "0x1085E38", VA = "0x1085E38")]
					set
					{
					}
				}

				[Token(Token = "0x1700047C")]
				public bool doubleSided
				{
					[Token(Token = "0x6002273")]
					[Address(RVA = "0x1085E54", Offset = "0x1085E54", VA = "0x1085E54")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002274")]
					[Address(RVA = "0x1085E5C", Offset = "0x1085E5C", VA = "0x1085E5C")]
					set
					{
					}
				}

				[Token(Token = "0x6002275")]
				[Address(RVA = "0x1083A00", Offset = "0x1083A00", VA = "0x1083A00")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x6002276")]
				[Address(RVA = "0x1083388", Offset = "0x1083388", VA = "0x1083388")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x6002277")]
				[Address(RVA = "0x1084B98", Offset = "0x1084B98", VA = "0x1084B98")]
				public void Refresh()
				{
				}

				[Token(Token = "0x6002278")]
				[Address(RVA = "0x10865FC", Offset = "0x10865FC", VA = "0x10865FC")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x6002279")]
				[Address(RVA = "0x10862AC", Offset = "0x10862AC", VA = "0x10862AC")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x600227A")]
				[Address(RVA = "0x1087148", Offset = "0x1087148", VA = "0x1087148")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x600227B")]
				[Address(RVA = "0x1086B5C", Offset = "0x1086B5C", VA = "0x1086B5C")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x600227C")]
				[Address(RVA = "0x1085F24", Offset = "0x1085F24", VA = "0x1085F24")]
				private void Mirror()
				{
				}

				[Token(Token = "0x600227D")]
				[Address(RVA = "0x1086790", Offset = "0x1086790", VA = "0x1086790")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x600227E")]
				[Address(RVA = "0x1086C78", Offset = "0x1086C78", VA = "0x1086C78")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x600227F")]
				[Address(RVA = "0x1087EF8", Offset = "0x1087EF8", VA = "0x1087EF8")]
				private int FindInsertIndex(Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6002280")]
				[Address(RVA = "0x1087948", Offset = "0x1087948", VA = "0x1087948")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[HideInInspector]
			[SerializeField]
			private double _clipFrom;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[HideInInspector]
			[SerializeField]
			private bool _overrideNormal;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			[SerializeField]
			private Vector3 _customNormal;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			[SerializeField]
			private bool _randomRotation;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[HideInInspector]
			[SerializeField]
			private Vector3 _minRotation;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxRotation;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minScale;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			[SerializeField]
			private Vector3 _maxScale;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private int iterator;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x17000454")]
			public double clipFrom
			{
				[Token(Token = "0x6002200")]
				[Address(RVA = "0x108260C", Offset = "0x108260C", VA = "0x108260C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002201")]
				[Address(RVA = "0x1082614", Offset = "0x1082614", VA = "0x1082614")]
				set
				{
				}
			}

			[Token(Token = "0x17000455")]
			public double clipTo
			{
				[Token(Token = "0x6002202")]
				[Address(RVA = "0x10826B8", Offset = "0x10826B8", VA = "0x10826B8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002203")]
				[Address(RVA = "0x10826C0", Offset = "0x10826C0", VA = "0x10826C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000456")]
			public bool randomOffset
			{
				[Token(Token = "0x6002204")]
				[Address(RVA = "0x10826D8", Offset = "0x10826D8", VA = "0x10826D8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002205")]
				[Address(RVA = "0x10826E0", Offset = "0x10826E0", VA = "0x10826E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000457")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x6002206")]
				[Address(RVA = "0x10826FC", Offset = "0x10826FC", VA = "0x10826FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002207")]
				[Address(RVA = "0x1082704", Offset = "0x1082704", VA = "0x1082704")]
				set
				{
				}
			}

			[Token(Token = "0x17000458")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x6002208")]
				[Address(RVA = "0x108275C", Offset = "0x108275C", VA = "0x108275C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002209")]
				[Address(RVA = "0x1082764", Offset = "0x1082764", VA = "0x1082764")]
				set
				{
				}
			}

			[Token(Token = "0x17000459")]
			public int targetMaterialID
			{
				[Token(Token = "0x600220A")]
				[Address(RVA = "0x1082780", Offset = "0x1082780", VA = "0x1082780")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600220B")]
				[Address(RVA = "0x1082788", Offset = "0x1082788", VA = "0x1082788")]
				set
				{
				}
			}

			[Token(Token = "0x1700045A")]
			public bool randomRotation
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x10827A0", Offset = "0x10827A0", VA = "0x10827A0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600220D")]
				[Address(RVA = "0x10827A8", Offset = "0x10827A8", VA = "0x10827A8")]
				set
				{
				}
			}

			[Token(Token = "0x1700045B")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x10827C4", Offset = "0x10827C4", VA = "0x10827C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x10827CC", Offset = "0x10827CC", VA = "0x10827CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700045C")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x1082824", Offset = "0x1082824", VA = "0x1082824")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002211")]
				[Address(RVA = "0x108282C", Offset = "0x108282C", VA = "0x108282C")]
				set
				{
				}
			}

			[Token(Token = "0x1700045D")]
			public bool randomScale
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x1082884", Offset = "0x1082884", VA = "0x1082884")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002213")]
				[Address(RVA = "0x108288C", Offset = "0x108288C", VA = "0x108288C")]
				set
				{
				}
			}

			[Token(Token = "0x1700045E")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x10828A8", Offset = "0x10828A8", VA = "0x10828A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002215")]
				[Address(RVA = "0x10828B0", Offset = "0x10828B0", VA = "0x10828B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700045F")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x6002216")]
				[Address(RVA = "0x1082908", Offset = "0x1082908", VA = "0x1082908")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002217")]
				[Address(RVA = "0x1082910", Offset = "0x1082910", VA = "0x1082910")]
				set
				{
				}
			}

			[Token(Token = "0x17000460")]
			public int offsetSeed
			{
				[Token(Token = "0x6002218")]
				[Address(RVA = "0x108292C", Offset = "0x108292C", VA = "0x108292C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002219")]
				[Address(RVA = "0x1082934", Offset = "0x1082934", VA = "0x1082934")]
				set
				{
				}
			}

			[Token(Token = "0x17000461")]
			public int rotationSeed
			{
				[Token(Token = "0x600221A")]
				[Address(RVA = "0x108294C", Offset = "0x108294C", VA = "0x108294C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600221B")]
				[Address(RVA = "0x1082954", Offset = "0x1082954", VA = "0x1082954")]
				set
				{
				}
			}

			[Token(Token = "0x17000462")]
			public int scaleSeed
			{
				[Token(Token = "0x600221C")]
				[Address(RVA = "0x108296C", Offset = "0x108296C", VA = "0x108296C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600221D")]
				[Address(RVA = "0x1082974", Offset = "0x1082974", VA = "0x1082974")]
				set
				{
				}
			}

			[Token(Token = "0x17000463")]
			public double spacing
			{
				[Token(Token = "0x600221E")]
				[Address(RVA = "0x108298C", Offset = "0x108298C", VA = "0x108298C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600221F")]
				[Address(RVA = "0x1082994", Offset = "0x1082994", VA = "0x1082994")]
				set
				{
				}
			}

			[Token(Token = "0x17000464")]
			public Vector2 minOffset
			{
				[Token(Token = "0x6002220")]
				[Address(RVA = "0x10829AC", Offset = "0x10829AC", VA = "0x10829AC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002221")]
				[Address(RVA = "0x10829B4", Offset = "0x10829B4", VA = "0x10829B4")]
				set
				{
				}
			}

			[Token(Token = "0x17000465")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x6002222")]
				[Address(RVA = "0x10829E8", Offset = "0x10829E8", VA = "0x10829E8")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002223")]
				[Address(RVA = "0x10829F0", Offset = "0x10829F0", VA = "0x10829F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000466")]
			public Vector3 minRotation
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0x1082A24", Offset = "0x1082A24", VA = "0x1082A24")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002225")]
				[Address(RVA = "0x1082A30", Offset = "0x1082A30", VA = "0x1082A30")]
				set
				{
				}
			}

			[Token(Token = "0x17000467")]
			public Vector3 maxRotation
			{
				[Token(Token = "0x6002226")]
				[Address(RVA = "0x1082A78", Offset = "0x1082A78", VA = "0x1082A78")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002227")]
				[Address(RVA = "0x1082A84", Offset = "0x1082A84", VA = "0x1082A84")]
				set
				{
				}
			}

			[Token(Token = "0x17000468")]
			public Vector3 minScale
			{
				[Token(Token = "0x6002228")]
				[Address(RVA = "0x1082ACC", Offset = "0x1082ACC", VA = "0x1082ACC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x1082AD8", Offset = "0x1082AD8", VA = "0x1082AD8")]
				set
				{
				}
			}

			[Token(Token = "0x17000469")]
			public Vector3 maxScale
			{
				[Token(Token = "0x600222A")]
				[Address(RVA = "0x1082B20", Offset = "0x1082B20", VA = "0x1082B20")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600222B")]
				[Address(RVA = "0x1082B30", Offset = "0x1082B30", VA = "0x1082B30")]
				set
				{
				}
			}

			[Token(Token = "0x1700046A")]
			public Type type
			{
				[Token(Token = "0x600222C")]
				[Address(RVA = "0x1082B80", Offset = "0x1082B80", VA = "0x1082B80")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x600222D")]
				[Address(RVA = "0x1082B88", Offset = "0x1082B88", VA = "0x1082B88")]
				set
				{
				}
			}

			[Token(Token = "0x1700046B")]
			public bool randomOrder
			{
				[Token(Token = "0x600222E")]
				[Address(RVA = "0x1082BA0", Offset = "0x1082BA0", VA = "0x1082BA0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600222F")]
				[Address(RVA = "0x1082BA8", Offset = "0x1082BA8", VA = "0x1082BA8")]
				set
				{
				}
			}

			[Token(Token = "0x1700046C")]
			public int randomSeed
			{
				[Token(Token = "0x6002230")]
				[Address(RVA = "0x1082BC4", Offset = "0x1082BC4", VA = "0x1082BC4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002231")]
				[Address(RVA = "0x1082BCC", Offset = "0x1082BCC", VA = "0x1082BCC")]
				set
				{
				}
			}

			[Token(Token = "0x1700046D")]
			public int count
			{
				[Token(Token = "0x6002232")]
				[Address(RVA = "0x1082BEC", Offset = "0x1082BEC", VA = "0x1082BEC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002233")]
				[Address(RVA = "0x1082BF4", Offset = "0x1082BF4", VA = "0x1082BF4")]
				set
				{
				}
			}

			[Token(Token = "0x1700046E")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x6002234")]
				[Address(RVA = "0x1082C14", Offset = "0x1082C14", VA = "0x1082C14")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x6002235")]
				[Address(RVA = "0x1082C1C", Offset = "0x1082C1C", VA = "0x1082C1C")]
				set
				{
				}
			}

			[Token(Token = "0x1700046F")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x6002236")]
				[Address(RVA = "0x1082C34", Offset = "0x1082C34", VA = "0x1082C34")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002237")]
				[Address(RVA = "0x1082C3C", Offset = "0x1082C3C", VA = "0x1082C3C")]
				set
				{
				}
			}

			[Token(Token = "0x17000470")]
			public Vector2 uvScale
			{
				[Token(Token = "0x6002238")]
				[Address(RVA = "0x1082C70", Offset = "0x1082C70", VA = "0x1082C70")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002239")]
				[Address(RVA = "0x1082C78", Offset = "0x1082C78", VA = "0x1082C78")]
				set
				{
				}
			}

			[Token(Token = "0x17000471")]
			public bool overrideNormal
			{
				[Token(Token = "0x600223A")]
				[Address(RVA = "0x1082CAC", Offset = "0x1082CAC", VA = "0x1082CAC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600223B")]
				[Address(RVA = "0x1082CB4", Offset = "0x1082CB4", VA = "0x1082CB4")]
				set
				{
				}
			}

			[Token(Token = "0x17000472")]
			public Vector3 customNormal
			{
				[Token(Token = "0x600223C")]
				[Address(RVA = "0x1082CD0", Offset = "0x1082CD0", VA = "0x1082CD0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600223D")]
				[Address(RVA = "0x1082CDC", Offset = "0x1082CDC", VA = "0x1082CDC")]
				set
				{
				}
			}

			[Token(Token = "0x600223E")]
			[Address(RVA = "0x1082D24", Offset = "0x1082D24", VA = "0x1082D24")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x600223F")]
			[Address(RVA = "0x108304C", Offset = "0x108304C", VA = "0x108304C")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x6002240")]
			[Address(RVA = "0x1082FA0", Offset = "0x1082FA0", VA = "0x1082FA0")]
			private void Init()
			{
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0x108378C", Offset = "0x108378C", VA = "0x108378C")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x6002242")]
			[Address(RVA = "0x1083FD4", Offset = "0x1083FD4", VA = "0x1083FD4")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x108401C", Offset = "0x108401C", VA = "0x108401C")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x6002244")]
			[Address(RVA = "0x1084128", Offset = "0x1084128", VA = "0x1084128")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0x108422C", Offset = "0x108422C", VA = "0x108422C")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0x1084284", Offset = "0x1084284", VA = "0x1084284")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0x108436C", Offset = "0x108436C", VA = "0x108436C")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0x10843CC", Offset = "0x10843CC", VA = "0x10843CC")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0x10844FC", Offset = "0x10844FC", VA = "0x10844FC")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0x10845D4", Offset = "0x10845D4", VA = "0x10845D4")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0x1084718", Offset = "0x1084718", VA = "0x1084718")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0x10847A0", Offset = "0x10847A0", VA = "0x10847A0")]
			public Vector3 NextExtrudeScale(double percent)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0x10848E8", Offset = "0x10848E8", VA = "0x10848E8")]
			public Vector3 NextPlaceScale()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0x1084A5C", Offset = "0x1084A5C", VA = "0x1084A5C")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0x108262C", Offset = "0x108262C", VA = "0x108262C")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x6002250")]
			[Address(RVA = "0x1084B0C", Offset = "0x1084B0C", VA = "0x1084B0C")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		private List<Channel> channels;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SplineResult lastResult;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool useLastResult;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int meshCount;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1080D28", Offset = "0x1080D28", VA = "0x1080D28", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1080D88", Offset = "0x1080D88", VA = "0x1080D88", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1080ECC", Offset = "0x1080ECC", VA = "0x1080ECC")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1080F38", Offset = "0x1080F38", VA = "0x1080F38")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1081050", Offset = "0x1081050", VA = "0x1081050")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1080DDC", Offset = "0x1080DDC", VA = "0x1080DDC")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1081148", Offset = "0x1081148", VA = "0x1081148")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1081190", Offset = "0x1081190", VA = "0x1081190")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x10811E8", Offset = "0x10811E8", VA = "0x10811E8", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1081228", Offset = "0x1081228", VA = "0x1081228")]
		private void Generate()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1081F68", Offset = "0x1081F68", VA = "0x1081F68")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1081864", Offset = "0x1081864", VA = "0x1081864")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x10824D4", Offset = "0x10824D4", VA = "0x10824D4")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x200057F")]
	[AddComponentMenu("Dreamteck/Splines/Spline Positioner")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x2000580")]
		public enum Mode
		{
			[Token(Token = "0x4001E86")]
			Percent,
			[Token(Token = "0x4001E87")]
			Distance
		}

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private Transform _applyTransform;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		[SerializeField]
		private Mode _mode;

		[Token(Token = "0x1700047D")]
		[Obsolete("Deprecated in 1.0.8. Use targetObject instead")]
		public Transform applyTransform
		{
			[Token(Token = "0x6002285")]
			[Address(RVA = "0x1088144", Offset = "0x1088144", VA = "0x1088144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002286")]
			[Address(RVA = "0x1088250", Offset = "0x1088250", VA = "0x1088250")]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public GameObject targetObject
		{
			[Token(Token = "0x6002287")]
			[Address(RVA = "0x1088160", Offset = "0x1088160", VA = "0x1088160")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002288")]
			[Address(RVA = "0x10882E0", Offset = "0x10882E0", VA = "0x10882E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public double position
		{
			[Token(Token = "0x6002289")]
			[Address(RVA = "0x108841C", Offset = "0x108841C", VA = "0x108841C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600228A")]
			[Address(RVA = "0x1088424", Offset = "0x1088424", VA = "0x1088424")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public Mode mode
		{
			[Token(Token = "0x600228B")]
			[Address(RVA = "0x1088474", Offset = "0x1088474", VA = "0x1088474")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x600228C")]
			[Address(RVA = "0x108847C", Offset = "0x108847C", VA = "0x108847C")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		[Obsolete("Deprecated in 1.0.8. Use result instead")]
		public SplineResult positionResult
		{
			[Token(Token = "0x600228D")]
			[Address(RVA = "0x10884A0", Offset = "0x10884A0", VA = "0x10884A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		[Obsolete("Deprecated in 1.0.8. Use offsettedResult instead")]
		public SplineResult offsettedPositionResult
		{
			[Token(Token = "0x600228E")]
			[Address(RVA = "0x10884A8", Offset = "0x10884A8", VA = "0x10884A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x1088888", Offset = "0x1088888", VA = "0x1088888", Slot = "10")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x1088950", Offset = "0x1088950", VA = "0x1088950", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x108896C", Offset = "0x108896C", VA = "0x108896C", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x10889C0", Offset = "0x10889C0", VA = "0x10889C0", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x1088A14", Offset = "0x1088A14", VA = "0x1088A14", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x1088AC4", Offset = "0x1088AC4", VA = "0x1088AC4", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x1088BA4", Offset = "0x1088BA4", VA = "0x1088BA4", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x1088C9C", Offset = "0x1088C9C", VA = "0x1088C9C")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x2000581")]
	[AddComponentMenu("Dreamteck/Splines/Spline Projector")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x2000582")]
		public enum Mode
		{
			[Token(Token = "0x4001E97")]
			Accurate,
			[Token(Token = "0x4001E98")]
			Cached
		}

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		[SerializeField]
		private bool _autoProject;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		[SerializeField]
		private int _subdivide;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		[SerializeField]
		private Transform _projectTarget;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		[SerializeField]
		private TS_Transform finalTarget;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private double traceFromA;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private double traceToA;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private double traceFromB;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		[SerializeField]
		public Vector2 _offset;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x17000483")]
		public Mode mode
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x1088E18", Offset = "0x1088E18", VA = "0x1088E18")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1088E20", Offset = "0x1088E20", VA = "0x1088E20")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public bool autoProject
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x1088E44", Offset = "0x1088E44", VA = "0x1088E44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600229A")]
			[Address(RVA = "0x1088E4C", Offset = "0x1088E4C", VA = "0x1088E4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public int subdivide
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0x1088E78", Offset = "0x1088E78", VA = "0x1088E78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600229C")]
			[Address(RVA = "0x1088E80", Offset = "0x1088E80", VA = "0x1088E80")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public Transform projectTarget
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0x1088EAC", Offset = "0x1088EAC", VA = "0x1088EAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600229E")]
			[Address(RVA = "0x1088F2C", Offset = "0x1088F2C", VA = "0x1088F2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		[Obsolete("Deprecated in 1.0.8. Use targetObject instead")]
		public Transform target
		{
			[Token(Token = "0x600229F")]
			[Address(RVA = "0x108901C", Offset = "0x108901C", VA = "0x108901C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x1089110", Offset = "0x1089110", VA = "0x1089110")]
			set
			{
			}
		}

		[Token(Token = "0x17000488")]
		public GameObject targetObject
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x1089038", Offset = "0x1089038", VA = "0x1089038")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x10891B4", Offset = "0x10891B4", VA = "0x10891B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000489")]
		[Obsolete("Deprecated in 1.0.8. Use result instead.")]
		public SplineResult projectResult
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x1089260", Offset = "0x1089260", VA = "0x1089260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000050")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x1089268", Offset = "0x1089268", VA = "0x1089268")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x1089308", Offset = "0x1089308", VA = "0x1089308")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x10893A8", Offset = "0x10893A8", VA = "0x10893A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x1089448", Offset = "0x1089448", VA = "0x1089448")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x10894E8", Offset = "0x10894E8", VA = "0x10894E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1089718", Offset = "0x1089718", VA = "0x1089718", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x10897B0", Offset = "0x10897B0", VA = "0x10897B0", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x108985C", Offset = "0x108985C", VA = "0x108985C", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1089650", Offset = "0x1089650", VA = "0x1089650")]
		private void GetProjectTarget()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1089908", Offset = "0x1089908", VA = "0x1089908", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x10899D0", Offset = "0x10899D0", VA = "0x10899D0", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x108A064", Offset = "0x108A064", VA = "0x108A064")]
		private void CheckTriggers()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x108A268", Offset = "0x108A268", VA = "0x108A268")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1089A88", Offset = "0x1089A88", VA = "0x1089A88")]
		private void InternalCalculateProjection()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x108A2DC", Offset = "0x108A2DC", VA = "0x108A2DC")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x2000583")]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	[AddComponentMenu("Dreamteck/Splines/Spline Renderer")]
	[RequireComponent(typeof(MeshFilter))]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int currentFrame;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		[SerializeField]
		private int _slices;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector3 vertexDirection;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool orthographic;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		private bool init;

		[Token(Token = "0x1700048A")]
		public int slices
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x108A358", Offset = "0x108A358", VA = "0x108A358")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x108A360", Offset = "0x108A360", VA = "0x108A360")]
			set
			{
			}
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x108A38C", Offset = "0x108A38C", VA = "0x108A38C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x108A3EC", Offset = "0x108A3EC", VA = "0x108A3EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x108A480", Offset = "0x108A480", VA = "0x108A480", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x108A4A4", Offset = "0x108A4A4", VA = "0x108A4A4", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x108ADF4", Offset = "0x108ADF4", VA = "0x108ADF4")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x108AF20", Offset = "0x108AF20", VA = "0x108AF20")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x108A55C", Offset = "0x108A55C", VA = "0x108A55C")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x108AF90", Offset = "0x108AF90", VA = "0x108AF90")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x2000585")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4001EB1")]
			Transform,
			[Token(Token = "0x4001EB2")]
			Rigidbody,
			[Token(Token = "0x4001EB3")]
			Rigidbody2D
		}

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Trigger[] triggerInvokeQueue;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int addTriggerIndex;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[FormerlySerializedAs("triggers")]
		[SerializeField]
		[HideInInspector]
		protected SplineTrigger[] triggers_old;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Trigger[] triggers;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		[SerializeField]
		protected CustomRotationModule _customRotations;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		protected CustomOffsetModule _customOffsets;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		[SerializeField]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		[SerializeField]
		protected Transform targetTransform;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		[SerializeField]
		protected SplineResult _result;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool setPercentOnRebuild;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private double targetPercentOnRebuild;

		[Token(Token = "0x1700048B")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x108B038", Offset = "0x108B038", VA = "0x108B038")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x108B040", Offset = "0x108B040", VA = "0x108B040")]
			set
			{
			}
		}

		[Token(Token = "0x1700048C")]
		public TransformModule motion
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x108B048", Offset = "0x108B048", VA = "0x108B048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public CustomRotationModule customRotations
		{
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x108B0C0", Offset = "0x108B0C0", VA = "0x108B0C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public CustomOffsetModule customOffsets
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x108B138", Offset = "0x108B138", VA = "0x108B138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public SplineResult result
		{
			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x108B1B0", Offset = "0x108B1B0", VA = "0x108B1B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public SplineResult offsettedResult
		{
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x10884AC", Offset = "0x10884AC", VA = "0x10884AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		public Spline.Direction direction
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x108B1B8", Offset = "0x108B1B8", VA = "0x108B1B8")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x108B1C0", Offset = "0x108B1C0", VA = "0x108B1C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000492")]
		public double clampedPercent
		{
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x108B1D8", Offset = "0x108B1D8", VA = "0x108B1D8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000493")]
		[Obsolete("Deprecated in version 1.0.7. Use motion.applyPosition instead")]
		public bool applyPosition
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x108B220", Offset = "0x108B220", VA = "0x108B220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x108B23C", Offset = "0x108B23C", VA = "0x108B23C")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		[Obsolete("Deprecated in version 1.0.7. Use motion.applyRotation instead")]
		public bool applyRotation
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x108B260", Offset = "0x108B260", VA = "0x108B260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x108B27C", Offset = "0x108B27C", VA = "0x108B27C")]
			set
			{
			}
		}

		[Token(Token = "0x17000495")]
		[Obsolete("Deprecated in version 1.0.7. Use motion.applyScale instead")]
		public bool applyScale
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x108B2A0", Offset = "0x108B2A0", VA = "0x108B2A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x108B2BC", Offset = "0x108B2BC", VA = "0x108B2BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000496")]
		[Obsolete("Deprecated in version 1.0.7. User motion.offset instead")]
		public Vector2 offset
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x108B2E0", Offset = "0x108B2E0", VA = "0x108B2E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x108B2FC", Offset = "0x108B2FC", VA = "0x108B2FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000497")]
		[Obsolete("Deprecated in version 1.0.7. User motion.rotationOffset instead")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x108B330", Offset = "0x108B330", VA = "0x108B330")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x108B350", Offset = "0x108B350", VA = "0x108B350")]
			set
			{
			}
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x108B394", Offset = "0x108B394", VA = "0x108B394", Slot = "29")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x108B398", Offset = "0x108B398", VA = "0x108B398")]
		public Node GetNextNode()
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x108B568", Offset = "0x108B568", VA = "0x108B568")]
		public void GetCurrentComputer(out SplineComputer comp, out double percent, out Spline.Direction dir)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x108B590", Offset = "0x108B590", VA = "0x108B590")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1088AEC", Offset = "0x1088AEC", VA = "0x1088AEC", Slot = "30")]
		public virtual void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x1088BD0", Offset = "0x1088BD0", VA = "0x1088BD0", Slot = "31")]
		public virtual void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x1088A90", Offset = "0x1088A90", VA = "0x1088A90", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x108BA34", Offset = "0x108BA34", VA = "0x108BA34", Slot = "13")]
		public override void EnterAddress(Node node, int pointIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x108BB8C", Offset = "0x108BB8C", VA = "0x108BB8C", Slot = "14")]
		public override void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x108BD08", Offset = "0x108BD08", VA = "0x108BD08", Slot = "17")]
		public override void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x108BE2C", Offset = "0x108BE2C", VA = "0x108BE2C", Slot = "32")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x108BE74", Offset = "0x108BE74", VA = "0x108BE74", Slot = "33")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x108BEBC", Offset = "0x108BEBC", VA = "0x108BEBC", Slot = "34")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x1089D78", Offset = "0x1089D78", VA = "0x1089D78")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x108A1CC", Offset = "0x108A1CC", VA = "0x108A1CC")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x108BFD4", Offset = "0x108BFD4", VA = "0x108BFD4")]
		protected void CheckTriggersClipped(double from, double to)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x108A160", Offset = "0x108A160", VA = "0x108A160")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x108C038", Offset = "0x108C038", VA = "0x108C038")]
		private bool MigrateTriggers()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x108838C", Offset = "0x108838C", VA = "0x108838C")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x108BEC4", Offset = "0x108BEC4", VA = "0x108BEC4")]
		private void AddTriggerToQueue(Trigger trigger)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x108C318", Offset = "0x108C318", VA = "0x108C318")]
		private void AddTrigger(Trigger trigger)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x108C3F0", Offset = "0x108C3F0", VA = "0x108C3F0")]
		public void AddTrigger(UnityAction call, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x108C48C", Offset = "0x108C48C", VA = "0x108C48C")]
		public void AddTrigger(UnityAction<int> call, int value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x108C538", Offset = "0x108C538", VA = "0x108C538")]
		public void AddTrigger(UnityAction<float> call, float value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x108C5DC", Offset = "0x108C5DC", VA = "0x108C5DC")]
		public void AddTrigger(UnityAction<double> call, double value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x108C680", Offset = "0x108C680", VA = "0x108C680")]
		public void AddTrigger(UnityAction<string> call, string value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x108C72C", Offset = "0x108C72C", VA = "0x108C72C")]
		public void AddTrigger(UnityAction<bool> call, bool value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x108C7D8", Offset = "0x108C7D8", VA = "0x108C7D8")]
		public void AddTrigger(UnityAction<GameObject> call, GameObject value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x108C884", Offset = "0x108C884", VA = "0x108C884")]
		public void AddTrigger(UnityAction<Transform> call, Transform value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x108B9F4", Offset = "0x108B9F4", VA = "0x108B9F4")]
		public void EvaluateClipped(SplineResult result, double clippedPercent)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x108C94C", Offset = "0x108C94C", VA = "0x108C94C")]
		public Vector3 EvaluatePositionClipped(double clippedPercent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x108B728", Offset = "0x108B728", VA = "0x108B728")]
		public double TravelClipped(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x108C988", Offset = "0x108C988", VA = "0x108C988")]
		public SplineResult ProjectClipped(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1088CA0", Offset = "0x1088CA0", VA = "0x1088CA0")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class SplineUser : MonoBehaviour
	{
		[Token(Token = "0x2000587")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4001ED3")]
			Update,
			[Token(Token = "0x4001ED4")]
			FixedUpdate,
			[Token(Token = "0x4001ED5")]
			LateUpdate
		}

		[Token(Token = "0x2000588")]
		[CompilerGenerated]
		private sealed class <UpdateSubscribersRoutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineUser <>4__this;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600233F")]
				[Address(RVA = "0x1092060", Offset = "0x1092060", VA = "0x1092060", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002341")]
				[Address(RVA = "0x10920A8", Offset = "0x10920A8", VA = "0x10920A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x108E7B0", Offset = "0x108E7B0", VA = "0x108E7B0")]
			[DebuggerHidden]
			public <UpdateSubscribersRoutine>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x1092000", Offset = "0x1092000", VA = "0x1092000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x1092004", Offset = "0x1092004", VA = "0x1092004", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x1092068", Offset = "0x1092068", VA = "0x1092068", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineAddress _address;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SplineUser[] subscribers;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser _user;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private double _resolution;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		[SerializeField]
		private bool _uniformSample;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		[SerializeField]
		private bool _uniformPreserveClipRange;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private SplineResult[] _samples;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _clippedSamples;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double animResolution;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		protected bool sampleUser;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool rebuild;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool sample;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool getClippedSamples;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform trs;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Thread buildThread;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool postThread;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool threadSample;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool threadWork;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool _threadWorking;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object locker;

		[Token(Token = "0x17000498")]
		public SplineUser user
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x108CAB8", Offset = "0x108CAB8", VA = "0x108CAB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x108CAC0", Offset = "0x108CAC0", VA = "0x108CAC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000499")]
		public SplineUser rootUser
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x108CD48", Offset = "0x108CD48", VA = "0x108CD48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public SplineComputer computer
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x108A29C", Offset = "0x108A29C", VA = "0x108A29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x108CE38", Offset = "0x108CE38", VA = "0x108CE38")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public double resolution
		{
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0x108D51C", Offset = "0x108D51C", VA = "0x108D51C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x108D524", Offset = "0x108D524", VA = "0x108D524")]
			set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public double clipFrom
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x108D55C", Offset = "0x108D55C", VA = "0x108D55C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x108D564", Offset = "0x108D564", VA = "0x108D564")]
			set
			{
			}
		}

		[Token(Token = "0x1700049D")]
		public double clipTo
		{
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x108D5F0", Offset = "0x108D5F0", VA = "0x108D5F0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x108D5F8", Offset = "0x108D5F8", VA = "0x108D5F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public bool autoUpdate
		{
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x108D684", Offset = "0x108D684", VA = "0x108D684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x108D68C", Offset = "0x108D68C", VA = "0x108D68C")]
			set
			{
			}
		}

		[Token(Token = "0x1700049F")]
		public bool loopSamples
		{
			[Token(Token = "0x6002300")]
			[Address(RVA = "0x108D6B8", Offset = "0x108D6B8", VA = "0x108D6B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x108D6C0", Offset = "0x108D6C0", VA = "0x108D6C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		public bool uniformSample
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x108D6EC", Offset = "0x108D6EC", VA = "0x108D6EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x108D6F4", Offset = "0x108D6F4", VA = "0x108D6F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public bool uniformPreserveClipRange
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0x108D71C", Offset = "0x108D71C", VA = "0x108D71C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002305")]
			[Address(RVA = "0x108D724", Offset = "0x108D724", VA = "0x108D724")]
			set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		public double span
		{
			[Token(Token = "0x6002306")]
			[Address(RVA = "0x108D74C", Offset = "0x108D74C", VA = "0x108D74C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004A3")]
		public SplineAddress address
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0x108D4A0", Offset = "0x108D4A0", VA = "0x108D4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0x108D780", Offset = "0x108D780", VA = "0x108D780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A5")]
		public SplineResult[] samples
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x108A2B8", Offset = "0x108A2B8", VA = "0x108A2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		public SplineResult[] clippedSamples
		{
			[Token(Token = "0x600230A")]
			[Address(RVA = "0x108ADB4", Offset = "0x108ADB4", VA = "0x108ADB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		protected bool willRebuild
		{
			[Token(Token = "0x600230B")]
			[Address(RVA = "0x108E418", Offset = "0x108E418", VA = "0x108E418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A8")]
		public bool threadWorking
		{
			[Token(Token = "0x600230C")]
			[Address(RVA = "0x108E420", Offset = "0x108E420", VA = "0x108E420")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1089500", Offset = "0x1089500", VA = "0x1089500", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x108E4E0", Offset = "0x108E4E0", VA = "0x108E4E0", Slot = "5")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x108E4E4", Offset = "0x108E4E4", VA = "0x108E4E4", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x108E598", Offset = "0x108E598", VA = "0x108E598", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x108E630", Offset = "0x108E630", VA = "0x108E630", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x108E684", Offset = "0x108E684", VA = "0x108E684", Slot = "9")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x10888B8", Offset = "0x10888B8", VA = "0x10888B8", Slot = "10")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x108E6D8", Offset = "0x108E6D8", VA = "0x108E6D8", Slot = "11")]
		public virtual void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x108E73C", Offset = "0x108E73C", VA = "0x108E73C")]
		[IteratorStateMachine(typeof(<UpdateSubscribersRoutine>d__82))]
		private IEnumerator UpdateSubscribersRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x108E7D8", Offset = "0x108E7D8", VA = "0x108E7D8", Slot = "12")]
		public virtual void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x108F0A0", Offset = "0x108F0A0", VA = "0x108F0A0")]
		public void GetClippedSamplesImmediate()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x108BAE8", Offset = "0x108BAE8", VA = "0x108BAE8", Slot = "13")]
		public virtual void EnterAddress(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x108BC50", Offset = "0x108BC50", VA = "0x108BC50", Slot = "14")]
		public virtual void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x108F0C8", Offset = "0x108F0C8", VA = "0x108F0C8", Slot = "15")]
		public virtual void CollapseAddress()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x108F10C", Offset = "0x108F10C", VA = "0x108F10C", Slot = "16")]
		public virtual void ClearAddress()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x108BDA4", Offset = "0x108BDA4", VA = "0x108BDA4", Slot = "17")]
		public virtual void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x108F18C", Offset = "0x108F18C", VA = "0x108F18C")]
		private void Update()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x108F430", Offset = "0x108F430", VA = "0x108F430")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x108F444", Offset = "0x108F444", VA = "0x108F444")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x108EFA4", Offset = "0x108EFA4", VA = "0x108EFA4")]
		private void UpdateSubscribers()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x108F19C", Offset = "0x108F19C", VA = "0x108F19C")]
		private void RunMain()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x108F584", Offset = "0x108F584", VA = "0x108F584")]
		private void RunThread()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x108F7E8", Offset = "0x108F7E8", VA = "0x108F7E8", Slot = "18")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x10899CC", Offset = "0x10899CC", VA = "0x10899CC", Slot = "19")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x108F7EC", Offset = "0x108F7EC", VA = "0x108F7EC", Slot = "20")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x108F7F0", Offset = "0x108F7F0", VA = "0x108F7F0", Slot = "21")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x108F7F4", Offset = "0x108F7F4", VA = "0x108F7F4")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x108E8B8", Offset = "0x108E8B8", VA = "0x108E8B8")]
		private void SampleComputer()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x108D83C", Offset = "0x108D83C", VA = "0x108D83C")]
		private void GetClippedSamples()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x108F878", Offset = "0x108F878", VA = "0x108F878", Slot = "22")]
		public virtual SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x108FE04", Offset = "0x108FE04", VA = "0x108FE04", Slot = "23")]
		public virtual void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1090358", Offset = "0x1090358", VA = "0x1090358", Slot = "24")]
		public virtual Vector3 EvaluatePosition(double percent, bool overrideUniformClipRange = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x108B204", Offset = "0x108B204", VA = "0x108B204")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x10908EC", Offset = "0x10908EC", VA = "0x10908EC")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x108C930", Offset = "0x108C930", VA = "0x108C930")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x108B5F0", Offset = "0x108B5F0", VA = "0x108B5F0")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x108FDC8", Offset = "0x108FDC8", VA = "0x108FDC8")]
		public int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1090A24", Offset = "0x1090A24", VA = "0x1090A24")]
		public int GetClippedSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1090A5C", Offset = "0x1090A5C", VA = "0x1090A5C", Slot = "25")]
		public virtual SplineResult Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1090B14", Offset = "0x1090B14", VA = "0x1090B14", Slot = "26")]
		public virtual void Project(SplineResult result, Vector3 point, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x1091A60", Offset = "0x1091A60", VA = "0x1091A60", Slot = "27")]
		public virtual double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x108D288", Offset = "0x108D288", VA = "0x108D288")]
		private void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x108D084", Offset = "0x108D084", VA = "0x108D084")]
		private void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1091DC4", Offset = "0x1091DC4", VA = "0x1091DC4", Slot = "28")]
		public virtual float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x108F458", Offset = "0x108F458", VA = "0x108F458")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x108E428", Offset = "0x108E428", VA = "0x108E428")]
		private bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x108C99C", Offset = "0x108C99C", VA = "0x108C99C")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x2000589")]
	[RequireComponent(typeof(MeshFilter))]
	[AddComponentMenu("Dreamteck/Splines/Surface Generator")]
	[RequireComponent(typeof(MeshRenderer))]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		private float _expand;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		[SerializeField]
		private float _extrude;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		[SerializeField]
		private Vector2 _sideUvScale;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		[SerializeField]
		private SplineComputer _extrudeComputer;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		[SerializeField]
		private SplineResult[] extrudeResults;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private int[] capTris;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		[SerializeField]
		private double _extrudeFrom;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		[SerializeField]
		private double _extrudeTo;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		[SerializeField]
		private bool _uniformUvs;

		[Token(Token = "0x170004AB")]
		public float expand
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0x10920B0", Offset = "0x10920B0", VA = "0x10920B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x10920B8", Offset = "0x10920B8", VA = "0x10920B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004AC")]
		public float extrude
		{
			[Token(Token = "0x6002344")]
			[Address(RVA = "0x10920DC", Offset = "0x10920DC", VA = "0x10920DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002345")]
			[Address(RVA = "0x10920E4", Offset = "0x10920E4", VA = "0x10920E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0x1092108", Offset = "0x1092108", VA = "0x1092108")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002347")]
			[Address(RVA = "0x1092110", Offset = "0x1092110", VA = "0x1092110")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6002348")]
			[Address(RVA = "0x1092134", Offset = "0x1092134", VA = "0x1092134")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002349")]
			[Address(RVA = "0x109213C", Offset = "0x109213C", VA = "0x109213C")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x600234A")]
			[Address(RVA = "0x1092160", Offset = "0x1092160", VA = "0x1092160")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600234B")]
			[Address(RVA = "0x109216C", Offset = "0x109216C", VA = "0x109216C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x10921B4", Offset = "0x10921B4", VA = "0x10921B4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x10921C0", Offset = "0x10921C0", VA = "0x10921C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		public SplineComputer extrudeComputer
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x1092208", Offset = "0x1092208", VA = "0x1092208")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x1092210", Offset = "0x1092210", VA = "0x1092210")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		public bool uniformUvs
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x1092330", Offset = "0x1092330", VA = "0x1092330")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x1092338", Offset = "0x1092338", VA = "0x1092338")]
			set
			{
			}
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1092360", Offset = "0x1092360", VA = "0x1092360", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x10923C0", Offset = "0x10923C0", VA = "0x10923C0", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1092400", Offset = "0x1092400", VA = "0x1092400")]
		public void Generate()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x1094260", Offset = "0x1094260", VA = "0x1094260")]
		private void GenerateCapTris(bool flip)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x10945CC", Offset = "0x10945CC", VA = "0x10945CC")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x10941A4", Offset = "0x10941A4", VA = "0x10941A4")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1094300", Offset = "0x1094300", VA = "0x1094300")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1093CFC", Offset = "0x1093CFC", VA = "0x1093CFC")]
		private void GetProjectedVertices(Vector3[] points, Vector3 normal, Vector3 center, int count = 0)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1094728", Offset = "0x1094728", VA = "0x1094728")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[AddComponentMenu("Dreamteck/Splines/Tube Generator")]
	[RequireComponent(typeof(MeshRenderer))]
	[RequireComponent(typeof(MeshFilter))]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x200058B")]
		public enum CapMethod
		{
			[Token(Token = "0x4001EF1")]
			None,
			[Token(Token = "0x4001EF2")]
			Flat,
			[Token(Token = "0x4001EF3")]
			Round
		}

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		private int _sides;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		[SerializeField]
		private CapMethod _capMode;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		[SerializeField]
		private float _integrity;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int bodyVertexCount;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int bodyTrisCount;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int capVertexCount;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int capTrisCount;

		[Token(Token = "0x170004B3")]
		public int sides
		{
			[Token(Token = "0x600235B")]
			[Address(RVA = "0x10948FC", Offset = "0x10948FC", VA = "0x10948FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600235C")]
			[Address(RVA = "0x1094904", Offset = "0x1094904", VA = "0x1094904")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		public CapMethod capMode
		{
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x1094934", Offset = "0x1094934", VA = "0x1094934")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x600235E")]
			[Address(RVA = "0x109493C", Offset = "0x109493C", VA = "0x109493C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public int roundCapLatitude
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0x1094960", Offset = "0x1094960", VA = "0x1094960")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x1094968", Offset = "0x1094968", VA = "0x1094968")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public float integrity
		{
			[Token(Token = "0x6002361")]
			[Address(RVA = "0x10949A0", Offset = "0x10949A0", VA = "0x10949A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002362")]
			[Address(RVA = "0x10949A8", Offset = "0x10949A8", VA = "0x10949A8")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public float capUVScale
		{
			[Token(Token = "0x6002363")]
			[Address(RVA = "0x10949CC", Offset = "0x10949CC", VA = "0x10949CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002364")]
			[Address(RVA = "0x10949D4", Offset = "0x10949D4", VA = "0x10949D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		private bool useCap
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x10949F8", Offset = "0x10949F8", VA = "0x10949F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1094B68", Offset = "0x1094B68", VA = "0x1094B68", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1094B70", Offset = "0x1094B70", VA = "0x1094B70", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x1094BD0", Offset = "0x1094BD0", VA = "0x1094BD0", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x1094D4C", Offset = "0x1094D4C", VA = "0x1094D4C")]
		private void Generate()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1095448", Offset = "0x1095448", VA = "0x1095448")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1095B24", Offset = "0x1095B24", VA = "0x1095B24")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1096DF0", Offset = "0x1096DF0", VA = "0x1096DF0")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[RequireComponent(typeof(MeshRenderer))]
	[RequireComponent(typeof(MeshFilter))]
	[AddComponentMenu("Dreamteck/Splines/Waveform Generator")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x200058D")]
		public enum Axis
		{
			[Token(Token = "0x4001EF9")]
			X,
			[Token(Token = "0x4001EFA")]
			Y,
			[Token(Token = "0x4001EFB")]
			Z
		}

		[Token(Token = "0x200058E")]
		public enum Space
		{
			[Token(Token = "0x4001EFD")]
			World,
			[Token(Token = "0x4001EFE")]
			Local
		}

		[Token(Token = "0x200058F")]
		public enum UVWrapMode
		{
			[Token(Token = "0x4001F00")]
			Clamp,
			[Token(Token = "0x4001F01")]
			UniformX,
			[Token(Token = "0x4001F02")]
			UniformY,
			[Token(Token = "0x4001F03")]
			Uniform
		}

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		private Axis _axis;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		[SerializeField]
		private bool _symmetry;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x170004B9")]
		public Axis axis
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0x1096E64", Offset = "0x1096E64", VA = "0x1096E64")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x1096E6C", Offset = "0x1096E6C", VA = "0x1096E6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		public bool symmetry
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x1096E90", Offset = "0x1096E90", VA = "0x1096E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x1096E98", Offset = "0x1096E98", VA = "0x1096E98")]
			set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x1096EC0", Offset = "0x1096EC0", VA = "0x1096EC0")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x1096EC8", Offset = "0x1096EC8", VA = "0x1096EC8")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public int slices
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x1096EEC", Offset = "0x1096EEC", VA = "0x1096EEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0x1096EF4", Offset = "0x1096EF4", VA = "0x1096EF4")]
			set
			{
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1096F20", Offset = "0x1096F20", VA = "0x1096F20", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1096F80", Offset = "0x1096F80", VA = "0x1096F80", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x10978B0", Offset = "0x10978B0", VA = "0x10978B0", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x10978B8", Offset = "0x10978B8", VA = "0x10978B8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1096F9C", Offset = "0x1096F9C", VA = "0x1096F9C")]
		private void Generate()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x10978C0", Offset = "0x10978C0", VA = "0x10978C0")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000590")]
	public class CustomOffsetModule
	{
		[Serializable]
		[Token(Token = "0x2000591")]
		public class Key
		{
			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector2 _offset;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170004BE")]
			public Vector2 offset
			{
				[Token(Token = "0x6002380")]
				[Address(RVA = "0x1098000", Offset = "0x1098000", VA = "0x1098000")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002381")]
				[Address(RVA = "0x1098008", Offset = "0x1098008", VA = "0x1098008")]
				set
				{
				}
			}

			[Token(Token = "0x170004BF")]
			public double center
			{
				[Token(Token = "0x6002382")]
				[Address(RVA = "0x1098010", Offset = "0x1098010", VA = "0x1098010")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002383")]
				[Address(RVA = "0x1098018", Offset = "0x1098018", VA = "0x1098018")]
				set
				{
				}
			}

			[Token(Token = "0x170004C0")]
			public double from
			{
				[Token(Token = "0x6002384")]
				[Address(RVA = "0x1098034", Offset = "0x1098034", VA = "0x1098034")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002385")]
				[Address(RVA = "0x109803C", Offset = "0x109803C", VA = "0x109803C")]
				set
				{
				}
			}

			[Token(Token = "0x170004C1")]
			public double to
			{
				[Token(Token = "0x6002386")]
				[Address(RVA = "0x1098058", Offset = "0x1098058", VA = "0x1098058")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002387")]
				[Address(RVA = "0x1098060", Offset = "0x1098060", VA = "0x1098060")]
				set
				{
				}
			}

			[Token(Token = "0x170004C2")]
			public bool loop
			{
				[Token(Token = "0x6002388")]
				[Address(RVA = "0x109807C", Offset = "0x109807C", VA = "0x109807C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002389")]
				[Address(RVA = "0x1098084", Offset = "0x1098084", VA = "0x1098084")]
				set
				{
				}
			}

			[Token(Token = "0x170004C3")]
			public double position
			{
				[Token(Token = "0x600238A")]
				[Address(RVA = "0x1097F80", Offset = "0x1097F80", VA = "0x1097F80")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600238B")]
				[Address(RVA = "0x1098090", Offset = "0x1098090", VA = "0x1098090")]
				set
				{
				}
			}

			[Token(Token = "0x600238C")]
			[Address(RVA = "0x1097B2C", Offset = "0x1097B2C", VA = "0x1097B2C")]
			public Key(Vector2 o, double f, double t, double c)
			{
			}

			[Token(Token = "0x600238D")]
			[Address(RVA = "0x1097FE4", Offset = "0x1097FE4", VA = "0x1097FE4")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x170004BD")]
		public float blend
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x1097924", Offset = "0x1097924", VA = "0x1097924")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600237C")]
			[Address(RVA = "0x109792C", Offset = "0x109792C", VA = "0x109792C")]
			set
			{
			}
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1097948", Offset = "0x1097948", VA = "0x1097948")]
		public CustomOffsetModule()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1097A0C", Offset = "0x1097A0C", VA = "0x1097A0C")]
		public void AddKey(Vector2 offset, double f, double t, double c)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1097C0C", Offset = "0x1097C0C", VA = "0x1097C0C")]
		public Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000592")]
	public class CustomRotationModule
	{
		[Serializable]
		[Token(Token = "0x2000593")]
		public class Key
		{
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector3 _rotation;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170004C5")]
			public Vector3 rotation
			{
				[Token(Token = "0x6002393")]
				[Address(RVA = "0x1098920", Offset = "0x1098920", VA = "0x1098920")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002394")]
				[Address(RVA = "0x109892C", Offset = "0x109892C", VA = "0x109892C")]
				set
				{
				}
			}

			[Token(Token = "0x170004C6")]
			public double center
			{
				[Token(Token = "0x6002395")]
				[Address(RVA = "0x1098938", Offset = "0x1098938", VA = "0x1098938")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002396")]
				[Address(RVA = "0x1098940", Offset = "0x1098940", VA = "0x1098940")]
				set
				{
				}
			}

			[Token(Token = "0x170004C7")]
			public double from
			{
				[Token(Token = "0x6002397")]
				[Address(RVA = "0x109895C", Offset = "0x109895C", VA = "0x109895C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002398")]
				[Address(RVA = "0x1098964", Offset = "0x1098964", VA = "0x1098964")]
				set
				{
				}
			}

			[Token(Token = "0x170004C8")]
			public double to
			{
				[Token(Token = "0x6002399")]
				[Address(RVA = "0x1098980", Offset = "0x1098980", VA = "0x1098980")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600239A")]
				[Address(RVA = "0x1098988", Offset = "0x1098988", VA = "0x1098988")]
				set
				{
				}
			}

			[Token(Token = "0x170004C9")]
			public bool loop
			{
				[Token(Token = "0x600239B")]
				[Address(RVA = "0x10989A4", Offset = "0x10989A4", VA = "0x10989A4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600239C")]
				[Address(RVA = "0x10989AC", Offset = "0x10989AC", VA = "0x10989AC")]
				set
				{
				}
			}

			[Token(Token = "0x170004CA")]
			public double position
			{
				[Token(Token = "0x600239D")]
				[Address(RVA = "0x10988A0", Offset = "0x10988A0", VA = "0x10988A0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600239E")]
				[Address(RVA = "0x10989B8", Offset = "0x10989B8", VA = "0x10989B8")]
				set
				{
				}
			}

			[Token(Token = "0x600239F")]
			[Address(RVA = "0x1098314", Offset = "0x1098314", VA = "0x1098314")]
			public Key(Vector3 r, double f, double t, double c)
			{
			}

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x1098904", Offset = "0x1098904", VA = "0x1098904")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x170004C4")]
		public float blend
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x1098104", Offset = "0x1098104", VA = "0x1098104")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x109810C", Offset = "0x109810C", VA = "0x109810C")]
			set
			{
			}
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1098128", Offset = "0x1098128", VA = "0x1098128")]
		public CustomRotationModule()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x10981EC", Offset = "0x10981EC", VA = "0x10981EC")]
		public void AddKey(Vector3 rotation, double f, double t, double c)
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x1098404", Offset = "0x1098404", VA = "0x1098404")]
		public Quaternion Evaluate(Quaternion baseRotation, double time)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000594")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x2000595")]
		public enum Iteration
		{
			[Token(Token = "0x4001F1C")]
			Ordered,
			[Token(Token = "0x4001F1D")]
			Random
		}

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x170004CB")]
		public int randomSeed
		{
			[Token(Token = "0x60023A1")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023A2")]
			set
			{
			}
		}

		[Token(Token = "0x60023A3")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x60023A4")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x60023A5")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x60023A6")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000596")]
	public class Spline
	{
		[Token(Token = "0x2000597")]
		public enum Direction
		{
			[Token(Token = "0x4001F26")]
			Forward = 1,
			[Token(Token = "0x4001F27")]
			Backward = -1
		}

		[Token(Token = "0x2000598")]
		public enum Type
		{
			[Token(Token = "0x4001F29")]
			Hermite,
			[Token(Token = "0x4001F2A")]
			BSpline,
			[Token(Token = "0x4001F2B")]
			Bezier,
			[Token(Token = "0x4001F2C")]
			Linear
		}

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 0.9999f)]
		public double precision;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] hermitePoints;

		[Token(Token = "0x170004CC")]
		public bool isClosed
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x1098A2C", Offset = "0x1098A2C", VA = "0x1098A2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x1098A60", Offset = "0x1098A60", VA = "0x1098A60")]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public double moveStep
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x1098A64", Offset = "0x1098A64", VA = "0x1098A64")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x1098B04", Offset = "0x1098B04", VA = "0x1098B04")]
			set
			{
			}
		}

		[Token(Token = "0x170004CE")]
		public int iterations
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x1098AA8", Offset = "0x1098AA8", VA = "0x1098AA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x1098B08", Offset = "0x1098B08", VA = "0x1098B08")]
			set
			{
			}
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x1098B0C", Offset = "0x1098B0C", VA = "0x1098B0C")]
		public Spline(Type t)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x1098BE8", Offset = "0x1098BE8", VA = "0x1098BE8")]
		public Spline(Type t, double p)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1098CD4", Offset = "0x1098CD4", VA = "0x1098CD4")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x1098EDC", Offset = "0x1098EDC", VA = "0x1098EDC")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1099448", Offset = "0x1099448", VA = "0x1099448")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x1099624", Offset = "0x1099624", VA = "0x1099624")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x1099B40", Offset = "0x1099B40", VA = "0x1099B40")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1098E50", Offset = "0x1098E50", VA = "0x1098E50")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x1099C0C", Offset = "0x1099C0C", VA = "0x1099C0C")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x109A45C", Offset = "0x109A45C", VA = "0x109A45C")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x109A4DC", Offset = "0x109A4DC", VA = "0x109A4DC")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1099D5C", Offset = "0x1099D5C", VA = "0x1099D5C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x109A5A4", Offset = "0x109A5A4", VA = "0x109A5A4")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x109A7D4", Offset = "0x109A7D4", VA = "0x109A7D4")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x109A9A0", Offset = "0x109A9A0", VA = "0x109A9A0")]
		public double Travel(double start, float distance, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1099B70", Offset = "0x1099B70", VA = "0x1099B70")]
		public void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x109A508", Offset = "0x109A508", VA = "0x109A508")]
		public void EvaluateTangent(ref Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x109923C", Offset = "0x109923C", VA = "0x109923C")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x109AD6C", Offset = "0x109AD6C", VA = "0x109AD6C")]
		public void Break()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x109AD74", Offset = "0x109AD74", VA = "0x109AD74")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x109AFAC", Offset = "0x109AFAC", VA = "0x109AFAC")]
		public void Close()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x109B044", Offset = "0x109B044", VA = "0x109B044")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x109ABE8", Offset = "0x109ABE8", VA = "0x109ABE8")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x109AD44", Offset = "0x109AD44", VA = "0x109AD44")]
		private void GetTangent(ref Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x109BB38", Offset = "0x109BB38", VA = "0x109BB38")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x109BF88", Offset = "0x109BF88", VA = "0x109BF88")]
		private void LinearGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x109B99C", Offset = "0x109B99C", VA = "0x109B99C")]
		private void BSPGetPoint(ref Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x109B850", Offset = "0x109B850", VA = "0x109B850")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x109BE14", Offset = "0x109BE14", VA = "0x109BE14")]
		private void BezierGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x109B6BC", Offset = "0x109B6BC", VA = "0x109B6BC")]
		private void HermiteGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x109BC74", Offset = "0x109BC74", VA = "0x109BC74")]
		private void GetHermiteTangent(ref Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x109B3F8", Offset = "0x109B3F8", VA = "0x109B3F8")]
		private void GetHermitePoints(int i)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000599")]
	public class SplineAddress
	{
		[Serializable]
		[Token(Token = "0x200059A")]
		public class Element
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer computer;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int _startPoint;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _endPoint;

			[Token(Token = "0x170004D3")]
			public int startPoint
			{
				[Token(Token = "0x60023E8")]
				[Address(RVA = "0x109E8B4", Offset = "0x109E8B4", VA = "0x109E8B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60023E9")]
				[Address(RVA = "0x109E01C", Offset = "0x109E01C", VA = "0x109E01C")]
				set
				{
				}
			}

			[Token(Token = "0x170004D4")]
			public int endPoint
			{
				[Token(Token = "0x60023EA")]
				[Address(RVA = "0x109DFEC", Offset = "0x109DFEC", VA = "0x109DFEC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60023EB")]
				[Address(RVA = "0x109C1E8", Offset = "0x109C1E8", VA = "0x109C1E8")]
				set
				{
				}
			}

			[Token(Token = "0x170004D5")]
			public double startPercent
			{
				[Token(Token = "0x60023EC")]
				[Address(RVA = "0x109CF30", Offset = "0x109CF30", VA = "0x109CF30")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170004D6")]
			public double endPercent
			{
				[Token(Token = "0x60023ED")]
				[Address(RVA = "0x109CF68", Offset = "0x109CF68", VA = "0x109CF68")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170004D7")]
			public int span
			{
				[Token(Token = "0x60023EE")]
				[Address(RVA = "0x109CE98", Offset = "0x109CE98", VA = "0x109CE98")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x109C1D8", Offset = "0x109C1D8", VA = "0x109C1D8")]
			public Element()
			{
			}
		}

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Element[] _elements;

		[Token(Token = "0x170004CF")]
		public int depth
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x109C064", Offset = "0x109C064", VA = "0x109C064")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004D0")]
		public SplineComputer root
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x109C07C", Offset = "0x109C07C", VA = "0x109C07C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x109C0B4", Offset = "0x109C0B4", VA = "0x109C0B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public Element[] elements
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x109C344", Offset = "0x109C344", VA = "0x109C344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		public double moveStep
		{
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x109C34C", Offset = "0x109C34C", VA = "0x109C34C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x109C544", Offset = "0x109C544", VA = "0x109C544")]
		public SplineAddress(SplineComputer rootComp)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x109C67C", Offset = "0x109C67C", VA = "0x109C67C")]
		public SplineAddress(SplineAddress copy)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x109C824", Offset = "0x109C824", VA = "0x109C824")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x109C89C", Offset = "0x109C89C", VA = "0x109C89C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x109CBC4", Offset = "0x109CBC4", VA = "0x109CBC4")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x109CFA8", Offset = "0x109CFA8", VA = "0x109CFA8")]
		public double Project(Vector3 point, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x109D574", Offset = "0x109D574", VA = "0x109D574")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x109D6A8", Offset = "0x109D6A8", VA = "0x109D6A8")]
		public double Travel(double start, float distance, Spline.Direction direction, int iterations)
		{
			return default(double);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x109D898", Offset = "0x109D898", VA = "0x109D898")]
		public int GetElementIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x109D1BC", Offset = "0x109D1BC", VA = "0x109D1BC")]
		public double PathToLocalPercent(double pathPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x109D3A8", Offset = "0x109D3A8", VA = "0x109D3A8")]
		public double LocalToPathPercent(double localPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x109C440", Offset = "0x109C440", VA = "0x109C440")]
		public int GetTotalPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x109C9A4", Offset = "0x109C9A4", VA = "0x109C9A4")]
		public void GetEvaluationValues(double inputPercent, out SplineComputer computer, out double percent, out Spline.Direction direction)
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x109DA60", Offset = "0x109DA60", VA = "0x109DA60")]
		private int LocalToPathPoint(int point, int elementIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x109DB48", Offset = "0x109DB48", VA = "0x109DB48")]
		private void PathToLocalPoint(int point, out int computerIndex, out int localPoint)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x109DC3C", Offset = "0x109DC3C", VA = "0x109DC3C")]
		[Obsolete("Enter is obsolete, use AddSpline instead")]
		public void Enter(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x109DC40", Offset = "0x109DC40", VA = "0x109DC40")]
		public void AddSpline(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x109E13C", Offset = "0x109E13C", VA = "0x109E13C")]
		public void AddSpline(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x109E4E0", Offset = "0x109E4E0", VA = "0x109E4E0")]
		public void Exit(int exitDepth)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x109E65C", Offset = "0x109E65C", VA = "0x109E65C")]
		public void Collapse()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x109E7DC", Offset = "0x109E7DC", VA = "0x109E7DC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x109C74C", Offset = "0x109C74C", VA = "0x109C74C")]
		private void AddElement(Element element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059B")]
	public struct SplinePoint
	{
		[Token(Token = "0x200059C")]
		public enum Type
		{
			[Token(Token = "0x4001F39")]
			SmoothMirrored,
			[Token(Token = "0x4001F3A")]
			Broken,
			[Token(Token = "0x4001F3B")]
			SmoothFree
		}

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[FormerlySerializedAs("type")]
		public Type _type;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x170004D8")]
		public Type type
		{
			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x109E8BC", Offset = "0x109E8BC", VA = "0x109E8BC")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x109B338", Offset = "0x109B338", VA = "0x109B338")]
			set
			{
			}
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x109E8F0", Offset = "0x109E8F0", VA = "0x109E8F0")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x109EA9C", Offset = "0x109EA9C", VA = "0x109EA9C")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x109EB50", Offset = "0x109EB50", VA = "0x109EB50")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x109B370", Offset = "0x109B370", VA = "0x109B370")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x109B3B4", Offset = "0x109B3B4", VA = "0x109B3B4")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x109EED4", Offset = "0x109EED4", VA = "0x109EED4")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x109EF88", Offset = "0x109EF88", VA = "0x109EF88")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x109F048", Offset = "0x109F048", VA = "0x109F048")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x109F098", Offset = "0x109F098", VA = "0x109F098")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x109F0E0", Offset = "0x109F0E0", VA = "0x109F0E0")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x109E8C4", Offset = "0x109E8C4", VA = "0x109E8C4")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x109ED20", Offset = "0x109ED20", VA = "0x109ED20")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x109EB98", Offset = "0x109EB98", VA = "0x109EB98")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x109ED4C", Offset = "0x109ED4C", VA = "0x109ED4C")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059D")]
	public class SplineResult
	{
		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 direction;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x170004D9")]
		public Quaternion rotation
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x109F200", Offset = "0x109F200", VA = "0x109F200")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170004DA")]
		public Vector3 right
		{
			[Token(Token = "0x6002401")]
			[Address(RVA = "0x1096B6C", Offset = "0x1096B6C", VA = "0x1096B6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x109F340", Offset = "0x109F340", VA = "0x109F340")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, float t)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x109F4D0", Offset = "0x109F4D0", VA = "0x109F4D0")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, double t)
		{
			return null;
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x109F558", Offset = "0x109F558", VA = "0x109F558")]
		public static void Lerp(SplineResult a, SplineResult b, double t, SplineResult target)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x109F3C8", Offset = "0x109F3C8", VA = "0x109F3C8")]
		public static void Lerp(SplineResult a, SplineResult b, float t, SplineResult target)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x109F660", Offset = "0x109F660", VA = "0x109F660")]
		public void Lerp(SplineResult b, double t)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x109F668", Offset = "0x109F668", VA = "0x109F668")]
		public void Lerp(SplineResult b, float t)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x109F670", Offset = "0x109F670", VA = "0x109F670")]
		public void CopyFrom(SplineResult input)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1099C84", Offset = "0x1099C84", VA = "0x1099C84")]
		public SplineResult()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x109F6CC", Offset = "0x109F6CC", VA = "0x109F6CC")]
		public SplineResult(Vector3 p, Vector3 n, Vector3 d, Color c, float s, double t)
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x109F844", Offset = "0x109F844", VA = "0x109F844")]
		public SplineResult(SplineResult input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059E")]
	public class SplineAction
	{
		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object target;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatValue;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double doubleValue;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stringValue;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool boolValue;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject goValue;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform transformValue;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityAction action;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityAction<int> intAction;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityAction<float> floatAction;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityAction<double> doubleAction;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityAction<string> stringAction;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityAction<bool> boolAction;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityAction<GameObject> goAction;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityAction<Transform> transformAction;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MethodInfo methodInfo;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string methodName;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int paramType;

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x109F97C", Offset = "0x109F97C", VA = "0x109F97C")]
		public SplineAction()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x109F9D4", Offset = "0x109F9D4", VA = "0x109F9D4")]
		public SplineAction(UnityAction call)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x109FA50", Offset = "0x109FA50", VA = "0x109FA50")]
		public SplineAction(UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x109FAD8", Offset = "0x109FAD8", VA = "0x109FAD8")]
		public SplineAction(UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x109FB68", Offset = "0x109FB68", VA = "0x109FB68")]
		public SplineAction(UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x109FBF8", Offset = "0x109FBF8", VA = "0x109FBF8")]
		public SplineAction(UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x109FC8C", Offset = "0x109FC8C", VA = "0x109FC8C")]
		public SplineAction(UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x109FD14", Offset = "0x109FD14", VA = "0x109FD14")]
		public SplineAction(UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x109FDA8", Offset = "0x109FDA8", VA = "0x109FDA8")]
		public SplineAction(UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x109FE3C", Offset = "0x109FE3C", VA = "0x109FE3C")]
		public void SetMethod(MethodInfo newMethod)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x10A08D8", Offset = "0x10A08D8", VA = "0x10A08D8")]
		private Type GetParamType()
		{
			return null;
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x10A0A28", Offset = "0x10A0A28", VA = "0x10A0A28")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x10A0278", Offset = "0x10A0278", VA = "0x10A0278")]
		private void ConstructUnityAction()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x10A0BFC", Offset = "0x10A0BFC", VA = "0x10A0BFC")]
		public void Invoke()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059F")]
	public class SplineTrigger : ScriptableObject
	{
		[Token(Token = "0x20005A0")]
		public enum Type
		{
			[Token(Token = "0x4001F5C")]
			Double,
			[Token(Token = "0x4001F5D")]
			Forward,
			[Token(Token = "0x4001F5E")]
			Backward
		}

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public double position;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x10A0D80", Offset = "0x10A0D80", VA = "0x10A0D80")]
		public SplineTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A1")]
	public class Trigger
	{
		[Token(Token = "0x20005A2")]
		public enum Type
		{
			[Token(Token = "0x4001F69")]
			Double,
			[Token(Token = "0x4001F6A")]
			Forward,
			[Token(Token = "0x4001F6B")]
			Backward
		}

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public double position;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x10A0DFC", Offset = "0x10A0DFC", VA = "0x10A0DFC")]
		public void Create(Type t, UnityAction call)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x10A0F34", Offset = "0x10A0F34", VA = "0x10A0F34")]
		public void Create(Type t, UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x10A0FAC", Offset = "0x10A0FAC", VA = "0x10A0FAC")]
		public void Create(Type t, UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x10A102C", Offset = "0x10A102C", VA = "0x10A102C")]
		public void Create(Type t, UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x10A10AC", Offset = "0x10A10AC", VA = "0x10A10AC")]
		public void Create(Type t, UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x10A1124", Offset = "0x10A1124", VA = "0x10A1124")]
		public void Create(Type t, UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x10A119C", Offset = "0x10A119C", VA = "0x10A119C")]
		public void Create(Type t, UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x10A1214", Offset = "0x10A1214", VA = "0x10A1214")]
		public void Create(Type t, UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x10A0E7C", Offset = "0x10A0E7C", VA = "0x10A0E7C")]
		public void Create(Type t)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x10A128C", Offset = "0x10A128C", VA = "0x10A128C")]
		public void ResetWorkOnce()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x10A1294", Offset = "0x10A1294", VA = "0x10A1294")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x10A1328", Offset = "0x10A1328", VA = "0x10A1328")]
		public void Invoke()
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x10A1384", Offset = "0x10A1384", VA = "0x10A1384")]
		private void AddAction()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x10A147C", Offset = "0x10A147C", VA = "0x10A147C")]
		public void AddListener(MonoBehaviour behavior, string method, object arg)
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x10A0EC4", Offset = "0x10A0EC4", VA = "0x10A0EC4")]
		public void AddAction(SplineAction action)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x10A2114", Offset = "0x10A2114", VA = "0x10A2114")]
		public Trigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A3")]
	public class TransformModule
	{
		[Token(Token = "0x20005A4")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x4001F81")]
			Zero,
			[Token(Token = "0x4001F82")]
			Preserve,
			[Token(Token = "0x4001F83")]
			Align,
			[Token(Token = "0x4001F84")]
			AlignRealistic
		}

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		[FormerlySerializedAs("offset")]
		private Vector2 _offset;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		[FormerlySerializedAs("rotationOffset")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[FormerlySerializedAs("baseScale")]
		[HideInInspector]
		private Vector3 _baseScale;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineResult _splineResult;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CustomRotationModule customRotation;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CustomOffsetModule customOffset;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool applyPositionX;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool applyPositionY;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool applyPositionZ;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Spline.Direction direction;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyRotationX;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool applyRotationY;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool applyRotationZ;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool applyScaleX;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool applyScaleY;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool applyScaleZ;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x170004DB")]
		public Vector2 offset
		{
			[Token(Token = "0x600242B")]
			[Address(RVA = "0x10A21BC", Offset = "0x10A21BC", VA = "0x10A21BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600242C")]
			[Address(RVA = "0x10A21C4", Offset = "0x10A21C4", VA = "0x10A21C4")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x10A2290", Offset = "0x10A2290", VA = "0x10A2290")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x10A229C", Offset = "0x10A229C", VA = "0x10A229C")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public Vector3 baseScale
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x10A238C", Offset = "0x10A238C", VA = "0x10A238C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002430")]
			[Address(RVA = "0x10A2398", Offset = "0x10A2398", VA = "0x10A2398")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public SplineResult splineResult
		{
			[Token(Token = "0x6002431")]
			[Address(RVA = "0x10A2488", Offset = "0x10A2488", VA = "0x10A2488")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002432")]
			[Address(RVA = "0x10A24FC", Offset = "0x10A24FC", VA = "0x10A24FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public bool applyPosition
		{
			[Token(Token = "0x6002433")]
			[Address(RVA = "0x10A25C8", Offset = "0x10A25C8", VA = "0x10A25C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x10A25F0", Offset = "0x10A25F0", VA = "0x10A25F0")]
			set
			{
			}
		}

		[Token(Token = "0x170004E0")]
		public bool applyRotation
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x10A2604", Offset = "0x10A2604", VA = "0x10A2604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002436")]
			[Address(RVA = "0x10A262C", Offset = "0x10A262C", VA = "0x10A262C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		public bool applyScale
		{
			[Token(Token = "0x6002437")]
			[Address(RVA = "0x10A2640", Offset = "0x10A2640", VA = "0x10A2640")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x10A2668", Offset = "0x10A2668", VA = "0x10A2668")]
			set
			{
			}
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x10A267C", Offset = "0x10A267C", VA = "0x10A267C")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x10A2D48", Offset = "0x10A2D48", VA = "0x10A2D48")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x10A3138", Offset = "0x10A3138", VA = "0x10A3138")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x10A2E60", Offset = "0x10A2E60", VA = "0x10A2E60")]
		private Vector3 HandleVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x10A26FC", Offset = "0x10A26FC", VA = "0x10A26FC")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x10A2940", Offset = "0x10A2940", VA = "0x10A2940")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x10A2CE4", Offset = "0x10A2CE4", VA = "0x10A2CE4")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x10A3268", Offset = "0x10A3268", VA = "0x10A3268")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x20005A5")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x10A33DC", Offset = "0x10A33DC", VA = "0x10A33DC", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x10A3BC0", Offset = "0x10A3BC0", VA = "0x10A3BC0")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float xRadius;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yRadius;

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x10A3BD4", Offset = "0x10A3BD4", VA = "0x10A3BD4", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x10A4054", Offset = "0x10A4054", VA = "0x10A4054")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool mirror;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float length;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int segments;

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x10A5064", Offset = "0x10A5064", VA = "0x10A5064", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x10A5388", Offset = "0x10A5388", VA = "0x10A5388")]
		public Line()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x10A5468", Offset = "0x10A5468", VA = "0x10A5468", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x10A55F8", Offset = "0x10A55F8", VA = "0x10A55F8")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x10A5608", Offset = "0x10A5608", VA = "0x10A5608", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x10A599C", Offset = "0x10A599C", VA = "0x10A599C")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float xRadius;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float yRadius;

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x10A59F0", Offset = "0x10A59F0", VA = "0x10A59F0", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x10A6458", Offset = "0x10A6458", VA = "0x10A6458")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float startRadius;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float endRadius;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stretch;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int iterations;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x10A64B4", Offset = "0x10A64B4", VA = "0x10A64B4", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x10A69B8", Offset = "0x10A69B8", VA = "0x10A69B8")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class SplinePrimitive
	{
		[Token(Token = "0x20005AD")]
		public enum Axis
		{
			[Token(Token = "0x4001F9E")]
			X,
			[Token(Token = "0x4001F9F")]
			Y,
			[Token(Token = "0x4001FA0")]
			Z,
			[Token(Token = "0x4001FA1")]
			nX,
			[Token(Token = "0x4001FA2")]
			nY,
			[Token(Token = "0x4001FA3")]
			nZ
		}

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Spline.Type type;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x10A5218", Offset = "0x10A5218", VA = "0x10A5218", Slot = "4")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x10A6A3C", Offset = "0x10A6A3C", VA = "0x10A6A3C")]
		public Spline GetSpline()
		{
			return null;
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x10A6DAC", Offset = "0x10A6DAC", VA = "0x10A6DAC")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x10A6E40", Offset = "0x10A6E40", VA = "0x10A6E40")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x10A6FAC", Offset = "0x10A6FAC", VA = "0x10A6FAC")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x10A6AE0", Offset = "0x10A6AE0", VA = "0x10A6AE0")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x10A521C", Offset = "0x10A521C", VA = "0x10A521C")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x10A704C", Offset = "0x10A704C", VA = "0x10A704C")]
		protected Vector3 GetNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x10A53A0", Offset = "0x10A53A0", VA = "0x10A53A0")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float depth;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sides;

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x10A7204", Offset = "0x10A7204", VA = "0x10A7204", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x10A73EC", Offset = "0x10A73EC", VA = "0x10A73EC")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x20005AF")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x20005B0")]
		public enum ColumnType
		{
			[Token(Token = "0x4001FA9")]
			Position,
			[Token(Token = "0x4001FAA")]
			Tangent,
			[Token(Token = "0x4001FAB")]
			Tangent2,
			[Token(Token = "0x4001FAC")]
			Normal,
			[Token(Token = "0x4001FAD")]
			Size,
			[Token(Token = "0x4001FAE")]
			Color
		}

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x10A7404", Offset = "0x10A7404", VA = "0x10A7404")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x10A7964", Offset = "0x10A7964", VA = "0x10A7964")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x10A7FA0", Offset = "0x10A7FA0", VA = "0x10A7FA0")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x10A8B2C", Offset = "0x10A8B2C", VA = "0x10A8B2C")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x10A8D64", Offset = "0x10A8D64", VA = "0x10A8D64")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x10A8E2C", Offset = "0x10A8E2C", VA = "0x10A8E2C")]
		public void FlatX()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x10A9020", Offset = "0x10A9020", VA = "0x10A9020")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x10A91D0", Offset = "0x10A91D0", VA = "0x10A91D0")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x10A93B8", Offset = "0x10A93B8", VA = "0x10A93B8")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x10A9480", Offset = "0x10A9480", VA = "0x10A9480")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x10A96B4", Offset = "0x10A96B4", VA = "0x10A96B4")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x10A9978", Offset = "0x10A9978", VA = "0x10A9978")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x10A9AC8", Offset = "0x10A9AC8", VA = "0x10A9AC8")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x10A99C4", Offset = "0x10A99C4", VA = "0x10A99C4")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x10A9B30", Offset = "0x10A9B30", VA = "0x10A9B30")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class SplineParser
	{
		[Token(Token = "0x20005B2")]
		internal class Transformation
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x6002470")]
			[Address(RVA = "0x10AA70C", Offset = "0x10AA70C", VA = "0x10AA70C")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x10AA854", Offset = "0x10AA854", VA = "0x10AA854", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6002472")]
			[Address(RVA = "0x10AA858", Offset = "0x10AA858", VA = "0x10AA858")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x10AA9F0", Offset = "0x10AA9F0", VA = "0x10AA9F0")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x6002475")]
			[Address(RVA = "0x10AA9FC", Offset = "0x10AA9FC", VA = "0x10AA9FC")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0x10AAAA4", Offset = "0x10AAAA4", VA = "0x10AAAA4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B4")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x6002477")]
			[Address(RVA = "0x10AAC34", Offset = "0x10AAC34", VA = "0x10AAC34")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0x10AACA0", Offset = "0x10AACA0", VA = "0x10AACA0", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x6002479")]
			[Address(RVA = "0x10AAE7C", Offset = "0x10AAE7C", VA = "0x10AAE7C")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x600247A")]
			[Address(RVA = "0x10AAF24", Offset = "0x10AAF24", VA = "0x10AAF24", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x10AB0A0", Offset = "0x10AB0A0", VA = "0x10AB0A0")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x600247C")]
			[Address(RVA = "0x10AB10C", Offset = "0x10AB10C", VA = "0x10AB10C", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B7")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x600247D")]
			[Address(RVA = "0x10AB264", Offset = "0x10AB264", VA = "0x10AB264")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x10AB2D0", Offset = "0x10AB2D0", VA = "0x10AB2D0", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B8")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x10AB428", Offset = "0x10AB428", VA = "0x10AB428")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x10AB538", Offset = "0x10AB538", VA = "0x10AB538", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20005B9")]
		internal class SplineDefinition
		{
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x170004E3")]
			internal int pointCount
			{
				[Token(Token = "0x6002481")]
				[Address(RVA = "0x10A8FD8", Offset = "0x10A8FD8", VA = "0x10A8FD8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002482")]
			[Address(RVA = "0x10A7E0C", Offset = "0x10A7E0C", VA = "0x10A7E0C")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6002483")]
			[Address(RVA = "0x10A7768", Offset = "0x10A7768", VA = "0x10A7768")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0x10AB604", Offset = "0x10AB604", VA = "0x10AB604")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0x10AB6A4", Offset = "0x10AB6A4", VA = "0x10AB6A4")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0x10AB754", Offset = "0x10AB754", VA = "0x10AB754")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x6002487")]
			[Address(RVA = "0x10A89F0", Offset = "0x10A89F0", VA = "0x10A89F0")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x6002488")]
			[Address(RVA = "0x10AB8A8", Offset = "0x10AB8A8", VA = "0x10AB8A8")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0x10ABA68", Offset = "0x10ABA68", VA = "0x10ABA68")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x600248A")]
			[Address(RVA = "0x10A8B44", Offset = "0x10A8B44", VA = "0x10A8B44")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x600248B")]
			[Address(RVA = "0x10A8D7C", Offset = "0x10A8D7C", VA = "0x10A8D7C")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x600248C")]
			[Address(RVA = "0x10ABA7C", Offset = "0x10ABA7C", VA = "0x10ABA7C")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x170004E2")]
		public string name
		{
			[Token(Token = "0x600246A")]
			[Address(RVA = "0x10AA0B0", Offset = "0x10AA0B0", VA = "0x10AA0B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x10AA0B8", Offset = "0x10AA0B8", VA = "0x10AA0B8")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x10AA54C", Offset = "0x10AA54C", VA = "0x10AA54C")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x10AA2AC", Offset = "0x10AA2AC", VA = "0x10AA2AC")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x10AA658", Offset = "0x10AA658", VA = "0x10AA658")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x10A7710", Offset = "0x10A7710", VA = "0x10A7710")]
		public SplineParser()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20005BA")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x600248D")]
		[Address(RVA = "0x10ABD44", Offset = "0x10ABD44", VA = "0x10ABD44")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x10ABEF8", Offset = "0x10ABEF8", VA = "0x10ABEF8")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x10AC084", Offset = "0x10AC084", VA = "0x10AC084")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x10AC224", Offset = "0x10AC224", VA = "0x10AC224")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x10AC28C", Offset = "0x10AC28C", VA = "0x10AC28C")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x10AC2F4", Offset = "0x10AC2F4", VA = "0x10AC2F4")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x10AC34C", Offset = "0x10AC34C", VA = "0x10AC34C")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x10AC3C4", Offset = "0x10AC3C4", VA = "0x10AC3C4")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x10AC41C", Offset = "0x10AC41C", VA = "0x10AC41C")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x10AC474", Offset = "0x10AC474", VA = "0x10AC474")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x10AC4CC", Offset = "0x10AC4CC", VA = "0x10AC4CC")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x10AC524", Offset = "0x10AC524", VA = "0x10AC524")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x10AC584", Offset = "0x10AC584", VA = "0x10AC584")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x10AC5E0", Offset = "0x10AC5E0", VA = "0x10AC5E0")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x10AC638", Offset = "0x10AC638", VA = "0x10AC638")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005BE")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20005BF")]
		public static class Utils
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x10B0E24", Offset = "0x10B0E24", VA = "0x10B0E24")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x10AC758", Offset = "0x10AC758", VA = "0x10AC758")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x10AC8E4", Offset = "0x10AC8E4", VA = "0x10AC8E4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x10ACA98", Offset = "0x10ACA98", VA = "0x10ACA98")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x10ACC24", Offset = "0x10ACC24", VA = "0x10ACC24")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x10ACDD8", Offset = "0x10ACDD8", VA = "0x10ACDD8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x10ACF64", Offset = "0x10ACF64", VA = "0x10ACF64")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x10AD114", Offset = "0x10AD114", VA = "0x10AD114")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x10AD2F8", Offset = "0x10AD2F8", VA = "0x10AD2F8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x10AD4A4", Offset = "0x10AD4A4", VA = "0x10AD4A4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x10AD650", Offset = "0x10AD650", VA = "0x10AD650")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x10AD7FC", Offset = "0x10AD7FC", VA = "0x10AD7FC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x10AD9B0", Offset = "0x10AD9B0", VA = "0x10AD9B0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x10ADB3C", Offset = "0x10ADB3C", VA = "0x10ADB3C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x10ADCD8", Offset = "0x10ADCD8", VA = "0x10ADCD8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x10ADE84", Offset = "0x10ADE84", VA = "0x10ADE84")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x10AE028", Offset = "0x10AE028", VA = "0x10AE028")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x10AE1CC", Offset = "0x10AE1CC", VA = "0x10AE1CC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x10AE380", Offset = "0x10AE380", VA = "0x10AE380")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x10AE528", Offset = "0x10AE528", VA = "0x10AE528")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x10AE6D0", Offset = "0x10AE6D0", VA = "0x10AE6D0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x10AE878", Offset = "0x10AE878", VA = "0x10AE878")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x10AEA24", Offset = "0x10AEA24", VA = "0x10AEA24")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x10AEBD0", Offset = "0x10AEBD0", VA = "0x10AEBD0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x10AED6C", Offset = "0x10AED6C", VA = "0x10AED6C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x10AEF0C", Offset = "0x10AEF0C", VA = "0x10AEF0C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x10AF0AC", Offset = "0x10AF0AC", VA = "0x10AF0AC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x10AF258", Offset = "0x10AF258", VA = "0x10AF258")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x10AF414", Offset = "0x10AF414", VA = "0x10AF414")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x10AF5F8", Offset = "0x10AF5F8", VA = "0x10AF5F8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x10AF7E4", Offset = "0x10AF7E4", VA = "0x10AF7E4")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x10AFC0C", Offset = "0x10AFC0C", VA = "0x10AFC0C")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x10AFDAC", Offset = "0x10AFDAC", VA = "0x10AFDAC")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x10AFF3C", Offset = "0x10AFF3C", VA = "0x10AFF3C")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x10B00CC", Offset = "0x10B00CC", VA = "0x10B00CC")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x10B0268", Offset = "0x10B0268", VA = "0x10B0268")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x10B041C", Offset = "0x10B041C", VA = "0x10B041C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x10B05A8", Offset = "0x10B05A8", VA = "0x10B05A8")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x10B07DC", Offset = "0x10B07DC", VA = "0x10B07DC")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x10B09F4", Offset = "0x10B09F4", VA = "0x10B09F4")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x10B0C0C", Offset = "0x10B0C0C", VA = "0x10B0C0C")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005E7")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6002547")]
		[Address(RVA = "0x10B1D14", Offset = "0x10B1D14", VA = "0x10B1D14")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x10B1EF4", Offset = "0x10B1EF4", VA = "0x10B1EF4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x10B20E0", Offset = "0x10B20E0", VA = "0x10B20E0")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x10B21DC", Offset = "0x10B21DC", VA = "0x10B21DC")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x10B22D8", Offset = "0x10B22D8", VA = "0x10B22D8")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x10B23D4", Offset = "0x10B23D4", VA = "0x10B23D4")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x10B24E4", Offset = "0x10B24E4", VA = "0x10B24E4")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x10B2604", Offset = "0x10B2604", VA = "0x10B2604")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x10B2700", Offset = "0x10B2700", VA = "0x10B2700")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x10B290C", Offset = "0x10B290C", VA = "0x10B290C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005EA")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20005EB")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002557")]
				[Address(RVA = "0x10B2BA8", Offset = "0x10B2BA8", VA = "0x10B2BA8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x10B21AC", Offset = "0x10B21AC", VA = "0x10B21AC")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005EC")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002559")]
				[Address(RVA = "0x10B2BD8", Offset = "0x10B2BD8", VA = "0x10B2BD8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x10B22A8", Offset = "0x10B22A8", VA = "0x10B22A8")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005ED")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E6")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600255B")]
				[Address(RVA = "0x10B2C38", Offset = "0x10B2C38", VA = "0x10B2C38", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600255C")]
			[Address(RVA = "0x10B23A4", Offset = "0x10B23A4", VA = "0x10B23A4")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005EE")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170004E7")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600255D")]
				[Address(RVA = "0x10B2C54", Offset = "0x10B2C54", VA = "0x10B2C54", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0x10B24A8", Offset = "0x10B24A8", VA = "0x10B24A8")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20005EF")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170004E8")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600255F")]
				[Address(RVA = "0x10B2C94", Offset = "0x10B2C94", VA = "0x10B2C94", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0x10B25C0", Offset = "0x10B25C0", VA = "0x10B25C0")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20005F0")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E9")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002561")]
				[Address(RVA = "0x10B2CEC", Offset = "0x10B2CEC", VA = "0x10B2CEC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002562")]
			[Address(RVA = "0x10B26D0", Offset = "0x10B26D0", VA = "0x10B26D0")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20005F1")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20005F2")]
		public static class Physics
		{
			[Token(Token = "0x6002565")]
			[Address(RVA = "0x10B2E7C", Offset = "0x10B2E7C", VA = "0x10B2E7C")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6002566")]
			[Address(RVA = "0x10B2E94", Offset = "0x10B2E94", VA = "0x10B2E94")]
			public static bool HasRigidbody2D(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0x10B2E9C", Offset = "0x10B2E9C", VA = "0x10B2E9C")]
			[Preserve]
			public static bool HasRigidbody(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0x10B2EA4", Offset = "0x10B2EA4", VA = "0x10B2EA4")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x10B2D20", Offset = "0x10B2D20", VA = "0x10B2D20")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x10B2DD4", Offset = "0x10B2DD4", VA = "0x10B2DD4")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20005F3")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x10B2F04", Offset = "0x10B2F04", VA = "0x10B2F04")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x10B3964", Offset = "0x10B3964", VA = "0x10B3964")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x10B3D68", Offset = "0x10B3D68", VA = "0x10B3D68")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x10B3E60", Offset = "0x10B3E60", VA = "0x10B3E60")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x10B3F7C", Offset = "0x10B3F7C", VA = "0x10B3F7C", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x10B40E8", Offset = "0x10B40E8", VA = "0x10B40E8", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x10B4280", Offset = "0x10B4280", VA = "0x10B4280", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x10B437C", Offset = "0x10B437C", VA = "0x10B437C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x10B4524", Offset = "0x10B4524", VA = "0x10B4524", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x10B45B8", Offset = "0x10B45B8", VA = "0x10B45B8", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x10B46E8", Offset = "0x10B46E8", VA = "0x10B46E8", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x10B4818", Offset = "0x10B4818", VA = "0x10B4818", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x10B4D20", Offset = "0x10B4D20", VA = "0x10B4D20", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x10B52EC", Offset = "0x10B52EC", VA = "0x10B52EC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x10B5374", Offset = "0x10B5374", VA = "0x10B5374", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x10B565C", Offset = "0x10B565C", VA = "0x10B565C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x10B5674", Offset = "0x10B5674", VA = "0x10B5674", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x10B5790", Offset = "0x10B5790", VA = "0x10B5790", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x10B59CC", Offset = "0x10B59CC", VA = "0x10B59CC", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x10B5BE4", Offset = "0x10B5BE4", VA = "0x10B5BE4", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x10B5394", Offset = "0x10B5394", VA = "0x10B5394")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x10B5CFC", Offset = "0x10B5CFC", VA = "0x10B5CFC", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x10B3858", Offset = "0x10B3858", VA = "0x10B3858")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x10B6144", Offset = "0x10B6144", VA = "0x10B6144")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x10B6284", Offset = "0x10B6284", VA = "0x10B6284")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x10B6314", Offset = "0x10B6314", VA = "0x10B6314")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x10B640C", Offset = "0x10B640C", VA = "0x10B640C")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x10B64A8", Offset = "0x10B64A8", VA = "0x10B64A8")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x10B6600", Offset = "0x10B6600", VA = "0x10B6600")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x10B3EF0", Offset = "0x10B3EF0", VA = "0x10B3EF0")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x10B3DD0", Offset = "0x10B3DD0", VA = "0x10B3DD0")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20005F4")]
	public class HapticDevice
	{
		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x10B6BD4", Offset = "0x10B6BD4", VA = "0x10B6BD4")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20005F6")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6002593")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005F7")]
		private class Device
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6002594")]
			[Address(RVA = "0x10B6E78", Offset = "0x10B6E78", VA = "0x10B6E78")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005F8")]
		public class StreamHost
		{
			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6002595")]
			[Address(RVA = "0x10B6E80", Offset = "0x10B6E80", VA = "0x10B6E80")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x10B6BDC", Offset = "0x10B6BDC", VA = "0x10B6BDC")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x10B6C00", Offset = "0x10B6C00", VA = "0x10B6C00")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x10B6D54", Offset = "0x10B6D54", VA = "0x10B6D54")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x10B6D7C", Offset = "0x10B6D7C", VA = "0x10B6D7C")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600258E")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x10B6D8C", Offset = "0x10B6D8C", VA = "0x10B6D8C")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x10B5FF4", Offset = "0x10B5FF4", VA = "0x10B5FF4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x10B669C", Offset = "0x10B669C", VA = "0x10B669C")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x10B68A4", Offset = "0x10B68A4", VA = "0x10B68A4")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005F9")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Images")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x10B6E88", Offset = "0x10B6E88", VA = "0x10B6E88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x10B6F50", Offset = "0x10B6F50", VA = "0x10B6F50")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x10B770C", Offset = "0x10B770C", VA = "0x10B770C")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x10B7974", Offset = "0x10B7974", VA = "0x10B7974")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x10B7A00", Offset = "0x10B7A00", VA = "0x10B7A00")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x10B7A08", Offset = "0x10B7A08", VA = "0x10B7A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x10B7BE0", Offset = "0x10B7BE0", VA = "0x10B7BE0")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x10B7CA0", Offset = "0x10B7CA0", VA = "0x10B7CA0")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x10B7D3C", Offset = "0x10B7D3C", VA = "0x10B7D3C")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("[UI]")]
		private Image deviceImage;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("[Sprites]")]
		private Sprite leftSide;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x10B7D44", Offset = "0x10B7D44", VA = "0x10B7D44")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x10B7E34", Offset = "0x10B7E34", VA = "0x10B7E34")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x10B8138", Offset = "0x10B8138", VA = "0x10B8138")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x10B8314", Offset = "0x10B8314", VA = "0x10B8314")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x10B846C", Offset = "0x10B846C", VA = "0x10B846C")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x10B8474", Offset = "0x10B8474", VA = "0x10B8474")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x10B84E4", Offset = "0x10B84E4", VA = "0x10B84E4")]
		public void Hide()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x10B8504", Offset = "0x10B8504", VA = "0x10B8504")]
		public void Show()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x10B8524", Offset = "0x10B8524", VA = "0x10B8524")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x10B8644", Offset = "0x10B8644", VA = "0x10B8644")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("DeviceImages")]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x10B864C", Offset = "0x10B864C", VA = "0x10B864C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x10B8B64", Offset = "0x10B8B64", VA = "0x10B8B64")]
		private void Start()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x10B8838", Offset = "0x10B8838", VA = "0x10B8838")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x10B8D68", Offset = "0x10B8D68", VA = "0x10B8D68")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x10B8E04", Offset = "0x10B8E04", VA = "0x10B8E04")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x10B8E24", Offset = "0x10B8E24", VA = "0x10B8E24")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x10B8E44", Offset = "0x10B8E44", VA = "0x10B8E44")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x10B8E60", Offset = "0x10B8E60", VA = "0x10B8E60")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x10B8C70", Offset = "0x10B8C70", VA = "0x10B8C70")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x10B9164", Offset = "0x10B9164", VA = "0x10B9164")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FE")]
	public class PositonIconSetting
	{
		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x10B9174", Offset = "0x10B9174", VA = "0x10B9174")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FF")]
	public class IconSetting
	{
		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x10B917C", Offset = "0x10B917C", VA = "0x10B917C")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000600")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Connect Menu")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Disconnect Menu")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x10B9184", Offset = "0x10B9184", VA = "0x10B9184")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x10B9364", Offset = "0x10B9364", VA = "0x10B9364")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x10B951C", Offset = "0x10B951C", VA = "0x10B951C")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x10B95A4", Offset = "0x10B95A4", VA = "0x10B95A4")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x10B9614", Offset = "0x10B9614", VA = "0x10B9614")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x10B9414", Offset = "0x10B9414", VA = "0x10B9414")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x10B9A38", Offset = "0x10B9A38", VA = "0x10B9A38")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x10B9A60", Offset = "0x10B9A60", VA = "0x10B9A60")]
		private void Ping()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x10B9AC8", Offset = "0x10B9AC8", VA = "0x10B9AC8")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x10B9B9C", Offset = "0x10B9B9C", VA = "0x10B9B9C")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x10B9C70", Offset = "0x10B9C70", VA = "0x10B9C70")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x10B9904", Offset = "0x10B9904", VA = "0x10B9904")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x10B989C", Offset = "0x10B989C", VA = "0x10B989C")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x10B98D0", Offset = "0x10B98D0", VA = "0x10B98D0")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x10B9CA4", Offset = "0x10B9CA4", VA = "0x10B9CA4")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x10B9DA0", Offset = "0x10B9DA0", VA = "0x10B9DA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x10BA280", Offset = "0x10BA280", VA = "0x10BA280")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x10BA8DC", Offset = "0x10BA8DC", VA = "0x10BA8DC")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x10BA964", Offset = "0x10BA964", VA = "0x10BA964")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x10BA9EC", Offset = "0x10BA9EC", VA = "0x10BA9EC")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x10BAA30", Offset = "0x10BAA30", VA = "0x10BAA30")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x10BAA54", Offset = "0x10BAA54", VA = "0x10BAA54")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x10BAA78", Offset = "0x10BAA78", VA = "0x10BAA78")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x10BAB14", Offset = "0x10BAB14", VA = "0x10BAB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x10BAC28", Offset = "0x10BAC28", VA = "0x10BAC28")]
		private void Start()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x10BACC0", Offset = "0x10BACC0", VA = "0x10BACC0")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x10B7764", Offset = "0x10B7764", VA = "0x10B7764")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x10B83E4", Offset = "0x10B83E4", VA = "0x10B83E4")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x10B81AC", Offset = "0x10B81AC", VA = "0x10B81AC")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x10BB1F4", Offset = "0x10BB1F4", VA = "0x10BB1F4")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x10B9060", Offset = "0x10B9060", VA = "0x10B9060")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x10B74B4", Offset = "0x10B74B4", VA = "0x10B74B4")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x10BB274", Offset = "0x10BB274", VA = "0x10BB274")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x10B8A8C", Offset = "0x10B8A8C", VA = "0x10B8A8C")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x10BB4C4", Offset = "0x10BB4C4", VA = "0x10BB4C4")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x10BB55C", Offset = "0x10BB55C", VA = "0x10BB55C")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x10BB5E0", Offset = "0x10BB5E0", VA = "0x10BB5E0")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x10BB660", Offset = "0x10BB660", VA = "0x10BB660")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x10BB71C", Offset = "0x10BB71C", VA = "0x10BB71C")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x10BB79C", Offset = "0x10BB79C", VA = "0x10BB79C")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x10BB840", Offset = "0x10BB840", VA = "0x10BB840")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x10BB8D4", Offset = "0x10BB8D4", VA = "0x10BB8D4")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000603")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x10BB9F8", Offset = "0x10BB9F8", VA = "0x10BB9F8")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x10B7FDC", Offset = "0x10B7FDC", VA = "0x10B7FDC")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x10BBA00", Offset = "0x10BBA00", VA = "0x10BBA00")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class HapticApi
	{
		[Token(Token = "0x2000606")]
		public struct point
		{
			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000607")]
		public struct status
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x10BBA08", Offset = "0x10BBA08", VA = "0x10BBA08")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x10BBA9C", Offset = "0x10BBA9C", VA = "0x10BBA9C")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x10BBB48", Offset = "0x10BBB48", VA = "0x10BBB48")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x10BBBAC", Offset = "0x10BBBAC", VA = "0x10BBBAC")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x10BBC54", Offset = "0x10BBC54", VA = "0x10BBC54")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x10BBD00", Offset = "0x10BBD00", VA = "0x10BBD00")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x10BBDAC", Offset = "0x10BBDAC", VA = "0x10BBDAC")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x10BBE38", Offset = "0x10BBE38", VA = "0x10BBE38")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x10BBECC", Offset = "0x10BBECC", VA = "0x10BBECC")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x10BBFA8", Offset = "0x10BBFA8", VA = "0x10BBFA8")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x10BC06C", Offset = "0x10BC06C", VA = "0x10BC06C")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x10BC130", Offset = "0x10BC130", VA = "0x10BC130")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x10BC1C8", Offset = "0x10BC1C8", VA = "0x10BC1C8")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x10BC238", Offset = "0x10BC238", VA = "0x10BC238")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x10BC2D0", Offset = "0x10BC2D0", VA = "0x10BC2D0")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x10BC334", Offset = "0x10BC334", VA = "0x10BC334")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x10BC3C0", Offset = "0x10BC3C0", VA = "0x10BC3C0")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x10BC420", Offset = "0x10BC420", VA = "0x10BC420")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x10BC484", Offset = "0x10BC484", VA = "0x10BC484")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x10BC4E4", Offset = "0x10BC4E4", VA = "0x10BC4E4")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x10BC568", Offset = "0x10BC568", VA = "0x10BC568")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x10BC62C", Offset = "0x10BC62C", VA = "0x10BC62C")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x10BC634", Offset = "0x10BC634", VA = "0x10BC634", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x10BC9DC", Offset = "0x10BC9DC", VA = "0x10BC9DC", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x10BC9F8", Offset = "0x10BC9F8", VA = "0x10BC9F8")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x10BCA00", Offset = "0x10BCA00", VA = "0x10BCA00")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x10BCA30", Offset = "0x10BCA30", VA = "0x10BCA30", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x10BCA38", Offset = "0x10BCA38", VA = "0x10BCA38", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x10BCA54", Offset = "0x10BCA54", VA = "0x10BCA54", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x10BCA5C", Offset = "0x10BCA5C", VA = "0x10BCA5C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x10BCA64", Offset = "0x10BCA64", VA = "0x10BCA64", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x10BCA68", Offset = "0x10BCA68", VA = "0x10BCA68", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x10BCA74", Offset = "0x10BCA74", VA = "0x10BCA74", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x10BCA80", Offset = "0x10BCA80", VA = "0x10BCA80", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x10BCB80", Offset = "0x10BCB80", VA = "0x10BCB80", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x10BCD00", Offset = "0x10BCD00", VA = "0x10BCD00", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x10BCD28", Offset = "0x10BCD28", VA = "0x10BCD28", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x10BCD50", Offset = "0x10BCD50", VA = "0x10BCD50", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x10BCD58", Offset = "0x10BCD58", VA = "0x10BCD58", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x10BCD64", Offset = "0x10BCD64", VA = "0x10BCD64", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x10BCD6C", Offset = "0x10BCD6C", VA = "0x10BCD6C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x10BCD70", Offset = "0x10BCD70", VA = "0x10BCD70", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x10BCD74", Offset = "0x10BCD74", VA = "0x10BCD74", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x200060A")]
	public class BhapticsProject
	{
		[Token(Token = "0x170004EA")]
		public Track[] Tracks
		{
			[Token(Token = "0x600260F")]
			[Address(RVA = "0x10BCD94", Offset = "0x10BCD94", VA = "0x10BCD94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x10BCD9C", Offset = "0x10BCD9C", VA = "0x10BCD9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public Layout Layout
		{
			[Token(Token = "0x6002611")]
			[Address(RVA = "0x10BCDA4", Offset = "0x10BCDA4", VA = "0x10BCDA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002612")]
			[Address(RVA = "0x10BCDAC", Offset = "0x10BCDAC", VA = "0x10BCDAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x10BCDB4", Offset = "0x10BCDB4", VA = "0x10BCDB4")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x10BD640", Offset = "0x10BD640", VA = "0x10BD640")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x10BD010", Offset = "0x10BD010", VA = "0x10BD010")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x10BDBC0", Offset = "0x10BDBC0", VA = "0x10BDBC0")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x10BDC90", Offset = "0x10BDC90", VA = "0x10BDC90")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class Track
	{
		[Token(Token = "0x170004EC")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x10BDC98", Offset = "0x10BDC98", VA = "0x10BDC98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002619")]
			[Address(RVA = "0x10BDCA0", Offset = "0x10BDCA0", VA = "0x10BDCA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x10BDCA8", Offset = "0x10BDCA8", VA = "0x10BDCA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x10BD018", Offset = "0x10BD018", VA = "0x10BD018")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x10BD794", Offset = "0x10BD794", VA = "0x10BD794")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x10BDD2C", Offset = "0x10BDD2C", VA = "0x10BDD2C")]
		public Track()
		{
		}
	}
	[Token(Token = "0x200060D")]
	public class HapticEffect
	{
		[Token(Token = "0x170004ED")]
		public int StartTime
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0x10BE268", Offset = "0x10BE268", VA = "0x10BE268")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600261F")]
			[Address(RVA = "0x10BE270", Offset = "0x10BE270", VA = "0x10BE270")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public int OffsetTime
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x10BE278", Offset = "0x10BE278", VA = "0x10BE278")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002621")]
			[Address(RVA = "0x10BE280", Offset = "0x10BE280", VA = "0x10BE280")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x10BE288", Offset = "0x10BE288", VA = "0x10BE288")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002623")]
			[Address(RVA = "0x10BE290", Offset = "0x10BE290", VA = "0x10BE290")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x10BE298", Offset = "0x10BE298", VA = "0x10BE298", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x10BDD34", Offset = "0x10BDD34", VA = "0x10BDD34")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x10BDFDC", Offset = "0x10BDFDC", VA = "0x10BDFDC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x10BE578", Offset = "0x10BE578", VA = "0x10BE578")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class Layout
	{
		[Token(Token = "0x170004F0")]
		public string Type
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0x10BE880", Offset = "0x10BE880", VA = "0x10BE880")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002629")]
			[Address(RVA = "0x10BE888", Offset = "0x10BE888", VA = "0x10BE888")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0x10BE890", Offset = "0x10BE890", VA = "0x10BE890")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600262B")]
			[Address(RVA = "0x10BE898", Offset = "0x10BE898", VA = "0x10BE898")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x10BD258", Offset = "0x10BD258", VA = "0x10BD258")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x10BD8B0", Offset = "0x10BD8B0", VA = "0x10BD8B0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x10BE8A0", Offset = "0x10BE8A0", VA = "0x10BE8A0")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class LayoutObject
	{
		[Token(Token = "0x170004F2")]
		public int Index
		{
			[Token(Token = "0x600262F")]
			[Address(RVA = "0x10BEB20", Offset = "0x10BEB20", VA = "0x10BEB20")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002630")]
			[Address(RVA = "0x10BEB28", Offset = "0x10BEB28", VA = "0x10BEB28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public float X
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0x10BEB30", Offset = "0x10BEB30", VA = "0x10BEB30")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002632")]
			[Address(RVA = "0x10BEB38", Offset = "0x10BEB38", VA = "0x10BEB38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public float Y
		{
			[Token(Token = "0x6002633")]
			[Address(RVA = "0x10BEB40", Offset = "0x10BEB40", VA = "0x10BEB40")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002634")]
			[Address(RVA = "0x10BEB48", Offset = "0x10BEB48", VA = "0x10BEB48")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x10BE8A8", Offset = "0x10BE8A8", VA = "0x10BE8A8")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x10BE9E0", Offset = "0x10BE9E0", VA = "0x10BE9E0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x10BEB50", Offset = "0x10BEB50", VA = "0x10BEB50")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class HapticEffectMode
	{
		[Token(Token = "0x170004F5")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0x10BEB58", Offset = "0x10BEB58", VA = "0x10BEB58")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6002639")]
			[Address(RVA = "0x10BEB60", Offset = "0x10BEB60", VA = "0x10BEB60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		public DotMode DotMode
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0x10BEB68", Offset = "0x10BEB68", VA = "0x10BEB68")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600263B")]
			[Address(RVA = "0x10BEB70", Offset = "0x10BEB70", VA = "0x10BEB70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public PathMode PathMode
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0x10BEB78", Offset = "0x10BEB78", VA = "0x10BEB78")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0x10BEB80", Offset = "0x10BEB80", VA = "0x10BEB80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x10BE580", Offset = "0x10BE580", VA = "0x10BE580")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x10BE700", Offset = "0x10BE700", VA = "0x10BE700")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x10BEB88", Offset = "0x10BEB88", VA = "0x10BEB88")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class DotMode
	{
		[Token(Token = "0x170004F8")]
		public bool DotConnected
		{
			[Token(Token = "0x6002641")]
			[Address(RVA = "0x10BEB90", Offset = "0x10BEB90", VA = "0x10BEB90")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002642")]
			[Address(RVA = "0x10BEB98", Offset = "0x10BEB98", VA = "0x10BEB98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F9")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002643")]
			[Address(RVA = "0x10BEBA4", Offset = "0x10BEBA4", VA = "0x10BEBA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002644")]
			[Address(RVA = "0x10BEBAC", Offset = "0x10BEBAC", VA = "0x10BEBAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x10BEBB4", Offset = "0x10BEBB4", VA = "0x10BEBB4")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x10BF11C", Offset = "0x10BF11C", VA = "0x10BF11C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x10BEE28", Offset = "0x10BEE28", VA = "0x10BEE28")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x170004FA")]
		public int StartTime
		{
			[Token(Token = "0x6002648")]
			[Address(RVA = "0x10BF4D0", Offset = "0x10BF4D0", VA = "0x10BF4D0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002649")]
			[Address(RVA = "0x10BF4D8", Offset = "0x10BF4D8", VA = "0x10BF4D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004FB")]
		public int EndTime
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0x10BF4E0", Offset = "0x10BF4E0", VA = "0x10BF4E0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600264B")]
			[Address(RVA = "0x10BF4E8", Offset = "0x10BF4E8", VA = "0x10BF4E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004FC")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x10BF4F0", Offset = "0x10BF4F0", VA = "0x10BF4F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x10BF4F8", Offset = "0x10BF4F8", VA = "0x10BF4F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x10BEE30", Offset = "0x10BEE30", VA = "0x10BEE30")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x10BF29C", Offset = "0x10BF29C", VA = "0x10BF29C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x10BF500", Offset = "0x10BF500", VA = "0x10BF500")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class DotModeObject
	{
		[Token(Token = "0x170004FD")]
		public int Index
		{
			[Token(Token = "0x6002651")]
			[Address(RVA = "0x10BF804", Offset = "0x10BF804", VA = "0x10BF804")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002652")]
			[Address(RVA = "0x10BF80C", Offset = "0x10BF80C", VA = "0x10BF80C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004FE")]
		public float Intensity
		{
			[Token(Token = "0x6002653")]
			[Address(RVA = "0x10BF814", Offset = "0x10BF814", VA = "0x10BF814")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002654")]
			[Address(RVA = "0x10BF81C", Offset = "0x10BF81C", VA = "0x10BF81C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x10BF64C", Offset = "0x10BF64C", VA = "0x10BF64C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x10BF704", Offset = "0x10BF704", VA = "0x10BF704")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x10BF824", Offset = "0x10BF824", VA = "0x10BF824")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class PathMode
	{
		[Token(Token = "0x170004FF")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0x10BF980", Offset = "0x10BF980", VA = "0x10BF980")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002659")]
			[Address(RVA = "0x10BF988", Offset = "0x10BF988", VA = "0x10BF988")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x10BF990", Offset = "0x10BF990", VA = "0x10BF990")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x10BFEBC", Offset = "0x10BFEBC", VA = "0x10BFEBC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x10BFBA8", Offset = "0x10BFBA8", VA = "0x10BFBA8")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x2000615")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x17000500")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x600265D")]
			[Address(RVA = "0x10C0208", Offset = "0x10C0208", VA = "0x10C0208")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600265E")]
			[Address(RVA = "0x10C0210", Offset = "0x10C0210", VA = "0x10C0210")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x10BFBB0", Offset = "0x10BFBB0", VA = "0x10BFBB0")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x10BFFD8", Offset = "0x10BFFD8", VA = "0x10BFFD8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x10C0218", Offset = "0x10C0218", VA = "0x10C0218")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class PathModeObject
	{
		[Token(Token = "0x17000501")]
		public float X
		{
			[Token(Token = "0x6002662")]
			[Address(RVA = "0x10C04C4", Offset = "0x10C04C4", VA = "0x10C04C4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002663")]
			[Address(RVA = "0x10C04CC", Offset = "0x10C04CC", VA = "0x10C04CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000502")]
		public float Y
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0x10C04D4", Offset = "0x10C04D4", VA = "0x10C04D4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002665")]
			[Address(RVA = "0x10C04DC", Offset = "0x10C04DC", VA = "0x10C04DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public float Intensity
		{
			[Token(Token = "0x6002666")]
			[Address(RVA = "0x10C04E4", Offset = "0x10C04E4", VA = "0x10C04E4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002667")]
			[Address(RVA = "0x10C04EC", Offset = "0x10C04EC", VA = "0x10C04EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public int Time
		{
			[Token(Token = "0x6002668")]
			[Address(RVA = "0x10C04F4", Offset = "0x10C04F4", VA = "0x10C04F4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002669")]
			[Address(RVA = "0x10C04FC", Offset = "0x10C04FC", VA = "0x10C04FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x10C0228", Offset = "0x10C0228", VA = "0x10C0228")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x10C0344", Offset = "0x10C0344", VA = "0x10C0344")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x10C0504", Offset = "0x10C0504", VA = "0x10C0504")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x2000617")]
	internal class ParseUtil
	{
		[Token(Token = "0x600266D")]
		[Address(RVA = "0x10BF82C", Offset = "0x10BF82C", VA = "0x10BF82C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x10BF508", Offset = "0x10BF508", VA = "0x10BF508")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x10C050C", Offset = "0x10C050C", VA = "0x10C050C")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class BhapticsUtils
	{
		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x40020AC")]
		public const string TypeHead = "Head";

		[Token(Token = "0x40020AD")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x40020AE")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x40020AF")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x40020B0")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x40020B1")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x40020B2")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x40020B3")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6002670")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x10C0514", Offset = "0x10C0514", VA = "0x10C0514")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x10C0554", Offset = "0x10C0554", VA = "0x10C0554")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x10C055C", Offset = "0x10C055C", VA = "0x10C055C")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x10C0564", Offset = "0x10C0564", VA = "0x10C0564")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x10C0580", Offset = "0x10C0580", VA = "0x10C0580")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x10C0584", Offset = "0x10C0584", VA = "0x10C0584")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x10C0728", Offset = "0x10C0728", VA = "0x10C0728")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x10C0780", Offset = "0x10C0780", VA = "0x10C0780")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x10C07A0", Offset = "0x10C07A0", VA = "0x10C07A0")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x10C07FC", Offset = "0x10C07FC", VA = "0x10C07FC")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x600267B")]
		[Address(RVA = "0x10C0804", Offset = "0x10C0804", VA = "0x10C0804")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		public float Intensity;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x17000505")]
		public int ClipDurationTime
		{
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x10C080C", Offset = "0x10C080C", VA = "0x10C080C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x10C08D4", Offset = "0x10C08D4", VA = "0x10C08D4", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x10C0930", Offset = "0x10C0930", VA = "0x10C0930", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x10C0948", Offset = "0x10C0948", VA = "0x10C0948", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x10C0960", Offset = "0x10C0960", VA = "0x10C0960", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x10C0974", Offset = "0x10C0974", VA = "0x10C0974", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x10C0984", Offset = "0x10C0984", VA = "0x10C0984", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x10C0AA8", Offset = "0x10C0AA8", VA = "0x10C0AA8", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x10C0B1C", Offset = "0x10C0B1C", VA = "0x10C0B1C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x10C0D5C", Offset = "0x10C0D5C", VA = "0x10C0D5C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x10C083C", Offset = "0x10C083C", VA = "0x10C083C")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x10C0D6C", Offset = "0x10C0D6C", VA = "0x10C0D6C")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6002688")]
		[Address(RVA = "0x10C0DF4", Offset = "0x10C0DF4", VA = "0x10C0DF4")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x40020BA")]
		None,
		[Token(Token = "0x40020BB")]
		Tactal,
		[Token(Token = "0x40020BC")]
		TactSuit,
		[Token(Token = "0x40020BD")]
		Tactosy_arms,
		[Token(Token = "0x40020BE")]
		Tactosy_hands,
		[Token(Token = "0x40020BF")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x200061D")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x40020C1")]
		VestFront,
		[Token(Token = "0x40020C2")]
		VestBack,
		[Token(Token = "0x40020C3")]
		Head,
		[Token(Token = "0x40020C4")]
		RightForearm,
		[Token(Token = "0x40020C5")]
		LeftForearm,
		[Token(Token = "0x40020C6")]
		LeftHand,
		[Token(Token = "0x40020C7")]
		RightHand,
		[Token(Token = "0x40020C8")]
		LeftFoot,
		[Token(Token = "0x40020C9")]
		RightFoot
	}
	[Token(Token = "0x200061E")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x10C0DFC", Offset = "0x10C0DFC", VA = "0x10C0DFC", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x10C0E5C", Offset = "0x10C0E5C", VA = "0x10C0E5C", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x10C0E78", Offset = "0x10C0E78", VA = "0x10C0E78", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x10C0E90", Offset = "0x10C0E90", VA = "0x10C0E90", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x10C0EA4", Offset = "0x10C0EA4", VA = "0x10C0EA4", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x10C0EB4", Offset = "0x10C0EB4", VA = "0x10C0EB4", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x10C0FD8", Offset = "0x10C0FD8", VA = "0x10C0FD8", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x10C1048", Offset = "0x10C1048", VA = "0x10C1048", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x10C10C8", Offset = "0x10C10C8", VA = "0x10C10C8", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x10C10CC", Offset = "0x10C10CC", VA = "0x10C10CC", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x10C1170", Offset = "0x10C1170", VA = "0x10C1170", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x10C1240", Offset = "0x10C1240", VA = "0x10C1240", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x10C12FC", Offset = "0x10C12FC", VA = "0x10C12FC", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x10C0D68", Offset = "0x10C0D68", VA = "0x10C0D68", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x10C13CC", Offset = "0x10C13CC", VA = "0x10C13CC")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x10C0D80", Offset = "0x10C0D80", VA = "0x10C0D80")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x10C13D4", Offset = "0x10C13D4", VA = "0x10C13D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x10C1514", Offset = "0x10C1514", VA = "0x10C1514")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x10C16B4", Offset = "0x10C16B4", VA = "0x10C16B4")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x10C15D0", Offset = "0x10C15D0", VA = "0x10C15D0")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x10C1898", Offset = "0x10C1898", VA = "0x10C1898")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x10C18A8", Offset = "0x10C18A8", VA = "0x10C18A8")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x10C178C", Offset = "0x10C178C", VA = "0x10C178C")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x10C1B24", Offset = "0x10C1B24", VA = "0x10C1B24")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x10C1B98", Offset = "0x10C1B98", VA = "0x10C1B98")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x10C1CC8", Offset = "0x10C1CC8", VA = "0x10C1CC8")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x10C1DE0", Offset = "0x10C1DE0", VA = "0x10C1DE0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x10C18B4", Offset = "0x10C18B4", VA = "0x10C18B4")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x10C1DE8", Offset = "0x10C1DE8", VA = "0x10C1DE8")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public enum PositionTag
	{
		[Token(Token = "0x40020D5")]
		Body,
		[Token(Token = "0x40020D6")]
		Head,
		[Token(Token = "0x40020D7")]
		LeftArm,
		[Token(Token = "0x40020D8")]
		RightArm,
		[Token(Token = "0x40020D9")]
		Default
	}
	[Token(Token = "0x2000622")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x2000623")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x17000506")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B3")]
				[Address(RVA = "0x10C2808", Offset = "0x10C2808", VA = "0x10C2808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000507")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B5")]
				[Address(RVA = "0x10C2850", Offset = "0x10C2850", VA = "0x10C2850", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x10C26C8", Offset = "0x10C26C8", VA = "0x10C26C8")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x10C2720", Offset = "0x10C2720", VA = "0x10C2720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x10C2724", Offset = "0x10C2724", VA = "0x10C2724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x10C2810", Offset = "0x10C2810", VA = "0x10C2810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000624")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x17000508")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B9")]
				[Address(RVA = "0x10C2A44", Offset = "0x10C2A44", VA = "0x10C2A44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000509")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026BB")]
				[Address(RVA = "0x10C2A8C", Offset = "0x10C2A8C", VA = "0x10C2A8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x10C26F0", Offset = "0x10C26F0", VA = "0x10C26F0")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x10C2858", Offset = "0x10C2858", VA = "0x10C2858", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x10C285C", Offset = "0x10C285C", VA = "0x10C285C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x10C2A4C", Offset = "0x10C2A4C", VA = "0x10C2A4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x10C1DF8", Offset = "0x10C1DF8", VA = "0x10C1DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x10C2314", Offset = "0x10C2314", VA = "0x10C2314")]
		public void Play()
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x10C20B4", Offset = "0x10C20B4", VA = "0x10C20B4")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x10C238C", Offset = "0x10C238C", VA = "0x10C238C")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x10C2558", Offset = "0x10C2558", VA = "0x10C2558")]
		public void Stop()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x10C2638", Offset = "0x10C2638", VA = "0x10C2638")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x10C24D4", Offset = "0x10C24D4", VA = "0x10C24D4")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__13))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x10C21F0", Offset = "0x10C21F0", VA = "0x10C21F0")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x10C2318", Offset = "0x10C2318", VA = "0x10C2318")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__15))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x10C2718", Offset = "0x10C2718", VA = "0x10C2718")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x10C2A94", Offset = "0x10C2A94", VA = "0x10C2A94")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public interface IHaptic
	{
		[Token(Token = "0x60026BD")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60026BE")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60026BF")]
		bool IsPlaying(string key);

		[Token(Token = "0x60026C0")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60026C1")]
		bool IsPlaying();

		[Token(Token = "0x60026C2")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60026C3")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60026C4")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60026C5")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60026C6")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60026C7")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60026C8")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60026C9")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60026CA")]
		void TurnOff(string key);

		[Token(Token = "0x60026CB")]
		void TurnOff();

		[Token(Token = "0x60026CC")]
		void Dispose();

		[Token(Token = "0x60026CD")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x2000627")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x10C2AA8", Offset = "0x10C2AA8", VA = "0x10C2AA8", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x10C2F8C", Offset = "0x10C2F8C", VA = "0x10C2F8C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x10C2C94", Offset = "0x10C2C94", VA = "0x10C2C94")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x10C2E0C", Offset = "0x10C2E0C", VA = "0x10C2E0C")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x10C3028", Offset = "0x10C3028", VA = "0x10C3028")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000628")]
	public class Point
	{
		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x10C3158", Offset = "0x10C3158", VA = "0x10C3158")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000629")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x40020F3")]
		DotMode = 1,
		[Token(Token = "0x40020F4")]
		PathMode
	}
	[Token(Token = "0x200062A")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Range(0f, 360f)]
		protected float TactFileAngleX;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(-0.5f, 0.5f)]
		protected float TactFileOffsetY;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x10C3290", Offset = "0x10C3290", VA = "0x10C3290", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x10C32E8", Offset = "0x10C32E8", VA = "0x10C32E8", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x10C32FC", Offset = "0x10C32FC", VA = "0x10C32FC", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x10C3310", Offset = "0x10C3310", VA = "0x10C3310", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x10C3320", Offset = "0x10C3320", VA = "0x10C3320", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x10C3330", Offset = "0x10C3330", VA = "0x10C3330", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x10C357C", Offset = "0x10C357C", VA = "0x10C357C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x10C358C", Offset = "0x10C358C", VA = "0x10C358C")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x10C3658", Offset = "0x10C3658", VA = "0x10C3658")]
		private void Start()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x10C39C8", Offset = "0x10C39C8", VA = "0x10C39C8")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x10C3A80", Offset = "0x10C3A80", VA = "0x10C3A80")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x10C3C60", Offset = "0x10C3C60", VA = "0x10C3C60")]
		public VisualFeedback()
		{
		}
	}
}
namespace anzu
{
	[Token(Token = "0x200062C")]
	[RequireComponent(typeof(RawImage))]
	public class RawImageAnimatedTexture : RawImageAnimatedTextureBase
	{
		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private RawImage ri;

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x10C3C78", Offset = "0x10C3C78", VA = "0x10C3C78")]
		public new void Start()
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x10C4520", Offset = "0x10C4520", VA = "0x10C4520")]
		private bool RawImageComponentPresentAndEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x10C45A8", Offset = "0x10C45A8", VA = "0x10C45A8")]
		private void SetRawImageEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x10C45C8", Offset = "0x10C45C8", VA = "0x10C45C8")]
		private bool GetRawImageEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x10C45E4", Offset = "0x10C45E4", VA = "0x10C45E4")]
		private void SetRawImageMaterialShouldSwitchRB(int shouldSwitchRB)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x10C4654", Offset = "0x10C4654", VA = "0x10C4654")]
		private void SetRawImageMaterialVisiblieNormWidth(float visibleNormWidth)
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x10C46CC", Offset = "0x10C46CC", VA = "0x10C46CC")]
		private Rect GetRawImageUVRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x10C46EC", Offset = "0x10C46EC", VA = "0x10C46EC")]
		private void SetRawImageUVRect(Rect r)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x10C4708", Offset = "0x10C4708", VA = "0x10C4708")]
		private void SetRawImageTexture(Texture t)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x10C4724", Offset = "0x10C4724", VA = "0x10C4724")]
		private bool RawImagePresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x10C4784", Offset = "0x10C4784", VA = "0x10C4784")]
		private string GetRawImageMaterialAnzuShaderType(string s)
		{
			return null;
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x10C47C0", Offset = "0x10C47C0", VA = "0x10C47C0")]
		private Material GetRawImageMaterial()
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x10C47E4", Offset = "0x10C47E4", VA = "0x10C47E4")]
		private float GetRawImageColorA()
		{
			return default(float);
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x10C4810", Offset = "0x10C4810", VA = "0x10C4810")]
		private void SetRawImageMaterial(Material m)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x10C4834", Offset = "0x10C4834", VA = "0x10C4834")]
		public RawImageAnimatedTexture()
		{
		}
	}
}
namespace Anzu.Examples
{
	[Token(Token = "0x200062D")]
	[ExecuteInEditMode]
	public class ButtonKey : MonoBehaviour
	{
		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buttonText;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputType inputType;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("References")]
		[SerializeField]
		private Sprite[] iconOptions;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text buttonTextObj;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image buttonIconObj;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button button;

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x10C483C", Offset = "0x10C483C", VA = "0x10C483C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x10C4894", Offset = "0x10C4894", VA = "0x10C4894")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x10C49A4", Offset = "0x10C49A4", VA = "0x10C49A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x10C4A68", Offset = "0x10C4A68", VA = "0x10C4A68")]
		private void GetInputPC()
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x10C49D0", Offset = "0x10C49D0", VA = "0x10C49D0")]
		private void GetInputConsole()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x10C4B04", Offset = "0x10C4B04", VA = "0x10C4B04")]
		public ButtonKey()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public enum InputType
	{
		[Token(Token = "0x4002106")]
		A,
		[Token(Token = "0x4002107")]
		B,
		[Token(Token = "0x4002108")]
		X,
		[Token(Token = "0x4002109")]
		Y
	}
	[Token(Token = "0x200062F")]
	public class MiscRotate : MonoBehaviour
	{
		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateX;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotateY;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotateZ;

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x10C4B0C", Offset = "0x10C4B0C", VA = "0x10C4B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x10C4B54", Offset = "0x10C4B54", VA = "0x10C4B54")]
		public MiscRotate()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class AnimatedTextureEvents : MonoBehaviour
	{
		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider playbackSlider;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider impressionSlider;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedTexture animatedTexture;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Animated Texture Data")]
		public float playbackFullness;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double currentAngleScore;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double currentVisibilityScore;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float impressionFullness;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float totalImpressions;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float totalEmpties;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public double currentViewabilityScore;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, bool> interferingColliders;

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x10C4B6C", Offset = "0x10C4B6C", VA = "0x10C4B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x10C4E24", Offset = "0x10C4E24", VA = "0x10C4E24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x10C50DC", Offset = "0x10C50DC", VA = "0x10C50DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x10C51A0", Offset = "0x10C51A0", VA = "0x10C51A0")]
		private void OnPlaybackEmpty()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x10C5208", Offset = "0x10C5208", VA = "0x10C5208")]
		private void OnPlaybackStarted()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x10C5270", Offset = "0x10C5270", VA = "0x10C5270")]
		private void OnPlaybackCompleted()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x10C52D8", Offset = "0x10C52D8", VA = "0x10C52D8")]
		private void OnPlaybackInitiated()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x10C5340", Offset = "0x10C5340", VA = "0x10C5340")]
		public AnimatedTextureEvents()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class DynamicResize : MonoBehaviour
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform screenObject;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedTexture animatedTexture;

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x10C5348", Offset = "0x10C5348", VA = "0x10C5348")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x10C5420", Offset = "0x10C5420", VA = "0x10C5420")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x10C54F8", Offset = "0x10C54F8", VA = "0x10C54F8")]
		private void OnPlaybackstarted()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x10C554C", Offset = "0x10C554C", VA = "0x10C554C")]
		public DynamicResize()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class Reward : MonoBehaviour
	{
		[Token(Token = "0x2000633")]
		[CompilerGenerated]
		private sealed class <DelayedTurnOffReward>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Reward <>4__this;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002714")]
				[Address(RVA = "0x10C6044", Offset = "0x10C6044", VA = "0x10C6044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002716")]
				[Address(RVA = "0x10C608C", Offset = "0x10C608C", VA = "0x10C608C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x10C5E0C", Offset = "0x10C5E0C", VA = "0x10C5E0C")]
			[DebuggerHidden]
			public <DelayedTurnOffReward>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x10C5F84", Offset = "0x10C5F84", VA = "0x10C5F84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0x10C5F88", Offset = "0x10C5F88", VA = "0x10C5F88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0x10C604C", Offset = "0x10C604C", VA = "0x10C604C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button startButton;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button skipButton;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedTexture animatedTexture;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image playbackIndicator;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text coinText;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject coinObject;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int coinCount;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool hasImpression;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool playbackIsPlaying;

		[Token(Token = "0x4002123")]
		private const float coinShowOffTime = 1f;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x10C5554", Offset = "0x10C5554", VA = "0x10C5554")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x10C58A0", Offset = "0x10C58A0", VA = "0x10C58A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x10C5BEC", Offset = "0x10C5BEC", VA = "0x10C5BEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x10C5BF0", Offset = "0x10C5BF0", VA = "0x10C5BF0")]
		private void RenderPlaybackIndicator()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x10C5CE0", Offset = "0x10C5CE0", VA = "0x10C5CE0")]
		private void RewardUser()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x10C5D98", Offset = "0x10C5D98", VA = "0x10C5D98")]
		[IteratorStateMachine(typeof(<DelayedTurnOffReward>d__15))]
		private IEnumerator DelayedTurnOffReward()
		{
			return null;
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x10C5E34", Offset = "0x10C5E34", VA = "0x10C5E34")]
		private void OnPlaybackStarted()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x10C5E40", Offset = "0x10C5E40", VA = "0x10C5E40")]
		private void OnPlaybackComplete()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x10C5ED4", Offset = "0x10C5ED4", VA = "0x10C5ED4")]
		private void OnPlaybackEmpty()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x10C5F08", Offset = "0x10C5F08", VA = "0x10C5F08")]
		private void OnStartButtonPress()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x10C5E6C", Offset = "0x10C5E6C", VA = "0x10C5E6C")]
		private void OnSkipButtonPress()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x10C5F34", Offset = "0x10C5F34", VA = "0x10C5F34")]
		private void GetChannelImpression(AnimatedTexture at)
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x10C5F74", Offset = "0x10C5F74", VA = "0x10C5F74")]
		public Reward()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class EmptyMedia : MonoBehaviour
	{
		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hasNoMedia;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("References")]
		public Button startButton;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedTexture animatedTexture;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text buttonText;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image buttonIcon;

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x10C6094", Offset = "0x10C6094", VA = "0x10C6094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x10C61D4", Offset = "0x10C61D4", VA = "0x10C61D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x10C6314", Offset = "0x10C6314", VA = "0x10C6314")]
		private void OnPlaybackEmpty()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x10C63A4", Offset = "0x10C63A4", VA = "0x10C63A4")]
		private void OnStartButtonPress()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x10C6424", Offset = "0x10C6424", VA = "0x10C6424")]
		public EmptyMedia()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class PlatformBasedAppID : MonoBehaviour
	{
		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string appKeyPC;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string appKeyMacOS;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string appKeyIphone;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string appKeyAndroid;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string appKeyXboxOne;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string appKeyPS4;

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x10C642C", Offset = "0x10C642C", VA = "0x10C642C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x10C6488", Offset = "0x10C6488", VA = "0x10C6488")]
		public PlatformBasedAppID()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class ShowStats : MonoBehaviour
	{
		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool statsEnabled;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button toggleStatsButton;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimatedTextureStats[] animatedTextureStatsArray;

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x10C6490", Offset = "0x10C6490", VA = "0x10C6490")]
		private void Awake()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x10C65F4", Offset = "0x10C65F4", VA = "0x10C65F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x10C6688", Offset = "0x10C6688", VA = "0x10C6688")]
		private void OnToggleStatsButtonPress()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x10C6584", Offset = "0x10C6584", VA = "0x10C6584")]
		private void SetStatsActiveState()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x10C6698", Offset = "0x10C6698", VA = "0x10C6698")]
		public ShowStats()
		{
		}
	}
}
